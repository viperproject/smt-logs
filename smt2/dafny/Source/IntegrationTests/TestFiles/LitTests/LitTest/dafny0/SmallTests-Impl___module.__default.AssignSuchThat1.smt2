(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@52 (T@U T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@74 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@78 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@133 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ) (! ($generated@@21 ($generated@@20 $generated@@22 $generated@@23) $generated@@23)
 :pattern ( ($generated@@20 $generated@@22 $generated@@23))
)))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> ($generated@@21 $generated@@24 $generated@@26) ($generated@@21 ($generated@@20 $generated@@24 $generated@@25) $generated@@26))
 :pattern ( ($generated@@20 $generated@@24 $generated@@25) ($generated@@21 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@21 ($generated@@20 $generated@@27 $generated@@28) $generated@@29)  (or (= $generated@@29 $generated@@28) ($generated@@21 $generated@@27 $generated@@29)))
 :pattern ( ($generated@@21 ($generated@@20 $generated@@27 $generated@@28) $generated@@29))
)))
(assert (forall (($generated@@31 T@U) ) (!  (not ($generated@@21 $generated@@30 $generated@@31))
 :pattern ( ($generated@@21 $generated@@30 $generated@@31))
)))
(assert (forall (($generated@@33 Int) ) (! (= ($generated@@32 $generated@@33) $generated@@33)
 :pattern ( ($generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@T) ) (! (= ($generated@@34 $generated@@36 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@36 $generated@@35))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@39) (forall (($generated@@40 T@U) ) (!  (=> ($generated@@21 $generated@@38 $generated@@40) ($generated@@21 $generated@@39 $generated@@40))
 :pattern ( ($generated@@21 $generated@@38 $generated@@40))
 :pattern ( ($generated@@21 $generated@@39 $generated@@40))
)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@T) ) (! (= ($generated@@42 $generated@@44 ($generated@@41 $generated@@44 $generated@@43)) $generated@@43)
 :pattern ( ($generated@@41 $generated@@44 $generated@@43))
)))
(assert (= ($generated@@3 $generated@@46) 3))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@49 ($generated@@47 $generated@@50)) (forall (($generated@@51 T@U) ) (!  (=> ($generated@@21 $generated@@49 $generated@@51) ($generated@@48 $generated@@51 $generated@@50))
 :pattern ( ($generated@@21 $generated@@49 $generated@@51))
)))
 :pattern ( ($generated@@45 $generated@@46 $generated@@49 ($generated@@47 $generated@@50)))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@52 ($generated@@42 $generated@@57 $generated@@54) $generated@@55 $generated@@56) ($generated@@53 $generated@@57 $generated@@54 $generated@@55 $generated@@56))
 :pattern ( ($generated@@52 ($generated@@42 $generated@@57 $generated@@54) $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> ($generated@@58 $generated@@59 $generated@@60) (= $generated@@59 $generated@@60))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@48 $generated@@61 $generated) (and (= ($generated@@42 $generated@@5 ($generated@@41 $generated@@5 $generated@@61)) $generated@@61) ($generated@@45 $generated@@5 ($generated@@41 $generated@@5 $generated@@61) $generated)))
 :pattern ( ($generated@@48 $generated@@61 $generated))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@42 $generated@@64 $generated@@62) $generated@@63) ($generated@@45 $generated@@64 $generated@@62 $generated@@63))
 :pattern ( ($generated@@48 ($generated@@42 $generated@@64 $generated@@62) $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@53 $generated@@46 $generated@@65 ($generated@@47 $generated@@66) $generated@@67) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@21 $generated@@65 $generated@@68) ($generated@@52 $generated@@68 $generated@@66 $generated@@67))
 :pattern ( ($generated@@21 $generated@@65 $generated@@68))
)))
 :pattern ( ($generated@@53 $generated@@46 $generated@@65 ($generated@@47 $generated@@66) $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 ($generated@@47 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@47 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@19 ($generated@@47 $generated@@71)) $generated@@1)
 :pattern ( ($generated@@47 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@41 $generated@@73 ($generated@@42 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@42 $generated@@73 $generated@@72))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@74 $generated@@85 $generated@@86 $generated@@87 ($generated@@81 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@90 $generated@@91 $generated@@88) $generated@@90 $generated@@91) $generated@@88)
 :weight 0
)) (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or (= $generated@@97 $generated@@99) (= ($generated@@74 $generated@@92 $generated@@93 $generated@@94 ($generated@@81 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@99 $generated@@100) ($generated@@74 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@99 $generated@@100)))
 :weight 0
)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@107 $generated@@109) (= ($generated@@74 $generated@@101 $generated@@102 $generated@@103 ($generated@@81 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@108 $generated@@109) ($generated@@74 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@108 $generated@@109)))
 :weight 0
)))) (= ($generated@@3 $generated@@75) 4)) (= ($generated@@3 $generated@@76) 5)) (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@78 $generated@@110 $generated@@111 ($generated@@82 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@112) $generated@@114) $generated@@112)
 :weight 0
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@78 $generated@@115 $generated@@116 ($generated@@82 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@78 $generated@@115 $generated@@116 $generated@@118 $generated@@120)))
 :weight 0
))) (= ($generated@@3 $generated@@79) 6)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@3 ($generated@@80 $generated@@121 $generated@@122)) 7))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@80 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@80 $generated@@125 $generated@@126))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 Bool) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@8 ($generated@@74 $generated@@75 $generated@@76 $generated@@4 ($generated@@77 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))  (=> (and (or (not (= $generated@@131 $generated@@127)) (not true)) ($generated@@8 ($generated@@41 $generated@@4 ($generated@@78 $generated@@76 $generated@@79 ($generated@@78 $generated@@75 ($generated@@80 $generated@@76 $generated@@79) $generated@@128 $generated@@131) $generated@@129)))) $generated@@130))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76 $generated@@4 ($generated@@77 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@134 Int) ($generated@@135 Int) ) (! (= ($generated@@133 $generated@@134 $generated@@135) (* $generated@@134 $generated@@135))
 :pattern ( ($generated@@133 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> ($generated@@48 $generated@@136 ($generated@@47 $generated@@137)) (and (= ($generated@@42 $generated@@46 ($generated@@41 $generated@@46 $generated@@136)) $generated@@136) ($generated@@45 $generated@@46 ($generated@@41 $generated@@46 $generated@@136) ($generated@@47 $generated@@137))))
 :pattern ( ($generated@@48 $generated@@136 ($generated@@47 $generated@@137)))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@58 $generated@@138 $generated@@139) (forall (($generated@@140 T@U) ) (! (= ($generated@@21 $generated@@138 $generated@@140) ($generated@@21 $generated@@139 $generated@@140))
 :pattern ( ($generated@@21 $generated@@138 $generated@@140))
 :pattern ( ($generated@@21 $generated@@139 $generated@@140))
)))
 :pattern ( ($generated@@58 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@141 Int) ) (! (= ($generated@@42 $generated@@5 ($generated@@9 ($generated@@32 $generated@@141))) ($generated@@34 $generated@@79 ($generated@@42 $generated@@5 ($generated@@9 $generated@@141))))
 :pattern ( ($generated@@42 $generated@@5 ($generated@@9 ($generated@@32 $generated@@141))))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@42 $generated@@143 ($generated@@34 $generated@@143 $generated@@142)) ($generated@@34 $generated@@79 ($generated@@42 $generated@@143 $generated@@142)))
 :pattern ( ($generated@@42 $generated@@143 ($generated@@34 $generated@@143 $generated@@142)))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! ($generated@@53 $generated@@5 $generated@@145 $generated $generated@@144)
 :pattern ( ($generated@@53 $generated@@5 $generated@@145 $generated $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! ($generated@@45 $generated@@5 $generated@@146 $generated)
 :pattern ( ($generated@@45 $generated@@5 $generated@@146 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@163  (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (and ($generated@@45 $generated@@46 $generated@@147 ($generated@@47 $generated)) ($generated@@37 $generated@@147 $generated@@147)) (or (and ($generated@@45 $generated@@46 ($generated@@34 $generated@@46 $generated@@30) ($generated@@47 $generated)) ($generated@@37 $generated@@30 $generated@@147)) (exists (($generated@@164 T@U) )  (and ($generated@@45 $generated@@46 $generated@@164 ($generated@@47 $generated)) ($generated@@37 $generated@@164 $generated@@147)))))) (=> (or (and ($generated@@45 $generated@@46 $generated@@147 ($generated@@47 $generated)) ($generated@@37 $generated@@147 $generated@@147)) (or (and ($generated@@45 $generated@@46 ($generated@@34 $generated@@46 $generated@@30) ($generated@@47 $generated)) ($generated@@37 $generated@@30 $generated@@147)) (exists (($generated@@165 T@U) )  (and ($generated@@45 $generated@@46 $generated@@165 ($generated@@47 $generated)) ($generated@@37 $generated@@165 $generated@@147))))) (=> (and (and ($generated@@45 $generated@@46 $generated@@148 ($generated@@47 $generated)) ($generated@@53 $generated@@46 $generated@@148 ($generated@@47 $generated) $generated@@149)) ($generated@@37 $generated@@148 $generated@@147)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not ($generated@@21 $generated@@148 ($generated@@42 $generated@@5 ($generated@@9 ($generated@@32 3)))))) (=> (not ($generated@@21 $generated@@148 ($generated@@42 $generated@@5 ($generated@@9 ($generated@@32 3))))) (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@58 $generated@@148 $generated@@30)))))))))
(let (($generated@@166  (=> (and (not (and ($generated@@45 $generated@@46 $generated@@150 ($generated@@47 $generated)) ($generated@@53 $generated@@46 $generated@@150 ($generated@@47 $generated) $generated@@149))) (= (ControlFlow 0 8) 4)) $generated@@163)))
(let (($generated@@167  (=> (and (and ($generated@@45 $generated@@46 $generated@@150 ($generated@@47 $generated)) ($generated@@53 $generated@@46 $generated@@150 ($generated@@47 $generated) $generated@@149)) (= (ControlFlow 0 7) 4)) $generated@@163)))
(let (($generated@@168  (and (=> (= (ControlFlow 0 9) (- 0 11)) (or (and ($generated@@45 $generated@@5 ($generated@@9 ($generated@@32 0)) $generated) (= ($generated@@32 0) ($generated@@32 ($generated@@133 ($generated@@32 2) ($generated@@32 0))))) (exists (($generated@@169 Int) ) (= $generated@@169 ($generated@@133 ($generated@@32 2) $generated@@169))))) (=> (or (and ($generated@@45 $generated@@5 ($generated@@9 ($generated@@32 0)) $generated) (= ($generated@@32 0) ($generated@@32 ($generated@@133 ($generated@@32 2) ($generated@@32 0))))) (exists (($generated@@170 Int) ) (= $generated@@170 ($generated@@133 ($generated@@32 2) $generated@@170)))) (=> (= $generated@@151 ($generated@@133 ($generated@@32 2) $generated@@151)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (= $generated@@151 ($generated@@32 0))) (=> (= $generated@@151 ($generated@@32 0)) (=> (= $generated@@147 ($generated@@34 $generated@@46 ($generated@@20 ($generated@@20 ($generated@@20 $generated@@30 ($generated@@42 $generated@@5 ($generated@@9 ($generated@@32 2)))) ($generated@@42 $generated@@5 ($generated@@9 ($generated@@32 4)))) ($generated@@42 $generated@@5 ($generated@@9 ($generated@@32 7)))))) (and (=> (= (ControlFlow 0 9) 7) $generated@@167) (=> (= (ControlFlow 0 9) 8) $generated@@166))))))))))
(let (($generated@@171 true))
(let (($generated@@172  (=> (and (<= ($generated@@32 0) $generated@@152) (< $generated@@152 (- $generated@@153 $generated@@154))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (< $generated@@154 $generated@@153)) (=> (< $generated@@154 $generated@@153) (and (=> (= (ControlFlow 0 12) 9) $generated@@168) (=> (= (ControlFlow 0 12) 2) $generated@@171)))))))
(let (($generated@@173  (=> (and (< $generated@@155 ($generated@@32 0)) (= (ControlFlow 0 15) 12)) $generated@@172)))
(let (($generated@@174  (=> (and (<= ($generated@@32 0) $generated@@155) (= (ControlFlow 0 14) 12)) $generated@@172)))
(let (($generated@@175  (and (=> (= (ControlFlow 0 16) 14) $generated@@174) (=> (= (ControlFlow 0 16) 15) $generated@@173))))
(let (($generated@@176 true))
(let (($generated@@177  (=> (= $generated@@156 ($generated@@77 $generated@@157 $generated@@149 $generated@@2 false)) (and (=> (= (ControlFlow 0 17) 16) $generated@@175) (=> (= (ControlFlow 0 17) 1) $generated@@176)))))
(let (($generated@@178  (=> (and ($generated@@158 $generated@@149) ($generated@@159 $generated@@149)) (=> (and (and ($generated@@45 $generated@@46 $generated@@160 ($generated@@47 $generated)) ($generated@@53 $generated@@46 $generated@@160 ($generated@@47 $generated) $generated@@149)) true) (=> (and (and (and ($generated@@45 $generated@@46 $generated@@161 ($generated@@47 $generated)) ($generated@@53 $generated@@46 $generated@@161 ($generated@@47 $generated) $generated@@149)) true) (and (= 0 $generated@@162) (= (ControlFlow 0 18) 17))) $generated@@177)))))
$generated@@178)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
