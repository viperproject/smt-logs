(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@74 (Int) Int)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U) Bool)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated@@0) 0))
(assert (= ($generated@@26 $generated@@0) $generated@@1))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! ($generated@@27 $generated@@11 $generated@@29 $generated@@28 $generated@@30)
 :pattern ( ($generated@@27 $generated@@11 $generated@@29 $generated@@28 $generated@@30))
)))
(assert (= ($generated@@9 $generated@@32) 3))
(assert (forall (($generated@@36 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@36 $generated@@33)  (or (= $generated@@36 $generated@@34) (= ($generated@@35 $generated@@36) $generated@@33)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 $generated@@33))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@27 $generated@@32 $generated@@38 $generated@@37 $generated@@39) ($generated@@27 $generated@@32 $generated@@38 $generated@@33 $generated@@39))
 :pattern ( ($generated@@27 $generated@@32 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@27 $generated@@32 $generated@@38 $generated@@33 $generated@@39))
)))
(assert (= ($generated@@25 $generated@@40) 0))
(assert (= ($generated@@41 $generated@@5 $generated@@8) $generated@@40))
(assert  (not ($generated@@42 $generated@@40)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@9 $generated@@45) 4)) (= ($generated@@9 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@9 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@27 $generated@@32 $generated@@68 $generated@@33 $generated@@69)  (or (= $generated@@68 $generated@@34) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@32 ($generated@@47 $generated@@45 $generated@@46) $generated@@69 $generated@@68) $generated@@0)))))
 :pattern ( ($generated@@27 $generated@@32 $generated@@68 $generated@@33 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> ($generated@@70 $generated@@71 $generated@@72) (forall (($generated@@73 T@U) ) (!  (=> ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@32 ($generated@@47 $generated@@45 $generated@@46) $generated@@71 $generated@@73) $generated@@0))) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@32 ($generated@@47 $generated@@45 $generated@@46) $generated@@72 $generated@@73) $generated@@0))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@32 ($generated@@47 $generated@@45 $generated@@46) $generated@@72 $generated@@73) $generated@@0))
)))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@75 Int) ) (! (= ($generated@@74 $generated@@75) $generated@@75)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 $generated@@77) $generated@@77)
 :pattern ( ($generated@@76 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 ($generated@@43 $generated@@81 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@43 $generated@@81 $generated@@80))
)))
(assert (= ($generated@@9 $generated@@82) 7))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@31 $generated@@82 $generated@@86 ($generated@@83 $generated@@87)) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@84 $generated@@86 $generated@@88) ($generated@@85 $generated@@88 $generated@@87))
 :pattern ( ($generated@@84 $generated@@86 $generated@@88))
)))
 :pattern ( ($generated@@31 $generated@@82 $generated@@86 ($generated@@83 $generated@@87)))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@31 $generated@@11 $generated@@89 $generated@@28) (<= ($generated@@74 0) ($generated@@16 $generated@@89)))
 :pattern ( ($generated@@31 $generated@@11 $generated@@89 $generated@@28))
)))
(assert ($generated@@42 $generated@@0))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@90 ($generated@@79 $generated@@94 $generated@@91) $generated@@92 $generated@@93) ($generated@@27 $generated@@94 $generated@@91 $generated@@92 $generated@@93))
 :pattern ( ($generated@@90 ($generated@@79 $generated@@94 $generated@@91) $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@70 $generated@@95 $generated@@96) (=> ($generated@@90 $generated@@97 $generated@@98 $generated@@95) ($generated@@90 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@70 $generated@@95 $generated@@96) ($generated@@90 $generated@@97 $generated@@98 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (!  (=> ($generated@@70 $generated@@99 $generated@@100) (=> ($generated@@27 $generated@@103 $generated@@101 $generated@@102 $generated@@99) ($generated@@27 $generated@@103 $generated@@101 $generated@@102 $generated@@100)))
 :pattern ( ($generated@@70 $generated@@99 $generated@@100) ($generated@@27 $generated@@103 $generated@@101 $generated@@102 $generated@@99))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and ($generated@@104 $generated@@105) (and (or (not (= $generated@@106 $generated@@34)) (not true)) (= ($generated@@35 $generated@@106) $generated@@33))) ($generated@@31 $generated@@11 ($generated@@43 $generated@@11 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@32 ($generated@@47 $generated@@45 $generated@@46) $generated@@105 $generated@@106) $generated@@40)) $generated@@28))
 :pattern ( ($generated@@43 $generated@@11 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@32 ($generated@@47 $generated@@45 $generated@@46) $generated@@105 $generated@@106) $generated@@40)))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@85 $generated@@107 $generated@@28) (and (= ($generated@@79 $generated@@11 ($generated@@43 $generated@@11 $generated@@107)) $generated@@107) ($generated@@31 $generated@@11 ($generated@@43 $generated@@11 $generated@@107) $generated@@28)))
 :pattern ( ($generated@@85 $generated@@107 $generated@@28))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@85 $generated@@108 $generated@@37) (and (= ($generated@@79 $generated@@32 ($generated@@43 $generated@@32 $generated@@108)) $generated@@108) ($generated@@31 $generated@@32 ($generated@@43 $generated@@32 $generated@@108) $generated@@37)))
 :pattern ( ($generated@@85 $generated@@108 $generated@@37))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@85 $generated@@109 $generated@@33) (and (= ($generated@@79 $generated@@32 ($generated@@43 $generated@@32 $generated@@109)) $generated@@109) ($generated@@31 $generated@@32 ($generated@@43 $generated@@32 $generated@@109) $generated@@33)))
 :pattern ( ($generated@@85 $generated@@109 $generated@@33))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@110 $generated@@37)  (and ($generated@@31 $generated@@32 $generated@@110 $generated@@33) (or (not (= $generated@@110 $generated@@34)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@110 $generated@@37))
 :pattern ( ($generated@@31 $generated@@32 $generated@@110 $generated@@33))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (and (and ($generated@@104 $generated@@111) (and (or (not (= $generated@@112 $generated@@34)) (not true)) (= ($generated@@35 $generated@@112) $generated@@33))) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@32 ($generated@@47 $generated@@45 $generated@@46) $generated@@111 $generated@@112) $generated@@0)))) ($generated@@27 $generated@@11 ($generated@@43 $generated@@11 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@32 ($generated@@47 $generated@@45 $generated@@46) $generated@@111 $generated@@112) $generated@@40)) $generated@@28 $generated@@111))
 :pattern ( ($generated@@43 $generated@@11 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@32 ($generated@@47 $generated@@45 $generated@@46) $generated@@111 $generated@@112) $generated@@40)))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (or (not (= $generated@@113 $generated@@115)) (not true)) (=> (and ($generated@@70 $generated@@113 $generated@@114) ($generated@@70 $generated@@114 $generated@@115)) ($generated@@70 $generated@@113 $generated@@115)))
 :pattern ( ($generated@@70 $generated@@113 $generated@@114) ($generated@@70 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (and (= ($generated@@116 ($generated@@41 $generated@@117 $generated@@118)) $generated@@117) (= ($generated@@26 ($generated@@41 $generated@@117 $generated@@118)) $generated@@118))
 :pattern ( ($generated@@41 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@85 ($generated@@79 $generated@@121 $generated@@119) $generated@@120) ($generated@@31 $generated@@121 $generated@@119 $generated@@120))
 :pattern ( ($generated@@85 ($generated@@79 $generated@@121 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@27 $generated@@82 $generated@@122 ($generated@@83 $generated@@123) $generated@@124) (forall (($generated@@125 T@U) ) (!  (=> ($generated@@84 $generated@@122 $generated@@125) ($generated@@90 $generated@@125 $generated@@123 $generated@@124))
 :pattern ( ($generated@@84 $generated@@122 $generated@@125))
)))
 :pattern ( ($generated@@27 $generated@@82 $generated@@122 ($generated@@83 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@83 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@83 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@83 $generated@@129)) $generated)
 :pattern ( ($generated@@83 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@43 $generated@@131 ($generated@@79 $generated@@131 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@79 $generated@@131 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@85 $generated@@132 ($generated@@83 $generated@@133)) (and (= ($generated@@79 $generated@@82 ($generated@@43 $generated@@82 $generated@@132)) $generated@@132) ($generated@@31 $generated@@82 ($generated@@43 $generated@@82 $generated@@132) ($generated@@83 $generated@@133))))
 :pattern ( ($generated@@85 $generated@@132 ($generated@@83 $generated@@133)))
)))
(assert (= ($generated@@128 $generated@@28) $generated@@2))
(assert (= ($generated@@134 $generated@@28) $generated@@6))
(assert (= ($generated@@128 $generated@@37) $generated@@3))
(assert (= ($generated@@134 $generated@@37) $generated@@7))
(assert (= ($generated@@128 $generated@@33) $generated@@4))
(assert (= ($generated@@134 $generated@@33) $generated@@7))
(assert (forall (($generated@@135 Int) ) (! (= ($generated@@79 $generated@@11 ($generated@@15 ($generated@@74 $generated@@135))) ($generated@@76 $generated@@46 ($generated@@79 $generated@@11 ($generated@@15 $generated@@135))))
 :pattern ( ($generated@@79 $generated@@11 ($generated@@15 ($generated@@74 $generated@@135))))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@79 $generated@@137 ($generated@@76 $generated@@137 $generated@@136)) ($generated@@76 $generated@@46 ($generated@@79 $generated@@137 $generated@@136)))
 :pattern ( ($generated@@79 $generated@@137 ($generated@@76 $generated@@137 $generated@@136)))
)))
(assert  (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@138 $generated@@141 $generated@@142 $generated@@143 ($generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@146 $generated@@147) $generated@@144)
 :weight 0
)) (and (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@138 $generated@@148 $generated@@149 $generated@@150 ($generated@@140 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@138 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@138 $generated@@157 $generated@@158 $generated@@159 ($generated@@140 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@138 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@14 ($generated@@138 $generated@@32 $generated@@45 $generated@@10 ($generated@@139 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))  (=> (and (or (not (= $generated@@170 $generated@@166)) (not true)) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@32 ($generated@@47 $generated@@45 $generated@@46) $generated@@167 $generated@@170) $generated@@168)))) ($generated@@84 $generated@@169 ($generated@@79 $generated@@32 $generated@@170))))
 :pattern ( ($generated@@138 $generated@@32 $generated@@45 $generated@@10 ($generated@@139 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@180 true))
(let (($generated@@181  (=> (and (and ($generated@@31 $generated@@32 $generated@@172 $generated@@37) ($generated@@27 $generated@@32 $generated@@172 $generated@@37 $generated@@173)) ($generated@@84 $generated@@174 ($generated@@79 $generated@@32 $generated@@172))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@172 $generated@@34)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@14 ($generated@@138 $generated@@32 $generated@@45 $generated@@10 $generated@@175 $generated@@172 $generated@@40))) (=> ($generated@@14 ($generated@@138 $generated@@32 $generated@@45 $generated@@10 $generated@@175 $generated@@172 $generated@@40)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@31 $generated@@11 ($generated@@15 $generated@@176) $generated@@28)) (=> ($generated@@31 $generated@@11 ($generated@@15 $generated@@176) $generated@@28) (=> (and (and (and ($generated@@31 $generated@@32 $generated@@177 $generated@@37) ($generated@@27 $generated@@32 $generated@@177 $generated@@37 $generated@@173)) ($generated@@84 $generated@@174 ($generated@@79 $generated@@32 $generated@@177))) (and (or (not (= $generated@@172 $generated@@177)) (not true)) (= (ControlFlow 0 2) (- 0 1)))) (or (or (or (not (= $generated@@172 $generated@@177)) (not true)) (or (not (= $generated@@40 $generated@@40)) (not true))) (= $generated@@176 $generated@@176)))))))))))
(let (($generated@@182  (=> (= $generated@@175 ($generated@@139 $generated@@34 $generated@@173 $generated@@0 $generated@@174)) (and (=> (= (ControlFlow 0 7) 2) $generated@@181) (=> (= (ControlFlow 0 7) 6) $generated@@180)))))
(let (($generated@@183  (=> (and ($generated@@104 $generated@@173) ($generated@@178 $generated@@173)) (=> (and (and ($generated@@31 $generated@@82 $generated@@174 ($generated@@83 $generated@@37)) ($generated@@27 $generated@@82 $generated@@174 ($generated@@83 $generated@@37) $generated@@173)) (and (= 1 $generated@@179) (= (ControlFlow 0 8) 7))) $generated@@182))))
$generated@@183)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
