(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (Int Bool) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@73 (Int) Int)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@89 (Bool) T@U)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@95 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@110 (T@U) Int)
(declare-fun $generated@@118 (T@U) Bool)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and ($generated@@26 $generated@@28) ($generated@@26 $generated@@29)) (= ($generated@@25 $generated@@28 $generated@@29) (= ($generated@@27 $generated@@28) ($generated@@27 $generated@@29))))
 :pattern ( ($generated@@25 $generated@@28 $generated@@29) ($generated@@26 $generated@@28))
 :pattern ( ($generated@@25 $generated@@28 $generated@@29) ($generated@@26 $generated@@29))
)))
(assert (= ($generated@@30 $generated) $generated@@1))
(assert (= ($generated@@30 $generated@@0) $generated@@2))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and ($generated@@31 $generated@@33) ($generated@@31 $generated@@34)) (= ($generated@@25 $generated@@33 $generated@@34) (= ($generated@@32 $generated@@33) ($generated@@32 $generated@@34))))
 :pattern ( ($generated@@25 $generated@@33 $generated@@34) ($generated@@31 $generated@@33))
 :pattern ( ($generated@@25 $generated@@33 $generated@@34) ($generated@@31 $generated@@34))
)))
(assert (= ($generated@@9 $generated@@36) 3))
(assert (forall (($generated@@39 Int) ($generated@@40 Bool) ) (! (= ($generated@@35 $generated@@36 ($generated@@37 $generated@@39 $generated@@40) $generated@@38)  (and ($generated@@35 $generated@@11 ($generated@@15 $generated@@39) $generated@@0) ($generated@@35 $generated@@10 ($generated@@13 $generated@@40) $generated)))
 :pattern ( ($generated@@35 $generated@@36 ($generated@@37 $generated@@39 $generated@@40) $generated@@38))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@25 $generated@@41 $generated@@42) (= $generated@@41 $generated@@42))
 :pattern ( ($generated@@25 $generated@@41 $generated@@42))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@44 $generated@@53 $generated@@54 ($generated@@50 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@57) $generated@@55)
 :weight 0
)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (or (= $generated@@62 $generated@@63) (= ($generated@@44 $generated@@58 $generated@@59 ($generated@@50 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@63) ($generated@@44 $generated@@58 $generated@@59 $generated@@61 $generated@@63)))
 :weight 0
))) (= ($generated@@9 $generated@@45) 4)) (= ($generated@@9 $generated@@46) 5)) (= ($generated@@9 $generated@@47) 6)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (= ($generated@@9 ($generated@@48 $generated@@64 $generated@@65)) 7))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@51 ($generated@@48 $generated@@66 $generated@@67)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@66 $generated@@67))
))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@52 ($generated@@48 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@48 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@43 $generated@@70 $generated@@71) (forall (($generated@@72 T@U) ) (!  (=> ($generated@@14 ($generated@@49 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@47 ($generated@@48 $generated@@45 $generated@@46) $generated@@70 $generated@@72) $generated@@3))) ($generated@@14 ($generated@@49 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@47 ($generated@@48 $generated@@45 $generated@@46) $generated@@71 $generated@@72) $generated@@3))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@47 ($generated@@48 $generated@@45 $generated@@46) $generated@@71 $generated@@72) $generated@@3))
)))
 :pattern ( ($generated@@43 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 Int) ) (! (= ($generated@@73 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@78 $generated@@80) (= ($generated@@79 $generated@@80) $generated@@5))
 :pattern ( ($generated@@78 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@26 $generated@@81) (= ($generated@@79 $generated@@81) $generated@@6))
 :pattern ( ($generated@@26 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@31 $generated@@82) (= ($generated@@79 $generated@@82) $generated@@7))
 :pattern ( ($generated@@31 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 ($generated@@49 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@49 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@78 $generated@@86) (exists (($generated@@87 Int) ($generated@@88 Bool) ) (= $generated@@86 ($generated@@37 $generated@@87 $generated@@88))))
 :pattern ( ($generated@@78 $generated@@86))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@26 $generated@@90) (exists (($generated@@91 Bool) ) (= $generated@@90 ($generated@@89 $generated@@91))))
 :pattern ( ($generated@@26 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@31 $generated@@93) (exists (($generated@@94 Int) ) (= $generated@@93 ($generated@@92 $generated@@94))))
 :pattern ( ($generated@@31 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (!  (=> ($generated@@43 $generated@@96 $generated@@97) (=> ($generated@@95 $generated@@100 $generated@@98 $generated@@99 $generated@@96) ($generated@@95 $generated@@100 $generated@@98 $generated@@99 $generated@@97)))
 :pattern ( ($generated@@43 $generated@@96 $generated@@97) ($generated@@95 $generated@@100 $generated@@98 $generated@@99 $generated@@96))
)))
(assert (forall (($generated@@102 Int) ($generated@@103 Bool) ) (! (= ($generated@@101 ($generated@@37 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@37 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 Bool) ) (! (= ($generated@@27 ($generated@@89 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@89 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (or (not (= $generated@@105 $generated@@107)) (not true)) (=> (and ($generated@@43 $generated@@105 $generated@@106) ($generated@@43 $generated@@106 $generated@@107)) ($generated@@43 $generated@@105 $generated@@107)))
 :pattern ( ($generated@@43 $generated@@105 $generated@@106) ($generated@@43 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 Int) ($generated@@109 Bool) ) (! (= ($generated@@79 ($generated@@37 $generated@@108 $generated@@109)) $generated@@5)
 :pattern ( ($generated@@37 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 Int) ($generated@@112 Bool) ) (! (= ($generated@@110 ($generated@@37 $generated@@111 $generated@@112)) $generated@@111)
 :pattern ( ($generated@@37 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 Bool) ) (! (= ($generated@@79 ($generated@@89 $generated@@113)) $generated@@6)
 :pattern ( ($generated@@89 $generated@@113))
)))
(assert (forall (($generated@@114 Int) ) (! (= ($generated@@79 ($generated@@92 $generated@@114)) $generated@@7)
 :pattern ( ($generated@@92 $generated@@114))
)))
(assert (forall (($generated@@115 Int) ) (! (= ($generated@@32 ($generated@@92 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@92 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@49 $generated@@117 ($generated@@83 $generated@@117 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@83 $generated@@117 $generated@@116))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@118 $generated@@119) (or (or ($generated@@78 $generated@@119) ($generated@@26 $generated@@119)) ($generated@@31 $generated@@119)))
 :pattern ( ($generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (and ($generated@@78 $generated@@120) ($generated@@78 $generated@@121)) (= ($generated@@25 $generated@@120 $generated@@121)  (and (= ($generated@@110 $generated@@120) ($generated@@110 $generated@@121)) (= ($generated@@101 $generated@@120) ($generated@@101 $generated@@121)))))
 :pattern ( ($generated@@25 $generated@@120 $generated@@121) ($generated@@78 $generated@@120))
 :pattern ( ($generated@@25 $generated@@120 $generated@@121) ($generated@@78 $generated@@121))
)))
(assert (forall (($generated@@122 Bool) ) (! (= ($generated@@35 $generated@@36 ($generated@@89 $generated@@122) $generated@@38) ($generated@@35 $generated@@10 ($generated@@13 $generated@@122) $generated))
 :pattern ( ($generated@@35 $generated@@36 ($generated@@89 $generated@@122) $generated@@38))
)))
(assert (forall (($generated@@123 Int) ) (! (= ($generated@@35 $generated@@36 ($generated@@92 $generated@@123) $generated@@38) ($generated@@35 $generated@@11 ($generated@@15 $generated@@123) $generated@@0))
 :pattern ( ($generated@@35 $generated@@36 ($generated@@92 $generated@@123) $generated@@38))
)))
(assert  (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@124 $generated@@127 $generated@@128 $generated@@129 ($generated@@126 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@132 $generated@@133) $generated@@130)
 :weight 0
)) (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@124 $generated@@134 $generated@@135 $generated@@136 ($generated@@126 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@124 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@124 $generated@@143 $generated@@144 $generated@@145 ($generated@@126 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@124 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 Bool) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@14 ($generated@@124 $generated@@47 $generated@@45 $generated@@10 ($generated@@125 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@156 $generated@@157))  (=> (and (or (not (= $generated@@156 $generated@@152)) (not true)) ($generated@@14 ($generated@@49 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@47 ($generated@@48 $generated@@45 $generated@@46) $generated@@153 $generated@@156) $generated@@154)))) $generated@@155))
 :pattern ( ($generated@@124 $generated@@47 $generated@@45 $generated@@10 ($generated@@125 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and ($generated@@158 $generated@@160) (and ($generated@@78 $generated@@159) ($generated@@95 $generated@@36 $generated@@159 $generated@@38 $generated@@160))) ($generated@@95 $generated@@11 ($generated@@15 ($generated@@110 $generated@@159)) $generated@@0 $generated@@160))
 :pattern ( ($generated@@95 $generated@@11 ($generated@@15 ($generated@@110 $generated@@159)) $generated@@0 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and ($generated@@158 $generated@@162) (and ($generated@@78 $generated@@161) ($generated@@95 $generated@@36 $generated@@161 $generated@@38 $generated@@162))) ($generated@@95 $generated@@10 ($generated@@13 ($generated@@101 $generated@@161)) $generated $generated@@162))
 :pattern ( ($generated@@95 $generated@@10 ($generated@@13 ($generated@@101 $generated@@161)) $generated $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and ($generated@@158 $generated@@164) (and ($generated@@26 $generated@@163) ($generated@@95 $generated@@36 $generated@@163 $generated@@38 $generated@@164))) ($generated@@95 $generated@@10 ($generated@@13 ($generated@@27 $generated@@163)) $generated $generated@@164))
 :pattern ( ($generated@@95 $generated@@10 ($generated@@13 ($generated@@27 $generated@@163)) $generated $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and ($generated@@158 $generated@@166) (and ($generated@@31 $generated@@165) ($generated@@95 $generated@@36 $generated@@165 $generated@@38 $generated@@166))) ($generated@@95 $generated@@11 ($generated@@15 ($generated@@32 $generated@@165)) $generated@@0 $generated@@166))
 :pattern ( ($generated@@95 $generated@@11 ($generated@@15 ($generated@@32 $generated@@165)) $generated@@0 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> ($generated@@35 $generated@@36 $generated@@167 $generated@@38) (or (or ($generated@@78 $generated@@167) ($generated@@26 $generated@@167)) ($generated@@31 $generated@@167)))
 :pattern ( ($generated@@31 $generated@@167) ($generated@@35 $generated@@36 $generated@@167 $generated@@38))
 :pattern ( ($generated@@26 $generated@@167) ($generated@@35 $generated@@36 $generated@@167 $generated@@38))
 :pattern ( ($generated@@78 $generated@@167) ($generated@@35 $generated@@36 $generated@@167 $generated@@38))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and ($generated@@158 $generated@@169) ($generated@@35 $generated@@36 $generated@@168 $generated@@38)) ($generated@@95 $generated@@36 $generated@@168 $generated@@38 $generated@@169))
 :pattern ( ($generated@@95 $generated@@36 $generated@@168 $generated@@38 $generated@@169))
)))
(assert (= ($generated@@30 $generated@@38) $generated@@4))
(assert (= ($generated@@170 $generated@@38) $generated@@8))
(assert (forall (($generated@@171 Int) ($generated@@172 T@U) ) (! (= ($generated@@37 ($generated@@73 $generated@@171) ($generated@@14 ($generated@@75 $generated@@10 $generated@@172))) ($generated@@75 $generated@@36 ($generated@@37 $generated@@171 ($generated@@14 $generated@@172))))
 :pattern ( ($generated@@37 ($generated@@73 $generated@@171) ($generated@@14 ($generated@@75 $generated@@10 $generated@@172))))
)))
(assert (forall (($generated@@173 Int) ) (! (= ($generated@@83 $generated@@11 ($generated@@15 ($generated@@73 $generated@@173))) ($generated@@75 $generated@@46 ($generated@@83 $generated@@11 ($generated@@15 $generated@@173))))
 :pattern ( ($generated@@83 $generated@@11 ($generated@@15 ($generated@@73 $generated@@173))))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@89 ($generated@@14 ($generated@@75 $generated@@10 $generated@@174))) ($generated@@75 $generated@@36 ($generated@@89 ($generated@@14 $generated@@174))))
 :pattern ( ($generated@@89 ($generated@@14 ($generated@@75 $generated@@10 $generated@@174))))
)))
(assert (forall (($generated@@175 Int) ) (! (= ($generated@@92 ($generated@@73 $generated@@175)) ($generated@@75 $generated@@36 ($generated@@92 $generated@@175)))
 :pattern ( ($generated@@92 ($generated@@73 $generated@@175)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@T) ) (! (= ($generated@@83 $generated@@177 ($generated@@75 $generated@@177 $generated@@176)) ($generated@@75 $generated@@46 ($generated@@83 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@83 $generated@@177 ($generated@@75 $generated@@177 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! ($generated@@95 $generated@@11 $generated@@179 $generated@@0 $generated@@178)
 :pattern ( ($generated@@95 $generated@@11 $generated@@179 $generated@@0 $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! ($generated@@95 $generated@@10 $generated@@181 $generated $generated@@180)
 :pattern ( ($generated@@95 $generated@@10 $generated@@181 $generated $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ) (! ($generated@@35 $generated@@11 $generated@@182 $generated@@0)
 :pattern ( ($generated@@35 $generated@@11 $generated@@182 $generated@@0))
)))
(assert (forall (($generated@@183 T@U) ) (! ($generated@@35 $generated@@10 $generated@@183 $generated)
 :pattern ( ($generated@@35 $generated@@10 $generated@@183 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () Bool)
(declare-fun $generated@@204 () Bool)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () Bool)
(declare-fun $generated@@212 () Bool)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@218  (=> (and (and (and (and (= $generated@@184 ($generated@@125 $generated@@185 $generated@@186 $generated@@3 false)) ($generated@@78 $generated@@187)) (and ($generated@@26 $generated@@188) ($generated@@31 $generated@@189))) (and (and ($generated@@158 $generated@@190) ($generated@@191 $generated@@190)) (and (forall (($generated@@219 T@U) ) (!  (=> (and (or (not (= $generated@@219 $generated@@185)) (not true)) ($generated@@14 ($generated@@49 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@47 ($generated@@48 $generated@@45 $generated@@46) $generated@@186 $generated@@219) $generated@@3)))) (= ($generated@@44 $generated@@47 ($generated@@48 $generated@@45 $generated@@46) $generated@@190 $generated@@219) ($generated@@44 $generated@@47 ($generated@@48 $generated@@45 $generated@@46) $generated@@186 $generated@@219)))
 :pattern ( ($generated@@44 $generated@@47 ($generated@@48 $generated@@45 $generated@@46) $generated@@190 $generated@@219))
)) ($generated@@43 $generated@@186 $generated@@190)))) (and (and (and ($generated@@35 $generated@@36 $generated@@192 $generated@@38) ($generated@@95 $generated@@36 $generated@@192 $generated@@38 $generated@@190)) (and ($generated@@35 $generated@@36 $generated@@193 $generated@@38) ($generated@@95 $generated@@36 $generated@@193 $generated@@38 $generated@@190))) (and (and ($generated@@35 $generated@@36 $generated@@194 $generated@@38) ($generated@@95 $generated@@36 $generated@@194 $generated@@38 $generated@@190)) (and ($generated@@35 $generated@@36 $generated@@195 $generated@@38) ($generated@@95 $generated@@36 $generated@@195 $generated@@38 $generated@@190))))) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@78 $generated@@187)) (=> ($generated@@78 $generated@@187) (=> (and (= $generated@@196 $generated@@187) ($generated@@35 $generated@@36 $generated@@196 $generated@@38)) (=> (and (and (= $generated@@197 $generated@@196) (= $generated@@198 (+ $generated@@199 2))) (and ($generated@@35 $generated@@11 ($generated@@15 $generated@@198) $generated@@0) (= $generated@@200 $generated@@198))) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@78 $generated@@197)) (=> ($generated@@78 $generated@@197) (=> ($generated@@25 $generated@@192 (let (($generated@@220 $generated@@187))
(let (($generated@@221 (+ $generated@@199 2)))
($generated@@37 $generated@@221 ($generated@@101 $generated@@220))))) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@26 $generated@@188)) (=> ($generated@@26 $generated@@188) (=> (= $generated@@201 $generated@@188) (=> (and ($generated@@35 $generated@@36 $generated@@201 $generated@@38) (= $generated@@202 $generated@@201)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@78 $generated@@187)) (=> ($generated@@78 $generated@@187) (=> (and (and (= $generated@@203  (not ($generated@@101 $generated@@187))) ($generated@@35 $generated@@10 ($generated@@13 $generated@@203) $generated)) (and (= $generated@@204 $generated@@203) ($generated@@25 $generated@@193 (let (($generated@@222  (not ($generated@@101 $generated@@187))))
($generated@@89 $generated@@222))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@78 (let (($generated@@223 $generated@@187))
(let (($generated@@224 ($generated@@73 2)))
($generated@@37 $generated@@224 ($generated@@101 $generated@@223)))))) (=> ($generated@@78 (let (($generated@@225 $generated@@187))
(let (($generated@@226 ($generated@@73 2)))
($generated@@37 $generated@@226 ($generated@@101 $generated@@225))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@78 $generated@@187)) (=> ($generated@@78 $generated@@187) (=> (and (= $generated@@205 $generated@@187) ($generated@@35 $generated@@36 $generated@@205 $generated@@38)) (=> (and (and (= $generated@@206 $generated@@205) (= $generated@@207 ($generated@@73 2))) (and ($generated@@35 $generated@@11 ($generated@@15 $generated@@207) $generated@@0) (= $generated@@208 $generated@@207))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@78 $generated@@206)) (=> ($generated@@78 $generated@@206) (=> (and (= $generated@@209 ($generated@@37 $generated@@208 ($generated@@101 $generated@@206))) ($generated@@35 $generated@@36 $generated@@209 $generated@@38)) (=> (and (and (= $generated@@210 $generated@@209) (= $generated@@211 ($generated@@14 ($generated@@75 $generated@@10 ($generated@@13 false))))) (and ($generated@@35 $generated@@10 ($generated@@13 $generated@@211) $generated) (= $generated@@212 $generated@@211))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@78 $generated@@210)) (=> ($generated@@78 $generated@@210) (=> (and ($generated@@25 $generated@@194 (let (($generated@@227 (let (($generated@@228 $generated@@187))
(let (($generated@@229 ($generated@@73 2)))
($generated@@37 $generated@@229 ($generated@@101 $generated@@228))))))
(let (($generated@@230 ($generated@@14 ($generated@@75 $generated@@10 ($generated@@13 false)))))
($generated@@37 ($generated@@110 $generated@@227) $generated@@230)))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@31 $generated@@189)))))))))))))))))))))))))))))))
(let (($generated@@231  (=> (and ($generated@@158 $generated@@186) ($generated@@191 $generated@@186)) (=> (and (and (and ($generated@@35 $generated@@36 $generated@@187 $generated@@38) ($generated@@95 $generated@@36 $generated@@187 $generated@@38 $generated@@186)) ($generated@@118 $generated@@187)) (and (and ($generated@@35 $generated@@36 $generated@@188 $generated@@38) ($generated@@95 $generated@@36 $generated@@188 $generated@@38 $generated@@186)) ($generated@@118 $generated@@188))) (=> (and (and (and (and ($generated@@35 $generated@@36 $generated@@189 $generated@@38) ($generated@@95 $generated@@36 $generated@@189 $generated@@38 $generated@@186)) ($generated@@118 $generated@@189)) (and ($generated@@35 $generated@@36 $generated@@213 $generated@@38) ($generated@@95 $generated@@36 $generated@@213 $generated@@38 $generated@@186))) (and (and (and ($generated@@35 $generated@@36 $generated@@214 $generated@@38) ($generated@@95 $generated@@36 $generated@@214 $generated@@38 $generated@@186)) (and ($generated@@35 $generated@@36 $generated@@215 $generated@@38) ($generated@@95 $generated@@36 $generated@@215 $generated@@38 $generated@@186))) (and (and ($generated@@35 $generated@@36 $generated@@216 $generated@@38) ($generated@@95 $generated@@36 $generated@@216 $generated@@38 $generated@@186)) (and (= 1 $generated@@217) (= (ControlFlow 0 11) 2))))) $generated@@218)))))
$generated@@231)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
