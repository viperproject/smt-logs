(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U T@U T@U) Int)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@32 () Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (Int) Int)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@106 (T@U) Int)
(declare-fun $generated@@107 (T@U) Int)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@119 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@T T@T) T@T)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T) T@T)
(declare-fun $generated@@125 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (! (= ($generated@@22 $generated@@25 $generated@@26 $generated@@27) ($generated@@22 $generated@@25 $generated@@24 $generated@@27))
 :pattern ( ($generated@@22 $generated@@25 ($generated@@23 $generated@@26) $generated@@27))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (! ($generated@@28 $generated@@8 $generated@@30 $generated@@29 $generated@@31)
 :pattern ( ($generated@@28 $generated@@8 $generated@@30 $generated@@29 $generated@@31))
)))
(assert (= ($generated@@6 $generated@@35) 3))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> (or ($generated@@36 $generated@@42 ($generated@@34 $generated@@35 $generated@@44)) (and (< 1 $generated@@32) ($generated@@37 $generated@@35 $generated@@44 ($generated@@38 $generated@@42)))) (and (=> (not ($generated@@11 ($generated@@34 $generated@@7 ($generated@@10 ($generated@@39 ($generated@@34 $generated@@35 $generated@@44)))))) (let (($generated@@45 ($generated@@34 $generated@@35 ($generated@@40 ($generated@@34 $generated@@35 $generated@@44)))))
($generated@@36 $generated@@42 $generated@@45))) (= ($generated@@22 $generated@@42 ($generated@@33 $generated@@43) ($generated@@34 $generated@@35 $generated@@44)) (ite ($generated@@39 ($generated@@34 $generated@@35 $generated@@44)) 0 (let (($generated@@46 ($generated@@34 $generated@@35 ($generated@@40 ($generated@@34 $generated@@35 $generated@@44)))))
($generated@@41 (+ 1 ($generated@@22 $generated@@42 ($generated@@33 $generated@@43) $generated@@46))))))))
 :weight 3
 :pattern ( ($generated@@22 $generated@@42 ($generated@@33 $generated@@43) ($generated@@34 $generated@@35 $generated@@44)))
))))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@22 $generated@@47 ($generated@@33 $generated@@48) $generated@@49) ($generated@@22 $generated@@47 $generated@@48 $generated@@49))
 :pattern ( ($generated@@22 $generated@@47 ($generated@@33 $generated@@48) $generated@@49))
)))
(assert (= ($generated@@50 $generated@@51) $generated@@2))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> ($generated@@52 $generated@@54) ($generated@@28 $generated@@35 $generated@@51 ($generated@@38 $generated@@53) $generated@@54))
 :pattern ( ($generated@@28 $generated@@35 $generated@@51 ($generated@@38 $generated@@53) $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ) (! ($generated@@37 $generated@@35 $generated@@51 ($generated@@38 $generated@@55))
 :pattern ( ($generated@@37 $generated@@35 $generated@@51 ($generated@@38 $generated@@55)))
)))
(assert (forall (($generated@@56 Int) ) (! (= ($generated@@41 $generated@@56) $generated@@56)
 :pattern ( ($generated@@41 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@34 $generated@@58 $generated@@57) $generated@@57)
 :pattern ( ($generated@@34 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@37 $generated@@35 ($generated@@59 $generated@@62 $generated@@63) ($generated@@38 $generated@@61))  (and ($generated@@60 $generated@@62 $generated@@61) ($generated@@37 $generated@@35 $generated@@63 ($generated@@38 $generated@@61))))
 :pattern ( ($generated@@37 $generated@@35 ($generated@@59 $generated@@62 $generated@@63) ($generated@@38 $generated@@61)))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@39 $generated@@64) (= ($generated@@50 $generated@@64) $generated@@2))
 :pattern ( ($generated@@39 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 $generated@@66) (= ($generated@@50 $generated@@66) $generated@@3))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 ($generated@@67 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@67 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@65 $generated@@71) (exists (($generated@@72 T@U) ($generated@@73 T@U) ) (= $generated@@71 ($generated@@59 $generated@@72 $generated@@73))))
 :pattern ( ($generated@@65 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@39 $generated@@74) (= $generated@@74 $generated@@51))
 :pattern ( ($generated@@39 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@37 $generated@@8 $generated@@75 $generated@@29) (<= ($generated@@41 0) ($generated@@13 $generated@@75)))
 :pattern ( ($generated@@37 $generated@@8 $generated@@75 $generated@@29))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (or ($generated@@36 $generated@@76 $generated@@78) (and (< 1 $generated@@32) ($generated@@37 $generated@@35 $generated@@78 ($generated@@38 $generated@@76)))) (and (=> (not ($generated@@39 $generated@@78)) (let (($generated@@79 ($generated@@40 $generated@@78)))
($generated@@36 $generated@@76 $generated@@79))) (= ($generated@@22 $generated@@76 ($generated@@33 $generated@@77) $generated@@78) (ite ($generated@@39 $generated@@78) 0 (let (($generated@@80 ($generated@@40 $generated@@78)))
(+ 1 ($generated@@22 $generated@@76 $generated@@77 $generated@@80)))))))
 :pattern ( ($generated@@22 $generated@@76 ($generated@@33 $generated@@77) $generated@@78))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@81 ($generated@@68 $generated@@85 $generated@@82) $generated@@83 $generated@@84) ($generated@@28 $generated@@85 $generated@@82 $generated@@83 $generated@@84))
 :pattern ( ($generated@@81 ($generated@@68 $generated@@85 $generated@@82) $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@88 T@U) ) (!  (and (= ($generated@@86 ($generated@@38 $generated@@88)) $generated@@1) (= ($generated@@87 ($generated@@38 $generated@@88)) $generated@@5))
 :pattern ( ($generated@@38 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@60 $generated@@89 $generated@@29) (and (= ($generated@@68 $generated@@8 ($generated@@67 $generated@@8 $generated@@89)) $generated@@89) ($generated@@37 $generated@@8 ($generated@@67 $generated@@8 $generated@@89) $generated@@29)))
 :pattern ( ($generated@@60 $generated@@89 $generated@@29))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> ($generated@@37 $generated@@35 $generated@@91 ($generated@@38 $generated@@90)) (or ($generated@@39 $generated@@91) ($generated@@65 $generated@@91)))
 :pattern ( ($generated@@65 $generated@@91) ($generated@@37 $generated@@35 $generated@@91 ($generated@@38 $generated@@90)))
 :pattern ( ($generated@@39 $generated@@91) ($generated@@37 $generated@@35 $generated@@91 ($generated@@38 $generated@@90)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@60 ($generated@@68 $generated@@94 $generated@@92) $generated@@93) ($generated@@37 $generated@@94 $generated@@92 $generated@@93))
 :pattern ( ($generated@@60 ($generated@@68 $generated@@94 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@50 ($generated@@59 $generated@@95 $generated@@96)) $generated@@3)
 :pattern ( ($generated@@59 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@97 ($generated@@59 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@59 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@40 ($generated@@59 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@59 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@102 ($generated@@38 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@38 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@67 $generated@@105 ($generated@@68 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@68 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (< ($generated@@106 $generated@@108) ($generated@@107 ($generated@@59 $generated@@108 $generated@@109)))
 :pattern ( ($generated@@59 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (< ($generated@@107 $generated@@111) ($generated@@107 ($generated@@59 $generated@@110 $generated@@111)))
 :pattern ( ($generated@@59 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (and ($generated@@52 $generated@@114) (and ($generated@@65 $generated@@112) ($generated@@28 $generated@@35 $generated@@112 ($generated@@38 $generated@@113) $generated@@114))) ($generated@@81 ($generated@@97 $generated@@112) $generated@@113 $generated@@114))
 :pattern ( ($generated@@81 ($generated@@97 $generated@@112) $generated@@113 $generated@@114))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@115 $generated@@126 $generated@@127 $generated@@128 ($generated@@122 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@131 $generated@@132) $generated@@129)
 :weight 0
)) (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@115 $generated@@133 $generated@@134 $generated@@135 ($generated@@122 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@115 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@115 $generated@@142 $generated@@143 $generated@@144 ($generated@@122 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@115 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (= ($generated@@6 $generated@@116) 4)) (= ($generated@@6 $generated@@117) 5)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@119 $generated@@151 $generated@@152 ($generated@@123 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@153) $generated@@155) $generated@@153)
 :weight 0
))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@160 $generated@@161) (= ($generated@@119 $generated@@156 $generated@@157 ($generated@@123 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@158) $generated@@161) ($generated@@119 $generated@@156 $generated@@157 $generated@@159 $generated@@161)))
 :weight 0
))) (= ($generated@@6 $generated@@120) 6)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (= ($generated@@6 ($generated@@121 $generated@@162 $generated@@163)) 7))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (! (= ($generated@@124 ($generated@@121 $generated@@164 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@121 $generated@@164 $generated@@165))
))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@125 ($generated@@121 $generated@@166 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@121 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 Bool) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@11 ($generated@@115 $generated@@116 $generated@@117 $generated@@7 ($generated@@118 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))  (=> (and (or (not (= $generated@@172 $generated@@168)) (not true)) ($generated@@11 ($generated@@67 $generated@@7 ($generated@@119 $generated@@117 $generated@@120 ($generated@@119 $generated@@116 ($generated@@121 $generated@@117 $generated@@120) $generated@@169 $generated@@172) $generated@@170)))) $generated@@171))
 :pattern ( ($generated@@115 $generated@@116 $generated@@117 $generated@@7 ($generated@@118 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@106 ($generated@@68 $generated@@35 $generated@@174)) ($generated@@107 $generated@@174))
 :pattern ( ($generated@@106 ($generated@@68 $generated@@35 $generated@@174)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@60 $generated@@176 ($generated@@38 $generated@@175)) (and (= ($generated@@68 $generated@@35 ($generated@@67 $generated@@35 $generated@@176)) $generated@@176) ($generated@@37 $generated@@35 ($generated@@67 $generated@@35 $generated@@176) ($generated@@38 $generated@@175))))
 :pattern ( ($generated@@60 $generated@@176 ($generated@@38 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and ($generated@@52 $generated@@179) (and ($generated@@65 $generated@@177) ($generated@@28 $generated@@35 $generated@@177 ($generated@@38 $generated@@178) $generated@@179))) ($generated@@28 $generated@@35 ($generated@@40 $generated@@177) ($generated@@38 $generated@@178) $generated@@179))
 :pattern ( ($generated@@28 $generated@@35 ($generated@@40 $generated@@177) ($generated@@38 $generated@@178) $generated@@179))
)))
(assert (= ($generated@@86 $generated@@29) $generated@@0))
(assert (= ($generated@@87 $generated@@29) $generated@@4))
(assert (= $generated@@51 ($generated@@34 $generated@@35 $generated@@51)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@59 ($generated@@34 $generated@@120 $generated@@180) ($generated@@34 $generated@@35 $generated@@181)) ($generated@@34 $generated@@35 ($generated@@59 $generated@@180 $generated@@181)))
 :pattern ( ($generated@@59 ($generated@@34 $generated@@120 $generated@@180) ($generated@@34 $generated@@35 $generated@@181)))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@68 $generated@@8 ($generated@@12 ($generated@@41 $generated@@182))) ($generated@@34 $generated@@120 ($generated@@68 $generated@@8 ($generated@@12 $generated@@182))))
 :pattern ( ($generated@@68 $generated@@8 ($generated@@12 ($generated@@41 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@68 $generated@@184 ($generated@@34 $generated@@184 $generated@@183)) ($generated@@34 $generated@@120 ($generated@@68 $generated@@184 $generated@@183)))
 :pattern ( ($generated@@68 $generated@@184 ($generated@@34 $generated@@184 $generated@@183)))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (or ($generated@@36 $generated@@185 $generated@@187) (and (< 1 $generated@@32) ($generated@@37 $generated@@35 $generated@@187 ($generated@@38 $generated@@185)))) (<= ($generated@@41 0) ($generated@@22 $generated@@185 $generated@@186 $generated@@187)))
 :pattern ( ($generated@@22 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@52 $generated@@191) (= ($generated@@28 $generated@@35 ($generated@@59 $generated@@189 $generated@@190) ($generated@@38 $generated@@188) $generated@@191)  (and ($generated@@81 $generated@@189 $generated@@188 $generated@@191) ($generated@@28 $generated@@35 $generated@@190 ($generated@@38 $generated@@188) $generated@@191))))
 :pattern ( ($generated@@28 $generated@@35 ($generated@@59 $generated@@189 $generated@@190) ($generated@@38 $generated@@188) $generated@@191))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@205 true))
(let (($generated@@206  (=> (= $generated@@192 ($generated@@59 $generated@@193 $generated@@194)) (=> (and ($generated@@60 $generated@@193 $generated@@195) ($generated@@37 $generated@@35 $generated@@194 ($generated@@38 $generated@@195))) (=> (and (and (= $generated@@196 $generated@@194) ($generated@@37 $generated@@35 $generated@@196 ($generated@@38 $generated@@195))) (and (= $generated@@197 $generated@@196) ($generated@@28 $generated@@35 $generated@@197 ($generated@@38 $generated@@195) $generated@@198))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@107 $generated@@197) ($generated@@107 $generated@@192))) (=> (< ($generated@@107 $generated@@197) ($generated@@107 $generated@@192)) (=> (and ($generated@@36 $generated@@195 $generated@@197) (= (ControlFlow 0 5) (- 0 4))) ($generated@@37 $generated@@8 ($generated@@12 (+ 1 ($generated@@22 $generated@@195 ($generated@@33 $generated@@24) $generated@@197))) $generated@@29)))))))))
(let (($generated@@207  (=> (or (not (= $generated@@192 $generated@@51)) (not true)) (and (=> (= (ControlFlow 0 8) 5) $generated@@206) (=> (= (ControlFlow 0 8) 7) $generated@@205)))))
(let (($generated@@208  (=> (and (= $generated@@192 $generated@@51) (= (ControlFlow 0 3) (- 0 2))) ($generated@@37 $generated@@8 ($generated@@12 ($generated@@41 0)) $generated@@29))))
(let (($generated@@209 true))
(let (($generated@@210  (=> (and (and (= $generated@@199 ($generated@@118 $generated@@200 $generated@@198 $generated false)) (= $generated@@201 ($generated@@33 $generated@@202))) (and (= $generated@@203 ($generated@@33 ($generated@@33 $generated@@202))) (= ($generated@@23 $generated@@202) $generated@@202))) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@209) (=> (= (ControlFlow 0 9) 3) $generated@@208)) (=> (= (ControlFlow 0 9) 8) $generated@@207)))))
(let (($generated@@211  (=> (and (and (and ($generated@@52 $generated@@198) ($generated@@204 $generated@@198)) ($generated@@37 $generated@@35 $generated@@192 ($generated@@38 $generated@@195))) (and (= 1 $generated@@32) (= (ControlFlow 0 10) 9))) $generated@@210)))
$generated@@211))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
