(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U) Bool)
(declare-fun $generated@@22 (T@U T@U T@U) Bool)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 (T@U T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@69 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@73 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T T@T) T@T)
(declare-fun $generated@@76 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@77 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@3 $generated@@25) 3))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (or ($generated@@22 $generated@@31 $generated@@32 $generated@@33) (and (< 0 $generated@@20) (and ($generated@@23 $generated@@32 $generated@@31) ($generated@@24 $generated@@25 $generated@@33 ($generated@@26 $generated@@31))))) (forall (($generated@@34 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@34) ($generated@@27 $generated@@34)) (and ($generated@@21 $generated@@31 $generated@@32 $generated@@33) ($generated@@29 $generated@@25 $generated@@33 ($generated@@26 $generated@@31) $generated@@34))) ($generated@@30 $generated@@32 $generated@@31 $generated@@34))
 :pattern ( ($generated@@27 $generated@@34))
)))
 :pattern ( ($generated@@21 $generated@@31 $generated@@32 $generated@@33))
))))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (or ($generated@@22 $generated@@36 $generated@@37 $generated@@38) (and (< 0 $generated@@20) (and ($generated@@23 $generated@@37 $generated@@36) ($generated@@24 $generated@@25 $generated@@38 ($generated@@26 $generated@@36))))) (= ($generated@@21 $generated@@36 $generated@@37 $generated@@38) ($generated@@8 ($generated@@35 $generated@@4 ($generated@@7 true)))))
 :pattern ( ($generated@@21 $generated@@36 $generated@@37 $generated@@38))
))))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@35 $generated@@40 $generated@@39) $generated@@39)
 :pattern ( ($generated@@35 $generated@@40 $generated@@39))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@T) ) (! (= ($generated@@42 $generated@@44 ($generated@@41 $generated@@44 $generated@@43)) $generated@@43)
 :pattern ( ($generated@@41 $generated@@44 $generated@@43))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (or ($generated@@22 $generated@@45 $generated@@46 ($generated@@35 $generated@@25 $generated@@47)) (and (< 0 $generated@@20) (and ($generated@@23 $generated@@46 $generated@@45) ($generated@@24 $generated@@25 $generated@@47 ($generated@@26 $generated@@45))))) (= ($generated@@21 $generated@@45 $generated@@46 ($generated@@35 $generated@@25 $generated@@47)) ($generated@@8 ($generated@@35 $generated@@4 ($generated@@7 true)))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@45 $generated@@46 ($generated@@35 $generated@@25 $generated@@47)))
))))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@49 ($generated@@26 $generated@@50)) (forall (($generated@@51 T@U) ) (!  (=> ($generated@@48 $generated@@49 $generated@@51) ($generated@@23 $generated@@51 $generated@@50))
 :pattern ( ($generated@@48 $generated@@49 $generated@@51))
)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@49 ($generated@@26 $generated@@50)))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@30 ($generated@@42 $generated@@55 $generated@@52) $generated@@53 $generated@@54) ($generated@@29 $generated@@55 $generated@@52 $generated@@53 $generated@@54))
 :pattern ( ($generated@@30 ($generated@@42 $generated@@55 $generated@@52) $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@23 $generated@@56 $generated) (and (= ($generated@@42 $generated@@4 ($generated@@41 $generated@@4 $generated@@56)) $generated@@56) ($generated@@24 $generated@@4 ($generated@@41 $generated@@4 $generated@@56) $generated)))
 :pattern ( ($generated@@23 $generated@@56 $generated))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@23 ($generated@@42 $generated@@59 $generated@@57) $generated@@58) ($generated@@24 $generated@@59 $generated@@57 $generated@@58))
 :pattern ( ($generated@@23 ($generated@@42 $generated@@59 $generated@@57) $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@29 $generated@@25 $generated@@60 ($generated@@26 $generated@@61) $generated@@62) (forall (($generated@@63 T@U) ) (!  (=> ($generated@@48 $generated@@60 $generated@@63) ($generated@@30 $generated@@63 $generated@@61 $generated@@62))
 :pattern ( ($generated@@48 $generated@@60 $generated@@63))
)))
 :pattern ( ($generated@@29 $generated@@25 $generated@@60 ($generated@@26 $generated@@61) $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@64 ($generated@@26 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@26 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@19 ($generated@@26 $generated@@66)) $generated@@1)
 :pattern ( ($generated@@26 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@41 $generated@@68 ($generated@@42 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@42 $generated@@68 $generated@@67))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@69 $generated@@80 $generated@@81 $generated@@82 ($generated@@76 $generated@@80 $generated@@81 $generated@@82 $generated@@84 $generated@@85 $generated@@86 $generated@@83) $generated@@85 $generated@@86) $generated@@83)
 :weight 0
)) (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (or (= $generated@@92 $generated@@94) (= ($generated@@69 $generated@@87 $generated@@88 $generated@@89 ($generated@@76 $generated@@87 $generated@@88 $generated@@89 $generated@@91 $generated@@92 $generated@@93 $generated@@90) $generated@@94 $generated@@95) ($generated@@69 $generated@@87 $generated@@88 $generated@@89 $generated@@91 $generated@@94 $generated@@95)))
 :weight 0
)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (or (= $generated@@102 $generated@@104) (= ($generated@@69 $generated@@96 $generated@@97 $generated@@98 ($generated@@76 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@102 $generated@@99) $generated@@103 $generated@@104) ($generated@@69 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@103 $generated@@104)))
 :weight 0
)))) (= ($generated@@3 $generated@@70) 4)) (= ($generated@@3 $generated@@71) 5)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@73 $generated@@105 $generated@@106 ($generated@@77 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@107) $generated@@109) $generated@@107)
 :weight 0
))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@73 $generated@@110 $generated@@111 ($generated@@77 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@73 $generated@@110 $generated@@111 $generated@@113 $generated@@115)))
 :weight 0
))) (= ($generated@@3 $generated@@74) 6)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (= ($generated@@3 ($generated@@75 $generated@@116 $generated@@117)) 7))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@78 ($generated@@75 $generated@@118 $generated@@119)) $generated@@118)
 :pattern ( ($generated@@75 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@T) ($generated@@121 T@T) ) (! (= ($generated@@79 ($generated@@75 $generated@@120 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@75 $generated@@120 $generated@@121))
))))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 Bool) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@8 ($generated@@69 $generated@@70 $generated@@71 $generated@@4 ($generated@@72 $generated@@122 $generated@@123 $generated@@124 $generated@@125) $generated@@126 $generated@@127))  (=> (and (or (not (= $generated@@126 $generated@@122)) (not true)) ($generated@@8 ($generated@@41 $generated@@4 ($generated@@73 $generated@@71 $generated@@74 ($generated@@73 $generated@@70 ($generated@@75 $generated@@71 $generated@@74) $generated@@123 $generated@@126) $generated@@124)))) $generated@@125))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71 $generated@@4 ($generated@@72 $generated@@122 $generated@@123 $generated@@124 $generated@@125) $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@23 $generated@@128 ($generated@@26 $generated@@129)) (and (= ($generated@@42 $generated@@25 ($generated@@41 $generated@@25 $generated@@128)) $generated@@128) ($generated@@24 $generated@@25 ($generated@@41 $generated@@25 $generated@@128) ($generated@@26 $generated@@129))))
 :pattern ( ($generated@@23 $generated@@128 ($generated@@26 $generated@@129)))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or ($generated@@22 $generated@@130 ($generated@@35 $generated@@74 $generated@@131) ($generated@@35 $generated@@25 $generated@@132)) (and (< 0 $generated@@20) (and ($generated@@23 $generated@@131 $generated@@130) ($generated@@24 $generated@@25 $generated@@132 ($generated@@26 $generated@@130))))) (= ($generated@@21 $generated@@130 ($generated@@35 $generated@@74 $generated@@131) ($generated@@35 $generated@@25 $generated@@132)) ($generated@@8 ($generated@@35 $generated@@4 ($generated@@7 true)))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@130 ($generated@@35 $generated@@74 $generated@@131) ($generated@@35 $generated@@25 $generated@@132)))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@42 $generated@@134 ($generated@@35 $generated@@134 $generated@@133)) ($generated@@35 $generated@@74 ($generated@@42 $generated@@134 $generated@@133)))
 :pattern ( ($generated@@42 $generated@@134 ($generated@@35 $generated@@134 $generated@@133)))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! ($generated@@29 $generated@@4 $generated@@136 $generated $generated@@135)
 :pattern ( ($generated@@29 $generated@@4 $generated@@136 $generated $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (! ($generated@@24 $generated@@4 $generated@@137 $generated)
 :pattern ( ($generated@@24 $generated@@4 $generated@@137 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@145  (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@146 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@146) ($generated@@27 $generated@@146)) (and ($generated@@21 $generated@@138 $generated@@139 $generated@@140) ($generated@@29 $generated@@25 $generated@@140 ($generated@@26 $generated@@138) $generated@@146))) ($generated@@30 $generated@@139 $generated@@138 $generated@@146))
 :pattern ( ($generated@@27 $generated@@146))
)))))
(let (($generated@@147  (=> (= ($generated@@21 $generated@@138 $generated@@139 $generated@@140) ($generated@@8 ($generated@@35 $generated@@4 ($generated@@7 true)))) (=> (and ($generated@@24 $generated@@4 ($generated@@7 ($generated@@21 $generated@@138 $generated@@139 $generated@@140)) $generated) (= (ControlFlow 0 4) 3)) $generated@@145))))
(let (($generated@@148 true))
(let (($generated@@149  (=> (= $generated@@141 ($generated@@72 $generated@@142 $generated@@143 $generated@@2 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@148) (=> (= (ControlFlow 0 5) 4) $generated@@147)))))
(let (($generated@@150  (=> (and ($generated@@28 $generated@@143) ($generated@@144 $generated@@143)) (=> (and (and ($generated@@23 $generated@@139 $generated@@138) ($generated@@24 $generated@@25 $generated@@140 ($generated@@26 $generated@@138))) (and (= 0 $generated@@20) (= (ControlFlow 0 6) 5))) $generated@@149))))
$generated@@150))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
