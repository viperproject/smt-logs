(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U) Real)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 (Bool T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@78 (Int) Int)
(declare-fun $generated@@80 (Real) Real)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@101 (Real) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@156 (T@U) Int)
(declare-fun $generated@@164 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@1))
(assert (= ($generated@@25 $generated@@0) $generated@@2))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and ($generated@@27 $generated@@29) ($generated@@27 $generated@@30)) (= ($generated@@26 $generated@@29 $generated@@30) (= ($generated@@28 $generated@@29) ($generated@@28 $generated@@30))))
 :pattern ( ($generated@@26 $generated@@29 $generated@@30) ($generated@@27 $generated@@29))
 :pattern ( ($generated@@26 $generated@@29 $generated@@30) ($generated@@27 $generated@@30))
)))
(assert (= ($generated@@31 $generated@@32) $generated@@5))
(assert (= ($generated@@9 $generated@@34) 3))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@36 $generated@@38) ($generated@@33 $generated@@34 $generated@@32 ($generated@@35 $generated@@37) $generated@@38))
 :pattern ( ($generated@@33 $generated@@34 $generated@@32 ($generated@@35 $generated@@37) $generated@@38))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 Bool) ($generated@@44 T@U) ) (! (= ($generated@@39 $generated@@34 ($generated@@40 $generated@@43 $generated@@44) ($generated@@35 $generated@@42))  (and ($generated@@39 $generated@@10 ($generated@@13 $generated@@43) $generated) ($generated@@41 $generated@@44 $generated@@42)))
 :pattern ( ($generated@@39 $generated@@34 ($generated@@40 $generated@@43 $generated@@44) ($generated@@35 $generated@@42)))
)))
(assert (forall (($generated@@45 T@U) ) (! ($generated@@39 $generated@@34 $generated@@32 ($generated@@35 $generated@@45))
 :pattern ( ($generated@@39 $generated@@34 $generated@@32 ($generated@@35 $generated@@45)))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@26 $generated@@46 $generated@@47) (= $generated@@46 $generated@@47))
 :pattern ( ($generated@@26 $generated@@46 $generated@@47))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@49 $generated@@58 $generated@@59 ($generated@@55 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@62) $generated@@60)
 :weight 0
)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (or (= $generated@@67 $generated@@68) (= ($generated@@49 $generated@@63 $generated@@64 ($generated@@55 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@68) ($generated@@49 $generated@@63 $generated@@64 $generated@@66 $generated@@68)))
 :weight 0
))) (= ($generated@@9 $generated@@50) 4)) (= ($generated@@9 $generated@@51) 5)) (= ($generated@@9 $generated@@52) 6)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (= ($generated@@9 ($generated@@53 $generated@@69 $generated@@70)) 7))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@56 ($generated@@53 $generated@@71 $generated@@72)) $generated@@71)
 :pattern ( ($generated@@53 $generated@@71 $generated@@72))
))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@57 ($generated@@53 $generated@@73 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@53 $generated@@73 $generated@@74))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@48 $generated@@75 $generated@@76) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@14 ($generated@@54 $generated@@10 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@75 $generated@@77) $generated@@3))) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@76 $generated@@77) $generated@@3))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@76 $generated@@77) $generated@@3))
)))
 :pattern ( ($generated@@48 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@79 Int) ) (! (= ($generated@@78 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 Real) ) (! (= ($generated@@80 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and ($generated@@85 $generated@@88) ($generated@@85 $generated@@89)) (= ($generated@@26 $generated@@88 $generated@@89)  (and (= ($generated@@86 $generated@@88) ($generated@@86 $generated@@89)) (= ($generated@@87 $generated@@88) ($generated@@87 $generated@@89)))))
 :pattern ( ($generated@@26 $generated@@88 $generated@@89) ($generated@@85 $generated@@88))
 :pattern ( ($generated@@26 $generated@@88 $generated@@89) ($generated@@85 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@90 $generated@@91) (= ($generated@@31 $generated@@91) $generated@@5))
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@27 $generated@@92) (= ($generated@@31 $generated@@92) $generated@@6))
 :pattern ( ($generated@@27 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@85 $generated@@93) (= ($generated@@31 $generated@@93) $generated@@7))
 :pattern ( ($generated@@85 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 ($generated@@54 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@54 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@85 $generated@@97) (exists (($generated@@98 Bool) ($generated@@99 T@U) ) (= $generated@@97 ($generated@@40 $generated@@98 $generated@@99))))
 :pattern ( ($generated@@85 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@90 $generated@@100) (= $generated@@100 $generated@@32))
 :pattern ( ($generated@@90 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@27 $generated@@102) (exists (($generated@@103 Real) ) (= $generated@@102 ($generated@@101 $generated@@103))))
 :pattern ( ($generated@@27 $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@104 ($generated@@94 $generated@@108 $generated@@105) $generated@@106 $generated@@107) ($generated@@33 $generated@@108 $generated@@105 $generated@@106 $generated@@107))
 :pattern ( ($generated@@104 ($generated@@94 $generated@@108 $generated@@105) $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> ($generated@@48 $generated@@109 $generated@@110) (=> ($generated@@104 $generated@@111 $generated@@112 $generated@@109) ($generated@@104 $generated@@111 $generated@@112 $generated@@110)))
 :pattern ( ($generated@@48 $generated@@109 $generated@@110) ($generated@@104 $generated@@111 $generated@@112 $generated@@109))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (!  (=> ($generated@@48 $generated@@113 $generated@@114) (=> ($generated@@33 $generated@@117 $generated@@115 $generated@@116 $generated@@113) ($generated@@33 $generated@@117 $generated@@115 $generated@@116 $generated@@114)))
 :pattern ( ($generated@@48 $generated@@113 $generated@@114) ($generated@@33 $generated@@117 $generated@@115 $generated@@116 $generated@@113))
)))
(assert (forall (($generated@@119 T@U) ) (!  (and (= ($generated@@25 ($generated@@35 $generated@@119)) $generated@@4) (= ($generated@@118 ($generated@@35 $generated@@119)) $generated@@8))
 :pattern ( ($generated@@35 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (and ($generated@@36 $generated@@121) (and ($generated@@27 $generated@@120) (exists (($generated@@122 T@U) ) (! ($generated@@33 $generated@@34 $generated@@120 ($generated@@35 $generated@@122) $generated@@121)
 :pattern ( ($generated@@33 $generated@@34 $generated@@120 ($generated@@35 $generated@@122) $generated@@121))
)))) ($generated@@33 $generated@@12 ($generated@@17 ($generated@@28 $generated@@120)) $generated@@0 $generated@@121))
 :pattern ( ($generated@@33 $generated@@12 ($generated@@17 ($generated@@28 $generated@@120)) $generated@@0 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (and ($generated@@36 $generated@@124) (and ($generated@@85 $generated@@123) (exists (($generated@@125 T@U) ) (! ($generated@@33 $generated@@34 $generated@@123 ($generated@@35 $generated@@125) $generated@@124)
 :pattern ( ($generated@@33 $generated@@34 $generated@@123 ($generated@@35 $generated@@125) $generated@@124))
)))) ($generated@@33 $generated@@10 ($generated@@13 ($generated@@86 $generated@@123)) $generated $generated@@124))
 :pattern ( ($generated@@33 $generated@@10 ($generated@@13 ($generated@@86 $generated@@123)) $generated $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 Real) ($generated@@128 T@U) ) (!  (=> ($generated@@36 $generated@@128) (= ($generated@@33 $generated@@34 ($generated@@101 $generated@@127) ($generated@@35 $generated@@126) $generated@@128) ($generated@@33 $generated@@12 ($generated@@17 $generated@@127) $generated@@0 $generated@@128)))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@101 $generated@@127) ($generated@@35 $generated@@126) $generated@@128))
)))
(assert (forall (($generated@@129 Bool) ($generated@@130 T@U) ) (! (= ($generated@@86 ($generated@@40 $generated@@129 $generated@@130)) $generated@@129)
 :pattern ( ($generated@@40 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (or (not (= $generated@@131 $generated@@133)) (not true)) (=> (and ($generated@@48 $generated@@131 $generated@@132) ($generated@@48 $generated@@132 $generated@@133)) ($generated@@48 $generated@@131 $generated@@133)))
 :pattern ( ($generated@@48 $generated@@131 $generated@@132) ($generated@@48 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@41 $generated@@134 $generated@@0) (and (= ($generated@@94 $generated@@12 ($generated@@54 $generated@@12 $generated@@134)) $generated@@134) ($generated@@39 $generated@@12 ($generated@@54 $generated@@12 $generated@@134) $generated@@0)))
 :pattern ( ($generated@@41 $generated@@134 $generated@@0))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> ($generated@@41 $generated@@135 $generated) (and (= ($generated@@94 $generated@@10 ($generated@@54 $generated@@10 $generated@@135)) $generated@@135) ($generated@@39 $generated@@10 ($generated@@54 $generated@@10 $generated@@135) $generated)))
 :pattern ( ($generated@@41 $generated@@135 $generated))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@41 ($generated@@94 $generated@@138 $generated@@136) $generated@@137) ($generated@@39 $generated@@138 $generated@@136 $generated@@137))
 :pattern ( ($generated@@41 ($generated@@94 $generated@@138 $generated@@136) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and ($generated@@90 $generated@@139) ($generated@@90 $generated@@140)) ($generated@@26 $generated@@139 $generated@@140))
 :pattern ( ($generated@@26 $generated@@139 $generated@@140) ($generated@@90 $generated@@139))
 :pattern ( ($generated@@26 $generated@@139 $generated@@140) ($generated@@90 $generated@@140))
)))
(assert (forall (($generated@@141 Bool) ($generated@@142 T@U) ) (! (= ($generated@@31 ($generated@@40 $generated@@141 $generated@@142)) $generated@@7)
 :pattern ( ($generated@@40 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 Bool) ($generated@@144 T@U) ) (! (= ($generated@@87 ($generated@@40 $generated@@143 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@40 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@35 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@35 $generated@@146))
)))
(assert (forall (($generated@@147 Real) ) (! (= ($generated@@31 ($generated@@101 $generated@@147)) $generated@@6)
 :pattern ( ($generated@@101 $generated@@147))
)))
(assert (forall (($generated@@148 Real) ) (! (= ($generated@@28 ($generated@@101 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@101 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@54 $generated@@150 ($generated@@94 $generated@@150 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@94 $generated@@150 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@151 $generated@@152) (or (or ($generated@@90 $generated@@152) ($generated@@27 $generated@@152)) ($generated@@85 $generated@@152)))
 :pattern ( ($generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 Real) ) (! (= ($generated@@39 $generated@@34 ($generated@@101 $generated@@154) ($generated@@35 $generated@@153)) ($generated@@39 $generated@@12 ($generated@@17 $generated@@154) $generated@@0))
 :pattern ( ($generated@@39 $generated@@34 ($generated@@101 $generated@@154) ($generated@@35 $generated@@153)))
)))
(assert (forall (($generated@@157 Bool) ($generated@@158 T@U) ) (! (< ($generated@@155 $generated@@158) ($generated@@156 ($generated@@40 $generated@@157 $generated@@158)))
 :pattern ( ($generated@@40 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@39 $generated@@34 $generated@@160 ($generated@@35 $generated@@159)) (or (or ($generated@@90 $generated@@160) ($generated@@27 $generated@@160)) ($generated@@85 $generated@@160)))
 :pattern ( ($generated@@85 $generated@@160) ($generated@@39 $generated@@34 $generated@@160 ($generated@@35 $generated@@159)))
 :pattern ( ($generated@@27 $generated@@160) ($generated@@39 $generated@@34 $generated@@160 ($generated@@35 $generated@@159)))
 :pattern ( ($generated@@90 $generated@@160) ($generated@@39 $generated@@34 $generated@@160 ($generated@@35 $generated@@159)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@36 $generated@@163) (and ($generated@@85 $generated@@161) ($generated@@33 $generated@@34 $generated@@161 ($generated@@35 $generated@@162) $generated@@163))) ($generated@@104 ($generated@@87 $generated@@161) $generated@@162 $generated@@163))
 :pattern ( ($generated@@104 ($generated@@87 $generated@@161) $generated@@162 $generated@@163))
)))
(assert  (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@164 $generated@@167 $generated@@168 $generated@@169 ($generated@@166 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@172 $generated@@173) $generated@@170)
 :weight 0
)) (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@164 $generated@@174 $generated@@175 $generated@@176 ($generated@@166 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@164 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@164 $generated@@183 $generated@@184 $generated@@185 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@164 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@14 ($generated@@164 $generated@@52 $generated@@50 $generated@@10 ($generated@@165 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (or (not (= $generated@@196 $generated@@192)) (not true)) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@193 $generated@@196) $generated@@194)))) $generated@@195))
 :pattern ( ($generated@@164 $generated@@52 $generated@@50 $generated@@10 ($generated@@165 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ) (! (= ($generated@@155 ($generated@@94 $generated@@34 $generated@@198)) ($generated@@156 $generated@@198))
 :pattern ( ($generated@@155 ($generated@@94 $generated@@34 $generated@@198)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@41 $generated@@200 ($generated@@35 $generated@@199)) (and (= ($generated@@94 $generated@@34 ($generated@@54 $generated@@34 $generated@@200)) $generated@@200) ($generated@@39 $generated@@34 ($generated@@54 $generated@@34 $generated@@200) ($generated@@35 $generated@@199))))
 :pattern ( ($generated@@41 $generated@@200 ($generated@@35 $generated@@199)))
)))
(assert (= $generated@@32 ($generated@@82 $generated@@34 $generated@@32)))
(assert (forall (($generated@@201 T@U) ($generated@@202 Bool) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> ($generated@@36 $generated@@204) (= ($generated@@33 $generated@@34 ($generated@@40 $generated@@202 $generated@@203) ($generated@@35 $generated@@201) $generated@@204)  (and ($generated@@33 $generated@@10 ($generated@@13 $generated@@202) $generated $generated@@204) ($generated@@104 $generated@@203 $generated@@201 $generated@@204))))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@40 $generated@@202 $generated@@203) ($generated@@35 $generated@@201) $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@40 ($generated@@14 ($generated@@82 $generated@@10 $generated@@205)) ($generated@@82 $generated@@51 $generated@@206)) ($generated@@82 $generated@@34 ($generated@@40 ($generated@@14 $generated@@205) $generated@@206)))
 :pattern ( ($generated@@40 ($generated@@14 ($generated@@82 $generated@@10 $generated@@205)) ($generated@@82 $generated@@51 $generated@@206)))
)))
(assert (forall (($generated@@207 Int) ) (! (= ($generated@@94 $generated@@11 ($generated@@15 ($generated@@78 $generated@@207))) ($generated@@82 $generated@@51 ($generated@@94 $generated@@11 ($generated@@15 $generated@@207))))
 :pattern ( ($generated@@94 $generated@@11 ($generated@@15 ($generated@@78 $generated@@207))))
)))
(assert (forall (($generated@@208 Real) ) (! (= ($generated@@94 $generated@@12 ($generated@@17 ($generated@@80 $generated@@208))) ($generated@@82 $generated@@51 ($generated@@94 $generated@@12 ($generated@@17 $generated@@208))))
 :pattern ( ($generated@@94 $generated@@12 ($generated@@17 ($generated@@80 $generated@@208))))
)))
(assert (forall (($generated@@209 Real) ) (! (= ($generated@@101 ($generated@@80 $generated@@209)) ($generated@@82 $generated@@34 ($generated@@101 $generated@@209)))
 :pattern ( ($generated@@101 ($generated@@80 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@T) ) (! (= ($generated@@94 $generated@@211 ($generated@@82 $generated@@211 $generated@@210)) ($generated@@82 $generated@@51 ($generated@@94 $generated@@211 $generated@@210)))
 :pattern ( ($generated@@94 $generated@@211 ($generated@@82 $generated@@211 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! ($generated@@33 $generated@@12 $generated@@213 $generated@@0 $generated@@212)
 :pattern ( ($generated@@33 $generated@@12 $generated@@213 $generated@@0 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! ($generated@@33 $generated@@10 $generated@@215 $generated $generated@@214)
 :pattern ( ($generated@@33 $generated@@10 $generated@@215 $generated $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (! ($generated@@39 $generated@@12 $generated@@216 $generated@@0)
 :pattern ( ($generated@@39 $generated@@12 $generated@@216 $generated@@0))
)))
(assert (forall (($generated@@217 T@U) ) (! ($generated@@39 $generated@@10 $generated@@217 $generated)
 :pattern ( ($generated@@39 $generated@@10 $generated@@217 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () Bool)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () Bool)
(declare-fun $generated@@226 () Bool)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () Bool)
(declare-fun $generated@@230 () Bool)
(declare-fun $generated@@231 () Real)
(declare-fun $generated@@232 () Real)
(declare-fun $generated@@233 () Real)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 () Int)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () Int)
(declare-fun $generated@@245 () Int)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 () Int)
(declare-fun $generated@@248 () Int)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@252 true))
(let (($generated@@253  (=> (= $generated@@218 ($generated@@40 $generated@@219 $generated@@220)) (=> (and ($generated@@41 $generated@@220 $generated@@221) ($generated@@104 $generated@@220 $generated@@221 $generated@@222)) (=> (and (and (and ($generated@@41 $generated@@223 $generated@@221) ($generated@@104 $generated@@223 $generated@@221 $generated@@222)) (and (= $generated@@224 $generated@@220) ($generated@@41 $generated@@224 $generated@@221))) (and (and (= $generated@@223 $generated@@224) (= $generated@@225 $generated@@219)) (and ($generated@@39 $generated@@10 ($generated@@13 $generated@@225) $generated) (= $generated@@226 $generated@@225)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@85 $generated@@218)) (=> ($generated@@85 $generated@@218) (=> (= $generated@@227 $generated@@218) (=> (and ($generated@@39 $generated@@34 $generated@@227 ($generated@@35 $generated@@221)) (= $generated@@228 $generated@@227)) (=> (and (and (= $generated@@229  (not $generated@@226)) ($generated@@39 $generated@@10 ($generated@@13 $generated@@229) $generated)) (and (= $generated@@230 $generated@@229) (= (ControlFlow 0 7) (- 0 6)))) ($generated@@85 $generated@@228)))))))))))
(let (($generated@@254  (=> (or (not (= $generated@@218 ($generated@@101 $generated@@231))) (not true)) (and (=> (= (ControlFlow 0 10) 7) $generated@@253) (=> (= (ControlFlow 0 10) 9) $generated@@252)))))
(let (($generated@@255  (=> (and (and (= $generated@@218 ($generated@@101 $generated@@231)) (= $generated@@232 $generated@@231)) (and ($generated@@39 $generated@@12 ($generated@@17 $generated@@232) $generated@@0) (= $generated@@233 $generated@@232))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@27 $generated@@218)) (=> ($generated@@27 $generated@@218) (=> (and (and (= $generated@@234 $generated@@218) ($generated@@39 $generated@@34 $generated@@234 ($generated@@35 $generated@@221))) (and (= $generated@@235 $generated@@234) (= (ControlFlow 0 4) (- 0 3)))) ($generated@@27 $generated@@218)))))))
(let (($generated@@256  (=> (or (not (= $generated@@218 $generated@@32)) (not true)) (and (=> (= (ControlFlow 0 11) 4) $generated@@255) (=> (= (ControlFlow 0 11) 10) $generated@@254)))))
(let (($generated@@257  (=> (and (= $generated@@218 $generated@@32) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@236 $generated@@237))))
(let (($generated@@258  (=> (= $generated@@238 ($generated@@78 3)) (=> (and (and (and (and ($generated@@36 $generated@@239) ($generated@@240 $generated@@239)) (= $generated@@241 ($generated@@78 0))) (and (forall (($generated@@259 T@U) ) (!  (=> (and (or (not (= $generated@@259 $generated@@242)) (not true)) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@243 $generated@@259) $generated@@3)))) (= ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@239 $generated@@259) ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@243 $generated@@259)))
 :pattern ( ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@239 $generated@@259))
)) ($generated@@48 $generated@@243 $generated@@239))) (and (and (and (= $generated@@244 (+ $generated@@245 $generated@@241)) (= $generated@@246 ($generated@@78 3))) (and ($generated@@36 $generated@@222) ($generated@@240 $generated@@222))) (and (and (= $generated@@247 ($generated@@78 0)) (forall (($generated@@260 T@U) ) (!  (=> (and (or (not (= $generated@@260 $generated@@242)) (not true)) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@239 $generated@@260) $generated@@3)))) (= ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@222 $generated@@260) ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@239 $generated@@260)))
 :pattern ( ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@222 $generated@@260))
))) (and ($generated@@48 $generated@@239 $generated@@222) (= $generated@@236 (+ $generated@@244 $generated@@247)))))) (and (=> (= (ControlFlow 0 12) 2) $generated@@257) (=> (= (ControlFlow 0 12) 11) $generated@@256))))))
(let (($generated@@261  (=> (and (and (not ($generated@@26 $generated@@218 $generated@@32)) (= $generated@@248 ($generated@@78 9))) (and (= $generated@@245 $generated@@248) (= (ControlFlow 0 14) 12))) $generated@@258)))
(let (($generated@@262  (=> ($generated@@26 $generated@@218 $generated@@32) (=> (and (= $generated@@245 $generated@@237) (= (ControlFlow 0 13) 12)) $generated@@258))))
(let (($generated@@263  (=> (and (= $generated@@249 ($generated@@165 $generated@@242 $generated@@243 $generated@@3 false)) ($generated@@151 $generated@@218)) (and (=> (= (ControlFlow 0 15) 13) $generated@@262) (=> (= (ControlFlow 0 15) 14) $generated@@261)))))
(let (($generated@@264  (=> (and (and (and ($generated@@36 $generated@@243) ($generated@@240 $generated@@243)) (and ($generated@@39 $generated@@34 $generated@@218 ($generated@@35 $generated@@221)) ($generated@@33 $generated@@34 $generated@@218 ($generated@@35 $generated@@221) $generated@@243))) (and (and ($generated@@39 $generated@@34 $generated@@250 ($generated@@35 $generated@@221)) ($generated@@33 $generated@@34 $generated@@250 ($generated@@35 $generated@@221) $generated@@243)) (and (= 1 $generated@@251) (= (ControlFlow 0 16) 15)))) $generated@@263)))
$generated@@264))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
