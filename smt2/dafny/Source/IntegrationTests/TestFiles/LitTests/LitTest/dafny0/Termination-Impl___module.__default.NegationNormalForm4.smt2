(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U T@U) T@U)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@54 (T@U) Int)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@89 (T@U Int) T@U)
(declare-fun $generated@@92 (Int) Int)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) Bool)
(declare-fun $generated@@103 (T@U T@U) Bool)
(declare-fun $generated@@104 (T@U Int) T@U)
(declare-fun $generated@@108 (T@T T@U) T@U)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@115 (T@T T@U T@U) Bool)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@118 (T@U T@U) Bool)
(declare-fun $generated@@122 (T@U) Int)
(declare-fun $generated@@125 (T@U T@U T@U) Bool)
(declare-fun $generated@@126 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@183 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (forall (($generated@@20 T@U) ($generated@@21 T@U) ) (! ($generated@@19 ($generated@@18 $generated@@20 $generated@@21) $generated@@21)
 :pattern ( ($generated@@18 $generated@@20 $generated@@21))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (!  (=> ($generated@@19 $generated@@22 $generated@@24) ($generated@@19 ($generated@@18 $generated@@22 $generated@@23) $generated@@24))
 :pattern ( ($generated@@18 $generated@@22 $generated@@23) ($generated@@19 $generated@@22 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@19 $generated@@26 $generated@@28) ($generated@@19 ($generated@@25 $generated@@26 $generated@@27) $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@19 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@19 $generated@@30 $generated@@31) ($generated@@19 ($generated@@25 $generated@@29 $generated@@30) $generated@@31))
 :pattern ( ($generated@@25 $generated@@29 $generated@@30) ($generated@@19 $generated@@30 $generated@@31))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@19 ($generated@@18 $generated@@32 $generated@@33) $generated@@34)  (or (= $generated@@34 $generated@@33) ($generated@@19 $generated@@32 $generated@@34)))
 :pattern ( ($generated@@19 ($generated@@18 $generated@@32 $generated@@33) $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@19 $generated@@37 $generated@@38) (not ($generated@@19 ($generated@@35 $generated@@36 $generated@@37) $generated@@38)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37) ($generated@@19 $generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ) (!  (not ($generated@@19 $generated@@39 $generated@@40))
 :pattern ( ($generated@@19 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@19 ($generated@@41 $generated@@42 $generated@@43) $generated@@44)  (and ($generated@@19 $generated@@42 $generated@@44) ($generated@@19 $generated@@43 $generated@@44)))
 :pattern ( ($generated@@19 ($generated@@41 $generated@@42 $generated@@43) $generated@@44))
)))
(assert (= ($generated@@45 $generated@@46) 0))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@25 ($generated@@25 $generated@@47 $generated@@48) $generated@@48) ($generated@@25 $generated@@47 $generated@@48))
 :pattern ( ($generated@@25 ($generated@@25 $generated@@47 $generated@@48) $generated@@48))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@41 ($generated@@41 $generated@@49 $generated@@50) $generated@@50) ($generated@@41 $generated@@49 $generated@@50))
 :pattern ( ($generated@@41 ($generated@@41 $generated@@49 $generated@@50) $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@19 ($generated@@35 $generated@@51 $generated@@52) $generated@@53)  (and ($generated@@19 $generated@@51 $generated@@53) (not ($generated@@19 $generated@@52 $generated@@53))))
 :pattern ( ($generated@@19 ($generated@@35 $generated@@51 $generated@@52) $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (!  (and (= (= ($generated@@54 $generated@@55) 0) (= $generated@@55 $generated@@39)) (=> (or (not (= ($generated@@54 $generated@@55) 0)) (not true)) (exists (($generated@@56 T@U) ) (! ($generated@@19 $generated@@55 $generated@@56)
 :pattern ( ($generated@@19 $generated@@55 $generated@@56))
))))
 :pattern ( ($generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= (+ ($generated@@54 ($generated@@25 $generated@@57 $generated@@58)) ($generated@@54 ($generated@@41 $generated@@57 $generated@@58))) (+ ($generated@@54 $generated@@57) ($generated@@54 $generated@@58)))
 :pattern ( ($generated@@54 ($generated@@25 $generated@@57 $generated@@58)))
 :pattern ( ($generated@@54 ($generated@@41 $generated@@57 $generated@@58)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@60 $generated@@69 $generated@@70 ($generated@@66 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@73) $generated@@71)
 :weight 0
)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (or (= $generated@@78 $generated@@79) (= ($generated@@60 $generated@@74 $generated@@75 ($generated@@66 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@76) $generated@@79) ($generated@@60 $generated@@74 $generated@@75 $generated@@77 $generated@@79)))
 :weight 0
))) (= ($generated@@2 $generated@@61) 3)) (= ($generated@@2 $generated@@62) 4)) (= ($generated@@2 $generated@@63) 5)) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@2 ($generated@@64 $generated@@80 $generated@@81)) 6))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@64 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@68 ($generated@@64 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@64 $generated@@84 $generated@@85))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@59 $generated@@86 $generated@@87) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@7 ($generated@@65 $generated@@3 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@86 $generated@@88) $generated@@1))) ($generated@@7 ($generated@@65 $generated@@3 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@87 $generated@@88) $generated@@1))))
 :pattern ( ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@87 $generated@@88) $generated@@1))
)))
 :pattern ( ($generated@@59 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 Int) ) (!  (=> (= $generated@@91 0) (= ($generated@@89 $generated@@90 $generated@@91) $generated@@90))
 :pattern ( ($generated@@89 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 Int) ) (! (= ($generated@@92 $generated@@93) $generated@@93)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 $generated@@95) $generated@@95)
 :pattern ( ($generated@@94 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@97 $generated@@98 $generated@@99) (forall (($generated@@100 T@U) ) (!  (=> ($generated@@19 $generated@@98 $generated@@100) ($generated@@19 $generated@@99 $generated@@100))
 :pattern ( ($generated@@19 $generated@@98 $generated@@100))
 :pattern ( ($generated@@19 $generated@@99 $generated@@100))
)))
 :pattern ( ($generated@@97 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 Int) ) (!  (=> (and (<= 0 $generated@@102) (<= $generated@@102 ($generated@@45 $generated@@101))) (= ($generated@@45 ($generated@@89 $generated@@101 $generated@@102)) (- ($generated@@45 $generated@@101) $generated@@102)))
 :pattern ( ($generated@@45 ($generated@@89 $generated@@101 $generated@@102)))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@103 $generated@@105 $generated@@106)  (and (= ($generated@@45 $generated@@105) ($generated@@45 $generated@@106)) (forall (($generated@@107 Int) ) (!  (=> (and (<= 0 $generated@@107) (< $generated@@107 ($generated@@45 $generated@@105))) (= ($generated@@104 $generated@@105 $generated@@107) ($generated@@104 $generated@@106 $generated@@107)))
 :pattern ( ($generated@@104 $generated@@105 $generated@@107))
 :pattern ( ($generated@@104 $generated@@106 $generated@@107))
))))
 :pattern ( ($generated@@103 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@108 $generated@@110 ($generated@@65 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@65 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@111 $generated@@112 $generated@@113) (forall (($generated@@114 T@U) ) (!  (or (not ($generated@@19 $generated@@112 $generated@@114)) (not ($generated@@19 $generated@@113 $generated@@114)))
 :pattern ( ($generated@@19 $generated@@112 $generated@@114))
 :pattern ( ($generated@@19 $generated@@113 $generated@@114))
)))
 :pattern ( ($generated@@111 $generated@@112 $generated@@113))
)))
(assert (= ($generated@@2 $generated@@116) 7))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@115 $generated@@116 $generated@@119 ($generated@@117 $generated@@120)) (forall (($generated@@121 T@U) ) (!  (=> ($generated@@19 $generated@@119 $generated@@121) ($generated@@118 $generated@@121 $generated@@120))
 :pattern ( ($generated@@19 $generated@@119 $generated@@121))
)))
 :pattern ( ($generated@@115 $generated@@116 $generated@@119 ($generated@@117 $generated@@120)))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 Int) ) (!  (=> (and (< 0 $generated@@124) (<= $generated@@124 ($generated@@45 $generated@@123))) (< ($generated@@122 ($generated@@89 $generated@@123 $generated@@124)) ($generated@@122 $generated@@123)))
 :pattern ( ($generated@@122 ($generated@@89 $generated@@123 $generated@@124)))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@125 ($generated@@108 $generated@@130 $generated@@127) $generated@@128 $generated@@129) ($generated@@126 $generated@@130 $generated@@127 $generated@@128 $generated@@129))
 :pattern ( ($generated@@125 ($generated@@108 $generated@@130 $generated@@127) $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> ($generated@@59 $generated@@131 $generated@@132) (=> ($generated@@125 $generated@@133 $generated@@134 $generated@@131) ($generated@@125 $generated@@133 $generated@@134 $generated@@132)))
 :pattern ( ($generated@@59 $generated@@131 $generated@@132) ($generated@@125 $generated@@133 $generated@@134 $generated@@131))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@T) ) (!  (=> ($generated@@59 $generated@@135 $generated@@136) (=> ($generated@@126 $generated@@139 $generated@@137 $generated@@138 $generated@@135) ($generated@@126 $generated@@139 $generated@@137 $generated@@138 $generated@@136)))
 :pattern ( ($generated@@59 $generated@@135 $generated@@136) ($generated@@126 $generated@@139 $generated@@137 $generated@@138 $generated@@135))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 Int) ($generated@@142 Int) ) (!  (=> (and (and (<= 0 $generated@@141) (<= 0 $generated@@142)) (< $generated@@142 (- ($generated@@45 $generated@@140) $generated@@141))) (= ($generated@@104 ($generated@@89 $generated@@140 $generated@@141) $generated@@142) ($generated@@104 $generated@@140 (+ $generated@@142 $generated@@141))))
 :weight 25
 :pattern ( ($generated@@104 ($generated@@89 $generated@@140 $generated@@141) $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@19 ($generated@@25 $generated@@143 $generated@@144) $generated@@145)  (or ($generated@@19 $generated@@143 $generated@@145) ($generated@@19 $generated@@144 $generated@@145)))
 :pattern ( ($generated@@19 ($generated@@25 $generated@@143 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@111 $generated@@146 $generated@@147) (and (= ($generated@@35 ($generated@@25 $generated@@146 $generated@@147) $generated@@146) $generated@@147) (= ($generated@@35 ($generated@@25 $generated@@146 $generated@@147) $generated@@147) $generated@@146)))
 :pattern ( ($generated@@25 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> ($generated@@103 $generated@@148 $generated@@149) (= $generated@@148 $generated@@149))
 :pattern ( ($generated@@103 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (or (not (= $generated@@150 $generated@@152)) (not true)) (=> (and ($generated@@59 $generated@@150 $generated@@151) ($generated@@59 $generated@@151 $generated@@152)) ($generated@@59 $generated@@150 $generated@@152)))
 :pattern ( ($generated@@59 $generated@@150 $generated@@151) ($generated@@59 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (and (= (+ (+ ($generated@@54 ($generated@@35 $generated@@153 $generated@@154)) ($generated@@54 ($generated@@35 $generated@@154 $generated@@153))) ($generated@@54 ($generated@@41 $generated@@153 $generated@@154))) ($generated@@54 ($generated@@25 $generated@@153 $generated@@154))) (= ($generated@@54 ($generated@@35 $generated@@153 $generated@@154)) (- ($generated@@54 $generated@@153) ($generated@@54 ($generated@@41 $generated@@153 $generated@@154)))))
 :pattern ( ($generated@@54 ($generated@@35 $generated@@153 $generated@@154)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@118 ($generated@@108 $generated@@157 $generated@@155) $generated@@156) ($generated@@115 $generated@@157 $generated@@155 $generated@@156))
 :pattern ( ($generated@@118 ($generated@@108 $generated@@157 $generated@@155) $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (<= 0 ($generated@@54 $generated@@158))
 :pattern ( ($generated@@54 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (! (<= 0 ($generated@@45 $generated@@159))
 :pattern ( ($generated@@45 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@126 $generated@@116 $generated@@160 ($generated@@117 $generated@@161) $generated@@162) (forall (($generated@@163 T@U) ) (!  (=> ($generated@@19 $generated@@160 $generated@@163) ($generated@@125 $generated@@163 $generated@@161 $generated@@162))
 :pattern ( ($generated@@19 $generated@@160 $generated@@163))
)))
 :pattern ( ($generated@@126 $generated@@116 $generated@@160 ($generated@@117 $generated@@161) $generated@@162))
)))
(assert (= ($generated@@2 $generated@@164) 8))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@126 $generated@@164 $generated@@166 ($generated@@165 $generated@@167) $generated@@168) (forall (($generated@@169 Int) ) (!  (=> (and (<= 0 $generated@@169) (< $generated@@169 ($generated@@45 $generated@@166))) ($generated@@125 ($generated@@104 $generated@@166 $generated@@169) $generated@@167 $generated@@168))
 :pattern ( ($generated@@104 $generated@@166 $generated@@169))
)))
 :pattern ( ($generated@@126 $generated@@164 $generated@@166 ($generated@@165 $generated@@167) $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@170 ($generated@@117 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@117 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@172 ($generated@@117 $generated@@173)) $generated)
 :pattern ( ($generated@@117 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@174 ($generated@@165 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@165 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@172 ($generated@@165 $generated@@176)) $generated@@0)
 :pattern ( ($generated@@165 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@65 $generated@@178 ($generated@@108 $generated@@178 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@108 $generated@@178 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@25 $generated@@179 ($generated@@25 $generated@@179 $generated@@180)) ($generated@@25 $generated@@179 $generated@@180))
 :pattern ( ($generated@@25 $generated@@179 ($generated@@25 $generated@@179 $generated@@180)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@41 $generated@@181 ($generated@@41 $generated@@181 $generated@@182)) ($generated@@41 $generated@@181 $generated@@182))
 :pattern ( ($generated@@41 $generated@@181 ($generated@@41 $generated@@181 $generated@@182)))
)))
(assert  (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@183 $generated@@186 $generated@@187 $generated@@188 ($generated@@185 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@191 $generated@@192) $generated@@189)
 :weight 0
)) (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@183 $generated@@193 $generated@@194 $generated@@195 ($generated@@185 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@183 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@183 $generated@@202 $generated@@203 $generated@@204 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@183 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (= ($generated@@7 ($generated@@183 $generated@@63 $generated@@61 $generated@@3 ($generated@@184 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (or (not (= $generated@@215 $generated@@211)) (not true)) ($generated@@7 ($generated@@65 $generated@@3 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@212 $generated@@215) $generated@@213)))) $generated@@214))
 :pattern ( ($generated@@183 $generated@@63 $generated@@61 $generated@@3 ($generated@@184 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> ($generated@@118 $generated@@217 ($generated@@117 $generated@@218)) (and (= ($generated@@108 $generated@@116 ($generated@@65 $generated@@116 $generated@@217)) $generated@@217) ($generated@@115 $generated@@116 ($generated@@65 $generated@@116 $generated@@217) ($generated@@117 $generated@@218))))
 :pattern ( ($generated@@118 $generated@@217 ($generated@@117 $generated@@218)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> ($generated@@118 $generated@@219 ($generated@@165 $generated@@220)) (and (= ($generated@@108 $generated@@164 ($generated@@65 $generated@@164 $generated@@219)) $generated@@219) ($generated@@115 $generated@@164 ($generated@@65 $generated@@164 $generated@@219) ($generated@@165 $generated@@220))))
 :pattern ( ($generated@@118 $generated@@219 ($generated@@165 $generated@@220)))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> ($generated@@19 $generated@@221 $generated@@222) (= ($generated@@54 ($generated@@18 $generated@@221 $generated@@222)) ($generated@@54 $generated@@221)))
 :pattern ( ($generated@@54 ($generated@@18 $generated@@221 $generated@@222)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 Int) ($generated@@225 Int) ) (!  (=> (and (and (<= 0 $generated@@224) (<= $generated@@224 $generated@@225)) (< $generated@@225 ($generated@@45 $generated@@223))) (= ($generated@@104 ($generated@@89 $generated@@223 $generated@@224) (- $generated@@225 $generated@@224)) ($generated@@104 $generated@@223 $generated@@225)))
 :weight 25
 :pattern ( ($generated@@104 $generated@@223 $generated@@225) ($generated@@89 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 Int) ($generated@@228 Int) ) (!  (=> (and (and (<= 0 $generated@@227) (<= 0 $generated@@228)) (<= (+ $generated@@227 $generated@@228) ($generated@@45 $generated@@226))) (= ($generated@@89 ($generated@@89 $generated@@226 $generated@@227) $generated@@228) ($generated@@89 $generated@@226 (+ $generated@@227 $generated@@228))))
 :pattern ( ($generated@@89 ($generated@@89 $generated@@226 $generated@@227) $generated@@228))
)))
(assert (forall (($generated@@229 Int) ) (! (= ($generated@@108 $generated@@4 ($generated@@8 ($generated@@92 $generated@@229))) ($generated@@94 $generated@@62 ($generated@@108 $generated@@4 ($generated@@8 $generated@@229))))
 :pattern ( ($generated@@108 $generated@@4 ($generated@@8 ($generated@@92 $generated@@229))))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@T) ) (! (= ($generated@@108 $generated@@231 ($generated@@94 $generated@@231 $generated@@230)) ($generated@@94 $generated@@62 ($generated@@108 $generated@@231 $generated@@230)))
 :pattern ( ($generated@@108 $generated@@231 ($generated@@94 $generated@@231 $generated@@230)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= ($generated@@45 $generated@@232) 0) (= $generated@@232 $generated@@46))
 :pattern ( ($generated@@45 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= ($generated@@115 $generated@@164 $generated@@233 ($generated@@165 $generated@@234)) (forall (($generated@@235 Int) ) (!  (=> (and (<= 0 $generated@@235) (< $generated@@235 ($generated@@45 $generated@@233))) ($generated@@118 ($generated@@104 $generated@@233 $generated@@235) $generated@@234))
 :pattern ( ($generated@@104 $generated@@233 $generated@@235))
)))
 :pattern ( ($generated@@115 $generated@@164 $generated@@233 ($generated@@165 $generated@@234)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (not ($generated@@19 $generated@@236 $generated@@237)) (= ($generated@@54 ($generated@@18 $generated@@236 $generated@@237)) (+ ($generated@@54 $generated@@236) 1)))
 :pattern ( ($generated@@54 ($generated@@18 $generated@@236 $generated@@237)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () Bool)
(declare-fun $generated@@241 () Bool)
(declare-fun $generated@@242 () Int)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () Int)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () Bool)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () Int)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () Int)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () Int)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () Bool)
(declare-fun $generated@@267 () Int)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 39) (let (($generated@@274 true))
(let (($generated@@275  (=> (and (not (and (and (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) (not ($generated@@103 $generated@@239 $generated@@46))) $generated@@240)) (= (ControlFlow 0 26) 24)) $generated@@274)))
(let (($generated@@276  (=> (and (and (and (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) (not ($generated@@103 $generated@@239 $generated@@46))) $generated@@240) (= (ControlFlow 0 25) 24)) $generated@@274)))
(let (($generated@@277  (=> (not (and (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) (not ($generated@@103 $generated@@239 $generated@@46)))) (and (=> (= (ControlFlow 0 28) 25) $generated@@276) (=> (= (ControlFlow 0 28) 26) $generated@@275)))))
(let (($generated@@278  (=> (and (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) (not ($generated@@103 $generated@@239 $generated@@46))) (and (=> (= (ControlFlow 0 27) 25) $generated@@276) (=> (= (ControlFlow 0 27) 26) $generated@@275)))))
(let (($generated@@279  (=> (not (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39)))) (and (=> (= (ControlFlow 0 30) 27) $generated@@278) (=> (= (ControlFlow 0 30) 28) $generated@@277)))))
(let (($generated@@280  (=> (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) (and (=> (= (ControlFlow 0 29) 27) $generated@@278) (=> (= (ControlFlow 0 29) 28) $generated@@277)))))
(let (($generated@@281  (and (=> (= (ControlFlow 0 31) 29) $generated@@280) (=> (= (ControlFlow 0 31) 30) $generated@@279))))
(let (($generated@@282  (=> (and (not (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39)))) (= (ControlFlow 0 33) 31)) $generated@@281)))
(let (($generated@@283  (=> (and (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) (= (ControlFlow 0 32) 31)) $generated@@281)))
(let (($generated@@284  (=> (and (not $generated@@241) (= $generated@@242 ($generated@@54 $generated@@238))) (and (=> (= (ControlFlow 0 34) (- 0 35)) (<= ($generated@@92 0) $generated@@242)) (=> (<= ($generated@@92 0) $generated@@242) (and (=> (= (ControlFlow 0 34) 32) $generated@@283) (=> (= (ControlFlow 0 34) 33) $generated@@282)))))))
(let (($generated@@285  (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (<= 0 $generated@@243) (= ($generated@@54 $generated@@244) $generated@@243))) (=> (or (<= 0 $generated@@243) (= ($generated@@54 $generated@@244) $generated@@243)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (or (or (<= 0 $generated@@245) (< ($generated@@54 $generated@@244) $generated@@243)) (< ($generated@@122 (ite  (and ($generated@@97 $generated@@39 $generated@@244) (not ($generated@@97 $generated@@244 $generated@@39))) $generated@@246 $generated@@46)) ($generated@@122 $generated@@247))) (= (ite  (and (and (and ($generated@@97 $generated@@39 $generated@@244) (not ($generated@@97 $generated@@244 $generated@@39))) (not ($generated@@103 $generated@@246 $generated@@46))) $generated@@248) (- 1000 $generated@@249) (- 0 1)) $generated@@245))) (=> (or (or (or (<= 0 $generated@@245) (< ($generated@@54 $generated@@244) $generated@@243)) (< ($generated@@122 (ite  (and ($generated@@97 $generated@@39 $generated@@244) (not ($generated@@97 $generated@@244 $generated@@39))) $generated@@246 $generated@@46)) ($generated@@122 $generated@@247))) (= (ite  (and (and (and ($generated@@97 $generated@@39 $generated@@244) (not ($generated@@97 $generated@@244 $generated@@39))) (not ($generated@@103 $generated@@246 $generated@@46))) $generated@@248) (- 1000 $generated@@249) (- 0 1)) $generated@@245)) (=> (= (ControlFlow 0 6) (- 0 5)) (or (< ($generated@@54 $generated@@244) $generated@@243) (and (= ($generated@@54 $generated@@244) $generated@@243) (or (< ($generated@@122 (ite  (and ($generated@@97 $generated@@39 $generated@@244) (not ($generated@@97 $generated@@244 $generated@@39))) $generated@@246 $generated@@46)) ($generated@@122 $generated@@247)) (and (= ($generated@@122 (ite  (and ($generated@@97 $generated@@39 $generated@@244) (not ($generated@@97 $generated@@244 $generated@@39))) $generated@@246 $generated@@46)) ($generated@@122 $generated@@247)) (< (ite  (and (and (and ($generated@@97 $generated@@39 $generated@@244) (not ($generated@@97 $generated@@244 $generated@@39))) (not ($generated@@103 $generated@@246 $generated@@46))) $generated@@248) (- 1000 $generated@@249) (- 0 1)) $generated@@245))))))))))))
(let (($generated@@286  (=> (and ($generated@@19 $generated@@238 $generated@@250) (= $generated@@251 ($generated@@35 $generated@@238 ($generated@@18 $generated@@39 $generated@@250)))) (=> (and (and (= $generated@@246 $generated@@239) (= $generated@@249 $generated@@252)) (and (= $generated@@244 $generated@@251) (= (ControlFlow 0 12) 6))) $generated@@285))))
(let (($generated@@287  (=> (and (not (and ($generated@@118 $generated@@253 $generated@@254) ($generated@@125 $generated@@253 $generated@@254 $generated@@255))) (= (ControlFlow 0 14) 12)) $generated@@286)))
(let (($generated@@288  (=> (and (and ($generated@@118 $generated@@253 $generated@@254) ($generated@@125 $generated@@253 $generated@@254 $generated@@255)) (= (ControlFlow 0 13) 12)) $generated@@286)))
(let (($generated@@289  (=> (and (< $generated@@252 123456) (= $generated@@256 (+ $generated@@252 1))) (=> (and (and (= $generated@@246 $generated@@239) (= $generated@@249 $generated@@256)) (and (= $generated@@244 $generated@@238) (= (ControlFlow 0 11) 6))) $generated@@285))))
(let (($generated@@290  (=> (> ($generated@@45 $generated@@239) 0) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 ($generated@@92 1)) (<= ($generated@@92 1) ($generated@@45 $generated@@239)))) (=> (and (<= 0 ($generated@@92 1)) (<= ($generated@@92 1) ($generated@@45 $generated@@239))) (=> (= $generated@@257 ($generated@@89 $generated@@239 ($generated@@92 1))) (=> (and (and (= $generated@@246 $generated@@257) (= $generated@@249 $generated@@252)) (and (= $generated@@244 $generated@@238) (= (ControlFlow 0 9) 6))) $generated@@285)))))))
(let (($generated@@291  (=> (and (and (and (not (exists (($generated@@292 T@U) )  (and ($generated@@118 $generated@@292 $generated@@254) ($generated@@19 $generated@@238 $generated@@292)))) (>= 0 ($generated@@45 $generated@@239))) (<= 123456 $generated@@252)) (= (ControlFlow 0 4) (- 0 3))) false)))
(let (($generated@@293  (=> (and (and (and (and (not (=> (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) (not (not ($generated@@103 $generated@@239 $generated@@46))))) $generated@@240) (not (not (< $generated@@252 1000)))) (= $generated@@243 ($generated@@54 $generated@@238))) (and (and (= $generated@@247 (ite  (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) $generated@@239 $generated@@46)) (= $generated@@245 (ite  (and (and (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) (not ($generated@@103 $generated@@239 $generated@@46))) $generated@@240) (- 1000 $generated@@252) (- 0 1)))) (and ($generated@@118 $generated@@250 $generated@@254) ($generated@@125 $generated@@250 $generated@@254 $generated@@255)))) (and (and (and (and (=> (= (ControlFlow 0 15) 9) $generated@@290) (=> (= (ControlFlow 0 15) 11) $generated@@289)) (=> (= (ControlFlow 0 15) 4) $generated@@291)) (=> (= (ControlFlow 0 15) 13) $generated@@288)) (=> (= (ControlFlow 0 15) 14) $generated@@287)))))
(let (($generated@@294 true))
(let (($generated@@295  (and (=> (= (ControlFlow 0 16) 2) $generated@@294) (=> (= (ControlFlow 0 16) 15) $generated@@293))))
(let (($generated@@296  (=> (and (not (and (not (=> (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) (not (not ($generated@@103 $generated@@239 $generated@@46))))) $generated@@240)) (= (ControlFlow 0 18) 16)) $generated@@295)))
(let (($generated@@297  (=> (and (and (not (=> (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) (not (not ($generated@@103 $generated@@239 $generated@@46))))) $generated@@240) (= (ControlFlow 0 17) 16)) $generated@@295)))
(let (($generated@@298  (=> (=> (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) (not (not ($generated@@103 $generated@@239 $generated@@46)))) (and (=> (= (ControlFlow 0 20) 17) $generated@@297) (=> (= (ControlFlow 0 20) 18) $generated@@296)))))
(let (($generated@@299  (=> (not (=> (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) (not (not ($generated@@103 $generated@@239 $generated@@46))))) (and (=> (= (ControlFlow 0 19) 17) $generated@@297) (=> (= (ControlFlow 0 19) 18) $generated@@296)))))
(let (($generated@@300  (=> (not (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39)))) (and (=> (= (ControlFlow 0 22) 19) $generated@@299) (=> (= (ControlFlow 0 22) 20) $generated@@298)))))
(let (($generated@@301  (=> (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) (and (=> (= (ControlFlow 0 21) 19) $generated@@299) (=> (= (ControlFlow 0 21) 20) $generated@@298)))))
(let (($generated@@302  (=> $generated@@241 (and (=> (= (ControlFlow 0 23) 21) $generated@@301) (=> (= (ControlFlow 0 23) 22) $generated@@300)))))
(let (($generated@@303  (and (=> (= (ControlFlow 0 36) 34) $generated@@284) (=> (= (ControlFlow 0 36) 23) $generated@@302))))
(let (($generated@@304 true))
(let (($generated@@305  (=> (and (and ($generated@@115 $generated@@164 $generated@@239 ($generated@@165 $generated@@254)) ($generated@@126 $generated@@164 $generated@@239 ($generated@@165 $generated@@254) $generated@@255)) (and ($generated@@115 $generated@@116 $generated@@238 ($generated@@117 $generated@@254)) ($generated@@126 $generated@@116 $generated@@238 ($generated@@117 $generated@@254) $generated@@255))) (=> (and (and (and ($generated@@118 $generated@@258 $generated@@254) ($generated@@125 $generated@@258 $generated@@254 $generated@@255)) (and (not false) (forall (($generated@@306 T@U) ) (!  (=> (and (or (not (= $generated@@306 $generated@@259)) (not true)) ($generated@@7 ($generated@@65 $generated@@3 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@255 $generated@@306) $generated@@1)))) (= ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@255 $generated@@306) ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@255 $generated@@306)))
 :pattern ( ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@255 $generated@@306))
)))) (and (and ($generated@@59 $generated@@255 $generated@@255) (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (or (not (= $generated@@307 $generated@@259)) (not true)) ($generated@@7 ($generated@@65 $generated@@3 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@255 $generated@@307) $generated@@1)))) (or (= ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@255 $generated@@307) $generated@@308) ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@255 $generated@@307) $generated@@308)) ($generated@@7 ($generated@@183 $generated@@63 $generated@@61 $generated@@3 $generated@@260 $generated@@307 $generated@@308))))
 :pattern ( ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@255 $generated@@307) $generated@@308))
))) (and (<= ($generated@@54 $generated@@238) $generated@@261) (=> (= ($generated@@54 $generated@@238) $generated@@261) (and (<= ($generated@@122 (ite  (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) $generated@@239 $generated@@46)) ($generated@@122 $generated@@262)) (=> (= ($generated@@122 (ite  (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) $generated@@239 $generated@@46)) ($generated@@122 $generated@@262)) (<= (ite  (and (and (and ($generated@@97 $generated@@39 $generated@@238) (not ($generated@@97 $generated@@238 $generated@@39))) (not ($generated@@103 $generated@@239 $generated@@46))) $generated@@240) (- 1000 $generated@@252) (- 0 1)) $generated@@263))))))) (and (=> (= (ControlFlow 0 37) 1) $generated@@304) (=> (= (ControlFlow 0 37) 36) $generated@@303))))))
(let (($generated@@309  (=> (= $generated@@260 ($generated@@184 $generated@@259 $generated@@255 $generated@@1 false)) (=> (and (and (= $generated@@261 ($generated@@54 $generated@@264)) (= $generated@@262 (ite  (and ($generated@@97 $generated@@39 $generated@@264) (not ($generated@@97 $generated@@264 $generated@@39))) $generated@@265 $generated@@46))) (and (= $generated@@263 (ite  (and (and (and ($generated@@97 $generated@@39 $generated@@264) (not ($generated@@97 $generated@@264 $generated@@39))) (not ($generated@@103 $generated@@265 $generated@@46))) $generated@@266) (- 1000 $generated@@267) (- 0 1))) (= (ControlFlow 0 38) 37))) $generated@@305))))
(let (($generated@@310  (=> (and (and (and ($generated@@268 $generated@@255) ($generated@@269 $generated@@255)) (and ($generated@@115 $generated@@116 $generated@@264 ($generated@@117 $generated@@254)) ($generated@@126 $generated@@116 $generated@@264 ($generated@@117 $generated@@254) $generated@@255))) (and (and ($generated@@115 $generated@@164 $generated@@265 ($generated@@165 $generated@@254)) ($generated@@126 $generated@@164 $generated@@265 ($generated@@165 $generated@@254) $generated@@255)) (<= ($generated@@92 0) $generated@@267))) (=> (and (and (and (and ($generated@@115 $generated@@116 $generated@@270 ($generated@@117 $generated@@254)) ($generated@@126 $generated@@116 $generated@@270 ($generated@@117 $generated@@254) $generated@@255)) true) (and (and ($generated@@115 $generated@@164 $generated@@271 ($generated@@165 $generated@@254)) ($generated@@126 $generated@@164 $generated@@271 ($generated@@165 $generated@@254) $generated@@255)) true)) (and (and (and ($generated@@118 $generated@@272 $generated@@254) ($generated@@125 $generated@@272 $generated@@254 $generated@@255)) true) (and (= 0 $generated@@273) (= (ControlFlow 0 39) 38)))) $generated@@309))))
$generated@@310))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
