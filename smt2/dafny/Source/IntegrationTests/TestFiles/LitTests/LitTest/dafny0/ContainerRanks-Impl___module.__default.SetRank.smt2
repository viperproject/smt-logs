(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@62 (T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@100 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@T T@T) T@T)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@22 ($generated@@21 $generated@@23 $generated@@24) $generated@@24)
 :pattern ( ($generated@@21 $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@22 $generated@@25 $generated@@27) ($generated@@22 ($generated@@21 $generated@@25 $generated@@26) $generated@@27))
 :pattern ( ($generated@@21 $generated@@25 $generated@@26) ($generated@@22 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@22 ($generated@@21 $generated@@28 $generated@@29) $generated@@30)  (or (= $generated@@30 $generated@@29) ($generated@@22 $generated@@28 $generated@@30)))
 :pattern ( ($generated@@22 ($generated@@21 $generated@@28 $generated@@29) $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ) (!  (not ($generated@@22 $generated@@31 $generated@@32))
 :pattern ( ($generated@@22 $generated@@31 $generated@@32))
)))
(assert (= ($generated@@33 $generated@@34) $generated@@2))
(assert (= ($generated@@5 $generated@@36) 3))
(assert ($generated@@35 $generated@@36 $generated@@34 $generated@@37))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@40) (= $generated@@39 $generated@@40))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ) (! (= ($generated@@44 $generated@@45) (= ($generated@@33 $generated@@45) $generated@@2))
 :pattern ( ($generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ) (! (= ($generated@@46 $generated@@47) (= ($generated@@33 $generated@@47) $generated@@3))
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 ($generated@@48 $generated@@51 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@48 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (!  (=> ($generated@@44 $generated@@52) (= $generated@@52 $generated@@34))
 :pattern ( ($generated@@44 $generated@@52))
)))
(assert (= ($generated@@5 $generated@@53) 4))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@35 $generated@@53 $generated@@56 ($generated@@54 $generated@@57)) (forall (($generated@@58 T@U) ) (!  (=> ($generated@@22 $generated@@56 $generated@@58) ($generated@@55 $generated@@58 $generated@@57))
 :pattern ( ($generated@@22 $generated@@56 $generated@@58))
)))
 :pattern ( ($generated@@35 $generated@@53 $generated@@56 ($generated@@54 $generated@@57)))
)))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@46 $generated@@60) (exists (($generated@@61 T@U) ) (= $generated@@60 ($generated@@59 $generated@@61))))
 :pattern ( ($generated@@46 $generated@@60))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@62 ($generated@@49 $generated@@67 $generated@@64) $generated@@65 $generated@@66) ($generated@@63 $generated@@67 $generated@@64 $generated@@65 $generated@@66))
 :pattern ( ($generated@@62 ($generated@@49 $generated@@67 $generated@@64) $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@55 $generated@@68 $generated@@37) (and (= ($generated@@49 $generated@@36 ($generated@@48 $generated@@36 $generated@@68)) $generated@@68) ($generated@@35 $generated@@36 ($generated@@48 $generated@@36 $generated@@68) $generated@@37)))
 :pattern ( ($generated@@55 $generated@@68 $generated@@37))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (and ($generated@@46 $generated@@71) ($generated@@46 $generated@@72)) (= ($generated@@38 $generated@@71 $generated@@72) ($generated@@69 ($generated@@70 $generated@@71) ($generated@@70 $generated@@72))))
 :pattern ( ($generated@@38 $generated@@71 $generated@@72) ($generated@@46 $generated@@71))
 :pattern ( ($generated@@38 $generated@@71 $generated@@72) ($generated@@46 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@73 $generated@@74) (or ($generated@@44 $generated@@74) ($generated@@46 $generated@@74)))
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@35 $generated@@36 ($generated@@59 $generated@@75) $generated@@37) ($generated@@35 $generated@@53 $generated@@75 ($generated@@54 $generated@@37)))
 :pattern ( ($generated@@35 $generated@@36 ($generated@@59 $generated@@75) $generated@@37))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> ($generated@@69 $generated@@76 $generated@@77) (= $generated@@76 $generated@@77))
 :pattern ( ($generated@@69 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@35 $generated@@36 $generated@@78 $generated@@37) (or ($generated@@44 $generated@@78) ($generated@@46 $generated@@78)))
 :pattern ( ($generated@@46 $generated@@78) ($generated@@35 $generated@@36 $generated@@78 $generated@@37))
 :pattern ( ($generated@@44 $generated@@78) ($generated@@35 $generated@@36 $generated@@78 $generated@@37))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@55 ($generated@@49 $generated@@81 $generated@@79) $generated@@80) ($generated@@35 $generated@@81 $generated@@79 $generated@@80))
 :pattern ( ($generated@@55 ($generated@@49 $generated@@81 $generated@@79) $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and ($generated@@44 $generated@@82) ($generated@@44 $generated@@83)) ($generated@@38 $generated@@82 $generated@@83))
 :pattern ( ($generated@@38 $generated@@82 $generated@@83) ($generated@@44 $generated@@82))
 :pattern ( ($generated@@38 $generated@@82 $generated@@83) ($generated@@44 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@63 $generated@@53 $generated@@84 ($generated@@54 $generated@@85) $generated@@86) (forall (($generated@@87 T@U) ) (!  (=> ($generated@@22 $generated@@84 $generated@@87) ($generated@@62 $generated@@87 $generated@@85 $generated@@86))
 :pattern ( ($generated@@22 $generated@@84 $generated@@87))
)))
 :pattern ( ($generated@@63 $generated@@53 $generated@@84 ($generated@@54 $generated@@85) $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 ($generated@@54 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@54 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@90 ($generated@@54 $generated@@91)) $generated)
 :pattern ( ($generated@@54 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@33 ($generated@@59 $generated@@92)) $generated@@3)
 :pattern ( ($generated@@59 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@70 ($generated@@59 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@59 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@48 $generated@@95 ($generated@@49 $generated@@95 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@49 $generated@@95 $generated@@94))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@96 $generated@@107 $generated@@108 $generated@@109 ($generated@@103 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@112 $generated@@113) $generated@@110)
 :weight 0
)) (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@96 $generated@@114 $generated@@115 $generated@@116 ($generated@@103 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@96 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@96 $generated@@123 $generated@@124 $generated@@125 ($generated@@103 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)))) (= ($generated@@5 $generated@@97) 5)) (= ($generated@@5 $generated@@98) 6)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@100 $generated@@132 $generated@@133 ($generated@@104 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@134) $generated@@136) $generated@@134)
 :weight 0
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@100 $generated@@137 $generated@@138 ($generated@@104 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@100 $generated@@137 $generated@@138 $generated@@140 $generated@@142)))
 :weight 0
))) (= ($generated@@5 $generated@@101) 7)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (= ($generated@@5 ($generated@@102 $generated@@143 $generated@@144)) 8))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@105 ($generated@@102 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@102 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@106 ($generated@@102 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@102 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 Bool) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@10 ($generated@@96 $generated@@97 $generated@@98 $generated@@6 ($generated@@99 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@153 $generated@@154))  (=> (and (or (not (= $generated@@153 $generated@@149)) (not true)) ($generated@@10 ($generated@@48 $generated@@6 ($generated@@100 $generated@@98 $generated@@101 ($generated@@100 $generated@@97 ($generated@@102 $generated@@98 $generated@@101) $generated@@150 $generated@@153) $generated@@151)))) $generated@@152))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98 $generated@@6 ($generated@@99 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@55 $generated@@155 ($generated@@54 $generated@@156)) (and (= ($generated@@49 $generated@@53 ($generated@@48 $generated@@53 $generated@@155)) $generated@@155) ($generated@@35 $generated@@53 ($generated@@48 $generated@@53 $generated@@155) ($generated@@54 $generated@@156))))
 :pattern ( ($generated@@55 $generated@@155 ($generated@@54 $generated@@156)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and ($generated@@157 $generated@@159) ($generated@@35 $generated@@36 $generated@@158 $generated@@37)) ($generated@@63 $generated@@36 $generated@@158 $generated@@37 $generated@@159))
 :pattern ( ($generated@@63 $generated@@36 $generated@@158 $generated@@37 $generated@@159))
)))
(assert (= ($generated@@90 $generated@@37) $generated@@1))
(assert (= ($generated@@160 $generated@@37) $generated@@4))
(assert (= $generated@@34 ($generated@@41 $generated@@36 $generated@@34)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> ($generated@@22 $generated@@162 ($generated@@49 $generated@@36 $generated@@163)) (< ($generated@@161 $generated@@163) ($generated@@161 ($generated@@59 $generated@@162))))
 :pattern ( ($generated@@22 $generated@@162 ($generated@@49 $generated@@36 $generated@@163)) ($generated@@59 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@69 $generated@@164 $generated@@165) (forall (($generated@@166 T@U) ) (! (= ($generated@@22 $generated@@164 $generated@@166) ($generated@@22 $generated@@165 $generated@@166))
 :pattern ( ($generated@@22 $generated@@164 $generated@@166))
 :pattern ( ($generated@@22 $generated@@165 $generated@@166))
)))
 :pattern ( ($generated@@69 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@59 ($generated@@41 $generated@@53 $generated@@167)) ($generated@@41 $generated@@36 ($generated@@59 $generated@@167)))
 :pattern ( ($generated@@59 ($generated@@41 $generated@@53 $generated@@167)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@49 $generated@@169 ($generated@@41 $generated@@169 $generated@@168)) ($generated@@41 $generated@@101 ($generated@@49 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@49 $generated@@169 ($generated@@41 $generated@@169 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and ($generated@@157 $generated@@171) (and ($generated@@46 $generated@@170) ($generated@@63 $generated@@36 $generated@@170 $generated@@37 $generated@@171))) ($generated@@63 $generated@@53 ($generated@@70 $generated@@170) ($generated@@54 $generated@@37) $generated@@171))
 :pattern ( ($generated@@63 $generated@@53 ($generated@@70 $generated@@170) ($generated@@54 $generated@@37) $generated@@171))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@178  (=> (and (= $generated@@172 ($generated@@99 $generated@@173 $generated@@174 $generated@@0 false)) (= (ControlFlow 0 2) (- 0 1))) (not ($generated@@38 $generated@@175 ($generated@@59 ($generated@@21 $generated@@31 ($generated@@49 $generated@@36 $generated@@175))))))))
(let (($generated@@179  (=> (and ($generated@@157 $generated@@174) ($generated@@176 $generated@@174)) (=> (and (and (and ($generated@@35 $generated@@36 $generated@@175 $generated@@37) ($generated@@63 $generated@@36 $generated@@175 $generated@@37 $generated@@174)) ($generated@@73 $generated@@175)) (and (= 1 $generated@@177) (= (ControlFlow 0 3) 2))) $generated@@178))))
$generated@@179)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
