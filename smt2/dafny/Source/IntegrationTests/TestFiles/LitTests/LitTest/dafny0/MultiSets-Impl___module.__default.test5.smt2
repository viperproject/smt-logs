(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U T@U) T@U)
(declare-fun $generated@@0 (T@U T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@35 (T@U T@U) Int)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U) Int)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@U Int) T@U)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@81 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@85 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (forall (($generated@@17 T@U) ($generated@@18 T@U) ) (! ($generated@@0 ($generated $generated@@17 $generated@@18) $generated@@18)
 :pattern ( ($generated $generated@@17 $generated@@18))
)))
(assert (forall (($generated@@19 T@U) ($generated@@20 T@U) ($generated@@21 T@U) ) (!  (=> ($generated@@0 $generated@@19 $generated@@21) ($generated@@0 ($generated $generated@@19 $generated@@20) $generated@@21))
 :pattern ( ($generated $generated@@19 $generated@@20) ($generated@@0 $generated@@19 $generated@@21))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (! (= ($generated@@0 ($generated $generated@@22 $generated@@23) $generated@@24)  (or (= $generated@@24 $generated@@23) ($generated@@0 $generated@@22 $generated@@24)))
 :pattern ( ($generated@@0 ($generated $generated@@22 $generated@@23) $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ) (!  (not ($generated@@0 $generated@@25 $generated@@26))
 :pattern ( ($generated@@0 $generated@@25 $generated@@26))
)))
(assert (= ($generated@@27 $generated@@28) 0))
(assert (forall (($generated@@31 T@U) ) (! ($generated@@30 ($generated@@29 $generated@@31))
 :pattern ( ($generated@@29 $generated@@31))
)))
(assert (forall (($generated@@33 T@U) ) (!  (and (= (= ($generated@@32 $generated@@33) 0) (= $generated@@33 $generated@@25)) (=> (or (not (= ($generated@@32 $generated@@33) 0)) (not true)) (exists (($generated@@34 T@U) ) (! ($generated@@0 $generated@@33 $generated@@34)
 :pattern ( ($generated@@0 $generated@@33 $generated@@34))
))))
 :pattern ( ($generated@@32 $generated@@33))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (and (= (= ($generated@@35 ($generated@@36 $generated@@37) $generated@@38) 0)  (not ($generated@@0 $generated@@37 $generated@@38))) (= (= ($generated@@35 ($generated@@36 $generated@@37) $generated@@38) 1) ($generated@@0 $generated@@37 $generated@@38)))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@37) $generated@@38))
)))
(assert (forall (($generated@@40 Int) ) (! (= ($generated@@39 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@T) ) (! (= ($generated@@45 $generated@@47 ($generated@@44 $generated@@47 $generated@@46)) $generated@@46)
 :pattern ( ($generated@@44 $generated@@47 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (or (not (= $generated@@50 $generated@@51)) (not true)) (= ($generated@@35 $generated@@49 $generated@@51) ($generated@@35 ($generated@@48 $generated@@49 $generated@@50) $generated@@51)))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50) ($generated@@35 $generated@@49 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@52 ($generated@@48 $generated@@53 $generated@@54)) (+ ($generated@@52 $generated@@53) 1))
 :pattern ( ($generated@@52 ($generated@@48 $generated@@53 $generated@@54)))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@27 ($generated@@55 $generated@@56 $generated@@57)) (+ 1 ($generated@@27 $generated@@56)))
 :pattern ( ($generated@@55 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 Int) ($generated@@61 T@U) ) (!  (and (=> (= $generated@@60 ($generated@@27 $generated@@59)) (= ($generated@@58 ($generated@@55 $generated@@59 $generated@@61) $generated@@60) $generated@@61)) (=> (or (not (= $generated@@60 ($generated@@27 $generated@@59))) (not true)) (= ($generated@@58 ($generated@@55 $generated@@59 $generated@@61) $generated@@60) ($generated@@58 $generated@@59 $generated@@60))))
 :pattern ( ($generated@@58 ($generated@@55 $generated@@59 $generated@@61) $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= (exists (($generated@@64 Int) ) (!  (and (and (<= 0 $generated@@64) (< $generated@@64 ($generated@@27 $generated@@62))) (= $generated@@63 ($generated@@58 $generated@@62 $generated@@64)))
 :pattern ( ($generated@@58 $generated@@62 $generated@@64))
)) (< 0 ($generated@@35 ($generated@@29 $generated@@62) $generated@@63)))
 :pattern ( ($generated@@35 ($generated@@29 $generated@@62) $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> ($generated@@65 $generated@@66 $generated@@67) (= $generated@@66 $generated@@67))
 :pattern ( ($generated@@65 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@30 $generated@@68) (forall (($generated@@69 T@U) ) (!  (and (<= 0 ($generated@@35 $generated@@68 $generated@@69)) (<= ($generated@@35 $generated@@68 $generated@@69) ($generated@@52 $generated@@68)))
 :pattern ( ($generated@@35 $generated@@68 $generated@@69))
)))
 :pattern ( ($generated@@30 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (<= 0 ($generated@@32 $generated@@70))
 :pattern ( ($generated@@32 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (! (<= 0 ($generated@@52 $generated@@71))
 :pattern ( ($generated@@52 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ) (! (<= 0 ($generated@@27 $generated@@72))
 :pattern ( ($generated@@27 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@35 $generated@@73 $generated@@74) 0)
 :pattern ( ($generated@@35 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@35 ($generated@@48 $generated@@75 $generated@@76) $generated@@76) (+ ($generated@@35 $generated@@75 $generated@@76) 1))
 :pattern ( ($generated@@48 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@44 $generated@@78 ($generated@@45 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@45 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (!  (and (= (= ($generated@@52 $generated@@79) 0) (= $generated@@79 $generated@@73)) (=> (or (not (= ($generated@@52 $generated@@79) 0)) (not true)) (exists (($generated@@80 T@U) ) (! (< 0 ($generated@@35 $generated@@79 $generated@@80))
 :pattern ( ($generated@@35 $generated@@79 $generated@@80))
))))
 :pattern ( ($generated@@52 $generated@@79))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@81 $generated@@92 $generated@@93 $generated@@94 ($generated@@88 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@97 $generated@@98) $generated@@95)
 :weight 0
)) (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@104 $generated@@106) (= ($generated@@81 $generated@@99 $generated@@100 $generated@@101 ($generated@@88 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102) $generated@@106 $generated@@107) ($generated@@81 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@106 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@81 $generated@@108 $generated@@109 $generated@@110 ($generated@@88 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@81 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 3)) (= ($generated@@1 $generated@@83) 4)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@85 $generated@@117 $generated@@118 ($generated@@89 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@119) $generated@@121) $generated@@119)
 :weight 0
))) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@85 $generated@@122 $generated@@123 ($generated@@89 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@85 $generated@@122 $generated@@123 $generated@@125 $generated@@127)))
 :weight 0
))) (= ($generated@@1 $generated@@86) 5)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@128 $generated@@129)) 6))) (forall (($generated@@130 T@T) ($generated@@131 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@130 $generated@@131)) $generated@@130)
 :pattern ( ($generated@@87 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@T) ($generated@@133 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@132 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@87 $generated@@132 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 Bool) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@6 ($generated@@81 $generated@@82 $generated@@83 $generated@@2 ($generated@@84 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))  (=> (and (or (not (= $generated@@138 $generated@@134)) (not true)) ($generated@@6 ($generated@@44 $generated@@2 ($generated@@85 $generated@@83 $generated@@86 ($generated@@85 $generated@@82 ($generated@@87 $generated@@83 $generated@@86) $generated@@135 $generated@@138) $generated@@136)))) $generated@@137))
 :pattern ( ($generated@@81 $generated@@82 $generated@@83 $generated@@2 ($generated@@84 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (and (= ($generated@@140 ($generated@@55 $generated@@142 $generated@@143)) $generated@@142) (= ($generated@@141 ($generated@@55 $generated@@142 $generated@@143)) $generated@@143))
 :pattern ( ($generated@@55 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@52 ($generated@@36 $generated@@144)) ($generated@@32 $generated@@144))
 :pattern ( ($generated@@52 ($generated@@36 $generated@@144)))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@52 ($generated@@29 $generated@@145)) ($generated@@27 $generated@@145))
 :pattern ( ($generated@@52 ($generated@@29 $generated@@145)))
)))
(assert (= ($generated@@29 $generated@@28) $generated@@73))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@0 $generated@@146 $generated@@147) (= ($generated@@32 ($generated $generated@@146 $generated@@147)) ($generated@@32 $generated@@146)))
 :pattern ( ($generated@@32 ($generated $generated@@146 $generated@@147)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@29 ($generated@@55 $generated@@148 $generated@@149)) ($generated@@48 ($generated@@29 $generated@@148) $generated@@149))
 :pattern ( ($generated@@29 ($generated@@55 $generated@@148 $generated@@149)))
)))
(assert (forall (($generated@@150 Int) ) (! (= ($generated@@45 $generated@@3 ($generated@@7 ($generated@@39 $generated@@150))) ($generated@@41 $generated@@86 ($generated@@45 $generated@@3 ($generated@@7 $generated@@150))))
 :pattern ( ($generated@@45 $generated@@3 ($generated@@7 ($generated@@39 $generated@@150))))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@45 $generated@@152 ($generated@@41 $generated@@152 $generated@@151)) ($generated@@41 $generated@@86 ($generated@@45 $generated@@152 $generated@@151)))
 :pattern ( ($generated@@45 $generated@@152 ($generated@@41 $generated@@152 $generated@@151)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (< 0 ($generated@@35 $generated@@153 $generated@@155)) (< 0 ($generated@@35 ($generated@@48 $generated@@153 $generated@@154) $generated@@155)))
 :pattern ( ($generated@@48 $generated@@153 $generated@@154) ($generated@@35 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= ($generated@@27 $generated@@156) 0) (= $generated@@156 $generated@@28))
 :pattern ( ($generated@@27 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (< 0 ($generated@@35 ($generated@@48 $generated@@157 $generated@@158) $generated@@159))  (or (= $generated@@159 $generated@@158) (< 0 ($generated@@35 $generated@@157 $generated@@159))))
 :pattern ( ($generated@@35 ($generated@@48 $generated@@157 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@65 $generated@@160 $generated@@161) (forall (($generated@@162 T@U) ) (! (= ($generated@@35 $generated@@160 $generated@@162) ($generated@@35 $generated@@161 $generated@@162))
 :pattern ( ($generated@@35 $generated@@160 $generated@@162))
 :pattern ( ($generated@@35 $generated@@161 $generated@@162))
)))
 :pattern ( ($generated@@65 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (not ($generated@@0 $generated@@163 $generated@@164)) (= ($generated@@32 ($generated $generated@@163 $generated@@164)) (+ ($generated@@32 $generated@@163) 1)))
 :pattern ( ($generated@@32 ($generated $generated@@163 $generated@@164)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 () Int)
(assert  (and (= ($generated@@1 $generated@@169) 7) (= ($generated@@1 $generated@@170) 8)))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@174  (=> (= $generated@@165 ($generated@@84 $generated@@166 $generated@@167 $generated@@168 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@65 ($generated@@36 ($generated@@41 $generated@@169 ($generated ($generated $generated@@25 ($generated@@45 $generated@@3 ($generated@@7 ($generated@@39 1)))) ($generated@@45 $generated@@3 ($generated@@7 ($generated@@39 1)))))) ($generated@@48 $generated@@73 ($generated@@45 $generated@@3 ($generated@@7 ($generated@@39 1)))))) (=> ($generated@@65 ($generated@@36 ($generated@@41 $generated@@169 ($generated ($generated $generated@@25 ($generated@@45 $generated@@3 ($generated@@7 ($generated@@39 1)))) ($generated@@45 $generated@@3 ($generated@@7 ($generated@@39 1)))))) ($generated@@48 $generated@@73 ($generated@@45 $generated@@3 ($generated@@7 ($generated@@39 1))))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@65 ($generated@@29 ($generated@@41 $generated@@170 ($generated@@55 ($generated@@55 $generated@@28 ($generated@@45 $generated@@3 ($generated@@7 ($generated@@39 1)))) ($generated@@45 $generated@@3 ($generated@@7 ($generated@@39 1)))))) ($generated@@48 ($generated@@48 $generated@@73 ($generated@@45 $generated@@3 ($generated@@7 ($generated@@39 1)))) ($generated@@45 $generated@@3 ($generated@@7 ($generated@@39 1)))))))))))
(let (($generated@@175  (=> (and (and ($generated@@171 $generated@@167) ($generated@@172 $generated@@167)) (and (= 0 $generated@@173) (= (ControlFlow 0 4) 2))) $generated@@174)))
$generated@@175)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
