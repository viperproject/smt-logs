(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (Int Bool) T@U)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (Int Bool) Bool)
(declare-fun $generated@@42 (T@U T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 (T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@100 (T@U) Int)
(declare-fun $generated@@101 (T@U) Int)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@113 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@115 (T@T T@T) T@T)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@T) T@T)
(declare-fun $generated@@119 (T@T) T@T)
(declare-fun $generated@@168 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@1))
(assert (= ($generated@@25 $generated@@0) $generated@@2))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29)
 :pattern ( ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29))
)))
(assert (= ($generated@@9 $generated@@32) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@36 ($generated@@33 $generated@@34 $generated@@35)) ($generated@@30 $generated@@36))
 :pattern ( ($generated@@30 $generated@@36) ($generated@@31 $generated@@32 $generated@@36 ($generated@@33 $generated@@34 $generated@@35)))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@44 Int) ($generated@@45 T@U) ) (!  (=> (or ($generated@@41 ($generated@@39 $generated@@44) ($generated@@14 ($generated@@40 $generated@@10 $generated@@45))) (< 1 $generated@@37)) (= ($generated@@38 ($generated@@39 $generated@@44) ($generated@@14 ($generated@@40 $generated@@10 $generated@@45))) ($generated@@40 $generated@@32 ($generated@@42 ($generated@@43 $generated@@11 ($generated@@15 ($generated@@39 $generated@@44))) ($generated@@43 $generated@@10 ($generated@@40 $generated@@10 $generated@@45))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@44) ($generated@@14 ($generated@@40 $generated@@10 $generated@@45))))
))))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@31 $generated@@32 ($generated@@42 $generated@@49 $generated@@50) ($generated@@33 $generated@@47 $generated@@48))  (and ($generated@@46 $generated@@49 $generated@@47) ($generated@@46 $generated@@50 $generated@@48)))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@42 $generated@@49 $generated@@50) ($generated@@33 $generated@@47 $generated@@48)))
)))
(assert (forall (($generated@@51 Int) ) (! (= ($generated@@39 $generated@@51) $generated@@51)
 :pattern ( ($generated@@39 $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@40 $generated@@53 $generated@@52) $generated@@52)
 :pattern ( ($generated@@40 $generated@@53 $generated@@52))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@54 Int) ($generated@@55 Bool) ) (!  (=> (or ($generated@@41 $generated@@54 $generated@@55) (< 1 $generated@@37)) (= ($generated@@38 $generated@@54 $generated@@55) ($generated@@42 ($generated@@43 $generated@@11 ($generated@@15 $generated@@54)) ($generated@@43 $generated@@10 ($generated@@13 $generated@@55)))))
 :pattern ( ($generated@@38 $generated@@54 $generated@@55))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> ($generated@@56 $generated@@62) (= ($generated@@26 $generated@@32 ($generated@@42 $generated@@60 $generated@@61) ($generated@@33 $generated@@58 $generated@@59) $generated@@62)  (and ($generated@@57 $generated@@60 $generated@@58 $generated@@62) ($generated@@57 $generated@@61 $generated@@59 $generated@@62))))
 :pattern ( ($generated@@26 $generated@@32 ($generated@@42 $generated@@60 $generated@@61) ($generated@@33 $generated@@58 $generated@@59) $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@30 $generated@@64) (= ($generated@@63 $generated@@64) $generated@@6))
 :pattern ( ($generated@@30 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@43 $generated@@67 ($generated@@65 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@65 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@30 $generated@@68) (exists (($generated@@69 T@U) ($generated@@70 T@U) ) (= $generated@@68 ($generated@@42 $generated@@69 $generated@@70))))
 :pattern ( ($generated@@30 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@31 $generated@@11 $generated@@71 $generated@@27) (<= ($generated@@39 0) ($generated@@16 $generated@@71)))
 :pattern ( ($generated@@31 $generated@@11 $generated@@71 $generated@@27))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@57 ($generated@@43 $generated@@75 $generated@@72) $generated@@73 $generated@@74) ($generated@@26 $generated@@75 $generated@@72 $generated@@73 $generated@@74))
 :pattern ( ($generated@@57 ($generated@@43 $generated@@75 $generated@@72) $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@46 $generated@@76 $generated@@27) (and (= ($generated@@43 $generated@@11 ($generated@@65 $generated@@11 $generated@@76)) $generated@@76) ($generated@@31 $generated@@11 ($generated@@65 $generated@@11 $generated@@76) $generated@@27)))
 :pattern ( ($generated@@46 $generated@@76 $generated@@27))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@77 Int) ($generated@@78 Bool) ) (!  (=> (or ($generated@@41 $generated@@77 $generated@@78) (< 1 $generated@@37)) ($generated@@31 $generated@@32 ($generated@@38 $generated@@77 $generated@@78) ($generated@@33 $generated@@0 $generated)))
 :pattern ( ($generated@@38 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@46 $generated@@79 $generated@@0) (and (= ($generated@@43 $generated@@11 ($generated@@65 $generated@@11 $generated@@79)) $generated@@79) ($generated@@31 $generated@@11 ($generated@@65 $generated@@11 $generated@@79) $generated@@0)))
 :pattern ( ($generated@@46 $generated@@79 $generated@@0))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@46 $generated@@80 $generated) (and (= ($generated@@43 $generated@@10 ($generated@@65 $generated@@10 $generated@@80)) $generated@@80) ($generated@@31 $generated@@10 ($generated@@65 $generated@@10 $generated@@80) $generated)))
 :pattern ( ($generated@@46 $generated@@80 $generated))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@46 ($generated@@43 $generated@@83 $generated@@81) $generated@@82) ($generated@@31 $generated@@83 $generated@@81 $generated@@82))
 :pattern ( ($generated@@46 ($generated@@43 $generated@@83 $generated@@81) $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@84 ($generated@@33 $generated@@85 $generated@@86)) $generated@@85)
 :pattern ( ($generated@@33 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@87 ($generated@@33 $generated@@88 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@33 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@63 ($generated@@42 $generated@@90 $generated@@91)) $generated@@6)
 :pattern ( ($generated@@42 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@92 ($generated@@42 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@42 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@95 ($generated@@42 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@42 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@65 $generated@@99 ($generated@@43 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@43 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (< ($generated@@100 $generated@@102) ($generated@@101 ($generated@@42 $generated@@102 $generated@@103)))
 :pattern ( ($generated@@42 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (< ($generated@@100 $generated@@105) ($generated@@101 ($generated@@42 $generated@@104 $generated@@105)))
 :pattern ( ($generated@@42 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> ($generated@@46 $generated@@108 ($generated@@33 $generated@@106 $generated@@107)) (and (= ($generated@@43 $generated@@32 ($generated@@65 $generated@@32 $generated@@108)) $generated@@108) ($generated@@31 $generated@@32 ($generated@@65 $generated@@32 $generated@@108) ($generated@@33 $generated@@106 $generated@@107))))
 :pattern ( ($generated@@46 $generated@@108 ($generated@@33 $generated@@106 $generated@@107)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@109 $generated@@120 $generated@@121 $generated@@122 ($generated@@116 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@125 $generated@@126) $generated@@123)
 :weight 0
)) (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@109 $generated@@127 $generated@@128 $generated@@129 ($generated@@116 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@109 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@109 $generated@@136 $generated@@137 $generated@@138 ($generated@@116 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)))) (= ($generated@@9 $generated@@110) 4)) (= ($generated@@9 $generated@@111) 5)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@113 $generated@@145 $generated@@146 ($generated@@117 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@147) $generated@@149) $generated@@147)
 :weight 0
))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@154 $generated@@155) (= ($generated@@113 $generated@@150 $generated@@151 ($generated@@117 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@152) $generated@@155) ($generated@@113 $generated@@150 $generated@@151 $generated@@153 $generated@@155)))
 :weight 0
))) (= ($generated@@9 $generated@@114) 6)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (= ($generated@@9 ($generated@@115 $generated@@156 $generated@@157)) 7))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (! (= ($generated@@118 ($generated@@115 $generated@@158 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@115 $generated@@158 $generated@@159))
))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (! (= ($generated@@119 ($generated@@115 $generated@@160 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@115 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Bool) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@14 ($generated@@109 $generated@@110 $generated@@111 $generated@@10 ($generated@@112 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@162)) (not true)) ($generated@@14 ($generated@@65 $generated@@10 ($generated@@113 $generated@@111 $generated@@114 ($generated@@113 $generated@@110 ($generated@@115 $generated@@111 $generated@@114) $generated@@163 $generated@@166) $generated@@164)))) $generated@@165))
 :pattern ( ($generated@@109 $generated@@110 $generated@@111 $generated@@10 ($generated@@112 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (and (= ($generated@@25 ($generated@@33 $generated@@169 $generated@@170)) $generated@@5) (= ($generated@@168 ($generated@@33 $generated@@169 $generated@@170)) $generated@@8))
 :pattern ( ($generated@@33 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@100 ($generated@@43 $generated@@32 $generated@@171)) ($generated@@101 $generated@@171))
 :pattern ( ($generated@@100 ($generated@@43 $generated@@32 $generated@@171)))
)))
(assert (= ($generated@@25 $generated@@27) $generated@@4))
(assert (= ($generated@@168 $generated@@27) $generated@@7))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and ($generated@@56 $generated@@174) (and ($generated@@30 $generated@@172) (exists (($generated@@175 T@U) ) (! ($generated@@26 $generated@@32 $generated@@172 ($generated@@33 $generated@@173 $generated@@175) $generated@@174)
 :pattern ( ($generated@@26 $generated@@32 $generated@@172 ($generated@@33 $generated@@173 $generated@@175) $generated@@174))
)))) ($generated@@57 ($generated@@92 $generated@@172) $generated@@173 $generated@@174))
 :pattern ( ($generated@@57 ($generated@@92 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and ($generated@@56 $generated@@178) (and ($generated@@30 $generated@@176) (exists (($generated@@179 T@U) ) (! ($generated@@26 $generated@@32 $generated@@176 ($generated@@33 $generated@@179 $generated@@177) $generated@@178)
 :pattern ( ($generated@@26 $generated@@32 $generated@@176 ($generated@@33 $generated@@179 $generated@@177) $generated@@178))
)))) ($generated@@57 ($generated@@95 $generated@@176) $generated@@177 $generated@@178))
 :pattern ( ($generated@@57 ($generated@@95 $generated@@176) $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@42 ($generated@@40 $generated@@114 $generated@@180) ($generated@@40 $generated@@114 $generated@@181)) ($generated@@40 $generated@@32 ($generated@@42 $generated@@180 $generated@@181)))
 :pattern ( ($generated@@42 ($generated@@40 $generated@@114 $generated@@180) ($generated@@40 $generated@@114 $generated@@181)))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@43 $generated@@11 ($generated@@15 ($generated@@39 $generated@@182))) ($generated@@40 $generated@@114 ($generated@@43 $generated@@11 ($generated@@15 $generated@@182))))
 :pattern ( ($generated@@43 $generated@@11 ($generated@@15 ($generated@@39 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@43 $generated@@184 ($generated@@40 $generated@@184 $generated@@183)) ($generated@@40 $generated@@114 ($generated@@43 $generated@@184 $generated@@183)))
 :pattern ( ($generated@@43 $generated@@184 ($generated@@40 $generated@@184 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! ($generated@@26 $generated@@11 $generated@@186 $generated@@0 $generated@@185)
 :pattern ( ($generated@@26 $generated@@11 $generated@@186 $generated@@0 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! ($generated@@26 $generated@@10 $generated@@188 $generated $generated@@187)
 :pattern ( ($generated@@26 $generated@@10 $generated@@188 $generated $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ) (! ($generated@@31 $generated@@11 $generated@@189 $generated@@0)
 :pattern ( ($generated@@31 $generated@@11 $generated@@189 $generated@@0))
)))
(assert (forall (($generated@@190 T@U) ) (! ($generated@@31 $generated@@10 $generated@@190 $generated)
 :pattern ( ($generated@@31 $generated@@10 $generated@@190 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Bool)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Bool)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@201 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@202  (=> (= (ControlFlow 0 7) (- 0 6)) ($generated@@31 $generated@@11 ($generated@@15 ($generated@@39 (- 0 30))) $generated@@27))))
(let (($generated@@203  (=> (= (ControlFlow 0 5) (- 0 4)) ($generated@@31 $generated@@11 ($generated@@15 ($generated@@39 (- 0 30))) $generated@@27))))
(let (($generated@@204  (and (=> (= (ControlFlow 0 8) 5) $generated@@203) (=> (= (ControlFlow 0 8) 7) $generated@@202))))
(let (($generated@@205  (=> (and (= $generated@@191 ($generated@@39 (- 0 10))) ($generated@@26 $generated@@11 ($generated@@15 $generated@@191) $generated@@0 $generated@@192)) (=> (and (and (and (= $generated@@193 ($generated@@14 ($generated@@40 $generated@@10 ($generated@@13 true)))) ($generated@@26 $generated@@10 ($generated@@13 $generated@@193) $generated $generated@@192)) (and ($generated@@41 ($generated@@39 (- 0 10)) ($generated@@14 ($generated@@40 $generated@@10 ($generated@@13 true)))) ($generated@@30 ($generated@@40 $generated@@32 ($generated@@38 ($generated@@39 (- 0 10)) ($generated@@14 ($generated@@40 $generated@@10 ($generated@@13 true)))))))) (and (and (= $generated@@194 ($generated@@40 $generated@@32 ($generated@@38 ($generated@@39 (- 0 10)) ($generated@@14 ($generated@@40 $generated@@10 ($generated@@13 true)))))) ($generated@@41 ($generated@@39 (- 0 10)) ($generated@@14 ($generated@@40 $generated@@10 ($generated@@13 true))))) (and ($generated@@31 $generated@@32 $generated@@194 ($generated@@33 $generated@@0 $generated)) ($generated@@30 $generated@@194)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@31 $generated@@11 ($generated@@65 $generated@@11 ($generated@@92 $generated@@194)) $generated@@27)) (=> ($generated@@31 $generated@@11 ($generated@@65 $generated@@11 ($generated@@92 $generated@@194)) $generated@@27) (=> (and (and (= ($generated@@42 ($generated@@43 $generated@@11 ($generated@@15 $generated@@195)) ($generated@@43 $generated@@10 ($generated@@13 $generated@@196))) $generated@@194) ($generated@@41 ($generated@@39 (- 0 10)) ($generated@@14 ($generated@@40 $generated@@10 ($generated@@13 true))))) (and (= $generated@@197 (let (($generated@@206 ($generated@@16 ($generated@@65 $generated@@11 ($generated@@92 ($generated@@40 $generated@@32 ($generated@@38 ($generated@@39 (- 0 10)) ($generated@@14 ($generated@@40 $generated@@10 ($generated@@13 true))))))))))
(+ $generated@@206 3))) (= (ControlFlow 0 2) (- 0 1)))) (<= ($generated@@39 0) $generated@@197))))))))
(let (($generated@@207  (=> (= $generated@@198 ($generated@@112 $generated@@199 $generated@@192 $generated@@3 false)) (and (=> (= (ControlFlow 0 9) 2) $generated@@205) (=> (= (ControlFlow 0 9) 8) $generated@@204)))))
(let (($generated@@208  (=> (and ($generated@@56 $generated@@192) ($generated@@200 $generated@@192)) (=> (and (and (<= ($generated@@39 0) $generated@@201) true) (and (= 2 $generated@@37) (= (ControlFlow 0 10) 9))) $generated@@207))))
$generated@@208)))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 7) (- 6))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
