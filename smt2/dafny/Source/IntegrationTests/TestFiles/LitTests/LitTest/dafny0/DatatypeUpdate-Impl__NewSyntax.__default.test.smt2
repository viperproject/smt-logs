(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (Int Bool) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@43 (Int) Int)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@60 (Bool) T@U)
(declare-fun $generated@@63 (Int) T@U)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@72 (T@U) Int)
(declare-fun $generated@@80 (T@U) Bool)
(declare-fun $generated@@86 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@90 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@145 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and ($generated@@26 $generated@@28) ($generated@@26 $generated@@29)) (= ($generated@@25 $generated@@28 $generated@@29) (= ($generated@@27 $generated@@28) ($generated@@27 $generated@@29))))
 :pattern ( ($generated@@25 $generated@@28 $generated@@29) ($generated@@26 $generated@@28))
 :pattern ( ($generated@@25 $generated@@28 $generated@@29) ($generated@@26 $generated@@29))
)))
(assert (= ($generated@@30 $generated) $generated@@1))
(assert (= ($generated@@30 $generated@@0) $generated@@2))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and ($generated@@31 $generated@@33) ($generated@@31 $generated@@34)) (= ($generated@@25 $generated@@33 $generated@@34) (= ($generated@@32 $generated@@33) ($generated@@32 $generated@@34))))
 :pattern ( ($generated@@25 $generated@@33 $generated@@34) ($generated@@31 $generated@@33))
 :pattern ( ($generated@@25 $generated@@33 $generated@@34) ($generated@@31 $generated@@34))
)))
(assert (= ($generated@@9 $generated@@36) 3))
(assert (forall (($generated@@39 Int) ($generated@@40 Bool) ) (! (= ($generated@@35 $generated@@36 ($generated@@37 $generated@@39 $generated@@40) $generated@@38)  (and ($generated@@35 $generated@@11 ($generated@@15 $generated@@39) $generated@@0) ($generated@@35 $generated@@10 ($generated@@13 $generated@@40) $generated)))
 :pattern ( ($generated@@35 $generated@@36 ($generated@@37 $generated@@39 $generated@@40) $generated@@38))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@25 $generated@@41 $generated@@42) (= $generated@@41 $generated@@42))
 :pattern ( ($generated@@25 $generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 Int) ) (! (= ($generated@@43 $generated@@44) $generated@@44)
 :pattern ( ($generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@T) ) (! (= ($generated@@45 $generated@@47 $generated@@46) $generated@@46)
 :pattern ( ($generated@@45 $generated@@47 $generated@@46))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@48 $generated@@50) (= ($generated@@49 $generated@@50) $generated@@5))
 :pattern ( ($generated@@48 $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@26 $generated@@51) (= ($generated@@49 $generated@@51) $generated@@6))
 :pattern ( ($generated@@26 $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@31 $generated@@52) (= ($generated@@49 $generated@@52) $generated@@7))
 :pattern ( ($generated@@31 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 ($generated@@53 $generated@@56 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@53 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@48 $generated@@57) (exists (($generated@@58 Int) ($generated@@59 Bool) ) (= $generated@@57 ($generated@@37 $generated@@58 $generated@@59))))
 :pattern ( ($generated@@48 $generated@@57))
)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@26 $generated@@61) (exists (($generated@@62 Bool) ) (= $generated@@61 ($generated@@60 $generated@@62))))
 :pattern ( ($generated@@26 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@31 $generated@@64) (exists (($generated@@65 Int) ) (= $generated@@64 ($generated@@63 $generated@@65))))
 :pattern ( ($generated@@31 $generated@@64))
)))
(assert (forall (($generated@@67 Int) ($generated@@68 Bool) ) (! (= ($generated@@66 ($generated@@37 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@37 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@69 Bool) ) (! (= ($generated@@27 ($generated@@60 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@60 $generated@@69))
)))
(assert (forall (($generated@@70 Int) ($generated@@71 Bool) ) (! (= ($generated@@49 ($generated@@37 $generated@@70 $generated@@71)) $generated@@5)
 :pattern ( ($generated@@37 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 Int) ($generated@@74 Bool) ) (! (= ($generated@@72 ($generated@@37 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@37 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@75 Bool) ) (! (= ($generated@@49 ($generated@@60 $generated@@75)) $generated@@6)
 :pattern ( ($generated@@60 $generated@@75))
)))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@49 ($generated@@63 $generated@@76)) $generated@@7)
 :pattern ( ($generated@@63 $generated@@76))
)))
(assert (forall (($generated@@77 Int) ) (! (= ($generated@@32 ($generated@@63 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@63 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@53 $generated@@79 ($generated@@54 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@54 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@80 $generated@@81) (or (or ($generated@@48 $generated@@81) ($generated@@26 $generated@@81)) ($generated@@31 $generated@@81)))
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and ($generated@@48 $generated@@82) ($generated@@48 $generated@@83)) (= ($generated@@25 $generated@@82 $generated@@83)  (and (= ($generated@@72 $generated@@82) ($generated@@72 $generated@@83)) (= ($generated@@66 $generated@@82) ($generated@@66 $generated@@83)))))
 :pattern ( ($generated@@25 $generated@@82 $generated@@83) ($generated@@48 $generated@@82))
 :pattern ( ($generated@@25 $generated@@82 $generated@@83) ($generated@@48 $generated@@83))
)))
(assert (forall (($generated@@84 Bool) ) (! (= ($generated@@35 $generated@@36 ($generated@@60 $generated@@84) $generated@@38) ($generated@@35 $generated@@10 ($generated@@13 $generated@@84) $generated))
 :pattern ( ($generated@@35 $generated@@36 ($generated@@60 $generated@@84) $generated@@38))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@35 $generated@@36 ($generated@@63 $generated@@85) $generated@@38) ($generated@@35 $generated@@11 ($generated@@15 $generated@@85) $generated@@0))
 :pattern ( ($generated@@35 $generated@@36 ($generated@@63 $generated@@85) $generated@@38))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@86 $generated@@97 $generated@@98 $generated@@99 ($generated@@93 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103 $generated@@100) $generated@@102 $generated@@103) $generated@@100)
 :weight 0
)) (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@86 $generated@@104 $generated@@105 $generated@@106 ($generated@@93 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@111 $generated@@112) ($generated@@86 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@111 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@86 $generated@@113 $generated@@114 $generated@@115 ($generated@@93 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@86 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)))) (= ($generated@@9 $generated@@87) 4)) (= ($generated@@9 $generated@@88) 5)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@90 $generated@@122 $generated@@123 ($generated@@94 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@124) $generated@@126) $generated@@124)
 :weight 0
))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@90 $generated@@127 $generated@@128 ($generated@@94 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@90 $generated@@127 $generated@@128 $generated@@130 $generated@@132)))
 :weight 0
))) (= ($generated@@9 $generated@@91) 6)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@9 ($generated@@92 $generated@@133 $generated@@134)) 7))) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@92 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@96 ($generated@@92 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@92 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 Bool) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@14 ($generated@@86 $generated@@87 $generated@@88 $generated@@10 ($generated@@89 $generated@@139 $generated@@140 $generated@@141 $generated@@142) $generated@@143 $generated@@144))  (=> (and (or (not (= $generated@@143 $generated@@139)) (not true)) ($generated@@14 ($generated@@53 $generated@@10 ($generated@@90 $generated@@88 $generated@@91 ($generated@@90 $generated@@87 ($generated@@92 $generated@@88 $generated@@91) $generated@@140 $generated@@143) $generated@@141)))) $generated@@142))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88 $generated@@10 ($generated@@89 $generated@@139 $generated@@140 $generated@@141 $generated@@142) $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and ($generated@@146 $generated@@148) (and ($generated@@48 $generated@@147) ($generated@@145 $generated@@36 $generated@@147 $generated@@38 $generated@@148))) ($generated@@145 $generated@@11 ($generated@@15 ($generated@@72 $generated@@147)) $generated@@0 $generated@@148))
 :pattern ( ($generated@@145 $generated@@11 ($generated@@15 ($generated@@72 $generated@@147)) $generated@@0 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and ($generated@@146 $generated@@150) (and ($generated@@48 $generated@@149) ($generated@@145 $generated@@36 $generated@@149 $generated@@38 $generated@@150))) ($generated@@145 $generated@@10 ($generated@@13 ($generated@@66 $generated@@149)) $generated $generated@@150))
 :pattern ( ($generated@@145 $generated@@10 ($generated@@13 ($generated@@66 $generated@@149)) $generated $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and ($generated@@146 $generated@@152) (and ($generated@@26 $generated@@151) ($generated@@145 $generated@@36 $generated@@151 $generated@@38 $generated@@152))) ($generated@@145 $generated@@10 ($generated@@13 ($generated@@27 $generated@@151)) $generated $generated@@152))
 :pattern ( ($generated@@145 $generated@@10 ($generated@@13 ($generated@@27 $generated@@151)) $generated $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and ($generated@@146 $generated@@154) (and ($generated@@31 $generated@@153) ($generated@@145 $generated@@36 $generated@@153 $generated@@38 $generated@@154))) ($generated@@145 $generated@@11 ($generated@@15 ($generated@@32 $generated@@153)) $generated@@0 $generated@@154))
 :pattern ( ($generated@@145 $generated@@11 ($generated@@15 ($generated@@32 $generated@@153)) $generated@@0 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> ($generated@@35 $generated@@36 $generated@@155 $generated@@38) (or (or ($generated@@48 $generated@@155) ($generated@@26 $generated@@155)) ($generated@@31 $generated@@155)))
 :pattern ( ($generated@@31 $generated@@155) ($generated@@35 $generated@@36 $generated@@155 $generated@@38))
 :pattern ( ($generated@@26 $generated@@155) ($generated@@35 $generated@@36 $generated@@155 $generated@@38))
 :pattern ( ($generated@@48 $generated@@155) ($generated@@35 $generated@@36 $generated@@155 $generated@@38))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and ($generated@@146 $generated@@157) ($generated@@35 $generated@@36 $generated@@156 $generated@@38)) ($generated@@145 $generated@@36 $generated@@156 $generated@@38 $generated@@157))
 :pattern ( ($generated@@145 $generated@@36 $generated@@156 $generated@@38 $generated@@157))
)))
(assert (= ($generated@@30 $generated@@38) $generated@@4))
(assert (= ($generated@@158 $generated@@38) $generated@@8))
(assert (forall (($generated@@159 Int) ($generated@@160 T@U) ) (! (= ($generated@@37 ($generated@@43 $generated@@159) ($generated@@14 ($generated@@45 $generated@@10 $generated@@160))) ($generated@@45 $generated@@36 ($generated@@37 $generated@@159 ($generated@@14 $generated@@160))))
 :pattern ( ($generated@@37 ($generated@@43 $generated@@159) ($generated@@14 ($generated@@45 $generated@@10 $generated@@160))))
)))
(assert (forall (($generated@@161 Int) ) (! (= ($generated@@54 $generated@@11 ($generated@@15 ($generated@@43 $generated@@161))) ($generated@@45 $generated@@91 ($generated@@54 $generated@@11 ($generated@@15 $generated@@161))))
 :pattern ( ($generated@@54 $generated@@11 ($generated@@15 ($generated@@43 $generated@@161))))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@60 ($generated@@14 ($generated@@45 $generated@@10 $generated@@162))) ($generated@@45 $generated@@36 ($generated@@60 ($generated@@14 $generated@@162))))
 :pattern ( ($generated@@60 ($generated@@14 ($generated@@45 $generated@@10 $generated@@162))))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@63 ($generated@@43 $generated@@163)) ($generated@@45 $generated@@36 ($generated@@63 $generated@@163)))
 :pattern ( ($generated@@63 ($generated@@43 $generated@@163)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@54 $generated@@165 ($generated@@45 $generated@@165 $generated@@164)) ($generated@@45 $generated@@91 ($generated@@54 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@54 $generated@@165 ($generated@@45 $generated@@165 $generated@@164)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! ($generated@@145 $generated@@11 $generated@@167 $generated@@0 $generated@@166)
 :pattern ( ($generated@@145 $generated@@11 $generated@@167 $generated@@0 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! ($generated@@145 $generated@@10 $generated@@169 $generated $generated@@168)
 :pattern ( ($generated@@145 $generated@@10 $generated@@169 $generated $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (! ($generated@@35 $generated@@11 $generated@@170 $generated@@0)
 :pattern ( ($generated@@35 $generated@@11 $generated@@170 $generated@@0))
)))
(assert (forall (($generated@@171 T@U) ) (! ($generated@@35 $generated@@10 $generated@@171 $generated)
 :pattern ( ($generated@@35 $generated@@10 $generated@@171 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@206  (=> (= $generated@@172 ($generated@@89 $generated@@173 $generated@@174 $generated@@3 false)) (and (=> (= (ControlFlow 0 2) (- 0 17)) ($generated@@48 $generated@@175)) (=> ($generated@@48 $generated@@175) (=> (= $generated@@176 ($generated@@37 (+ $generated@@177 4) ($generated@@66 $generated@@175))) (and (=> (= (ControlFlow 0 2) (- 0 16)) ($generated@@48 $generated@@176)) (=> ($generated@@48 $generated@@176) (=> (= $generated@@178 $generated@@176) (=> (and ($generated@@35 $generated@@36 $generated@@178 $generated@@38) (= $generated@@179 $generated@@178)) (and (=> (= (ControlFlow 0 2) (- 0 15)) ($generated@@48 $generated@@176)) (=> ($generated@@48 $generated@@176) (=> (= $generated@@180 (- ($generated@@72 $generated@@176) 2)) (=> (and ($generated@@35 $generated@@11 ($generated@@15 $generated@@180) $generated@@0) (= $generated@@181 $generated@@180)) (and (=> (= (ControlFlow 0 2) (- 0 14)) ($generated@@48 $generated@@179)) (=> ($generated@@48 $generated@@179) (=> (= $generated@@182 (let (($generated@@207 $generated@@176))
(let (($generated@@208 (- ($generated@@72 $generated@@176) 2)))
($generated@@37 $generated@@208 ($generated@@66 $generated@@207))))) (and (=> (= (ControlFlow 0 2) (- 0 13)) ($generated@@48 $generated@@175)) (=> ($generated@@48 $generated@@175) (=> (and (= $generated@@183 ($generated@@60  (not ($generated@@66 $generated@@175)))) (= $generated@@184 ($generated@@45 $generated@@36 ($generated@@37 ($generated@@43 2) ($generated@@14 ($generated@@45 $generated@@10 ($generated@@13 false))))))) (and (=> (= (ControlFlow 0 2) (- 0 12)) ($generated@@31 $generated@@185)) (=> ($generated@@31 $generated@@185) (=> (= $generated@@186 $generated@@185) (=> (and ($generated@@35 $generated@@36 $generated@@186 $generated@@38) (= $generated@@187 $generated@@186)) (=> (and (and (= $generated@@188 ($generated@@43 7)) ($generated@@35 $generated@@11 ($generated@@15 $generated@@188) $generated@@0)) (and (= $generated@@189 $generated@@188) (= $generated@@190 (let (($generated@@209 ($generated@@43 7)))
($generated@@45 $generated@@36 ($generated@@63 $generated@@209)))))) (and (=> (= (ControlFlow 0 2) (- 0 11)) ($generated@@48 $generated@@182)) (=> ($generated@@48 $generated@@182) (=> (= $generated@@191 $generated@@182) (=> (and ($generated@@35 $generated@@36 $generated@@191 $generated@@38) (= $generated@@192 $generated@@191)) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@48 $generated@@182)) (=> ($generated@@48 $generated@@182) (=> (= $generated@@193 (- ($generated@@72 $generated@@182) 2)) (=> (and ($generated@@35 $generated@@11 ($generated@@15 $generated@@193) $generated@@0) (= $generated@@194 $generated@@193)) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@48 $generated@@192)) (=> ($generated@@48 $generated@@192) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@48 $generated@@175)) (=> ($generated@@48 $generated@@175) (=> (and (= $generated@@195 $generated@@175) ($generated@@35 $generated@@36 $generated@@195 $generated@@38)) (=> (and (and (= $generated@@196 $generated@@195) (= $generated@@197 $generated@@177)) (and ($generated@@35 $generated@@11 ($generated@@15 $generated@@197) $generated@@0) (= $generated@@198 $generated@@197))) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@48 $generated@@196)) (=> ($generated@@48 $generated@@196) (=> (and ($generated@@80 (let (($generated@@210 $generated@@182))
(let (($generated@@211 (- ($generated@@72 $generated@@182) 2)))
($generated@@37 $generated@@211 ($generated@@66 $generated@@210))))) ($generated@@80 (let (($generated@@212 $generated@@175))
(let (($generated@@213 $generated@@177))
($generated@@37 $generated@@213 ($generated@@66 $generated@@212)))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@25 (let (($generated@@214 $generated@@182))
(let (($generated@@215 (- ($generated@@72 $generated@@182) 2)))
($generated@@37 $generated@@215 ($generated@@66 $generated@@214)))) (let (($generated@@216 $generated@@175))
(let (($generated@@217 $generated@@177))
($generated@@37 $generated@@217 ($generated@@66 $generated@@216)))))) (=> ($generated@@25 (let (($generated@@218 $generated@@182))
(let (($generated@@219 (- ($generated@@72 $generated@@182) 2)))
($generated@@37 $generated@@219 ($generated@@66 $generated@@218)))) (let (($generated@@220 $generated@@175))
(let (($generated@@221 $generated@@177))
($generated@@37 $generated@@221 ($generated@@66 $generated@@220))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@25 $generated@@182 (let (($generated@@222 $generated@@175))
(let (($generated@@223 (+ $generated@@177 2)))
($generated@@37 $generated@@223 ($generated@@66 $generated@@222)))))) (=> ($generated@@25 $generated@@182 (let (($generated@@224 $generated@@175))
(let (($generated@@225 (+ $generated@@177 2)))
($generated@@37 $generated@@225 ($generated@@66 $generated@@224))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@25 $generated@@183 (let (($generated@@226  (not ($generated@@66 $generated@@175))))
($generated@@60 $generated@@226)))) (=> ($generated@@25 $generated@@183 (let (($generated@@227  (not ($generated@@66 $generated@@175))))
($generated@@60 $generated@@227))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@25 $generated@@184 (let (($generated@@228 (let (($generated@@229 $generated@@175))
(let (($generated@@230 ($generated@@43 2)))
($generated@@37 $generated@@230 ($generated@@66 $generated@@229))))))
(let (($generated@@231 ($generated@@14 ($generated@@45 $generated@@10 ($generated@@13 false)))))
($generated@@37 ($generated@@72 $generated@@228) $generated@@231))))) (=> ($generated@@25 $generated@@184 (let (($generated@@232 (let (($generated@@233 $generated@@175))
(let (($generated@@234 ($generated@@43 2)))
($generated@@37 $generated@@234 ($generated@@66 $generated@@233))))))
(let (($generated@@235 ($generated@@14 ($generated@@45 $generated@@10 ($generated@@13 false)))))
($generated@@37 ($generated@@72 $generated@@232) $generated@@235)))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@25 $generated@@190 (let (($generated@@236 ($generated@@43 7)))
($generated@@45 $generated@@36 ($generated@@63 $generated@@236)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@237  (=> (and ($generated@@146 $generated@@174) ($generated@@199 $generated@@174)) (=> (and (and (and ($generated@@35 $generated@@36 $generated@@175 $generated@@38) ($generated@@145 $generated@@36 $generated@@175 $generated@@38 $generated@@174)) ($generated@@80 $generated@@175)) (and (and ($generated@@35 $generated@@36 $generated@@200 $generated@@38) ($generated@@145 $generated@@36 $generated@@200 $generated@@38 $generated@@174)) ($generated@@80 $generated@@200))) (=> (and (and (and (and (and ($generated@@35 $generated@@36 $generated@@185 $generated@@38) ($generated@@145 $generated@@36 $generated@@185 $generated@@38 $generated@@174)) ($generated@@80 $generated@@185)) (and ($generated@@35 $generated@@36 $generated@@201 $generated@@38) ($generated@@145 $generated@@36 $generated@@201 $generated@@38 $generated@@174))) (and (and ($generated@@35 $generated@@36 $generated@@202 $generated@@38) ($generated@@145 $generated@@36 $generated@@202 $generated@@38 $generated@@174)) (and ($generated@@35 $generated@@36 $generated@@203 $generated@@38) ($generated@@145 $generated@@36 $generated@@203 $generated@@38 $generated@@174)))) (and (and (and ($generated@@35 $generated@@36 $generated@@204 $generated@@38) ($generated@@145 $generated@@36 $generated@@204 $generated@@38 $generated@@174)) (= 1 $generated@@205)) (and (and ($generated@@48 $generated@@175) ($generated@@26 $generated@@200)) (and ($generated@@31 $generated@@185) (= (ControlFlow 0 18) 2))))) $generated@@206)))))
$generated@@237)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
