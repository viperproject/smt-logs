(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (T@U T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@26 (Int Int) Int)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@34 (T@U Int) T@U)
(declare-fun $generated@@35 (T@U Int T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) Int)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@51 (Int) Int)
(declare-fun $generated@@53 (Int) Int)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@71 (T@U T@U T@U) Bool)
(declare-fun $generated@@72 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@T T@U T@U) Bool)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 (T@T T@T) T@T)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@T) T@T)
(declare-fun $generated@@129 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (!  (and (= (+ (+ ($generated@@20 ($generated@@21 $generated@@24 $generated@@25)) ($generated@@20 ($generated@@21 $generated@@25 $generated@@24))) (* 2 ($generated@@20 ($generated@@22 $generated@@24 $generated@@25)))) ($generated@@20 ($generated@@23 $generated@@24 $generated@@25))) (= ($generated@@20 ($generated@@21 $generated@@24 $generated@@25)) (- ($generated@@20 $generated@@24) ($generated@@20 ($generated@@22 $generated@@24 $generated@@25)))))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@24 $generated@@25)))
)))
(assert (forall (($generated@@27 Int) ($generated@@28 Int) ) (!  (or (= ($generated@@26 $generated@@27 $generated@@28) $generated@@27) (= ($generated@@26 $generated@@27 $generated@@28) $generated@@28))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28))
)))
(assert (= ($generated@@29 $generated@@30) 0))
(assert (forall (($generated@@33 T@U) ) (! ($generated@@32 ($generated@@31 $generated@@33))
 :pattern ( ($generated@@31 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 Int) ($generated@@38 T@U) ($generated@@39 Int) ) (!  (=> (and (<= 0 $generated@@39) (< $generated@@39 ($generated@@29 $generated@@36))) (and (=> (= $generated@@37 $generated@@39) (= ($generated@@34 ($generated@@35 $generated@@36 $generated@@37 $generated@@38) $generated@@39) $generated@@38)) (=> (or (not (= $generated@@37 $generated@@39)) (not true)) (= ($generated@@34 ($generated@@35 $generated@@36 $generated@@37 $generated@@38) $generated@@39) ($generated@@34 $generated@@36 $generated@@39)))))
 :pattern ( ($generated@@34 ($generated@@35 $generated@@36 $generated@@37 $generated@@38) $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (<= ($generated@@40 $generated@@41 $generated@@43) ($generated@@40 $generated@@42 $generated@@43)) (= ($generated@@40 ($generated@@21 $generated@@41 $generated@@42) $generated@@43) 0))
 :pattern ( ($generated@@21 $generated@@41 $generated@@42) ($generated@@40 $generated@@42 $generated@@43) ($generated@@40 $generated@@41 $generated@@43))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@22 ($generated@@22 $generated@@44 $generated@@45) $generated@@45) ($generated@@22 $generated@@44 $generated@@45))
 :pattern ( ($generated@@22 ($generated@@22 $generated@@44 $generated@@45) $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 Int) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (and (<= 0 $generated@@48) (< $generated@@48 ($generated@@29 $generated@@47))) (= ($generated@@40 ($generated@@31 ($generated@@35 $generated@@47 $generated@@48 $generated@@49)) $generated@@50) ($generated@@40 ($generated@@23 ($generated@@21 ($generated@@31 $generated@@47) ($generated@@46 ($generated@@34 $generated@@47 $generated@@48))) ($generated@@46 $generated@@49)) $generated@@50)))
 :pattern ( ($generated@@40 ($generated@@31 ($generated@@35 $generated@@47 $generated@@48 $generated@@49)) $generated@@50))
)))
(assert (forall (($generated@@52 Int) ) (!  (=> (<= 0 $generated@@52) (= ($generated@@51 $generated@@52) $generated@@52))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 Int) ) (! (= ($generated@@53 $generated@@54) $generated@@54)
 :pattern ( ($generated@@53 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@55 $generated@@57 $generated@@56) $generated@@56)
 :pattern ( ($generated@@55 $generated@@57 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@40 ($generated@@22 $generated@@58 $generated@@59) $generated@@60) ($generated@@26 ($generated@@40 $generated@@58 $generated@@60) ($generated@@40 $generated@@59 $generated@@60)))
 :pattern ( ($generated@@40 ($generated@@22 $generated@@58 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 ($generated@@61 $generated@@64 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@61 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> (or (not (= $generated@@67 $generated@@68)) (not true)) (= ($generated@@40 $generated@@66 $generated@@68) ($generated@@40 ($generated@@65 $generated@@66 $generated@@67) $generated@@68)))
 :pattern ( ($generated@@65 $generated@@66 $generated@@67) ($generated@@40 $generated@@66 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@20 ($generated@@65 $generated@@69 $generated@@70)) (+ ($generated@@20 $generated@@69) 1))
 :pattern ( ($generated@@20 ($generated@@65 $generated@@69 $generated@@70)))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@71 ($generated@@62 $generated@@76 $generated@@73) $generated@@74 $generated@@75) ($generated@@72 $generated@@76 $generated@@73 $generated@@74 $generated@@75))
 :pattern ( ($generated@@71 ($generated@@62 $generated@@76 $generated@@73) $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@20 ($generated@@23 $generated@@77 $generated@@78)) (+ ($generated@@20 $generated@@77) ($generated@@20 $generated@@78)))
 :pattern ( ($generated@@20 ($generated@@23 $generated@@77 $generated@@78)))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= (exists (($generated@@81 Int) ) (!  (and (and (<= 0 $generated@@81) (< $generated@@81 ($generated@@29 $generated@@79))) (= $generated@@80 ($generated@@34 $generated@@79 $generated@@81)))
 :pattern ( ($generated@@34 $generated@@79 $generated@@81))
)) (< 0 ($generated@@40 ($generated@@31 $generated@@79) $generated@@80)))
 :pattern ( ($generated@@40 ($generated@@31 $generated@@79) $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@82 $generated@@83 $generated@@84) (= $generated@@83 $generated@@84))
 :pattern ( ($generated@@82 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@85 $generated@@87 $generated) (and (= ($generated@@62 $generated@@5 ($generated@@61 $generated@@5 $generated@@87)) $generated@@87) ($generated@@86 $generated@@5 ($generated@@61 $generated@@5 $generated@@87) $generated)))
 :pattern ( ($generated@@85 $generated@@87 $generated))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@85 ($generated@@62 $generated@@90 $generated@@88) $generated@@89) ($generated@@86 $generated@@90 $generated@@88 $generated@@89))
 :pattern ( ($generated@@85 ($generated@@62 $generated@@90 $generated@@88) $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@32 $generated@@91) (forall (($generated@@92 T@U) ) (!  (and (<= 0 ($generated@@40 $generated@@91 $generated@@92)) (<= ($generated@@40 $generated@@91 $generated@@92) ($generated@@20 $generated@@91)))
 :pattern ( ($generated@@40 $generated@@91 $generated@@92))
)))
 :pattern ( ($generated@@32 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (! (<= 0 ($generated@@20 $generated@@93))
 :pattern ( ($generated@@20 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (! (<= 0 ($generated@@29 $generated@@94))
 :pattern ( ($generated@@29 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@40 $generated@@95 $generated@@96) 0)
 :pattern ( ($generated@@40 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@40 ($generated@@65 $generated@@97 $generated@@98) $generated@@98) (+ ($generated@@40 $generated@@97 $generated@@98) 1))
 :pattern ( ($generated@@65 $generated@@97 $generated@@98))
)))
(assert (= ($generated@@3 $generated@@99) 3))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@72 $generated@@99 $generated@@101 ($generated@@100 $generated@@102) $generated@@103) (forall (($generated@@104 Int) ) (!  (=> (and (<= 0 $generated@@104) (< $generated@@104 ($generated@@29 $generated@@101))) ($generated@@71 ($generated@@34 $generated@@101 $generated@@104) $generated@@102 $generated@@103))
 :pattern ( ($generated@@34 $generated@@101 $generated@@104))
)))
 :pattern ( ($generated@@72 $generated@@99 $generated@@101 ($generated@@100 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@105 ($generated@@100 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@100 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@19 ($generated@@100 $generated@@107)) $generated@@1)
 :pattern ( ($generated@@100 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@61 $generated@@109 ($generated@@62 $generated@@109 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@62 $generated@@109 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@22 $generated@@110 ($generated@@22 $generated@@110 $generated@@111)) ($generated@@22 $generated@@110 $generated@@111))
 :pattern ( ($generated@@22 $generated@@110 ($generated@@22 $generated@@110 $generated@@111)))
)))
(assert (forall (($generated@@112 T@U) ) (!  (and (= (= ($generated@@20 $generated@@112) 0) (= $generated@@112 $generated@@95)) (=> (or (not (= ($generated@@20 $generated@@112) 0)) (not true)) (exists (($generated@@113 T@U) ) (! (< 0 ($generated@@40 $generated@@112 $generated@@113))
 :pattern ( ($generated@@40 $generated@@112 $generated@@113))
))))
 :pattern ( ($generated@@20 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (and (= (= ($generated@@40 ($generated@@46 $generated@@114) $generated@@115) 1) (= $generated@@114 $generated@@115)) (= (= ($generated@@40 ($generated@@46 $generated@@114) $generated@@115) 0)  (or (not (= $generated@@114 $generated@@115)) (not true))))
 :pattern ( ($generated@@40 ($generated@@46 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@40 ($generated@@23 $generated@@116 $generated@@117) $generated@@118) (+ ($generated@@40 $generated@@116 $generated@@118) ($generated@@40 $generated@@117 $generated@@118)))
 :pattern ( ($generated@@40 ($generated@@23 $generated@@116 $generated@@117) $generated@@118))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@119 $generated@@130 $generated@@131 $generated@@132 ($generated@@126 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@135 $generated@@136) $generated@@133)
 :weight 0
)) (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@119 $generated@@137 $generated@@138 $generated@@139 ($generated@@126 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@119 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@119 $generated@@146 $generated@@147 $generated@@148 ($generated@@126 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)))) (= ($generated@@3 $generated@@120) 4)) (= ($generated@@3 $generated@@121) 5)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@123 $generated@@155 $generated@@156 ($generated@@127 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@157) $generated@@159) $generated@@157)
 :weight 0
))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@164 $generated@@165) (= ($generated@@123 $generated@@160 $generated@@161 ($generated@@127 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@162) $generated@@165) ($generated@@123 $generated@@160 $generated@@161 $generated@@163 $generated@@165)))
 :weight 0
))) (= ($generated@@3 $generated@@124) 6)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@3 ($generated@@125 $generated@@166 $generated@@167)) 7))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@128 ($generated@@125 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@125 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@129 ($generated@@125 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@125 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@8 ($generated@@119 $generated@@120 $generated@@121 $generated@@4 ($generated@@122 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))  (=> (and (or (not (= $generated@@176 $generated@@172)) (not true)) ($generated@@8 ($generated@@61 $generated@@4 ($generated@@123 $generated@@121 $generated@@124 ($generated@@123 $generated@@120 ($generated@@125 $generated@@121 $generated@@124) $generated@@173 $generated@@176) $generated@@174)))) $generated@@175))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121 $generated@@4 ($generated@@122 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 Int) ($generated@@180 T@U) ) (!  (=> (and (<= 0 $generated@@179) (< $generated@@179 ($generated@@29 $generated@@178))) (= ($generated@@29 ($generated@@35 $generated@@178 $generated@@179 $generated@@180)) ($generated@@29 $generated@@178)))
 :pattern ( ($generated@@29 ($generated@@35 $generated@@178 $generated@@179 $generated@@180)))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@46 $generated@@181) ($generated@@65 $generated@@95 $generated@@181))
 :pattern ( ($generated@@46 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@20 ($generated@@31 $generated@@182)) ($generated@@29 $generated@@182))
 :pattern ( ($generated@@20 ($generated@@31 $generated@@182)))
)))
(assert (forall (($generated@@183 Int) ($generated@@184 Int) ) (! (= (<= $generated@@183 $generated@@184) (= ($generated@@26 $generated@@183 $generated@@184) $generated@@183))
 :pattern ( ($generated@@26 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 Int) ($generated@@186 Int) ) (! (= (<= $generated@@186 $generated@@185) (= ($generated@@26 $generated@@185 $generated@@186) $generated@@186))
 :pattern ( ($generated@@26 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@85 $generated@@187 ($generated@@100 $generated@@188)) (and (= ($generated@@62 $generated@@99 ($generated@@61 $generated@@99 $generated@@187)) $generated@@187) ($generated@@86 $generated@@99 ($generated@@61 $generated@@99 $generated@@187) ($generated@@100 $generated@@188))))
 :pattern ( ($generated@@85 $generated@@187 ($generated@@100 $generated@@188)))
)))
(assert (= ($generated@@31 $generated@@30) $generated@@95))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@40 ($generated@@21 $generated@@189 $generated@@190) $generated@@191) ($generated@@51 (- ($generated@@40 $generated@@189 $generated@@191) ($generated@@40 $generated@@190 $generated@@191))))
 :pattern ( ($generated@@40 ($generated@@21 $generated@@189 $generated@@190) $generated@@191))
)))
(assert (forall (($generated@@192 Int) ) (!  (=> (< $generated@@192 0) (= ($generated@@51 $generated@@192) 0))
 :pattern ( ($generated@@51 $generated@@192))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 $generated@@193))) ($generated@@55 $generated@@124 ($generated@@62 $generated@@5 ($generated@@9 $generated@@193))))
 :pattern ( ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@T) ) (! (= ($generated@@62 $generated@@195 ($generated@@55 $generated@@195 $generated@@194)) ($generated@@55 $generated@@124 ($generated@@62 $generated@@195 $generated@@194)))
 :pattern ( ($generated@@62 $generated@@195 ($generated@@55 $generated@@195 $generated@@194)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (< 0 ($generated@@40 $generated@@196 $generated@@198)) (< 0 ($generated@@40 ($generated@@65 $generated@@196 $generated@@197) $generated@@198)))
 :pattern ( ($generated@@65 $generated@@196 $generated@@197) ($generated@@40 $generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ) (!  (=> (= ($generated@@29 $generated@@199) 0) (= $generated@@199 $generated@@30))
 :pattern ( ($generated@@29 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= (< 0 ($generated@@40 ($generated@@65 $generated@@200 $generated@@201) $generated@@202))  (or (= $generated@@202 $generated@@201) (< 0 ($generated@@40 $generated@@200 $generated@@202))))
 :pattern ( ($generated@@40 ($generated@@65 $generated@@200 $generated@@201) $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@82 $generated@@203 $generated@@204) (forall (($generated@@205 T@U) ) (! (= ($generated@@40 $generated@@203 $generated@@205) ($generated@@40 $generated@@204 $generated@@205))
 :pattern ( ($generated@@40 $generated@@203 $generated@@205))
 :pattern ( ($generated@@40 $generated@@204 $generated@@205))
)))
 :pattern ( ($generated@@82 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! ($generated@@72 $generated@@5 $generated@@207 $generated $generated@@206)
 :pattern ( ($generated@@72 $generated@@5 $generated@@207 $generated $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@86 $generated@@99 $generated@@208 ($generated@@100 $generated@@209)) (forall (($generated@@210 Int) ) (!  (=> (and (<= 0 $generated@@210) (< $generated@@210 ($generated@@29 $generated@@208))) ($generated@@85 ($generated@@34 $generated@@208 $generated@@210) $generated@@209))
 :pattern ( ($generated@@34 $generated@@208 $generated@@210))
)))
 :pattern ( ($generated@@86 $generated@@99 $generated@@208 ($generated@@100 $generated@@209)))
)))
(assert (forall (($generated@@211 T@U) ) (! ($generated@@86 $generated@@5 $generated@@211 $generated)
 :pattern ( ($generated@@86 $generated@@5 $generated@@211 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@219  (=> (= $generated@@212 ($generated@@122 $generated@@213 $generated@@214 $generated@@2 false)) (and (=> (= (ControlFlow 0 2) (- 0 18)) (and (<= 0 ($generated@@53 3)) (< ($generated@@53 3) ($generated@@29 $generated@@215)))) (and (=> (= (ControlFlow 0 2) (- 0 17)) (and (<= 0 ($generated@@53 3)) (< ($generated@@53 3) ($generated@@29 $generated@@215)))) (and (=> (= (ControlFlow 0 2) (- 0 16)) ($generated@@82 ($generated@@31 ($generated@@35 $generated@@215 ($generated@@53 3) ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 2))))) ($generated@@23 ($generated@@21 ($generated@@31 $generated@@215) ($generated@@65 $generated@@95 ($generated@@34 $generated@@215 ($generated@@53 3)))) ($generated@@65 $generated@@95 ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 2))))))) (=> ($generated@@82 ($generated@@31 ($generated@@35 $generated@@215 ($generated@@53 3) ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 2))))) ($generated@@23 ($generated@@21 ($generated@@31 $generated@@215) ($generated@@65 $generated@@95 ($generated@@34 $generated@@215 ($generated@@53 3)))) ($generated@@65 $generated@@95 ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 2)))))) (and (=> (= (ControlFlow 0 2) (- 0 15)) (and (<= 0 ($generated@@53 2)) (< ($generated@@53 2) ($generated@@29 $generated@@215)))) (and (=> (= (ControlFlow 0 2) (- 0 14)) (and (<= 0 ($generated@@53 3)) (< ($generated@@53 3) ($generated@@29 ($generated@@35 $generated@@215 ($generated@@53 2) ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 1)))))))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= 0 ($generated@@53 2)) (< ($generated@@53 2) ($generated@@29 $generated@@215)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= 0 ($generated@@53 3)) (< ($generated@@53 3) ($generated@@29 $generated@@215)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) ($generated@@82 ($generated@@31 ($generated@@35 ($generated@@35 $generated@@215 ($generated@@53 2) ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 1)))) ($generated@@53 3) ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 2))))) ($generated@@23 ($generated@@21 ($generated@@23 ($generated@@21 ($generated@@31 $generated@@215) ($generated@@65 $generated@@95 ($generated@@34 $generated@@215 ($generated@@53 2)))) ($generated@@65 $generated@@95 ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 1))))) ($generated@@65 $generated@@95 ($generated@@34 $generated@@215 ($generated@@53 3)))) ($generated@@65 $generated@@95 ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 2))))))) (=> ($generated@@82 ($generated@@31 ($generated@@35 ($generated@@35 $generated@@215 ($generated@@53 2) ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 1)))) ($generated@@53 3) ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 2))))) ($generated@@23 ($generated@@21 ($generated@@23 ($generated@@21 ($generated@@31 $generated@@215) ($generated@@65 $generated@@95 ($generated@@34 $generated@@215 ($generated@@53 2)))) ($generated@@65 $generated@@95 ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 1))))) ($generated@@65 $generated@@95 ($generated@@34 $generated@@215 ($generated@@53 3)))) ($generated@@65 $generated@@95 ($generated@@62 $generated@@5 ($generated@@9 ($generated@@53 2)))))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= 0 ($generated@@53 2)) (< ($generated@@53 2) ($generated@@29 $generated@@215)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= 0 ($generated@@53 3)) (< ($generated@@53 3) ($generated@@29 $generated@@215)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= 0 ($generated@@53 3)) (< ($generated@@53 3) ($generated@@29 ($generated@@35 $generated@@215 ($generated@@53 2) ($generated@@34 $generated@@215 ($generated@@53 3))))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= 0 ($generated@@53 2)) (< ($generated@@53 2) ($generated@@29 $generated@@215)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 ($generated@@53 2)) (< ($generated@@53 2) ($generated@@29 $generated@@215)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 ($generated@@53 3)) (< ($generated@@53 3) ($generated@@29 $generated@@215)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 ($generated@@53 3)) (< ($generated@@53 3) ($generated@@29 $generated@@215)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@53 2)) (< ($generated@@53 2) ($generated@@29 $generated@@215)))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@82 ($generated@@31 ($generated@@35 ($generated@@35 $generated@@215 ($generated@@53 2) ($generated@@34 $generated@@215 ($generated@@53 3))) ($generated@@53 3) ($generated@@34 $generated@@215 ($generated@@53 2)))) ($generated@@23 ($generated@@21 ($generated@@23 ($generated@@21 ($generated@@31 $generated@@215) ($generated@@65 $generated@@95 ($generated@@34 $generated@@215 ($generated@@53 2)))) ($generated@@65 $generated@@95 ($generated@@34 $generated@@215 ($generated@@53 3)))) ($generated@@65 $generated@@95 ($generated@@34 $generated@@215 ($generated@@53 3)))) ($generated@@65 $generated@@95 ($generated@@34 $generated@@215 ($generated@@53 2)))))))))))))))))))))))))))
(let (($generated@@220  (=> (and ($generated@@216 $generated@@214) ($generated@@217 $generated@@214)) (=> (and (and (and ($generated@@86 $generated@@99 $generated@@215 ($generated@@100 $generated)) ($generated@@72 $generated@@99 $generated@@215 ($generated@@100 $generated) $generated@@214)) (= 0 $generated@@218)) (and (> ($generated@@29 $generated@@215) 4) (= (ControlFlow 0 19) 2))) $generated@@219))))
$generated@@220)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
