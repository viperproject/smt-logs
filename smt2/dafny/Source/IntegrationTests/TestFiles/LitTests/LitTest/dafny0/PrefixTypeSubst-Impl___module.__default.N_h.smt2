(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (Int) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@29 () Int)
(declare-fun $generated@@30 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@81 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@20 T@U) ($generated@@21 T@U) ($generated@@22 T@U) ) (!  (=> (and ($generated@@19 $generated@@20 $generated@@21) ($generated@@19 $generated@@21 $generated@@22)) ($generated@@19 $generated@@20 $generated@@22))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21) ($generated@@19 $generated@@21 $generated@@22))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21) ($generated@@19 $generated@@20 $generated@@22))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 Int) ($generated@@28 Int) ) (!  (=> (and (and (<= 0 $generated@@27) (<= 0 $generated@@28)) (<= (+ $generated@@27 $generated@@28) ($generated@@25 $generated@@26))) (= ($generated@@23 ($generated@@23 $generated@@26 ($generated@@24 $generated@@27)) ($generated@@24 $generated@@28)) ($generated@@23 $generated@@26 ($generated@@24 (+ $generated@@27 $generated@@28)))))
 :pattern ( ($generated@@23 ($generated@@23 $generated@@26 ($generated@@24 $generated@@27)) ($generated@@24 $generated@@28)))
)))
(assert  (and (= ($generated@@3 $generated@@33) 3) (= ($generated@@3 $generated@@37) 4)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (or ($generated@@34 $generated@@40 $generated@@41 $generated@@42 $generated@@44 ($generated@@32 $generated@@33 $generated@@45)) (and (< 1 $generated@@29) (and (or (not (= $generated@@44 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@44 ($generated@@38 $generated@@40 $generated@@41))))) (and (and (=> (< 0 ($generated@@25 $generated@@45)) ($generated@@34 $generated@@40 $generated@@41 $generated@@42 $generated@@44 ($generated@@23 $generated@@45 ($generated@@24 1)))) (=> (=> (< 0 ($generated@@25 $generated@@45)) ($generated@@30 $generated@@40 $generated@@41 $generated@@42 ($generated@@31 $generated@@43) $generated@@44 ($generated@@23 $generated@@45 ($generated@@24 1)))) (=> (= ($generated@@39 0) ($generated@@25 $generated@@45)) (forall (($generated@@46 T@U) ) (!  (=> ($generated@@19 $generated@@46 $generated@@45) ($generated@@34 $generated@@40 $generated@@41 $generated@@42 $generated@@44 $generated@@46))
 :pattern ( ($generated@@30 $generated@@40 $generated@@41 $generated@@42 ($generated@@31 $generated@@43) $generated@@44 $generated@@46))
))))) (= ($generated@@30 $generated@@40 $generated@@41 $generated@@42 ($generated@@31 $generated@@43) $generated@@44 ($generated@@32 $generated@@33 $generated@@45))  (and (=> (< 0 ($generated@@25 $generated@@45)) ($generated@@30 $generated@@40 $generated@@41 $generated@@42 ($generated@@31 $generated@@43) $generated@@44 ($generated@@23 $generated@@45 ($generated@@24 1)))) (=> (= ($generated@@39 0) ($generated@@25 $generated@@45)) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@19 $generated@@47 $generated@@45) ($generated@@30 $generated@@40 $generated@@41 $generated@@42 ($generated@@31 $generated@@43) $generated@@44 $generated@@47))
 :pattern ( ($generated@@30 $generated@@40 $generated@@41 $generated@@42 ($generated@@31 $generated@@43) $generated@@44 $generated@@47))
)))))))
 :weight 3
 :pattern ( ($generated@@30 $generated@@40 $generated@@41 $generated@@42 ($generated@@31 $generated@@43) $generated@@44 ($generated@@32 $generated@@33 $generated@@45)))
))))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (or ($generated@@34 $generated@@48 $generated@@49 $generated@@50 $generated@@52 $generated@@53) (and (< 1 $generated@@29) (and (or (not (= $generated@@52 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@52 ($generated@@38 $generated@@48 $generated@@49))))) (and (and (=> (< 0 ($generated@@25 $generated@@53)) ($generated@@34 $generated@@48 $generated@@49 $generated@@50 $generated@@52 ($generated@@23 $generated@@53 ($generated@@24 1)))) (=> (=> (< 0 ($generated@@25 $generated@@53)) ($generated@@30 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 ($generated@@23 $generated@@53 ($generated@@24 1)))) (=> (= ($generated@@39 0) ($generated@@25 $generated@@53)) (forall (($generated@@54 T@U) ) (!  (=> ($generated@@19 $generated@@54 $generated@@53) ($generated@@34 $generated@@48 $generated@@49 $generated@@50 $generated@@52 $generated@@54))
 :pattern ( ($generated@@30 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@54))
))))) (= ($generated@@30 $generated@@48 $generated@@49 $generated@@50 ($generated@@31 $generated@@51) $generated@@52 $generated@@53)  (and (=> (< 0 ($generated@@25 $generated@@53)) ($generated@@30 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 ($generated@@23 $generated@@53 ($generated@@24 1)))) (=> (= ($generated@@39 0) ($generated@@25 $generated@@53)) (forall (($generated@@55 T@U) ) (!  (=> ($generated@@19 $generated@@55 $generated@@53) ($generated@@30 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@55))
 :pattern ( ($generated@@30 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@55))
)))))))
 :pattern ( ($generated@@30 $generated@@48 $generated@@49 $generated@@50 ($generated@@31 $generated@@51) $generated@@52 $generated@@53))
))))
(assert (forall (($generated@@56 Int) ) (! (= ($generated@@39 $generated@@56) $generated@@56)
 :pattern ( ($generated@@39 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@32 $generated@@58 $generated@@57) $generated@@57)
 :pattern ( ($generated@@32 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 ($generated@@59 $generated@@62 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@59 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@66 ($generated@@38 $generated@@64 $generated@@65))  (and ($generated@@36 $generated@@37 $generated@@66 ($generated@@63 $generated@@64 $generated@@65)) (or (not (= $generated@@66 $generated@@35)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@66 ($generated@@38 $generated@@64 $generated@@65)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@66 ($generated@@63 $generated@@64 $generated@@65)))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@30 $generated@@67 $generated@@68 $generated@@69 ($generated@@31 $generated@@70) $generated@@71 $generated@@72) ($generated@@30 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72))
 :pattern ( ($generated@@30 $generated@@67 $generated@@68 $generated@@69 ($generated@@31 $generated@@70) $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@76 ($generated@@63 $generated@@74 $generated@@75))  (or (= $generated@@76 $generated@@35) (= ($generated@@73 $generated@@76) ($generated@@63 $generated@@74 $generated@@75))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@76 ($generated@@63 $generated@@74 $generated@@75)))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and ($generated@@77 $generated@@79) (<= ($generated@@25 $generated@@79) ($generated@@25 $generated@@78))) (and (= ($generated@@77 ($generated@@23 $generated@@78 $generated@@79)) ($generated@@77 $generated@@78)) (= ($generated@@25 ($generated@@23 $generated@@78 $generated@@79)) (- ($generated@@25 $generated@@78) ($generated@@25 $generated@@79)))))
 :pattern ( ($generated@@23 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@80 Int) ) (!  (=> (<= 0 $generated@@80) (and ($generated@@77 ($generated@@24 $generated@@80)) (= ($generated@@25 ($generated@@24 $generated@@80)) $generated@@80)))
 :pattern ( ($generated@@24 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@81 $generated@@37 $generated@@84 ($generated@@38 $generated@@82 $generated@@83) $generated@@85) ($generated@@81 $generated@@37 $generated@@84 ($generated@@63 $generated@@82 $generated@@83) $generated@@85))
 :pattern ( ($generated@@81 $generated@@37 $generated@@84 ($generated@@38 $generated@@82 $generated@@83) $generated@@85))
 :pattern ( ($generated@@81 $generated@@37 $generated@@84 ($generated@@63 $generated@@82 $generated@@83) $generated@@85))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@34 $generated@@86 $generated@@87 $generated@@88 ($generated@@32 $generated@@37 $generated@@90) ($generated@@32 $generated@@33 $generated@@91)) (and (< 1 $generated@@29) (and (or (not (= $generated@@90 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@90 ($generated@@38 $generated@@86 $generated@@87))))) (and (and (=> (< 0 ($generated@@25 $generated@@91)) ($generated@@34 $generated@@86 $generated@@87 $generated@@88 ($generated@@32 $generated@@37 $generated@@90) ($generated@@23 $generated@@91 ($generated@@24 1)))) (=> (=> (< 0 ($generated@@25 $generated@@91)) ($generated@@30 $generated@@86 $generated@@87 $generated@@88 ($generated@@31 $generated@@89) ($generated@@32 $generated@@37 $generated@@90) ($generated@@23 $generated@@91 ($generated@@24 1)))) (=> (= ($generated@@39 0) ($generated@@25 $generated@@91)) (forall (($generated@@92 T@U) ) (!  (=> ($generated@@19 $generated@@92 $generated@@91) ($generated@@34 $generated@@86 $generated@@87 $generated@@88 $generated@@90 $generated@@92))
 :pattern ( ($generated@@30 $generated@@86 $generated@@87 $generated@@88 ($generated@@31 $generated@@89) $generated@@90 $generated@@92))
))))) (= ($generated@@30 $generated@@86 $generated@@87 $generated@@88 ($generated@@31 $generated@@89) ($generated@@32 $generated@@37 $generated@@90) ($generated@@32 $generated@@33 $generated@@91))  (and (=> (< 0 ($generated@@25 $generated@@91)) ($generated@@30 $generated@@86 $generated@@87 $generated@@88 ($generated@@31 $generated@@89) ($generated@@32 $generated@@37 $generated@@90) ($generated@@23 $generated@@91 ($generated@@24 1)))) (=> (= ($generated@@39 0) ($generated@@25 $generated@@91)) (forall (($generated@@93 T@U) ) (!  (=> ($generated@@19 $generated@@93 $generated@@91) ($generated@@30 $generated@@86 $generated@@87 $generated@@88 ($generated@@31 $generated@@89) $generated@@90 $generated@@93))
 :pattern ( ($generated@@30 $generated@@86 $generated@@87 $generated@@88 ($generated@@31 $generated@@89) $generated@@90 $generated@@93))
)))))))
 :weight 3
 :pattern ( ($generated@@30 $generated@@86 $generated@@87 $generated@@88 ($generated@@31 $generated@@89) ($generated@@32 $generated@@37 $generated@@90) ($generated@@32 $generated@@33 $generated@@91)))
))))
(assert  (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@94 $generated@@100 $generated@@101 ($generated@@97 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@102) $generated@@104) $generated@@102)
 :weight 0
)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@94 $generated@@105 $generated@@106 ($generated@@97 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@94 $generated@@105 $generated@@106 $generated@@108 $generated@@110)))
 :weight 0
))) (= ($generated@@3 $generated@@95) 5)) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (= ($generated@@3 ($generated@@96 $generated@@111 $generated@@112)) 6))) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (! (= ($generated@@98 ($generated@@96 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@96 $generated@@113 $generated@@114))
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@96 $generated@@115 $generated@@116))
))))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@81 $generated@@37 $generated@@119 ($generated@@63 $generated@@117 $generated@@118) $generated@@120)  (or (= $generated@@119 $generated@@35) ($generated@@8 ($generated@@59 $generated@@4 ($generated@@94 $generated@@95 $generated@@33 ($generated@@94 $generated@@37 ($generated@@96 $generated@@95 $generated@@33) $generated@@120 $generated@@119) $generated)))))
 :pattern ( ($generated@@81 $generated@@37 $generated@@119 ($generated@@63 $generated@@117 $generated@@118) $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (or ($generated@@19 $generated@@121 $generated@@122) (= $generated@@121 $generated@@122)) ($generated@@19 $generated@@122 $generated@@121))
 :pattern ( ($generated@@19 $generated@@121 $generated@@122) ($generated@@19 $generated@@122 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (<= 0 ($generated@@25 $generated@@123))
 :pattern ( ($generated@@25 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@124 ($generated@@38 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@38 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@127 ($generated@@38 $generated@@128 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@38 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@130 ($generated@@63 $generated@@131 $generated@@132)) $generated@@131)
 :pattern ( ($generated@@63 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@133 ($generated@@63 $generated@@134 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@63 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@59 $generated@@137 ($generated@@60 $generated@@137 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@60 $generated@@137 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (and (and (and (=> ($generated@@19 $generated@@138 $generated@@139) (or (not (= $generated@@138 $generated@@139)) (not true))) (=> (and ($generated@@77 $generated@@138) (not ($generated@@77 $generated@@139))) ($generated@@19 $generated@@138 $generated@@139))) (=> (and ($generated@@77 $generated@@138) ($generated@@77 $generated@@139)) (= ($generated@@19 $generated@@138 $generated@@139) (< ($generated@@25 $generated@@138) ($generated@@25 $generated@@139))))) (=> (and ($generated@@19 $generated@@138 $generated@@139) ($generated@@77 $generated@@139)) ($generated@@77 $generated@@138)))
 :pattern ( ($generated@@19 $generated@@138 $generated@@139))
)))
(assert  (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@140 $generated@@143 $generated@@144 $generated@@145 ($generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@148 $generated@@149) $generated@@146)
 :weight 0
)) (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@155 $generated@@157) (= ($generated@@140 $generated@@150 $generated@@151 $generated@@152 ($generated@@142 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@140 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@140 $generated@@159 $generated@@160 $generated@@161 ($generated@@142 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@140 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 Bool) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@8 ($generated@@140 $generated@@37 $generated@@95 $generated@@4 ($generated@@141 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))  (=> (and (or (not (= $generated@@172 $generated@@168)) (not true)) ($generated@@8 ($generated@@59 $generated@@4 ($generated@@94 $generated@@95 $generated@@33 ($generated@@94 $generated@@37 ($generated@@96 $generated@@95 $generated@@33) $generated@@169 $generated@@172) $generated@@170)))) $generated@@171))
 :pattern ( ($generated@@140 $generated@@37 $generated@@95 $generated@@4 ($generated@@141 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (and (= ($generated@@174 ($generated@@38 $generated@@176 $generated@@177)) $generated@@0) (= ($generated@@175 ($generated@@38 $generated@@176 $generated@@177)) $generated@@2))
 :pattern ( ($generated@@38 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (and (= ($generated@@174 ($generated@@63 $generated@@178 $generated@@179)) $generated@@1) (= ($generated@@175 ($generated@@63 $generated@@178 $generated@@179)) $generated@@2))
 :pattern ( ($generated@@63 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> ($generated@@77 $generated@@180) (= $generated@@180 ($generated@@24 ($generated@@25 $generated@@180))))
 :pattern ( ($generated@@25 $generated@@180))
 :pattern ( ($generated@@77 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and ($generated@@77 $generated@@182) (<= ($generated@@25 $generated@@182) ($generated@@25 $generated@@181))) (or (and (= $generated@@182 ($generated@@24 0)) (= ($generated@@23 $generated@@181 $generated@@182) $generated@@181)) (and (or (not (= $generated@@182 ($generated@@24 0))) (not true)) ($generated@@19 ($generated@@23 $generated@@181 $generated@@182) $generated@@181))))
 :pattern ( ($generated@@23 $generated@@181 $generated@@182))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (or (not (= $generated@@187 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@187 ($generated@@38 $generated@@183 $generated@@184))) (= $generated@@188 ($generated@@24 0))) ($generated@@30 $generated@@183 $generated@@184 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
 :pattern ( ($generated@@30 $generated@@183 $generated@@184 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 Int) ) (! (= ($generated@@60 $generated@@5 ($generated@@9 ($generated@@39 $generated@@189))) ($generated@@32 $generated@@33 ($generated@@60 $generated@@5 ($generated@@9 $generated@@189))))
 :pattern ( ($generated@@60 $generated@@5 ($generated@@9 ($generated@@39 $generated@@189))))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@T) ) (! (= ($generated@@60 $generated@@191 ($generated@@32 $generated@@191 $generated@@190)) ($generated@@32 $generated@@33 ($generated@@60 $generated@@191 $generated@@190)))
 :pattern ( ($generated@@60 $generated@@191 ($generated@@32 $generated@@191 $generated@@190)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@206  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@34 $generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@196) (or ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 $generated@@197) $generated@@195 $generated@@196) (=> (< 0 ($generated@@25 $generated@@196)) ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 ($generated@@31 $generated@@197)) $generated@@195 ($generated@@23 $generated@@196 ($generated@@24 1))))))) (=> (=> ($generated@@34 $generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@196) (or ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 $generated@@197) $generated@@195 $generated@@196) (=> (< 0 ($generated@@25 $generated@@196)) ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 ($generated@@31 $generated@@197)) $generated@@195 ($generated@@23 $generated@@196 ($generated@@24 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@34 $generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@196) (or ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 $generated@@197) $generated@@195 $generated@@196) (=> (= ($generated@@39 0) ($generated@@25 $generated@@196)) (forall (($generated@@207 T@U) ) (!  (=> ($generated@@19 $generated@@207 $generated@@196) ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 ($generated@@31 $generated@@197)) $generated@@195 $generated@@207))
 :pattern ( ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 ($generated@@31 $generated@@197)) $generated@@195 $generated@@207))
))))))))))
(let (($generated@@208  (=> (<= ($generated@@25 $generated@@196) 0) (=> (and (and (and ($generated@@198 $generated@@199) ($generated@@200 $generated@@199)) (= $generated@@201 $generated@@199)) (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and ($generated@@36 $generated@@37 $generated@@210 ($generated@@38 $generated@@192 $generated@@193)) ($generated@@19 $generated@@209 $generated@@196)) ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 $generated@@197) $generated@@210 $generated@@209))
 :pattern ( ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 $generated@@197) $generated@@210 $generated@@209))
)) (= (ControlFlow 0 7) 2))) $generated@@206))))
(let (($generated@@211  (=> (< 0 ($generated@@25 $generated@@196)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@77 ($generated@@32 $generated@@33 ($generated@@24 1)))) (=> ($generated@@77 ($generated@@32 $generated@@33 ($generated@@24 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@25 ($generated@@32 $generated@@33 ($generated@@24 1))) ($generated@@25 $generated@@196))) (=> (<= ($generated@@25 ($generated@@32 $generated@@33 ($generated@@24 1))) ($generated@@25 $generated@@196)) (=> (= $generated@@202 ($generated@@23 $generated@@196 ($generated@@24 1))) (=> (and (and (and ($generated@@198 $generated@@203) ($generated@@200 $generated@@203)) ($generated@@34 $generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@202)) (and (and ($generated@@34 $generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@202) (and ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 $generated@@197) $generated@@195 $generated@@202) (and (=> (< 0 ($generated@@25 $generated@@202)) ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 $generated@@197) $generated@@195 ($generated@@23 $generated@@202 ($generated@@24 1)))) (=> (= ($generated@@39 0) ($generated@@25 $generated@@202)) (forall (($generated@@212 T@U) ) (!  (=> ($generated@@19 $generated@@212 $generated@@202) ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 $generated@@197) $generated@@195 $generated@@212))
 :pattern ( ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 $generated@@197) $generated@@195 $generated@@212))
)))))) (and (= $generated@@201 $generated@@203) (= (ControlFlow 0 4) 2)))) $generated@@206)))))))))
(let (($generated@@213  (=> (= $generated@@204 ($generated@@141 $generated@@35 $generated@@205 $generated false)) (=> (and (and ($generated@@198 $generated@@201) ($generated@@200 $generated@@201)) (and (= $generated@@205 $generated@@201) (forall (($generated@@214 T@U) ) (!  (=> (and ($generated@@8 ($generated@@32 $generated@@4 ($generated@@7 true))) (or ($generated@@19 $generated@@214 $generated@@196) (and (= $generated@@214 $generated@@196) (and (= $generated@@195 $generated@@35) (or (not (= $generated@@195 $generated@@35)) (not true)))))) ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 $generated@@197) $generated@@195 $generated@@214))
 :pattern ( ($generated@@30 $generated@@192 $generated@@193 $generated@@194 ($generated@@31 $generated@@197) $generated@@195 $generated@@214))
)))) (and (=> (= (ControlFlow 0 8) 4) $generated@@211) (=> (= (ControlFlow 0 8) 7) $generated@@208))))))
(let (($generated@@215  (=> (and ($generated@@198 $generated@@205) ($generated@@200 $generated@@205)) (=> (and (and ($generated@@36 $generated@@37 $generated@@195 ($generated@@38 $generated@@192 $generated@@193)) ($generated@@81 $generated@@37 $generated@@195 ($generated@@38 $generated@@192 $generated@@193) $generated@@205)) (and (= 2 $generated@@29) (= (ControlFlow 0 9) 8))) $generated@@213))))
$generated@@215))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
