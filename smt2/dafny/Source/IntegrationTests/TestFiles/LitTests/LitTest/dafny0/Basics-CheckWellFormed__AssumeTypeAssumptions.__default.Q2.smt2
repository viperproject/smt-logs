(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@T T@T) T@T)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@70 (Int) Int)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 (T@U Int) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and (or (not (= $generated@@29 $generated@@25)) (not true)) (= ($generated@@26 $generated@@29) ($generated@@24 $generated@@28))) ($generated@@27 $generated@@8 ($generated@@12 ($generated@@23 $generated@@29)) $generated))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@24 $generated@@28))
)))
(assert (= ($generated@@6 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35) ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
)))
(assert (= ($generated@@36 $generated@@37) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@39 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@39 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@39 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@6 $generated@@40) 4)) (= ($generated@@6 $generated@@41) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@6 ($generated@@42 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@42 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@42 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@42 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@42 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@64 ($generated@@24 $generated@@63) $generated@@65)  (or (= $generated@@64 $generated@@25) ($generated@@11 ($generated@@38 $generated@@7 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@31 ($generated@@42 $generated@@40 $generated@@41) $generated@@65 $generated@@64) $generated@@2)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@64 ($generated@@24 $generated@@63) $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@66 $generated@@67 $generated@@68) (forall (($generated@@69 T@U) ) (!  (=> ($generated@@11 ($generated@@38 $generated@@7 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@31 ($generated@@42 $generated@@40 $generated@@41) $generated@@67 $generated@@69) $generated@@2))) ($generated@@11 ($generated@@38 $generated@@7 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@31 ($generated@@42 $generated@@40 $generated@@41) $generated@@68 $generated@@69) $generated@@2))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@31 ($generated@@42 $generated@@40 $generated@@41) $generated@@68 $generated@@69) $generated@@2))
)))
 :pattern ( ($generated@@66 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@71 Int) ) (! (= ($generated@@70 $generated@@71) $generated@@71)
 :pattern ( ($generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 ($generated@@38 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@38 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@79 ($generated@@32 $generated@@78))  (and ($generated@@27 $generated@@31 $generated@@79 ($generated@@24 $generated@@78)) (or (not (= $generated@@79 $generated@@25)) (not true))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@79 ($generated@@32 $generated@@78)))
 :pattern ( ($generated@@27 $generated@@31 $generated@@79 ($generated@@24 $generated@@78)))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@80 ($generated@@75 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@30 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@80 ($generated@@75 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@66 $generated@@85 $generated@@86) (=> ($generated@@80 $generated@@87 $generated@@88 $generated@@85) ($generated@@80 $generated@@87 $generated@@88 $generated@@86)))
 :pattern ( ($generated@@66 $generated@@85 $generated@@86) ($generated@@80 $generated@@87 $generated@@88 $generated@@85))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (!  (=> ($generated@@66 $generated@@89 $generated@@90) (=> ($generated@@30 $generated@@93 $generated@@91 $generated@@92 $generated@@89) ($generated@@30 $generated@@93 $generated@@91 $generated@@92 $generated@@90)))
 :pattern ( ($generated@@66 $generated@@89 $generated@@90) ($generated@@30 $generated@@93 $generated@@91 $generated@@92 $generated@@89))
)))
(assert (forall (($generated@@95 T@U) ) (!  (and (= ($generated@@22 ($generated@@24 $generated@@95)) $generated@@3) (= ($generated@@94 ($generated@@24 $generated@@95)) $generated@@5))
 :pattern ( ($generated@@24 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (!  (and (= ($generated@@22 ($generated@@32 $generated@@96)) $generated@@4) (= ($generated@@94 ($generated@@32 $generated@@96)) $generated@@5))
 :pattern ( ($generated@@32 $generated@@96))
)))
(assert  (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@97 $generated@@100 $generated@@101 $generated@@102 ($generated@@99 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@105 $generated@@106) $generated@@103)
 :weight 0
)) (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@112 $generated@@114) (= ($generated@@97 $generated@@107 $generated@@108 $generated@@109 ($generated@@99 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@114 $generated@@115) ($generated@@97 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@114 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@97 $generated@@116 $generated@@117 $generated@@118 ($generated@@99 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@97 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@11 ($generated@@97 $generated@@31 $generated@@40 $generated@@7 ($generated@@98 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))  (=> (and (or (not (= $generated@@129 $generated@@125)) (not true)) ($generated@@11 ($generated@@38 $generated@@7 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@31 ($generated@@42 $generated@@40 $generated@@41) $generated@@126 $generated@@129) $generated@@127)))) (= $generated@@129 $generated@@128)))
 :pattern ( ($generated@@97 $generated@@31 $generated@@40 $generated@@7 ($generated@@98 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@132 ($generated@@24 $generated@@131))  (or (= $generated@@132 $generated@@25) (= ($generated@@26 $generated@@132) ($generated@@24 $generated@@131))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@132 ($generated@@24 $generated@@131)))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (or (not (= $generated@@133 $generated@@135)) (not true)) (=> (and ($generated@@66 $generated@@133 $generated@@134) ($generated@@66 $generated@@134 $generated@@135)) ($generated@@66 $generated@@133 $generated@@135)))
 :pattern ( ($generated@@66 $generated@@133 $generated@@134) ($generated@@66 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@136 $generated@@137 $generated) (and (= ($generated@@75 $generated@@8 ($generated@@38 $generated@@8 $generated@@137)) $generated@@137) ($generated@@27 $generated@@8 ($generated@@38 $generated@@8 $generated@@137) $generated)))
 :pattern ( ($generated@@136 $generated@@137 $generated))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@T) ) (! (= ($generated@@136 ($generated@@75 $generated@@140 $generated@@138) $generated@@139) ($generated@@27 $generated@@140 $generated@@138 $generated@@139))
 :pattern ( ($generated@@136 ($generated@@75 $generated@@140 $generated@@138) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! (<= 0 ($generated@@23 $generated@@141))
 :pattern ( ($generated@@23 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (! (<= 0 ($generated@@36 $generated@@142))
 :pattern ( ($generated@@36 $generated@@142))
)))
(assert (= ($generated@@6 $generated@@143) 7))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@30 $generated@@143 $generated@@146 ($generated@@144 $generated@@147) $generated@@148) (forall (($generated@@149 Int) ) (!  (=> (and (<= 0 $generated@@149) (< $generated@@149 ($generated@@36 $generated@@146))) ($generated@@80 ($generated@@145 $generated@@146 $generated@@149) $generated@@147 $generated@@148))
 :pattern ( ($generated@@145 $generated@@146 $generated@@149))
)))
 :pattern ( ($generated@@30 $generated@@143 $generated@@146 ($generated@@144 $generated@@147) $generated@@148))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@150 ($generated@@144 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@144 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@22 ($generated@@144 $generated@@152)) $generated@@1)
 :pattern ( ($generated@@144 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@153 ($generated@@24 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@24 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@155 ($generated@@32 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@32 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@T) ) (! (= ($generated@@38 $generated@@158 ($generated@@75 $generated@@158 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@75 $generated@@158 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and ($generated@@159 $generated@@161) (and (or (not (= $generated@@162 $generated@@25)) (not true)) (= ($generated@@26 $generated@@162) ($generated@@24 $generated@@160)))) ($generated@@11 ($generated@@38 $generated@@7 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@31 ($generated@@42 $generated@@40 $generated@@41) $generated@@161 $generated@@162) $generated@@2)))) ($generated@@30 $generated@@8 ($generated@@12 ($generated@@23 $generated@@162)) $generated $generated@@161))
 :pattern ( ($generated@@23 $generated@@162) ($generated@@38 $generated@@7 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@31 ($generated@@42 $generated@@40 $generated@@41) $generated@@161 $generated@@162) $generated@@2)) ($generated@@24 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@136 $generated@@163 ($generated@@144 $generated@@164)) (and (= ($generated@@75 $generated@@143 ($generated@@38 $generated@@143 $generated@@163)) $generated@@163) ($generated@@27 $generated@@143 ($generated@@38 $generated@@143 $generated@@163) ($generated@@144 $generated@@164))))
 :pattern ( ($generated@@136 $generated@@163 ($generated@@144 $generated@@164)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@136 $generated@@166 ($generated@@24 $generated@@165)) (and (= ($generated@@75 $generated@@31 ($generated@@38 $generated@@31 $generated@@166)) $generated@@166) ($generated@@27 $generated@@31 ($generated@@38 $generated@@31 $generated@@166) ($generated@@24 $generated@@165))))
 :pattern ( ($generated@@136 $generated@@166 ($generated@@24 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@136 $generated@@168 ($generated@@32 $generated@@167)) (and (= ($generated@@75 $generated@@31 ($generated@@38 $generated@@31 $generated@@168)) $generated@@168) ($generated@@27 $generated@@31 ($generated@@38 $generated@@31 $generated@@168) ($generated@@32 $generated@@167))))
 :pattern ( ($generated@@136 $generated@@168 ($generated@@32 $generated@@167)))
)))
(assert (forall (($generated@@169 Int) ) (! (= ($generated@@75 $generated@@8 ($generated@@12 ($generated@@70 $generated@@169))) ($generated@@72 $generated@@41 ($generated@@75 $generated@@8 ($generated@@12 $generated@@169))))
 :pattern ( ($generated@@75 $generated@@8 ($generated@@12 ($generated@@70 $generated@@169))))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@75 $generated@@171 ($generated@@72 $generated@@171 $generated@@170)) ($generated@@72 $generated@@41 ($generated@@75 $generated@@171 $generated@@170)))
 :pattern ( ($generated@@75 $generated@@171 ($generated@@72 $generated@@171 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= ($generated@@36 $generated@@172) 0) (= $generated@@172 $generated@@37))
 :pattern ( ($generated@@36 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! ($generated@@30 $generated@@8 $generated@@174 $generated $generated@@173)
 :pattern ( ($generated@@30 $generated@@8 $generated@@174 $generated $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@27 $generated@@143 $generated@@175 ($generated@@144 $generated@@176)) (forall (($generated@@177 Int) ) (!  (=> (and (<= 0 $generated@@177) (< $generated@@177 ($generated@@36 $generated@@175))) ($generated@@136 ($generated@@145 $generated@@175 $generated@@177) $generated@@176))
 :pattern ( ($generated@@145 $generated@@175 $generated@@177))
)))
 :pattern ( ($generated@@27 $generated@@143 $generated@@175 ($generated@@144 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ) (! ($generated@@27 $generated@@8 $generated@@178 $generated)
 :pattern ( ($generated@@27 $generated@@8 $generated@@178 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@185 true))
(let (($generated@@186  (=> (and (< $generated@@179 ($generated@@70 0)) (= (ControlFlow 0 4) 1)) $generated@@185)))
(let (($generated@@187  (=> (<= ($generated@@70 0) $generated@@179) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@180 $generated@@25)) (not true))) (=> (or (not (= $generated@@180 $generated@@25)) (not true)) (=> (= (ControlFlow 0 2) 1) $generated@@185))))))
(let (($generated@@188  (=> (= $generated@@181 ($generated@@98 $generated@@25 $generated@@182 $generated@@2 $generated@@180)) (and (=> (= (ControlFlow 0 5) 2) $generated@@187) (=> (= (ControlFlow 0 5) 4) $generated@@186)))))
(let (($generated@@189  (=> (and ($generated@@159 $generated@@182) ($generated@@183 $generated@@182)) (=> (and (and ($generated@@27 $generated@@31 $generated@@180 ($generated@@32 ($generated@@144 $generated))) ($generated@@30 $generated@@31 $generated@@180 ($generated@@32 ($generated@@144 $generated)) $generated@@182)) (and (= 1 $generated@@184) (= (ControlFlow 0 6) 5))) $generated@@188))))
$generated@@189))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
