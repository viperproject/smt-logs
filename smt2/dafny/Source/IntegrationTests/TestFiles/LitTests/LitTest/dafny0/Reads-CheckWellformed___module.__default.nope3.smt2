(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 (T@T T@T) T@T)
(declare-fun $generated@@55 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@77 (Int) Int)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 () Int)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 (T@U Int) T@U)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@2) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@30 $generated@@2) $generated@@3))
(assert (= ($generated@@31 $generated@@32) 0))
(assert (= ($generated@@33 $generated@@34) $generated@@4))
(assert (= ($generated@@12 $generated@@36) 3))
(assert (forall (($generated@@40 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@40 $generated@@37)  (or (= $generated@@40 $generated@@38) (= ($generated@@39 $generated@@40) $generated@@37)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@40 $generated@@37))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@41 $generated@@36 $generated@@43 $generated@@42 $generated@@44) ($generated@@41 $generated@@36 $generated@@43 $generated@@37 $generated@@44))
 :pattern ( ($generated@@41 $generated@@36 $generated@@43 $generated@@42 $generated@@44))
 :pattern ( ($generated@@41 $generated@@36 $generated@@43 $generated@@37 $generated@@44))
)))
(assert (= ($generated@@12 $generated@@45) 4))
(assert ($generated@@35 $generated@@45 $generated@@34 $generated@@46))
(assert (= ($generated@@28 $generated@@47) 0))
(assert (= ($generated@@48 $generated@@8 $generated@@11) $generated@@47))
(assert  (not ($generated@@49 $generated@@47)))
(assert  (and (and (and (and (and (and (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@51 $generated@@58 $generated@@59 ($generated@@55 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@62) $generated@@60)
 :weight 0
)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (or (= $generated@@67 $generated@@68) (= ($generated@@51 $generated@@63 $generated@@64 ($generated@@55 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@68) ($generated@@51 $generated@@63 $generated@@64 $generated@@66 $generated@@68)))
 :weight 0
))) (= ($generated@@12 $generated@@52) 5)) (= ($generated@@12 $generated@@53) 6)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (= ($generated@@12 ($generated@@54 $generated@@69 $generated@@70)) 7))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@56 ($generated@@54 $generated@@71 $generated@@72)) $generated@@71)
 :pattern ( ($generated@@54 $generated@@71 $generated@@72))
))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@57 ($generated@@54 $generated@@73 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@54 $generated@@73 $generated@@74))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@41 $generated@@36 $generated@@75 $generated@@37 $generated@@76)  (or (= $generated@@75 $generated@@38) ($generated@@17 ($generated@@50 $generated@@13 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@36 ($generated@@54 $generated@@52 $generated@@53) $generated@@76 $generated@@75) $generated@@2)))))
 :pattern ( ($generated@@41 $generated@@36 $generated@@75 $generated@@37 $generated@@76))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@77 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@50 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@50 $generated@@84 $generated@@83))
)))
(assert ($generated@@49 $generated@@2))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (and ($generated@@85 $generated@@86) (and (or (not (= $generated@@87 $generated@@38)) (not true)) (= ($generated@@39 $generated@@87) $generated@@37))) ($generated@@17 ($generated@@50 $generated@@13 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@36 ($generated@@54 $generated@@52 $generated@@53) $generated@@86 $generated@@87) $generated@@2)))) ($generated@@41 $generated@@14 ($generated@@50 $generated@@14 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@36 ($generated@@54 $generated@@52 $generated@@53) $generated@@86 $generated@@87) $generated@@47)) $generated $generated@@86))
 :pattern ( ($generated@@50 $generated@@14 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@36 ($generated@@54 $generated@@52 $generated@@53) $generated@@86 $generated@@87) $generated@@47)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@88 ($generated@@82 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@41 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@88 ($generated@@82 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (= ($generated@@12 $generated@@95) 8))
(assert  (=> (<= 1 $generated@@93) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (or ($generated@@96 ($generated@@79 $generated@@95 $generated@@100)) (and (< 1 $generated@@93) (and (and ($generated@@85 $generated@@99) ($generated@@35 $generated@@95 $generated@@100 ($generated@@97 $generated@@42))) (and (> ($generated@@31 ($generated@@79 $generated@@95 $generated@@100)) 0) (> ($generated@@19 ($generated@@50 $generated@@14 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@36 ($generated@@54 $generated@@52 $generated@@53) $generated@@99 ($generated@@50 $generated@@36 ($generated@@98 ($generated@@79 $generated@@95 $generated@@100) ($generated@@77 0)))) $generated@@47))) 0))))) (= ($generated@@94 ($generated@@79 $generated@@95 $generated@@100)) ($generated@@79 $generated@@45 $generated@@34)))
 :weight 3
 :pattern ( ($generated@@94 ($generated@@79 $generated@@95 $generated@@100)) ($generated@@85 $generated@@99))
))))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@101 $generated@@102 $generated@@46) (and (= ($generated@@82 $generated@@45 ($generated@@50 $generated@@45 $generated@@102)) $generated@@102) ($generated@@35 $generated@@45 ($generated@@50 $generated@@45 $generated@@102) $generated@@46)))
 :pattern ( ($generated@@101 $generated@@102 $generated@@46))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@101 $generated@@103 $generated@@42) (and (= ($generated@@82 $generated@@36 ($generated@@50 $generated@@36 $generated@@103)) $generated@@103) ($generated@@35 $generated@@36 ($generated@@50 $generated@@36 $generated@@103) $generated@@42)))
 :pattern ( ($generated@@101 $generated@@103 $generated@@42))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@101 $generated@@104 $generated@@37) (and (= ($generated@@82 $generated@@36 ($generated@@50 $generated@@36 $generated@@104)) $generated@@104) ($generated@@35 $generated@@36 ($generated@@50 $generated@@36 $generated@@104) $generated@@37)))
 :pattern ( ($generated@@101 $generated@@104 $generated@@37))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@105 $generated@@42)  (and ($generated@@35 $generated@@36 $generated@@105 $generated@@37) (or (not (= $generated@@105 $generated@@38)) (not true))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@105 $generated@@42))
 :pattern ( ($generated@@35 $generated@@36 $generated@@105 $generated@@37))
)))
(assert  (=> (<= 1 $generated@@93) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (or ($generated@@96 $generated@@107) (and (< 1 $generated@@93) (and (and ($generated@@85 $generated@@106) ($generated@@35 $generated@@95 $generated@@107 ($generated@@97 $generated@@42))) (and (> ($generated@@31 $generated@@107) 0) (> ($generated@@19 ($generated@@50 $generated@@14 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@36 ($generated@@54 $generated@@52 $generated@@53) $generated@@106 ($generated@@50 $generated@@36 ($generated@@98 $generated@@107 ($generated@@77 0)))) $generated@@47))) 0))))) (= ($generated@@94 $generated@@107) ($generated@@79 $generated@@45 $generated@@34)))
 :pattern ( ($generated@@94 $generated@@107) ($generated@@85 $generated@@106))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (and (= ($generated@@108 ($generated@@48 $generated@@109 $generated@@110)) $generated@@109) (= ($generated@@30 ($generated@@48 $generated@@109 $generated@@110)) $generated@@110))
 :pattern ( ($generated@@48 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@101 $generated@@111 $generated) (and (= ($generated@@82 $generated@@14 ($generated@@50 $generated@@14 $generated@@111)) $generated@@111) ($generated@@35 $generated@@14 ($generated@@50 $generated@@14 $generated@@111) $generated)))
 :pattern ( ($generated@@101 $generated@@111 $generated))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@101 ($generated@@82 $generated@@114 $generated@@112) $generated@@113) ($generated@@35 $generated@@114 $generated@@112 $generated@@113))
 :pattern ( ($generated@@101 ($generated@@82 $generated@@114 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (! (<= 0 ($generated@@31 $generated@@115))
 :pattern ( ($generated@@31 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@41 $generated@@95 $generated@@116 ($generated@@97 $generated@@117) $generated@@118) (forall (($generated@@119 Int) ) (!  (=> (and (<= 0 $generated@@119) (< $generated@@119 ($generated@@31 $generated@@116))) ($generated@@88 ($generated@@98 $generated@@116 $generated@@119) $generated@@117 $generated@@118))
 :pattern ( ($generated@@98 $generated@@116 $generated@@119))
)))
 :pattern ( ($generated@@41 $generated@@95 $generated@@116 ($generated@@97 $generated@@117) $generated@@118))
)))
(assert  (=> (<= 1 $generated@@93) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or ($generated@@96 $generated@@121) (and (< 1 $generated@@93) (and (and ($generated@@85 $generated@@120) (and ($generated@@35 $generated@@95 $generated@@121 ($generated@@97 $generated@@42)) ($generated@@41 $generated@@95 $generated@@121 ($generated@@97 $generated@@42) $generated@@120))) (and (> ($generated@@31 $generated@@121) 0) (> ($generated@@19 ($generated@@50 $generated@@14 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@36 ($generated@@54 $generated@@52 $generated@@53) $generated@@120 ($generated@@50 $generated@@36 ($generated@@98 $generated@@121 ($generated@@77 0)))) $generated@@47))) 0))))) ($generated@@35 $generated@@45 ($generated@@94 $generated@@121) $generated@@46))
 :pattern ( ($generated@@94 $generated@@121) ($generated@@85 $generated@@120))
))))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@97 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@97 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@29 ($generated@@97 $generated@@124)) $generated@@1)
 :pattern ( ($generated@@97 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@50 $generated@@126 ($generated@@82 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@82 $generated@@126 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and ($generated@@85 $generated@@127) (and (or (not (= $generated@@128 $generated@@38)) (not true)) (= ($generated@@39 $generated@@128) $generated@@37))) ($generated@@35 $generated@@14 ($generated@@50 $generated@@14 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@36 ($generated@@54 $generated@@52 $generated@@53) $generated@@127 $generated@@128) $generated@@47)) $generated))
 :pattern ( ($generated@@50 $generated@@14 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@36 ($generated@@54 $generated@@52 $generated@@53) $generated@@127 $generated@@128) $generated@@47)))
)))
(assert  (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@129 $generated@@132 $generated@@133 $generated@@134 ($generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@129 $generated@@139 $generated@@140 $generated@@141 ($generated@@131 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@129 $generated@@148 $generated@@149 $generated@@150 ($generated@@131 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@129 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@17 ($generated@@129 $generated@@36 $generated@@52 $generated@@13 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@17 ($generated@@50 $generated@@13 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@36 ($generated@@54 $generated@@52 $generated@@53) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@129 $generated@@36 $generated@@52 $generated@@13 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@101 $generated@@163 ($generated@@97 $generated@@164)) (and (= ($generated@@82 $generated@@95 ($generated@@50 $generated@@95 $generated@@163)) $generated@@163) ($generated@@35 $generated@@95 ($generated@@50 $generated@@95 $generated@@163) ($generated@@97 $generated@@164))))
 :pattern ( ($generated@@101 $generated@@163 ($generated@@97 $generated@@164)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and ($generated@@85 $generated@@166) ($generated@@35 $generated@@45 $generated@@165 $generated@@46)) ($generated@@41 $generated@@45 $generated@@165 $generated@@46 $generated@@166))
 :pattern ( ($generated@@41 $generated@@45 $generated@@165 $generated@@46 $generated@@166))
)))
(assert (= ($generated@@29 $generated@@46) $generated@@5))
(assert (= ($generated@@167 $generated@@46) $generated@@9))
(assert (= ($generated@@29 $generated@@42) $generated@@6))
(assert (= ($generated@@167 $generated@@42) $generated@@10))
(assert (= ($generated@@29 $generated@@37) $generated@@7))
(assert (= ($generated@@167 $generated@@37) $generated@@10))
(assert (= $generated@@34 ($generated@@79 $generated@@45 $generated@@34)))
(assert (forall (($generated@@168 Int) ) (! (= ($generated@@82 $generated@@14 ($generated@@18 ($generated@@77 $generated@@168))) ($generated@@79 $generated@@53 ($generated@@82 $generated@@14 ($generated@@18 $generated@@168))))
 :pattern ( ($generated@@82 $generated@@14 ($generated@@18 ($generated@@77 $generated@@168))))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@T) ) (! (= ($generated@@82 $generated@@170 ($generated@@79 $generated@@170 $generated@@169)) ($generated@@79 $generated@@53 ($generated@@82 $generated@@170 $generated@@169)))
 :pattern ( ($generated@@82 $generated@@170 ($generated@@79 $generated@@170 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> (= ($generated@@31 $generated@@171) 0) (= $generated@@171 $generated@@32))
 :pattern ( ($generated@@31 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! ($generated@@41 $generated@@14 $generated@@173 $generated $generated@@172)
 :pattern ( ($generated@@41 $generated@@14 $generated@@173 $generated $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@35 $generated@@95 $generated@@174 ($generated@@97 $generated@@175)) (forall (($generated@@176 Int) ) (!  (=> (and (<= 0 $generated@@176) (< $generated@@176 ($generated@@31 $generated@@174))) ($generated@@101 ($generated@@98 $generated@@174 $generated@@176) $generated@@175))
 :pattern ( ($generated@@98 $generated@@174 $generated@@176))
)))
 :pattern ( ($generated@@35 $generated@@95 $generated@@174 ($generated@@97 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ) (! ($generated@@35 $generated@@14 $generated@@177 $generated)
 :pattern ( ($generated@@35 $generated@@14 $generated@@177 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Bool)
(declare-fun $generated@@182 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@183 true))
(let (($generated@@184 true))
(let (($generated@@185  (=> (and (= $generated@@178 ($generated@@130 $generated@@38 $generated@@179 $generated@@2 false)) (> ($generated@@31 $generated@@180) 0)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (and (<= 0 ($generated@@77 0)) (< ($generated@@77 0) ($generated@@31 $generated@@180)))) (=> (and (<= 0 ($generated@@77 0)) (< ($generated@@77 0) ($generated@@31 $generated@@180))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (not (= ($generated@@50 $generated@@36 ($generated@@98 $generated@@180 ($generated@@77 0))) $generated@@38)) (not true))) (=> (or (not (= ($generated@@50 $generated@@36 ($generated@@98 $generated@@180 ($generated@@77 0))) $generated@@38)) (not true)) (=> (and (= $generated@@181 ($generated@@17 ($generated@@129 $generated@@36 $generated@@52 $generated@@13 $generated@@178 ($generated@@50 $generated@@36 ($generated@@98 $generated@@180 ($generated@@77 0))) $generated@@47))) (> ($generated@@19 ($generated@@50 $generated@@14 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@36 ($generated@@54 $generated@@52 $generated@@53) $generated@@179 ($generated@@50 $generated@@36 ($generated@@98 $generated@@180 ($generated@@77 0)))) $generated@@47))) 0)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@181) (=> $generated@@181 (and (=> (= (ControlFlow 0 3) 1) $generated@@184) (=> (= (ControlFlow 0 3) 2) $generated@@183))))))))))))
(let (($generated@@186  (=> (and (and (and ($generated@@85 $generated@@179) ($generated@@182 $generated@@179)) ($generated@@35 $generated@@95 $generated@@180 ($generated@@97 $generated@@42))) (and (= 1 $generated@@93) (= (ControlFlow 0 7) 3))) $generated@@185)))
$generated@@186)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 4))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
