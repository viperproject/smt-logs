(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (Int) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@46 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@52 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@U T@U) Bool)
(declare-fun $generated@@60 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@93 (T@U) Bool)
(declare-fun $generated@@102 (T@U) Bool)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@137 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@T T@T) T@T)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (or (not (= $generated@@25 ($generated@@22 0))) (not true)) (= ($generated@@20 $generated@@23 $generated@@24 $generated@@25 ($generated@@21 $generated@@26) $generated@@27 $generated@@28) ($generated@@20 $generated@@23 $generated@@24 $generated@@25 $generated@@26 $generated@@27 $generated@@28)))
 :pattern ( ($generated@@20 $generated@@23 $generated@@24 $generated@@25 ($generated@@21 $generated@@26) $generated@@27 $generated@@28))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and ($generated@@29 $generated@@30 $generated@@31) ($generated@@29 $generated@@31 $generated@@32)) ($generated@@29 $generated@@30 $generated@@32))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31) ($generated@@29 $generated@@31 $generated@@32))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31) ($generated@@29 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 Int) ($generated@@37 Int) ) (!  (=> (and (and (<= 0 $generated@@36) (<= 0 $generated@@37)) (<= (+ $generated@@36 $generated@@37) ($generated@@34 $generated@@35))) (= ($generated@@33 ($generated@@33 $generated@@35 ($generated@@22 $generated@@36)) ($generated@@22 $generated@@37)) ($generated@@33 $generated@@35 ($generated@@22 (+ $generated@@36 $generated@@37)))))
 :pattern ( ($generated@@33 ($generated@@33 $generated@@35 ($generated@@22 $generated@@36)) ($generated@@22 $generated@@37)))
)))
(assert (= ($generated@@38 $generated@@39) $generated@@1))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (= $generated@@44 $generated@@45) ($generated@@20 $generated@@40 $generated@@41 $generated@@42 ($generated@@21 $generated@@43) $generated@@44 $generated@@45))
 :pattern ( ($generated@@20 $generated@@40 $generated@@41 $generated@@42 ($generated@@21 $generated@@43) $generated@@44 $generated@@45))
)))
(assert (= ($generated@@4 $generated@@47) 3))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> ($generated@@49 $generated@@51) ($generated@@46 $generated@@47 $generated@@39 ($generated@@48 $generated@@50) $generated@@51))
 :pattern ( ($generated@@46 $generated@@47 $generated@@39 ($generated@@48 $generated@@50) $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@52 $generated@@53 $generated@@54 ($generated@@21 $generated@@55) $generated@@56 $generated@@57) (= $generated@@56 $generated@@57))
 :pattern ( ($generated@@52 $generated@@53 $generated@@54 ($generated@@21 $generated@@55) $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (! ($generated@@58 $generated@@47 $generated@@39 ($generated@@48 $generated@@59))
 :pattern ( ($generated@@58 $generated@@47 $generated@@39 ($generated@@48 $generated@@59)))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@58 $generated@@47 ($generated@@60 $generated@@63 $generated@@64) ($generated@@48 $generated@@62))  (and ($generated@@61 $generated@@63 $generated@@62) ($generated@@58 $generated@@47 $generated@@64 ($generated@@48 $generated@@62))))
 :pattern ( ($generated@@58 $generated@@47 ($generated@@60 $generated@@63 $generated@@64) ($generated@@48 $generated@@62)))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 $generated@@66) (= ($generated@@38 $generated@@66) $generated@@1))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 $generated@@68) (= ($generated@@38 $generated@@68) $generated@@2))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@69 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@69 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@67 $generated@@73) (exists (($generated@@74 T@U) ($generated@@75 T@U) ) (= $generated@@73 ($generated@@60 $generated@@74 $generated@@75))))
 :pattern ( ($generated@@67 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@65 $generated@@76) (= $generated@@76 $generated@@39))
 :pattern ( ($generated@@65 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and ($generated@@58 $generated@@47 $generated@@83 ($generated@@48 $generated@@79)) ($generated@@58 $generated@@47 $generated@@84 ($generated@@48 $generated@@80))) (= ($generated@@20 $generated@@79 $generated@@80 $generated@@81 ($generated@@21 $generated@@82) $generated@@83 $generated@@84)  (and (=> (< 0 ($generated@@34 $generated@@81)) (or (and ($generated@@65 $generated@@83) ($generated@@65 $generated@@84)) (and (and ($generated@@67 $generated@@83) ($generated@@67 $generated@@84)) (=> (and ($generated@@67 $generated@@83) ($generated@@67 $generated@@84)) (and (= ($generated@@77 $generated@@83) ($generated@@77 $generated@@84)) ($generated@@20 $generated@@79 $generated@@80 ($generated@@33 $generated@@81 ($generated@@22 1)) $generated@@82 ($generated@@78 $generated@@83) ($generated@@78 $generated@@84))))))) (=> (and (or (not (= $generated@@81 ($generated@@22 0))) (not true)) (= ($generated@@34 $generated@@81) 0)) ($generated@@52 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@84)))))
 :pattern ( ($generated@@20 $generated@@79 $generated@@80 $generated@@81 ($generated@@21 $generated@@82) $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@85 ($generated@@70 $generated@@89 $generated@@86) $generated@@87 $generated@@88) ($generated@@46 $generated@@89 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@85 ($generated@@70 $generated@@89 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@92 T@U) ) (!  (and (= ($generated@@90 ($generated@@48 $generated@@92)) $generated@@0) (= ($generated@@91 ($generated@@48 $generated@@92)) $generated@@3))
 :pattern ( ($generated@@48 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (and ($generated@@93 $generated@@95) (<= ($generated@@34 $generated@@95) ($generated@@34 $generated@@94))) (and (= ($generated@@93 ($generated@@33 $generated@@94 $generated@@95)) ($generated@@93 $generated@@94)) (= ($generated@@34 ($generated@@33 $generated@@94 $generated@@95)) (- ($generated@@34 $generated@@94) ($generated@@34 $generated@@95)))))
 :pattern ( ($generated@@33 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 Int) ) (!  (=> (<= 0 $generated@@96) (and ($generated@@93 ($generated@@22 $generated@@96)) (= ($generated@@34 ($generated@@22 $generated@@96)) $generated@@96)))
 :pattern ( ($generated@@22 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (and ($generated@@58 $generated@@47 $generated@@100 ($generated@@48 $generated@@97)) ($generated@@58 $generated@@47 $generated@@101 ($generated@@48 $generated@@98))) (= ($generated@@52 $generated@@97 $generated@@98 ($generated@@21 $generated@@99) $generated@@100 $generated@@101)  (or (and ($generated@@65 $generated@@100) ($generated@@65 $generated@@101)) (and (and ($generated@@67 $generated@@100) ($generated@@67 $generated@@101)) (=> (and ($generated@@67 $generated@@100) ($generated@@67 $generated@@101)) (and (= ($generated@@77 $generated@@100) ($generated@@77 $generated@@101)) ($generated@@52 $generated@@97 $generated@@98 $generated@@99 ($generated@@78 $generated@@100) ($generated@@78 $generated@@101))))))))
 :pattern ( ($generated@@52 $generated@@97 $generated@@98 ($generated@@21 $generated@@99) $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@102 $generated@@103) (or ($generated@@65 $generated@@103) ($generated@@67 $generated@@103)))
 :pattern ( ($generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or (or ($generated@@29 $generated@@104 $generated@@105) (= $generated@@104 $generated@@105)) ($generated@@29 $generated@@105 $generated@@104))
 :pattern ( ($generated@@29 $generated@@104 $generated@@105) ($generated@@29 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@58 $generated@@47 $generated@@107 ($generated@@48 $generated@@106)) (or ($generated@@65 $generated@@107) ($generated@@67 $generated@@107)))
 :pattern ( ($generated@@67 $generated@@107) ($generated@@58 $generated@@47 $generated@@107 ($generated@@48 $generated@@106)))
 :pattern ( ($generated@@65 $generated@@107) ($generated@@58 $generated@@47 $generated@@107 ($generated@@48 $generated@@106)))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@61 ($generated@@70 $generated@@110 $generated@@108) $generated@@109) ($generated@@58 $generated@@110 $generated@@108 $generated@@109))
 :pattern ( ($generated@@61 ($generated@@70 $generated@@110 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (<= 0 ($generated@@34 $generated@@111))
 :pattern ( ($generated@@34 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@38 ($generated@@60 $generated@@112 $generated@@113)) $generated@@2)
 :pattern ( ($generated@@60 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@77 ($generated@@60 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@60 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@78 ($generated@@60 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@60 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@48 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@48 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@69 $generated@@121 ($generated@@70 $generated@@121 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@70 $generated@@121 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (and (and (and (=> ($generated@@29 $generated@@122 $generated@@123) (or (not (= $generated@@122 $generated@@123)) (not true))) (=> (and ($generated@@93 $generated@@122) (not ($generated@@93 $generated@@123))) ($generated@@29 $generated@@122 $generated@@123))) (=> (and ($generated@@93 $generated@@122) ($generated@@93 $generated@@123)) (= ($generated@@29 $generated@@122 $generated@@123) (< ($generated@@34 $generated@@122) ($generated@@34 $generated@@123))))) (=> (and ($generated@@29 $generated@@122 $generated@@123) ($generated@@93 $generated@@123)) ($generated@@93 $generated@@122)))
 :pattern ( ($generated@@29 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@52 $generated@@124 $generated@@125 ($generated@@21 $generated@@126) $generated@@127 $generated@@128) (forall (($generated@@129 T@U) ) (! ($generated@@20 $generated@@124 $generated@@125 $generated@@129 ($generated@@21 $generated@@126) $generated@@127 $generated@@128)
 :pattern ( ($generated@@20 $generated@@124 $generated@@125 $generated@@129 ($generated@@21 $generated@@126) $generated@@127 $generated@@128))
)))
 :pattern ( ($generated@@52 $generated@@124 $generated@@125 ($generated@@21 $generated@@126) $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@49 $generated@@132) (and ($generated@@67 $generated@@130) ($generated@@46 $generated@@47 $generated@@130 ($generated@@48 $generated@@131) $generated@@132))) ($generated@@85 ($generated@@77 $generated@@130) $generated@@131 $generated@@132))
 :pattern ( ($generated@@85 ($generated@@77 $generated@@130) $generated@@131 $generated@@132))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@133 $generated@@144 $generated@@145 $generated@@146 ($generated@@140 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@133 $generated@@151 $generated@@152 $generated@@153 ($generated@@140 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@133 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@133 $generated@@160 $generated@@161 $generated@@162 ($generated@@140 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@133 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))) (= ($generated@@4 $generated@@134) 4)) (= ($generated@@4 $generated@@135) 5)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@137 $generated@@169 $generated@@170 ($generated@@141 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@171) $generated@@173) $generated@@171)
 :weight 0
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@178 $generated@@179) (= ($generated@@137 $generated@@174 $generated@@175 ($generated@@141 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@176) $generated@@179) ($generated@@137 $generated@@174 $generated@@175 $generated@@177 $generated@@179)))
 :weight 0
))) (= ($generated@@4 $generated@@138) 6)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@4 ($generated@@139 $generated@@180 $generated@@181)) 7))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@142 ($generated@@139 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@139 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@143 ($generated@@139 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@139 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@9 ($generated@@133 $generated@@134 $generated@@135 $generated@@5 ($generated@@136 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))  (=> (and (or (not (= $generated@@190 $generated@@186)) (not true)) ($generated@@9 ($generated@@69 $generated@@5 ($generated@@137 $generated@@135 $generated@@138 ($generated@@137 $generated@@134 ($generated@@139 $generated@@135 $generated@@138) $generated@@187 $generated@@190) $generated@@188)))) $generated@@189))
 :pattern ( ($generated@@133 $generated@@134 $generated@@135 $generated@@5 ($generated@@136 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> ($generated@@61 $generated@@193 ($generated@@48 $generated@@192)) (and (= ($generated@@70 $generated@@47 ($generated@@69 $generated@@47 $generated@@193)) $generated@@193) ($generated@@58 $generated@@47 ($generated@@69 $generated@@47 $generated@@193) ($generated@@48 $generated@@192))))
 :pattern ( ($generated@@61 $generated@@193 ($generated@@48 $generated@@192)))
)))
(assert (forall (($generated@@194 T@U) ) (!  (=> ($generated@@93 $generated@@194) (= $generated@@194 ($generated@@22 ($generated@@34 $generated@@194))))
 :pattern ( ($generated@@34 $generated@@194))
 :pattern ( ($generated@@93 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and ($generated@@49 $generated@@197) (and ($generated@@67 $generated@@195) ($generated@@46 $generated@@47 $generated@@195 ($generated@@48 $generated@@196) $generated@@197))) ($generated@@46 $generated@@47 ($generated@@78 $generated@@195) ($generated@@48 $generated@@196) $generated@@197))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@78 $generated@@195) ($generated@@48 $generated@@196) $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@93 $generated@@199) (<= ($generated@@34 $generated@@199) ($generated@@34 $generated@@198))) (or (and (= $generated@@199 ($generated@@22 0)) (= ($generated@@33 $generated@@198 $generated@@199) $generated@@198)) (and (or (not (= $generated@@199 ($generated@@22 0))) (not true)) ($generated@@29 ($generated@@33 $generated@@198 $generated@@199) $generated@@198))))
 :pattern ( ($generated@@33 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and ($generated@@29 $generated@@202 $generated@@206) ($generated@@20 $generated@@200 $generated@@201 $generated@@206 ($generated@@21 $generated@@203) $generated@@204 $generated@@205)) ($generated@@20 $generated@@200 $generated@@201 $generated@@202 ($generated@@21 $generated@@203) $generated@@204 $generated@@205))
 :pattern ( ($generated@@20 $generated@@200 $generated@@201 $generated@@202 ($generated@@21 $generated@@203) $generated@@204 $generated@@205) ($generated@@20 $generated@@200 $generated@@201 $generated@@206 ($generated@@21 $generated@@203) $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@52 $generated@@207 $generated@@208 ($generated@@21 $generated@@209) $generated@@210 $generated@@211) ($generated@@52 $generated@@207 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
 :pattern ( ($generated@@52 $generated@@207 $generated@@208 ($generated@@21 $generated@@209) $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (forall (($generated@@217 Int) ) (!  (=> (<= 0 $generated@@217) ($generated@@20 $generated@@212 $generated@@213 ($generated@@22 $generated@@217) ($generated@@21 $generated@@214) $generated@@215 $generated@@216))
 :pattern ( ($generated@@20 $generated@@212 $generated@@213 ($generated@@22 $generated@@217) ($generated@@21 $generated@@214) $generated@@215 $generated@@216))
)) ($generated@@52 $generated@@212 $generated@@213 ($generated@@21 $generated@@214) $generated@@215 $generated@@216))
 :pattern ( ($generated@@52 $generated@@212 $generated@@213 ($generated@@21 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> ($generated@@49 $generated@@221) (= ($generated@@46 $generated@@47 ($generated@@60 $generated@@219 $generated@@220) ($generated@@48 $generated@@218) $generated@@221)  (and ($generated@@85 $generated@@219 $generated@@218 $generated@@221) ($generated@@46 $generated@@47 $generated@@220 ($generated@@48 $generated@@218) $generated@@221))))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@60 $generated@@219 $generated@@220) ($generated@@48 $generated@@218) $generated@@221))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@236 true))
(let (($generated@@237  (=> (= $generated@@222 ($generated@@60 $generated@@223 $generated@@224)) (=> (and ($generated@@61 $generated@@223 $generated@@225) ($generated@@58 $generated@@47 $generated@@224 ($generated@@48 $generated@@225))) (=> (and (and (and (and ($generated@@58 $generated@@47 $generated@@226 ($generated@@48 $generated@@225)) ($generated@@46 $generated@@47 $generated@@226 ($generated@@48 $generated@@225) $generated@@227)) (= $generated@@228 $generated@@224)) (and ($generated@@58 $generated@@47 $generated@@228 ($generated@@48 $generated@@225)) (= $generated@@226 $generated@@228))) (and (and (and ($generated@@61 $generated@@229 $generated@@225) ($generated@@85 $generated@@229 $generated@@225 $generated@@227)) (= $generated@@230 $generated@@223)) (and (and ($generated@@61 $generated@@230 $generated@@225) (= $generated@@229 $generated@@230)) (and ($generated@@102 $generated@@222) (= (ControlFlow 0 4) (- 0 3)))))) ($generated@@52 $generated@@225 $generated@@225 ($generated@@21 ($generated@@21 $generated@@231)) $generated@@222 ($generated@@60 $generated@@229 $generated@@226)))))))
(let (($generated@@238  (=> (or (not (= $generated@@222 $generated@@39)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@237) (=> (= (ControlFlow 0 6) 5) $generated@@236)))))
(let (($generated@@239  (=> (= $generated@@222 $generated@@39) (=> (and ($generated@@102 $generated@@222) (= (ControlFlow 0 2) (- 0 1))) ($generated@@52 $generated@@225 $generated@@225 ($generated@@21 ($generated@@21 $generated@@231)) $generated@@222 $generated@@39)))))
(let (($generated@@240  (=> (= $generated@@232 ($generated@@136 $generated@@233 $generated@@227 $generated false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@239) (=> (= (ControlFlow 0 7) 6) $generated@@238)))))
(let (($generated@@241  (=> (and ($generated@@49 $generated@@227) ($generated@@234 $generated@@227)) (=> (and (and (and ($generated@@58 $generated@@47 $generated@@222 ($generated@@48 $generated@@225)) ($generated@@46 $generated@@47 $generated@@222 ($generated@@48 $generated@@225) $generated@@227)) ($generated@@102 $generated@@222)) (and (= 1 $generated@@235) (= (ControlFlow 0 8) 7))) $generated@@240))))
$generated@@241)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
