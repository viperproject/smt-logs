(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U T@U T@U) Bool)
(declare-fun $generated@@54 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@59 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated) $generated@@0))
(assert (forall (($generated@@23 T@U) ) (!  (not ($generated@@21 $generated@@22 $generated@@23))
 :pattern ( ($generated@@21 $generated@@22 $generated@@23))
)))
(assert (= ($generated@@4 $generated@@25) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and (and ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@29 $generated@@30)) (forall (($generated@@33 T@U) ) (!  (=> ($generated@@27 $generated@@33 $generated@@31) ($generated@@27 $generated@@33 $generated@@29))
 :pattern ( ($generated@@27 $generated@@33 $generated@@31))
 :pattern ( ($generated@@27 $generated@@33 $generated@@29))
))) (forall (($generated@@34 T@U) ) (!  (=> ($generated@@27 $generated@@34 $generated@@30) ($generated@@27 $generated@@34 $generated@@32))
 :pattern ( ($generated@@27 $generated@@34 $generated@@30))
 :pattern ( ($generated@@27 $generated@@34 $generated@@32))
))) ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@31 $generated@@32)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@29 $generated@@30)) ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@31 $generated@@32)))
)))
(assert (forall (($generated@@36 Int) ) (! (= ($generated@@35 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@37 $generated@@39 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@39 $generated@@38))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and ($generated@@42 $generated@@46) (and ($generated@@27 $generated@@48 $generated@@44) ($generated@@24 $generated@@25 $generated@@47 ($generated@@26 $generated@@44 $generated@@45)))) (= ($generated@@43 ($generated@@40 $generated@@44 $generated@@45 $generated@@41 $generated@@47 $generated@@48) $generated@@22) ($generated@@43 ($generated@@40 $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48) $generated@@22)))
 :pattern ( ($generated@@40 $generated@@44 $generated@@45 $generated@@41 $generated@@47 $generated@@48) ($generated@@42 $generated@@46))
 :pattern ( ($generated@@40 $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 ($generated@@49 $generated@@52 $generated@@51)) $generated@@51)
 :pattern ( ($generated@@49 $generated@@52 $generated@@51))
)))
(assert ($generated@@42 $generated@@41))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@53 ($generated@@50 $generated@@58 $generated@@55) $generated@@56 $generated@@57) ($generated@@54 $generated@@58 $generated@@55 $generated@@56 $generated@@57))
 :pattern ( ($generated@@53 ($generated@@50 $generated@@58 $generated@@55) $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and ($generated@@42 $generated@@64) ($generated@@54 $generated@@25 $generated@@61 ($generated@@26 $generated@@62 $generated@@63) $generated@@64)) (forall (($generated@@65 T@U) ) (!  (=> (and ($generated@@53 $generated@@65 $generated@@62 $generated@@64) ($generated@@60 $generated@@62 $generated@@63 $generated@@64 $generated@@61 $generated@@65)) ($generated@@53 ($generated@@59 $generated@@62 $generated@@63 $generated@@64 $generated@@61 $generated@@65) $generated@@63 $generated@@64))
 :pattern ( ($generated@@59 $generated@@62 $generated@@63 $generated@@64 $generated@@61 $generated@@65))
)))
 :pattern ( ($generated@@54 $generated@@25 $generated@@61 ($generated@@26 $generated@@62 $generated@@63) $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> ($generated@@43 $generated@@66 $generated@@67) (= $generated@@66 $generated@@67))
 :pattern ( ($generated@@43 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@68 ($generated@@26 $generated@@69 $generated@@70)) (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@71) ($generated@@27 $generated@@72 $generated@@69)) ($generated@@60 $generated@@69 $generated@@70 $generated@@71 $generated@@68 $generated@@72)) ($generated@@27 ($generated@@59 $generated@@69 $generated@@70 $generated@@71 $generated@@68 $generated@@72) $generated@@70))
 :pattern ( ($generated@@59 $generated@@69 $generated@@70 $generated@@71 $generated@@68 $generated@@72))
)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@68 ($generated@@26 $generated@@69 $generated@@70)))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@27 $generated@@73 $generated) (and (= ($generated@@50 $generated@@6 ($generated@@49 $generated@@6 $generated@@73)) $generated@@73) ($generated@@24 $generated@@6 ($generated@@49 $generated@@6 $generated@@73) $generated)))
 :pattern ( ($generated@@27 $generated@@73 $generated))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@27 ($generated@@50 $generated@@76 $generated@@74) $generated@@75) ($generated@@24 $generated@@76 $generated@@74 $generated@@75))
 :pattern ( ($generated@@27 ($generated@@50 $generated@@76 $generated@@74) $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@77 ($generated@@26 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@26 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@80 ($generated@@26 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@26 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@49 $generated@@84 ($generated@@50 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@50 $generated@@84 $generated@@83))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@4 $generated@@85) 4) (forall (($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@87 $generated@@94 $generated@@95 ($generated@@91 $generated@@94 $generated@@95 $generated@@97 $generated@@98 $generated@@96) $generated@@98) $generated@@96)
 :weight 0
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (or (= $generated@@103 $generated@@104) (= ($generated@@87 $generated@@99 $generated@@100 ($generated@@91 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@101) $generated@@104) ($generated@@87 $generated@@99 $generated@@100 $generated@@102 $generated@@104)))
 :weight 0
))) (= ($generated@@4 $generated@@88) 5)) (= ($generated@@4 $generated@@89) 6)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (= ($generated@@4 ($generated@@90 $generated@@105 $generated@@106)) 7))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@92 ($generated@@90 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@90 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@90 $generated@@109 $generated@@110))
))))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> ($generated@@42 $generated@@114) (= ($generated@@54 $generated@@25 $generated@@111 ($generated@@26 $generated@@112 $generated@@113) $generated@@114) (forall (($generated@@115 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@115 $generated@@112) ($generated@@53 $generated@@115 $generated@@112 $generated@@114)) ($generated@@60 $generated@@112 $generated@@113 $generated@@114 $generated@@111 $generated@@115)) (forall (($generated@@116 T@U) ) (!  (=> (and (or (not (= $generated@@116 $generated@@86)) (not true)) ($generated@@21 ($generated@@40 $generated@@112 $generated@@113 $generated@@114 $generated@@111 $generated@@115) ($generated@@50 $generated@@85 $generated@@116))) ($generated@@9 ($generated@@49 $generated@@5 ($generated@@87 $generated@@88 $generated@@89 ($generated@@87 $generated@@85 ($generated@@90 $generated@@88 $generated@@89) $generated@@114 $generated@@116) $generated@@1))))
 :pattern ( ($generated@@21 ($generated@@40 $generated@@112 $generated@@113 $generated@@114 $generated@@111 $generated@@115) ($generated@@50 $generated@@85 $generated@@116)))
)))
 :pattern ( ($generated@@59 $generated@@112 $generated@@113 $generated@@114 $generated@@111 $generated@@115))
 :pattern ( ($generated@@40 $generated@@112 $generated@@113 $generated@@114 $generated@@111 $generated@@115))
))))
 :pattern ( ($generated@@54 $generated@@25 $generated@@111 ($generated@@26 $generated@@112 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> ($generated@@27 $generated@@119 ($generated@@26 $generated@@117 $generated@@118)) (and (= ($generated@@50 $generated@@25 ($generated@@49 $generated@@25 $generated@@119)) $generated@@119) ($generated@@24 $generated@@25 ($generated@@49 $generated@@25 $generated@@119) ($generated@@26 $generated@@117 $generated@@118))))
 :pattern ( ($generated@@27 $generated@@119 ($generated@@26 $generated@@117 $generated@@118)))
)))
(assert  (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@120 $generated@@123 $generated@@124 $generated@@125 ($generated@@122 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@128 $generated@@129) $generated@@126)
 :weight 0
)) (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@120 $generated@@130 $generated@@131 $generated@@132 ($generated@@122 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@120 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@120 $generated@@139 $generated@@140 $generated@@141 ($generated@@122 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@120 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 Bool) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@9 ($generated@@120 $generated@@85 $generated@@88 $generated@@5 ($generated@@121 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))  (=> (and (or (not (= $generated@@152 $generated@@148)) (not true)) ($generated@@9 ($generated@@49 $generated@@5 ($generated@@87 $generated@@88 $generated@@89 ($generated@@87 $generated@@85 ($generated@@90 $generated@@88 $generated@@89) $generated@@149 $generated@@152) $generated@@150)))) $generated@@151))
 :pattern ( ($generated@@120 $generated@@85 $generated@@88 $generated@@5 ($generated@@121 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (and (= ($generated@@20 ($generated@@26 $generated@@155 $generated@@156)) $generated@@2) (= ($generated@@154 ($generated@@26 $generated@@155 $generated@@156)) $generated@@3))
 :pattern ( ($generated@@26 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@159) (and ($generated@@27 $generated@@161 $generated@@157) ($generated@@24 $generated@@25 $generated@@160 ($generated@@26 $generated@@157 $generated@@158)))) ($generated@@43 ($generated@@40 $generated@@157 $generated@@158 $generated@@41 $generated@@160 $generated@@161) $generated@@22)) (= ($generated@@60 $generated@@157 $generated@@158 $generated@@41 $generated@@160 $generated@@161) ($generated@@60 $generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@161)))
 :pattern ( ($generated@@60 $generated@@157 $generated@@158 $generated@@41 $generated@@160 $generated@@161) ($generated@@42 $generated@@159))
 :pattern ( ($generated@@60 $generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@43 $generated@@162 $generated@@163) (forall (($generated@@164 T@U) ) (! (= ($generated@@21 $generated@@162 $generated@@164) ($generated@@21 $generated@@163 $generated@@164))
 :pattern ( ($generated@@21 $generated@@162 $generated@@164))
 :pattern ( ($generated@@21 $generated@@163 $generated@@164))
)))
 :pattern ( ($generated@@43 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 Int) ) (! (= ($generated@@50 $generated@@6 ($generated@@10 ($generated@@35 $generated@@165))) ($generated@@37 $generated@@89 ($generated@@50 $generated@@6 ($generated@@10 $generated@@165))))
 :pattern ( ($generated@@50 $generated@@6 ($generated@@10 ($generated@@35 $generated@@165))))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@50 $generated@@167 ($generated@@37 $generated@@167 $generated@@166)) ($generated@@37 $generated@@89 ($generated@@50 $generated@@167 $generated@@166)))
 :pattern ( ($generated@@50 $generated@@167 ($generated@@37 $generated@@167 $generated@@166)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! ($generated@@54 $generated@@6 $generated@@169 $generated $generated@@168)
 :pattern ( ($generated@@54 $generated@@6 $generated@@169 $generated $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (! ($generated@@24 $generated@@6 $generated@@170 $generated)
 :pattern ( ($generated@@24 $generated@@6 $generated@@170 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Bool)
(declare-fun $generated@@176 () Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@179 true))
(let (($generated@@180 true))
(let (($generated@@181  (=> (= $generated@@171 ($generated@@121 $generated@@86 $generated@@172 $generated@@1 false)) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@173 ($generated@@26 $generated $generated)) ($generated@@54 $generated@@25 $generated@@173 ($generated@@26 $generated $generated) $generated@@172)) ($generated@@53 ($generated@@50 $generated@@25 $generated@@173) ($generated@@26 $generated $generated) $generated@@172)) (and (and (= $generated@@174 ($generated@@35 10)) ($generated@@54 $generated@@6 ($generated@@10 $generated@@174) $generated $generated@@172)) (and (= $generated@@175 (forall (($generated@@182 T@U) ($generated@@183 T@U) )  (=> (and (and (or (not (= $generated@@182 $generated@@86)) (not true)) ($generated@@9 ($generated@@49 $generated@@5 ($generated@@87 $generated@@88 $generated@@89 ($generated@@87 $generated@@85 ($generated@@90 $generated@@88 $generated@@89) $generated@@172 $generated@@182) $generated@@1)))) ($generated@@21 ($generated@@40 $generated $generated $generated@@172 $generated@@173 ($generated@@50 $generated@@6 ($generated@@10 $generated@@174))) ($generated@@50 $generated@@85 $generated@@182))) ($generated@@9 ($generated@@120 $generated@@85 $generated@@88 $generated@@5 $generated@@171 $generated@@182 $generated@@183))))) ($generated@@60 $generated $generated $generated@@172 $generated@@173 ($generated@@50 $generated@@6 ($generated@@10 ($generated@@35 10))))))) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@60 $generated $generated $generated@@172 $generated@@173 ($generated@@50 $generated@@6 ($generated@@10 ($generated@@35 10))))) (=> ($generated@@60 $generated $generated $generated@@172 $generated@@173 ($generated@@50 $generated@@6 ($generated@@10 ($generated@@35 10)))) (=> (and (= $generated@@176 (forall (($generated@@184 T@U) ($generated@@185 T@U) )  (=> (and (and (or (not (= $generated@@184 $generated@@86)) (not true)) ($generated@@9 ($generated@@49 $generated@@5 ($generated@@87 $generated@@88 $generated@@89 ($generated@@87 $generated@@85 ($generated@@90 $generated@@88 $generated@@89) $generated@@172 $generated@@184) $generated@@1)))) ($generated@@21 ($generated@@40 $generated $generated $generated@@172 $generated@@173 ($generated@@50 $generated@@6 ($generated@@10 ($generated@@35 10)))) ($generated@@50 $generated@@85 $generated@@184))) ($generated@@9 ($generated@@120 $generated@@85 $generated@@88 $generated@@5 $generated@@171 $generated@@184 $generated@@185))))) (= ($generated@@11 ($generated@@49 $generated@@6 ($generated@@59 $generated $generated $generated@@172 $generated@@173 ($generated@@50 $generated@@6 ($generated@@10 ($generated@@35 10)))))) ($generated@@35 100))) (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@175) (=> $generated@@175 (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@176) (=> $generated@@176 (and (=> (= (ControlFlow 0 3) 1) $generated@@180) (=> (= (ControlFlow 0 3) 2) $generated@@179)))))))))))))
(let (($generated@@186  (=> (and (and ($generated@@42 $generated@@172) ($generated@@177 $generated@@172)) (and (= 0 $generated@@178) (= (ControlFlow 0 7) 3))) $generated@@181)))
$generated@@186)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
