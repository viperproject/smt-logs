(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U T@U T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 (Int) Int)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@64 () Int)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@108 () T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@120 (T@U) Int)
(declare-fun $generated@@121 (T@U) Int)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T T@T) T@T)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (! (= ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27) ($generated@@23 $generated@@25 $generated@@26 $generated@@27))
 :pattern ( ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27))
)))
(assert (= ($generated@@28 $generated@@29) $generated@@2))
(assert (= ($generated@@7 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@33 $generated@@35) ($generated@@30 $generated@@31 $generated@@29 ($generated@@32 $generated@@34) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@29 ($generated@@32 $generated@@34) $generated@@35))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@39 ($generated@@36 $generated@@38) $generated@@40) ($generated@@30 $generated@@31 $generated@@39 ($generated@@32 ($generated@@37 $generated@@38)) $generated@@40))
 :pattern ( ($generated@@30 $generated@@31 $generated@@39 ($generated@@36 $generated@@38) $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ) (! ($generated@@41 $generated@@31 $generated@@29 ($generated@@32 $generated@@42))
 :pattern ( ($generated@@41 $generated@@31 $generated@@29 ($generated@@32 $generated@@42)))
)))
(assert (forall (($generated@@44 Int) ) (! (= ($generated@@43 $generated@@44) $generated@@44)
 :pattern ( ($generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@T) ) (! (= ($generated@@45 $generated@@47 $generated@@46) $generated@@46)
 :pattern ( ($generated@@45 $generated@@47 $generated@@46))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@41 $generated@@31 ($generated@@48 $generated@@51 $generated@@52) ($generated@@32 $generated@@50))  (and ($generated@@49 $generated@@51 $generated@@50) ($generated@@41 $generated@@31 $generated@@52 ($generated@@32 $generated@@50))))
 :pattern ( ($generated@@41 $generated@@31 ($generated@@48 $generated@@51 $generated@@52) ($generated@@32 $generated@@50)))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@53 $generated@@54) (= ($generated@@28 $generated@@54) $generated@@2))
 :pattern ( ($generated@@53 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@55 $generated@@56) (= ($generated@@28 $generated@@56) $generated@@3))
 :pattern ( ($generated@@55 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 ($generated@@57 $generated@@60 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@57 $generated@@60 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@55 $generated@@61) (exists (($generated@@62 T@U) ($generated@@63 T@U) ) (= $generated@@61 ($generated@@48 $generated@@62 $generated@@63))))
 :pattern ( ($generated@@55 $generated@@61))
)))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (or ($generated@@65 $generated@@67 $generated@@69) (and (< 1 $generated@@64) ($generated@@41 $generated@@31 $generated@@69 ($generated@@32 $generated@@67)))) (and (=> (not ($generated@@53 $generated@@69)) (let (($generated@@70 ($generated@@66 $generated@@69)))
($generated@@65 $generated@@67 $generated@@70))) (= ($generated@@23 $generated@@67 ($generated@@24 $generated@@68) $generated@@69) (ite ($generated@@53 $generated@@69) 0 (let (($generated@@71 ($generated@@66 $generated@@69)))
(+ ($generated@@23 $generated@@67 $generated@@68 $generated@@71) 1))))))
 :pattern ( ($generated@@23 $generated@@67 ($generated@@24 $generated@@68) $generated@@69))
))))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@53 $generated@@72) (= $generated@@72 $generated@@29))
 :pattern ( ($generated@@53 $generated@@72))
)))
(assert (= ($generated@@7 $generated@@73) 4))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@41 $generated@@73 $generated@@75 ($generated@@37 $generated@@76)) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@74 $generated@@75 $generated@@77) ($generated@@49 $generated@@77 $generated@@76))
 :pattern ( ($generated@@74 $generated@@75 $generated@@77))
)))
 :pattern ( ($generated@@41 $generated@@73 $generated@@75 ($generated@@37 $generated@@76)))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@78 ($generated@@58 $generated@@82 $generated@@79) $generated@@80 $generated@@81) ($generated@@30 $generated@@82 $generated@@79 $generated@@80 $generated@@81))
 :pattern ( ($generated@@78 ($generated@@58 $generated@@82 $generated@@79) $generated@@80 $generated@@81))
)))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (or ($generated@@65 $generated@@83 ($generated@@45 $generated@@31 $generated@@85)) (and (< 1 $generated@@64) ($generated@@41 $generated@@31 $generated@@85 ($generated@@32 $generated@@83)))) (and (=> (not ($generated@@12 ($generated@@45 $generated@@8 ($generated@@11 ($generated@@53 ($generated@@45 $generated@@31 $generated@@85)))))) (let (($generated@@86 ($generated@@45 $generated@@31 ($generated@@66 ($generated@@45 $generated@@31 $generated@@85)))))
($generated@@65 $generated@@83 $generated@@86))) (= ($generated@@23 $generated@@83 ($generated@@24 $generated@@84) ($generated@@45 $generated@@31 $generated@@85)) (ite ($generated@@53 ($generated@@45 $generated@@31 $generated@@85)) 0 (let (($generated@@87 ($generated@@45 $generated@@31 ($generated@@66 ($generated@@45 $generated@@31 $generated@@85)))))
($generated@@43 (+ ($generated@@23 $generated@@83 ($generated@@24 $generated@@84) $generated@@87) 1)))))))
 :weight 3
 :pattern ( ($generated@@23 $generated@@83 ($generated@@24 $generated@@84) ($generated@@45 $generated@@31 $generated@@85)))
))))
(assert (forall (($generated@@90 T@U) ) (!  (and (= ($generated@@88 ($generated@@32 $generated@@90)) $generated@@1) (= ($generated@@89 ($generated@@32 $generated@@90)) $generated@@5))
 :pattern ( ($generated@@32 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ) (!  (and (= ($generated@@88 ($generated@@36 $generated@@91)) $generated@@4) (= ($generated@@89 ($generated@@36 $generated@@91)) $generated@@6))
 :pattern ( ($generated@@36 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@41 $generated@@31 $generated@@93 ($generated@@32 $generated@@92)) (or ($generated@@53 $generated@@93) ($generated@@55 $generated@@93)))
 :pattern ( ($generated@@55 $generated@@93) ($generated@@41 $generated@@31 $generated@@93 ($generated@@32 $generated@@92)))
 :pattern ( ($generated@@53 $generated@@93) ($generated@@41 $generated@@31 $generated@@93 ($generated@@32 $generated@@92)))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@49 ($generated@@58 $generated@@96 $generated@@94) $generated@@95) ($generated@@41 $generated@@96 $generated@@94 $generated@@95))
 :pattern ( ($generated@@49 ($generated@@58 $generated@@96 $generated@@94) $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@30 $generated@@73 $generated@@97 ($generated@@37 $generated@@98) $generated@@99) (forall (($generated@@100 T@U) ) (!  (=> ($generated@@74 $generated@@97 $generated@@100) ($generated@@78 $generated@@100 $generated@@98 $generated@@99))
 :pattern ( ($generated@@74 $generated@@97 $generated@@100))
)))
 :pattern ( ($generated@@30 $generated@@73 $generated@@97 ($generated@@37 $generated@@98) $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@28 ($generated@@48 $generated@@101 $generated@@102)) $generated@@3)
 :pattern ( ($generated@@48 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@103 ($generated@@48 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@48 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@66 ($generated@@48 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@48 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@41 $generated@@31 $generated@@110 ($generated@@36 $generated@@109))  (and ($generated@@41 $generated@@31 $generated@@110 ($generated@@32 ($generated@@37 $generated@@109))) (<= ($generated@@43 2) ($generated@@23 ($generated@@37 $generated@@109) ($generated@@24 $generated@@108) $generated@@110))))
 :pattern ( ($generated@@41 $generated@@31 $generated@@110 ($generated@@36 $generated@@109)))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@37 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@37 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@88 ($generated@@37 $generated@@113)) $generated)
 :pattern ( ($generated@@37 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@32 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@32 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@36 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@36 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@57 $generated@@119 ($generated@@58 $generated@@119 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@58 $generated@@119 $generated@@118))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (< ($generated@@120 $generated@@122) ($generated@@121 ($generated@@48 $generated@@122 $generated@@123)))
 :pattern ( ($generated@@48 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (< ($generated@@121 $generated@@125) ($generated@@121 ($generated@@48 $generated@@124 $generated@@125)))
 :pattern ( ($generated@@48 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and ($generated@@33 $generated@@128) (and ($generated@@55 $generated@@126) ($generated@@30 $generated@@31 $generated@@126 ($generated@@32 $generated@@127) $generated@@128))) ($generated@@78 ($generated@@103 $generated@@126) $generated@@127 $generated@@128))
 :pattern ( ($generated@@78 ($generated@@103 $generated@@126) $generated@@127 $generated@@128))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@129 $generated@@140 $generated@@141 $generated@@142 ($generated@@136 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@145 $generated@@146) $generated@@143)
 :weight 0
)) (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@129 $generated@@147 $generated@@148 $generated@@149 ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@129 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@129 $generated@@156 $generated@@157 $generated@@158 ($generated@@136 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)))) (= ($generated@@7 $generated@@130) 5)) (= ($generated@@7 $generated@@131) 6)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@133 $generated@@165 $generated@@166 ($generated@@137 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@167) $generated@@169) $generated@@167)
 :weight 0
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@174 $generated@@175) (= ($generated@@133 $generated@@170 $generated@@171 ($generated@@137 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@172) $generated@@175) ($generated@@133 $generated@@170 $generated@@171 $generated@@173 $generated@@175)))
 :weight 0
))) (= ($generated@@7 $generated@@134) 7)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@7 ($generated@@135 $generated@@176 $generated@@177)) 8))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@135 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@139 ($generated@@135 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@135 $generated@@180 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@12 ($generated@@129 $generated@@130 $generated@@131 $generated@@8 ($generated@@132 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))  (=> (and (or (not (= $generated@@186 $generated@@182)) (not true)) ($generated@@12 ($generated@@57 $generated@@8 ($generated@@133 $generated@@131 $generated@@134 ($generated@@133 $generated@@130 ($generated@@135 $generated@@131 $generated@@134) $generated@@183 $generated@@186) $generated@@184)))) $generated@@185))
 :pattern ( ($generated@@129 $generated@@130 $generated@@131 $generated@@8 ($generated@@132 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@120 ($generated@@58 $generated@@31 $generated@@188)) ($generated@@121 $generated@@188))
 :pattern ( ($generated@@120 ($generated@@58 $generated@@31 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@49 $generated@@189 ($generated@@37 $generated@@190)) (and (= ($generated@@58 $generated@@73 ($generated@@57 $generated@@73 $generated@@189)) $generated@@189) ($generated@@41 $generated@@73 ($generated@@57 $generated@@73 $generated@@189) ($generated@@37 $generated@@190))))
 :pattern ( ($generated@@49 $generated@@189 ($generated@@37 $generated@@190)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@49 $generated@@192 ($generated@@32 $generated@@191)) (and (= ($generated@@58 $generated@@31 ($generated@@57 $generated@@31 $generated@@192)) $generated@@192) ($generated@@41 $generated@@31 ($generated@@57 $generated@@31 $generated@@192) ($generated@@32 $generated@@191))))
 :pattern ( ($generated@@49 $generated@@192 ($generated@@32 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> ($generated@@49 $generated@@194 ($generated@@36 $generated@@193)) (and (= ($generated@@58 $generated@@31 ($generated@@57 $generated@@31 $generated@@194)) $generated@@194) ($generated@@41 $generated@@31 ($generated@@57 $generated@@31 $generated@@194) ($generated@@36 $generated@@193))))
 :pattern ( ($generated@@49 $generated@@194 ($generated@@36 $generated@@193)))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and ($generated@@33 $generated@@197) (and ($generated@@55 $generated@@195) ($generated@@30 $generated@@31 $generated@@195 ($generated@@32 $generated@@196) $generated@@197))) ($generated@@30 $generated@@31 ($generated@@66 $generated@@195) ($generated@@32 $generated@@196) $generated@@197))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@66 $generated@@195) ($generated@@32 $generated@@196) $generated@@197))
)))
(assert (= $generated@@29 ($generated@@45 $generated@@31 $generated@@29)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@48 ($generated@@45 $generated@@134 $generated@@198) ($generated@@45 $generated@@31 $generated@@199)) ($generated@@45 $generated@@31 ($generated@@48 $generated@@198 $generated@@199)))
 :pattern ( ($generated@@48 ($generated@@45 $generated@@134 $generated@@198) ($generated@@45 $generated@@31 $generated@@199)))
)))
(assert (forall (($generated@@200 Int) ) (! (= ($generated@@58 $generated@@9 ($generated@@13 ($generated@@43 $generated@@200))) ($generated@@45 $generated@@134 ($generated@@58 $generated@@9 ($generated@@13 $generated@@200))))
 :pattern ( ($generated@@58 $generated@@9 ($generated@@13 ($generated@@43 $generated@@200))))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@T) ) (! (= ($generated@@58 $generated@@202 ($generated@@45 $generated@@202 $generated@@201)) ($generated@@45 $generated@@134 ($generated@@58 $generated@@202 $generated@@201)))
 :pattern ( ($generated@@58 $generated@@202 ($generated@@45 $generated@@202 $generated@@201)))
)))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (or ($generated@@65 $generated@@203 $generated@@205) (and (< 1 $generated@@64) ($generated@@41 $generated@@31 $generated@@205 ($generated@@32 $generated@@203)))) (<= ($generated@@43 0) ($generated@@23 $generated@@203 $generated@@204 $generated@@205)))
 :pattern ( ($generated@@23 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> ($generated@@33 $generated@@209) (= ($generated@@30 $generated@@31 ($generated@@48 $generated@@207 $generated@@208) ($generated@@32 $generated@@206) $generated@@209)  (and ($generated@@78 $generated@@207 $generated@@206 $generated@@209) ($generated@@30 $generated@@31 $generated@@208 ($generated@@32 $generated@@206) $generated@@209))))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@48 $generated@@207 $generated@@208) ($generated@@32 $generated@@206) $generated@@209))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@214  (=> (= (ControlFlow 0 3) (- 0 2)) false)))
(let (($generated@@215 true))
(let (($generated@@216  (=> (= $generated@@210 ($generated@@132 $generated@@211 $generated@@212 $generated@@0 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@215) (=> (= (ControlFlow 0 4) 3) $generated@@214)))))
(let (($generated@@217  (=> (and (and ($generated@@33 $generated@@212) ($generated@@213 $generated@@212)) (and (= 3 $generated@@64) (= (ControlFlow 0 5) 4))) $generated@@216)))
$generated@@217)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
