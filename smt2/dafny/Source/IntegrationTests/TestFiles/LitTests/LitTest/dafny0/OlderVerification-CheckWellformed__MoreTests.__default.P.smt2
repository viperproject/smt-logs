(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T T@T) T@T)
(declare-fun $generated@@50 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) Bool)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) Bool)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@116 () Int)
(declare-fun $generated@@117 (T@U T@U) Bool)
(declare-fun $generated@@118 (T@U) Bool)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Int)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@171 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@27 $generated@@28) $generated@@6))
(assert (= ($generated@@10 $generated@@30) 3))
(assert (forall (($generated@@34 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@34 $generated@@31)  (or (= $generated@@34 $generated@@32) (= ($generated@@33 $generated@@34) $generated@@31)))
 :pattern ( ($generated@@29 $generated@@30 $generated@@34 $generated@@31))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@35 $generated@@30 $generated@@37 $generated@@36 $generated@@38) ($generated@@35 $generated@@30 $generated@@37 $generated@@31 $generated@@38))
 :pattern ( ($generated@@35 $generated@@30 $generated@@37 $generated@@36 $generated@@38))
 :pattern ( ($generated@@35 $generated@@30 $generated@@37 $generated@@31 $generated@@38))
)))
(assert (= ($generated@@10 $generated@@39) 4))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@41 $generated@@43) ($generated@@35 $generated@@39 $generated@@28 ($generated@@40 $generated@@42) $generated@@43))
 :pattern ( ($generated@@35 $generated@@39 $generated@@28 ($generated@@40 $generated@@42) $generated@@43))
)))
(assert (forall (($generated@@44 T@U) ) (! ($generated@@29 $generated@@39 $generated@@28 ($generated@@40 $generated@@44))
 :pattern ( ($generated@@29 $generated@@39 $generated@@28 ($generated@@40 $generated@@44)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@46 $generated@@53 $generated@@54 ($generated@@50 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@57) $generated@@55)
 :weight 0
)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (or (= $generated@@62 $generated@@63) (= ($generated@@46 $generated@@58 $generated@@59 ($generated@@50 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@63) ($generated@@46 $generated@@58 $generated@@59 $generated@@61 $generated@@63)))
 :weight 0
))) (= ($generated@@10 $generated@@47) 5)) (= ($generated@@10 $generated@@48) 6)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (= ($generated@@10 ($generated@@49 $generated@@64 $generated@@65)) 7))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@51 ($generated@@49 $generated@@66 $generated@@67)) $generated@@66)
 :pattern ( ($generated@@49 $generated@@66 $generated@@67))
))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@52 ($generated@@49 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@49 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@35 $generated@@30 $generated@@70 $generated@@31 $generated@@71)  (or (= $generated@@70 $generated@@32) ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@30 ($generated@@49 $generated@@47 $generated@@48) $generated@@71 $generated@@70) $generated@@2)))))
 :pattern ( ($generated@@35 $generated@@30 $generated@@70 $generated@@31 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@29 $generated@@39 ($generated@@75 $generated@@78 $generated@@79) ($generated@@40 $generated@@77))  (and ($generated@@76 $generated@@78 $generated@@77) ($generated@@29 $generated@@39 $generated@@79 ($generated@@40 $generated@@77))))
 :pattern ( ($generated@@29 $generated@@39 ($generated@@75 $generated@@78 $generated@@79) ($generated@@40 $generated@@77)))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@80 $generated@@82 $generated@@83) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@81 $generated@@82 $generated@@84) ($generated@@81 $generated@@83 $generated@@84))
 :pattern ( ($generated@@81 $generated@@82 $generated@@84))
 :pattern ( ($generated@@81 $generated@@83 $generated@@84))
)))
 :pattern ( ($generated@@80 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@85 $generated@@86) (= ($generated@@27 $generated@@86) $generated@@6))
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@87 $generated@@88) (= ($generated@@27 $generated@@88) $generated@@7))
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@45 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@45 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@87 $generated@@92) (exists (($generated@@93 T@U) ($generated@@94 T@U) ) (= $generated@@92 ($generated@@75 $generated@@93 $generated@@94))))
 :pattern ( ($generated@@87 $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@85 $generated@@95) (= $generated@@95 $generated@@28))
 :pattern ( ($generated@@85 $generated@@95))
)))
(assert (= ($generated@@10 $generated@@96) 8))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@29 $generated@@96 $generated@@98 ($generated@@97 $generated@@99)) (forall (($generated@@100 T@U) ) (!  (=> ($generated@@81 $generated@@98 $generated@@100) ($generated@@76 $generated@@100 $generated@@99))
 :pattern ( ($generated@@81 $generated@@98 $generated@@100))
)))
 :pattern ( ($generated@@29 $generated@@96 $generated@@98 ($generated@@97 $generated@@99)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@101 ($generated@@102 $generated@@103) $generated@@104 $generated@@105) ($generated@@101 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@101 ($generated@@102 $generated@@103) $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@106 ($generated@@89 $generated@@110 $generated@@107) $generated@@108 $generated@@109) ($generated@@35 $generated@@110 $generated@@107 $generated@@108 $generated@@109))
 :pattern ( ($generated@@106 ($generated@@89 $generated@@110 $generated@@107) $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ) (!  (and (= ($generated@@26 ($generated@@40 $generated@@112)) $generated@@4) (= ($generated@@111 ($generated@@40 $generated@@112)) $generated@@9))
 :pattern ( ($generated@@40 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@76 $generated@@113 $generated@@36) (and (= ($generated@@89 $generated@@30 ($generated@@45 $generated@@30 $generated@@113)) $generated@@113) ($generated@@29 $generated@@30 ($generated@@45 $generated@@30 $generated@@113) $generated@@36)))
 :pattern ( ($generated@@76 $generated@@113 $generated@@36))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@76 $generated@@114 $generated@@31) (and (= ($generated@@89 $generated@@30 ($generated@@45 $generated@@30 $generated@@114)) $generated@@114) ($generated@@29 $generated@@30 ($generated@@45 $generated@@30 $generated@@114) $generated@@31)))
 :pattern ( ($generated@@76 $generated@@114 $generated@@31))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@115 $generated@@36)  (and ($generated@@29 $generated@@30 $generated@@115 $generated@@31) (or (not (= $generated@@115 $generated@@32)) (not true))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@115 $generated@@36))
 :pattern ( ($generated@@29 $generated@@30 $generated@@115 $generated@@31))
)))
(assert  (=> (<= 2 $generated@@116) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or ($generated@@117 $generated@@120 $generated@@121) (and (< 2 $generated@@116) (and ($generated@@29 $generated@@39 $generated@@120 ($generated@@40 $generated@@36)) ($generated@@29 $generated@@96 $generated@@121 ($generated@@97 $generated@@36))))) (forall (($generated@@122 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@122) ($generated@@118 $generated@@122)) (and ($generated@@101 $generated@@119 $generated@@120 $generated@@121) ($generated@@35 $generated@@96 $generated@@121 ($generated@@97 $generated@@36) $generated@@122))) ($generated@@35 $generated@@39 $generated@@120 ($generated@@40 $generated@@36) $generated@@122))
 :pattern ( ($generated@@118 $generated@@122))
)))
 :pattern ( ($generated@@101 $generated@@119 $generated@@120 $generated@@121))
))))
(assert  (=> (<= 2 $generated@@116) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (or ($generated@@117 $generated@@126 $generated@@127) (and (< 2 $generated@@116) (and ($generated@@29 $generated@@39 $generated@@126 ($generated@@40 $generated@@36)) ($generated@@29 $generated@@96 $generated@@127 ($generated@@97 $generated@@36))))) (and (=> (not ($generated@@85 $generated@@126)) (let (($generated@@128 ($generated@@123 $generated@@126)))
(let (($generated@@129 ($generated@@45 $generated@@30 ($generated@@124 $generated@@126))))
 (=> ($generated@@81 $generated@@127 ($generated@@89 $generated@@30 $generated@@129)) ($generated@@117 $generated@@128 $generated@@127))))) (= ($generated@@101 ($generated@@102 $generated@@125) $generated@@126 $generated@@127) (ite ($generated@@85 $generated@@126) true (let (($generated@@130 ($generated@@123 $generated@@126)))
(let (($generated@@131 ($generated@@45 $generated@@30 ($generated@@124 $generated@@126))))
 (and ($generated@@81 $generated@@127 ($generated@@89 $generated@@30 $generated@@131)) ($generated@@101 $generated@@125 $generated@@130 $generated@@127))))))))
 :pattern ( ($generated@@101 ($generated@@102 $generated@@125) $generated@@126 $generated@@127))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@29 $generated@@39 $generated@@133 ($generated@@40 $generated@@132)) (or ($generated@@85 $generated@@133) ($generated@@87 $generated@@133)))
 :pattern ( ($generated@@87 $generated@@133) ($generated@@29 $generated@@39 $generated@@133 ($generated@@40 $generated@@132)))
 :pattern ( ($generated@@85 $generated@@133) ($generated@@29 $generated@@39 $generated@@133 ($generated@@40 $generated@@132)))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@76 $generated@@134 $generated) (and (= ($generated@@89 $generated@@11 ($generated@@45 $generated@@11 $generated@@134)) $generated@@134) ($generated@@29 $generated@@11 ($generated@@45 $generated@@11 $generated@@134) $generated)))
 :pattern ( ($generated@@76 $generated@@134 $generated))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@76 ($generated@@89 $generated@@137 $generated@@135) $generated@@136) ($generated@@29 $generated@@137 $generated@@135 $generated@@136))
 :pattern ( ($generated@@76 ($generated@@89 $generated@@137 $generated@@135) $generated@@136))
)))
(assert  (=> (<= 2 $generated@@116) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (or ($generated@@117 ($generated@@72 $generated@@39 $generated@@139) ($generated@@72 $generated@@96 $generated@@140)) (and (< 2 $generated@@116) (and ($generated@@29 $generated@@39 $generated@@139 ($generated@@40 $generated@@36)) ($generated@@29 $generated@@96 $generated@@140 ($generated@@97 $generated@@36))))) (and (=> (not ($generated@@15 ($generated@@72 $generated@@11 ($generated@@14 ($generated@@85 ($generated@@72 $generated@@39 $generated@@139)))))) (let (($generated@@141 ($generated@@72 $generated@@39 ($generated@@123 ($generated@@72 $generated@@39 $generated@@139)))))
(let (($generated@@142 ($generated@@72 $generated@@30 ($generated@@45 $generated@@30 ($generated@@124 ($generated@@72 $generated@@39 $generated@@139))))))
 (=> ($generated@@81 ($generated@@72 $generated@@96 $generated@@140) ($generated@@89 $generated@@30 $generated@@142)) ($generated@@117 $generated@@141 ($generated@@72 $generated@@96 $generated@@140)))))) (= ($generated@@101 ($generated@@102 $generated@@138) ($generated@@72 $generated@@39 $generated@@139) ($generated@@72 $generated@@96 $generated@@140)) (ite ($generated@@85 ($generated@@72 $generated@@39 $generated@@139)) true (let (($generated@@143 ($generated@@72 $generated@@39 ($generated@@123 ($generated@@72 $generated@@39 $generated@@139)))))
(let (($generated@@144 ($generated@@72 $generated@@30 ($generated@@45 $generated@@30 ($generated@@124 ($generated@@72 $generated@@39 $generated@@139))))))
 (and ($generated@@81 ($generated@@72 $generated@@96 $generated@@140) ($generated@@89 $generated@@30 $generated@@144)) ($generated@@101 ($generated@@102 $generated@@138) $generated@@143 ($generated@@72 $generated@@96 $generated@@140)))))))))
 :weight 3
 :pattern ( ($generated@@101 ($generated@@102 $generated@@138) ($generated@@72 $generated@@39 $generated@@139) ($generated@@72 $generated@@96 $generated@@140)))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@35 $generated@@96 $generated@@145 ($generated@@97 $generated@@146) $generated@@147) (forall (($generated@@148 T@U) ) (!  (=> ($generated@@81 $generated@@145 $generated@@148) ($generated@@106 $generated@@148 $generated@@146 $generated@@147))
 :pattern ( ($generated@@81 $generated@@145 $generated@@148))
)))
 :pattern ( ($generated@@35 $generated@@96 $generated@@145 ($generated@@97 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@27 ($generated@@75 $generated@@149 $generated@@150)) $generated@@7)
 :pattern ( ($generated@@75 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@124 ($generated@@75 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@75 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@123 ($generated@@75 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@75 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@155 ($generated@@97 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@97 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@26 ($generated@@97 $generated@@157)) $generated@@1)
 :pattern ( ($generated@@97 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@40 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@40 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@45 $generated@@161 ($generated@@89 $generated@@161 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@89 $generated@@161 $generated@@160))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (< ($generated@@162 $generated@@164) ($generated@@163 ($generated@@75 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@75 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (< ($generated@@163 $generated@@167) ($generated@@163 ($generated@@75 $generated@@166 $generated@@167)))
 :pattern ( ($generated@@75 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and ($generated@@41 $generated@@170) (and ($generated@@87 $generated@@168) ($generated@@35 $generated@@39 $generated@@168 ($generated@@40 $generated@@169) $generated@@170))) ($generated@@106 ($generated@@124 $generated@@168) $generated@@169 $generated@@170))
 :pattern ( ($generated@@106 ($generated@@124 $generated@@168) $generated@@169 $generated@@170))
)))
(assert  (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@171 $generated@@174 $generated@@175 $generated@@176 ($generated@@173 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@179 $generated@@180) $generated@@177)
 :weight 0
)) (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@171 $generated@@181 $generated@@182 $generated@@183 ($generated@@173 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@171 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@171 $generated@@190 $generated@@191 $generated@@192 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@171 $generated@@190 $generated@@191 $generated@@192 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)))))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 Bool) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@15 ($generated@@171 $generated@@30 $generated@@47 $generated@@11 ($generated@@172 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@203 $generated@@204))  (=> (and (or (not (= $generated@@203 $generated@@199)) (not true)) ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@30 ($generated@@49 $generated@@47 $generated@@48) $generated@@200 $generated@@203) $generated@@201)))) $generated@@202))
 :pattern ( ($generated@@171 $generated@@30 $generated@@47 $generated@@11 ($generated@@172 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@162 ($generated@@89 $generated@@39 $generated@@205)) ($generated@@163 $generated@@205))
 :pattern ( ($generated@@162 ($generated@@89 $generated@@39 $generated@@205)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> ($generated@@76 $generated@@206 ($generated@@97 $generated@@207)) (and (= ($generated@@89 $generated@@96 ($generated@@45 $generated@@96 $generated@@206)) $generated@@206) ($generated@@29 $generated@@96 ($generated@@45 $generated@@96 $generated@@206) ($generated@@97 $generated@@207))))
 :pattern ( ($generated@@76 $generated@@206 ($generated@@97 $generated@@207)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> ($generated@@76 $generated@@209 ($generated@@40 $generated@@208)) (and (= ($generated@@89 $generated@@39 ($generated@@45 $generated@@39 $generated@@209)) $generated@@209) ($generated@@29 $generated@@39 ($generated@@45 $generated@@39 $generated@@209) ($generated@@40 $generated@@208))))
 :pattern ( ($generated@@76 $generated@@209 ($generated@@40 $generated@@208)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and ($generated@@41 $generated@@212) (and ($generated@@87 $generated@@210) ($generated@@35 $generated@@39 $generated@@210 ($generated@@40 $generated@@211) $generated@@212))) ($generated@@35 $generated@@39 ($generated@@123 $generated@@210) ($generated@@40 $generated@@211) $generated@@212))
 :pattern ( ($generated@@35 $generated@@39 ($generated@@123 $generated@@210) ($generated@@40 $generated@@211) $generated@@212))
)))
(assert (= ($generated@@26 $generated@@36) $generated@@3))
(assert (= ($generated@@111 $generated@@36) $generated@@8))
(assert (= ($generated@@26 $generated@@31) $generated@@5))
(assert (= ($generated@@111 $generated@@31) $generated@@8))
(assert (= $generated@@28 ($generated@@72 $generated@@39 $generated@@28)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@75 ($generated@@72 $generated@@48 $generated@@213) ($generated@@72 $generated@@39 $generated@@214)) ($generated@@72 $generated@@39 ($generated@@75 $generated@@213 $generated@@214)))
 :pattern ( ($generated@@75 ($generated@@72 $generated@@48 $generated@@213) ($generated@@72 $generated@@39 $generated@@214)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@T) ) (! (= ($generated@@89 $generated@@216 ($generated@@72 $generated@@216 $generated@@215)) ($generated@@72 $generated@@48 ($generated@@89 $generated@@216 $generated@@215)))
 :pattern ( ($generated@@89 $generated@@216 ($generated@@72 $generated@@216 $generated@@215)))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! ($generated@@35 $generated@@11 $generated@@218 $generated $generated@@217)
 :pattern ( ($generated@@35 $generated@@11 $generated@@218 $generated $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> ($generated@@41 $generated@@222) (= ($generated@@35 $generated@@39 ($generated@@75 $generated@@220 $generated@@221) ($generated@@40 $generated@@219) $generated@@222)  (and ($generated@@106 $generated@@220 $generated@@219 $generated@@222) ($generated@@35 $generated@@39 $generated@@221 ($generated@@40 $generated@@219) $generated@@222))))
 :pattern ( ($generated@@35 $generated@@39 ($generated@@75 $generated@@220 $generated@@221) ($generated@@40 $generated@@219) $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ) (! ($generated@@29 $generated@@11 $generated@@223 $generated)
 :pattern ( ($generated@@29 $generated@@11 $generated@@223 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@236  (=> (= (ControlFlow 0 4) (- 0 3)) (forall (($generated@@237 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@237) ($generated@@118 $generated@@237)) (and ($generated@@101 ($generated@@102 $generated@@224) $generated@@225 $generated@@226) ($generated@@35 $generated@@96 $generated@@226 ($generated@@97 $generated@@36) $generated@@237))) ($generated@@35 $generated@@39 $generated@@225 ($generated@@40 $generated@@36) $generated@@237))
 :pattern ( ($generated@@118 $generated@@237))
)))))
(let (($generated@@238  (=> (and (and (= ($generated@@101 ($generated@@102 $generated@@224) $generated@@225 $generated@@226)  (and ($generated@@81 $generated@@226 ($generated@@89 $generated@@30 $generated@@227)) ($generated@@101 ($generated@@102 $generated@@224) $generated@@228 $generated@@226))) (=> ($generated@@81 $generated@@226 ($generated@@89 $generated@@30 $generated@@227)) ($generated@@117 $generated@@228 $generated@@226))) (and ($generated@@29 $generated@@11 ($generated@@14 ($generated@@101 ($generated@@102 $generated@@224) $generated@@225 $generated@@226)) $generated) (= (ControlFlow 0 6) 4))) $generated@@236)))
(let (($generated@@239  (=> (and (not ($generated@@81 $generated@@226 ($generated@@89 $generated@@30 $generated@@227))) (= (ControlFlow 0 9) 6)) $generated@@238)))
(let (($generated@@240  (=> ($generated@@81 $generated@@226 ($generated@@89 $generated@@30 $generated@@227)) (=> (and ($generated@@35 $generated@@39 $generated@@228 ($generated@@40 $generated@@36) $generated@@229) ($generated@@35 $generated@@96 $generated@@226 ($generated@@97 $generated@@36) $generated@@229)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (< ($generated@@163 $generated@@228) ($generated@@163 $generated@@225)) (and (= ($generated@@163 $generated@@228) ($generated@@163 $generated@@225)) (and ($generated@@80 $generated@@226 $generated@@226) (not ($generated@@80 $generated@@226 $generated@@226)))))) (=> (or (< ($generated@@163 $generated@@228) ($generated@@163 $generated@@225)) (and (= ($generated@@163 $generated@@228) ($generated@@163 $generated@@225)) (and ($generated@@80 $generated@@226 $generated@@226) (not ($generated@@80 $generated@@226 $generated@@226))))) (=> (and ($generated@@117 $generated@@228 $generated@@226) (= (ControlFlow 0 7) 6)) $generated@@238)))))))
(let (($generated@@241  (=> (= $generated@@225 ($generated@@75 ($generated@@89 $generated@@30 $generated@@230) $generated@@231)) (=> (and (and (and ($generated@@29 $generated@@30 $generated@@230 $generated@@36) ($generated@@29 $generated@@39 $generated@@231 ($generated@@40 $generated@@36))) (and (= $generated@@232 $generated@@231) ($generated@@29 $generated@@39 $generated@@232 ($generated@@40 $generated@@36)))) (and (and (= $generated@@228 $generated@@232) (= $generated@@233 $generated@@230)) (and ($generated@@29 $generated@@30 $generated@@233 $generated@@36) (= $generated@@227 $generated@@233)))) (and (=> (= (ControlFlow 0 10) 7) $generated@@240) (=> (= (ControlFlow 0 10) 9) $generated@@239))))))
(let (($generated@@242  (=> (and (and (= $generated@@225 $generated@@28) (= ($generated@@101 ($generated@@102 $generated@@224) $generated@@225 $generated@@226) ($generated@@15 ($generated@@72 $generated@@11 ($generated@@14 true))))) (and ($generated@@29 $generated@@11 ($generated@@14 ($generated@@101 ($generated@@102 $generated@@224) $generated@@225 $generated@@226)) $generated) (= (ControlFlow 0 5) 4))) $generated@@236)))
(let (($generated@@243 true))
(let (($generated@@244  (=> (or (not (= $generated@@225 $generated@@28)) (not true)) (and (=> (= (ControlFlow 0 11) 10) $generated@@241) (=> (= (ControlFlow 0 11) 2) $generated@@243)))))
(let (($generated@@245 true))
(let (($generated@@246  (=> (= $generated@@234 ($generated@@172 $generated@@32 $generated@@229 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 12) 1) $generated@@245) (=> (= (ControlFlow 0 12) 5) $generated@@242)) (=> (= (ControlFlow 0 12) 11) $generated@@244)))))
(let (($generated@@247  (=> (and ($generated@@41 $generated@@229) ($generated@@235 $generated@@229)) (=> (and (and ($generated@@29 $generated@@39 $generated@@225 ($generated@@40 $generated@@36)) ($generated@@29 $generated@@96 $generated@@226 ($generated@@97 $generated@@36))) (and (= 2 $generated@@116) (= (ControlFlow 0 13) 12))) $generated@@246))))
$generated@@247))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
