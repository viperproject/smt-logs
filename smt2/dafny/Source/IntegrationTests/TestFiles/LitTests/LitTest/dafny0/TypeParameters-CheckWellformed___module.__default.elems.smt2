(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@61 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@67 (T@T T@U T@U) Bool)
(declare-fun $generated@@69 () Int)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@115 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Int)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@168 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@22 ($generated@@21 $generated@@23 $generated@@24) $generated@@24)
 :pattern ( ($generated@@21 $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@25 $generated@@28 $generated@@29 $generated@@30) ($generated@@25 $generated@@28 $generated@@27 $generated@@30))
 :pattern ( ($generated@@25 $generated@@28 ($generated@@26 $generated@@29) $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@22 $generated@@31 $generated@@33) ($generated@@22 ($generated@@21 $generated@@31 $generated@@32) $generated@@33))
 :pattern ( ($generated@@21 $generated@@31 $generated@@32) ($generated@@22 $generated@@31 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@22 $generated@@35 $generated@@37) ($generated@@22 ($generated@@34 $generated@@35 $generated@@36) $generated@@37))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36) ($generated@@22 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@22 $generated@@39 $generated@@40) ($generated@@22 ($generated@@34 $generated@@38 $generated@@39) $generated@@40))
 :pattern ( ($generated@@34 $generated@@38 $generated@@39) ($generated@@22 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@22 ($generated@@21 $generated@@41 $generated@@42) $generated@@43)  (or (= $generated@@43 $generated@@42) ($generated@@22 $generated@@41 $generated@@43)))
 :pattern ( ($generated@@22 ($generated@@21 $generated@@41 $generated@@42) $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> ($generated@@22 $generated@@46 $generated@@47) (not ($generated@@22 ($generated@@44 $generated@@45 $generated@@46) $generated@@47)))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46) ($generated@@22 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ) (!  (not ($generated@@22 $generated@@48 $generated@@49))
 :pattern ( ($generated@@22 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@25 $generated@@51 ($generated@@50 $generated@@52) $generated@@53) ($generated@@25 $generated@@51 $generated@@52 $generated@@53))
 :pattern ( ($generated@@25 $generated@@51 ($generated@@50 $generated@@52) $generated@@53))
)))
(assert (= ($generated@@54 $generated@@55) $generated@@2))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@34 ($generated@@34 $generated@@56 $generated@@57) $generated@@57) ($generated@@34 $generated@@56 $generated@@57))
 :pattern ( ($generated@@34 ($generated@@34 $generated@@56 $generated@@57) $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@22 ($generated@@44 $generated@@58 $generated@@59) $generated@@60)  (and ($generated@@22 $generated@@58 $generated@@60) (not ($generated@@22 $generated@@59 $generated@@60))))
 :pattern ( ($generated@@22 ($generated@@44 $generated@@58 $generated@@59) $generated@@60))
)))
(assert (= ($generated@@5 $generated@@62) 3))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> ($generated@@64 $generated@@66) ($generated@@61 $generated@@62 $generated@@55 ($generated@@63 $generated@@65) $generated@@66))
 :pattern ( ($generated@@61 $generated@@62 $generated@@55 ($generated@@63 $generated@@65) $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! ($generated@@67 $generated@@62 $generated@@55 ($generated@@63 $generated@@68))
 :pattern ( ($generated@@67 $generated@@62 $generated@@55 ($generated@@63 $generated@@68)))
)))
(assert  (=> (<= 1 $generated@@69) (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (or ($generated@@70 $generated@@74 $generated@@76) (and (< 1 $generated@@69) ($generated@@67 $generated@@62 $generated@@76 ($generated@@63 $generated@@74)))) (and (=> (not ($generated@@71 $generated@@76)) (let (($generated@@77 ($generated@@72 $generated@@76)))
($generated@@70 $generated@@74 $generated@@77))) (= ($generated@@25 $generated@@74 ($generated@@50 $generated@@75) $generated@@76) (ite ($generated@@71 $generated@@76) $generated@@48 (let (($generated@@78 ($generated@@72 $generated@@76)))
(let (($generated@@79 ($generated@@73 $generated@@76)))
($generated@@34 ($generated@@21 $generated@@48 $generated@@79) ($generated@@25 $generated@@74 $generated@@75 $generated@@78))))))))
 :pattern ( ($generated@@25 $generated@@74 ($generated@@50 $generated@@75) $generated@@76))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@67 $generated@@62 ($generated@@83 $generated@@86 $generated@@87) ($generated@@63 $generated@@85))  (and ($generated@@84 $generated@@86 $generated@@85) ($generated@@67 $generated@@62 $generated@@87 ($generated@@63 $generated@@85))))
 :pattern ( ($generated@@67 $generated@@62 ($generated@@83 $generated@@86 $generated@@87) ($generated@@63 $generated@@85)))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@71 $generated@@88) (= ($generated@@54 $generated@@88) $generated@@2))
 :pattern ( ($generated@@71 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@89 $generated@@90) (= ($generated@@54 $generated@@90) $generated@@3))
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@91 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@91 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@95 $generated@@96 $generated@@97) (forall (($generated@@98 T@U) ) (!  (or (not ($generated@@22 $generated@@96 $generated@@98)) (not ($generated@@22 $generated@@97 $generated@@98)))
 :pattern ( ($generated@@22 $generated@@96 $generated@@98))
 :pattern ( ($generated@@22 $generated@@97 $generated@@98))
)))
 :pattern ( ($generated@@95 $generated@@96 $generated@@97))
)))
(assert (= ($generated@@5 $generated@@99) 4))
(assert  (=> (<= 1 $generated@@69) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@70 $generated@@100 ($generated@@80 $generated@@62 $generated@@102)) (and (< 1 $generated@@69) ($generated@@67 $generated@@62 $generated@@102 ($generated@@63 $generated@@100)))) (and (=> (not ($generated@@10 ($generated@@80 $generated@@6 ($generated@@9 ($generated@@71 ($generated@@80 $generated@@62 $generated@@102)))))) (let (($generated@@103 ($generated@@80 $generated@@62 ($generated@@72 ($generated@@80 $generated@@62 $generated@@102)))))
($generated@@70 $generated@@100 $generated@@103))) (= ($generated@@25 $generated@@100 ($generated@@50 $generated@@101) ($generated@@80 $generated@@62 $generated@@102)) (ite ($generated@@71 ($generated@@80 $generated@@62 $generated@@102)) $generated@@48 (let (($generated@@104 ($generated@@80 $generated@@62 ($generated@@72 ($generated@@80 $generated@@62 $generated@@102)))))
(let (($generated@@105 ($generated@@80 $generated@@99 ($generated@@73 ($generated@@80 $generated@@62 $generated@@102)))))
($generated@@34 ($generated@@21 $generated@@48 $generated@@105) ($generated@@25 $generated@@100 ($generated@@50 $generated@@101) $generated@@104))))))))
 :weight 3
 :pattern ( ($generated@@25 $generated@@100 ($generated@@50 $generated@@101) ($generated@@80 $generated@@62 $generated@@102)))
))))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@89 $generated@@106) (exists (($generated@@107 T@U) ($generated@@108 T@U) ) (= $generated@@106 ($generated@@83 $generated@@107 $generated@@108))))
 :pattern ( ($generated@@89 $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@71 $generated@@109) (= $generated@@109 $generated@@55))
 :pattern ( ($generated@@71 $generated@@109))
)))
(assert (= ($generated@@5 $generated@@110) 5))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@67 $generated@@110 $generated@@112 ($generated@@111 $generated@@113)) (forall (($generated@@114 T@U) ) (!  (=> ($generated@@22 $generated@@112 $generated@@114) ($generated@@84 $generated@@114 $generated@@113))
 :pattern ( ($generated@@22 $generated@@112 $generated@@114))
)))
 :pattern ( ($generated@@67 $generated@@110 $generated@@112 ($generated@@111 $generated@@113)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@115 ($generated@@92 $generated@@119 $generated@@116) $generated@@117 $generated@@118) ($generated@@61 $generated@@119 $generated@@116 $generated@@117 $generated@@118))
 :pattern ( ($generated@@115 ($generated@@92 $generated@@119 $generated@@116) $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@122 T@U) ) (!  (and (= ($generated@@120 ($generated@@63 $generated@@122)) $generated@@1) (= ($generated@@121 ($generated@@63 $generated@@122)) $generated@@4))
 :pattern ( ($generated@@63 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@22 ($generated@@34 $generated@@123 $generated@@124) $generated@@125)  (or ($generated@@22 $generated@@123 $generated@@125) ($generated@@22 $generated@@124 $generated@@125)))
 :pattern ( ($generated@@22 ($generated@@34 $generated@@123 $generated@@124) $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@95 $generated@@126 $generated@@127) (and (= ($generated@@44 ($generated@@34 $generated@@126 $generated@@127) $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@34 $generated@@126 $generated@@127) $generated@@127) $generated@@126)))
 :pattern ( ($generated@@34 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@67 $generated@@62 $generated@@129 ($generated@@63 $generated@@128)) (or ($generated@@71 $generated@@129) ($generated@@89 $generated@@129)))
 :pattern ( ($generated@@89 $generated@@129) ($generated@@67 $generated@@62 $generated@@129 ($generated@@63 $generated@@128)))
 :pattern ( ($generated@@71 $generated@@129) ($generated@@67 $generated@@62 $generated@@129 ($generated@@63 $generated@@128)))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@84 ($generated@@92 $generated@@132 $generated@@130) $generated@@131) ($generated@@67 $generated@@132 $generated@@130 $generated@@131))
 :pattern ( ($generated@@84 ($generated@@92 $generated@@132 $generated@@130) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@61 $generated@@110 $generated@@133 ($generated@@111 $generated@@134) $generated@@135) (forall (($generated@@136 T@U) ) (!  (=> ($generated@@22 $generated@@133 $generated@@136) ($generated@@115 $generated@@136 $generated@@134 $generated@@135))
 :pattern ( ($generated@@22 $generated@@133 $generated@@136))
)))
 :pattern ( ($generated@@61 $generated@@110 $generated@@133 ($generated@@111 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@54 ($generated@@83 $generated@@137 $generated@@138)) $generated@@3)
 :pattern ( ($generated@@83 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@73 ($generated@@83 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@83 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@72 ($generated@@83 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@83 $generated@@141 $generated@@142))
)))
(assert  (=> (<= 1 $generated@@69) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (or ($generated@@70 $generated@@144 $generated@@146) (and (< 1 $generated@@69) (and ($generated@@67 $generated@@62 $generated@@146 ($generated@@63 $generated@@144)) ($generated@@61 $generated@@62 $generated@@146 ($generated@@63 $generated@@144) $generated@@143)))) ($generated@@64 $generated@@143)) ($generated@@61 $generated@@110 ($generated@@25 $generated@@144 $generated@@145 $generated@@146) ($generated@@111 $generated@@144) $generated@@143))
 :pattern ( ($generated@@61 $generated@@110 ($generated@@25 $generated@@144 $generated@@145 $generated@@146) ($generated@@111 $generated@@144) $generated@@143))
))))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@147 ($generated@@111 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@111 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@120 ($generated@@111 $generated@@149)) $generated)
 :pattern ( ($generated@@111 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@150 ($generated@@63 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@63 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@91 $generated@@153 ($generated@@92 $generated@@153 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@92 $generated@@153 $generated@@152))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (< ($generated@@154 $generated@@156) ($generated@@155 ($generated@@83 $generated@@156 $generated@@157)))
 :pattern ( ($generated@@83 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (< ($generated@@155 $generated@@159) ($generated@@155 ($generated@@83 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@83 $generated@@158 $generated@@159))
)))
(assert  (=> (<= 1 $generated@@69) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (or ($generated@@70 $generated@@160 $generated@@162) (and (< 1 $generated@@69) ($generated@@67 $generated@@62 $generated@@162 ($generated@@63 $generated@@160)))) ($generated@@67 $generated@@110 ($generated@@25 $generated@@160 $generated@@161 $generated@@162) ($generated@@111 $generated@@160)))
 :pattern ( ($generated@@25 $generated@@160 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@34 $generated@@163 ($generated@@34 $generated@@163 $generated@@164)) ($generated@@34 $generated@@163 $generated@@164))
 :pattern ( ($generated@@34 $generated@@163 ($generated@@34 $generated@@163 $generated@@164)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@64 $generated@@167) (and ($generated@@89 $generated@@165) ($generated@@61 $generated@@62 $generated@@165 ($generated@@63 $generated@@166) $generated@@167))) ($generated@@115 ($generated@@73 $generated@@165) $generated@@166 $generated@@167))
 :pattern ( ($generated@@115 ($generated@@73 $generated@@165) $generated@@166 $generated@@167))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@168 $generated@@178 $generated@@179 $generated@@180 ($generated@@174 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@183 $generated@@184) $generated@@181)
 :weight 0
)) (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@168 $generated@@185 $generated@@186 $generated@@187 ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@168 $generated@@194 $generated@@195 $generated@@196 ($generated@@174 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@168 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)))) (= ($generated@@5 $generated@@169) 6)) (= ($generated@@5 $generated@@170) 7)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@172 $generated@@203 $generated@@204 ($generated@@175 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@205) $generated@@207) $generated@@205)
 :weight 0
))) (forall (($generated@@208 T@T) ($generated@@209 T@T) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@212 $generated@@213) (= ($generated@@172 $generated@@208 $generated@@209 ($generated@@175 $generated@@208 $generated@@209 $generated@@211 $generated@@212 $generated@@210) $generated@@213) ($generated@@172 $generated@@208 $generated@@209 $generated@@211 $generated@@213)))
 :weight 0
))) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (= ($generated@@5 ($generated@@173 $generated@@214 $generated@@215)) 8))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@176 ($generated@@173 $generated@@216 $generated@@217)) $generated@@216)
 :pattern ( ($generated@@173 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@177 ($generated@@173 $generated@@218 $generated@@219)) $generated@@219)
 :pattern ( ($generated@@173 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@10 ($generated@@168 $generated@@169 $generated@@170 $generated@@6 ($generated@@171 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (or (not (= $generated@@224 $generated@@220)) (not true)) ($generated@@10 ($generated@@91 $generated@@6 ($generated@@172 $generated@@170 $generated@@99 ($generated@@172 $generated@@169 ($generated@@173 $generated@@170 $generated@@99) $generated@@221 $generated@@224) $generated@@222)))) $generated@@223))
 :pattern ( ($generated@@168 $generated@@169 $generated@@170 $generated@@6 ($generated@@171 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ) (! (= ($generated@@154 ($generated@@92 $generated@@62 $generated@@226)) ($generated@@155 $generated@@226))
 :pattern ( ($generated@@154 ($generated@@92 $generated@@62 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> ($generated@@84 $generated@@227 ($generated@@111 $generated@@228)) (and (= ($generated@@92 $generated@@110 ($generated@@91 $generated@@110 $generated@@227)) $generated@@227) ($generated@@67 $generated@@110 ($generated@@91 $generated@@110 $generated@@227) ($generated@@111 $generated@@228))))
 :pattern ( ($generated@@84 $generated@@227 ($generated@@111 $generated@@228)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> ($generated@@84 $generated@@230 ($generated@@63 $generated@@229)) (and (= ($generated@@92 $generated@@62 ($generated@@91 $generated@@62 $generated@@230)) $generated@@230) ($generated@@67 $generated@@62 ($generated@@91 $generated@@62 $generated@@230) ($generated@@63 $generated@@229))))
 :pattern ( ($generated@@84 $generated@@230 ($generated@@63 $generated@@229)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and ($generated@@64 $generated@@233) (and ($generated@@89 $generated@@231) ($generated@@61 $generated@@62 $generated@@231 ($generated@@63 $generated@@232) $generated@@233))) ($generated@@61 $generated@@62 ($generated@@72 $generated@@231) ($generated@@63 $generated@@232) $generated@@233))
 :pattern ( ($generated@@61 $generated@@62 ($generated@@72 $generated@@231) ($generated@@63 $generated@@232) $generated@@233))
)))
(assert (= $generated@@55 ($generated@@80 $generated@@62 $generated@@55)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= ($generated@@83 ($generated@@80 $generated@@99 $generated@@234) ($generated@@80 $generated@@62 $generated@@235)) ($generated@@80 $generated@@62 ($generated@@83 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@83 ($generated@@80 $generated@@99 $generated@@234) ($generated@@80 $generated@@62 $generated@@235)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@T) ) (! (= ($generated@@92 $generated@@237 ($generated@@80 $generated@@237 $generated@@236)) ($generated@@80 $generated@@99 ($generated@@92 $generated@@237 $generated@@236)))
 :pattern ( ($generated@@92 $generated@@237 ($generated@@80 $generated@@237 $generated@@236)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> ($generated@@64 $generated@@241) (= ($generated@@61 $generated@@62 ($generated@@83 $generated@@239 $generated@@240) ($generated@@63 $generated@@238) $generated@@241)  (and ($generated@@115 $generated@@239 $generated@@238 $generated@@241) ($generated@@61 $generated@@62 $generated@@240 ($generated@@63 $generated@@238) $generated@@241))))
 :pattern ( ($generated@@61 $generated@@62 ($generated@@83 $generated@@239 $generated@@240) ($generated@@63 $generated@@238) $generated@@241))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@257 true))
(let (($generated@@258  (=> (= $generated@@242 ($generated@@83 $generated@@243 $generated@@244)) (=> (and ($generated@@84 $generated@@243 $generated@@245) ($generated@@67 $generated@@62 $generated@@244 ($generated@@63 $generated@@245))) (=> (and (and (and (= $generated@@246 $generated@@244) ($generated@@67 $generated@@62 $generated@@246 ($generated@@63 $generated@@245))) (and (= $generated@@247 $generated@@246) (= $generated@@248 $generated@@243))) (and (and ($generated@@84 $generated@@248 $generated@@245) (= $generated@@249 $generated@@248)) (and ($generated@@61 $generated@@62 $generated@@247 ($generated@@63 $generated@@245) $generated@@250) (= (ControlFlow 0 4) (- 0 3))))) (< ($generated@@155 $generated@@247) ($generated@@155 $generated@@242)))))))
(let (($generated@@259  (=> (or (not (= $generated@@242 $generated@@55)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@258) (=> (= (ControlFlow 0 6) 5) $generated@@257)))))
(let (($generated@@260 true))
(let (($generated@@261 true))
(let (($generated@@262  (=> (and (and (= $generated@@251 ($generated@@171 $generated@@252 $generated@@250 $generated@@0 false)) (= $generated@@253 ($generated@@50 $generated@@254))) (and (= $generated@@255 ($generated@@50 ($generated@@50 $generated@@254))) (= ($generated@@26 $generated@@254) $generated@@254))) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@261) (=> (= (ControlFlow 0 7) 2) $generated@@260)) (=> (= (ControlFlow 0 7) 6) $generated@@259)))))
(let (($generated@@263  (=> (and (and (and ($generated@@64 $generated@@250) ($generated@@256 $generated@@250)) ($generated@@67 $generated@@62 $generated@@242 ($generated@@63 $generated@@245))) (and (= 1 $generated@@69) (= (ControlFlow 0 8) 7))) $generated@@262)))
$generated@@263))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
