(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@T T@T) T@T)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@67 (T@U T@U) T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@23 $generated@@1) $generated@@2))
(assert (= ($generated@@24 $generated@@25) $generated@@3))
(assert (= ($generated@@24 $generated@@26) $generated@@3))
(assert (= ($generated@@5 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@31 $generated@@26)  (or (= $generated@@31 $generated@@29) (= ($generated@@30 $generated@@31) $generated@@26)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@31 $generated@@26))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@38 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@38 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@38 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@5 $generated@@39) 4)) (= ($generated@@5 $generated@@40) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@5 ($generated@@41 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@41 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@41 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@41 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@41 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@33 $generated@@63 $generated@@64) (and ($generated@@34 $generated@@63) (and (or (not (= $generated@@64 $generated@@29)) (not true)) (and ($generated@@27 $generated@@28 $generated@@64 $generated@@25) ($generated@@35 $generated@@28 $generated@@64 $generated@@25 $generated@@63))))) (and (=> ($generated@@32 $generated@@63 $generated@@64) (<= ($generated@@36 0) ($generated@@12 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@63 $generated@@64) $generated@@42))))) (=> (= ($generated@@12 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@63 $generated@@64) $generated@@42))) ($generated@@36 8)) ($generated@@32 $generated@@63 $generated@@64))))
 :pattern ( ($generated@@32 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@35 $generated@@28 $generated@@65 $generated@@25 $generated@@66) ($generated@@35 $generated@@28 $generated@@65 $generated@@26 $generated@@66))
 :pattern ( ($generated@@35 $generated@@28 $generated@@65 $generated@@25 $generated@@66))
 :pattern ( ($generated@@35 $generated@@28 $generated@@65 $generated@@26 $generated@@66))
)))
(assert (= ($generated@@21 $generated@@42) 0))
(assert (= ($generated@@67 $generated@@68 $generated@@4) $generated@@42))
(assert  (not ($generated@@69 $generated@@42)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@35 $generated@@28 $generated@@70 $generated@@26 $generated@@71)  (or (= $generated@@70 $generated@@29) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@71 $generated@@70) $generated@@1)))))
 :pattern ( ($generated@@35 $generated@@28 $generated@@70 $generated@@26 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> ($generated@@72 $generated@@73 $generated@@74) (forall (($generated@@75 T@U) ) (!  (=> ($generated@@10 ($generated@@37 $generated@@6 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@73 $generated@@75) $generated@@1))) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@74 $generated@@75) $generated@@1))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@74 $generated@@75) $generated@@1))
)))
 :pattern ( ($generated@@72 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@36 $generated@@76) $generated@@76)
 :pattern ( ($generated@@36 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@37 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@37 $generated@@82 $generated@@81))
)))
(assert ($generated@@69 $generated@@1))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and (and ($generated@@34 $generated@@83) (and (or (not (= $generated@@84 $generated@@29)) (not true)) (= ($generated@@30 $generated@@84) $generated@@26))) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@83 $generated@@84) $generated@@1)))) ($generated@@35 $generated@@7 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@83 $generated@@84) $generated@@42)) $generated $generated@@83))
 :pattern ( ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@83 $generated@@84) $generated@@42)))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@85 ($generated@@80 $generated@@89 $generated@@86) $generated@@87 $generated@@88) ($generated@@35 $generated@@89 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@85 ($generated@@80 $generated@@89 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@72 $generated@@90 $generated@@91) (=> ($generated@@85 $generated@@92 $generated@@93 $generated@@90) ($generated@@85 $generated@@92 $generated@@93 $generated@@91)))
 :pattern ( ($generated@@72 $generated@@90 $generated@@91) ($generated@@85 $generated@@92 $generated@@93 $generated@@90))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (!  (=> ($generated@@72 $generated@@94 $generated@@95) (=> ($generated@@35 $generated@@98 $generated@@96 $generated@@97 $generated@@94) ($generated@@35 $generated@@98 $generated@@96 $generated@@97 $generated@@95)))
 :pattern ( ($generated@@72 $generated@@94 $generated@@95) ($generated@@35 $generated@@98 $generated@@96 $generated@@97 $generated@@94))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@99 $generated@@25)  (and ($generated@@27 $generated@@28 $generated@@99 $generated@@26) (or (not (= $generated@@99 $generated@@29)) (not true))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@99 $generated@@25))
 :pattern ( ($generated@@27 $generated@@28 $generated@@99 $generated@@26))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or (not (= $generated@@100 $generated@@102)) (not true)) (=> (and ($generated@@72 $generated@@100 $generated@@101) ($generated@@72 $generated@@101 $generated@@102)) ($generated@@72 $generated@@100 $generated@@102)))
 :pattern ( ($generated@@72 $generated@@100 $generated@@101) ($generated@@72 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (and (= ($generated@@103 ($generated@@67 $generated@@104 $generated@@105)) $generated@@104) (= ($generated@@23 ($generated@@67 $generated@@104 $generated@@105)) $generated@@105))
 :pattern ( ($generated@@67 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@37 $generated@@107 ($generated@@80 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@80 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (and (and (and ($generated@@34 $generated@@109) ($generated@@34 $generated@@110)) (and (or (not (= $generated@@111 $generated@@29)) (not true)) ($generated@@27 $generated@@28 $generated@@111 $generated@@25))) (and ($generated@@108 $generated@@109) ($generated@@72 $generated@@109 $generated@@110))) (=> (forall (($generated@@112 T@U) ($generated@@113 T@U) )  (=> (and (or (not (= $generated@@112 $generated@@29)) (not true)) (= $generated@@112 $generated@@111)) (= ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@109 $generated@@112) $generated@@113) ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@110 $generated@@112) $generated@@113)))) (= ($generated@@32 $generated@@109 $generated@@111) ($generated@@32 $generated@@110 $generated@@111))))
 :pattern ( ($generated@@108 $generated@@109) ($generated@@72 $generated@@109 $generated@@110) ($generated@@32 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and ($generated@@34 $generated@@114) (and (or (not (= $generated@@115 $generated@@29)) (not true)) (= ($generated@@30 $generated@@115) $generated@@26))) ($generated@@27 $generated@@7 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@114 $generated@@115) $generated@@42)) $generated))
 :pattern ( ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@114 $generated@@115) $generated@@42)))
)))
(assert  (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@116 $generated@@119 $generated@@120 $generated@@121 ($generated@@118 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@124 $generated@@125) $generated@@122)
 :weight 0
)) (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@116 $generated@@126 $generated@@127 $generated@@128 ($generated@@118 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@116 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@116 $generated@@135 $generated@@136 $generated@@137 ($generated@@118 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@116 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 Bool) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@10 ($generated@@116 $generated@@28 $generated@@39 $generated@@6 ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))  (=> (and (or (not (= $generated@@148 $generated@@144)) (not true)) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@145 $generated@@148) $generated@@146)))) $generated@@147))
 :pattern ( ($generated@@116 $generated@@28 $generated@@39 $generated@@6 ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@34 ($generated@@43 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@150 $generated@@151 ($generated@@43 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@150 $generated@@151) $generated@@152 $generated@@153))) ($generated@@72 $generated@@150 ($generated@@43 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@150 $generated@@151 ($generated@@43 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@150 $generated@@151) $generated@@152 $generated@@153))))
 :pattern ( ($generated@@43 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@150 $generated@@151 ($generated@@43 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@150 $generated@@151) $generated@@152 $generated@@153)))
)))
(assert (forall (($generated@@154 Int) ) (! (= ($generated@@80 $generated@@7 ($generated@@11 ($generated@@36 $generated@@154))) ($generated@@77 $generated@@40 ($generated@@80 $generated@@7 ($generated@@11 $generated@@154))))
 :pattern ( ($generated@@80 $generated@@7 ($generated@@11 ($generated@@36 $generated@@154))))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@80 $generated@@156 ($generated@@77 $generated@@156 $generated@@155)) ($generated@@77 $generated@@40 ($generated@@80 $generated@@156 $generated@@155)))
 :pattern ( ($generated@@80 $generated@@156 ($generated@@77 $generated@@156 $generated@@155)))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! ($generated@@35 $generated@@7 $generated@@158 $generated $generated@@157)
 :pattern ( ($generated@@35 $generated@@7 $generated@@158 $generated $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! ($generated@@27 $generated@@7 $generated@@159 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@159 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@171  (and (=> (= (ControlFlow 0 13) (- 0 15)) true) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (not (= $generated@@160 $generated@@29)) (not true))) (=> (or (not (= $generated@@160 $generated@@29)) (not true)) (=> (= (ControlFlow 0 13) (- 0 12)) ($generated@@32 $generated@@161 $generated@@160)))))))
(let (($generated@@172  (and (=> (= (ControlFlow 0 9) (- 0 11)) true) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (not (= $generated@@160 $generated@@29)) (not true))) (=> (and (and ($generated@@85 ($generated@@80 $generated@@28 $generated@@160) $generated@@26 $generated@@161) ($generated@@33 $generated@@161 $generated@@160)) (and ($generated@@33 $generated@@161 $generated@@160) (= (ControlFlow 0 9) (- 0 8)))) ($generated@@32 $generated@@161 $generated@@160))))))
(let (($generated@@173  (and (=> (= (ControlFlow 0 16) (- 0 24)) true) (and (=> (= (ControlFlow 0 16) (- 0 23)) (or (not (= $generated@@160 $generated@@29)) (not true))) (=> (or (not (= $generated@@160 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 16) (- 0 22)) ($generated@@32 $generated@@162 $generated@@160)) (=> ($generated@@32 $generated@@162 $generated@@160) (=> (and (and ($generated@@34 $generated@@163) ($generated@@108 $generated@@163)) (and (forall (($generated@@174 T@U) ) (!  (=> (and (or (not (= $generated@@174 $generated@@29)) (not true)) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@162 $generated@@174) $generated@@1)))) (= ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@163 $generated@@174) ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@162 $generated@@174)))
 :pattern ( ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@163 $generated@@174))
)) ($generated@@72 $generated@@162 $generated@@163))) (and (=> (= (ControlFlow 0 16) (- 0 21)) true) (and (=> (= (ControlFlow 0 16) (- 0 20)) (or (not (= $generated@@160 $generated@@29)) (not true))) (=> (or (not (= $generated@@160 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 16) (- 0 19)) ($generated@@10 ($generated@@116 $generated@@28 $generated@@39 $generated@@6 $generated@@164 $generated@@160 $generated@@42))) (=> ($generated@@10 ($generated@@116 $generated@@28 $generated@@39 $generated@@6 $generated@@164 $generated@@160 $generated@@42)) (and (=> (= (ControlFlow 0 16) (- 0 18)) true) (and (=> (= (ControlFlow 0 16) (- 0 17)) (or (not (= $generated@@160 $generated@@29)) (not true))) (=> (or (not (= $generated@@160 $generated@@29)) (not true)) (=> (= $generated@@165 (+ ($generated@@12 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@163 $generated@@160) $generated@@42))) 1)) (=> (and (= $generated@@161 ($generated@@43 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@163 $generated@@160 ($generated@@43 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@163 $generated@@160) $generated@@42 ($generated@@80 $generated@@7 ($generated@@11 $generated@@165))))) ($generated@@34 $generated@@161)) (and (=> (= (ControlFlow 0 16) 9) $generated@@172) (=> (= (ControlFlow 0 16) 13) $generated@@171))))))))))))))))))))
(let (($generated@@175  (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (not (= $generated@@160 $generated@@29)) (not true))) (=> ($generated@@85 ($generated@@80 $generated@@28 $generated@@160) $generated@@26 $generated@@162) (=> (and ($generated@@33 $generated@@162 $generated@@160) ($generated@@33 $generated@@162 $generated@@160)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@32 $generated@@162 $generated@@160)) (=> ($generated@@32 $generated@@162 $generated@@160) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@160 $generated@@29)) (not true))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@12 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@162 $generated@@160) $generated@@42))) ($generated@@36 8)))))))))))))
(let (($generated@@176  (=> (= $generated@@164 ($generated@@117 $generated@@29 $generated@@166 $generated@@1 false)) (=> (and (and (or (not (= $generated@@167 $generated@@29)) (not true)) (and ($generated@@27 $generated@@28 $generated@@167 $generated@@25) ($generated@@35 $generated@@28 $generated@@167 $generated@@25 $generated@@166))) (and ($generated@@34 $generated@@162) ($generated@@108 $generated@@162))) (=> (and (and (and (or (not (= $generated@@160 $generated@@29)) (not true)) (and ($generated@@27 $generated@@28 $generated@@160 $generated@@25) ($generated@@35 $generated@@28 $generated@@160 $generated@@25 $generated@@162))) ($generated@@33 $generated@@162 $generated@@160)) (and (and ($generated@@32 $generated@@162 $generated@@160) (not ($generated@@10 ($generated@@37 $generated@@6 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@166 $generated@@160) $generated@@1))))) (and (forall (($generated@@177 T@U) ) (!  (=> (and (or (not (= $generated@@177 $generated@@29)) (not true)) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@166 $generated@@177) $generated@@1)))) (= ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@162 $generated@@177) ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@166 $generated@@177)))
 :pattern ( ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@162 $generated@@177))
)) ($generated@@72 $generated@@166 $generated@@162)))) (and (=> (= (ControlFlow 0 25) 16) $generated@@173) (=> (= (ControlFlow 0 25) 2) $generated@@175)))))))
(let (($generated@@178  (=> (and ($generated@@34 $generated@@166) ($generated@@108 $generated@@166)) (=> (and (and (=> $generated@@168 (and ($generated@@27 $generated@@28 $generated@@169 $generated@@25) ($generated@@35 $generated@@28 $generated@@169 $generated@@25 $generated@@166))) true) (and (= 0 $generated@@170) (= (ControlFlow 0 26) 25))) $generated@@176))))
$generated@@178)))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 9) (- 8))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 13) (- 12))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
