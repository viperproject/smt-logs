(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () Int)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@47 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@52 (Int) Int)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@97 (T@U) Int)
(declare-fun $generated@@98 (T@U) Int)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@110 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@T T@T) T@T)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T) T@T)
(declare-fun $generated@@116 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (! (= ($generated@@23 $generated@@26 $generated@@27 $generated@@28) ($generated@@23 $generated@@26 $generated@@25 $generated@@28))
 :pattern ( ($generated@@23 $generated@@26 ($generated@@24 $generated@@27) $generated@@28))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@23 $generated@@30 ($generated@@29 $generated@@31) $generated@@32) ($generated@@23 $generated@@30 $generated@@31 $generated@@32))
 :pattern ( ($generated@@23 $generated@@30 ($generated@@29 $generated@@31) $generated@@32))
)))
(assert (= ($generated@@33 $generated@@34) $generated@@3))
(assert (= ($generated@@6 $generated@@38) 3))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> (or ($generated@@36 $generated@@42 $generated@@44) (and (< 1 $generated@@35) ($generated@@37 $generated@@38 $generated@@44 ($generated@@39 $generated@@42)))) (and (=> (not ($generated@@40 $generated@@44)) (let (($generated@@45 ($generated@@41 $generated@@44)))
($generated@@36 $generated@@42 $generated@@45))) (= ($generated@@23 $generated@@42 ($generated@@29 $generated@@43) $generated@@44) (ite ($generated@@40 $generated@@44) 18 (let (($generated@@46 ($generated@@41 $generated@@44)))
($generated@@23 $generated@@42 $generated@@43 $generated@@46))))))
 :pattern ( ($generated@@23 $generated@@42 ($generated@@29 $generated@@43) $generated@@44))
))))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> ($generated@@48 $generated@@50) ($generated@@47 $generated@@38 $generated@@34 ($generated@@39 $generated@@49) $generated@@50))
 :pattern ( ($generated@@47 $generated@@38 $generated@@34 ($generated@@39 $generated@@49) $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ) (! ($generated@@37 $generated@@38 $generated@@34 ($generated@@39 $generated@@51))
 :pattern ( ($generated@@37 $generated@@38 $generated@@34 ($generated@@39 $generated@@51)))
)))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@52 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@37 $generated@@38 ($generated@@57 $generated@@60 $generated@@61) ($generated@@39 $generated@@59))  (and ($generated@@58 $generated@@60 $generated@@59) ($generated@@37 $generated@@38 $generated@@61 ($generated@@39 $generated@@59))))
 :pattern ( ($generated@@37 $generated@@38 ($generated@@57 $generated@@60 $generated@@61) ($generated@@39 $generated@@59)))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@40 $generated@@62) (= ($generated@@33 $generated@@62) $generated@@3))
 :pattern ( ($generated@@40 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 $generated@@64) (= ($generated@@33 $generated@@64) $generated@@4))
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 ($generated@@65 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@65 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@63 $generated@@69) (exists (($generated@@70 T@U) ($generated@@71 T@U) ) (= $generated@@69 ($generated@@57 $generated@@70 $generated@@71))))
 :pattern ( ($generated@@63 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@40 $generated@@72) (= $generated@@72 $generated@@34))
 :pattern ( ($generated@@40 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@66 $generated@@77 $generated@@74) $generated@@75 $generated@@76) ($generated@@47 $generated@@77 $generated@@74 $generated@@75 $generated@@76))
 :pattern ( ($generated@@73 ($generated@@66 $generated@@77 $generated@@74) $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ) (!  (and (= ($generated@@22 ($generated@@39 $generated@@79)) $generated@@2) (= ($generated@@78 ($generated@@39 $generated@@79)) $generated@@5))
 :pattern ( ($generated@@39 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@81 ($generated@@39 $generated@@80)) (or ($generated@@40 $generated@@81) ($generated@@63 $generated@@81)))
 :pattern ( ($generated@@63 $generated@@81) ($generated@@37 $generated@@38 $generated@@81 ($generated@@39 $generated@@80)))
 :pattern ( ($generated@@40 $generated@@81) ($generated@@37 $generated@@38 $generated@@81 ($generated@@39 $generated@@80)))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@58 $generated@@82 $generated) (and (= ($generated@@66 $generated@@9 ($generated@@65 $generated@@9 $generated@@82)) $generated@@82) ($generated@@37 $generated@@9 ($generated@@65 $generated@@9 $generated@@82) $generated)))
 :pattern ( ($generated@@58 $generated@@82 $generated))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@58 ($generated@@66 $generated@@85 $generated@@83) $generated@@84) ($generated@@37 $generated@@85 $generated@@83 $generated@@84))
 :pattern ( ($generated@@58 ($generated@@66 $generated@@85 $generated@@83) $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@33 ($generated@@57 $generated@@86 $generated@@87)) $generated@@4)
 :pattern ( ($generated@@57 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 ($generated@@57 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@57 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@41 ($generated@@57 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@57 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@93 ($generated@@39 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@39 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@65 $generated@@96 ($generated@@66 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@66 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (< ($generated@@97 $generated@@99) ($generated@@98 ($generated@@57 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@57 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (< ($generated@@98 $generated@@102) ($generated@@98 ($generated@@57 $generated@@101 $generated@@102)))
 :pattern ( ($generated@@57 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (and ($generated@@48 $generated@@105) (and ($generated@@63 $generated@@103) ($generated@@47 $generated@@38 $generated@@103 ($generated@@39 $generated@@104) $generated@@105))) ($generated@@73 ($generated@@88 $generated@@103) $generated@@104 $generated@@105))
 :pattern ( ($generated@@73 ($generated@@88 $generated@@103) $generated@@104 $generated@@105))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@106 $generated@@117 $generated@@118 $generated@@119 ($generated@@113 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@122 $generated@@123) $generated@@120)
 :weight 0
)) (and (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@106 $generated@@124 $generated@@125 $generated@@126 ($generated@@113 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@106 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@106 $generated@@133 $generated@@134 $generated@@135 ($generated@@113 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@106 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)))) (= ($generated@@6 $generated@@107) 4)) (= ($generated@@6 $generated@@108) 5)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@110 $generated@@142 $generated@@143 ($generated@@114 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@144) $generated@@146) $generated@@144)
 :weight 0
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@151 $generated@@152) (= ($generated@@110 $generated@@147 $generated@@148 ($generated@@114 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@152) ($generated@@110 $generated@@147 $generated@@148 $generated@@150 $generated@@152)))
 :weight 0
))) (= ($generated@@6 $generated@@111) 6)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (= ($generated@@6 ($generated@@112 $generated@@153 $generated@@154)) 7))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@115 ($generated@@112 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@112 $generated@@155 $generated@@156))
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@116 ($generated@@112 $generated@@157 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@112 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Bool) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@11 ($generated@@106 $generated@@107 $generated@@108 $generated@@7 ($generated@@109 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))  (=> (and (or (not (= $generated@@163 $generated@@159)) (not true)) ($generated@@11 ($generated@@65 $generated@@7 ($generated@@110 $generated@@108 $generated@@111 ($generated@@110 $generated@@107 ($generated@@112 $generated@@108 $generated@@111) $generated@@160 $generated@@163) $generated@@161)))) $generated@@162))
 :pattern ( ($generated@@106 $generated@@107 $generated@@108 $generated@@7 ($generated@@109 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@97 ($generated@@66 $generated@@38 $generated@@165)) ($generated@@98 $generated@@165))
 :pattern ( ($generated@@97 ($generated@@66 $generated@@38 $generated@@165)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> ($generated@@58 $generated@@167 ($generated@@39 $generated@@166)) (and (= ($generated@@66 $generated@@38 ($generated@@65 $generated@@38 $generated@@167)) $generated@@167) ($generated@@37 $generated@@38 ($generated@@65 $generated@@38 $generated@@167) ($generated@@39 $generated@@166))))
 :pattern ( ($generated@@58 $generated@@167 ($generated@@39 $generated@@166)))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (or ($generated@@36 $generated@@168 ($generated@@54 $generated@@38 $generated@@170)) (and (< 1 $generated@@35) ($generated@@37 $generated@@38 $generated@@170 ($generated@@39 $generated@@168)))) (and (=> (not ($generated@@11 ($generated@@54 $generated@@7 ($generated@@10 ($generated@@40 ($generated@@54 $generated@@38 $generated@@170)))))) (let (($generated@@171 ($generated@@54 $generated@@38 ($generated@@41 ($generated@@54 $generated@@38 $generated@@170)))))
($generated@@36 $generated@@168 $generated@@171))) (= ($generated@@23 $generated@@168 ($generated@@29 $generated@@169) ($generated@@54 $generated@@38 $generated@@170)) (ite ($generated@@40 ($generated@@54 $generated@@38 $generated@@170)) 18 (let (($generated@@172 ($generated@@54 $generated@@38 ($generated@@41 ($generated@@54 $generated@@38 $generated@@170)))))
($generated@@52 ($generated@@23 $generated@@168 ($generated@@29 $generated@@169) $generated@@172)))))))
 :weight 3
 :pattern ( ($generated@@23 $generated@@168 ($generated@@29 $generated@@169) ($generated@@54 $generated@@38 $generated@@170)))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and ($generated@@48 $generated@@175) (and ($generated@@63 $generated@@173) ($generated@@47 $generated@@38 $generated@@173 ($generated@@39 $generated@@174) $generated@@175))) ($generated@@47 $generated@@38 ($generated@@41 $generated@@173) ($generated@@39 $generated@@174) $generated@@175))
 :pattern ( ($generated@@47 $generated@@38 ($generated@@41 $generated@@173) ($generated@@39 $generated@@174) $generated@@175))
)))
(assert (= $generated@@34 ($generated@@54 $generated@@38 $generated@@34)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@57 ($generated@@54 $generated@@111 $generated@@176) ($generated@@54 $generated@@38 $generated@@177)) ($generated@@54 $generated@@38 ($generated@@57 $generated@@176 $generated@@177)))
 :pattern ( ($generated@@57 ($generated@@54 $generated@@111 $generated@@176) ($generated@@54 $generated@@38 $generated@@177)))
)))
(assert (forall (($generated@@178 Int) ) (! (= ($generated@@66 $generated@@8 ($generated@@12 ($generated@@52 $generated@@178))) ($generated@@54 $generated@@111 ($generated@@66 $generated@@8 ($generated@@12 $generated@@178))))
 :pattern ( ($generated@@66 $generated@@8 ($generated@@12 ($generated@@52 $generated@@178))))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@66 $generated@@180 ($generated@@54 $generated@@180 $generated@@179)) ($generated@@54 $generated@@111 ($generated@@66 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@66 $generated@@180 ($generated@@54 $generated@@180 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! ($generated@@47 $generated@@9 $generated@@182 $generated $generated@@181)
 :pattern ( ($generated@@47 $generated@@9 $generated@@182 $generated $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> ($generated@@48 $generated@@186) (= ($generated@@47 $generated@@38 ($generated@@57 $generated@@184 $generated@@185) ($generated@@39 $generated@@183) $generated@@186)  (and ($generated@@73 $generated@@184 $generated@@183 $generated@@186) ($generated@@47 $generated@@38 $generated@@185 ($generated@@39 $generated@@183) $generated@@186))))
 :pattern ( ($generated@@47 $generated@@38 ($generated@@57 $generated@@184 $generated@@185) ($generated@@39 $generated@@183) $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ) (! ($generated@@37 $generated@@9 $generated@@187 $generated)
 :pattern ( ($generated@@37 $generated@@9 $generated@@187 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Real)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@197 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@198  (=> (= $generated@@188 ($generated@@29 $generated@@189)) (=> (and (and (and (= $generated@@190 ($generated@@29 ($generated@@29 $generated@@189))) (= ($generated@@24 $generated@@189) $generated@@189)) (and (= $generated@@191 ($generated@@109 $generated@@192 $generated@@193 $generated@@1 false)) (= $generated@@194 ($generated@@57 ($generated@@66 $generated@@9 ($generated@@14 $generated@@195)) ($generated@@57 ($generated@@66 $generated@@9 ($generated@@14 $generated@@195)) ($generated@@57 ($generated@@66 $generated@@9 ($generated@@14 $generated@@195)) ($generated@@57 ($generated@@66 $generated@@9 ($generated@@14 $generated@@195)) ($generated@@54 $generated@@38 $generated@@34)))))))) (and (and ($generated@@47 $generated@@38 $generated@@194 ($generated@@39 $generated) $generated@@193) ($generated@@36 $generated $generated@@194)) (and ($generated@@36 $generated $generated@@194) (= (ControlFlow 0 2) (- 0 1))))) (= ($generated@@23 $generated $generated@@190 $generated@@194) ($generated@@52 18))))))
(let (($generated@@199  (=> (and ($generated@@48 $generated@@193) ($generated@@196 $generated@@193)) (=> (and (and (and ($generated@@37 $generated@@38 $generated@@197 ($generated@@39 $generated)) ($generated@@47 $generated@@38 $generated@@197 ($generated@@39 $generated) $generated@@193)) true) (and (= 2 $generated@@35) (= (ControlFlow 0 3) 2))) $generated@@198))))
$generated@@199)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
