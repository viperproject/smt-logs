(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@T T@T) T@T)
(declare-fun $generated@@44 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@67 (Int) Int)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@T T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@112 () Int)
(declare-fun $generated@@113 (T@U T@U T@U T@U T@U) Int)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@115 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Int)
(declare-fun $generated@@168 (T@U) Int)
(declare-fun $generated@@173 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@24) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@27 $generated@@31) (= ($generated@@23 $generated@@24 ($generated@@25 $generated@@29 $generated@@30) ($generated@@26 $generated@@28) $generated@@31)  (and ($generated@@23 $generated@@24 $generated@@29 ($generated@@26 $generated@@28) $generated@@31) ($generated@@23 $generated@@24 $generated@@30 ($generated@@26 $generated@@28) $generated@@31))))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@25 $generated@@29 $generated@@30) ($generated@@26 $generated@@28) $generated@@31))
)))
(assert (= ($generated@@7 $generated@@32) 4))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@23 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37) ($generated@@23 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
 :pattern ( ($generated@@23 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37))
 :pattern ( ($generated@@23 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@40 $generated@@47 $generated@@48 ($generated@@44 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@51) $generated@@49)
 :weight 0
)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (or (= $generated@@56 $generated@@57) (= ($generated@@40 $generated@@52 $generated@@53 ($generated@@44 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@57) ($generated@@40 $generated@@52 $generated@@53 $generated@@55 $generated@@57)))
 :weight 0
))) (= ($generated@@7 $generated@@41) 5)) (= ($generated@@7 $generated@@42) 6)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (= ($generated@@7 ($generated@@43 $generated@@58 $generated@@59)) 7))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@45 ($generated@@43 $generated@@60 $generated@@61)) $generated@@60)
 :pattern ( ($generated@@43 $generated@@60 $generated@@61))
))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@46 ($generated@@43 $generated@@62 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@43 $generated@@62 $generated@@63))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@23 $generated@@32 $generated@@65 ($generated@@34 $generated@@64) $generated@@66)  (or (= $generated@@65 $generated@@38) ($generated@@12 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@66 $generated@@65) $generated)))))
 :pattern ( ($generated@@23 $generated@@32 $generated@@65 ($generated@@34 $generated@@64) $generated@@66))
)))
(assert (forall (($generated@@68 Int) ) (! (= ($generated@@67 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 $generated@@70) $generated@@70)
 :pattern ( ($generated@@69 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@72 $generated@@74) (= ($generated@@73 $generated@@74) $generated@@0))
 :pattern ( ($generated@@72 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@75 $generated@@76) (= ($generated@@73 $generated@@76) $generated@@2))
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 ($generated@@39 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@39 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@75 $generated@@80) (exists (($generated@@81 T@U) ($generated@@82 T@U) ) (= $generated@@80 ($generated@@25 $generated@@81 $generated@@82))))
 :pattern ( ($generated@@75 $generated@@80))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@83 $generated@@24 ($generated@@25 $generated@@85 $generated@@86) ($generated@@26 $generated@@84))  (and ($generated@@83 $generated@@24 $generated@@85 ($generated@@26 $generated@@84)) ($generated@@83 $generated@@24 $generated@@86 ($generated@@26 $generated@@84))))
 :pattern ( ($generated@@83 $generated@@24 ($generated@@25 $generated@@85 $generated@@86) ($generated@@26 $generated@@84)))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@72 $generated@@88) (exists (($generated@@89 T@U) ) (= $generated@@88 ($generated@@87 $generated@@89))))
 :pattern ( ($generated@@72 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@83 $generated@@32 $generated@@91 ($generated@@33 $generated@@90))  (and ($generated@@83 $generated@@32 $generated@@91 ($generated@@34 $generated@@90)) (or (not (= $generated@@91 $generated@@38)) (not true))))
 :pattern ( ($generated@@83 $generated@@32 $generated@@91 ($generated@@33 $generated@@90)))
 :pattern ( ($generated@@83 $generated@@32 $generated@@91 ($generated@@34 $generated@@90)))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@92 ($generated@@77 $generated@@96 $generated@@93) $generated@@94 $generated@@95) ($generated@@23 $generated@@96 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@92 ($generated@@77 $generated@@96 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ) (!  (and (= ($generated@@97 ($generated@@26 $generated@@99)) $generated@@1) (= ($generated@@98 ($generated@@26 $generated@@99)) $generated@@5))
 :pattern ( ($generated@@26 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (!  (and (= ($generated@@97 ($generated@@34 $generated@@100)) $generated@@3) (= ($generated@@98 ($generated@@34 $generated@@100)) $generated@@6))
 :pattern ( ($generated@@34 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (!  (and (= ($generated@@97 ($generated@@33 $generated@@101)) $generated@@4) (= ($generated@@98 ($generated@@33 $generated@@101)) $generated@@6))
 :pattern ( ($generated@@33 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@83 $generated@@32 $generated@@104 ($generated@@34 $generated@@103))  (or (= $generated@@104 $generated@@38) (= ($generated@@102 $generated@@104) ($generated@@34 $generated@@103))))
 :pattern ( ($generated@@83 $generated@@32 $generated@@104 ($generated@@34 $generated@@103)))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@27 $generated@@107) (= ($generated@@23 $generated@@24 ($generated@@87 $generated@@106) ($generated@@26 $generated@@105) $generated@@107) ($generated@@92 $generated@@106 $generated@@105 $generated@@107)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@87 $generated@@106) ($generated@@26 $generated@@105) $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@108 $generated@@109) (or ($generated@@72 $generated@@109) ($generated@@75 $generated@@109)))
 :pattern ( ($generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> ($generated@@83 $generated@@24 $generated@@111 ($generated@@26 $generated@@110)) (or ($generated@@72 $generated@@111) ($generated@@75 $generated@@111)))
 :pattern ( ($generated@@75 $generated@@111) ($generated@@83 $generated@@24 $generated@@111 ($generated@@26 $generated@@110)))
 :pattern ( ($generated@@72 $generated@@111) ($generated@@83 $generated@@24 $generated@@111 ($generated@@26 $generated@@110)))
)))
(assert  (=> (<= 1 $generated@@112) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (or ($generated@@115 $generated@@118 $generated@@119 $generated@@121 ($generated@@69 $generated@@24 $generated@@122)) (and (< 1 $generated@@112) (and (and (or (not (= $generated@@121 $generated@@38)) (not true)) ($generated@@83 $generated@@32 $generated@@121 ($generated@@33 $generated@@118))) ($generated@@83 $generated@@24 $generated@@122 ($generated@@26 $generated@@119))))) (and (=> (not ($generated@@12 ($generated@@69 $generated@@8 ($generated@@11 ($generated@@72 ($generated@@69 $generated@@24 $generated@@122)))))) (let (($generated@@123 ($generated@@69 $generated@@24 ($generated@@116 ($generated@@69 $generated@@24 $generated@@122)))))
(let (($generated@@124 ($generated@@69 $generated@@24 ($generated@@117 ($generated@@69 $generated@@24 $generated@@122)))))
 (and ($generated@@115 $generated@@118 $generated@@119 $generated@@121 $generated@@124) ($generated@@115 $generated@@118 $generated@@119 $generated@@121 $generated@@123))))) (= ($generated@@113 $generated@@118 $generated@@119 ($generated@@114 $generated@@120) $generated@@121 ($generated@@69 $generated@@24 $generated@@122)) (ite ($generated@@72 ($generated@@69 $generated@@24 $generated@@122)) ($generated@@67 1) (let (($generated@@125 ($generated@@69 $generated@@24 ($generated@@116 ($generated@@69 $generated@@24 $generated@@122)))))
(let (($generated@@126 ($generated@@69 $generated@@24 ($generated@@117 ($generated@@69 $generated@@24 $generated@@122)))))
(+ ($generated@@113 $generated@@118 $generated@@119 ($generated@@114 $generated@@120) $generated@@121 $generated@@126) ($generated@@113 $generated@@118 $generated@@119 ($generated@@114 $generated@@120) $generated@@121 $generated@@125))))))))
 :weight 3
 :pattern ( ($generated@@113 $generated@@118 $generated@@119 ($generated@@114 $generated@@120) $generated@@121 ($generated@@69 $generated@@24 $generated@@122)))
))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@127 ($generated@@77 $generated@@130 $generated@@128) $generated@@129) ($generated@@83 $generated@@130 $generated@@128 $generated@@129))
 :pattern ( ($generated@@127 ($generated@@77 $generated@@130 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@131 $generated@@132) (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> ($generated@@127 $generated@@134 $generated@@132) ($generated@@92 $generated@@134 $generated@@132 $generated@@133))
 :pattern ( ($generated@@92 $generated@@134 $generated@@132 $generated@@133))
)))
 :pattern ( ($generated@@131 $generated@@132))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@73 ($generated@@25 $generated@@135 $generated@@136)) $generated@@2)
 :pattern ( ($generated@@25 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@117 ($generated@@25 $generated@@137 $generated@@138)) $generated@@137)
 :pattern ( ($generated@@25 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@116 ($generated@@25 $generated@@139 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@25 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@73 ($generated@@87 $generated@@141)) $generated@@0)
 :pattern ( ($generated@@87 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@26 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@26 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@144 ($generated@@87 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@87 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@34 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@34 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@33 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@33 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@39 $generated@@151 ($generated@@77 $generated@@151 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@77 $generated@@151 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@83 $generated@@24 ($generated@@87 $generated@@153) ($generated@@26 $generated@@152)) ($generated@@127 $generated@@153 $generated@@152))
 :pattern ( ($generated@@83 $generated@@24 ($generated@@87 $generated@@153) ($generated@@26 $generated@@152)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (< ($generated@@154 $generated@@155) ($generated@@154 ($generated@@25 $generated@@155 $generated@@156)))
 :pattern ( ($generated@@25 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (< ($generated@@154 $generated@@158) ($generated@@154 ($generated@@25 $generated@@157 $generated@@158)))
 :pattern ( ($generated@@25 $generated@@157 $generated@@158))
)))
(assert  (=> (<= 1 $generated@@112) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (or ($generated@@115 $generated@@159 $generated@@160 $generated@@162 $generated@@163) (and (< 1 $generated@@112) (and (and (or (not (= $generated@@162 $generated@@38)) (not true)) ($generated@@83 $generated@@32 $generated@@162 ($generated@@33 $generated@@159))) ($generated@@83 $generated@@24 $generated@@163 ($generated@@26 $generated@@160))))) (and (=> (not ($generated@@72 $generated@@163)) (let (($generated@@164 ($generated@@116 $generated@@163)))
(let (($generated@@165 ($generated@@117 $generated@@163)))
 (and ($generated@@115 $generated@@159 $generated@@160 $generated@@162 $generated@@165) ($generated@@115 $generated@@159 $generated@@160 $generated@@162 $generated@@164))))) (= ($generated@@113 $generated@@159 $generated@@160 ($generated@@114 $generated@@161) $generated@@162 $generated@@163) (ite ($generated@@72 $generated@@163) ($generated@@67 1) (let (($generated@@166 ($generated@@116 $generated@@163)))
(let (($generated@@167 ($generated@@117 $generated@@163)))
(+ ($generated@@113 $generated@@159 $generated@@160 $generated@@161 $generated@@162 $generated@@167) ($generated@@113 $generated@@159 $generated@@160 $generated@@161 $generated@@162 $generated@@166))))))))
 :pattern ( ($generated@@113 $generated@@159 $generated@@160 ($generated@@114 $generated@@161) $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@169 T@U) ) (! (< ($generated@@168 $generated@@169) ($generated@@154 ($generated@@87 $generated@@169)))
 :pattern ( ($generated@@87 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and ($generated@@27 $generated@@172) (and ($generated@@72 $generated@@170) ($generated@@23 $generated@@24 $generated@@170 ($generated@@26 $generated@@171) $generated@@172))) ($generated@@92 ($generated@@144 $generated@@170) $generated@@171 $generated@@172))
 :pattern ( ($generated@@92 ($generated@@144 $generated@@170) $generated@@171 $generated@@172))
)))
(assert  (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@173 $generated@@176 $generated@@177 $generated@@178 ($generated@@175 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@181 $generated@@182) $generated@@179)
 :weight 0
)) (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@173 $generated@@183 $generated@@184 $generated@@185 ($generated@@175 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@173 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@173 $generated@@192 $generated@@193 $generated@@194 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@173 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 Bool) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@12 ($generated@@173 $generated@@32 $generated@@41 $generated@@8 ($generated@@174 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@205 $generated@@206))  (=> (and (or (not (= $generated@@205 $generated@@201)) (not true)) ($generated@@12 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@202 $generated@@205) $generated@@203)))) $generated@@204))
 :pattern ( ($generated@@173 $generated@@32 $generated@@41 $generated@@8 ($generated@@174 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 Int) ($generated@@209 Int) ) (! (= ($generated@@207 $generated@@208 $generated@@209) (mod $generated@@208 $generated@@209))
 :pattern ( ($generated@@207 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ) (! (= ($generated@@168 ($generated@@77 $generated@@24 $generated@@210)) ($generated@@154 $generated@@210))
 :pattern ( ($generated@@168 ($generated@@77 $generated@@24 $generated@@210)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> ($generated@@127 $generated@@212 ($generated@@26 $generated@@211)) (and (= ($generated@@77 $generated@@24 ($generated@@39 $generated@@24 $generated@@212)) $generated@@212) ($generated@@83 $generated@@24 ($generated@@39 $generated@@24 $generated@@212) ($generated@@26 $generated@@211))))
 :pattern ( ($generated@@127 $generated@@212 ($generated@@26 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> ($generated@@127 $generated@@214 ($generated@@34 $generated@@213)) (and (= ($generated@@77 $generated@@32 ($generated@@39 $generated@@32 $generated@@214)) $generated@@214) ($generated@@83 $generated@@32 ($generated@@39 $generated@@32 $generated@@214) ($generated@@34 $generated@@213))))
 :pattern ( ($generated@@127 $generated@@214 ($generated@@34 $generated@@213)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> ($generated@@127 $generated@@216 ($generated@@33 $generated@@215)) (and (= ($generated@@77 $generated@@32 ($generated@@39 $generated@@32 $generated@@216)) $generated@@216) ($generated@@83 $generated@@32 ($generated@@39 $generated@@32 $generated@@216) ($generated@@33 $generated@@215))))
 :pattern ( ($generated@@127 $generated@@216 ($generated@@33 $generated@@215)))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and ($generated@@27 $generated@@219) (and ($generated@@75 $generated@@217) ($generated@@23 $generated@@24 $generated@@217 ($generated@@26 $generated@@218) $generated@@219))) ($generated@@23 $generated@@24 ($generated@@117 $generated@@217) ($generated@@26 $generated@@218) $generated@@219))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@117 $generated@@217) ($generated@@26 $generated@@218) $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and ($generated@@27 $generated@@222) (and ($generated@@75 $generated@@220) ($generated@@23 $generated@@24 $generated@@220 ($generated@@26 $generated@@221) $generated@@222))) ($generated@@23 $generated@@24 ($generated@@116 $generated@@220) ($generated@@26 $generated@@221) $generated@@222))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@116 $generated@@220) ($generated@@26 $generated@@221) $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= ($generated@@25 ($generated@@69 $generated@@24 $generated@@223) ($generated@@69 $generated@@24 $generated@@224)) ($generated@@69 $generated@@24 ($generated@@25 $generated@@223 $generated@@224)))
 :pattern ( ($generated@@25 ($generated@@69 $generated@@24 $generated@@223) ($generated@@69 $generated@@24 $generated@@224)))
)))
(assert  (=> (<= 1 $generated@@112) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (or ($generated@@115 $generated@@225 $generated@@226 ($generated@@69 $generated@@32 $generated@@228) ($generated@@69 $generated@@24 $generated@@229)) (and (< 1 $generated@@112) (and (and (or (not (= $generated@@228 $generated@@38)) (not true)) ($generated@@83 $generated@@32 $generated@@228 ($generated@@33 $generated@@225))) ($generated@@83 $generated@@24 $generated@@229 ($generated@@26 $generated@@226))))) (and (=> (not ($generated@@12 ($generated@@69 $generated@@8 ($generated@@11 ($generated@@72 ($generated@@69 $generated@@24 $generated@@229)))))) (let (($generated@@230 ($generated@@69 $generated@@24 ($generated@@116 ($generated@@69 $generated@@24 $generated@@229)))))
(let (($generated@@231 ($generated@@69 $generated@@24 ($generated@@117 ($generated@@69 $generated@@24 $generated@@229)))))
 (and ($generated@@115 $generated@@225 $generated@@226 ($generated@@69 $generated@@32 $generated@@228) $generated@@231) ($generated@@115 $generated@@225 $generated@@226 ($generated@@69 $generated@@32 $generated@@228) $generated@@230))))) (= ($generated@@113 $generated@@225 $generated@@226 ($generated@@114 $generated@@227) ($generated@@69 $generated@@32 $generated@@228) ($generated@@69 $generated@@24 $generated@@229)) (ite ($generated@@72 ($generated@@69 $generated@@24 $generated@@229)) ($generated@@67 1) (let (($generated@@232 ($generated@@69 $generated@@24 ($generated@@116 ($generated@@69 $generated@@24 $generated@@229)))))
(let (($generated@@233 ($generated@@69 $generated@@24 ($generated@@117 ($generated@@69 $generated@@24 $generated@@229)))))
($generated@@67 (+ ($generated@@113 $generated@@225 $generated@@226 ($generated@@114 $generated@@227) ($generated@@69 $generated@@32 $generated@@228) $generated@@233) ($generated@@113 $generated@@225 $generated@@226 ($generated@@114 $generated@@227) ($generated@@69 $generated@@32 $generated@@228) $generated@@232)))))))))
 :weight 3
 :pattern ( ($generated@@113 $generated@@225 $generated@@226 ($generated@@114 $generated@@227) ($generated@@69 $generated@@32 $generated@@228) ($generated@@69 $generated@@24 $generated@@229)))
))))
(assert (forall (($generated@@234 Int) ) (! (= ($generated@@77 $generated@@9 ($generated@@13 ($generated@@67 $generated@@234))) ($generated@@69 $generated@@42 ($generated@@77 $generated@@9 ($generated@@13 $generated@@234))))
 :pattern ( ($generated@@77 $generated@@9 ($generated@@13 ($generated@@67 $generated@@234))))
)))
(assert (forall (($generated@@235 T@U) ) (! (= ($generated@@87 ($generated@@69 $generated@@42 $generated@@235)) ($generated@@69 $generated@@24 ($generated@@87 $generated@@235)))
 :pattern ( ($generated@@87 ($generated@@69 $generated@@42 $generated@@235)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@T) ) (! (= ($generated@@77 $generated@@237 ($generated@@69 $generated@@237 $generated@@236)) ($generated@@69 $generated@@42 ($generated@@77 $generated@@237 $generated@@236)))
 :pattern ( ($generated@@77 $generated@@237 ($generated@@69 $generated@@237 $generated@@236)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (= ($generated@@113 $generated@@238 $generated@@239 ($generated@@114 $generated@@240) $generated@@241 $generated@@242) ($generated@@113 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
 :pattern ( ($generated@@113 $generated@@238 $generated@@239 ($generated@@114 $generated@@240) $generated@@241 $generated@@242))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@251  (=> (forall (($generated@@252 T@U) ) (!  (=> ($generated@@83 $generated@@24 $generated@@252 ($generated@@26 $generated@@243)) ($generated@@115 $generated@@243 $generated@@243 $generated@@245 $generated@@252))
 :pattern ( ($generated@@113 $generated@@243 $generated@@243 ($generated@@114 $generated@@244) $generated@@245 $generated@@252))
)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (forall (($generated@@253 T@U) ) (!  (=> (and (and ($generated@@83 $generated@@24 $generated@@253 ($generated@@26 $generated@@243)) (forall (($generated@@254 T@U) ) (!  (=> ($generated@@83 $generated@@24 $generated@@254 ($generated@@26 $generated@@243)) (=> (< ($generated@@154 $generated@@254) ($generated@@154 $generated@@253)) (= ($generated@@207 ($generated@@113 $generated@@243 $generated@@243 ($generated@@114 $generated@@244) $generated@@245 $generated@@254) ($generated@@67 2)) ($generated@@67 1))))
 :pattern ( ($generated@@113 $generated@@243 $generated@@243 ($generated@@114 $generated@@244) $generated@@245 $generated@@254))
))) (and true (exists (($generated@@255 T@U) ) (!  (and ($generated@@127 $generated@@255 $generated@@243) (= ($generated@@87 $generated@@255) $generated@@253))
 :pattern ( ($generated@@87 $generated@@255))
)))) (= ($generated@@207 ($generated@@113 $generated@@243 $generated@@243 ($generated@@114 ($generated@@114 $generated@@244)) $generated@@245 $generated@@253) ($generated@@67 2)) ($generated@@67 1)))
 :pattern ( ($generated@@113 $generated@@243 $generated@@243 ($generated@@114 ($generated@@114 $generated@@244)) $generated@@245 $generated@@253))
))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@256 T@U) ) (!  (=> (and (and ($generated@@83 $generated@@24 $generated@@256 ($generated@@26 $generated@@243)) (forall (($generated@@257 T@U) ) (!  (=> ($generated@@83 $generated@@24 $generated@@257 ($generated@@26 $generated@@243)) (=> (< ($generated@@154 $generated@@257) ($generated@@154 $generated@@256)) (= ($generated@@207 ($generated@@113 $generated@@243 $generated@@243 ($generated@@114 $generated@@244) $generated@@245 $generated@@257) ($generated@@67 2)) ($generated@@67 1))))
 :pattern ( ($generated@@113 $generated@@243 $generated@@243 ($generated@@114 $generated@@244) $generated@@245 $generated@@257))
))) (and true (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and ($generated@@83 $generated@@24 $generated@@258 ($generated@@26 $generated@@243)) ($generated@@83 $generated@@24 $generated@@259 ($generated@@26 $generated@@243))) (= ($generated@@25 $generated@@258 $generated@@259) $generated@@256))
 :pattern ( ($generated@@25 $generated@@258 $generated@@259))
)))) (= ($generated@@207 ($generated@@113 $generated@@243 $generated@@243 ($generated@@114 ($generated@@114 $generated@@244)) $generated@@245 $generated@@256) ($generated@@67 2)) ($generated@@67 1)))
 :pattern ( ($generated@@113 $generated@@243 $generated@@243 ($generated@@114 ($generated@@114 $generated@@244)) $generated@@245 $generated@@256))
))) (=> (and (forall (($generated@@260 T@U) ) (!  (=> ($generated@@83 $generated@@24 $generated@@260 ($generated@@26 $generated@@243)) (= ($generated@@207 ($generated@@113 $generated@@243 $generated@@243 ($generated@@114 $generated@@244) $generated@@245 $generated@@260) ($generated@@67 2)) ($generated@@67 1)))
 :pattern ( ($generated@@113 $generated@@243 $generated@@243 ($generated@@114 $generated@@244) $generated@@245 $generated@@260))
)) (= (ControlFlow 0 2) (- 0 1))) (= ($generated@@207 ($generated@@113 $generated@@243 $generated@@243 ($generated@@114 ($generated@@114 $generated@@244)) $generated@@245 $generated@@246) ($generated@@67 2)) ($generated@@67 1))))))))
(let (($generated@@261  (=> (and (not (and ($generated@@83 $generated@@24 $generated@@247 ($generated@@26 $generated@@243)) ($generated@@23 $generated@@24 $generated@@247 ($generated@@26 $generated@@243) $generated@@248))) (= (ControlFlow 0 7) 2)) $generated@@251)))
(let (($generated@@262  (=> (and (and (and ($generated@@83 $generated@@24 $generated@@247 ($generated@@26 $generated@@243)) ($generated@@23 $generated@@24 $generated@@247 ($generated@@26 $generated@@243) $generated@@248)) ($generated@@92 ($generated@@77 $generated@@32 $generated@@245) ($generated@@34 $generated@@243) $generated@@248)) (and ($generated@@23 $generated@@24 $generated@@247 ($generated@@26 $generated@@243) $generated@@248) ($generated@@115 $generated@@243 $generated@@243 $generated@@245 $generated@@247))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= ($generated@@67 2) 0)) (not true))) (=> (= (ControlFlow 0 5) 2) $generated@@251)))))
(let (($generated@@263  (=> (= $generated@@249 ($generated@@174 $generated@@38 $generated@@248 $generated false)) (and (=> (= (ControlFlow 0 8) 5) $generated@@262) (=> (= (ControlFlow 0 8) 7) $generated@@261)))))
(let (($generated@@264  (=> (and (and (and (and ($generated@@27 $generated@@248) ($generated@@250 $generated@@248)) ($generated@@131 $generated@@243)) (and (or (not (= $generated@@245 $generated@@38)) (not true)) (and ($generated@@83 $generated@@32 $generated@@245 ($generated@@33 $generated@@243)) ($generated@@23 $generated@@32 $generated@@245 ($generated@@33 $generated@@243) $generated@@248)))) (and (and (and ($generated@@83 $generated@@24 $generated@@246 ($generated@@26 $generated@@243)) ($generated@@23 $generated@@24 $generated@@246 ($generated@@26 $generated@@243) $generated@@248)) ($generated@@108 $generated@@246)) (and (= 2 $generated@@112) (= (ControlFlow 0 9) 8)))) $generated@@263)))
$generated@@264))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
