(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@45 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@61 (T@T T@U T@U) Bool)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 (T@U) Int)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@T T@T) T@T)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@102 (Int) Int)
(declare-fun $generated@@104 (T@T T@U) T@U)
(declare-fun $generated@@107 (T@U T@U) Bool)
(declare-fun $generated@@111 (T@U) Bool)
(declare-fun $generated@@113 (T@U) Bool)
(declare-fun $generated@@115 (T@U) Bool)
(declare-fun $generated@@117 (T@U) Bool)
(declare-fun $generated@@119 (T@T T@U) T@U)
(declare-fun $generated@@122 (T@U T@U) Bool)
(declare-fun $generated@@130 (T@U) Bool)
(declare-fun $generated@@131 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@208 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@23 ($generated@@22 $generated@@24 $generated@@25) $generated@@25)
 :pattern ( ($generated@@22 $generated@@24 $generated@@25))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@23 $generated@@26 $generated@@28) ($generated@@23 ($generated@@22 $generated@@26 $generated@@27) $generated@@28))
 :pattern ( ($generated@@22 $generated@@26 $generated@@27) ($generated@@23 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@23 $generated@@30 $generated@@32) ($generated@@23 ($generated@@29 $generated@@30 $generated@@31) $generated@@32))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31) ($generated@@23 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@23 $generated@@34 $generated@@35) ($generated@@23 ($generated@@29 $generated@@33 $generated@@34) $generated@@35))
 :pattern ( ($generated@@29 $generated@@33 $generated@@34) ($generated@@23 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@23 ($generated@@22 $generated@@36 $generated@@37) $generated@@38)  (or (= $generated@@38 $generated@@37) ($generated@@23 $generated@@36 $generated@@38)))
 :pattern ( ($generated@@23 ($generated@@22 $generated@@36 $generated@@37) $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> ($generated@@23 $generated@@41 $generated@@42) (not ($generated@@23 ($generated@@39 $generated@@40 $generated@@41) $generated@@42)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41) ($generated@@23 $generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ) (!  (not ($generated@@23 $generated@@43 $generated@@44))
 :pattern ( ($generated@@23 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@23 ($generated@@45 $generated@@46 $generated@@47) $generated@@48)  (and ($generated@@23 $generated@@46 $generated@@48) ($generated@@23 $generated@@47 $generated@@48)))
 :pattern ( ($generated@@23 ($generated@@45 $generated@@46 $generated@@47) $generated@@48))
)))
(assert (= ($generated@@49 $generated@@50) $generated@@1))
(assert (= ($generated@@49 $generated@@51) $generated@@2))
(assert (= ($generated@@49 $generated@@52) $generated@@3))
(assert (= ($generated@@49 $generated@@53) $generated@@4))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@29 ($generated@@29 $generated@@54 $generated@@55) $generated@@55) ($generated@@29 $generated@@54 $generated@@55))
 :pattern ( ($generated@@29 ($generated@@29 $generated@@54 $generated@@55) $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@45 ($generated@@45 $generated@@56 $generated@@57) $generated@@57) ($generated@@45 $generated@@56 $generated@@57))
 :pattern ( ($generated@@45 ($generated@@45 $generated@@56 $generated@@57) $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@23 ($generated@@39 $generated@@58 $generated@@59) $generated@@60)  (and ($generated@@23 $generated@@58 $generated@@60) (not ($generated@@23 $generated@@59 $generated@@60))))
 :pattern ( ($generated@@23 ($generated@@39 $generated@@58 $generated@@59) $generated@@60))
)))
(assert (= ($generated@@6 $generated@@62) 3))
(assert ($generated@@61 $generated@@62 $generated@@50 $generated@@63))
(assert ($generated@@61 $generated@@62 $generated@@51 $generated@@63))
(assert ($generated@@61 $generated@@62 $generated@@52 $generated@@63))
(assert ($generated@@61 $generated@@62 $generated@@53 $generated@@63))
(assert (forall (($generated@@65 T@U) ) (!  (and (= (= ($generated@@64 $generated@@65) 0) (= $generated@@65 $generated@@43)) (=> (or (not (= ($generated@@64 $generated@@65) 0)) (not true)) (exists (($generated@@66 T@U) ) (! ($generated@@23 $generated@@65 $generated@@66)
 :pattern ( ($generated@@23 $generated@@65 $generated@@66))
))))
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= (+ ($generated@@64 ($generated@@29 $generated@@67 $generated@@68)) ($generated@@64 ($generated@@45 $generated@@67 $generated@@68))) (+ ($generated@@64 $generated@@67) ($generated@@64 $generated@@68)))
 :pattern ( ($generated@@64 ($generated@@29 $generated@@67 $generated@@68)))
 :pattern ( ($generated@@64 ($generated@@45 $generated@@67 $generated@@68)))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@69 $generated@@70 $generated@@71) (= $generated@@70 $generated@@71))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@73 $generated@@82 $generated@@83 ($generated@@79 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@84) $generated@@86) $generated@@84)
 :weight 0
)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (or (= $generated@@91 $generated@@92) (= ($generated@@73 $generated@@87 $generated@@88 ($generated@@79 $generated@@87 $generated@@88 $generated@@90 $generated@@91 $generated@@89) $generated@@92) ($generated@@73 $generated@@87 $generated@@88 $generated@@90 $generated@@92)))
 :weight 0
))) (= ($generated@@6 $generated@@74) 4)) (= ($generated@@6 $generated@@75) 5)) (= ($generated@@6 $generated@@76) 6)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@6 ($generated@@77 $generated@@93 $generated@@94)) 7))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@80 ($generated@@77 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@77 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@81 ($generated@@77 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@77 $generated@@97 $generated@@98))
))))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@72 $generated@@99 $generated@@100) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@11 ($generated@@78 $generated@@7 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@99 $generated@@101) $generated))) ($generated@@11 ($generated@@78 $generated@@7 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@100 $generated@@101) $generated))))
 :pattern ( ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@100 $generated@@101) $generated))
)))
 :pattern ( ($generated@@72 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@103 Int) ) (! (= ($generated@@102 $generated@@103) $generated@@103)
 :pattern ( ($generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@104 $generated@@106 $generated@@105) $generated@@105)
 :pattern ( ($generated@@104 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@107 $generated@@108 $generated@@109) (forall (($generated@@110 T@U) ) (!  (=> ($generated@@23 $generated@@108 $generated@@110) ($generated@@23 $generated@@109 $generated@@110))
 :pattern ( ($generated@@23 $generated@@108 $generated@@110))
 :pattern ( ($generated@@23 $generated@@109 $generated@@110))
)))
 :pattern ( ($generated@@107 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 $generated@@112) (= ($generated@@49 $generated@@112) $generated@@1))
 :pattern ( ($generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 $generated@@114) (= ($generated@@49 $generated@@114) $generated@@2))
 :pattern ( ($generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@115 $generated@@116) (= ($generated@@49 $generated@@116) $generated@@3))
 :pattern ( ($generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 $generated@@118) (= ($generated@@49 $generated@@118) $generated@@4))
 :pattern ( ($generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@119 $generated@@121 ($generated@@78 $generated@@121 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@78 $generated@@121 $generated@@120))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@122 $generated@@123 $generated@@124) (forall (($generated@@125 T@U) ) (!  (or (not ($generated@@23 $generated@@123 $generated@@125)) (not ($generated@@23 $generated@@124 $generated@@125)))
 :pattern ( ($generated@@23 $generated@@123 $generated@@125))
 :pattern ( ($generated@@23 $generated@@124 $generated@@125))
)))
 :pattern ( ($generated@@122 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@111 $generated@@126) (= $generated@@126 $generated@@50))
 :pattern ( ($generated@@111 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@113 $generated@@127) (= $generated@@127 $generated@@51))
 :pattern ( ($generated@@113 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@115 $generated@@128) (= $generated@@128 $generated@@52))
 :pattern ( ($generated@@115 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@117 $generated@@129) (= $generated@@129 $generated@@53))
 :pattern ( ($generated@@117 $generated@@129))
)))
(assert ($generated@@130 $generated))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@T) ) (!  (=> ($generated@@72 $generated@@132 $generated@@133) (=> ($generated@@131 $generated@@136 $generated@@134 $generated@@135 $generated@@132) ($generated@@131 $generated@@136 $generated@@134 $generated@@135 $generated@@133)))
 :pattern ( ($generated@@72 $generated@@132 $generated@@133) ($generated@@131 $generated@@136 $generated@@134 $generated@@135 $generated@@132))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> ($generated@@137 $generated@@138 $generated@@139) (and ($generated@@72 $generated@@138 $generated@@139) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (not ($generated@@130 $generated@@141)) (= ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@138 $generated@@140) $generated@@141) ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@139 $generated@@140) $generated@@141)))
 :pattern ( ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@139 $generated@@140) $generated@@141))
))))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@23 ($generated@@29 $generated@@142 $generated@@143) $generated@@144)  (or ($generated@@23 $generated@@142 $generated@@144) ($generated@@23 $generated@@143 $generated@@144)))
 :pattern ( ($generated@@23 ($generated@@29 $generated@@142 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> ($generated@@122 $generated@@145 $generated@@146) (and (= ($generated@@39 ($generated@@29 $generated@@145 $generated@@146) $generated@@145) $generated@@146) (= ($generated@@39 ($generated@@29 $generated@@145 $generated@@146) $generated@@146) $generated@@145)))
 :pattern ( ($generated@@29 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (or (not (= $generated@@147 $generated@@149)) (not true)) (=> (and ($generated@@72 $generated@@147 $generated@@148) ($generated@@72 $generated@@148 $generated@@149)) ($generated@@72 $generated@@147 $generated@@149)))
 :pattern ( ($generated@@72 $generated@@147 $generated@@148) ($generated@@72 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (and (= (+ (+ ($generated@@64 ($generated@@39 $generated@@150 $generated@@151)) ($generated@@64 ($generated@@39 $generated@@151 $generated@@150))) ($generated@@64 ($generated@@45 $generated@@150 $generated@@151))) ($generated@@64 ($generated@@29 $generated@@150 $generated@@151))) (= ($generated@@64 ($generated@@39 $generated@@150 $generated@@151)) (- ($generated@@64 $generated@@150) ($generated@@64 ($generated@@45 $generated@@150 $generated@@151)))))
 :pattern ( ($generated@@64 ($generated@@39 $generated@@150 $generated@@151)))
)))
(assert (forall (($generated@@152 T@U) ) (! (<= 0 ($generated@@64 $generated@@152))
 :pattern ( ($generated@@64 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and ($generated@@111 $generated@@153) ($generated@@111 $generated@@154)) ($generated@@69 $generated@@153 $generated@@154))
 :pattern ( ($generated@@69 $generated@@153 $generated@@154) ($generated@@111 $generated@@153))
 :pattern ( ($generated@@69 $generated@@153 $generated@@154) ($generated@@111 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and ($generated@@113 $generated@@155) ($generated@@113 $generated@@156)) ($generated@@69 $generated@@155 $generated@@156))
 :pattern ( ($generated@@69 $generated@@155 $generated@@156) ($generated@@113 $generated@@155))
 :pattern ( ($generated@@69 $generated@@155 $generated@@156) ($generated@@113 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and ($generated@@115 $generated@@157) ($generated@@115 $generated@@158)) ($generated@@69 $generated@@157 $generated@@158))
 :pattern ( ($generated@@69 $generated@@157 $generated@@158) ($generated@@115 $generated@@157))
 :pattern ( ($generated@@69 $generated@@157 $generated@@158) ($generated@@115 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and ($generated@@117 $generated@@159) ($generated@@117 $generated@@160)) ($generated@@69 $generated@@159 $generated@@160))
 :pattern ( ($generated@@69 $generated@@159 $generated@@160) ($generated@@117 $generated@@159))
 :pattern ( ($generated@@69 $generated@@159 $generated@@160) ($generated@@117 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@78 $generated@@162 ($generated@@119 $generated@@162 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@119 $generated@@162 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@29 $generated@@163 ($generated@@29 $generated@@163 $generated@@164)) ($generated@@29 $generated@@163 $generated@@164))
 :pattern ( ($generated@@29 $generated@@163 ($generated@@29 $generated@@163 $generated@@164)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@45 $generated@@165 ($generated@@45 $generated@@165 $generated@@166)) ($generated@@45 $generated@@165 $generated@@166))
 :pattern ( ($generated@@45 $generated@@165 ($generated@@45 $generated@@165 $generated@@166)))
)))
(assert  (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@167 $generated@@170 $generated@@171 $generated@@172 ($generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@176 $generated@@173) $generated@@175 $generated@@176) $generated@@173)
 :weight 0
)) (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@167 $generated@@177 $generated@@178 $generated@@179 ($generated@@169 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@167 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@167 $generated@@186 $generated@@187 $generated@@188 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@167 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 Bool) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@11 ($generated@@167 $generated@@76 $generated@@74 $generated@@7 ($generated@@168 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))  (=> (and (or (not (= $generated@@199 $generated@@195)) (not true)) ($generated@@11 ($generated@@78 $generated@@7 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@196 $generated@@199) $generated@@197)))) $generated@@198))
 :pattern ( ($generated@@167 $generated@@76 $generated@@74 $generated@@7 ($generated@@168 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> ($generated@@23 $generated@@201 $generated@@202) (= ($generated@@64 ($generated@@22 $generated@@201 $generated@@202)) ($generated@@64 $generated@@201)))
 :pattern ( ($generated@@64 ($generated@@22 $generated@@201 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and ($generated@@203 $generated@@205) ($generated@@61 $generated@@62 $generated@@204 $generated@@63)) ($generated@@131 $generated@@62 $generated@@204 $generated@@63 $generated@@205))
 :pattern ( ($generated@@131 $generated@@62 $generated@@204 $generated@@63 $generated@@205))
)))
(assert (= ($generated@@206 $generated@@63) $generated@@0))
(assert (= ($generated@@207 $generated@@63) $generated@@5))
(assert (= $generated@@50 ($generated@@104 $generated@@62 $generated@@50)))
(assert (= $generated@@51 ($generated@@104 $generated@@62 $generated@@51)))
(assert (= $generated@@52 ($generated@@104 $generated@@62 $generated@@52)))
(assert (= $generated@@53 ($generated@@104 $generated@@62 $generated@@53)))
(assert (forall (($generated@@209 T@U) ) (!  (=> ($generated@@208 $generated@@209) (or (or (or ($generated@@111 $generated@@209) ($generated@@113 $generated@@209)) ($generated@@115 $generated@@209)) ($generated@@117 $generated@@209)))
 :pattern ( ($generated@@208 $generated@@209))
)))
(assert (forall (($generated@@210 Int) ) (! (= ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 $generated@@210))) ($generated@@104 $generated@@75 ($generated@@119 $generated@@8 ($generated@@12 $generated@@210))))
 :pattern ( ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 $generated@@210))))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@T) ) (! (= ($generated@@119 $generated@@212 ($generated@@104 $generated@@212 $generated@@211)) ($generated@@104 $generated@@75 ($generated@@119 $generated@@212 $generated@@211)))
 :pattern ( ($generated@@119 $generated@@212 ($generated@@104 $generated@@212 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ) (!  (=> ($generated@@61 $generated@@62 $generated@@213 $generated@@63) (or (or (or ($generated@@111 $generated@@213) ($generated@@113 $generated@@213)) ($generated@@115 $generated@@213)) ($generated@@117 $generated@@213)))
 :pattern ( ($generated@@117 $generated@@213) ($generated@@61 $generated@@62 $generated@@213 $generated@@63))
 :pattern ( ($generated@@115 $generated@@213) ($generated@@61 $generated@@62 $generated@@213 $generated@@63))
 :pattern ( ($generated@@113 $generated@@213) ($generated@@61 $generated@@62 $generated@@213 $generated@@63))
 :pattern ( ($generated@@111 $generated@@213) ($generated@@61 $generated@@62 $generated@@213 $generated@@63))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (not ($generated@@23 $generated@@214 $generated@@215)) (= ($generated@@64 ($generated@@22 $generated@@214 $generated@@215)) (+ ($generated@@64 $generated@@214) 1)))
 :pattern ( ($generated@@64 ($generated@@22 $generated@@214 $generated@@215)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () Bool)
(declare-fun $generated@@219 () Int)
(declare-fun $generated@@220 () Bool)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () Bool)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () Int)
(declare-fun $generated@@227 () Int)
(declare-fun $generated@@228 (T@U) Bool)
(declare-fun $generated@@229 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 56) (let (($generated@@230 true))
(let (($generated@@231  (=> (and (= $generated@@216 $generated@@50) (= (ControlFlow 0 49) (- 0 48))) false)))
(let (($generated@@232  (=> (or (not (= $generated@@216 $generated@@51)) (not true)) (and (=> (= (ControlFlow 0 51) 49) $generated@@231) (=> (= (ControlFlow 0 51) 50) $generated@@230)))))
(let (($generated@@233  (=> (and (= $generated@@216 $generated@@51) (= (ControlFlow 0 47) (- 0 46))) false)))
(let (($generated@@234  (=> (or (not (= $generated@@216 $generated@@52)) (not true)) (and (=> (= (ControlFlow 0 52) 47) $generated@@233) (=> (= (ControlFlow 0 52) 51) $generated@@232)))))
(let (($generated@@235  (=> (and (= $generated@@216 $generated@@52) (= (ControlFlow 0 45) (- 0 44))) false)))
(let (($generated@@236  (=> (or (not (= $generated@@216 $generated@@53)) (not true)) (and (=> (= (ControlFlow 0 53) 45) $generated@@235) (=> (= (ControlFlow 0 53) 52) $generated@@234)))))
(let (($generated@@237  (=> (and (= $generated@@216 $generated@@53) (= (ControlFlow 0 43) (- 0 42))) false)))
(let (($generated@@238  (=> (not ($generated@@69 $generated@@216 $generated@@50)) (and (=> (= (ControlFlow 0 54) 43) $generated@@237) (=> (= (ControlFlow 0 54) 53) $generated@@236)))))
(let (($generated@@239  (=> (and ($generated@@107 ($generated@@22 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 3)))) ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2))))) (= $generated@@217 ($generated@@64 ($generated@@39 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@22 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 3)))))))) (and (=> (= (ControlFlow 0 19) (- 0 21)) ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 false)))) (=> ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 false))) (and (=> (= (ControlFlow 0 19) (- 0 20)) (or (<= 0 $generated@@217) (= ($generated@@64 ($generated@@39 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@22 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 3)))))) $generated@@217))) (=> (or (<= 0 $generated@@217) (= ($generated@@64 ($generated@@39 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@22 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 3)))))) $generated@@217)) (=> (= (ControlFlow 0 19) (- 0 18)) (< ($generated@@64 ($generated@@39 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@22 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 3)))))) $generated@@217)))))))))
(let (($generated@@240 true))
(let (($generated@@241  (=> $generated@@218 (and (=> (= (ControlFlow 0 22) 17) $generated@@240) (=> (= (ControlFlow 0 22) 19) $generated@@239)))))
(let (($generated@@242  (=> (not $generated@@218) (=> (and (= $generated@@219 ($generated@@64 ($generated@@39 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@22 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 3))))))) (= (ControlFlow 0 16) (- 0 15))) (<= ($generated@@102 0) $generated@@219)))))
(let (($generated@@243  (and (=> (= (ControlFlow 0 23) 16) $generated@@242) (=> (= (ControlFlow 0 23) 22) $generated@@241))))
(let (($generated@@244 true))
(let (($generated@@245  (=> (and (and (and (and (not false) $generated@@220) (= $generated@@221 1)) $generated@@222) (and (and (forall (($generated@@246 T@U) ) (!  (=> (and (or (not (= $generated@@246 $generated@@224)) (not true)) ($generated@@11 ($generated@@78 $generated@@7 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@246) $generated)))) (= ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@246) ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@246)))
 :pattern ( ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@246))
)) ($generated@@137 $generated@@223 $generated@@223)) (and (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (or (not (= $generated@@247 $generated@@224)) (not true)) ($generated@@11 ($generated@@78 $generated@@7 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@247) $generated)))) (or (= ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@247) $generated@@248) ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@247) $generated@@248)) ($generated@@11 ($generated@@167 $generated@@76 $generated@@74 $generated@@7 $generated@@225 $generated@@247 $generated@@248))))
 :pattern ( ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@247) $generated@@248))
)) (<= ($generated@@64 ($generated@@39 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@22 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 3)))))) $generated@@226)))) (and (=> (= (ControlFlow 0 24) 14) $generated@@244) (=> (= (ControlFlow 0 24) 23) $generated@@243)))))
(let (($generated@@249  (=> ($generated@@69 $generated@@216 $generated@@50) (=> (and (= $generated@@226 ($generated@@64 ($generated@@39 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@22 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 3))))))) (= (ControlFlow 0 25) 24)) $generated@@245))))
(let (($generated@@250  (=> (and (not ($generated@@69 $generated@@216 $generated@@50)) (= $generated@@227 ($generated@@102 1))) (and (=> (= (ControlFlow 0 11) (- 0 13)) ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 false)))) (=> ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 false))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (<= 0 $generated@@227) (= ($generated@@102 1) $generated@@227))) (=> (or (<= 0 $generated@@227) (= ($generated@@102 1) $generated@@227)) (=> (= (ControlFlow 0 11) (- 0 10)) (< ($generated@@102 1) $generated@@227)))))))))
(let (($generated@@251  (=> (and $generated@@222 ($generated@@208 $generated@@216)) (and (=> (= (ControlFlow 0 26) 25) $generated@@249) (=> (= (ControlFlow 0 26) 11) $generated@@250)))))
(let (($generated@@252 true))
(let (($generated@@253  (and (=> (= (ControlFlow 0 27) 9) $generated@@252) (=> (= (ControlFlow 0 27) 26) $generated@@251))))
(let (($generated@@254 true))
(let (($generated@@255  (=> (and (and (and (not false) $generated@@220) (= $generated@@221 1)) (and (and (forall (($generated@@256 T@U) ) (!  (=> (and (or (not (= $generated@@256 $generated@@224)) (not true)) ($generated@@11 ($generated@@78 $generated@@7 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@256) $generated)))) (= ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@256) ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@256)))
 :pattern ( ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@256))
)) ($generated@@137 $generated@@223 $generated@@223)) (and (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (or (not (= $generated@@257 $generated@@224)) (not true)) ($generated@@11 ($generated@@78 $generated@@7 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@257) $generated)))) (or (= ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@257) $generated@@258) ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@257) $generated@@258)) ($generated@@11 ($generated@@167 $generated@@76 $generated@@74 $generated@@7 $generated@@225 $generated@@257 $generated@@258))))
 :pattern ( ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@257) $generated@@258))
)) (<= ($generated@@102 1) $generated@@221)))) (and (=> (= (ControlFlow 0 28) 8) $generated@@254) (=> (= (ControlFlow 0 28) 27) $generated@@253)))))
(let (($generated@@259  (=> ($generated@@69 $generated@@216 $generated@@50) (=> (and (= $generated@@221 ($generated@@102 1)) (= (ControlFlow 0 29) 28)) $generated@@255))))
(let (($generated@@260  (=> (not ($generated@@69 $generated@@216 $generated@@50)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 false)))) (=> ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 false))) (=> (= (ControlFlow 0 6) (- 0 5)) false))))))
(let (($generated@@261  (=> (and $generated@@220 ($generated@@208 $generated@@216)) (and (=> (= (ControlFlow 0 30) 29) $generated@@259) (=> (= (ControlFlow 0 30) 6) $generated@@260)))))
(let (($generated@@262 true))
(let (($generated@@263  (and (=> (= (ControlFlow 0 31) 4) $generated@@262) (=> (= (ControlFlow 0 31) 30) $generated@@261))))
(let (($generated@@264 true))
(let (($generated@@265  (=> (forall (($generated@@266 T@U) ) (!  (=> (and (or (not (= $generated@@266 $generated@@224)) (not true)) ($generated@@11 ($generated@@78 $generated@@7 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@266) $generated)))) (= ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@266) ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@266)))
 :pattern ( ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@266))
)) (=> (and ($generated@@137 $generated@@223 $generated@@223) (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (or (not (= $generated@@267 $generated@@224)) (not true)) ($generated@@11 ($generated@@78 $generated@@7 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@267) $generated)))) (or (= ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@267) $generated@@268) ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@267) $generated@@268)) ($generated@@11 ($generated@@167 $generated@@76 $generated@@74 $generated@@7 $generated@@225 $generated@@267 $generated@@268))))
 :pattern ( ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@76 ($generated@@77 $generated@@74 $generated@@75) $generated@@223 $generated@@267) $generated@@268))
))) (and (=> (= (ControlFlow 0 32) 3) $generated@@264) (=> (= (ControlFlow 0 32) 31) $generated@@263))))))
(let (($generated@@269  (=> (and (not ($generated@@107 ($generated@@22 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 3)))) ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))))) (= (ControlFlow 0 35) 32)) $generated@@265)))
(let (($generated@@270  (=> ($generated@@107 ($generated@@22 ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 3)))) ($generated@@22 ($generated@@22 $generated@@43 ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 1)))) ($generated@@119 $generated@@8 ($generated@@12 ($generated@@102 2))))) (and (=> (= (ControlFlow 0 33) (- 0 34)) ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 false)))) (=> ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 false))) (=> (= (ControlFlow 0 33) 32) $generated@@265))))))
(let (($generated@@271  (and (=> (= (ControlFlow 0 36) 33) $generated@@270) (=> (= (ControlFlow 0 36) 35) $generated@@269))))
(let (($generated@@272  (and (=> (= (ControlFlow 0 39) (- 0 40)) ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 true)))) (=> ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 true))) (=> (= (ControlFlow 0 39) 36) $generated@@271)))))
(let (($generated@@273  (=> ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 false))) (and (=> (= (ControlFlow 0 37) (- 0 38)) ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 false)))) (=> ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 false))) (=> (= (ControlFlow 0 37) 36) $generated@@271))))))
(let (($generated@@274  (=> (and (and (not ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 false)))) (not ($generated@@11 ($generated@@104 $generated@@7 ($generated@@10 true))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@275  (=> ($generated@@69 $generated@@216 $generated@@50) (and (and (=> (= (ControlFlow 0 41) 37) $generated@@273) (=> (= (ControlFlow 0 41) 39) $generated@@272)) (=> (= (ControlFlow 0 41) 2) $generated@@274)))))
(let (($generated@@276  (=> (and (= $generated@@225 ($generated@@168 $generated@@224 $generated@@223 $generated false)) ($generated@@208 $generated@@216)) (and (=> (= (ControlFlow 0 55) 54) $generated@@238) (=> (= (ControlFlow 0 55) 41) $generated@@275)))))
(let (($generated@@277  (=> (and ($generated@@203 $generated@@223) ($generated@@228 $generated@@223)) (=> (and (and (and (and ($generated@@61 $generated@@62 $generated@@216 $generated@@63) ($generated@@131 $generated@@62 $generated@@216 $generated@@63 $generated@@223)) ($generated@@208 $generated@@216)) (= 1 $generated@@229)) (and ($generated@@69 $generated@@216 $generated@@50) (= (ControlFlow 0 56) 55))) $generated@@276))))
$generated@@277))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
