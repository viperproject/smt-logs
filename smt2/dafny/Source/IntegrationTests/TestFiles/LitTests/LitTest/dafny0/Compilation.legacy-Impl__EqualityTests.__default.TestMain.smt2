(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T T@T) T@T)
(declare-fun $generated@@50 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@120 (T@U) Bool)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@1))
(assert (= ($generated@@26 $generated@@0) $generated@@2))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and (or (not (= $generated@@33 $generated@@29)) (not true)) (= ($generated@@30 $generated@@33) ($generated@@28 $generated@@32))) ($generated@@31 $generated@@12 ($generated@@16 ($generated@@27 $generated@@33)) $generated))
 :pattern ( ($generated@@27 $generated@@33) ($generated@@28 $generated@@32))
)))
(assert (= ($generated@@10 $generated@@35) 3))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@38 ($generated@@36 $generated@@37) $generated@@39) ($generated@@34 $generated@@35 $generated@@38 ($generated@@28 $generated@@37) $generated@@39))
 :pattern ( ($generated@@34 $generated@@35 $generated@@38 ($generated@@36 $generated@@37) $generated@@39))
 :pattern ( ($generated@@34 $generated@@35 $generated@@38 ($generated@@28 $generated@@37) $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@43 ($generated@@40 $generated@@42) $generated@@44) ($generated@@34 $generated@@35 $generated@@43 ($generated@@41 $generated@@42) $generated@@44))
 :pattern ( ($generated@@34 $generated@@35 $generated@@43 ($generated@@40 $generated@@42) $generated@@44))
 :pattern ( ($generated@@34 $generated@@35 $generated@@43 ($generated@@41 $generated@@42) $generated@@44))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@46 $generated@@53 $generated@@54 ($generated@@50 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@57) $generated@@55)
 :weight 0
)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (or (= $generated@@62 $generated@@63) (= ($generated@@46 $generated@@58 $generated@@59 ($generated@@50 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@63) ($generated@@46 $generated@@58 $generated@@59 $generated@@61 $generated@@63)))
 :weight 0
))) (= ($generated@@10 $generated@@47) 4)) (= ($generated@@10 $generated@@48) 5)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (= ($generated@@10 ($generated@@49 $generated@@64 $generated@@65)) 6))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@51 ($generated@@49 $generated@@66 $generated@@67)) $generated@@66)
 :pattern ( ($generated@@49 $generated@@66 $generated@@67))
))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@52 ($generated@@49 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@49 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@71 ($generated@@28 $generated@@70) $generated@@72)  (or (= $generated@@71 $generated@@29) ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@35 ($generated@@49 $generated@@47 $generated@@48) $generated@@72 $generated@@71) $generated@@3)))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@71 ($generated@@28 $generated@@70) $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@74 ($generated@@41 $generated@@73) $generated@@75)  (or (= $generated@@74 $generated@@29) ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@35 ($generated@@49 $generated@@47 $generated@@48) $generated@@75 $generated@@74) $generated@@3)))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@74 ($generated@@41 $generated@@73) $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@76 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@35 ($generated@@49 $generated@@47 $generated@@48) $generated@@77 $generated@@79) $generated@@3))) ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@35 ($generated@@49 $generated@@47 $generated@@48) $generated@@78 $generated@@79) $generated@@3))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@35 ($generated@@49 $generated@@47 $generated@@48) $generated@@78 $generated@@79) $generated@@3))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@80 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@45 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@45 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@89 ($generated@@36 $generated@@88))  (and ($generated@@31 $generated@@35 $generated@@89 ($generated@@28 $generated@@88)) (or (not (= $generated@@89 $generated@@29)) (not true))))
 :pattern ( ($generated@@31 $generated@@35 $generated@@89 ($generated@@36 $generated@@88)))
 :pattern ( ($generated@@31 $generated@@35 $generated@@89 ($generated@@28 $generated@@88)))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@91 ($generated@@40 $generated@@90))  (and ($generated@@31 $generated@@35 $generated@@91 ($generated@@41 $generated@@90)) (or (not (= $generated@@91 $generated@@29)) (not true))))
 :pattern ( ($generated@@31 $generated@@35 $generated@@91 ($generated@@40 $generated@@90)))
 :pattern ( ($generated@@31 $generated@@35 $generated@@91 ($generated@@41 $generated@@90)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (!  (=> ($generated@@76 $generated@@92 $generated@@93) (=> ($generated@@34 $generated@@96 $generated@@94 $generated@@95 $generated@@92) ($generated@@34 $generated@@96 $generated@@94 $generated@@95 $generated@@93)))
 :pattern ( ($generated@@76 $generated@@92 $generated@@93) ($generated@@34 $generated@@96 $generated@@94 $generated@@95 $generated@@92))
)))
(assert (forall (($generated@@98 T@U) ) (!  (and (= ($generated@@26 ($generated@@28 $generated@@98)) $generated@@4) (= ($generated@@97 ($generated@@28 $generated@@98)) $generated@@8))
 :pattern ( ($generated@@28 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (!  (and (= ($generated@@26 ($generated@@36 $generated@@99)) $generated@@5) (= ($generated@@97 ($generated@@36 $generated@@99)) $generated@@8))
 :pattern ( ($generated@@36 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (!  (and (= ($generated@@26 ($generated@@41 $generated@@100)) $generated@@6) (= ($generated@@97 ($generated@@41 $generated@@100)) $generated@@9))
 :pattern ( ($generated@@41 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (!  (and (= ($generated@@26 ($generated@@40 $generated@@101)) $generated@@7) (= ($generated@@97 ($generated@@40 $generated@@101)) $generated@@9))
 :pattern ( ($generated@@40 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@103 ($generated@@28 $generated@@102))  (or (= $generated@@103 $generated@@29) (= ($generated@@30 $generated@@103) ($generated@@28 $generated@@102))))
 :pattern ( ($generated@@31 $generated@@35 $generated@@103 ($generated@@28 $generated@@102)))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@105 ($generated@@41 $generated@@104))  (or (= $generated@@105 $generated@@29) (= ($generated@@30 $generated@@105) ($generated@@41 $generated@@104))))
 :pattern ( ($generated@@31 $generated@@35 $generated@@105 ($generated@@41 $generated@@104)))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (or (not (= $generated@@106 $generated@@108)) (not true)) (=> (and ($generated@@76 $generated@@106 $generated@@107) ($generated@@76 $generated@@107 $generated@@108)) ($generated@@76 $generated@@106 $generated@@108)))
 :pattern ( ($generated@@76 $generated@@106 $generated@@107) ($generated@@76 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (! (<= 0 ($generated@@27 $generated@@109))
 :pattern ( ($generated@@27 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@110 ($generated@@28 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@28 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@112 ($generated@@36 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@36 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@41 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@41 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@40 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@40 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@45 $generated@@119 ($generated@@85 $generated@@119 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@85 $generated@@119 $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (and (and ($generated@@120 $generated@@122) (and (or (not (= $generated@@123 $generated@@29)) (not true)) (= ($generated@@30 $generated@@123) ($generated@@28 $generated@@121)))) ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@35 ($generated@@49 $generated@@47 $generated@@48) $generated@@122 $generated@@123) $generated@@3)))) ($generated@@34 $generated@@12 ($generated@@16 ($generated@@27 $generated@@123)) $generated $generated@@122))
 :pattern ( ($generated@@27 $generated@@123) ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@35 ($generated@@49 $generated@@47 $generated@@48) $generated@@122 $generated@@123) $generated@@3)) ($generated@@28 $generated@@121))
)))
(assert  (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@124 $generated@@127 $generated@@128 $generated@@129 ($generated@@126 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@132 $generated@@133) $generated@@130)
 :weight 0
)) (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@124 $generated@@134 $generated@@135 $generated@@136 ($generated@@126 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@124 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@124 $generated@@143 $generated@@144 $generated@@145 ($generated@@126 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@124 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 Bool) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@15 ($generated@@124 $generated@@35 $generated@@47 $generated@@11 ($generated@@125 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@156 $generated@@157))  (=> (and (or (not (= $generated@@156 $generated@@152)) (not true)) ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@35 ($generated@@49 $generated@@47 $generated@@48) $generated@@153 $generated@@156) $generated@@154)))) $generated@@155))
 :pattern ( ($generated@@124 $generated@@35 $generated@@47 $generated@@11 ($generated@@125 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> ($generated@@120 ($generated@@50 $generated@@35 ($generated@@49 $generated@@47 $generated@@48) $generated@@158 $generated@@159 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@35 ($generated@@49 $generated@@47 $generated@@48) $generated@@158 $generated@@159) $generated@@160 $generated@@161))) ($generated@@76 $generated@@158 ($generated@@50 $generated@@35 ($generated@@49 $generated@@47 $generated@@48) $generated@@158 $generated@@159 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@35 ($generated@@49 $generated@@47 $generated@@48) $generated@@158 $generated@@159) $generated@@160 $generated@@161))))
 :pattern ( ($generated@@50 $generated@@35 ($generated@@49 $generated@@47 $generated@@48) $generated@@158 $generated@@159 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@35 ($generated@@49 $generated@@47 $generated@@48) $generated@@158 $generated@@159) $generated@@160 $generated@@161)))
)))
(assert (forall (($generated@@162 Int) ) (! (= ($generated@@85 $generated@@12 ($generated@@16 ($generated@@80 $generated@@162))) ($generated@@82 $generated@@48 ($generated@@85 $generated@@12 ($generated@@16 $generated@@162))))
 :pattern ( ($generated@@85 $generated@@12 ($generated@@16 ($generated@@80 $generated@@162))))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@85 $generated@@164 ($generated@@82 $generated@@164 $generated@@163)) ($generated@@82 $generated@@48 ($generated@@85 $generated@@164 $generated@@163)))
 :pattern ( ($generated@@85 $generated@@164 ($generated@@82 $generated@@164 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! ($generated@@34 $generated@@12 $generated@@166 $generated $generated@@165)
 :pattern ( ($generated@@34 $generated@@12 $generated@@166 $generated $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! ($generated@@34 $generated@@13 $generated@@168 $generated@@0 $generated@@167)
 :pattern ( ($generated@@34 $generated@@13 $generated@@168 $generated@@0 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! ($generated@@31 $generated@@12 $generated@@169 $generated)
 :pattern ( ($generated@@31 $generated@@12 $generated@@169 $generated))
)))
(assert (forall (($generated@@170 T@U) ) (! ($generated@@31 $generated@@13 $generated@@170 $generated@@0)
 :pattern ( ($generated@@31 $generated@@13 $generated@@170 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@178  (=> (= (ControlFlow 0 2) (- 0 1)) (<= 0 ($generated@@80 10)))))
(let (($generated@@179  (=> (and (= $generated@@29 $generated@@29) (= (ControlFlow 0 4) 2)) $generated@@178)))
(let (($generated@@180  (=> (and (or (not (= $generated@@29 $generated@@29)) (not true)) (= (ControlFlow 0 3) 2)) $generated@@178)))
(let (($generated@@181  (and (=> (= (ControlFlow 0 5) 3) $generated@@180) (=> (= (ControlFlow 0 5) 4) $generated@@179))))
(let (($generated@@182  (=> (and (or (not (= $generated@@29 $generated@@29)) (not true)) (= (ControlFlow 0 7) 5)) $generated@@181)))
(let (($generated@@183  (=> (and (= $generated@@29 $generated@@29) (= (ControlFlow 0 6) 5)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 8) 6) $generated@@183) (=> (= (ControlFlow 0 8) 7) $generated@@182))))
(let (($generated@@185  (=> (and (= $generated@@29 $generated@@29) (= (ControlFlow 0 10) 8)) $generated@@184)))
(let (($generated@@186  (=> (and (or (not (= $generated@@29 $generated@@29)) (not true)) (= (ControlFlow 0 9) 8)) $generated@@184)))
(let (($generated@@187  (and (=> (= (ControlFlow 0 11) 9) $generated@@186) (=> (= (ControlFlow 0 11) 10) $generated@@185))))
(let (($generated@@188  (=> (and (or (not (= $generated@@29 $generated@@29)) (not true)) (= (ControlFlow 0 13) 11)) $generated@@187)))
(let (($generated@@189  (=> (and (= $generated@@29 $generated@@29) (= (ControlFlow 0 12) 11)) $generated@@187)))
(let (($generated@@190  (=> (= $generated@@171 ($generated@@125 $generated@@29 $generated@@172 $generated@@3 false)) (and (=> (= (ControlFlow 0 14) 12) $generated@@189) (=> (= (ControlFlow 0 14) 13) $generated@@188)))))
(let (($generated@@191  (=> (and ($generated@@120 $generated@@172) ($generated@@173 $generated@@172)) (=> (and (and (and (and ($generated@@31 $generated@@35 $generated@@174 ($generated@@41 $generated)) ($generated@@34 $generated@@35 $generated@@174 ($generated@@41 $generated) $generated@@172)) true) (and (and ($generated@@31 $generated@@35 $generated@@175 ($generated@@41 $generated)) ($generated@@34 $generated@@35 $generated@@175 ($generated@@41 $generated) $generated@@172)) true)) (and (and (and ($generated@@31 $generated@@35 $generated@@176 ($generated@@36 $generated@@0)) ($generated@@34 $generated@@35 $generated@@176 ($generated@@36 $generated@@0) $generated@@172)) true) (and (= 1 $generated@@177) (= (ControlFlow 0 15) 14)))) $generated@@190))))
$generated@@191)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
