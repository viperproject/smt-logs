(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U T@U T@U) T@U)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@61 () Int)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@67 (T@U T@U T@U) Bool)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@105 (T@U) Int)
(declare-fun $generated@@106 (T@U) Int)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@118 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@119 (T@T T@T) T@T)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@122 (T@T) T@T)
(declare-fun $generated@@123 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (! (= ($generated@@20 $generated@@22 ($generated@@21 $generated@@23) $generated@@24) ($generated@@20 $generated@@22 $generated@@23 $generated@@24))
 :pattern ( ($generated@@20 $generated@@22 ($generated@@21 $generated@@23) $generated@@24))
)))
(assert (= ($generated@@25 $generated@@26) $generated@@1))
(assert (= ($generated@@4 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@30 $generated@@32) ($generated@@27 $generated@@28 $generated@@26 ($generated@@29 $generated@@31) $generated@@32))
 :pattern ( ($generated@@27 $generated@@28 $generated@@26 ($generated@@29 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ) (! ($generated@@33 $generated@@28 $generated@@26 ($generated@@29 $generated@@34))
 :pattern ( ($generated@@33 $generated@@28 $generated@@26 ($generated@@29 $generated@@34)))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@37) (= $generated@@36 $generated@@37))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (and ($generated@@38 $generated@@41) ($generated@@38 $generated@@42)) (= ($generated@@35 $generated@@41 $generated@@42)  (and (= ($generated@@39 $generated@@41) ($generated@@39 $generated@@42)) ($generated@@35 ($generated@@40 $generated@@41) ($generated@@40 $generated@@42)))))
 :pattern ( ($generated@@35 $generated@@41 $generated@@42) ($generated@@38 $generated@@41))
 :pattern ( ($generated@@35 $generated@@41 $generated@@42) ($generated@@38 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 $generated@@44) $generated@@44)
 :pattern ( ($generated@@43 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@33 $generated@@28 ($generated@@46 $generated@@49 $generated@@50) ($generated@@29 $generated@@48))  (and ($generated@@47 $generated@@49 $generated@@48) ($generated@@33 $generated@@28 $generated@@50 ($generated@@29 $generated@@48))))
 :pattern ( ($generated@@33 $generated@@28 ($generated@@46 $generated@@49 $generated@@50) ($generated@@29 $generated@@48)))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 $generated@@52) (= ($generated@@25 $generated@@52) $generated@@1))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@38 $generated@@53) (= ($generated@@25 $generated@@53) $generated@@2))
 :pattern ( ($generated@@38 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@55 $generated@@57 ($generated@@54 $generated@@57 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@54 $generated@@57 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (!  (=> ($generated@@38 $generated@@58) (exists (($generated@@59 T@U) ($generated@@60 T@U) ) (= $generated@@58 ($generated@@46 $generated@@59 $generated@@60))))
 :pattern ( ($generated@@38 $generated@@58))
)))
(assert  (=> (<= 1 $generated@@61) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (or ($generated@@62 $generated@@63 $generated@@65) (and (< 1 $generated@@61) (and ($generated@@33 $generated@@28 $generated@@65 ($generated@@29 $generated@@63)) (not ($generated@@35 $generated@@65 $generated@@26))))) ($generated@@47 ($generated@@20 $generated@@63 $generated@@64 $generated@@65) $generated@@63))
 :pattern ( ($generated@@20 $generated@@63 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@51 $generated@@66) (= $generated@@66 $generated@@26))
 :pattern ( ($generated@@51 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@55 $generated@@71 $generated@@68) $generated@@69 $generated@@70) ($generated@@27 $generated@@71 $generated@@68 $generated@@69 $generated@@70))
 :pattern ( ($generated@@67 ($generated@@55 $generated@@71 $generated@@68) $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@74 T@U) ) (!  (and (= ($generated@@72 ($generated@@29 $generated@@74)) $generated@@0) (= ($generated@@73 ($generated@@29 $generated@@74)) $generated@@3))
 :pattern ( ($generated@@29 $generated@@74))
)))
(assert (= ($generated@@4 $generated@@75) 4))
(assert  (=> (<= 1 $generated@@61) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (or ($generated@@62 $generated@@76 ($generated@@43 $generated@@28 $generated@@78)) (and (< 1 $generated@@61) (and ($generated@@33 $generated@@28 $generated@@78 ($generated@@29 $generated@@76)) (not ($generated@@35 $generated@@78 $generated@@26))))) (and (=> (not ($generated@@9 ($generated@@43 $generated@@5 ($generated@@8 ($generated@@51 ($generated@@43 $generated@@28 ($generated@@40 ($generated@@43 $generated@@28 $generated@@78)))))))) (let (($generated@@79 ($generated@@43 $generated@@28 ($generated@@40 ($generated@@43 $generated@@28 ($generated@@40 ($generated@@43 $generated@@28 $generated@@78)))))))
(let (($generated@@80 ($generated@@43 $generated@@75 ($generated@@39 ($generated@@43 $generated@@28 ($generated@@40 ($generated@@43 $generated@@28 $generated@@78)))))))
($generated@@62 $generated@@76 ($generated@@46 $generated@@80 $generated@@79))))) (= ($generated@@20 $generated@@76 ($generated@@21 $generated@@77) ($generated@@43 $generated@@28 $generated@@78)) (ite ($generated@@51 ($generated@@43 $generated@@28 ($generated@@40 ($generated@@43 $generated@@28 $generated@@78)))) (let (($generated@@81 ($generated@@43 $generated@@75 ($generated@@39 ($generated@@43 $generated@@28 $generated@@78)))))
$generated@@81) (let (($generated@@82 ($generated@@43 $generated@@28 ($generated@@40 ($generated@@43 $generated@@28 ($generated@@40 ($generated@@43 $generated@@28 $generated@@78)))))))
(let (($generated@@83 ($generated@@43 $generated@@75 ($generated@@39 ($generated@@43 $generated@@28 ($generated@@40 ($generated@@43 $generated@@28 $generated@@78)))))))
($generated@@43 $generated@@75 ($generated@@20 $generated@@76 ($generated@@21 $generated@@77) ($generated@@43 $generated@@28 ($generated@@46 $generated@@83 $generated@@82))))))))))
 :weight 3
 :pattern ( ($generated@@20 $generated@@76 ($generated@@21 $generated@@77) ($generated@@43 $generated@@28 $generated@@78)))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@33 $generated@@28 $generated@@85 ($generated@@29 $generated@@84)) (or ($generated@@51 $generated@@85) ($generated@@38 $generated@@85)))
 :pattern ( ($generated@@38 $generated@@85) ($generated@@33 $generated@@28 $generated@@85 ($generated@@29 $generated@@84)))
 :pattern ( ($generated@@51 $generated@@85) ($generated@@33 $generated@@28 $generated@@85 ($generated@@29 $generated@@84)))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@47 ($generated@@55 $generated@@88 $generated@@86) $generated@@87) ($generated@@33 $generated@@88 $generated@@86 $generated@@87))
 :pattern ( ($generated@@47 ($generated@@55 $generated@@88 $generated@@86) $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and ($generated@@51 $generated@@89) ($generated@@51 $generated@@90)) ($generated@@35 $generated@@89 $generated@@90))
 :pattern ( ($generated@@35 $generated@@89 $generated@@90) ($generated@@51 $generated@@89))
 :pattern ( ($generated@@35 $generated@@89 $generated@@90) ($generated@@51 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@25 ($generated@@46 $generated@@91 $generated@@92)) $generated@@2)
 :pattern ( ($generated@@46 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@39 ($generated@@46 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@46 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@40 ($generated@@46 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@46 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@97 ($generated@@29 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@29 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@54 $generated@@100 ($generated@@55 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@55 $generated@@100 $generated@@99))
)))
(assert  (=> (<= 1 $generated@@61) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (or ($generated@@62 $generated@@102 $generated@@104) (and (< 1 $generated@@61) (and (and ($generated@@33 $generated@@28 $generated@@104 ($generated@@29 $generated@@102)) ($generated@@27 $generated@@28 $generated@@104 ($generated@@29 $generated@@102) $generated@@101)) (not ($generated@@35 $generated@@104 $generated@@26))))) ($generated@@30 $generated@@101)) ($generated@@67 ($generated@@20 $generated@@102 $generated@@103 $generated@@104) $generated@@102 $generated@@101))
 :pattern ( ($generated@@67 ($generated@@20 $generated@@102 $generated@@103 $generated@@104) $generated@@102 $generated@@101))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (< ($generated@@105 $generated@@107) ($generated@@106 ($generated@@46 $generated@@107 $generated@@108)))
 :pattern ( ($generated@@46 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (< ($generated@@106 $generated@@110) ($generated@@106 ($generated@@46 $generated@@109 $generated@@110)))
 :pattern ( ($generated@@46 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and ($generated@@30 $generated@@113) (and ($generated@@38 $generated@@111) ($generated@@27 $generated@@28 $generated@@111 ($generated@@29 $generated@@112) $generated@@113))) ($generated@@67 ($generated@@39 $generated@@111) $generated@@112 $generated@@113))
 :pattern ( ($generated@@67 ($generated@@39 $generated@@111) $generated@@112 $generated@@113))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@114 $generated@@124 $generated@@125 $generated@@126 ($generated@@120 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@129 $generated@@130) $generated@@127)
 :weight 0
)) (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@114 $generated@@131 $generated@@132 $generated@@133 ($generated@@120 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@114 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@114 $generated@@140 $generated@@141 $generated@@142 ($generated@@120 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@114 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)))) (= ($generated@@4 $generated@@115) 5)) (= ($generated@@4 $generated@@116) 6)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@118 $generated@@149 $generated@@150 ($generated@@121 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@151) $generated@@153) $generated@@151)
 :weight 0
))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@158 $generated@@159) (= ($generated@@118 $generated@@154 $generated@@155 ($generated@@121 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@156) $generated@@159) ($generated@@118 $generated@@154 $generated@@155 $generated@@157 $generated@@159)))
 :weight 0
))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (= ($generated@@4 ($generated@@119 $generated@@160 $generated@@161)) 7))) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (! (= ($generated@@122 ($generated@@119 $generated@@162 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@119 $generated@@162 $generated@@163))
))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (! (= ($generated@@123 ($generated@@119 $generated@@164 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@119 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Bool) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@9 ($generated@@114 $generated@@115 $generated@@116 $generated@@5 ($generated@@117 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))  (=> (and (or (not (= $generated@@170 $generated@@166)) (not true)) ($generated@@9 ($generated@@54 $generated@@5 ($generated@@118 $generated@@116 $generated@@75 ($generated@@118 $generated@@115 ($generated@@119 $generated@@116 $generated@@75) $generated@@167 $generated@@170) $generated@@168)))) $generated@@169))
 :pattern ( ($generated@@114 $generated@@115 $generated@@116 $generated@@5 ($generated@@117 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@105 ($generated@@55 $generated@@28 $generated@@172)) ($generated@@106 $generated@@172))
 :pattern ( ($generated@@105 ($generated@@55 $generated@@28 $generated@@172)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> ($generated@@47 $generated@@174 ($generated@@29 $generated@@173)) (and (= ($generated@@55 $generated@@28 ($generated@@54 $generated@@28 $generated@@174)) $generated@@174) ($generated@@33 $generated@@28 ($generated@@54 $generated@@28 $generated@@174) ($generated@@29 $generated@@173))))
 :pattern ( ($generated@@47 $generated@@174 ($generated@@29 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and ($generated@@30 $generated@@177) (and ($generated@@38 $generated@@175) ($generated@@27 $generated@@28 $generated@@175 ($generated@@29 $generated@@176) $generated@@177))) ($generated@@27 $generated@@28 ($generated@@40 $generated@@175) ($generated@@29 $generated@@176) $generated@@177))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@40 $generated@@175) ($generated@@29 $generated@@176) $generated@@177))
)))
(assert (= $generated@@26 ($generated@@43 $generated@@28 $generated@@26)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@46 ($generated@@43 $generated@@75 $generated@@178) ($generated@@43 $generated@@28 $generated@@179)) ($generated@@43 $generated@@28 ($generated@@46 $generated@@178 $generated@@179)))
 :pattern ( ($generated@@46 ($generated@@43 $generated@@75 $generated@@178) ($generated@@43 $generated@@28 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@55 $generated@@181 ($generated@@43 $generated@@181 $generated@@180)) ($generated@@43 $generated@@75 ($generated@@55 $generated@@181 $generated@@180)))
 :pattern ( ($generated@@55 $generated@@181 ($generated@@43 $generated@@181 $generated@@180)))
)))
(assert  (=> (<= 1 $generated@@61) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (or ($generated@@62 $generated@@182 $generated@@184) (and (< 1 $generated@@61) (and ($generated@@33 $generated@@28 $generated@@184 ($generated@@29 $generated@@182)) (not ($generated@@35 $generated@@184 $generated@@26))))) (and (=> (not ($generated@@51 ($generated@@40 $generated@@184))) (let (($generated@@185 ($generated@@40 ($generated@@40 $generated@@184))))
(let (($generated@@186 ($generated@@39 ($generated@@40 $generated@@184))))
($generated@@62 $generated@@182 ($generated@@46 $generated@@186 $generated@@185))))) (= ($generated@@20 $generated@@182 ($generated@@21 $generated@@183) $generated@@184) (ite ($generated@@51 ($generated@@40 $generated@@184)) (let (($generated@@187 ($generated@@39 $generated@@184)))
$generated@@187) (let (($generated@@188 ($generated@@40 ($generated@@40 $generated@@184))))
(let (($generated@@189 ($generated@@39 ($generated@@40 $generated@@184))))
($generated@@20 $generated@@182 $generated@@183 ($generated@@46 $generated@@189 $generated@@188))))))))
 :pattern ( ($generated@@20 $generated@@182 ($generated@@21 $generated@@183) $generated@@184))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> ($generated@@30 $generated@@193) (= ($generated@@27 $generated@@28 ($generated@@46 $generated@@191 $generated@@192) ($generated@@29 $generated@@190) $generated@@193)  (and ($generated@@67 $generated@@191 $generated@@190 $generated@@193) ($generated@@27 $generated@@28 $generated@@192 ($generated@@29 $generated@@190) $generated@@193))))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@46 $generated@@191 $generated@@192) ($generated@@29 $generated@@190) $generated@@193))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@204  (=> (= $generated@@194 ($generated@@117 $generated@@195 $generated@@196 $generated false)) (=> (and (= $generated@@197 ($generated@@46 $generated@@198 ($generated@@43 $generated@@28 $generated@@26))) ($generated@@27 $generated@@28 $generated@@197 ($generated@@29 $generated@@199) $generated@@196)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not ($generated@@35 $generated@@197 $generated@@26))) (=> (and ($generated@@62 $generated@@199 ($generated@@46 $generated@@198 ($generated@@43 $generated@@28 $generated@@26))) ($generated@@62 $generated@@199 ($generated@@46 $generated@@198 ($generated@@43 $generated@@28 $generated@@26)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= ($generated@@20 $generated@@199 ($generated@@21 ($generated@@21 $generated@@200)) ($generated@@46 $generated@@198 ($generated@@43 $generated@@28 $generated@@26))) $generated@@198)) (=> (= ($generated@@20 $generated@@199 ($generated@@21 $generated@@200) ($generated@@46 $generated@@198 ($generated@@43 $generated@@28 $generated@@26))) $generated@@198) (=> (and (= $generated@@201 ($generated@@46 $generated@@198 ($generated@@46 $generated@@198 ($generated@@43 $generated@@28 $generated@@26)))) ($generated@@27 $generated@@28 $generated@@201 ($generated@@29 $generated@@199) $generated@@196)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not ($generated@@35 $generated@@201 $generated@@26))) (=> ($generated@@62 $generated@@199 ($generated@@46 $generated@@198 ($generated@@46 $generated@@198 ($generated@@43 $generated@@28 $generated@@26)))) (=> (and (= $generated@@202 ($generated@@46 $generated@@198 ($generated@@43 $generated@@28 $generated@@26))) ($generated@@27 $generated@@28 $generated@@202 ($generated@@29 $generated@@199) $generated@@196)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not ($generated@@35 $generated@@202 $generated@@26))) (=> ($generated@@62 $generated@@199 ($generated@@46 $generated@@198 ($generated@@43 $generated@@28 $generated@@26))) (=> (and (and ($generated@@62 $generated@@199 ($generated@@46 $generated@@198 ($generated@@46 $generated@@198 ($generated@@43 $generated@@28 $generated@@26)))) ($generated@@62 $generated@@199 ($generated@@46 $generated@@198 ($generated@@43 $generated@@28 $generated@@26)))) (= (ControlFlow 0 2) (- 0 1))) (= ($generated@@20 $generated@@199 ($generated@@21 ($generated@@21 $generated@@200)) ($generated@@46 $generated@@198 ($generated@@46 $generated@@198 ($generated@@43 $generated@@28 $generated@@26)))) ($generated@@20 $generated@@199 ($generated@@21 ($generated@@21 $generated@@200)) ($generated@@46 $generated@@198 ($generated@@43 $generated@@28 $generated@@26)))))))))))))))))))
(let (($generated@@205  (=> (and ($generated@@30 $generated@@196) ($generated@@203 $generated@@196)) (=> (and (and ($generated@@47 $generated@@198 $generated@@199) ($generated@@67 $generated@@198 $generated@@199 $generated@@196)) (and (= 2 $generated@@61) (= (ControlFlow 0 7) 2))) $generated@@204))))
$generated@@205)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
