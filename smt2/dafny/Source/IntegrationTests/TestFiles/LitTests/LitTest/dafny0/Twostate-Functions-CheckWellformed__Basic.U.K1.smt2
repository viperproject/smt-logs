(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () Int)
(declare-fun $generated@@28 (T@U T@U T@U T@U) Int)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@T T@T) T@T)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@121 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert  (and (and (and (and (and (and (and (= ($generated@@8 $generated@@34) 3) (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@38 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
))) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@38 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@38 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@8 $generated@@39) 4)) (= ($generated@@8 $generated@@40) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@8 ($generated@@41 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@41 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@41 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@41 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@41 $generated@@61 $generated@@62))
))))
(assert  (=> (<= 1 $generated@@27) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (or ($generated@@30 $generated@@63 $generated@@64 $generated@@65 $generated@@66) (and (< 1 $generated@@27) (and (and (and (and ($generated@@29 $generated@@63) ($generated@@29 $generated@@64)) ($generated@@31 $generated@@63 $generated@@64)) (and (or (not (= $generated@@65 $generated@@32)) (not true)) (and ($generated@@33 $generated@@34 $generated@@65 $generated@@35) ($generated@@36 $generated@@34 $generated@@65 $generated@@35 $generated@@63)))) ($generated@@33 $generated@@34 $generated@@66 $generated@@35)))) (= ($generated@@28 $generated@@63 $generated@@64 $generated@@65 $generated@@66) ($generated@@15 ($generated@@37 $generated@@10 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@34 ($generated@@41 $generated@@39 $generated@@40) $generated@@63 $generated@@66) $generated@@42)))))
 :pattern ( ($generated@@28 $generated@@63 $generated@@64 $generated@@65 $generated@@66) ($generated@@29 $generated@@64))
))))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@69 $generated@@67)  (or (= $generated@@69 $generated@@32) (= ($generated@@68 $generated@@69) $generated@@67)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@69 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@36 $generated@@34 $generated@@70 $generated@@35 $generated@@71) ($generated@@36 $generated@@34 $generated@@70 $generated@@67 $generated@@71))
 :pattern ( ($generated@@36 $generated@@34 $generated@@70 $generated@@35 $generated@@71))
 :pattern ( ($generated@@36 $generated@@34 $generated@@70 $generated@@67 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (and (and (and (and ($generated@@29 $generated@@74) ($generated@@29 $generated@@75)) (and (or (not (= $generated@@76 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@76 $generated@@35))) (or ($generated@@30 $generated@@73 $generated@@74 $generated@@76 $generated@@77) ($generated@@33 $generated@@34 $generated@@77 $generated@@35))) (and ($generated@@72 $generated@@74) ($generated@@31 $generated@@74 $generated@@75))) (=> (forall (($generated@@78 T@U) ($generated@@79 T@U) ) true) (= ($generated@@28 $generated@@73 $generated@@74 $generated@@76 $generated@@77) ($generated@@28 $generated@@73 $generated@@75 $generated@@76 $generated@@77))))
 :pattern ( ($generated@@72 $generated@@74) ($generated@@31 $generated@@74 $generated@@75) ($generated@@28 $generated@@73 $generated@@75 $generated@@76 $generated@@77))
)))
(assert (= ($generated@@24 $generated@@42) 0))
(assert (= ($generated@@80 $generated@@3 $generated@@7) $generated@@42))
(assert  (not ($generated@@81 $generated@@42)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@36 $generated@@34 $generated@@82 $generated@@67 $generated@@83)  (or (= $generated@@82 $generated@@32) ($generated@@13 ($generated@@37 $generated@@9 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@34 ($generated@@41 $generated@@39 $generated@@40) $generated@@83 $generated@@82) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@34 $generated@@82 $generated@@67 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@31 $generated@@84 $generated@@85) (forall (($generated@@86 T@U) ) (!  (=> ($generated@@13 ($generated@@37 $generated@@9 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@34 ($generated@@41 $generated@@39 $generated@@40) $generated@@84 $generated@@86) $generated@@1))) ($generated@@13 ($generated@@37 $generated@@9 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@34 ($generated@@41 $generated@@39 $generated@@40) $generated@@85 $generated@@86) $generated@@1))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@34 ($generated@@41 $generated@@39 $generated@@40) $generated@@85 $generated@@86) $generated@@1))
)))
 :pattern ( ($generated@@31 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 $generated@@88) $generated@@88)
 :pattern ( ($generated@@87 $generated@@89 $generated@@88))
)))
(assert  (=> (<= 1 $generated@@27) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@30 $generated@@90 $generated@@91 $generated@@92 ($generated@@87 $generated@@34 $generated@@93)) (and (< 1 $generated@@27) (and (and (and (and ($generated@@29 $generated@@90) ($generated@@29 $generated@@91)) ($generated@@31 $generated@@90 $generated@@91)) (and (or (not (= $generated@@92 $generated@@32)) (not true)) (and ($generated@@33 $generated@@34 $generated@@92 $generated@@35) ($generated@@36 $generated@@34 $generated@@92 $generated@@35 $generated@@90)))) ($generated@@33 $generated@@34 $generated@@93 $generated@@35)))) (= ($generated@@28 $generated@@90 $generated@@91 $generated@@92 ($generated@@87 $generated@@34 $generated@@93)) ($generated@@15 ($generated@@37 $generated@@10 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@34 ($generated@@41 $generated@@39 $generated@@40) $generated@@90 ($generated@@87 $generated@@34 $generated@@93)) $generated@@42)))))
 :weight 3
 :pattern ( ($generated@@28 $generated@@90 $generated@@91 $generated@@92 ($generated@@87 $generated@@34 $generated@@93)) ($generated@@29 $generated@@91))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 ($generated@@37 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@37 $generated@@96 $generated@@95))
)))
(assert ($generated@@81 $generated@@1))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and (and ($generated@@29 $generated@@97) (and (or (not (= $generated@@98 $generated@@32)) (not true)) (= ($generated@@68 $generated@@98) $generated@@67))) ($generated@@13 ($generated@@37 $generated@@9 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@34 ($generated@@41 $generated@@39 $generated@@40) $generated@@97 $generated@@98) $generated@@1)))) ($generated@@36 $generated@@10 ($generated@@37 $generated@@10 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@34 ($generated@@41 $generated@@39 $generated@@40) $generated@@97 $generated@@98) $generated@@42)) $generated $generated@@97))
 :pattern ( ($generated@@37 $generated@@10 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@34 ($generated@@41 $generated@@39 $generated@@40) $generated@@97 $generated@@98) $generated@@42)))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (!  (=> ($generated@@31 $generated@@99 $generated@@100) (=> ($generated@@36 $generated@@103 $generated@@101 $generated@@102 $generated@@99) ($generated@@36 $generated@@103 $generated@@101 $generated@@102 $generated@@100)))
 :pattern ( ($generated@@31 $generated@@99 $generated@@100) ($generated@@36 $generated@@103 $generated@@101 $generated@@102 $generated@@99))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@104 $generated@@35)  (and ($generated@@33 $generated@@34 $generated@@104 $generated@@67) (or (not (= $generated@@104 $generated@@32)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@104 $generated@@35))
 :pattern ( ($generated@@33 $generated@@34 $generated@@104 $generated@@67))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (or (not (= $generated@@105 $generated@@107)) (not true)) (=> (and ($generated@@31 $generated@@105 $generated@@106) ($generated@@31 $generated@@106 $generated@@107)) ($generated@@31 $generated@@105 $generated@@107)))
 :pattern ( ($generated@@31 $generated@@105 $generated@@106) ($generated@@31 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (and (= ($generated@@108 ($generated@@80 $generated@@109 $generated@@110)) $generated@@109) (= ($generated@@26 ($generated@@80 $generated@@109 $generated@@110)) $generated@@110))
 :pattern ( ($generated@@80 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@37 $generated@@112 ($generated@@94 $generated@@112 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@94 $generated@@112 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (and ($generated@@29 $generated@@113) (and (or (not (= $generated@@114 $generated@@32)) (not true)) (= ($generated@@68 $generated@@114) $generated@@67))) ($generated@@33 $generated@@10 ($generated@@37 $generated@@10 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@34 ($generated@@41 $generated@@39 $generated@@40) $generated@@113 $generated@@114) $generated@@42)) $generated))
 :pattern ( ($generated@@37 $generated@@10 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@34 ($generated@@41 $generated@@39 $generated@@40) $generated@@113 $generated@@114) $generated@@42)))
)))
(assert  (=> (<= 1 $generated@@27) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or ($generated@@30 $generated@@115 $generated@@116 ($generated@@87 $generated@@34 $generated@@117) ($generated@@87 $generated@@34 $generated@@118)) (and (< 1 $generated@@27) (and (and (and (and ($generated@@29 $generated@@115) ($generated@@29 $generated@@116)) ($generated@@31 $generated@@115 $generated@@116)) (and (or (not (= $generated@@117 $generated@@32)) (not true)) (and ($generated@@33 $generated@@34 $generated@@117 $generated@@35) ($generated@@36 $generated@@34 $generated@@117 $generated@@35 $generated@@115)))) ($generated@@33 $generated@@34 $generated@@118 $generated@@35)))) (= ($generated@@28 $generated@@115 $generated@@116 ($generated@@87 $generated@@34 $generated@@117) ($generated@@87 $generated@@34 $generated@@118)) ($generated@@15 ($generated@@37 $generated@@10 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@34 ($generated@@41 $generated@@39 $generated@@40) $generated@@115 ($generated@@87 $generated@@34 $generated@@118)) $generated@@42)))))
 :weight 3
 :pattern ( ($generated@@28 $generated@@115 $generated@@116 ($generated@@87 $generated@@34 $generated@@117) ($generated@@87 $generated@@34 $generated@@118)) ($generated@@29 $generated@@116))
))))
(assert  (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@119 $generated@@122 $generated@@123 $generated@@124 ($generated@@121 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@127 $generated@@128) $generated@@125)
 :weight 0
)) (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@119 $generated@@129 $generated@@130 $generated@@131 ($generated@@121 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@119 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@119 $generated@@138 $generated@@139 $generated@@140 ($generated@@121 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@119 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 Bool) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@13 ($generated@@119 $generated@@34 $generated@@39 $generated@@9 ($generated@@120 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))  (=> (and (or (not (= $generated@@151 $generated@@147)) (not true)) ($generated@@13 ($generated@@37 $generated@@9 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@34 ($generated@@41 $generated@@39 $generated@@40) $generated@@148 $generated@@151) $generated@@149)))) $generated@@150))
 :pattern ( ($generated@@119 $generated@@34 $generated@@39 $generated@@9 ($generated@@120 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))
)))
(assert (= ($generated@@25 $generated@@67) $generated@@4))
(assert (= ($generated@@153 $generated@@67) $generated@@6))
(assert (= ($generated@@25 $generated@@35) $generated@@5))
(assert (= ($generated@@153 $generated@@35) $generated@@6))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@94 $generated@@155 ($generated@@87 $generated@@155 $generated@@154)) ($generated@@87 $generated@@40 ($generated@@94 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@94 $generated@@155 ($generated@@87 $generated@@155 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! ($generated@@36 $generated@@10 $generated@@157 $generated $generated@@156)
 :pattern ( ($generated@@36 $generated@@10 $generated@@157 $generated $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! ($generated@@33 $generated@@10 $generated@@158 $generated)
 :pattern ( ($generated@@33 $generated@@10 $generated@@158 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@165  (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= $generated@@159 $generated@@32)) (not true))) (=> (or (not (= $generated@@159 $generated@@32)) (not true)) (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@36 $generated@@34 $generated@@159 $generated@@35 $generated@@160))))))
(let (($generated@@166 true))
(let (($generated@@167  (=> (= $generated@@161 ($generated@@120 $generated@@32 $generated@@162 $generated@@1 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@166) (=> (= (ControlFlow 0 5) 3) $generated@@165)))))
(let (($generated@@168  (=> (and (and ($generated@@29 $generated@@160) ($generated@@72 $generated@@160)) (and (or (not (= $generated@@163 $generated@@32)) (not true)) (and ($generated@@33 $generated@@34 $generated@@163 $generated@@35) ($generated@@36 $generated@@34 $generated@@163 $generated@@35 $generated@@164)))) (=> (and (and (and ($generated@@33 $generated@@34 $generated@@159 $generated@@35) ($generated@@36 $generated@@34 $generated@@159 $generated@@35 $generated@@164)) (= 1 $generated@@27)) (and (and (= $generated@@164 $generated@@160) (and ($generated@@31 $generated@@164 $generated@@162) ($generated@@29 $generated@@162))) (= (ControlFlow 0 6) 5))) $generated@@167))))
$generated@@168)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
