(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@39 (T@U) Int)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@48 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@92 (Int) Int)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@102 (T@U T@U) Bool)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@107 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@115 (T@U T@U T@U) Bool)
(declare-fun $generated@@139 (Int Int) Int)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@173 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@211 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@2) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@30 $generated@@2) $generated@@3))
(assert (forall (($generated@@36 T@U) ) (!  (=> (and (or (not (= $generated@@36 $generated@@32)) (not true)) (= ($generated@@33 $generated@@36) $generated@@34)) ($generated@@35 $generated@@14 ($generated@@18 ($generated@@31 $generated@@36)) $generated))
 :pattern ( ($generated@@31 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ) (!  (=> (and (or (not (= $generated@@38 $generated@@32)) (not true)) (= ($generated@@33 $generated@@38) $generated@@34)) ($generated@@35 $generated@@14 ($generated@@18 ($generated@@37 $generated@@38)) $generated))
 :pattern ( ($generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ) (!  (=> (and (or (not (= $generated@@40 $generated@@32)) (not true)) (= ($generated@@33 $generated@@40) $generated@@34)) ($generated@@35 $generated@@14 ($generated@@18 ($generated@@39 $generated@@40)) $generated))
 :pattern ( ($generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ) (!  (=> (and (or (not (= $generated@@42 $generated@@32)) (not true)) (= ($generated@@33 $generated@@42) $generated@@34)) ($generated@@35 $generated@@14 ($generated@@18 ($generated@@41 $generated@@42)) $generated))
 :pattern ( ($generated@@41 $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ) (!  (not ($generated@@43 $generated@@44 $generated@@45))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45))
)))
(assert (= ($generated@@12 $generated@@46) 3))
(assert (forall (($generated@@47 T@U) ) (! (= ($generated@@35 $generated@@46 $generated@@47 $generated@@34)  (or (= $generated@@47 $generated@@32) (= ($generated@@33 $generated@@47) $generated@@34)))
 :pattern ( ($generated@@35 $generated@@46 $generated@@47 $generated@@34))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@48 $generated@@46 $generated@@51 $generated@@49 $generated@@52) ($generated@@48 $generated@@46 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@48 $generated@@46 $generated@@51 $generated@@49 $generated@@52))
 :pattern ( ($generated@@48 $generated@@46 $generated@@51 $generated@@50 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@48 $generated@@46 $generated@@54 $generated@@53 $generated@@55) ($generated@@48 $generated@@46 $generated@@54 $generated@@34 $generated@@55))
 :pattern ( ($generated@@48 $generated@@46 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@48 $generated@@46 $generated@@54 $generated@@34 $generated@@55))
)))
(assert (= ($generated@@28 $generated@@56) 0))
(assert (= ($generated@@57 $generated@@6 $generated@@11) $generated@@56))
(assert ($generated@@58 $generated@@56))
(assert  (and (and (and (and (and (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@60 $generated@@67 $generated@@68 ($generated@@64 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@71) $generated@@69)
 :weight 0
)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@76 $generated@@77) (= ($generated@@60 $generated@@72 $generated@@73 ($generated@@64 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@77) ($generated@@60 $generated@@72 $generated@@73 $generated@@75 $generated@@77)))
 :weight 0
))) (= ($generated@@12 $generated@@61) 4)) (= ($generated@@12 $generated@@62) 5)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (= ($generated@@12 ($generated@@63 $generated@@78 $generated@@79)) 6))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@65 ($generated@@63 $generated@@80 $generated@@81)) $generated@@80)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@66 ($generated@@63 $generated@@82 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@63 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@48 $generated@@46 $generated@@84 $generated@@50 $generated@@85)  (or (= $generated@@84 $generated@@32) ($generated@@17 ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@85 $generated@@84) $generated@@2)))))
 :pattern ( ($generated@@48 $generated@@46 $generated@@84 $generated@@50 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@48 $generated@@46 $generated@@86 $generated@@34 $generated@@87)  (or (= $generated@@86 $generated@@32) ($generated@@17 ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@87 $generated@@86) $generated@@2)))))
 :pattern ( ($generated@@48 $generated@@46 $generated@@86 $generated@@34 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@88 $generated@@89 $generated@@90) (forall (($generated@@91 T@U) ) (!  (=> ($generated@@17 ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@89 $generated@@91) $generated@@2))) ($generated@@17 ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@90 $generated@@91) $generated@@2))))
 :pattern ( ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@90 $generated@@91) $generated@@2))
)))
 :pattern ( ($generated@@88 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@93 Int) ) (! (= ($generated@@92 $generated@@93) $generated@@93)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 $generated@@95) $generated@@95)
 :pattern ( ($generated@@94 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 ($generated@@59 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@59 $generated@@99 $generated@@98))
)))
(assert (= ($generated@@12 $generated@@100) 7))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@35 $generated@@100 $generated@@103 ($generated@@101 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> ($generated@@43 $generated@@103 $generated@@105) ($generated@@102 $generated@@105 $generated@@104))
 :pattern ( ($generated@@43 $generated@@103 $generated@@105))
)))
 :pattern ( ($generated@@35 $generated@@100 $generated@@103 ($generated@@101 $generated@@104)))
)))
(assert ($generated@@58 $generated@@2))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (and (and (and ($generated@@108 $generated@@110) ($generated@@108 $generated@@111)) (and (or (not (= $generated@@112 $generated@@32)) (not true)) ($generated@@35 $generated@@46 $generated@@112 $generated@@53))) (and ($generated@@106 $generated@@110) ($generated@@88 $generated@@110 $generated@@111))) (=> (forall (($generated@@113 T@U) ($generated@@114 T@U) )  (=> (and (or (not (= $generated@@113 $generated@@32)) (not true)) (or (or (= $generated@@113 $generated@@112) ($generated@@43 ($generated@@109 $generated@@112) ($generated@@97 $generated@@46 $generated@@113))) ($generated@@43 ($generated@@59 $generated@@100 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@110 $generated@@112) $generated@@56)) ($generated@@97 $generated@@46 $generated@@113)))) (= ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@110 $generated@@113) $generated@@114) ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@111 $generated@@113) $generated@@114)))) (= ($generated@@107 $generated@@110 $generated@@112) ($generated@@107 $generated@@111 $generated@@112))))
 :pattern ( ($generated@@106 $generated@@110) ($generated@@88 $generated@@110 $generated@@111) ($generated@@107 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@115 ($generated@@97 $generated@@119 $generated@@116) $generated@@117 $generated@@118) ($generated@@48 $generated@@119 $generated@@116 $generated@@117 $generated@@118))
 :pattern ( ($generated@@115 ($generated@@97 $generated@@119 $generated@@116) $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@88 $generated@@120 $generated@@121) (=> ($generated@@115 $generated@@122 $generated@@123 $generated@@120) ($generated@@115 $generated@@122 $generated@@123 $generated@@121)))
 :pattern ( ($generated@@88 $generated@@120 $generated@@121) ($generated@@115 $generated@@122 $generated@@123 $generated@@120))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@T) ) (!  (=> ($generated@@88 $generated@@124 $generated@@125) (=> ($generated@@48 $generated@@128 $generated@@126 $generated@@127 $generated@@124) ($generated@@48 $generated@@128 $generated@@126 $generated@@127 $generated@@125)))
 :pattern ( ($generated@@88 $generated@@124 $generated@@125) ($generated@@48 $generated@@128 $generated@@126 $generated@@127 $generated@@124))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@102 $generated@@129 $generated@@50) (and (= ($generated@@97 $generated@@46 ($generated@@59 $generated@@46 $generated@@129)) $generated@@129) ($generated@@35 $generated@@46 ($generated@@59 $generated@@46 $generated@@129) $generated@@50)))
 :pattern ( ($generated@@102 $generated@@129 $generated@@50))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@102 $generated@@130 $generated@@49) (and (= ($generated@@97 $generated@@46 ($generated@@59 $generated@@46 $generated@@130)) $generated@@130) ($generated@@35 $generated@@46 ($generated@@59 $generated@@46 $generated@@130) $generated@@49)))
 :pattern ( ($generated@@102 $generated@@130 $generated@@49))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@102 $generated@@131 $generated@@34) (and (= ($generated@@97 $generated@@46 ($generated@@59 $generated@@46 $generated@@131)) $generated@@131) ($generated@@35 $generated@@46 ($generated@@59 $generated@@46 $generated@@131) $generated@@34)))
 :pattern ( ($generated@@102 $generated@@131 $generated@@34))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@102 $generated@@132 $generated@@53) (and (= ($generated@@97 $generated@@46 ($generated@@59 $generated@@46 $generated@@132)) $generated@@132) ($generated@@35 $generated@@46 ($generated@@59 $generated@@46 $generated@@132) $generated@@53)))
 :pattern ( ($generated@@102 $generated@@132 $generated@@53))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@35 $generated@@46 $generated@@133 $generated@@49)  (and ($generated@@35 $generated@@46 $generated@@133 $generated@@50) (or (not (= $generated@@133 $generated@@32)) (not true))))
 :pattern ( ($generated@@35 $generated@@46 $generated@@133 $generated@@49))
 :pattern ( ($generated@@35 $generated@@46 $generated@@133 $generated@@50))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@35 $generated@@46 $generated@@134 $generated@@53)  (and ($generated@@35 $generated@@46 $generated@@134 $generated@@34) (or (not (= $generated@@134 $generated@@32)) (not true))))
 :pattern ( ($generated@@35 $generated@@46 $generated@@134 $generated@@53))
 :pattern ( ($generated@@35 $generated@@46 $generated@@134 $generated@@34))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and ($generated@@108 $generated@@135) (and (or (not (= $generated@@136 $generated@@32)) (not true)) (= ($generated@@33 $generated@@136) $generated@@34))) ($generated@@35 $generated@@100 ($generated@@59 $generated@@100 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@135 $generated@@136) $generated@@56)) ($generated@@101 $generated@@50)))
 :pattern ( ($generated@@59 $generated@@100 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@135 $generated@@136) $generated@@56)))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and ($generated@@108 $generated@@137) (and (or (not (= $generated@@138 $generated@@32)) (not true)) (= ($generated@@33 $generated@@138) $generated@@34))) ($generated@@17 ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@137 $generated@@138) $generated@@2)))) ($generated@@48 $generated@@100 ($generated@@59 $generated@@100 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@137 $generated@@138) $generated@@56)) ($generated@@101 $generated@@50) $generated@@137))
 :pattern ( ($generated@@59 $generated@@100 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@137 $generated@@138) $generated@@56)))
)))
(assert (forall (($generated@@140 Int) ($generated@@141 Int) ) (! (= ($generated@@139 $generated@@140 $generated@@141) (div $generated@@140 $generated@@141))
 :pattern ( ($generated@@139 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@142 $generated@@143 $generated@@144) (= $generated@@143 $generated@@144))
 :pattern ( ($generated@@142 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (or (not (= $generated@@145 $generated@@147)) (not true)) (=> (and ($generated@@88 $generated@@145 $generated@@146) ($generated@@88 $generated@@146 $generated@@147)) ($generated@@88 $generated@@145 $generated@@147)))
 :pattern ( ($generated@@88 $generated@@145 $generated@@146) ($generated@@88 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (and (= ($generated@@148 ($generated@@57 $generated@@149 $generated@@150)) $generated@@149) (= ($generated@@30 ($generated@@57 $generated@@149 $generated@@150)) $generated@@150))
 :pattern ( ($generated@@57 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> ($generated@@102 $generated@@151 $generated) (and (= ($generated@@97 $generated@@14 ($generated@@59 $generated@@14 $generated@@151)) $generated@@151) ($generated@@35 $generated@@14 ($generated@@59 $generated@@14 $generated@@151) $generated)))
 :pattern ( ($generated@@102 $generated@@151 $generated))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@102 ($generated@@97 $generated@@154 $generated@@152) $generated@@153) ($generated@@35 $generated@@154 $generated@@152 $generated@@153))
 :pattern ( ($generated@@102 ($generated@@97 $generated@@154 $generated@@152) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@48 $generated@@100 $generated@@155 ($generated@@101 $generated@@156) $generated@@157) (forall (($generated@@158 T@U) ) (!  (=> ($generated@@43 $generated@@155 $generated@@158) ($generated@@115 $generated@@158 $generated@@156 $generated@@157))
 :pattern ( ($generated@@43 $generated@@155 $generated@@158))
)))
 :pattern ( ($generated@@48 $generated@@100 $generated@@155 ($generated@@101 $generated@@156) $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! ($generated@@35 $generated@@46 $generated@@159 $generated@@50)
 :pattern ( ($generated@@35 $generated@@46 $generated@@159 $generated@@50))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@160 ($generated@@101 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@101 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@29 ($generated@@101 $generated@@162)) $generated@@1)
 :pattern ( ($generated@@101 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@59 $generated@@164 ($generated@@97 $generated@@164 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@97 $generated@@164 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and ($generated@@108 $generated@@165) (and (or (not (= $generated@@166 $generated@@32)) (not true)) (= ($generated@@33 $generated@@166) $generated@@34))) ($generated@@17 ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@165 $generated@@166) $generated@@2)))) ($generated@@48 $generated@@14 ($generated@@18 ($generated@@31 $generated@@166)) $generated $generated@@165))
 :pattern ( ($generated@@31 $generated@@166) ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@165 $generated@@166) $generated@@2)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and ($generated@@108 $generated@@167) (and (or (not (= $generated@@168 $generated@@32)) (not true)) (= ($generated@@33 $generated@@168) $generated@@34))) ($generated@@17 ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@167 $generated@@168) $generated@@2)))) ($generated@@48 $generated@@14 ($generated@@18 ($generated@@37 $generated@@168)) $generated $generated@@167))
 :pattern ( ($generated@@37 $generated@@168) ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@167 $generated@@168) $generated@@2)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and ($generated@@108 $generated@@169) (and (or (not (= $generated@@170 $generated@@32)) (not true)) (= ($generated@@33 $generated@@170) $generated@@34))) ($generated@@17 ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@169 $generated@@170) $generated@@2)))) ($generated@@48 $generated@@14 ($generated@@18 ($generated@@39 $generated@@170)) $generated $generated@@169))
 :pattern ( ($generated@@39 $generated@@170) ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@169 $generated@@170) $generated@@2)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and ($generated@@108 $generated@@171) (and (or (not (= $generated@@172 $generated@@32)) (not true)) (= ($generated@@33 $generated@@172) $generated@@34))) ($generated@@17 ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@171 $generated@@172) $generated@@2)))) ($generated@@48 $generated@@14 ($generated@@18 ($generated@@41 $generated@@172)) $generated $generated@@171))
 :pattern ( ($generated@@41 $generated@@172) ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@171 $generated@@172) $generated@@2)))
)))
(assert  (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@173 $generated@@176 $generated@@177 $generated@@178 ($generated@@175 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@181 $generated@@182) $generated@@179)
 :weight 0
)) (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@173 $generated@@183 $generated@@184 $generated@@185 ($generated@@175 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@173 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@173 $generated@@192 $generated@@193 $generated@@194 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@173 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 Bool) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@17 ($generated@@173 $generated@@46 $generated@@61 $generated@@13 ($generated@@174 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@205 $generated@@206))  (=> (and (or (not (= $generated@@205 $generated@@201)) (not true)) ($generated@@17 ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@202 $generated@@205) $generated@@203)))) $generated@@204))
 :pattern ( ($generated@@173 $generated@@46 $generated@@61 $generated@@13 ($generated@@174 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@102 $generated@@207 ($generated@@101 $generated@@208)) (and (= ($generated@@97 $generated@@100 ($generated@@59 $generated@@100 $generated@@207)) $generated@@207) ($generated@@35 $generated@@100 ($generated@@59 $generated@@100 $generated@@207) ($generated@@101 $generated@@208))))
 :pattern ( ($generated@@102 $generated@@207 ($generated@@101 $generated@@208)))
)))
(assert (= ($generated@@29 $generated@@50) $generated@@4))
(assert (= ($generated@@209 $generated@@50) $generated@@9))
(assert (= ($generated@@29 $generated@@49) $generated@@5))
(assert (= ($generated@@209 $generated@@49) $generated@@9))
(assert (= ($generated@@29 $generated@@34) $generated@@7))
(assert (= ($generated@@209 $generated@@34) $generated@@10))
(assert (= ($generated@@29 $generated@@53) $generated@@8))
(assert (= ($generated@@209 $generated@@53) $generated@@10))
(assert (forall (($generated@@210 T@U) ) (!  (=> (and (or (not (= $generated@@210 $generated@@32)) (not true)) (= ($generated@@33 $generated@@210) $generated@@34)) ($generated@@35 $generated@@100 ($generated@@109 $generated@@210) ($generated@@101 $generated@@50)))
 :pattern ( ($generated@@109 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (!  (=> (and (or (not (= $generated@@212 $generated@@32)) (not true)) (= ($generated@@33 $generated@@212) $generated@@34)) ($generated@@35 $generated@@100 ($generated@@211 $generated@@212) ($generated@@101 $generated@@50)))
 :pattern ( ($generated@@211 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@142 $generated@@213 $generated@@214) (forall (($generated@@215 T@U) ) (! (= ($generated@@43 $generated@@213 $generated@@215) ($generated@@43 $generated@@214 $generated@@215))
 :pattern ( ($generated@@43 $generated@@213 $generated@@215))
 :pattern ( ($generated@@43 $generated@@214 $generated@@215))
)))
 :pattern ( ($generated@@142 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (and ($generated@@108 $generated@@216) (and (or (not (= $generated@@217 $generated@@32)) (not true)) (= ($generated@@33 $generated@@217) $generated@@34))) ($generated@@17 ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@216 $generated@@217) $generated@@2)))) ($generated@@48 $generated@@100 ($generated@@109 $generated@@217) ($generated@@101 $generated@@50) $generated@@216))
 :pattern ( ($generated@@109 $generated@@217) ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@216 $generated@@217) $generated@@2)))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and ($generated@@108 $generated@@218) (and (or (not (= $generated@@219 $generated@@32)) (not true)) (= ($generated@@33 $generated@@219) $generated@@34))) ($generated@@17 ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@218 $generated@@219) $generated@@2)))) ($generated@@48 $generated@@100 ($generated@@211 $generated@@219) ($generated@@101 $generated@@50) $generated@@218))
 :pattern ( ($generated@@211 $generated@@219) ($generated@@59 $generated@@13 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@46 ($generated@@63 $generated@@61 $generated@@62) $generated@@218 $generated@@219) $generated@@2)))
)))
(assert (forall (($generated@@220 Int) ) (! (= ($generated@@97 $generated@@14 ($generated@@18 ($generated@@92 $generated@@220))) ($generated@@94 $generated@@62 ($generated@@97 $generated@@14 ($generated@@18 $generated@@220))))
 :pattern ( ($generated@@97 $generated@@14 ($generated@@18 ($generated@@92 $generated@@220))))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@T) ) (! (= ($generated@@97 $generated@@222 ($generated@@94 $generated@@222 $generated@@221)) ($generated@@94 $generated@@62 ($generated@@97 $generated@@222 $generated@@221)))
 :pattern ( ($generated@@97 $generated@@222 ($generated@@94 $generated@@222 $generated@@221)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! ($generated@@48 $generated@@14 $generated@@224 $generated $generated@@223)
 :pattern ( ($generated@@48 $generated@@14 $generated@@224 $generated $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ) (! ($generated@@35 $generated@@14 $generated@@225 $generated)
 :pattern ( ($generated@@35 $generated@@14 $generated@@225 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@231  (=> (= $generated@@226 ($generated@@174 $generated@@32 $generated@@227 $generated@@2 false)) (=> (and (= $generated@@228 ($generated@@92 8)) (= (ControlFlow 0 2) (- 0 1))) (or (not (= $generated@@229 0)) (not true))))))
(let (($generated@@232  (=> (and (and ($generated@@108 $generated@@227) ($generated@@106 $generated@@227)) (and (= 1 $generated@@230) (= (ControlFlow 0 3) 2))) $generated@@231)))
$generated@@232)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
