(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U T@U) Bool)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (Int) T@U)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T T@U T@U) Bool)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@58 (Int) Int)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@85 (Int) T@U)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@132 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@136 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@137 (T@T T@T) T@T)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@190 (Int Int) Int)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@200 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@28 $generated@@29) (=> ($generated@@23 $generated@@26 $generated@@28 $generated@@27) ($generated@@23 $generated@@26 $generated@@29 $generated@@27)))
 :pattern ( ($generated@@23 $generated@@26 $generated@@28 $generated@@27) ($generated@@24 $generated@@28 $generated@@30) ($generated@@24 $generated@@29 $generated@@30))
))))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@32 $generated@@33)) ($generated@@25 $generated@@31 $generated@@33))
 :pattern ( ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@32 $generated@@33))
 :pattern ( ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@31 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! ($generated@@34 $generated@@8 $generated@@36 $generated@@35 $generated@@37)
 :pattern ( ($generated@@34 $generated@@8 $generated@@36 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (and ($generated@@39 $generated@@41) ($generated@@39 $generated@@42)) (= ($generated@@38 $generated@@41 $generated@@42) (= ($generated@@40 $generated@@41) ($generated@@40 $generated@@42))))
 :pattern ( ($generated@@38 $generated@@41 $generated@@42) ($generated@@39 $generated@@41))
 :pattern ( ($generated@@38 $generated@@41 $generated@@42) ($generated@@39 $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 Int) ($generated@@48 Int) ) (!  (=> (and (and (<= 0 $generated@@47) (<= 0 $generated@@48)) (<= (+ $generated@@47 $generated@@48) ($generated@@45 $generated@@46))) (= ($generated@@43 ($generated@@43 $generated@@46 ($generated@@44 $generated@@47)) ($generated@@44 $generated@@48)) ($generated@@43 $generated@@46 ($generated@@44 (+ $generated@@47 $generated@@48)))))
 :pattern ( ($generated@@43 ($generated@@43 $generated@@46 ($generated@@44 $generated@@47)) ($generated@@44 $generated@@48)))
)))
(assert (= ($generated@@49 $generated@@50) $generated@@3))
(assert (= ($generated@@6 $generated@@52) 3))
(assert ($generated@@51 $generated@@52 $generated@@50 $generated@@53))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@38 $generated@@54 $generated@@55) (= $generated@@54 $generated@@55))
 :pattern ( ($generated@@38 $generated@@54 $generated@@55))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@57 $generated@@63 $generated@@64) (and (< 3 $generated@@22) ($generated@@51 $generated@@52 $generated@@64 $generated@@53))) (and (and (=> (< 0 ($generated@@45 $generated@@63)) (=> (not (and ($generated@@39 $generated@@64) (= ($generated@@40 $generated@@64) ($generated@@58 0)))) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@51 $generated@@52 $generated@@65 $generated@@53) (and (and (and ($generated@@60 $generated@@64) ($generated@@60 ($generated@@59 ($generated@@59 $generated@@65)))) (and ($generated@@61 $generated@@65) ($generated@@61 ($generated@@59 $generated@@65)))) (=> ($generated@@38 $generated@@64 ($generated@@59 ($generated@@59 $generated@@65))) ($generated@@57 ($generated@@43 $generated@@63 ($generated@@44 1)) $generated@@65))))
 :pattern ( ($generated@@23 $generated@@62 ($generated@@43 $generated@@63 ($generated@@44 1)) $generated@@65))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@65)))
)))) (=> (=> (< 0 ($generated@@45 $generated@@63)) (or (and ($generated@@39 $generated@@64) (= ($generated@@40 $generated@@64) ($generated@@58 0))) (exists (($generated@@66 T@U) ) (!  (and ($generated@@51 $generated@@52 $generated@@66 $generated@@53) (and ($generated@@38 $generated@@64 ($generated@@59 ($generated@@59 $generated@@66))) ($generated@@23 $generated@@62 ($generated@@43 $generated@@63 ($generated@@44 1)) $generated@@66)))
 :pattern ( ($generated@@23 $generated@@62 ($generated@@43 $generated@@63 ($generated@@44 1)) $generated@@66))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@66)))
)))) (=> (= ($generated@@58 0) ($generated@@45 $generated@@63)) (forall (($generated@@67 T@U) ) (!  (=> ($generated@@24 $generated@@67 $generated@@63) ($generated@@57 $generated@@67 $generated@@64))
 :pattern ( ($generated@@23 $generated@@62 $generated@@67 $generated@@64))
))))) (= ($generated@@23 ($generated@@56 $generated@@62) $generated@@63 $generated@@64)  (and (=> (< 0 ($generated@@45 $generated@@63)) (or (and ($generated@@39 $generated@@64) (= ($generated@@40 $generated@@64) ($generated@@58 0))) (exists (($generated@@68 T@U) ) (!  (and ($generated@@51 $generated@@52 $generated@@68 $generated@@53) (and ($generated@@38 $generated@@64 ($generated@@59 ($generated@@59 $generated@@68))) ($generated@@23 $generated@@62 ($generated@@43 $generated@@63 ($generated@@44 1)) $generated@@68)))
 :pattern ( ($generated@@23 $generated@@62 ($generated@@43 $generated@@63 ($generated@@44 1)) $generated@@68))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@68)))
)))) (=> (= ($generated@@58 0) ($generated@@45 $generated@@63)) (exists (($generated@@69 T@U) ) (!  (and ($generated@@24 $generated@@69 $generated@@63) ($generated@@23 $generated@@62 $generated@@69 $generated@@64))
 :pattern ( ($generated@@23 $generated@@62 $generated@@69 $generated@@64))
)))))))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@62) $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@70 Int) ) (! (= ($generated@@58 $generated@@70) $generated@@70)
 :pattern ( ($generated@@58 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@39 $generated@@74) (= ($generated@@49 $generated@@74) $generated@@2))
 :pattern ( ($generated@@39 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@75 $generated@@76) (= ($generated@@49 $generated@@76) $generated@@3))
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 ($generated@@77 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@80 $generated@@79))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and ($generated@@51 $generated@@52 $generated@@82 $generated@@53) (= $generated@@83 ($generated@@44 0))) (not ($generated@@23 $generated@@81 $generated@@83 $generated@@82)))
 :pattern ( ($generated@@23 $generated@@81 $generated@@83 $generated@@82))
))))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@75 $generated@@84) (= $generated@@84 $generated@@50))
 :pattern ( ($generated@@75 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@39 $generated@@86) (exists (($generated@@87 Int) ) (= $generated@@86 ($generated@@85 $generated@@87))))
 :pattern ( ($generated@@39 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@51 $generated@@8 $generated@@88 $generated@@35) (<= ($generated@@58 0) ($generated@@13 $generated@@88)))
 :pattern ( ($generated@@51 $generated@@8 $generated@@88 $generated@@35))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@23 ($generated@@56 $generated@@89) $generated@@90 $generated@@91) ($generated@@23 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@89) $generated@@90 $generated@@91))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@92 T@U) ) (!  (=> (or ($generated@@61 $generated@@92) (and (< 1 $generated@@22) ($generated@@51 $generated@@52 $generated@@92 $generated@@53))) (= ($generated@@59 $generated@@92) (ite ($generated@@39 $generated@@92) (let (($generated@@93 ($generated@@40 $generated@@92)))
($generated@@85 (+ $generated@@93 1))) $generated@@50)))
 :pattern ( ($generated@@59 $generated@@92))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and ($generated@@94 $generated@@96) (<= ($generated@@45 $generated@@96) ($generated@@45 $generated@@95))) (and (= ($generated@@94 ($generated@@43 $generated@@95 $generated@@96)) ($generated@@94 $generated@@95)) (= ($generated@@45 ($generated@@43 $generated@@95 $generated@@96)) (- ($generated@@45 $generated@@95) ($generated@@45 $generated@@96)))))
 :pattern ( ($generated@@43 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 Int) ) (!  (=> (<= 0 $generated@@97) (and ($generated@@94 ($generated@@44 $generated@@97)) (= ($generated@@45 ($generated@@44 $generated@@97)) $generated@@97)))
 :pattern ( ($generated@@44 $generated@@97))
)))
(assert (forall (($generated@@98 Int) ) (! (= ($generated@@51 $generated@@52 ($generated@@85 $generated@@98) $generated@@53) ($generated@@51 $generated@@8 ($generated@@12 $generated@@98) $generated@@35))
 :pattern ( ($generated@@51 $generated@@52 ($generated@@85 $generated@@98) $generated@@53))
)))
(assert (= ($generated@@6 $generated@@99) 4))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@57 ($generated@@71 $generated@@99 $generated@@101) $generated@@102) (and (< 3 $generated@@22) ($generated@@51 $generated@@52 $generated@@102 $generated@@53))) (and (and (=> (< 0 ($generated@@45 $generated@@101)) (=> (not (and ($generated@@39 $generated@@102) (= ($generated@@40 $generated@@102) ($generated@@58 0)))) (forall (($generated@@103 T@U) ) (!  (=> ($generated@@51 $generated@@52 $generated@@103 $generated@@53) (and (and (and ($generated@@60 $generated@@102) ($generated@@60 ($generated@@59 ($generated@@59 $generated@@103)))) (and ($generated@@61 $generated@@103) ($generated@@61 ($generated@@59 $generated@@103)))) (=> ($generated@@38 $generated@@102 ($generated@@59 ($generated@@59 $generated@@103))) ($generated@@57 ($generated@@43 $generated@@101 ($generated@@44 1)) $generated@@103))))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@100) ($generated@@43 $generated@@101 ($generated@@44 1)) $generated@@103))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@103)))
)))) (=> (=> (< 0 ($generated@@45 $generated@@101)) (or (and ($generated@@39 $generated@@102) (= ($generated@@40 $generated@@102) ($generated@@58 0))) (exists (($generated@@104 T@U) ) (!  (and ($generated@@51 $generated@@52 $generated@@104 $generated@@53) (and ($generated@@38 $generated@@102 ($generated@@59 ($generated@@59 $generated@@104))) ($generated@@23 ($generated@@56 $generated@@100) ($generated@@43 $generated@@101 ($generated@@44 1)) $generated@@104)))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@100) ($generated@@43 $generated@@101 ($generated@@44 1)) $generated@@104))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@104)))
)))) (=> (= ($generated@@58 0) ($generated@@45 $generated@@101)) (forall (($generated@@105 T@U) ) (!  (=> ($generated@@24 $generated@@105 $generated@@101) ($generated@@57 $generated@@105 $generated@@102))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@100) $generated@@105 $generated@@102))
))))) (= ($generated@@23 ($generated@@56 $generated@@100) ($generated@@71 $generated@@99 $generated@@101) $generated@@102)  (and (=> (< 0 ($generated@@45 $generated@@101)) (or (and ($generated@@39 $generated@@102) (= ($generated@@40 $generated@@102) ($generated@@58 0))) (exists (($generated@@106 T@U) ) (!  (and ($generated@@51 $generated@@52 $generated@@106 $generated@@53) (and ($generated@@38 $generated@@102 ($generated@@59 ($generated@@59 $generated@@106))) ($generated@@23 ($generated@@56 $generated@@100) ($generated@@43 $generated@@101 ($generated@@44 1)) $generated@@106)))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@100) ($generated@@43 $generated@@101 ($generated@@44 1)) $generated@@106))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@106)))
)))) (=> (= ($generated@@58 0) ($generated@@45 $generated@@101)) (exists (($generated@@107 T@U) ) (!  (and ($generated@@24 $generated@@107 $generated@@101) ($generated@@23 ($generated@@56 $generated@@100) $generated@@107 $generated@@102))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@100) $generated@@107 $generated@@102))
)))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@56 $generated@@100) ($generated@@71 $generated@@99 $generated@@101) $generated@@102))
))))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@60 $generated@@108) (or ($generated@@39 $generated@@108) ($generated@@75 $generated@@108)))
 :pattern ( ($generated@@60 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (or ($generated@@25 $generated@@109 $generated@@110) (= $generated@@109 $generated@@110)) ($generated@@25 $generated@@110 $generated@@109))
 :pattern ( ($generated@@25 $generated@@109 $generated@@110) ($generated@@25 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@24 $generated@@111 $generated@@112) ($generated@@25 $generated@@111 $generated@@112))
 :pattern ( ($generated@@24 $generated@@111 $generated@@112))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@113 T@U) ) (!  (=> (or ($generated@@61 $generated@@113) (and (< 1 $generated@@22) ($generated@@51 $generated@@52 $generated@@113 $generated@@53))) ($generated@@51 $generated@@52 ($generated@@59 $generated@@113) $generated@@53))
 :pattern ( ($generated@@59 $generated@@113))
))))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@51 $generated@@52 $generated@@114 $generated@@53) (or ($generated@@39 $generated@@114) ($generated@@75 $generated@@114)))
 :pattern ( ($generated@@75 $generated@@114) ($generated@@51 $generated@@52 $generated@@114 $generated@@53))
 :pattern ( ($generated@@39 $generated@@114) ($generated@@51 $generated@@52 $generated@@114 $generated@@53))
)))
(assert (forall (($generated@@115 T@U) ) (! (<= 0 ($generated@@45 $generated@@115))
 :pattern ( ($generated@@45 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (and ($generated@@75 $generated@@116) ($generated@@75 $generated@@117)) ($generated@@38 $generated@@116 $generated@@117))
 :pattern ( ($generated@@38 $generated@@116 $generated@@117) ($generated@@75 $generated@@116))
 :pattern ( ($generated@@38 $generated@@116 $generated@@117) ($generated@@75 $generated@@117))
)))
(assert (forall (($generated@@118 Int) ) (! (= ($generated@@49 ($generated@@85 $generated@@118)) $generated@@2)
 :pattern ( ($generated@@85 $generated@@118))
)))
(assert (forall (($generated@@119 Int) ) (! (= ($generated@@40 ($generated@@85 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@85 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@77 $generated@@121 ($generated@@78 $generated@@121 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@78 $generated@@121 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@122 $generated@@123) (or (not (= $generated@@122 $generated@@123)) (not true))) (=> (and ($generated@@94 $generated@@122) (not ($generated@@94 $generated@@123))) ($generated@@25 $generated@@122 $generated@@123))) (=> (and ($generated@@94 $generated@@122) ($generated@@94 $generated@@123)) (= ($generated@@25 $generated@@122 $generated@@123) (< ($generated@@45 $generated@@122) ($generated@@45 $generated@@123))))) (=> (and ($generated@@25 $generated@@122 $generated@@123) ($generated@@94 $generated@@123)) ($generated@@94 $generated@@122)))
 :pattern ( ($generated@@25 $generated@@122 $generated@@123))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (or ($generated@@57 ($generated@@71 $generated@@99 $generated@@125) ($generated@@71 $generated@@52 $generated@@126)) (and (< 3 $generated@@22) ($generated@@51 $generated@@52 $generated@@126 $generated@@53))) (and (and (=> (< 0 ($generated@@45 $generated@@125)) (=> (not (and ($generated@@39 ($generated@@71 $generated@@52 $generated@@126)) (= ($generated@@58 ($generated@@40 ($generated@@71 $generated@@52 $generated@@126))) ($generated@@58 0)))) (forall (($generated@@127 T@U) ) (!  (=> ($generated@@51 $generated@@52 $generated@@127 $generated@@53) (and (and (and ($generated@@60 ($generated@@71 $generated@@52 $generated@@126)) ($generated@@60 ($generated@@59 ($generated@@59 $generated@@127)))) (and ($generated@@61 $generated@@127) ($generated@@61 ($generated@@59 $generated@@127)))) (=> ($generated@@38 $generated@@126 ($generated@@59 ($generated@@59 $generated@@127))) ($generated@@57 ($generated@@43 $generated@@125 ($generated@@44 1)) $generated@@127))))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@124) ($generated@@43 $generated@@125 ($generated@@44 1)) $generated@@127))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@127)))
)))) (=> (=> (< 0 ($generated@@45 $generated@@125)) (or (and ($generated@@39 ($generated@@71 $generated@@52 $generated@@126)) (= ($generated@@58 ($generated@@40 ($generated@@71 $generated@@52 $generated@@126))) ($generated@@58 0))) (exists (($generated@@128 T@U) ) (!  (and ($generated@@51 $generated@@52 $generated@@128 $generated@@53) (and ($generated@@38 $generated@@126 ($generated@@59 ($generated@@59 $generated@@128))) ($generated@@23 ($generated@@56 $generated@@124) ($generated@@43 $generated@@125 ($generated@@44 1)) $generated@@128)))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@124) ($generated@@43 $generated@@125 ($generated@@44 1)) $generated@@128))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@128)))
)))) (=> (= ($generated@@58 0) ($generated@@45 $generated@@125)) (forall (($generated@@129 T@U) ) (!  (=> ($generated@@24 $generated@@129 $generated@@125) ($generated@@57 $generated@@129 $generated@@126))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@124) $generated@@129 $generated@@126))
))))) (= ($generated@@23 ($generated@@56 $generated@@124) ($generated@@71 $generated@@99 $generated@@125) ($generated@@71 $generated@@52 $generated@@126))  (and (=> (< 0 ($generated@@45 $generated@@125)) (or (and ($generated@@39 ($generated@@71 $generated@@52 $generated@@126)) (= ($generated@@58 ($generated@@40 ($generated@@71 $generated@@52 $generated@@126))) ($generated@@58 0))) (exists (($generated@@130 T@U) ) (!  (and ($generated@@51 $generated@@52 $generated@@130 $generated@@53) (and ($generated@@38 $generated@@126 ($generated@@59 ($generated@@59 $generated@@130))) ($generated@@23 ($generated@@56 $generated@@124) ($generated@@43 $generated@@125 ($generated@@44 1)) $generated@@130)))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@124) ($generated@@43 $generated@@125 ($generated@@44 1)) $generated@@130))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@130)))
)))) (=> (= ($generated@@58 0) ($generated@@45 $generated@@125)) (exists (($generated@@131 T@U) ) (!  (and ($generated@@24 $generated@@131 $generated@@125) ($generated@@23 ($generated@@56 $generated@@124) $generated@@131 $generated@@126))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@124) $generated@@131 $generated@@126))
)))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@56 $generated@@124) ($generated@@71 $generated@@99 $generated@@125) ($generated@@71 $generated@@52 $generated@@126)))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@132 $generated@@142 $generated@@143 $generated@@144 ($generated@@138 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@147 $generated@@148) $generated@@145)
 :weight 0
)) (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@132 $generated@@149 $generated@@150 $generated@@151 ($generated@@138 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@132 $generated@@158 $generated@@159 $generated@@160 ($generated@@138 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@132 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)))) (= ($generated@@6 $generated@@133) 5)) (= ($generated@@6 $generated@@134) 6)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@136 $generated@@167 $generated@@168 ($generated@@139 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@169) $generated@@171) $generated@@169)
 :weight 0
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@176 $generated@@177) (= ($generated@@136 $generated@@172 $generated@@173 ($generated@@139 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@174) $generated@@177) ($generated@@136 $generated@@172 $generated@@173 $generated@@175 $generated@@177)))
 :weight 0
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@6 ($generated@@137 $generated@@178 $generated@@179)) 7))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@140 ($generated@@137 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@137 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@141 ($generated@@137 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@137 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@11 ($generated@@132 $generated@@133 $generated@@134 $generated@@7 ($generated@@135 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))  (=> (and (or (not (= $generated@@188 $generated@@184)) (not true)) ($generated@@11 ($generated@@77 $generated@@7 ($generated@@136 $generated@@134 $generated@@99 ($generated@@136 $generated@@133 ($generated@@137 $generated@@134 $generated@@99) $generated@@185 $generated@@188) $generated@@186)))) $generated@@187))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134 $generated@@7 ($generated@@135 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@191 Int) ($generated@@192 Int) ) (! (= ($generated@@190 $generated@@191 $generated@@192) (mod $generated@@191 $generated@@192))
 :pattern ( ($generated@@190 $generated@@191 $generated@@192))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@193 T@U) ) (!  (=> (or ($generated@@61 ($generated@@71 $generated@@52 $generated@@193)) (and (< 1 $generated@@22) ($generated@@51 $generated@@52 $generated@@193 $generated@@53))) (= ($generated@@59 ($generated@@71 $generated@@52 $generated@@193)) (ite ($generated@@39 ($generated@@71 $generated@@52 $generated@@193)) (let (($generated@@194 ($generated@@58 ($generated@@40 ($generated@@71 $generated@@52 $generated@@193)))))
($generated@@71 $generated@@52 ($generated@@85 ($generated@@58 (+ $generated@@194 1))))) $generated@@50)))
 :weight 3
 :pattern ( ($generated@@59 ($generated@@71 $generated@@52 $generated@@193)))
))))
(assert (forall (($generated@@195 T@U) ) (!  (=> ($generated@@94 $generated@@195) (= $generated@@195 ($generated@@44 ($generated@@45 $generated@@195))))
 :pattern ( ($generated@@45 $generated@@195))
 :pattern ( ($generated@@94 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and ($generated@@196 $generated@@198) ($generated@@51 $generated@@52 $generated@@197 $generated@@53)) ($generated@@34 $generated@@52 $generated@@197 $generated@@53 $generated@@198))
 :pattern ( ($generated@@34 $generated@@52 $generated@@197 $generated@@53 $generated@@198))
)))
(assert (= ($generated@@199 $generated@@35) $generated@@0))
(assert (= ($generated@@200 $generated@@35) $generated@@4))
(assert (= ($generated@@199 $generated@@53) $generated@@1))
(assert (= ($generated@@200 $generated@@53) $generated@@5))
(assert (= $generated@@50 ($generated@@71 $generated@@52 $generated@@50)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and ($generated@@94 $generated@@202) (<= ($generated@@45 $generated@@202) ($generated@@45 $generated@@201))) (or (and (= $generated@@202 ($generated@@44 0)) (= ($generated@@43 $generated@@201 $generated@@202) $generated@@201)) (and (or (not (= $generated@@202 ($generated@@44 0))) (not true)) ($generated@@25 ($generated@@43 $generated@@201 $generated@@202) $generated@@201))))
 :pattern ( ($generated@@43 $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and ($generated@@196 $generated@@204) (and ($generated@@39 $generated@@203) ($generated@@34 $generated@@52 $generated@@203 $generated@@53 $generated@@204))) ($generated@@34 $generated@@8 ($generated@@12 ($generated@@40 $generated@@203)) $generated@@35 $generated@@204))
 :pattern ( ($generated@@34 $generated@@8 ($generated@@12 ($generated@@40 $generated@@203)) $generated@@35 $generated@@204))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@78 $generated@@8 ($generated@@12 ($generated@@58 $generated@@205))) ($generated@@71 $generated@@99 ($generated@@78 $generated@@8 ($generated@@12 $generated@@205))))
 :pattern ( ($generated@@78 $generated@@8 ($generated@@12 ($generated@@58 $generated@@205))))
)))
(assert (forall (($generated@@206 Int) ) (! (= ($generated@@85 ($generated@@58 $generated@@206)) ($generated@@71 $generated@@52 ($generated@@85 $generated@@206)))
 :pattern ( ($generated@@85 ($generated@@58 $generated@@206)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@T) ) (! (= ($generated@@78 $generated@@208 ($generated@@71 $generated@@208 $generated@@207)) ($generated@@71 $generated@@99 ($generated@@78 $generated@@208 $generated@@207)))
 :pattern ( ($generated@@78 $generated@@208 ($generated@@71 $generated@@208 $generated@@207)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 (T@U) Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@219  (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@39 $generated@@209)) (=> ($generated@@39 $generated@@209) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@190 ($generated@@40 $generated@@209) ($generated@@58 2)) ($generated@@58 0)))))))
(let (($generated@@220  (=> (<= ($generated@@45 $generated@@210) 0) (=> (and (and (and ($generated@@196 $generated@@211) ($generated@@212 $generated@@211)) (= $generated@@213 $generated@@211)) (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and ($generated@@51 $generated@@52 $generated@@222 $generated@@53) (and ($generated@@25 $generated@@221 $generated@@210) ($generated@@23 ($generated@@56 $generated@@214) $generated@@221 $generated@@222))) (and ($generated@@39 $generated@@222) (= ($generated@@190 ($generated@@40 $generated@@222) ($generated@@58 2)) ($generated@@58 0))))
 :pattern ( ($generated@@40 $generated@@222) ($generated@@25 $generated@@221 $generated@@210))
 :pattern ( ($generated@@39 $generated@@222) ($generated@@25 $generated@@221 $generated@@210))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@214) $generated@@221 $generated@@222))
)) (= (ControlFlow 0 5) 2))) $generated@@219))))
(let (($generated@@223  (=> (and (< 0 ($generated@@45 $generated@@210)) (= (ControlFlow 0 4) 2)) $generated@@219)))
(let (($generated@@224  (=> (and (= $generated@@215 ($generated@@135 $generated@@216 $generated@@217 $generated false)) ($generated@@60 $generated@@209)) (=> (and (and ($generated@@196 $generated@@213) ($generated@@212 $generated@@213)) (and (= $generated@@217 $generated@@213) (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and ($generated@@51 $generated@@52 $generated@@226 $generated@@53) ($generated@@23 ($generated@@56 $generated@@214) $generated@@225 $generated@@226)) (or ($generated@@25 $generated@@225 $generated@@210) (and (= $generated@@225 $generated@@210) (< ($generated@@218 $generated@@226) ($generated@@218 $generated@@209))))) (and ($generated@@39 $generated@@226) (= ($generated@@190 ($generated@@40 $generated@@226) ($generated@@58 2)) ($generated@@58 0))))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@214) $generated@@225 $generated@@226))
)))) (and (=> (= (ControlFlow 0 6) 4) $generated@@223) (=> (= (ControlFlow 0 6) 5) $generated@@220))))))
(let (($generated@@227  (=> (and ($generated@@196 $generated@@217) ($generated@@212 $generated@@217)) (=> (and (and (and (and ($generated@@51 $generated@@52 $generated@@209 $generated@@53) ($generated@@34 $generated@@52 $generated@@209 $generated@@53 $generated@@217)) ($generated@@60 $generated@@209)) (= 4 $generated@@22)) (and (and ($generated@@57 $generated@@210 $generated@@209) (and ($generated@@23 ($generated@@56 $generated@@214) $generated@@210 $generated@@209) (and (=> (< 0 ($generated@@45 $generated@@210)) (or (and ($generated@@39 $generated@@209) (= ($generated@@40 $generated@@209) ($generated@@58 0))) (exists (($generated@@228 T@U) ) (!  (and ($generated@@51 $generated@@52 $generated@@228 $generated@@53) (and ($generated@@38 $generated@@209 ($generated@@59 ($generated@@59 $generated@@228))) ($generated@@23 ($generated@@56 $generated@@214) ($generated@@43 $generated@@210 ($generated@@44 1)) $generated@@228)))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@214) ($generated@@43 $generated@@210 ($generated@@44 1)) $generated@@228))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@228)))
)))) (=> (= ($generated@@58 0) ($generated@@45 $generated@@210)) (exists (($generated@@229 T@U) ) (!  (and ($generated@@24 $generated@@229 $generated@@210) ($generated@@23 ($generated@@56 $generated@@214) $generated@@229 $generated@@209))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@214) $generated@@229 $generated@@209))
)))))) (= (ControlFlow 0 7) 6))) $generated@@224))))
$generated@@227))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
