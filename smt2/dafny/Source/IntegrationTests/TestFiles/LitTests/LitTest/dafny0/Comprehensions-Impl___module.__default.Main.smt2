(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U Bool) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@T T@U T@U) Bool)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@77 (Int) Int)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U Int Int) T@U)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@89 (Int Int) Int)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@99 (T@T T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U) Bool)
(declare-fun $generated@@115 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@130 (T@U Int) T@U)
(declare-fun $generated@@134 (T@U Int T@U) T@U)
(declare-fun $generated@@135 (Int Int) Int)
(declare-fun $generated@@141 (Int Int Int Int) T@U)
(declare-fun $generated@@149 (T@U Int Int Int) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@191 (Bool Int Int) T@U)
(declare-fun $generated@@197 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@198 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@199 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@243 (T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert  (and (and (forall (($generated@@30 T@T) ($generated@@31 T@T) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@25 $generated@@30 $generated@@31 ($generated@@29 $generated@@30 $generated@@31 $generated@@33 $generated@@34 $generated@@32) $generated@@34) $generated@@32)
 :weight 0
)) (forall (($generated@@35 T@T) ($generated@@36 T@T) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (or (= $generated@@39 $generated@@40) (= ($generated@@25 $generated@@35 $generated@@36 ($generated@@29 $generated@@35 $generated@@36 $generated@@38 $generated@@39 $generated@@37) $generated@@40) ($generated@@25 $generated@@35 $generated@@36 $generated@@38 $generated@@40)))
 :weight 0
))) (= ($generated@@8 $generated@@26) 3)))
(assert (forall (($generated@@41 T@U) ($generated@@42 Bool) ($generated@@43 T@U) ) (! (= ($generated@@13 ($generated@@25 $generated@@26 $generated@@9 ($generated@@27 $generated@@41 $generated@@42) $generated@@43))  (and ($generated@@28 $generated@@43 $generated@@41) $generated@@42))
 :pattern ( ($generated@@25 $generated@@26 $generated@@9 ($generated@@27 $generated@@41 $generated@@42) $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@44 ($generated@@45 $generated@@46 $generated@@47) $generated@@48)  (or (= $generated@@47 $generated@@48) ($generated@@44 $generated@@46 $generated@@48)))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@46 $generated@@47) $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (!  (not ($generated@@44 $generated@@49 $generated@@50))
 :pattern ( ($generated@@44 $generated@@49 $generated@@50))
)))
(assert (= ($generated@@51 $generated@@49) 0))
(assert (= ($generated@@52 $generated@@53) $generated@@5))
(assert (= ($generated@@52 $generated@@54) $generated@@6))
(assert (= ($generated@@8 $generated@@56) 4))
(assert ($generated@@55 $generated@@56 $generated@@53 $generated@@57))
(assert ($generated@@55 $generated@@56 $generated@@54 $generated@@57))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@58 $generated@@59 $generated@@60) (= $generated@@59 $generated@@60))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60))
)))
(assert  (and (and (and (and (= ($generated@@8 $generated@@62) 5) (= ($generated@@8 $generated@@63) 6)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (= ($generated@@8 ($generated@@64 $generated@@68 $generated@@69)) 7))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@66 ($generated@@64 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@64 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@72 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@64 $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@61 $generated@@74 $generated@@75) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@13 ($generated@@65 $generated@@9 ($generated@@25 $generated@@62 $generated@@26 ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@74 $generated@@76) $generated@@3))) ($generated@@13 ($generated@@65 $generated@@9 ($generated@@25 $generated@@62 $generated@@26 ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@75 $generated@@76) $generated@@3))))
 :pattern ( ($generated@@25 $generated@@62 $generated@@26 ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@75 $generated@@76) $generated@@3))
)))
 :pattern ( ($generated@@61 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@77 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@81 $generated@@80))
)))
(assert (= ($generated@@8 $generated@@82) 8))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and ($generated@@55 $generated@@82 $generated@@84 ($generated@@83 $generated@@86)) ($generated@@28 $generated@@85 $generated@@86)) ($generated@@55 $generated@@82 ($generated@@45 $generated@@84 $generated@@85) ($generated@@83 $generated@@86)))
 :pattern ( ($generated@@55 $generated@@82 ($generated@@45 $generated@@84 $generated@@85) ($generated@@83 $generated@@86)))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 Int) ($generated@@93 Int) ($generated@@94 T@U) ) (! (= ($generated@@13 ($generated@@25 $generated@@26 $generated@@9 ($generated@@87 $generated@@90 $generated@@91 $generated@@92 $generated@@93) $generated@@94))  (and ($generated@@28 $generated@@94 $generated@@90) (and ($generated@@88 $generated@@91 $generated@@94) (= ($generated@@89 ($generated@@15 ($generated@@65 $generated@@10 $generated@@94)) $generated@@92) $generated@@93))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@9 ($generated@@87 $generated@@90 $generated@@91 $generated@@92 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@95 $generated@@96) (= ($generated@@52 $generated@@96) $generated@@5))
 :pattern ( ($generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@97 $generated@@98) (= ($generated@@52 $generated@@98) $generated@@6))
 :pattern ( ($generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@99 $generated@@101 ($generated@@65 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@65 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@88 ($generated@@102 $generated@@103) $generated@@104) ($generated@@13 ($generated@@25 $generated@@26 $generated@@9 $generated@@103 $generated@@104)))
 :pattern ( ($generated@@88 ($generated@@102 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@95 $generated@@105) (= $generated@@105 $generated@@53))
 :pattern ( ($generated@@95 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@97 $generated@@106) (= $generated@@106 $generated@@54))
 :pattern ( ($generated@@97 $generated@@106))
)))
(assert (= ($generated@@8 $generated@@107) 9))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@55 $generated@@107 $generated@@109 ($generated@@108 $generated@@110)) (forall (($generated@@111 T@U) ) (!  (=> ($generated@@88 $generated@@109 $generated@@111) ($generated@@28 $generated@@111 $generated@@110))
 :pattern ( ($generated@@88 $generated@@109 $generated@@111))
)))
 :pattern ( ($generated@@55 $generated@@107 $generated@@109 ($generated@@108 $generated@@110)))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@51 ($generated@@45 $generated@@112 $generated@@113)) (+ 1 ($generated@@51 $generated@@112)))
 :pattern ( ($generated@@45 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@114 ($generated@@99 $generated@@119 $generated@@116) $generated@@117 $generated@@118) ($generated@@115 $generated@@119 $generated@@116 $generated@@117 $generated@@118))
 :pattern ( ($generated@@114 ($generated@@99 $generated@@119 $generated@@116) $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@61 $generated@@120 $generated@@121) (=> ($generated@@114 $generated@@122 $generated@@123 $generated@@120) ($generated@@114 $generated@@122 $generated@@123 $generated@@121)))
 :pattern ( ($generated@@61 $generated@@120 $generated@@121) ($generated@@114 $generated@@122 $generated@@123 $generated@@120))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@T) ) (!  (=> ($generated@@61 $generated@@124 $generated@@125) (=> ($generated@@115 $generated@@128 $generated@@126 $generated@@127 $generated@@124) ($generated@@115 $generated@@128 $generated@@126 $generated@@127 $generated@@125)))
 :pattern ( ($generated@@61 $generated@@124 $generated@@125) ($generated@@115 $generated@@128 $generated@@126 $generated@@127 $generated@@124))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@28 $generated@@129 $generated@@57) (and (= ($generated@@99 $generated@@56 ($generated@@65 $generated@@56 $generated@@129)) $generated@@129) ($generated@@55 $generated@@56 ($generated@@65 $generated@@56 $generated@@129) $generated@@57)))
 :pattern ( ($generated@@28 $generated@@129 $generated@@57))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 Int) ($generated@@133 T@U) ) (!  (and (=> (= $generated@@132 ($generated@@51 $generated@@131)) (= ($generated@@130 ($generated@@45 $generated@@131 $generated@@133) $generated@@132) $generated@@133)) (=> (or (not (= $generated@@132 ($generated@@51 $generated@@131))) (not true)) (= ($generated@@130 ($generated@@45 $generated@@131 $generated@@133) $generated@@132) ($generated@@130 $generated@@131 $generated@@132))))
 :pattern ( ($generated@@130 ($generated@@45 $generated@@131 $generated@@133) $generated@@132))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 Int) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@13 ($generated@@25 $generated@@26 $generated@@9 ($generated@@134 $generated@@136 $generated@@137 $generated@@138) $generated@@139)) (exists (($generated@@140 Int) ) (!  (and ($generated@@88 $generated@@136 ($generated@@99 $generated@@10 ($generated@@14 $generated@@140))) (= $generated@@139 ($generated@@99 $generated@@10 ($generated@@14 ($generated@@135 $generated@@137 $generated@@140)))))
 :pattern ( ($generated@@88 $generated@@138 ($generated@@99 $generated@@10 ($generated@@14 $generated@@140))))
)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@9 ($generated@@134 $generated@@136 $generated@@137 $generated@@138) $generated@@139))
)))
(assert (forall (($generated@@142 Int) ($generated@@143 Int) ($generated@@144 Int) ($generated@@145 Int) ($generated@@146 T@U) ) (! (= ($generated@@13 ($generated@@25 $generated@@26 $generated@@9 ($generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@146)) (exists (($generated@@147 Int) ($generated@@148 Int) )  (and (and (and (<= $generated@@142 $generated@@147) (< $generated@@147 $generated@@143)) (and (<= $generated@@144 $generated@@148) (< $generated@@148 $generated@@145))) (= $generated@@146 ($generated@@99 $generated@@10 ($generated@@14 (+ $generated@@147 $generated@@148)))))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@9 ($generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@146))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 Int) ($generated@@152 Int) ($generated@@153 Int) ($generated@@154 T@U) ) (! (= ($generated@@13 ($generated@@25 $generated@@26 $generated@@9 ($generated@@149 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154)) (exists (($generated@@155 Int) ($generated@@156 Int) )  (and (and (and ($generated@@44 $generated@@150 ($generated@@99 $generated@@10 ($generated@@14 $generated@@155))) (and (<= $generated@@151 $generated@@156) (< $generated@@156 $generated@@155))) (= ($generated@@89 $generated@@156 $generated@@152) $generated@@153)) (= $generated@@154 ($generated@@99 $generated@@10 ($generated@@14 (+ $generated@@155 $generated@@156)))))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@9 ($generated@@149 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@44 $generated@@157 $generated@@158) (exists (($generated@@159 Int) ) (!  (and (and (<= 0 $generated@@159) (< $generated@@159 ($generated@@51 $generated@@157))) (= ($generated@@130 $generated@@157 $generated@@159) $generated@@158))
 :pattern ( ($generated@@130 $generated@@157 $generated@@159))
)))
 :pattern ( ($generated@@44 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> ($generated@@160 $generated@@161) (or ($generated@@95 $generated@@161) ($generated@@97 $generated@@161)))
 :pattern ( ($generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> ($generated@@55 $generated@@56 $generated@@162 $generated@@57) (or ($generated@@95 $generated@@162) ($generated@@97 $generated@@162)))
 :pattern ( ($generated@@97 $generated@@162) ($generated@@55 $generated@@56 $generated@@162 $generated@@57))
 :pattern ( ($generated@@95 $generated@@162) ($generated@@55 $generated@@56 $generated@@162 $generated@@57))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (or (not (= $generated@@163 $generated@@165)) (not true)) (=> (and ($generated@@61 $generated@@163 $generated@@164) ($generated@@61 $generated@@164 $generated@@165)) ($generated@@61 $generated@@163 $generated@@165)))
 :pattern ( ($generated@@61 $generated@@163 $generated@@164) ($generated@@61 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> ($generated@@28 $generated@@166 $generated) (and (= ($generated@@99 $generated@@10 ($generated@@65 $generated@@10 $generated@@166)) $generated@@166) ($generated@@55 $generated@@10 ($generated@@65 $generated@@10 $generated@@166) $generated)))
 :pattern ( ($generated@@28 $generated@@166 $generated))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@28 ($generated@@99 $generated@@169 $generated@@167) $generated@@168) ($generated@@55 $generated@@169 $generated@@167 $generated@@168))
 :pattern ( ($generated@@28 ($generated@@99 $generated@@169 $generated@@167) $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (! (<= 0 ($generated@@51 $generated@@170))
 :pattern ( ($generated@@51 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and ($generated@@95 $generated@@171) ($generated@@95 $generated@@172)) ($generated@@58 $generated@@171 $generated@@172))
 :pattern ( ($generated@@58 $generated@@171 $generated@@172) ($generated@@95 $generated@@171))
 :pattern ( ($generated@@58 $generated@@171 $generated@@172) ($generated@@95 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and ($generated@@97 $generated@@173) ($generated@@97 $generated@@174)) ($generated@@58 $generated@@173 $generated@@174))
 :pattern ( ($generated@@58 $generated@@173 $generated@@174) ($generated@@97 $generated@@173))
 :pattern ( ($generated@@58 $generated@@173 $generated@@174) ($generated@@97 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@115 $generated@@107 $generated@@175 ($generated@@108 $generated@@176) $generated@@177) (forall (($generated@@178 T@U) ) (!  (=> ($generated@@88 $generated@@175 $generated@@178) ($generated@@114 $generated@@178 $generated@@176 $generated@@177))
 :pattern ( ($generated@@88 $generated@@175 $generated@@178))
)))
 :pattern ( ($generated@@115 $generated@@107 $generated@@175 ($generated@@108 $generated@@176) $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@115 $generated@@82 $generated@@179 ($generated@@83 $generated@@180) $generated@@181) (forall (($generated@@182 Int) ) (!  (=> (and (<= 0 $generated@@182) (< $generated@@182 ($generated@@51 $generated@@179))) ($generated@@114 ($generated@@130 $generated@@179 $generated@@182) $generated@@180 $generated@@181))
 :pattern ( ($generated@@130 $generated@@179 $generated@@182))
)))
 :pattern ( ($generated@@115 $generated@@82 $generated@@179 ($generated@@83 $generated@@180) $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@183 ($generated@@108 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@108 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (! (= ($generated@@24 ($generated@@108 $generated@@185)) $generated@@1)
 :pattern ( ($generated@@108 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@186 ($generated@@83 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@83 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@24 ($generated@@83 $generated@@188)) $generated@@2)
 :pattern ( ($generated@@83 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@T) ) (! (= ($generated@@65 $generated@@190 ($generated@@99 $generated@@190 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@99 $generated@@190 $generated@@189))
)))
(assert (forall (($generated@@192 Bool) ($generated@@193 Int) ($generated@@194 Int) ($generated@@195 T@U) ) (! (= ($generated@@13 ($generated@@25 $generated@@26 $generated@@9 ($generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195)) (exists (($generated@@196 Bool) )  (and $generated@@192 (= $generated@@195 ($generated@@99 $generated@@10 ($generated@@14 (ite $generated@@196 $generated@@193 $generated@@194)))))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@9 ($generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195))
)))
(assert  (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@197 $generated@@200 $generated@@201 $generated@@202 ($generated@@199 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@205 $generated@@206) $generated@@203)
 :weight 0
)) (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ($generated@@209 T@T) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@197 $generated@@207 $generated@@208 $generated@@209 ($generated@@199 $generated@@207 $generated@@208 $generated@@209 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@197 $generated@@207 $generated@@208 $generated@@209 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@T) ($generated@@217 T@T) ($generated@@218 T@T) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@197 $generated@@216 $generated@@217 $generated@@218 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@197 $generated@@216 $generated@@217 $generated@@218 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (= ($generated@@13 ($generated@@197 $generated@@63 $generated@@62 $generated@@9 ($generated@@198 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (or (not (= $generated@@229 $generated@@225)) (not true)) ($generated@@13 ($generated@@65 $generated@@9 ($generated@@25 $generated@@62 $generated@@26 ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@226 $generated@@229) $generated@@227)))) $generated@@228))
 :pattern ( ($generated@@197 $generated@@63 $generated@@62 $generated@@9 ($generated@@198 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 Int) ($generated@@232 Int) ) (! (= ($generated@@89 $generated@@231 $generated@@232) (mod $generated@@231 $generated@@232))
 :pattern ( ($generated@@89 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (and (= ($generated@@233 ($generated@@45 $generated@@235 $generated@@236)) $generated@@235) (= ($generated@@234 ($generated@@45 $generated@@235 $generated@@236)) $generated@@236))
 :pattern ( ($generated@@45 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 Int) ($generated@@238 Int) ) (! (= ($generated@@135 $generated@@237 $generated@@238) (* $generated@@237 $generated@@238))
 :pattern ( ($generated@@135 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> ($generated@@28 $generated@@239 ($generated@@108 $generated@@240)) (and (= ($generated@@99 $generated@@107 ($generated@@65 $generated@@107 $generated@@239)) $generated@@239) ($generated@@55 $generated@@107 ($generated@@65 $generated@@107 $generated@@239) ($generated@@108 $generated@@240))))
 :pattern ( ($generated@@28 $generated@@239 ($generated@@108 $generated@@240)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> ($generated@@28 $generated@@241 ($generated@@83 $generated@@242)) (and (= ($generated@@99 $generated@@82 ($generated@@65 $generated@@82 $generated@@241)) $generated@@241) ($generated@@55 $generated@@82 ($generated@@65 $generated@@82 $generated@@241) ($generated@@83 $generated@@242))))
 :pattern ( ($generated@@28 $generated@@241 ($generated@@83 $generated@@242)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and ($generated@@243 $generated@@245) ($generated@@55 $generated@@56 $generated@@244 $generated@@57)) ($generated@@115 $generated@@56 $generated@@244 $generated@@57 $generated@@245))
 :pattern ( ($generated@@115 $generated@@56 $generated@@244 $generated@@57 $generated@@245))
)))
(assert (= ($generated@@24 $generated@@57) $generated@@4))
(assert (= ($generated@@246 $generated@@57) $generated@@7))
(assert (= $generated@@53 ($generated@@79 $generated@@56 $generated@@53)))
(assert (= $generated@@54 ($generated@@79 $generated@@56 $generated@@54)))
(assert (forall (($generated@@247 Int) ) (! (= ($generated@@99 $generated@@10 ($generated@@14 ($generated@@77 $generated@@247))) ($generated@@79 $generated@@26 ($generated@@99 $generated@@10 ($generated@@14 $generated@@247))))
 :pattern ( ($generated@@99 $generated@@10 ($generated@@14 ($generated@@77 $generated@@247))))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@T) ) (! (= ($generated@@99 $generated@@249 ($generated@@79 $generated@@249 $generated@@248)) ($generated@@79 $generated@@26 ($generated@@99 $generated@@249 $generated@@248)))
 :pattern ( ($generated@@99 $generated@@249 ($generated@@79 $generated@@249 $generated@@248)))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= ($generated@@51 $generated@@250) 0) (= $generated@@250 $generated@@49))
 :pattern ( ($generated@@51 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! ($generated@@115 $generated@@10 $generated@@252 $generated $generated@@251)
 :pattern ( ($generated@@115 $generated@@10 $generated@@252 $generated $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= ($generated@@55 $generated@@82 $generated@@253 ($generated@@83 $generated@@254)) (forall (($generated@@255 Int) ) (!  (=> (and (<= 0 $generated@@255) (< $generated@@255 ($generated@@51 $generated@@253))) ($generated@@28 ($generated@@130 $generated@@253 $generated@@255) $generated@@254))
 :pattern ( ($generated@@130 $generated@@253 $generated@@255))
)))
 :pattern ( ($generated@@55 $generated@@82 $generated@@253 ($generated@@83 $generated@@254)))
)))
(assert (forall (($generated@@256 T@U) ) (! ($generated@@55 $generated@@10 $generated@@256 $generated)
 :pattern ( ($generated@@55 $generated@@10 $generated@@256 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () Int)
(declare-fun $generated@@259 () Int)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () Int)
(declare-fun $generated@@266 () Int)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () Int)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () Int)
(declare-fun $generated@@274 () Bool)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 () Bool)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () Int)
(declare-fun $generated@@283 () Int)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@287 () T@U)
(declare-fun $generated@@288 () T@U)
(declare-fun $generated@@289 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 67) (let (($generated@@290 true))
(let (($generated@@291  (=> (and (not (and (and ($generated@@44 $generated@@257 ($generated@@99 $generated@@10 ($generated@@14 $generated@@258))) (and (<= ($generated@@77 0) $generated@@259) (< $generated@@259 $generated@@258))) (= ($generated@@89 $generated@@259 ($generated@@77 7)) ($generated@@77 0)))) (= (ControlFlow 0 9) 7)) $generated@@290)))
(let (($generated@@292  (=> (and (and (and ($generated@@44 $generated@@257 ($generated@@99 $generated@@10 ($generated@@14 $generated@@258))) (and (<= ($generated@@77 0) $generated@@259) (< $generated@@259 $generated@@258))) (= ($generated@@89 $generated@@259 ($generated@@77 7)) ($generated@@77 0))) (= (ControlFlow 0 8) 7)) $generated@@290)))
(let (($generated@@293  (=> (not (and ($generated@@44 $generated@@257 ($generated@@99 $generated@@10 ($generated@@14 $generated@@258))) (and (<= ($generated@@77 0) $generated@@259) (< $generated@@259 $generated@@258)))) (and (=> (= (ControlFlow 0 12) 8) $generated@@292) (=> (= (ControlFlow 0 12) 9) $generated@@291)))))
(let (($generated@@294  (=> (and ($generated@@44 $generated@@257 ($generated@@99 $generated@@10 ($generated@@14 $generated@@258))) (and (<= ($generated@@77 0) $generated@@259) (< $generated@@259 $generated@@258))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (not (= ($generated@@77 7) 0)) (not true))) (=> (or (not (= ($generated@@77 7) 0)) (not true)) (and (=> (= (ControlFlow 0 10) 8) $generated@@292) (=> (= (ControlFlow 0 10) 9) $generated@@291)))))))
(let (($generated@@295  (=> (< $generated@@259 ($generated@@77 0)) (and (=> (= (ControlFlow 0 15) 10) $generated@@294) (=> (= (ControlFlow 0 15) 12) $generated@@293)))))
(let (($generated@@296  (=> (<= ($generated@@77 0) $generated@@259) (and (=> (= (ControlFlow 0 14) 10) $generated@@294) (=> (= (ControlFlow 0 14) 12) $generated@@293)))))
(let (($generated@@297  (=> ($generated@@44 $generated@@257 ($generated@@99 $generated@@10 ($generated@@14 $generated@@258))) (and (=> (= (ControlFlow 0 16) 14) $generated@@296) (=> (= (ControlFlow 0 16) 15) $generated@@295)))))
(let (($generated@@298  (=> (not ($generated@@44 $generated@@257 ($generated@@99 $generated@@10 ($generated@@14 $generated@@258)))) (and (=> (= (ControlFlow 0 13) 10) $generated@@294) (=> (= (ControlFlow 0 13) 12) $generated@@293)))))
(let (($generated@@299  (and (=> (= (ControlFlow 0 17) 16) $generated@@297) (=> (= (ControlFlow 0 17) 13) $generated@@298))))
(let (($generated@@300 true))
(let (($generated@@301  (=> (= $generated@@260 ($generated@@102 ($generated@@149 $generated@@257 ($generated@@77 0) ($generated@@77 7) ($generated@@77 0)))) (=> (and (and ($generated@@243 $generated@@261) ($generated@@262 $generated@@261)) (and (forall (($generated@@302 T@U) ) (!  (=> (and (or (not (= $generated@@302 $generated@@263)) (not true)) ($generated@@13 ($generated@@65 $generated@@9 ($generated@@25 $generated@@62 $generated@@26 ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@264 $generated@@302) $generated@@3)))) (= ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@261 $generated@@302) ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@264 $generated@@302)))
 :pattern ( ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@261 $generated@@302))
)) ($generated@@61 $generated@@264 $generated@@261))) (and (=> (= (ControlFlow 0 18) 17) $generated@@299) (=> (= (ControlFlow 0 18) 6) $generated@@300))))))
(let (($generated@@303  (=> (and (not (and (and ($generated@@44 $generated@@257 ($generated@@99 $generated@@10 ($generated@@14 $generated@@265))) (and (<= ($generated@@77 0) $generated@@266) (< $generated@@266 $generated@@265))) (= ($generated@@89 $generated@@266 ($generated@@77 7)) ($generated@@77 0)))) (= (ControlFlow 0 20) 18)) $generated@@301)))
(let (($generated@@304  (=> (and (and (and ($generated@@44 $generated@@257 ($generated@@99 $generated@@10 ($generated@@14 $generated@@265))) (and (<= ($generated@@77 0) $generated@@266) (< $generated@@266 $generated@@265))) (= ($generated@@89 $generated@@266 ($generated@@77 7)) ($generated@@77 0))) (= (ControlFlow 0 19) 18)) $generated@@301)))
(let (($generated@@305  (=> (not (and ($generated@@44 $generated@@257 ($generated@@99 $generated@@10 ($generated@@14 $generated@@265))) (and (<= ($generated@@77 0) $generated@@266) (< $generated@@266 $generated@@265)))) (and (=> (= (ControlFlow 0 23) 19) $generated@@304) (=> (= (ControlFlow 0 23) 20) $generated@@303)))))
(let (($generated@@306  (=> (and ($generated@@44 $generated@@257 ($generated@@99 $generated@@10 ($generated@@14 $generated@@265))) (and (<= ($generated@@77 0) $generated@@266) (< $generated@@266 $generated@@265))) (and (=> (= (ControlFlow 0 21) (- 0 22)) (or (not (= ($generated@@77 7) 0)) (not true))) (=> (or (not (= ($generated@@77 7) 0)) (not true)) (and (=> (= (ControlFlow 0 21) 19) $generated@@304) (=> (= (ControlFlow 0 21) 20) $generated@@303)))))))
(let (($generated@@307  (=> (< $generated@@266 ($generated@@77 0)) (and (=> (= (ControlFlow 0 26) 21) $generated@@306) (=> (= (ControlFlow 0 26) 23) $generated@@305)))))
(let (($generated@@308  (=> (<= ($generated@@77 0) $generated@@266) (and (=> (= (ControlFlow 0 25) 21) $generated@@306) (=> (= (ControlFlow 0 25) 23) $generated@@305)))))
(let (($generated@@309  (=> ($generated@@44 $generated@@257 ($generated@@99 $generated@@10 ($generated@@14 $generated@@265))) (and (=> (= (ControlFlow 0 27) 25) $generated@@308) (=> (= (ControlFlow 0 27) 26) $generated@@307)))))
(let (($generated@@310  (=> (not ($generated@@44 $generated@@257 ($generated@@99 $generated@@10 ($generated@@14 $generated@@265)))) (and (=> (= (ControlFlow 0 24) 21) $generated@@306) (=> (= (ControlFlow 0 24) 23) $generated@@305)))))
(let (($generated@@311  (and (=> (= (ControlFlow 0 28) 27) $generated@@309) (=> (= (ControlFlow 0 28) 24) $generated@@310))))
(let (($generated@@312 true))
(let (($generated@@313  (=> (= $generated@@267 ($generated@@102 ($generated@@87 $generated $generated@@268 ($generated@@77 2) ($generated@@77 0)))) (=> (and (and (and ($generated@@243 $generated@@264) ($generated@@262 $generated@@264)) (forall (($generated@@314 T@U) ) (!  (=> (and (or (not (= $generated@@314 $generated@@263)) (not true)) ($generated@@13 ($generated@@65 $generated@@9 ($generated@@25 $generated@@62 $generated@@26 ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@269 $generated@@314) $generated@@3)))) (= ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@264 $generated@@314) ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@269 $generated@@314)))
 :pattern ( ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@264 $generated@@314))
))) (and ($generated@@61 $generated@@269 $generated@@264) (= $generated@@257 ($generated@@79 $generated@@82 ($generated@@45 ($generated@@45 ($generated@@45 $generated@@49 ($generated@@99 $generated@@10 ($generated@@14 ($generated@@77 30)))) ($generated@@99 $generated@@10 ($generated@@14 ($generated@@77 40)))) ($generated@@99 $generated@@10 ($generated@@14 ($generated@@77 20)))))))) (and (=> (= (ControlFlow 0 29) 28) $generated@@311) (=> (= (ControlFlow 0 29) 5) $generated@@312))))))
(let (($generated@@315  (=> (and (not (and ($generated@@88 $generated@@268 ($generated@@99 $generated@@10 ($generated@@14 $generated@@270))) (= ($generated@@89 $generated@@270 ($generated@@77 2)) ($generated@@77 0)))) (= (ControlFlow 0 31) 29)) $generated@@313)))
(let (($generated@@316  (=> (and (and ($generated@@88 $generated@@268 ($generated@@99 $generated@@10 ($generated@@14 $generated@@270))) (= ($generated@@89 $generated@@270 ($generated@@77 2)) ($generated@@77 0))) (= (ControlFlow 0 30) 29)) $generated@@313)))
(let (($generated@@317  (=> (not ($generated@@88 $generated@@268 ($generated@@99 $generated@@10 ($generated@@14 $generated@@270)))) (and (=> (= (ControlFlow 0 34) 30) $generated@@316) (=> (= (ControlFlow 0 34) 31) $generated@@315)))))
(let (($generated@@318  (=> ($generated@@88 $generated@@268 ($generated@@99 $generated@@10 ($generated@@14 $generated@@270))) (and (=> (= (ControlFlow 0 32) (- 0 33)) (or (not (= ($generated@@77 2) 0)) (not true))) (=> (or (not (= ($generated@@77 2) 0)) (not true)) (and (=> (= (ControlFlow 0 32) 30) $generated@@316) (=> (= (ControlFlow 0 32) 31) $generated@@315)))))))
(let (($generated@@319  (and (=> (= (ControlFlow 0 35) 32) $generated@@318) (=> (= (ControlFlow 0 35) 34) $generated@@317))))
(let (($generated@@320 true))
(let (($generated@@321  (=> (= $generated@@271 ($generated@@102 ($generated@@134 $generated@@268 ($generated@@77 2) $generated@@268))) (=> (and (and ($generated@@243 $generated@@269) ($generated@@262 $generated@@269)) (and (forall (($generated@@322 T@U) ) (!  (=> (and (or (not (= $generated@@322 $generated@@263)) (not true)) ($generated@@13 ($generated@@65 $generated@@9 ($generated@@25 $generated@@62 $generated@@26 ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@272 $generated@@322) $generated@@3)))) (= ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@269 $generated@@322) ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@272 $generated@@322)))
 :pattern ( ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@269 $generated@@322))
)) ($generated@@61 $generated@@272 $generated@@269))) (and (=> (= (ControlFlow 0 36) 35) $generated@@319) (=> (= (ControlFlow 0 36) 4) $generated@@320))))))
(let (($generated@@323  (=> (and (not ($generated@@88 $generated@@268 ($generated@@99 $generated@@10 ($generated@@14 $generated@@273)))) (= (ControlFlow 0 38) 36)) $generated@@321)))
(let (($generated@@324  (=> (and ($generated@@88 $generated@@268 ($generated@@99 $generated@@10 ($generated@@14 $generated@@273))) (= (ControlFlow 0 37) 36)) $generated@@321)))
(let (($generated@@325  (and (=> (= (ControlFlow 0 39) 37) $generated@@324) (=> (= (ControlFlow 0 39) 38) $generated@@323))))
(let (($generated@@326 true))
(let (($generated@@327  (=> (and (forall (($generated@@328 T@U) )  (=> ($generated@@55 $generated@@56 $generated@@328 $generated@@57) (and ($generated@@160 $generated@@328) (=> (not ($generated@@58 $generated@@328 $generated@@53)) ($generated@@160 $generated@@328))))) (= $generated@@274 (forall (($generated@@329 T@U) )  (=> ($generated@@55 $generated@@56 $generated@@329 $generated@@57) (or ($generated@@58 $generated@@329 $generated@@53) ($generated@@58 $generated@@329 $generated@@54)))))) (=> (and (and ($generated@@243 $generated@@272) ($generated@@262 $generated@@272)) (and (forall (($generated@@330 T@U) ) (!  (=> (and (or (not (= $generated@@330 $generated@@263)) (not true)) ($generated@@13 ($generated@@65 $generated@@9 ($generated@@25 $generated@@62 $generated@@26 ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@275 $generated@@330) $generated@@3)))) (= ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@272 $generated@@330) ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@275 $generated@@330)))
 :pattern ( ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@272 $generated@@330))
)) ($generated@@61 $generated@@275 $generated@@272))) (and (=> (= (ControlFlow 0 40) 39) $generated@@325) (=> (= (ControlFlow 0 40) 3) $generated@@326))))))
(let (($generated@@331  (=> (and ($generated@@58 $generated@@276 $generated@@53) (= (ControlFlow 0 43) 40)) $generated@@327)))
(let (($generated@@332  (=> (and (not ($generated@@58 $generated@@276 $generated@@53)) (= (ControlFlow 0 42) 40)) $generated@@327)))
(let (($generated@@333  (=> (and ($generated@@55 $generated@@56 $generated@@276 $generated@@57) ($generated@@115 $generated@@56 $generated@@276 $generated@@57 $generated@@275)) (and (=> (= (ControlFlow 0 44) 42) $generated@@332) (=> (= (ControlFlow 0 44) 43) $generated@@331)))))
(let (($generated@@334  (=> (and (not (and ($generated@@55 $generated@@56 $generated@@276 $generated@@57) ($generated@@115 $generated@@56 $generated@@276 $generated@@57 $generated@@275))) (= (ControlFlow 0 41) 40)) $generated@@327)))
(let (($generated@@335  (=> (= $generated@@277 ($generated@@102 ($generated@@27 $generated@@57 ($generated@@13 ($generated@@79 $generated@@9 ($generated@@12 true)))))) (and (=> (= (ControlFlow 0 45) 44) $generated@@333) (=> (= (ControlFlow 0 45) 41) $generated@@334)))))
(let (($generated@@336  (=> (and (not ($generated@@13 ($generated@@79 $generated@@9 ($generated@@12 true)))) (= (ControlFlow 0 48) 45)) $generated@@335)))
(let (($generated@@337  (=> (and ($generated@@13 ($generated@@79 $generated@@9 ($generated@@12 true))) (= (ControlFlow 0 47) 45)) $generated@@335)))
(let (($generated@@338  (=> (and ($generated@@55 $generated@@56 $generated@@278 $generated@@57) ($generated@@115 $generated@@56 $generated@@278 $generated@@57 $generated@@275)) (and (=> (= (ControlFlow 0 49) 47) $generated@@337) (=> (= (ControlFlow 0 49) 48) $generated@@336)))))
(let (($generated@@339  (=> (and (not (and ($generated@@55 $generated@@56 $generated@@278 $generated@@57) ($generated@@115 $generated@@56 $generated@@278 $generated@@57 $generated@@275))) (= (ControlFlow 0 46) 45)) $generated@@335)))
(let (($generated@@340  (=> (= $generated@@268 ($generated@@102 ($generated@@191 ($generated@@13 ($generated@@79 $generated@@9 ($generated@@12 true))) 3 7))) (and (=> (= (ControlFlow 0 50) 49) $generated@@338) (=> (= (ControlFlow 0 50) 46) $generated@@339)))))
(let (($generated@@341  (=> (and (not $generated@@279) (= (ControlFlow 0 53) 50)) $generated@@340)))
(let (($generated@@342  (=> (and $generated@@279 (= (ControlFlow 0 52) 50)) $generated@@340)))
(let (($generated@@343  (=> ($generated@@13 ($generated@@79 $generated@@9 ($generated@@12 true))) (and (=> (= (ControlFlow 0 54) 52) $generated@@342) (=> (= (ControlFlow 0 54) 53) $generated@@341)))))
(let (($generated@@344  (=> (and (not ($generated@@13 ($generated@@79 $generated@@9 ($generated@@12 true)))) (= (ControlFlow 0 51) 50)) $generated@@340)))
(let (($generated@@345  (and (=> (= (ControlFlow 0 55) 54) $generated@@343) (=> (= (ControlFlow 0 55) 51) $generated@@344))))
(let (($generated@@346 true))
(let (($generated@@347  (=> (= $generated@@280 ($generated@@102 ($generated@@141 ($generated@@77 0) 10 ($generated@@77 0) 3))) (=> (and (and ($generated@@243 $generated@@275) ($generated@@262 $generated@@275)) (and (forall (($generated@@348 T@U) ) (!  (=> (and (or (not (= $generated@@348 $generated@@263)) (not true)) ($generated@@13 ($generated@@65 $generated@@9 ($generated@@25 $generated@@62 $generated@@26 ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@281 $generated@@348) $generated@@3)))) (= ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@275 $generated@@348) ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@281 $generated@@348)))
 :pattern ( ($generated@@25 $generated@@63 ($generated@@64 $generated@@62 $generated@@26) $generated@@275 $generated@@348))
)) ($generated@@61 $generated@@281 $generated@@275))) (and (=> (= (ControlFlow 0 56) 55) $generated@@345) (=> (= (ControlFlow 0 56) 2) $generated@@346))))))
(let (($generated@@349  (=> (and (not (and (and (<= ($generated@@77 0) $generated@@282) (< $generated@@282 10)) (and (<= ($generated@@77 0) $generated@@283) (< $generated@@283 3)))) (= (ControlFlow 0 58) 56)) $generated@@347)))
(let (($generated@@350  (=> (and (and (and (<= ($generated@@77 0) $generated@@282) (< $generated@@282 10)) (and (<= ($generated@@77 0) $generated@@283) (< $generated@@283 3))) (= (ControlFlow 0 57) 56)) $generated@@347)))
(let (($generated@@351  (=> (< $generated@@283 ($generated@@77 0)) (and (=> (= (ControlFlow 0 61) 57) $generated@@350) (=> (= (ControlFlow 0 61) 58) $generated@@349)))))
(let (($generated@@352  (=> (<= ($generated@@77 0) $generated@@283) (and (=> (= (ControlFlow 0 60) 57) $generated@@350) (=> (= (ControlFlow 0 60) 58) $generated@@349)))))
(let (($generated@@353  (=> (and (<= ($generated@@77 0) $generated@@282) (< $generated@@282 10)) (and (=> (= (ControlFlow 0 62) 60) $generated@@352) (=> (= (ControlFlow 0 62) 61) $generated@@351)))))
(let (($generated@@354  (=> (not (and (<= ($generated@@77 0) $generated@@282) (< $generated@@282 10))) (and (=> (= (ControlFlow 0 59) 57) $generated@@350) (=> (= (ControlFlow 0 59) 58) $generated@@349)))))
(let (($generated@@355  (=> (< $generated@@282 ($generated@@77 0)) (and (=> (= (ControlFlow 0 64) 62) $generated@@353) (=> (= (ControlFlow 0 64) 59) $generated@@354)))))
(let (($generated@@356  (=> (<= ($generated@@77 0) $generated@@282) (and (=> (= (ControlFlow 0 63) 62) $generated@@353) (=> (= (ControlFlow 0 63) 59) $generated@@354)))))
(let (($generated@@357  (and (=> (= (ControlFlow 0 65) 63) $generated@@356) (=> (= (ControlFlow 0 65) 64) $generated@@355))))
(let (($generated@@358 true))
(let (($generated@@359  (=> (= $generated@@284 ($generated@@198 $generated@@263 $generated@@281 $generated@@3 false)) (and (=> (= (ControlFlow 0 66) 65) $generated@@357) (=> (= (ControlFlow 0 66) 1) $generated@@358)))))
(let (($generated@@360  (=> (and ($generated@@243 $generated@@281) ($generated@@262 $generated@@281)) (=> (and (and ($generated@@55 $generated@@107 $generated@@285 ($generated@@108 $generated)) ($generated@@115 $generated@@107 $generated@@285 ($generated@@108 $generated) $generated@@281)) true) (=> (and (and (and (and ($generated@@55 $generated@@107 $generated@@286 ($generated@@108 $generated@@57)) ($generated@@115 $generated@@107 $generated@@286 ($generated@@108 $generated@@57) $generated@@281)) true) (and (and ($generated@@55 $generated@@107 $generated@@287 ($generated@@108 $generated)) ($generated@@115 $generated@@107 $generated@@287 ($generated@@108 $generated) $generated@@281)) true)) (and (and (and ($generated@@55 $generated@@82 $generated@@288 ($generated@@83 $generated)) ($generated@@115 $generated@@82 $generated@@288 ($generated@@83 $generated) $generated@@281)) true) (and (= 1 $generated@@289) (= (ControlFlow 0 67) 66)))) $generated@@359)))))
$generated@@360)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
