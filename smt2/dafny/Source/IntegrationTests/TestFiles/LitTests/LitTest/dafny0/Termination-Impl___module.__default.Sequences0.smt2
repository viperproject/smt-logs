(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@U Int) T@U)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (T@U Int) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@T T@T) T@T)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@36 (T@T) T@T)
(declare-fun $generated@@37 (T@T) T@T)
(declare-fun $generated@@60 (Int) Int)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@U Int) T@U)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U) Int)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@110 (T@U T@U) Bool)
(declare-fun $generated@@111 (T@T T@U T@U) Bool)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@20 $generated@@21) 0))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 Int) ) (!  (=> (= $generated@@27 ($generated@@20 $generated@@25)) (and (= ($generated@@22 ($generated@@23 $generated@@25 $generated@@26) $generated@@27) $generated@@25) (= ($generated@@24 ($generated@@23 $generated@@25 $generated@@26) $generated@@27) $generated@@26)))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@25 $generated@@26) $generated@@27))
 :pattern ( ($generated@@24 ($generated@@23 $generated@@25 $generated@@26) $generated@@27))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@38 T@T) ($generated@@39 T@T) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@29 $generated@@38 $generated@@39 ($generated@@35 $generated@@38 $generated@@39 $generated@@41 $generated@@42 $generated@@40) $generated@@42) $generated@@40)
 :weight 0
)) (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (or (= $generated@@47 $generated@@48) (= ($generated@@29 $generated@@43 $generated@@44 ($generated@@35 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@48) ($generated@@29 $generated@@43 $generated@@44 $generated@@46 $generated@@48)))
 :weight 0
))) (= ($generated@@3 $generated@@30) 3)) (= ($generated@@3 $generated@@31) 4)) (= ($generated@@3 $generated@@32) 5)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ) (= ($generated@@3 ($generated@@33 $generated@@49 $generated@@50)) 6))) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (! (= ($generated@@36 ($generated@@33 $generated@@51 $generated@@52)) $generated@@51)
 :pattern ( ($generated@@33 $generated@@51 $generated@@52))
))) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (! (= ($generated@@37 ($generated@@33 $generated@@53 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@33 $generated@@53 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@28 $generated@@55 $generated@@56) (forall (($generated@@57 T@U) ) (!  (=> ($generated@@8 ($generated@@34 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@55 $generated@@57) $generated@@2))) ($generated@@8 ($generated@@34 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@56 $generated@@57) $generated@@2))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@56 $generated@@57) $generated@@2))
)))
 :pattern ( ($generated@@28 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 Int) ) (!  (=> (= $generated@@59 0) (= ($generated@@24 $generated@@58 $generated@@59) $generated@@58))
 :pattern ( ($generated@@24 $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@61 Int) ) (! (= ($generated@@60 $generated@@61) $generated@@61)
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 Int) ($generated@@68 Int) ) (!  (=> (and (and (<= 0 $generated@@68) (< $generated@@68 $generated@@67)) (< $generated@@68 ($generated@@20 $generated@@66))) (= ($generated@@65 ($generated@@22 $generated@@66 $generated@@67) $generated@@68) ($generated@@65 $generated@@66 $generated@@68)))
 :weight 25
 :pattern ( ($generated@@65 ($generated@@22 $generated@@66 $generated@@67) $generated@@68))
 :pattern ( ($generated@@65 $generated@@66 $generated@@68) ($generated@@22 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 Int) ) (!  (=> (and (<= 0 $generated@@70) (<= $generated@@70 ($generated@@20 $generated@@69))) (= ($generated@@20 ($generated@@24 $generated@@69 $generated@@70)) (- ($generated@@20 $generated@@69) $generated@@70)))
 :pattern ( ($generated@@20 ($generated@@24 $generated@@69 $generated@@70)))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@71 $generated@@72 $generated@@73)  (and (= ($generated@@20 $generated@@72) ($generated@@20 $generated@@73)) (forall (($generated@@74 Int) ) (!  (=> (and (<= 0 $generated@@74) (< $generated@@74 ($generated@@20 $generated@@72))) (= ($generated@@65 $generated@@72 $generated@@74) ($generated@@65 $generated@@73 $generated@@74)))
 :pattern ( ($generated@@65 $generated@@72 $generated@@74))
 :pattern ( ($generated@@65 $generated@@73 $generated@@74))
))))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 ($generated@@34 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@34 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 Int) ) (!  (=> (and (<= 0 $generated@@80) (< $generated@@80 ($generated@@20 $generated@@79))) (< ($generated@@78 ($generated@@22 $generated@@79 $generated@@80)) ($generated@@78 $generated@@79)))
 :pattern ( ($generated@@78 ($generated@@22 $generated@@79 $generated@@80)))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 Int) ) (!  (=> (and (< 0 $generated@@82) (<= $generated@@82 ($generated@@20 $generated@@81))) (< ($generated@@78 ($generated@@24 $generated@@81 $generated@@82)) ($generated@@78 $generated@@81)))
 :pattern ( ($generated@@78 ($generated@@24 $generated@@81 $generated@@82)))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@83 ($generated@@75 $generated@@88 $generated@@85) $generated@@86 $generated@@87) ($generated@@84 $generated@@88 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@83 ($generated@@75 $generated@@88 $generated@@85) $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> ($generated@@28 $generated@@89 $generated@@90) (=> ($generated@@83 $generated@@91 $generated@@92 $generated@@89) ($generated@@83 $generated@@91 $generated@@92 $generated@@90)))
 :pattern ( ($generated@@28 $generated@@89 $generated@@90) ($generated@@83 $generated@@91 $generated@@92 $generated@@89))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (!  (=> ($generated@@28 $generated@@93 $generated@@94) (=> ($generated@@84 $generated@@97 $generated@@95 $generated@@96 $generated@@93) ($generated@@84 $generated@@97 $generated@@95 $generated@@96 $generated@@94)))
 :pattern ( ($generated@@28 $generated@@93 $generated@@94) ($generated@@84 $generated@@97 $generated@@95 $generated@@96 $generated@@93))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 Int) ($generated@@100 Int) ) (!  (=> (and (and (<= 0 $generated@@99) (<= 0 $generated@@100)) (< $generated@@100 (- ($generated@@20 $generated@@98) $generated@@99))) (= ($generated@@65 ($generated@@24 $generated@@98 $generated@@99) $generated@@100) ($generated@@65 $generated@@98 (+ $generated@@100 $generated@@99))))
 :weight 25
 :pattern ( ($generated@@65 ($generated@@24 $generated@@98 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@20 ($generated@@23 $generated@@101 $generated@@102)) (+ ($generated@@20 $generated@@101) ($generated@@20 $generated@@102)))
 :pattern ( ($generated@@20 ($generated@@23 $generated@@101 $generated@@102)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@71 $generated@@103 $generated@@104) (= $generated@@103 $generated@@104))
 :pattern ( ($generated@@71 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 Int) ) (!  (=> (and (<= 0 $generated@@106) (<= $generated@@106 ($generated@@20 $generated@@105))) (= ($generated@@20 ($generated@@22 $generated@@105 $generated@@106)) $generated@@106))
 :pattern ( ($generated@@20 ($generated@@22 $generated@@105 $generated@@106)))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (or (not (= $generated@@107 $generated@@109)) (not true)) (=> (and ($generated@@28 $generated@@107 $generated@@108) ($generated@@28 $generated@@108 $generated@@109)) ($generated@@28 $generated@@107 $generated@@109)))
 :pattern ( ($generated@@28 $generated@@107 $generated@@108) ($generated@@28 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@110 $generated@@112 $generated) (and (= ($generated@@75 $generated@@5 ($generated@@34 $generated@@5 $generated@@112)) $generated@@112) ($generated@@111 $generated@@5 ($generated@@34 $generated@@5 $generated@@112) $generated)))
 :pattern ( ($generated@@110 $generated@@112 $generated))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@110 ($generated@@75 $generated@@115 $generated@@113) $generated@@114) ($generated@@111 $generated@@115 $generated@@113 $generated@@114))
 :pattern ( ($generated@@110 ($generated@@75 $generated@@115 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ) (! (<= 0 ($generated@@20 $generated@@116))
 :pattern ( ($generated@@20 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 Int) ($generated@@119 Int) ) (!  (=> (and (and (<= 0 $generated@@118) (< $generated@@118 $generated@@119)) (<= $generated@@119 ($generated@@20 $generated@@117))) (< ($generated@@78 ($generated@@23 ($generated@@22 $generated@@117 $generated@@118) ($generated@@24 $generated@@117 $generated@@119))) ($generated@@78 $generated@@117)))
 :pattern ( ($generated@@78 ($generated@@23 ($generated@@22 $generated@@117 $generated@@118) ($generated@@24 $generated@@117 $generated@@119))))
)))
(assert (= ($generated@@3 $generated@@120) 7))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@84 $generated@@120 $generated@@122 ($generated@@121 $generated@@123) $generated@@124) (forall (($generated@@125 Int) ) (!  (=> (and (<= 0 $generated@@125) (< $generated@@125 ($generated@@20 $generated@@122))) ($generated@@83 ($generated@@65 $generated@@122 $generated@@125) $generated@@123 $generated@@124))
 :pattern ( ($generated@@65 $generated@@122 $generated@@125))
)))
 :pattern ( ($generated@@84 $generated@@120 $generated@@122 ($generated@@121 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@121 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@121 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@19 ($generated@@121 $generated@@128)) $generated@@1)
 :pattern ( ($generated@@121 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@34 $generated@@130 ($generated@@75 $generated@@130 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@75 $generated@@130 $generated@@129))
)))
(assert  (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@131 $generated@@134 $generated@@135 $generated@@136 ($generated@@133 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@139 $generated@@140) $generated@@137)
 :weight 0
)) (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@131 $generated@@141 $generated@@142 $generated@@143 ($generated@@133 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@131 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@131 $generated@@150 $generated@@151 $generated@@152 ($generated@@133 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@131 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Bool) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@8 ($generated@@131 $generated@@32 $generated@@30 $generated@@4 ($generated@@132 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))  (=> (and (or (not (= $generated@@163 $generated@@159)) (not true)) ($generated@@8 ($generated@@34 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@160 $generated@@163) $generated@@161)))) $generated@@162))
 :pattern ( ($generated@@131 $generated@@32 $generated@@30 $generated@@4 ($generated@@132 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@110 $generated@@165 ($generated@@121 $generated@@166)) (and (= ($generated@@75 $generated@@120 ($generated@@34 $generated@@120 $generated@@165)) $generated@@165) ($generated@@111 $generated@@120 ($generated@@34 $generated@@120 $generated@@165) ($generated@@121 $generated@@166))))
 :pattern ( ($generated@@110 $generated@@165 ($generated@@121 $generated@@166)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 Int) ($generated@@169 Int) ) (!  (=> (and (and (<= 0 $generated@@168) (<= $generated@@168 $generated@@169)) (< $generated@@169 ($generated@@20 $generated@@167))) (= ($generated@@65 ($generated@@24 $generated@@167 $generated@@168) (- $generated@@169 $generated@@168)) ($generated@@65 $generated@@167 $generated@@169)))
 :weight 25
 :pattern ( ($generated@@65 $generated@@167 $generated@@169) ($generated@@24 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 Int) ($generated@@172 Int) ) (!  (=> (and (and (<= 0 $generated@@171) (<= 0 $generated@@172)) (<= (+ $generated@@171 $generated@@172) ($generated@@20 $generated@@170))) (= ($generated@@24 ($generated@@24 $generated@@170 $generated@@171) $generated@@172) ($generated@@24 $generated@@170 (+ $generated@@171 $generated@@172))))
 :pattern ( ($generated@@24 ($generated@@24 $generated@@170 $generated@@171) $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Int) ) (!  (and (=> (< $generated@@175 ($generated@@20 $generated@@173)) (= ($generated@@65 ($generated@@23 $generated@@173 $generated@@174) $generated@@175) ($generated@@65 $generated@@173 $generated@@175))) (=> (<= ($generated@@20 $generated@@173) $generated@@175) (= ($generated@@65 ($generated@@23 $generated@@173 $generated@@174) $generated@@175) ($generated@@65 $generated@@174 (- $generated@@175 ($generated@@20 $generated@@173))))))
 :pattern ( ($generated@@65 ($generated@@23 $generated@@173 $generated@@174) $generated@@175))
)))
(assert (forall (($generated@@176 Int) ) (! (= ($generated@@75 $generated@@5 ($generated@@9 ($generated@@60 $generated@@176))) ($generated@@62 $generated@@31 ($generated@@75 $generated@@5 ($generated@@9 $generated@@176))))
 :pattern ( ($generated@@75 $generated@@5 ($generated@@9 ($generated@@60 $generated@@176))))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@75 $generated@@178 ($generated@@62 $generated@@178 $generated@@177)) ($generated@@62 $generated@@31 ($generated@@75 $generated@@178 $generated@@177)))
 :pattern ( ($generated@@75 $generated@@178 ($generated@@62 $generated@@178 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= ($generated@@20 $generated@@179) 0) (= $generated@@179 $generated@@21))
 :pattern ( ($generated@@20 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 Int) ) (!  (=> (= $generated@@181 0) (= ($generated@@22 $generated@@180 $generated@@181) $generated@@21))
 :pattern ( ($generated@@22 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! ($generated@@84 $generated@@5 $generated@@183 $generated $generated@@182)
 :pattern ( ($generated@@84 $generated@@5 $generated@@183 $generated $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@111 $generated@@120 $generated@@184 ($generated@@121 $generated@@185)) (forall (($generated@@186 Int) ) (!  (=> (and (<= 0 $generated@@186) (< $generated@@186 ($generated@@20 $generated@@184))) ($generated@@110 ($generated@@65 $generated@@184 $generated@@186) $generated@@185))
 :pattern ( ($generated@@65 $generated@@184 $generated@@186))
)))
 :pattern ( ($generated@@111 $generated@@120 $generated@@184 ($generated@@121 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ) (! ($generated@@111 $generated@@5 $generated@@187 $generated)
 :pattern ( ($generated@@111 $generated@@5 $generated@@187 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Bool)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@202  (and (=> (= (ControlFlow 0 6) (- 0 9)) (or (and ($generated@@111 $generated@@5 ($generated@@9 (- ($generated@@20 $generated@@188) 1)) $generated) (and (<= ($generated@@60 0) (- ($generated@@20 $generated@@188) 1)) (< (- ($generated@@20 $generated@@188) 1) ($generated@@20 $generated@@188)))) (or (and ($generated@@111 $generated@@5 ($generated@@9 ($generated@@60 0)) $generated) (and (<= ($generated@@60 0) ($generated@@60 0)) (< 0 ($generated@@20 $generated@@188)))) (or (and ($generated@@111 $generated@@5 ($generated@@9 ($generated@@60 0)) $generated) (and (<= ($generated@@60 0) ($generated@@60 0)) (< 0 ($generated@@20 $generated@@188)))) (exists (($generated@@203 Int) )  (and (<= ($generated@@60 0) $generated@@203) (< $generated@@203 ($generated@@20 $generated@@188)))))))) (=> (or (and ($generated@@111 $generated@@5 ($generated@@9 (- ($generated@@20 $generated@@188) 1)) $generated) (and (<= ($generated@@60 0) (- ($generated@@20 $generated@@188) 1)) (< (- ($generated@@20 $generated@@188) 1) ($generated@@20 $generated@@188)))) (or (and ($generated@@111 $generated@@5 ($generated@@9 ($generated@@60 0)) $generated) (and (<= ($generated@@60 0) ($generated@@60 0)) (< 0 ($generated@@20 $generated@@188)))) (or (and ($generated@@111 $generated@@5 ($generated@@9 ($generated@@60 0)) $generated) (and (<= ($generated@@60 0) ($generated@@60 0)) (< 0 ($generated@@20 $generated@@188)))) (exists (($generated@@204 Int) )  (and (<= ($generated@@60 0) $generated@@204) (< $generated@@204 ($generated@@20 $generated@@188))))))) (=> (and (<= ($generated@@60 0) $generated@@189) (< $generated@@189 ($generated@@20 $generated@@188))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (and (<= 0 $generated@@189) (<= $generated@@189 ($generated@@20 $generated@@188)))) (=> (and (<= 0 $generated@@189) (<= $generated@@189 ($generated@@20 $generated@@188))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 (+ $generated@@189 1)) (<= (+ $generated@@189 1) ($generated@@20 $generated@@188)))) (=> (and (<= 0 (+ $generated@@189 1)) (<= (+ $generated@@189 1) ($generated@@20 $generated@@188))) (=> (and (= $generated@@190 ($generated@@23 ($generated@@22 $generated@@188 $generated@@189) ($generated@@24 $generated@@188 (+ $generated@@189 1)))) (= (ControlFlow 0 6) (- 0 5))) (< ($generated@@78 $generated@@190) ($generated@@78 $generated@@188))))))))))))
(let (($generated@@205  (=> (and (< $generated@@191 ($generated@@60 0)) (= (ControlFlow 0 11) 6)) $generated@@202)))
(let (($generated@@206  (=> (and (<= ($generated@@60 0) $generated@@191) (= (ControlFlow 0 10) 6)) $generated@@202)))
(let (($generated@@207  (and (=> (= (ControlFlow 0 12) 10) $generated@@206) (=> (= (ControlFlow 0 12) 11) $generated@@205))))
(let (($generated@@208 true))
(let (($generated@@209  (=> (not ($generated@@71 $generated@@188 $generated@@21)) (and (=> (= (ControlFlow 0 13) 12) $generated@@207) (=> (= (ControlFlow 0 13) 4) $generated@@208)))))
(let (($generated@@210 true))
(let (($generated@@211  (=> $generated@@192 (and (=> (= (ControlFlow 0 14) 3) $generated@@210) (=> (= (ControlFlow 0 14) 13) $generated@@209)))))
(let (($generated@@212 true))
(let (($generated@@213  (and (=> (= (ControlFlow 0 15) 2) $generated@@212) (=> (= (ControlFlow 0 15) 14) $generated@@211))))
(let (($generated@@214 true))
(let (($generated@@215  (=> (and (and (and ($generated@@111 $generated@@120 $generated@@188 ($generated@@121 $generated@@193)) ($generated@@84 $generated@@120 $generated@@188 ($generated@@121 $generated@@193) $generated@@194)) (not false)) (and (and (forall (($generated@@216 T@U) ) (!  (=> (and (or (not (= $generated@@216 $generated@@195)) (not true)) ($generated@@8 ($generated@@34 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@194 $generated@@216) $generated@@2)))) (= ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@194 $generated@@216) ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@194 $generated@@216)))
 :pattern ( ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@194 $generated@@216))
)) ($generated@@28 $generated@@194 $generated@@194)) (and (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (or (not (= $generated@@217 $generated@@195)) (not true)) ($generated@@8 ($generated@@34 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@194 $generated@@217) $generated@@2)))) (or (= ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@194 $generated@@217) $generated@@218) ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@194 $generated@@217) $generated@@218)) ($generated@@8 ($generated@@131 $generated@@32 $generated@@30 $generated@@4 $generated@@196 $generated@@217 $generated@@218))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@194 $generated@@217) $generated@@218))
)) (<= ($generated@@78 $generated@@188) ($generated@@78 $generated@@197))))) (and (=> (= (ControlFlow 0 16) 1) $generated@@214) (=> (= (ControlFlow 0 16) 15) $generated@@213)))))
(let (($generated@@219  (=> (and (= $generated@@196 ($generated@@132 $generated@@195 $generated@@194 $generated@@2 false)) (= (ControlFlow 0 17) 16)) $generated@@215)))
(let (($generated@@220  (=> (and (and ($generated@@198 $generated@@194) ($generated@@199 $generated@@194)) (and ($generated@@111 $generated@@120 $generated@@197 ($generated@@121 $generated@@193)) ($generated@@84 $generated@@120 $generated@@197 ($generated@@121 $generated@@193) $generated@@194))) (=> (and (and (and ($generated@@111 $generated@@120 $generated@@200 ($generated@@121 $generated@@193)) ($generated@@84 $generated@@120 $generated@@200 ($generated@@121 $generated@@193) $generated@@194)) true) (and (= 0 $generated@@201) (= (ControlFlow 0 18) 17))) $generated@@219))))
$generated@@220)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
