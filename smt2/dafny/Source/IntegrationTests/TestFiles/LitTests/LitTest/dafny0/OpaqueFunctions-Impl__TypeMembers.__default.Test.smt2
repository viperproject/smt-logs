(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 () Int)
(declare-fun $generated@@28 (Bool T@U) Bool)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (Bool Int) Bool)
(declare-fun $generated@@39 (Int) Bool)
(declare-fun $generated@@40 (Int) Int)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@T T@T) T@T)
(declare-fun $generated@@59 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@88 (Bool T@U) Bool)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@11 $generated@@30) 3))
(assert  (=> (<= 1 $generated@@27) (forall (($generated@@36 T@U) ) (!  (=> (or ($generated@@31 ($generated@@29 $generated@@30 $generated@@36)) (and (< 1 $generated@@27) (and (or (not (= $generated@@36 $generated@@32)) (not true)) ($generated@@33 $generated@@30 $generated@@36 $generated@@34)))) (= ($generated@@28 true ($generated@@29 $generated@@30 $generated@@36)) ($generated@@35 ($generated@@29 $generated@@30 $generated@@36))))
 :weight 3
 :pattern ( ($generated@@28 true ($generated@@29 $generated@@30 $generated@@36)))
))))
(assert (= ($generated@@37 $generated) $generated@@0))
(assert  (=> (<= 0 $generated@@27) (forall (($generated@@41 Int) ) (!  (=> (or ($generated@@39 $generated@@41) (and (< 0 $generated@@27) (and (<= ($generated@@40 30) $generated@@41) (< $generated@@41 40)))) (= ($generated@@38 true $generated@@41) (= $generated@@41 ($generated@@40 34))))
 :pattern ( ($generated@@38 true $generated@@41))
))))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! ($generated@@42 $generated@@13 $generated@@44 $generated@@43 $generated@@45)
 :pattern ( ($generated@@42 $generated@@13 $generated@@44 $generated@@43 $generated@@45))
)))
(assert (= ($generated@@46 $generated@@47) $generated@@6))
(assert (= ($generated@@46 $generated@@48) $generated@@7))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@42 $generated@@30 $generated@@50 $generated@@34 $generated@@51) ($generated@@42 $generated@@30 $generated@@50 $generated@@49 $generated@@51))
 :pattern ( ($generated@@42 $generated@@30 $generated@@50 $generated@@34 $generated@@51))
 :pattern ( ($generated@@42 $generated@@30 $generated@@50 $generated@@49 $generated@@51))
)))
(assert (= ($generated@@11 $generated@@52) 4))
(assert ($generated@@33 $generated@@52 $generated@@47 $generated@@53))
(assert ($generated@@33 $generated@@52 $generated@@48 $generated@@53))
(assert  (and (and (and (and (and (and (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@55 $generated@@62 $generated@@63 ($generated@@59 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@66) $generated@@64)
 :weight 0
)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (or (= $generated@@71 $generated@@72) (= ($generated@@55 $generated@@67 $generated@@68 ($generated@@59 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@72) ($generated@@55 $generated@@67 $generated@@68 $generated@@70 $generated@@72)))
 :weight 0
))) (= ($generated@@11 $generated@@56) 5)) (= ($generated@@11 $generated@@57) 6)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (= ($generated@@11 ($generated@@58 $generated@@73 $generated@@74)) 7))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@60 ($generated@@58 $generated@@75 $generated@@76)) $generated@@75)
 :pattern ( ($generated@@58 $generated@@75 $generated@@76))
))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@61 ($generated@@58 $generated@@77 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@58 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@42 $generated@@30 $generated@@79 $generated@@49 $generated@@80)  (or (= $generated@@79 $generated@@32) ($generated@@16 ($generated@@54 $generated@@12 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@30 ($generated@@58 $generated@@56 $generated@@57) $generated@@80 $generated@@79) $generated@@1)))))
 :pattern ( ($generated@@42 $generated@@30 $generated@@79 $generated@@49 $generated@@80))
)))
(assert  (=> (<= 0 $generated@@27) (forall (($generated@@81 Int) ) (!  (=> (or ($generated@@39 ($generated@@40 $generated@@81)) (and (< 0 $generated@@27) (and (<= ($generated@@40 30) $generated@@81) (< $generated@@81 40)))) (= ($generated@@38 true ($generated@@40 $generated@@81)) (= ($generated@@40 $generated@@81) ($generated@@40 34))))
 :weight 3
 :pattern ( ($generated@@38 true ($generated@@40 $generated@@81)))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@82 $generated@@83 $generated@@84) (= $generated@@83 $generated@@84))
 :pattern ( ($generated@@82 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@40 $generated@@85) $generated@@85)
 :pattern ( ($generated@@40 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@29 $generated@@87 $generated@@86) $generated@@86)
 :pattern ( ($generated@@29 $generated@@87 $generated@@86))
)))
(assert  (=> (<= 1 $generated@@27) (forall (($generated@@91 T@U) ) (!  (=> (or ($generated@@89 $generated@@91) (and (< 1 $generated@@27) ($generated@@33 $generated@@52 $generated@@91 $generated@@53))) (and ($generated@@90 $generated@@91) (= ($generated@@88 true $generated@@91) ($generated@@82 $generated@@91 $generated@@48))))
 :pattern ( ($generated@@88 true $generated@@91))
))))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@92 $generated@@93) (= ($generated@@46 $generated@@93) $generated@@6))
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@94 $generated@@95) (= ($generated@@46 $generated@@95) $generated@@7))
 :pattern ( ($generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 ($generated@@54 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@54 $generated@@98 $generated@@97))
)))
(assert  (=> (< 0 $generated@@27) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (and (and ($generated@@99 $generated@@100) (and (or (not (= $generated@@101 $generated@@32)) (not true)) ($generated@@33 $generated@@30 $generated@@101 $generated@@49))) ($generated@@16 ($generated@@54 $generated@@12 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@30 ($generated@@58 $generated@@56 $generated@@57) $generated@@100 $generated@@101) $generated@@1)))) ($generated@@42 $generated@@12 ($generated@@15 ($generated@@35 $generated@@101)) $generated $generated@@100))
 :pattern ( ($generated@@35 $generated@@101) ($generated@@54 $generated@@12 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@30 ($generated@@58 $generated@@56 $generated@@57) $generated@@100 $generated@@101) $generated@@1)))
))))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@92 $generated@@102) (= $generated@@102 $generated@@47))
 :pattern ( ($generated@@92 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@94 $generated@@103) (= $generated@@103 $generated@@48))
 :pattern ( ($generated@@94 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@104 ($generated@@96 $generated@@108 $generated@@105) $generated@@106 $generated@@107) ($generated@@42 $generated@@108 $generated@@105 $generated@@106 $generated@@107))
 :pattern ( ($generated@@104 ($generated@@96 $generated@@108 $generated@@105) $generated@@106 $generated@@107))
)))
(assert  (=> (<= 1 $generated@@27) (forall (($generated@@109 T@U) ) (!  (=> (or ($generated@@89 ($generated@@29 $generated@@52 $generated@@109)) (and (< 1 $generated@@27) ($generated@@33 $generated@@52 $generated@@109 $generated@@53))) (and ($generated@@90 ($generated@@29 $generated@@52 $generated@@109)) (= ($generated@@88 true ($generated@@29 $generated@@52 $generated@@109)) ($generated@@82 $generated@@109 $generated@@48))))
 :weight 3
 :pattern ( ($generated@@88 true ($generated@@29 $generated@@52 $generated@@109)))
))))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@33 $generated@@30 $generated@@110 $generated@@34)  (and ($generated@@33 $generated@@30 $generated@@110 $generated@@49) (or (not (= $generated@@110 $generated@@32)) (not true))))
 :pattern ( ($generated@@33 $generated@@30 $generated@@110 $generated@@34))
 :pattern ( ($generated@@33 $generated@@30 $generated@@110 $generated@@49))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@90 $generated@@111) (or ($generated@@92 $generated@@111) ($generated@@94 $generated@@111)))
 :pattern ( ($generated@@90 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@33 $generated@@52 $generated@@112 $generated@@53) (or ($generated@@92 $generated@@112) ($generated@@94 $generated@@112)))
 :pattern ( ($generated@@94 $generated@@112) ($generated@@33 $generated@@52 $generated@@112 $generated@@53))
 :pattern ( ($generated@@92 $generated@@112) ($generated@@33 $generated@@52 $generated@@112 $generated@@53))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (and ($generated@@92 $generated@@113) ($generated@@92 $generated@@114)) ($generated@@82 $generated@@113 $generated@@114))
 :pattern ( ($generated@@82 $generated@@113 $generated@@114) ($generated@@92 $generated@@113))
 :pattern ( ($generated@@82 $generated@@113 $generated@@114) ($generated@@92 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (and ($generated@@94 $generated@@115) ($generated@@94 $generated@@116)) ($generated@@82 $generated@@115 $generated@@116))
 :pattern ( ($generated@@82 $generated@@115 $generated@@116) ($generated@@94 $generated@@115))
 :pattern ( ($generated@@82 $generated@@115 $generated@@116) ($generated@@94 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@54 $generated@@118 ($generated@@96 $generated@@118 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@96 $generated@@118 $generated@@117))
)))
(assert  (=> (< 0 $generated@@27) (forall (($generated@@119 T@U) ) (!  (=> (and (or (not (= $generated@@119 $generated@@32)) (not true)) ($generated@@33 $generated@@30 $generated@@119 $generated@@49)) ($generated@@33 $generated@@12 ($generated@@15 ($generated@@35 $generated@@119)) $generated))
 :pattern ( ($generated@@35 $generated@@119))
))))
(assert  (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@120 $generated@@123 $generated@@124 $generated@@125 ($generated@@122 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@128 $generated@@129) $generated@@126)
 :weight 0
)) (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@120 $generated@@130 $generated@@131 $generated@@132 ($generated@@122 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@120 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@120 $generated@@139 $generated@@140 $generated@@141 ($generated@@122 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@120 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 Bool) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@16 ($generated@@120 $generated@@30 $generated@@56 $generated@@12 ($generated@@121 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))  (=> (and (or (not (= $generated@@152 $generated@@148)) (not true)) ($generated@@16 ($generated@@54 $generated@@12 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@30 ($generated@@58 $generated@@56 $generated@@57) $generated@@149 $generated@@152) $generated@@150)))) $generated@@151))
 :pattern ( ($generated@@120 $generated@@30 $generated@@56 $generated@@12 ($generated@@121 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))
)))
(assert  (=> (<= 1 $generated@@27) (forall (($generated@@154 T@U) ) (!  (=> (or ($generated@@31 $generated@@154) (and (< 1 $generated@@27) (and (or (not (= $generated@@154 $generated@@32)) (not true)) ($generated@@33 $generated@@30 $generated@@154 $generated@@34)))) (= ($generated@@28 true $generated@@154) ($generated@@35 $generated@@154)))
 :pattern ( ($generated@@28 true $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and ($generated@@99 $generated@@156) ($generated@@33 $generated@@52 $generated@@155 $generated@@53)) ($generated@@42 $generated@@52 $generated@@155 $generated@@53 $generated@@156))
 :pattern ( ($generated@@42 $generated@@52 $generated@@155 $generated@@53 $generated@@156))
)))
(assert (= ($generated@@37 $generated@@34) $generated@@2))
(assert (= ($generated@@157 $generated@@34) $generated@@8))
(assert (= ($generated@@37 $generated@@53) $generated@@3))
(assert (= ($generated@@157 $generated@@53) $generated@@9))
(assert (= ($generated@@37 $generated@@49) $generated@@4))
(assert (= ($generated@@157 $generated@@49) $generated@@8))
(assert (= ($generated@@37 $generated@@43) $generated@@5))
(assert (= ($generated@@157 $generated@@43) $generated@@10))
(assert (= $generated@@47 ($generated@@29 $generated@@52 $generated@@47)))
(assert (= $generated@@48 ($generated@@29 $generated@@52 $generated@@48)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@33 $generated@@30 $generated@@160 $generated@@49)  (or (= $generated@@160 $generated@@32) ($generated@@158 ($generated@@159 $generated@@160))))
 :pattern ( ($generated@@33 $generated@@30 $generated@@160 $generated@@49))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@33 $generated@@13 $generated@@161 $generated@@43)  (and (<= ($generated@@40 30) ($generated@@18 $generated@@161)) (< ($generated@@18 $generated@@161) 40)))
 :pattern ( ($generated@@33 $generated@@13 $generated@@161 $generated@@43))
)))
(assert (forall (($generated@@162 Int) ) (! (= ($generated@@96 $generated@@13 ($generated@@17 ($generated@@40 $generated@@162))) ($generated@@29 $generated@@57 ($generated@@96 $generated@@13 ($generated@@17 $generated@@162))))
 :pattern ( ($generated@@96 $generated@@13 ($generated@@17 ($generated@@40 $generated@@162))))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@96 $generated@@164 ($generated@@29 $generated@@164 $generated@@163)) ($generated@@29 $generated@@57 ($generated@@96 $generated@@164 $generated@@163)))
 :pattern ( ($generated@@96 $generated@@164 ($generated@@29 $generated@@164 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! ($generated@@42 $generated@@12 $generated@@166 $generated $generated@@165)
 :pattern ( ($generated@@42 $generated@@12 $generated@@166 $generated $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! ($generated@@33 $generated@@12 $generated@@167 $generated)
 :pattern ( ($generated@@33 $generated@@12 $generated@@167 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () Bool)
(declare-fun $generated@@173 () Bool)
(declare-fun $generated@@174 () Bool)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 39) (let (($generated@@186  (=> (and (=> ($generated@@35 $generated@@168) ($generated@@90 $generated@@169)) (= (ControlFlow 0 23) (- 0 22))) (or (or (not ($generated@@35 $generated@@168)) ($generated@@82 $generated@@169 $generated@@47)) (= $generated@@170 ($generated@@40 39))))))
(let (($generated@@187  (=> (and (or (not ($generated@@35 $generated@@168)) ($generated@@82 $generated@@169 $generated@@47)) (= (ControlFlow 0 26) 23)) $generated@@186)))
(let (($generated@@188  (=> (and (not (or (not ($generated@@35 $generated@@168)) ($generated@@82 $generated@@169 $generated@@47))) (= $generated@@171 ($generated@@40 39))) (and (=> (= (ControlFlow 0 24) (- 0 25)) (and (<= ($generated@@40 30) $generated@@171) (< $generated@@171 40))) (=> (and (<= ($generated@@40 30) $generated@@171) (< $generated@@171 40)) (=> (= (ControlFlow 0 24) 23) $generated@@186))))))
(let (($generated@@189  (=> (not ($generated@@35 $generated@@168)) (and (=> (= (ControlFlow 0 28) 24) $generated@@188) (=> (= (ControlFlow 0 28) 26) $generated@@187)))))
(let (($generated@@190  (=> ($generated@@35 $generated@@168) (and (=> (= (ControlFlow 0 27) 24) $generated@@188) (=> (= (ControlFlow 0 27) 26) $generated@@187)))))
(let (($generated@@191  (=> (and (and (and (and ($generated@@28 $generated@@172 $generated@@168) ($generated@@88 $generated@@173 $generated@@169)) ($generated@@38 $generated@@174 $generated@@170)) (and (and ($generated@@99 $generated@@175) ($generated@@176 $generated@@175)) (and (= $generated@@177 $generated@@175) $generated@@172))) (and (and (and ($generated@@99 $generated@@178) ($generated@@176 $generated@@178)) (and (= $generated@@175 $generated@@178) $generated@@173)) (and (and ($generated@@99 $generated@@179) ($generated@@176 $generated@@179)) (and (= $generated@@178 $generated@@179) $generated@@174)))) (and (=> (= (ControlFlow 0 29) (- 0 30)) (or (not (= $generated@@168 $generated@@32)) (not true))) (and (=> (= (ControlFlow 0 29) 27) $generated@@190) (=> (= (ControlFlow 0 29) 28) $generated@@189))))))
(let (($generated@@192 true))
(let (($generated@@193  (=> (and ($generated@@31 $generated@@168) (=> ($generated@@28 $generated@@172 $generated@@168) (and ($generated@@89 $generated@@169) (=> ($generated@@88 $generated@@173 $generated@@169) ($generated@@39 $generated@@170))))) (and (=> (= (ControlFlow 0 31) 29) $generated@@191) (=> (= (ControlFlow 0 31) 21) $generated@@192)))))
(let (($generated@@194  (=> (and (not (and ($generated@@28 $generated@@172 $generated@@168) ($generated@@88 $generated@@173 $generated@@169))) (= (ControlFlow 0 33) 31)) $generated@@193)))
(let (($generated@@195  (=> (and (and (and ($generated@@28 $generated@@172 $generated@@168) ($generated@@88 $generated@@173 $generated@@169)) ($generated@@104 ($generated@@96 $generated@@13 ($generated@@17 $generated@@170)) $generated@@43 $generated@@177)) (and ($generated@@39 $generated@@170) (= (ControlFlow 0 32) 31))) $generated@@193)))
(let (($generated@@196  (=> (not ($generated@@28 $generated@@172 $generated@@168)) (and (=> (= (ControlFlow 0 35) 32) $generated@@195) (=> (= (ControlFlow 0 35) 33) $generated@@194)))))
(let (($generated@@197  (=> ($generated@@28 $generated@@172 $generated@@168) (=> (and ($generated@@104 ($generated@@96 $generated@@52 $generated@@169) $generated@@53 $generated@@177) ($generated@@89 $generated@@169)) (and (=> (= (ControlFlow 0 34) 32) $generated@@195) (=> (= (ControlFlow 0 34) 33) $generated@@194))))))
(let (($generated@@198  (and (=> (= (ControlFlow 0 36) (- 0 37)) (or (not (= $generated@@168 $generated@@32)) (not true))) (=> (or (not (= $generated@@168 $generated@@32)) (not true)) (=> (and ($generated@@104 ($generated@@96 $generated@@30 $generated@@168) $generated@@49 $generated@@177) ($generated@@31 $generated@@168)) (and (=> (= (ControlFlow 0 36) 34) $generated@@197) (=> (= (ControlFlow 0 36) 35) $generated@@196)))))))
(let (($generated@@199  (=> (and ($generated@@31 $generated@@168) ($generated@@89 $generated@@169)) (=> (and (and ($generated@@39 $generated@@170) ($generated@@31 $generated@@168)) (and ($generated@@89 $generated@@169) ($generated@@39 $generated@@170))) (=> (and (and (and (and (and (and (and (not ($generated@@28 $generated@@172 $generated@@168)) (not ($generated@@88 $generated@@173 $generated@@169))) (not ($generated@@38 $generated@@174 $generated@@170))) (not ($generated@@28 $generated@@172 $generated@@168))) (not ($generated@@88 $generated@@173 $generated@@169))) (not ($generated@@38 $generated@@174 $generated@@170))) (not ($generated@@16 ($generated@@29 $generated@@12 ($generated@@15 true))))) (= (ControlFlow 0 20) (- 0 19))) false)))))
(let (($generated@@200  (=> (and (and ($generated@@104 ($generated@@96 $generated@@13 ($generated@@17 $generated@@170)) $generated@@43 $generated@@177) ($generated@@39 $generated@@170)) (and ($generated@@39 $generated@@170) ($generated@@38 $generated@@174 $generated@@170))) (=> (and (and (and ($generated@@99 $generated@@180) ($generated@@176 $generated@@180)) (= $generated@@177 $generated@@180)) (and $generated@@174 (= $generated@@181 ($generated@@40 34)))) (and (=> (= (ControlFlow 0 17) (- 0 18)) (and (<= ($generated@@40 30) $generated@@181) (< $generated@@181 40))) (=> (and (<= ($generated@@40 30) $generated@@181) (< $generated@@181 40)) (=> (= (ControlFlow 0 17) (- 0 16)) (= $generated@@170 ($generated@@40 34)))))))))
(let (($generated@@201  (=> (and ($generated@@104 ($generated@@96 $generated@@52 $generated@@169) $generated@@53 $generated@@177) ($generated@@89 $generated@@169)) (=> (and (and (and ($generated@@89 $generated@@169) ($generated@@88 $generated@@173 $generated@@169)) (and ($generated@@99 $generated@@182) ($generated@@176 $generated@@182))) (and (and (= $generated@@177 $generated@@182) $generated@@173) (and ($generated@@90 $generated@@169) (= (ControlFlow 0 15) (- 0 14))))) ($generated@@82 $generated@@169 $generated@@48)))))
(let (($generated@@202  (and (=> (= (ControlFlow 0 11) (- 0 13)) (or (not (= $generated@@168 $generated@@32)) (not true))) (=> (or (not (= $generated@@168 $generated@@32)) (not true)) (=> (and (and (and ($generated@@104 ($generated@@96 $generated@@30 $generated@@168) $generated@@49 $generated@@177) ($generated@@31 $generated@@168)) (and ($generated@@31 $generated@@168) ($generated@@28 $generated@@172 $generated@@168))) (and (and ($generated@@99 $generated@@183) ($generated@@176 $generated@@183)) (and (= $generated@@177 $generated@@183) $generated@@172))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (not (= $generated@@168 $generated@@32)) (not true))) (=> (= (ControlFlow 0 11) (- 0 10)) ($generated@@35 $generated@@168))))))))
(let (($generated@@203  (=> ($generated@@104 ($generated@@96 $generated@@13 ($generated@@17 $generated@@170)) $generated@@43 $generated@@177) (=> (and (and ($generated@@39 $generated@@170) ($generated@@39 $generated@@170)) (and ($generated@@38 $generated@@174 $generated@@170) (= $generated@@184 ($generated@@40 34)))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= ($generated@@40 30) $generated@@184) (< $generated@@184 40))) (=> (and (<= ($generated@@40 30) $generated@@184) (< $generated@@184 40)) (=> (= (ControlFlow 0 8) (- 0 7)) (= $generated@@170 ($generated@@40 34)))))))))
(let (($generated@@204  (=> (and ($generated@@104 ($generated@@96 $generated@@52 $generated@@169) $generated@@53 $generated@@177) ($generated@@89 $generated@@169)) (=> (and (and ($generated@@89 $generated@@169) ($generated@@88 $generated@@173 $generated@@169)) (and ($generated@@90 $generated@@169) (= (ControlFlow 0 6) (- 0 5)))) ($generated@@82 $generated@@169 $generated@@48)))))
(let (($generated@@205  (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@168 $generated@@32)) (not true))) (=> (or (not (= $generated@@168 $generated@@32)) (not true)) (=> (and (and ($generated@@104 ($generated@@96 $generated@@30 $generated@@168) $generated@@49 $generated@@177) ($generated@@31 $generated@@168)) (and ($generated@@31 $generated@@168) ($generated@@28 $generated@@172 $generated@@168))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@168 $generated@@32)) (not true))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@35 $generated@@168))))))))
(let (($generated@@206  (=> (= $generated@@185 ($generated@@121 $generated@@32 $generated@@177 $generated@@1 false)) (and (and (and (and (and (and (and (=> (= (ControlFlow 0 38) 2) $generated@@205) (=> (= (ControlFlow 0 38) 6) $generated@@204)) (=> (= (ControlFlow 0 38) 8) $generated@@203)) (=> (= (ControlFlow 0 38) 11) $generated@@202)) (=> (= (ControlFlow 0 38) 15) $generated@@201)) (=> (= (ControlFlow 0 38) 17) $generated@@200)) (=> (= (ControlFlow 0 38) 36) $generated@@198)) (=> (= (ControlFlow 0 38) 20) $generated@@199)))))
(let (($generated@@207  (=> (and (and ($generated@@99 $generated@@177) ($generated@@176 $generated@@177)) (and ($generated@@33 $generated@@30 $generated@@168 $generated@@34) ($generated@@42 $generated@@30 $generated@@168 $generated@@34 $generated@@177))) (=> (and (and (and ($generated@@33 $generated@@52 $generated@@169 $generated@@53) ($generated@@42 $generated@@52 $generated@@169 $generated@@53 $generated@@177)) ($generated@@90 $generated@@169)) (and (and (<= ($generated@@40 30) $generated@@170) (< $generated@@170 40)) (and (= 2 $generated@@27) (= (ControlFlow 0 39) 38)))) $generated@@206))))
$generated@@207)))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 8) (- 7))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 23) (- 22))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
