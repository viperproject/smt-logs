(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@20 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@T T@T) T@T)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@26 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@27 (T@T) T@T)
(declare-fun $generated@@28 (T@T) T@T)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U Int) T@U)
(declare-fun $generated@@55 (T@U Int) T@U)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@U) Int)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int Int) Int)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@95 (T@T T@U T@U) Bool)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (= ($generated@@17 $generated@@18) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@29 T@T) ($generated@@30 T@T) ($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@20 $generated@@29 $generated@@30 ($generated@@26 $generated@@29 $generated@@30 $generated@@32 $generated@@33 $generated@@31) $generated@@33) $generated@@31)
 :weight 0
)) (forall (($generated@@34 T@T) ($generated@@35 T@T) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (or (= $generated@@38 $generated@@39) (= ($generated@@20 $generated@@34 $generated@@35 ($generated@@26 $generated@@34 $generated@@35 $generated@@37 $generated@@38 $generated@@36) $generated@@39) ($generated@@20 $generated@@34 $generated@@35 $generated@@37 $generated@@39)))
 :weight 0
))) (= ($generated@@1 $generated@@21) 3)) (= ($generated@@1 $generated@@22) 4)) (= ($generated@@1 $generated@@23) 5)) (forall (($generated@@40 T@T) ($generated@@41 T@T) ) (= ($generated@@1 ($generated@@24 $generated@@40 $generated@@41)) 6))) (forall (($generated@@42 T@T) ($generated@@43 T@T) ) (! (= ($generated@@27 ($generated@@24 $generated@@42 $generated@@43)) $generated@@42)
 :pattern ( ($generated@@24 $generated@@42 $generated@@43))
))) (forall (($generated@@44 T@T) ($generated@@45 T@T) ) (! (= ($generated@@28 ($generated@@24 $generated@@44 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@24 $generated@@44 $generated@@45))
))))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> ($generated@@19 $generated@@46 $generated@@47) (forall (($generated@@48 T@U) ) (!  (=> ($generated@@6 ($generated@@25 $generated@@2 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@46 $generated@@48) $generated@@0))) ($generated@@6 ($generated@@25 $generated@@2 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@47 $generated@@48) $generated@@0))))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@47 $generated@@48) $generated@@0))
)))
 :pattern ( ($generated@@19 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 Int) ) (! (= ($generated@@49 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 Int) ($generated@@58 Int) ) (!  (=> (and (and (<= 0 $generated@@58) (< $generated@@58 $generated@@57)) (< $generated@@58 ($generated@@17 $generated@@56))) (= ($generated@@54 ($generated@@55 $generated@@56 $generated@@57) $generated@@58) ($generated@@54 $generated@@56 $generated@@58)))
 :weight 25
 :pattern ( ($generated@@54 ($generated@@55 $generated@@56 $generated@@57) $generated@@58))
 :pattern ( ($generated@@54 $generated@@56 $generated@@58) ($generated@@55 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@59 $generated@@60 $generated@@61)  (and (= ($generated@@17 $generated@@60) ($generated@@17 $generated@@61)) (forall (($generated@@62 Int) ) (!  (=> (and (<= 0 $generated@@62) (< $generated@@62 ($generated@@17 $generated@@60))) (= ($generated@@54 $generated@@60 $generated@@62) ($generated@@54 $generated@@61 $generated@@62)))
 :pattern ( ($generated@@54 $generated@@60 $generated@@62))
 :pattern ( ($generated@@54 $generated@@61 $generated@@62))
))))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@63 $generated@@65 ($generated@@25 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@25 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 Int) ) (!  (=> (and (<= 0 $generated@@68) (< $generated@@68 ($generated@@17 $generated@@67))) (< ($generated@@66 ($generated@@55 $generated@@67 $generated@@68)) ($generated@@66 $generated@@67)))
 :pattern ( ($generated@@66 ($generated@@55 $generated@@67 $generated@@68)))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@69 ($generated@@63 $generated@@74 $generated@@71) $generated@@72 $generated@@73) ($generated@@70 $generated@@74 $generated@@71 $generated@@72 $generated@@73))
 :pattern ( ($generated@@69 ($generated@@63 $generated@@74 $generated@@71) $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@19 $generated@@75 $generated@@76) (=> ($generated@@69 $generated@@77 $generated@@78 $generated@@75) ($generated@@69 $generated@@77 $generated@@78 $generated@@76)))
 :pattern ( ($generated@@19 $generated@@75 $generated@@76) ($generated@@69 $generated@@77 $generated@@78 $generated@@75))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (!  (=> ($generated@@19 $generated@@79 $generated@@80) (=> ($generated@@70 $generated@@83 $generated@@81 $generated@@82 $generated@@79) ($generated@@70 $generated@@83 $generated@@81 $generated@@82 $generated@@80)))
 :pattern ( ($generated@@19 $generated@@79 $generated@@80) ($generated@@70 $generated@@83 $generated@@81 $generated@@82 $generated@@79))
)))
(assert (forall (($generated@@85 Int) ($generated@@86 Int) ) (! (= ($generated@@84 $generated@@85 $generated@@86) (div $generated@@85 $generated@@86))
 :pattern ( ($generated@@84 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@59 $generated@@87 $generated@@88) (= $generated@@87 $generated@@88))
 :pattern ( ($generated@@59 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 Int) ) (!  (=> (and (<= 0 $generated@@90) (<= $generated@@90 ($generated@@17 $generated@@89))) (= ($generated@@17 ($generated@@55 $generated@@89 $generated@@90)) $generated@@90))
 :pattern ( ($generated@@17 ($generated@@55 $generated@@89 $generated@@90)))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or (not (= $generated@@91 $generated@@93)) (not true)) (=> (and ($generated@@19 $generated@@91 $generated@@92) ($generated@@19 $generated@@92 $generated@@93)) ($generated@@19 $generated@@91 $generated@@93)))
 :pattern ( ($generated@@19 $generated@@91 $generated@@92) ($generated@@19 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@94 ($generated@@63 $generated@@98 $generated@@96) $generated@@97) ($generated@@95 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@94 ($generated@@63 $generated@@98 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (<= 0 ($generated@@17 $generated@@99))
 :pattern ( ($generated@@17 $generated@@99))
)))
(assert (= ($generated@@1 $generated@@100) 7))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@70 $generated@@100 $generated@@102 ($generated@@101 $generated@@103) $generated@@104) (forall (($generated@@105 Int) ) (!  (=> (and (<= 0 $generated@@105) (< $generated@@105 ($generated@@17 $generated@@102))) ($generated@@69 ($generated@@54 $generated@@102 $generated@@105) $generated@@103 $generated@@104))
 :pattern ( ($generated@@54 $generated@@102 $generated@@105))
)))
 :pattern ( ($generated@@70 $generated@@100 $generated@@102 ($generated@@101 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 ($generated@@101 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@101 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 ($generated@@101 $generated@@109)) $generated)
 :pattern ( ($generated@@101 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@25 $generated@@111 ($generated@@63 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@63 $generated@@111 $generated@@110))
)))
(assert  (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@112 $generated@@115 $generated@@116 $generated@@117 ($generated@@114 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@120 $generated@@121) $generated@@118)
 :weight 0
)) (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@112 $generated@@122 $generated@@123 $generated@@124 ($generated@@114 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@112 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@112 $generated@@131 $generated@@132 $generated@@133 ($generated@@114 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@112 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 Bool) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@6 ($generated@@112 $generated@@23 $generated@@21 $generated@@2 ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))  (=> (and (or (not (= $generated@@144 $generated@@140)) (not true)) ($generated@@6 ($generated@@25 $generated@@2 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@141 $generated@@144) $generated@@142)))) $generated@@143))
 :pattern ( ($generated@@112 $generated@@23 $generated@@21 $generated@@2 ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@94 $generated@@146 ($generated@@101 $generated@@147)) (and (= ($generated@@63 $generated@@100 ($generated@@25 $generated@@100 $generated@@146)) $generated@@146) ($generated@@95 $generated@@100 ($generated@@25 $generated@@100 $generated@@146) ($generated@@101 $generated@@147))))
 :pattern ( ($generated@@94 $generated@@146 ($generated@@101 $generated@@147)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 Int) ) (! (= ($generated@@148 $generated@@149 $generated@@150 $generated@@151) (forall (($generated@@152 Int) ) (!  (=> (and (<= 0 $generated@@152) (< $generated@@152 $generated@@151)) (= ($generated@@54 $generated@@149 $generated@@152) ($generated@@54 $generated@@150 $generated@@152)))
 :pattern ( ($generated@@54 $generated@@149 $generated@@152))
 :pattern ( ($generated@@54 $generated@@150 $generated@@152))
)))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 Int) ) (! (= ($generated@@63 $generated@@3 ($generated@@7 ($generated@@49 $generated@@153))) ($generated@@51 $generated@@22 ($generated@@63 $generated@@3 ($generated@@7 $generated@@153))))
 :pattern ( ($generated@@63 $generated@@3 ($generated@@7 ($generated@@49 $generated@@153))))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@63 $generated@@155 ($generated@@51 $generated@@155 $generated@@154)) ($generated@@51 $generated@@22 ($generated@@63 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@63 $generated@@155 ($generated@@51 $generated@@155 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= ($generated@@17 $generated@@156) 0) (= $generated@@156 $generated@@18))
 :pattern ( ($generated@@17 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 Int) ) (!  (=> (= $generated@@158 0) (= ($generated@@55 $generated@@157 $generated@@158) $generated@@18))
 :pattern ( ($generated@@55 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@95 $generated@@100 $generated@@159 ($generated@@101 $generated@@160)) (forall (($generated@@161 Int) ) (!  (=> (and (<= 0 $generated@@161) (< $generated@@161 ($generated@@17 $generated@@159))) ($generated@@94 ($generated@@54 $generated@@159 $generated@@161) $generated@@160))
 :pattern ( ($generated@@54 $generated@@159 $generated@@161))
)))
 :pattern ( ($generated@@95 $generated@@100 $generated@@159 ($generated@@101 $generated@@160)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () Bool)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@174  (=> (not ($generated@@59 $generated@@162 $generated@@18)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (not (= ($generated@@49 2) 0)) (not true))) (=> (or (not (= ($generated@@49 2) 0)) (not true)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 ($generated@@84 ($generated@@17 $generated@@162) ($generated@@49 2))) (<= ($generated@@84 ($generated@@17 $generated@@162) ($generated@@49 2)) ($generated@@17 $generated@@162)))) (=> (and (<= 0 ($generated@@84 ($generated@@17 $generated@@162) ($generated@@49 2))) (<= ($generated@@84 ($generated@@17 $generated@@162) ($generated@@49 2)) ($generated@@17 $generated@@162))) (=> (and (= $generated@@163 ($generated@@55 $generated@@162 ($generated@@84 ($generated@@17 $generated@@162) ($generated@@49 2)))) (= (ControlFlow 0 6) (- 0 5))) (< ($generated@@66 $generated@@163) ($generated@@66 $generated@@162))))))))))
(let (($generated@@175 true))
(let (($generated@@176  (=> (and (<= ($generated@@17 $generated@@18) ($generated@@17 $generated@@162)) ($generated@@148 $generated@@18 $generated@@162 ($generated@@17 $generated@@18))) (and (=> (= (ControlFlow 0 9) 4) $generated@@175) (=> (= (ControlFlow 0 9) 6) $generated@@174)))))
(let (($generated@@177 true))
(let (($generated@@178  (=> $generated@@164 (and (=> (= (ControlFlow 0 10) 3) $generated@@177) (=> (= (ControlFlow 0 10) 9) $generated@@176)))))
(let (($generated@@179 true))
(let (($generated@@180  (and (=> (= (ControlFlow 0 11) 2) $generated@@179) (=> (= (ControlFlow 0 11) 10) $generated@@178))))
(let (($generated@@181 true))
(let (($generated@@182  (=> (and (and (and ($generated@@95 $generated@@100 $generated@@162 ($generated@@101 $generated@@165)) ($generated@@70 $generated@@100 $generated@@162 ($generated@@101 $generated@@165) $generated@@166)) (not false)) (and (and (forall (($generated@@183 T@U) ) (!  (=> (and (or (not (= $generated@@183 $generated@@167)) (not true)) ($generated@@6 ($generated@@25 $generated@@2 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@166 $generated@@183) $generated@@0)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@166 $generated@@183) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@166 $generated@@183)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@166 $generated@@183))
)) ($generated@@19 $generated@@166 $generated@@166)) (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (or (not (= $generated@@184 $generated@@167)) (not true)) ($generated@@6 ($generated@@25 $generated@@2 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@166 $generated@@184) $generated@@0)))) (or (= ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@166 $generated@@184) $generated@@185) ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@166 $generated@@184) $generated@@185)) ($generated@@6 ($generated@@112 $generated@@23 $generated@@21 $generated@@2 $generated@@168 $generated@@184 $generated@@185))))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@166 $generated@@184) $generated@@185))
)) (<= ($generated@@66 $generated@@162) ($generated@@66 $generated@@169))))) (and (=> (= (ControlFlow 0 12) 1) $generated@@181) (=> (= (ControlFlow 0 12) 11) $generated@@180)))))
(let (($generated@@186  (=> (and (= $generated@@168 ($generated@@113 $generated@@167 $generated@@166 $generated@@0 false)) (= (ControlFlow 0 13) 12)) $generated@@182)))
(let (($generated@@187  (=> (and (and ($generated@@170 $generated@@166) ($generated@@171 $generated@@166)) (and ($generated@@95 $generated@@100 $generated@@169 ($generated@@101 $generated@@165)) ($generated@@70 $generated@@100 $generated@@169 ($generated@@101 $generated@@165) $generated@@166))) (=> (and (and (and ($generated@@95 $generated@@100 $generated@@172 ($generated@@101 $generated@@165)) ($generated@@70 $generated@@100 $generated@@172 ($generated@@101 $generated@@165) $generated@@166)) true) (and (= 0 $generated@@173) (= (ControlFlow 0 14) 13))) $generated@@186))))
$generated@@187))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
