(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 (T@T) Int)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 (Bool) T@U)
(declare-fun $generated@@21 (T@U) Bool)
(declare-fun $generated@@22 (Int) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (Real) T@U)
(declare-fun $generated@@25 (T@U) Real)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@50 (T@T T@U T@U) Bool)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@60 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 (T@U T@U) T@U)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@109 (T@T T@U) T@U)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@114 (T@U T@U) Bool)
(declare-fun $generated@@118 (T@U T@U) T@U)
(declare-fun $generated@@119 (T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@190 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@192 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@16 $generated@@17) 0) (= ($generated@@16 $generated@@18) 1)) (= ($generated@@16 $generated@@19) 2)) (forall (($generated@@26 Bool) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Int) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Real) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15)
)
(assert (= ($generated@@32 $generated@@0) 0))
(assert (= ($generated@@33 $generated@@0) $generated@@1))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! ($generated@@35 ($generated@@34 $generated@@36 $generated@@37) $generated@@37)
 :pattern ( ($generated@@34 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@35 $generated@@38 $generated@@40) ($generated@@35 ($generated@@34 $generated@@38 $generated@@39) $generated@@40))
 :pattern ( ($generated@@34 $generated@@38 $generated@@39) ($generated@@35 $generated@@38 $generated@@40))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@35 ($generated@@34 $generated@@41 $generated@@42) $generated@@43)  (or (= $generated@@43 $generated@@42) ($generated@@35 $generated@@41 $generated@@43)))
 :pattern ( ($generated@@35 ($generated@@34 $generated@@41 $generated@@42) $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ) (!  (not ($generated@@35 $generated@@44 $generated@@45))
 :pattern ( ($generated@@35 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@35 ($generated@@46 $generated@@47 $generated@@48) $generated@@49)  (and ($generated@@35 $generated@@47 $generated@@49) ($generated@@35 $generated@@48 $generated@@49)))
 :pattern ( ($generated@@35 ($generated@@46 $generated@@47 $generated@@48) $generated@@49))
)))
(assert (= ($generated@@16 $generated@@51) 3))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@50 $generated@@51 $generated@@55 $generated@@52)  (or (= $generated@@55 $generated@@53) (= ($generated@@54 $generated@@55) $generated@@52)))
 :pattern ( ($generated@@50 $generated@@51 $generated@@55 $generated@@52))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@50 $generated@@51 $generated@@57 $generated@@56)  (or (= $generated@@57 $generated@@53) (= ($generated@@54 $generated@@57) $generated@@56)))
 :pattern ( ($generated@@50 $generated@@51 $generated@@57 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@46 ($generated@@46 $generated@@58 $generated@@59) $generated@@59) ($generated@@46 $generated@@58 $generated@@59))
 :pattern ( ($generated@@46 ($generated@@46 $generated@@58 $generated@@59) $generated@@59))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@60 $generated@@51 $generated@@63 $generated@@61 $generated@@64) ($generated@@60 $generated@@51 $generated@@63 $generated@@62 $generated@@64))
 :pattern ( ($generated@@60 $generated@@51 $generated@@63 $generated@@61 $generated@@64))
 :pattern ( ($generated@@60 $generated@@51 $generated@@63 $generated@@62 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@60 $generated@@51 $generated@@66 $generated@@65 $generated@@67) ($generated@@60 $generated@@51 $generated@@66 $generated@@52 $generated@@67))
 :pattern ( ($generated@@60 $generated@@51 $generated@@66 $generated@@65 $generated@@67))
 :pattern ( ($generated@@60 $generated@@51 $generated@@66 $generated@@52 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@60 $generated@@51 $generated@@69 $generated@@68 $generated@@70) ($generated@@60 $generated@@51 $generated@@69 $generated@@56 $generated@@70))
 :pattern ( ($generated@@60 $generated@@51 $generated@@69 $generated@@68 $generated@@70))
 :pattern ( ($generated@@60 $generated@@51 $generated@@69 $generated@@56 $generated@@70))
)))
(assert (= ($generated@@32 $generated@@71) 0))
(assert (= ($generated@@72 $generated@@4 $generated@@15) $generated@@71))
(assert  (not ($generated@@73 $generated@@71)))
(assert  (and (and (and (and (and (and (forall (($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@75 $generated@@82 $generated@@83 ($generated@@79 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@84) $generated@@86) $generated@@84)
 :weight 0
)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (or (= $generated@@91 $generated@@92) (= ($generated@@75 $generated@@87 $generated@@88 ($generated@@79 $generated@@87 $generated@@88 $generated@@90 $generated@@91 $generated@@89) $generated@@92) ($generated@@75 $generated@@87 $generated@@88 $generated@@90 $generated@@92)))
 :weight 0
))) (= ($generated@@16 $generated@@76) 4)) (= ($generated@@16 $generated@@77) 5)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@16 ($generated@@78 $generated@@93 $generated@@94)) 6))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@80 ($generated@@78 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@78 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@97 $generated@@98))
))))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@60 $generated@@51 $generated@@99 $generated@@62 $generated@@100)  (or (= $generated@@99 $generated@@53) ($generated@@21 ($generated@@74 $generated@@17 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@51 ($generated@@78 $generated@@76 $generated@@77) $generated@@100 $generated@@99) $generated@@0)))))
 :pattern ( ($generated@@60 $generated@@51 $generated@@99 $generated@@62 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@60 $generated@@51 $generated@@101 $generated@@52 $generated@@102)  (or (= $generated@@101 $generated@@53) ($generated@@21 ($generated@@74 $generated@@17 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@51 ($generated@@78 $generated@@76 $generated@@77) $generated@@102 $generated@@101) $generated@@0)))))
 :pattern ( ($generated@@60 $generated@@51 $generated@@101 $generated@@52 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@60 $generated@@51 $generated@@103 $generated@@56 $generated@@104)  (or (= $generated@@103 $generated@@53) ($generated@@21 ($generated@@74 $generated@@17 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@51 ($generated@@78 $generated@@76 $generated@@77) $generated@@104 $generated@@103) $generated@@0)))))
 :pattern ( ($generated@@60 $generated@@51 $generated@@103 $generated@@56 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@105 $generated@@106 $generated@@107) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@35 $generated@@106 $generated@@108) ($generated@@35 $generated@@107 $generated@@108))
 :pattern ( ($generated@@35 $generated@@106 $generated@@108))
 :pattern ( ($generated@@35 $generated@@107 $generated@@108))
)))
 :pattern ( ($generated@@105 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@109 $generated@@111 ($generated@@74 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@74 $generated@@111 $generated@@110))
)))
(assert (= ($generated@@16 $generated@@112) 7))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@50 $generated@@112 $generated@@115 ($generated@@113 $generated@@116)) (forall (($generated@@117 T@U) ) (!  (=> ($generated@@35 $generated@@115 $generated@@117) ($generated@@114 $generated@@117 $generated@@116))
 :pattern ( ($generated@@35 $generated@@115 $generated@@117))
)))
 :pattern ( ($generated@@50 $generated@@112 $generated@@115 ($generated@@113 $generated@@116)))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@50 $generated@@51 $generated@@122 ($generated@@118 $generated@@120 $generated@@121))  (and ($generated@@50 $generated@@51 $generated@@122 ($generated@@119 $generated@@120 $generated@@121)) (or (not (= $generated@@122 $generated@@53)) (not true))))
 :pattern ( ($generated@@50 $generated@@51 $generated@@122 ($generated@@118 $generated@@120 $generated@@121)))
 :pattern ( ($generated@@50 $generated@@51 $generated@@122 ($generated@@119 $generated@@120 $generated@@121)))
)))
(assert ($generated@@73 $generated@@0))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@123 ($generated@@109 $generated@@127 $generated@@124) $generated@@125 $generated@@126) ($generated@@60 $generated@@127 $generated@@124 $generated@@125 $generated@@126))
 :pattern ( ($generated@@123 ($generated@@109 $generated@@127 $generated@@124) $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@50 $generated@@51 $generated@@130 ($generated@@119 $generated@@128 $generated@@129))  (or (= $generated@@130 $generated@@53) (= ($generated@@54 $generated@@130) ($generated@@119 $generated@@128 $generated@@129))))
 :pattern ( ($generated@@50 $generated@@51 $generated@@130 ($generated@@119 $generated@@128 $generated@@129)))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@60 $generated@@51 $generated@@133 ($generated@@118 $generated@@131 $generated@@132) $generated@@134) ($generated@@60 $generated@@51 $generated@@133 ($generated@@119 $generated@@131 $generated@@132) $generated@@134))
 :pattern ( ($generated@@60 $generated@@51 $generated@@133 ($generated@@118 $generated@@131 $generated@@132) $generated@@134))
 :pattern ( ($generated@@60 $generated@@51 $generated@@133 ($generated@@119 $generated@@131 $generated@@132) $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> ($generated@@114 $generated@@135 $generated@@62) (and (= ($generated@@109 $generated@@51 ($generated@@74 $generated@@51 $generated@@135)) $generated@@135) ($generated@@50 $generated@@51 ($generated@@74 $generated@@51 $generated@@135) $generated@@62)))
 :pattern ( ($generated@@114 $generated@@135 $generated@@62))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@114 $generated@@136 $generated@@61) (and (= ($generated@@109 $generated@@51 ($generated@@74 $generated@@51 $generated@@136)) $generated@@136) ($generated@@50 $generated@@51 ($generated@@74 $generated@@51 $generated@@136) $generated@@61)))
 :pattern ( ($generated@@114 $generated@@136 $generated@@61))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@114 $generated@@137 $generated@@52) (and (= ($generated@@109 $generated@@51 ($generated@@74 $generated@@51 $generated@@137)) $generated@@137) ($generated@@50 $generated@@51 ($generated@@74 $generated@@51 $generated@@137) $generated@@52)))
 :pattern ( ($generated@@114 $generated@@137 $generated@@52))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@114 $generated@@138 $generated@@56) (and (= ($generated@@109 $generated@@51 ($generated@@74 $generated@@51 $generated@@138)) $generated@@138) ($generated@@50 $generated@@51 ($generated@@74 $generated@@51 $generated@@138) $generated@@56)))
 :pattern ( ($generated@@114 $generated@@138 $generated@@56))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@114 $generated@@139 $generated@@65) (and (= ($generated@@109 $generated@@51 ($generated@@74 $generated@@51 $generated@@139)) $generated@@139) ($generated@@50 $generated@@51 ($generated@@74 $generated@@51 $generated@@139) $generated@@65)))
 :pattern ( ($generated@@114 $generated@@139 $generated@@65))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> ($generated@@114 $generated@@140 $generated@@68) (and (= ($generated@@109 $generated@@51 ($generated@@74 $generated@@51 $generated@@140)) $generated@@140) ($generated@@50 $generated@@51 ($generated@@74 $generated@@51 $generated@@140) $generated@@68)))
 :pattern ( ($generated@@114 $generated@@140 $generated@@68))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@50 $generated@@51 $generated@@141 $generated@@61)  (and ($generated@@50 $generated@@51 $generated@@141 $generated@@62) (or (not (= $generated@@141 $generated@@53)) (not true))))
 :pattern ( ($generated@@50 $generated@@51 $generated@@141 $generated@@61))
 :pattern ( ($generated@@50 $generated@@51 $generated@@141 $generated@@62))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@50 $generated@@51 $generated@@142 $generated@@65)  (and ($generated@@50 $generated@@51 $generated@@142 $generated@@52) (or (not (= $generated@@142 $generated@@53)) (not true))))
 :pattern ( ($generated@@50 $generated@@51 $generated@@142 $generated@@65))
 :pattern ( ($generated@@50 $generated@@51 $generated@@142 $generated@@52))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@50 $generated@@51 $generated@@143 $generated@@68)  (and ($generated@@50 $generated@@51 $generated@@143 $generated@@56) (or (not (= $generated@@143 $generated@@53)) (not true))))
 :pattern ( ($generated@@50 $generated@@51 $generated@@143 $generated@@68))
 :pattern ( ($generated@@50 $generated@@51 $generated@@143 $generated@@56))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@60 $generated@@51 $generated@@146 ($generated@@119 $generated@@144 $generated@@145) $generated@@147)  (or (= $generated@@146 $generated@@53) ($generated@@21 ($generated@@74 $generated@@17 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@51 ($generated@@78 $generated@@76 $generated@@77) $generated@@147 $generated@@146) $generated@@0)))))
 :pattern ( ($generated@@60 $generated@@51 $generated@@146 ($generated@@119 $generated@@144 $generated@@145) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (and (= ($generated@@148 ($generated@@72 $generated@@149 $generated@@150)) $generated@@149) (= ($generated@@33 ($generated@@72 $generated@@149 $generated@@150)) $generated@@150))
 :pattern ( ($generated@@72 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@114 ($generated@@109 $generated@@153 $generated@@151) $generated@@152) ($generated@@50 $generated@@153 $generated@@151 $generated@@152))
 :pattern ( ($generated@@114 ($generated@@109 $generated@@153 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and ($generated@@154 $generated@@155) (and (or (not (= $generated@@156 $generated@@53)) (not true)) (= ($generated@@54 $generated@@156) $generated@@52))) ($generated@@21 ($generated@@74 $generated@@17 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@51 ($generated@@78 $generated@@76 $generated@@77) $generated@@155 $generated@@156) $generated@@0)))) ($generated@@60 $generated@@112 ($generated@@74 $generated@@112 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@51 ($generated@@78 $generated@@76 $generated@@77) $generated@@155 $generated@@156) $generated@@71)) ($generated@@113 ($generated@@119 $generated@@65 $generated@@68)) $generated@@155))
 :pattern ( ($generated@@74 $generated@@112 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@51 ($generated@@78 $generated@@76 $generated@@77) $generated@@155 $generated@@156) $generated@@71)))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@60 $generated@@112 $generated@@157 ($generated@@113 $generated@@158) $generated@@159) (forall (($generated@@160 T@U) ) (!  (=> ($generated@@35 $generated@@157 $generated@@160) ($generated@@123 $generated@@160 $generated@@158 $generated@@159))
 :pattern ( ($generated@@35 $generated@@157 $generated@@160))
)))
 :pattern ( ($generated@@60 $generated@@112 $generated@@157 ($generated@@113 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@161 ($generated@@119 $generated@@162 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@119 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@164 ($generated@@119 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@119 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@167 ($generated@@118 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@118 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@170 ($generated@@118 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@118 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! ($generated@@50 $generated@@51 $generated@@173 $generated@@62)
 :pattern ( ($generated@@50 $generated@@51 $generated@@173 $generated@@62))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and ($generated@@154 $generated@@174) (and (or (not (= $generated@@175 $generated@@53)) (not true)) (= ($generated@@54 $generated@@175) $generated@@52))) ($generated@@50 $generated@@112 ($generated@@74 $generated@@112 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@51 ($generated@@78 $generated@@76 $generated@@77) $generated@@174 $generated@@175) $generated@@71)) ($generated@@113 ($generated@@119 $generated@@65 $generated@@68))))
 :pattern ( ($generated@@74 $generated@@112 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@51 ($generated@@78 $generated@@76 $generated@@77) $generated@@174 $generated@@175) $generated@@71)))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@176 ($generated@@113 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@113 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@178 ($generated@@113 $generated@@179)) $generated)
 :pattern ( ($generated@@113 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@74 $generated@@181 ($generated@@109 $generated@@181 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@109 $generated@@181 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@46 $generated@@182 ($generated@@46 $generated@@182 $generated@@183)) ($generated@@46 $generated@@182 $generated@@183))
 :pattern ( ($generated@@46 $generated@@182 ($generated@@46 $generated@@182 $generated@@183)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> ($generated@@114 $generated@@186 ($generated@@119 $generated@@184 $generated@@185)) (and (= ($generated@@109 $generated@@51 ($generated@@74 $generated@@51 $generated@@186)) $generated@@186) ($generated@@50 $generated@@51 ($generated@@74 $generated@@51 $generated@@186) ($generated@@119 $generated@@184 $generated@@185))))
 :pattern ( ($generated@@114 $generated@@186 ($generated@@119 $generated@@184 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@114 $generated@@189 ($generated@@118 $generated@@187 $generated@@188)) (and (= ($generated@@109 $generated@@51 ($generated@@74 $generated@@51 $generated@@189)) $generated@@189) ($generated@@50 $generated@@51 ($generated@@74 $generated@@51 $generated@@189) ($generated@@118 $generated@@187 $generated@@188))))
 :pattern ( ($generated@@114 $generated@@189 ($generated@@118 $generated@@187 $generated@@188)))
)))
(assert  (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@190 $generated@@193 $generated@@194 $generated@@195 ($generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@198 $generated@@199) $generated@@196)
 :weight 0
)) (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@190 $generated@@200 $generated@@201 $generated@@202 ($generated@@192 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@190 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@190 $generated@@209 $generated@@210 $generated@@211 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@190 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (= ($generated@@21 ($generated@@190 $generated@@51 $generated@@76 $generated@@17 ($generated@@191 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (or (not (= $generated@@222 $generated@@218)) (not true)) ($generated@@21 ($generated@@74 $generated@@17 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@51 ($generated@@78 $generated@@76 $generated@@77) $generated@@219 $generated@@222) $generated@@220)))) $generated@@221))
 :pattern ( ($generated@@190 $generated@@51 $generated@@76 $generated@@17 ($generated@@191 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (and (= ($generated@@178 ($generated@@119 $generated@@225 $generated@@226)) $generated@@8) (= ($generated@@224 ($generated@@119 $generated@@225 $generated@@226)) $generated@@14))
 :pattern ( ($generated@@119 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (and (= ($generated@@178 ($generated@@118 $generated@@227 $generated@@228)) $generated@@10) (= ($generated@@224 ($generated@@118 $generated@@227 $generated@@228)) $generated@@14))
 :pattern ( ($generated@@118 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> ($generated@@114 $generated@@229 ($generated@@113 $generated@@230)) (and (= ($generated@@109 $generated@@112 ($generated@@74 $generated@@112 $generated@@229)) $generated@@229) ($generated@@50 $generated@@112 ($generated@@74 $generated@@112 $generated@@229) ($generated@@113 $generated@@230))))
 :pattern ( ($generated@@114 $generated@@229 ($generated@@113 $generated@@230)))
)))
(assert (= ($generated@@178 $generated@@62) $generated@@2))
(assert (= ($generated@@224 $generated@@62) $generated@@11))
(assert (= ($generated@@178 $generated@@61) $generated@@3))
(assert (= ($generated@@224 $generated@@61) $generated@@11))
(assert (= ($generated@@178 $generated@@52) $generated@@5))
(assert (= ($generated@@224 $generated@@52) $generated@@12))
(assert (= ($generated@@178 $generated@@56) $generated@@6))
(assert (= ($generated@@224 $generated@@56) $generated@@13))
(assert (= ($generated@@178 $generated@@65) $generated@@7))
(assert (= ($generated@@224 $generated@@65) $generated@@12))
(assert (= ($generated@@178 $generated@@68) $generated@@9))
(assert (= ($generated@@224 $generated@@68) $generated@@13))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@240  (=> (= $generated@@231 ($generated@@191 $generated@@53 $generated@@232 $generated@@0 false)) (=> (and (= $generated@@233 ($generated@@74 $generated@@112 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@51 ($generated@@78 $generated@@76 $generated@@77) $generated@@232 $generated@@234) $generated@@71))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@105 ($generated@@46 $generated@@233 $generated@@235) ($generated@@34 $generated@@44 ($generated@@109 $generated@@51 $generated@@53)))))))
(let (($generated@@241  (=> (and ($generated@@154 $generated@@232) ($generated@@236 $generated@@232)) (=> (and (and (and (and (or (not (= $generated@@234 $generated@@53)) (not true)) (and ($generated@@50 $generated@@51 $generated@@234 $generated@@65) ($generated@@60 $generated@@51 $generated@@234 $generated@@65 $generated@@232))) (and ($generated@@50 $generated@@112 $generated@@235 ($generated@@113 ($generated@@119 $generated@@68 $generated@@65))) ($generated@@60 $generated@@112 $generated@@235 ($generated@@113 ($generated@@119 $generated@@68 $generated@@65)) $generated@@232))) (and (and ($generated@@50 $generated@@112 $generated@@237 ($generated@@113 $generated@@62)) ($generated@@60 $generated@@112 $generated@@237 ($generated@@113 $generated@@62) $generated@@232)) true)) (and (and (and ($generated@@50 $generated@@112 $generated@@238 ($generated@@113 $generated@@62)) ($generated@@60 $generated@@112 $generated@@238 ($generated@@113 $generated@@62) $generated@@232)) true) (and (= 1 $generated@@239) (= (ControlFlow 0 3) 2)))) $generated@@240))))
$generated@@241)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
