(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (Int T@U T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@59 (T@U) Int)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@89 () T@U)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@110 (T@U) Bool)
(declare-fun $generated@@112 (T@T T@U) T@U)
(declare-fun $generated@@119 (T@U T@U) Bool)
(declare-fun $generated@@124 (T@U T@U) Bool)
(declare-fun $generated@@128 (T@U T@U) Int)
(declare-fun $generated@@129 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U T@U) Bool)
(declare-fun $generated@@138 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Int)
(declare-fun $generated@@188 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@189 () T@T)
(declare-fun $generated@@190 () T@T)
(declare-fun $generated@@191 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@192 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@193 () T@T)
(declare-fun $generated@@194 (T@T T@T) T@T)
(declare-fun $generated@@195 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@247 (Int Int) Int)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@24) 3))
(assert (forall (($generated@@27 Int) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26)  (and (and ($generated@@23 $generated@@9 ($generated@@13 $generated@@27) $generated) ($generated@@23 $generated@@24 $generated@@28 $generated@@26)) ($generated@@23 $generated@@24 $generated@@29 $generated@@26)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26))
)))
(assert (= ($generated@@7 $generated@@33) 4))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@32 $generated@@36) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@36 $generated@@26))) ($generated@@23 $generated@@33 ($generated@@31 $generated@@35 $generated@@36) ($generated@@34 $generated)))
 :pattern ( ($generated@@31 $generated@@35 $generated@@36))
))))
(assert (= ($generated@@37 $generated) $generated@@0))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! ($generated@@39 ($generated@@38 $generated@@40 $generated@@41) $generated@@41)
 :pattern ( ($generated@@38 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated@@39 $generated@@42 $generated@@44) ($generated@@39 ($generated@@38 $generated@@42 $generated@@43) $generated@@44))
 :pattern ( ($generated@@38 $generated@@42 $generated@@43) ($generated@@39 $generated@@42 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> ($generated@@39 $generated@@46 $generated@@48) ($generated@@39 ($generated@@45 $generated@@46 $generated@@47) $generated@@48))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47) ($generated@@39 $generated@@46 $generated@@48))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> ($generated@@39 $generated@@50 $generated@@51) ($generated@@39 ($generated@@45 $generated@@49 $generated@@50) $generated@@51))
 :pattern ( ($generated@@45 $generated@@49 $generated@@50) ($generated@@39 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@39 ($generated@@38 $generated@@52 $generated@@53) $generated@@54)  (or (= $generated@@54 $generated@@53) ($generated@@39 $generated@@52 $generated@@54)))
 :pattern ( ($generated@@39 ($generated@@38 $generated@@52 $generated@@53) $generated@@54))
)))
(assert (forall (($generated@@56 Int) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@55 ($generated@@25 $generated@@56 $generated@@57 $generated@@58)) $generated@@5)
 :pattern ( ($generated@@25 $generated@@56 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 Int) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@59 ($generated@@25 $generated@@60 $generated@@61 $generated@@62)) $generated@@60)
 :pattern ( ($generated@@25 $generated@@60 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 Int) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@63 ($generated@@25 $generated@@64 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@25 $generated@@64 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 Int) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@67 ($generated@@25 $generated@@68 $generated@@69 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@25 $generated@@68 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> ($generated@@39 $generated@@73 $generated@@74) (not ($generated@@39 ($generated@@71 $generated@@72 $generated@@73) $generated@@74)))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73) ($generated@@39 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (not ($generated@@39 $generated@@75 $generated@@76))
 :pattern ( ($generated@@39 $generated@@75 $generated@@76))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@32 ($generated@@78 $generated@@24 $generated@@83)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@83 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@78 $generated@@8 ($generated@@11 ($generated@@79 ($generated@@78 $generated@@24 $generated@@83)))))) (let (($generated@@84 ($generated@@78 $generated@@24 ($generated@@67 ($generated@@78 $generated@@24 $generated@@83)))))
(let (($generated@@85 ($generated@@78 $generated@@24 ($generated@@63 ($generated@@78 $generated@@24 $generated@@83)))))
 (and ($generated@@32 $generated@@85) ($generated@@32 $generated@@84))))) (= ($generated@@31 ($generated@@77 $generated@@82) ($generated@@78 $generated@@24 $generated@@83)) (ite ($generated@@79 ($generated@@78 $generated@@24 $generated@@83)) $generated@@75 (let (($generated@@86 ($generated@@78 $generated@@24 ($generated@@67 ($generated@@78 $generated@@24 $generated@@83)))))
(let (($generated@@87 ($generated@@78 $generated@@24 ($generated@@63 ($generated@@78 $generated@@24 $generated@@83)))))
(let (($generated@@88 ($generated@@80 ($generated@@59 ($generated@@78 $generated@@24 $generated@@83)))))
($generated@@45 ($generated@@45 ($generated@@38 $generated@@75 ($generated@@81 $generated@@9 ($generated@@13 $generated@@88))) ($generated@@31 ($generated@@77 $generated@@82) $generated@@87)) ($generated@@31 ($generated@@77 $generated@@82) $generated@@86)))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@77 $generated@@82) ($generated@@78 $generated@@24 $generated@@83)))
))))
(assert (= ($generated@@55 $generated@@89) $generated@@4))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@45 ($generated@@45 $generated@@90 $generated@@91) $generated@@91) ($generated@@45 $generated@@90 $generated@@91))
 :pattern ( ($generated@@45 ($generated@@45 $generated@@90 $generated@@91) $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@39 ($generated@@71 $generated@@92 $generated@@93) $generated@@94)  (and ($generated@@39 $generated@@92 $generated@@94) (not ($generated@@39 $generated@@93 $generated@@94))))
 :pattern ( ($generated@@39 ($generated@@71 $generated@@92 $generated@@93) $generated@@94))
)))
(assert ($generated@@23 $generated@@24 $generated@@89 $generated@@26))
(assert (forall (($generated@@95 Int) ) (! (= ($generated@@80 $generated@@95) $generated@@95)
 :pattern ( ($generated@@80 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@78 $generated@@97 $generated@@96) $generated@@96)
 :pattern ( ($generated@@78 $generated@@97 $generated@@96))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (or ($generated@@32 $generated@@99) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@99 $generated@@26))) (and (=> (not ($generated@@79 $generated@@99)) (let (($generated@@100 ($generated@@67 $generated@@99)))
(let (($generated@@101 ($generated@@63 $generated@@99)))
 (and ($generated@@32 $generated@@101) ($generated@@32 $generated@@100))))) (= ($generated@@31 ($generated@@77 $generated@@98) $generated@@99) (ite ($generated@@79 $generated@@99) $generated@@75 (let (($generated@@102 ($generated@@67 $generated@@99)))
(let (($generated@@103 ($generated@@63 $generated@@99)))
(let (($generated@@104 ($generated@@59 $generated@@99)))
($generated@@45 ($generated@@45 ($generated@@38 $generated@@75 ($generated@@81 $generated@@9 ($generated@@13 $generated@@104))) ($generated@@31 $generated@@98 $generated@@103)) ($generated@@31 $generated@@98 $generated@@102)))))))))
 :pattern ( ($generated@@31 ($generated@@77 $generated@@98) $generated@@99))
))))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@105 $generated@@106 $generated@@107) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@39 $generated@@106 $generated@@108) ($generated@@39 $generated@@107 $generated@@108))
 :pattern ( ($generated@@39 $generated@@106 $generated@@108))
 :pattern ( ($generated@@39 $generated@@107 $generated@@108))
)))
 :pattern ( ($generated@@105 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@79 $generated@@109) (= ($generated@@55 $generated@@109) $generated@@4))
 :pattern ( ($generated@@79 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@110 $generated@@111) (= ($generated@@55 $generated@@111) $generated@@5))
 :pattern ( ($generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@81 $generated@@114 ($generated@@112 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@112 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@110 $generated@@115) (exists (($generated@@116 Int) ($generated@@117 T@U) ($generated@@118 T@U) ) (= $generated@@115 ($generated@@25 $generated@@116 $generated@@117 $generated@@118))))
 :pattern ( ($generated@@110 $generated@@115))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@119 $generated@@120 $generated@@121) (forall (($generated@@122 T@U) ) (!  (or (not ($generated@@39 $generated@@120 $generated@@122)) (not ($generated@@39 $generated@@121 $generated@@122)))
 :pattern ( ($generated@@39 $generated@@120 $generated@@122))
 :pattern ( ($generated@@39 $generated@@121 $generated@@122))
)))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@79 $generated@@123) (= $generated@@123 $generated@@89))
 :pattern ( ($generated@@79 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@23 $generated@@33 $generated@@125 ($generated@@34 $generated@@126)) (forall (($generated@@127 T@U) ) (!  (=> ($generated@@39 $generated@@125 $generated@@127) ($generated@@124 $generated@@127 $generated@@126))
 :pattern ( ($generated@@39 $generated@@125 $generated@@127))
)))
 :pattern ( ($generated@@23 $generated@@33 $generated@@125 ($generated@@34 $generated@@126)))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or ($generated@@129 $generated@@131) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@131 $generated@@26))) (and (=> (not ($generated@@79 $generated@@131)) (let (($generated@@132 ($generated@@67 $generated@@131)))
(let (($generated@@133 ($generated@@63 $generated@@131)))
 (and ($generated@@129 $generated@@133) ($generated@@129 $generated@@132))))) (= ($generated@@128 ($generated@@77 $generated@@130) $generated@@131) (ite ($generated@@79 $generated@@131) 0 (let (($generated@@134 ($generated@@67 $generated@@131)))
(let (($generated@@135 ($generated@@63 $generated@@131)))
(let (($generated@@136 ($generated@@59 $generated@@131)))
(+ (+ $generated@@136 ($generated@@128 $generated@@130 $generated@@135)) ($generated@@128 $generated@@130 $generated@@134)))))))))
 :pattern ( ($generated@@128 ($generated@@77 $generated@@130) $generated@@131))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@137 ($generated@@81 $generated@@142 $generated@@139) $generated@@140 $generated@@141) ($generated@@138 $generated@@142 $generated@@139 $generated@@140 $generated@@141))
 :pattern ( ($generated@@137 ($generated@@81 $generated@@142 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@124 $generated@@143 $generated@@26) (and (= ($generated@@81 $generated@@24 ($generated@@112 $generated@@24 $generated@@143)) $generated@@143) ($generated@@23 $generated@@24 ($generated@@112 $generated@@24 $generated@@143) $generated@@26)))
 :pattern ( ($generated@@124 $generated@@143 $generated@@26))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@39 ($generated@@45 $generated@@144 $generated@@145) $generated@@146)  (or ($generated@@39 $generated@@144 $generated@@146) ($generated@@39 $generated@@145 $generated@@146)))
 :pattern ( ($generated@@39 ($generated@@45 $generated@@144 $generated@@145) $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> ($generated@@119 $generated@@147 $generated@@148) (and (= ($generated@@71 ($generated@@45 $generated@@147 $generated@@148) $generated@@147) $generated@@148) (= ($generated@@71 ($generated@@45 $generated@@147 $generated@@148) $generated@@148) $generated@@147)))
 :pattern ( ($generated@@45 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> ($generated@@149 $generated@@150) (or ($generated@@79 $generated@@150) ($generated@@110 $generated@@150)))
 :pattern ( ($generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@151 $generated@@26) (or ($generated@@79 $generated@@151) ($generated@@110 $generated@@151)))
 :pattern ( ($generated@@110 $generated@@151) ($generated@@23 $generated@@24 $generated@@151 $generated@@26))
 :pattern ( ($generated@@79 $generated@@151) ($generated@@23 $generated@@24 $generated@@151 $generated@@26))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (or ($generated@@129 ($generated@@78 $generated@@24 $generated@@153)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@153 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@78 $generated@@8 ($generated@@11 ($generated@@79 ($generated@@78 $generated@@24 $generated@@153)))))) (let (($generated@@154 ($generated@@78 $generated@@24 ($generated@@67 ($generated@@78 $generated@@24 $generated@@153)))))
(let (($generated@@155 ($generated@@78 $generated@@24 ($generated@@63 ($generated@@78 $generated@@24 $generated@@153)))))
 (and ($generated@@129 $generated@@155) ($generated@@129 $generated@@154))))) (= ($generated@@128 ($generated@@77 $generated@@152) ($generated@@78 $generated@@24 $generated@@153)) (ite ($generated@@79 ($generated@@78 $generated@@24 $generated@@153)) 0 (let (($generated@@156 ($generated@@78 $generated@@24 ($generated@@67 ($generated@@78 $generated@@24 $generated@@153)))))
(let (($generated@@157 ($generated@@78 $generated@@24 ($generated@@63 ($generated@@78 $generated@@24 $generated@@153)))))
(let (($generated@@158 ($generated@@80 ($generated@@59 ($generated@@78 $generated@@24 $generated@@153)))))
($generated@@80 (+ (+ $generated@@158 ($generated@@128 ($generated@@77 $generated@@152) $generated@@157)) ($generated@@128 ($generated@@77 $generated@@152) $generated@@156))))))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@77 $generated@@152) ($generated@@78 $generated@@24 $generated@@153)))
))))
(assert (forall (($generated@@159 T@U) ) (!  (=> ($generated@@124 $generated@@159 $generated) (and (= ($generated@@81 $generated@@9 ($generated@@112 $generated@@9 $generated@@159)) $generated@@159) ($generated@@23 $generated@@9 ($generated@@112 $generated@@9 $generated@@159) $generated)))
 :pattern ( ($generated@@124 $generated@@159 $generated))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@124 ($generated@@81 $generated@@162 $generated@@160) $generated@@161) ($generated@@23 $generated@@162 $generated@@160 $generated@@161))
 :pattern ( ($generated@@124 ($generated@@81 $generated@@162 $generated@@160) $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@138 $generated@@33 $generated@@163 ($generated@@34 $generated@@164) $generated@@165) (forall (($generated@@166 T@U) ) (!  (=> ($generated@@39 $generated@@163 $generated@@166) ($generated@@137 $generated@@166 $generated@@164 $generated@@165))
 :pattern ( ($generated@@39 $generated@@163 $generated@@166))
)))
 :pattern ( ($generated@@138 $generated@@33 $generated@@163 ($generated@@34 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@167 Int) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@25 ($generated@@80 $generated@@167) ($generated@@78 $generated@@24 $generated@@168) ($generated@@78 $generated@@24 $generated@@169)) ($generated@@78 $generated@@24 ($generated@@25 $generated@@167 $generated@@168 $generated@@169)))
 :pattern ( ($generated@@25 ($generated@@80 $generated@@167) ($generated@@78 $generated@@24 $generated@@168) ($generated@@78 $generated@@24 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@170 ($generated@@34 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@34 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@37 ($generated@@34 $generated@@172)) $generated@@1)
 :pattern ( ($generated@@34 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@112 $generated@@174 ($generated@@81 $generated@@174 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@81 $generated@@174 $generated@@173))
)))
(assert (forall (($generated@@176 Int) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (< ($generated@@175 $generated@@177) ($generated@@175 ($generated@@25 $generated@@176 $generated@@177 $generated@@178)))
 :pattern ( ($generated@@25 $generated@@176 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 Int) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (< ($generated@@175 $generated@@181) ($generated@@175 ($generated@@25 $generated@@179 $generated@@180 $generated@@181)))
 :pattern ( ($generated@@25 $generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@31 ($generated@@77 $generated@@182) $generated@@183) ($generated@@31 $generated@@182 $generated@@183))
 :pattern ( ($generated@@31 ($generated@@77 $generated@@182) $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@128 ($generated@@77 $generated@@184) $generated@@185) ($generated@@128 $generated@@184 $generated@@185))
 :pattern ( ($generated@@128 ($generated@@77 $generated@@184) $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@45 $generated@@186 ($generated@@45 $generated@@186 $generated@@187)) ($generated@@45 $generated@@186 $generated@@187))
 :pattern ( ($generated@@45 $generated@@186 ($generated@@45 $generated@@186 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@188 $generated@@199 $generated@@200 $generated@@201 ($generated@@195 $generated@@199 $generated@@200 $generated@@201 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@204 $generated@@205) $generated@@202)
 :weight 0
)) (and (forall (($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@T) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@188 $generated@@206 $generated@@207 $generated@@208 ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@188 $generated@@206 $generated@@207 $generated@@208 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@T) ($generated@@216 T@T) ($generated@@217 T@T) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@188 $generated@@215 $generated@@216 $generated@@217 ($generated@@195 $generated@@215 $generated@@216 $generated@@217 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@188 $generated@@215 $generated@@216 $generated@@217 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)))) (= ($generated@@7 $generated@@189) 5)) (= ($generated@@7 $generated@@190) 6)) (forall (($generated@@224 T@T) ($generated@@225 T@T) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@192 $generated@@224 $generated@@225 ($generated@@196 $generated@@224 $generated@@225 $generated@@227 $generated@@228 $generated@@226) $generated@@228) $generated@@226)
 :weight 0
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@233 $generated@@234) (= ($generated@@192 $generated@@229 $generated@@230 ($generated@@196 $generated@@229 $generated@@230 $generated@@232 $generated@@233 $generated@@231) $generated@@234) ($generated@@192 $generated@@229 $generated@@230 $generated@@232 $generated@@234)))
 :weight 0
))) (= ($generated@@7 $generated@@193) 7)) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (= ($generated@@7 ($generated@@194 $generated@@235 $generated@@236)) 8))) (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (! (= ($generated@@197 ($generated@@194 $generated@@237 $generated@@238)) $generated@@237)
 :pattern ( ($generated@@194 $generated@@237 $generated@@238))
))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@198 ($generated@@194 $generated@@239 $generated@@240)) $generated@@240)
 :pattern ( ($generated@@194 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (= ($generated@@12 ($generated@@188 $generated@@189 $generated@@190 $generated@@8 ($generated@@191 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))  (=> (and (or (not (= $generated@@245 $generated@@241)) (not true)) ($generated@@12 ($generated@@112 $generated@@8 ($generated@@192 $generated@@190 $generated@@193 ($generated@@192 $generated@@189 ($generated@@194 $generated@@190 $generated@@193) $generated@@242 $generated@@245) $generated@@243)))) $generated@@244))
 :pattern ( ($generated@@188 $generated@@189 $generated@@190 $generated@@8 ($generated@@191 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 Int) ($generated@@249 Int) ) (! (= ($generated@@247 $generated@@248 $generated@@249) (mod $generated@@248 $generated@@249))
 :pattern ( ($generated@@247 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and ($generated@@250 $generated@@252) (and ($generated@@110 $generated@@251) ($generated@@138 $generated@@24 $generated@@251 $generated@@26 $generated@@252))) ($generated@@138 $generated@@9 ($generated@@13 ($generated@@59 $generated@@251)) $generated $generated@@252))
 :pattern ( ($generated@@138 $generated@@9 ($generated@@13 ($generated@@59 $generated@@251)) $generated $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> ($generated@@124 $generated@@253 ($generated@@34 $generated@@254)) (and (= ($generated@@81 $generated@@33 ($generated@@112 $generated@@33 $generated@@253)) $generated@@253) ($generated@@23 $generated@@33 ($generated@@112 $generated@@33 $generated@@253) ($generated@@34 $generated@@254))))
 :pattern ( ($generated@@124 $generated@@253 ($generated@@34 $generated@@254)))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and ($generated@@250 $generated@@256) ($generated@@23 $generated@@24 $generated@@255 $generated@@26)) ($generated@@138 $generated@@24 $generated@@255 $generated@@26 $generated@@256))
 :pattern ( ($generated@@138 $generated@@24 $generated@@255 $generated@@26 $generated@@256))
)))
(assert (= ($generated@@37 $generated@@26) $generated@@3))
(assert (= ($generated@@257 $generated@@26) $generated@@6))
(assert (= $generated@@89 ($generated@@78 $generated@@24 $generated@@89)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and ($generated@@250 $generated@@259) (and ($generated@@110 $generated@@258) ($generated@@138 $generated@@24 $generated@@258 $generated@@26 $generated@@259))) ($generated@@138 $generated@@24 ($generated@@63 $generated@@258) $generated@@26 $generated@@259))
 :pattern ( ($generated@@138 $generated@@24 ($generated@@63 $generated@@258) $generated@@26 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and ($generated@@250 $generated@@261) (and ($generated@@110 $generated@@260) ($generated@@138 $generated@@24 $generated@@260 $generated@@26 $generated@@261))) ($generated@@138 $generated@@24 ($generated@@67 $generated@@260) $generated@@26 $generated@@261))
 :pattern ( ($generated@@138 $generated@@24 ($generated@@67 $generated@@260) $generated@@26 $generated@@261))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@81 $generated@@9 ($generated@@13 ($generated@@80 $generated@@262))) ($generated@@78 $generated@@193 ($generated@@81 $generated@@9 ($generated@@13 $generated@@262))))
 :pattern ( ($generated@@81 $generated@@9 ($generated@@13 ($generated@@80 $generated@@262))))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@T) ) (! (= ($generated@@81 $generated@@264 ($generated@@78 $generated@@264 $generated@@263)) ($generated@@78 $generated@@193 ($generated@@81 $generated@@264 $generated@@263)))
 :pattern ( ($generated@@81 $generated@@264 ($generated@@78 $generated@@264 $generated@@263)))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! ($generated@@138 $generated@@9 $generated@@266 $generated $generated@@265)
 :pattern ( ($generated@@138 $generated@@9 $generated@@266 $generated $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! ($generated@@23 $generated@@9 $generated@@267 $generated)
 :pattern ( ($generated@@23 $generated@@9 $generated@@267 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () Int)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () Int)
(declare-fun $generated@@279 () Int)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 () T@U)
(declare-fun $generated@@284 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@285  (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated@@247 ($generated@@128 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@269) ($generated@@80 2)) ($generated@@80 0)))))
(let (($generated@@286  (=> (= $generated@@269 ($generated@@25 $generated@@270 $generated@@271 $generated@@272)) (=> (and ($generated@@23 $generated@@24 $generated@@271 $generated@@26) ($generated@@23 $generated@@24 $generated@@272 $generated@@26)) (=> (and (and (and (and (and ($generated@@23 $generated@@24 $generated@@273 $generated@@26) ($generated@@138 $generated@@24 $generated@@273 $generated@@26 $generated@@274)) (= $generated@@275 $generated@@272)) (and ($generated@@23 $generated@@24 $generated@@275 $generated@@26) (= $generated@@273 $generated@@275))) (and (and ($generated@@23 $generated@@24 $generated@@276 $generated@@26) ($generated@@138 $generated@@24 $generated@@276 $generated@@26 $generated@@274)) (= $generated@@277 $generated@@271))) (and (and (and ($generated@@23 $generated@@24 $generated@@277 $generated@@26) (= $generated@@276 $generated@@277)) (and (= $generated@@278 $generated@@270) ($generated@@23 $generated@@9 ($generated@@13 $generated@@278) $generated))) (and (and (= $generated@@279 $generated@@278) ($generated@@137 ($generated@@81 $generated@@24 $generated@@269) $generated@@26 $generated@@274)) (and ($generated@@32 $generated@@269) ($generated@@32 $generated@@269))))) (and (=> (= (ControlFlow 0 5) (- 0 12)) ($generated@@39 ($generated@@31 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@269) ($generated@@81 $generated@@9 ($generated@@13 $generated@@279)))) (=> ($generated@@39 ($generated@@31 ($generated@@77 $generated@@268) $generated@@269) ($generated@@81 $generated@@9 ($generated@@13 $generated@@279))) (=> (and ($generated@@137 ($generated@@81 $generated@@24 $generated@@276) $generated@@26 $generated@@274) ($generated@@32 $generated@@276)) (=> (and (and ($generated@@137 ($generated@@81 $generated@@24 $generated@@269) $generated@@26 $generated@@274) ($generated@@32 $generated@@269)) (and ($generated@@32 $generated@@276) ($generated@@32 $generated@@269))) (and (=> (= (ControlFlow 0 5) (- 0 11)) ($generated@@105 ($generated@@31 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@276) ($generated@@31 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@269))) (=> ($generated@@105 ($generated@@31 ($generated@@77 $generated@@268) $generated@@276) ($generated@@31 ($generated@@77 $generated@@268) $generated@@269)) (=> (and ($generated@@137 ($generated@@81 $generated@@24 $generated@@273) $generated@@26 $generated@@274) ($generated@@32 $generated@@273)) (=> (and (and ($generated@@137 ($generated@@81 $generated@@24 $generated@@269) $generated@@26 $generated@@274) ($generated@@32 $generated@@269)) (and ($generated@@32 $generated@@273) ($generated@@32 $generated@@269))) (and (=> (= (ControlFlow 0 5) (- 0 10)) ($generated@@105 ($generated@@31 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@273) ($generated@@31 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@269))) (=> ($generated@@105 ($generated@@31 ($generated@@77 $generated@@268) $generated@@273) ($generated@@31 ($generated@@77 $generated@@268) $generated@@269)) (and (=> (= (ControlFlow 0 5) (- 0 9)) (< ($generated@@175 $generated@@276) ($generated@@175 $generated@@269))) (=> (< ($generated@@175 $generated@@276) ($generated@@175 $generated@@269)) (and (=> (= (ControlFlow 0 5) (- 0 8)) (forall (($generated@@287 Int) ) (!  (=> ($generated@@39 ($generated@@31 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@276) ($generated@@81 $generated@@9 ($generated@@13 $generated@@287))) (= ($generated@@247 $generated@@287 ($generated@@80 2)) ($generated@@80 0)))
 :pattern ( ($generated@@39 ($generated@@31 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@276) ($generated@@81 $generated@@9 ($generated@@13 $generated@@287))))
))) (=> (forall (($generated@@288 T@U) ) (!  (=> ($generated@@39 ($generated@@31 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@276) ($generated@@81 $generated@@9 $generated@@288)) (= ($generated@@247 ($generated@@14 $generated@@288) ($generated@@80 2)) ($generated@@80 0)))
 :pattern ( ($generated@@39 ($generated@@31 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@276) ($generated@@81 $generated@@9 $generated@@288)))
)) (=> (and (and (and ($generated@@250 $generated@@280) ($generated@@281 $generated@@280)) ($generated@@129 $generated@@276)) (and (= ($generated@@247 ($generated@@128 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@276) ($generated@@80 2)) ($generated@@80 0)) (= $generated@@274 $generated@@280))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (< ($generated@@175 $generated@@273) ($generated@@175 $generated@@269))) (=> (< ($generated@@175 $generated@@273) ($generated@@175 $generated@@269)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (forall (($generated@@289 Int) ) (!  (=> ($generated@@39 ($generated@@31 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@273) ($generated@@81 $generated@@9 ($generated@@13 $generated@@289))) (= ($generated@@247 $generated@@289 ($generated@@80 2)) ($generated@@80 0)))
 :pattern ( ($generated@@39 ($generated@@31 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@273) ($generated@@81 $generated@@9 ($generated@@13 $generated@@289))))
))) (=> (forall (($generated@@290 T@U) ) (!  (=> ($generated@@39 ($generated@@31 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@273) ($generated@@81 $generated@@9 $generated@@290)) (= ($generated@@247 ($generated@@14 $generated@@290) ($generated@@80 2)) ($generated@@80 0)))
 :pattern ( ($generated@@39 ($generated@@31 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@273) ($generated@@81 $generated@@9 $generated@@290)))
)) (=> (and ($generated@@250 $generated@@282) ($generated@@281 $generated@@282)) (=> (and (and ($generated@@129 $generated@@273) (= ($generated@@247 ($generated@@128 ($generated@@77 ($generated@@77 $generated@@268)) $generated@@273) ($generated@@80 2)) ($generated@@80 0))) (and (= $generated@@280 $generated@@282) (= (ControlFlow 0 5) 3))) $generated@@285))))))))))))))))))))))))))
(let (($generated@@291  (=> (and (= $generated@@269 $generated@@89) (= (ControlFlow 0 4) 3)) $generated@@285)))
(let (($generated@@292 true))
(let (($generated@@293  (=> (or (not (= $generated@@269 $generated@@89)) (not true)) (and (=> (= (ControlFlow 0 13) 5) $generated@@286) (=> (= (ControlFlow 0 13) 1) $generated@@292)))))
(let (($generated@@294  (=> (= $generated@@283 ($generated@@191 $generated@@284 $generated@@274 $generated@@2 false)) (and (=> (= (ControlFlow 0 14) 4) $generated@@291) (=> (= (ControlFlow 0 14) 13) $generated@@293)))))
(let (($generated@@295  (=> (and ($generated@@250 $generated@@274) ($generated@@281 $generated@@274)) (=> (and (and (and (and ($generated@@23 $generated@@24 $generated@@269 $generated@@26) ($generated@@138 $generated@@24 $generated@@269 $generated@@26 $generated@@274)) ($generated@@149 $generated@@269)) (= 2 $generated@@30)) (and (forall (($generated@@296 T@U) ) (!  (=> ($generated@@39 ($generated@@31 ($generated@@77 $generated@@268) $generated@@269) ($generated@@81 $generated@@9 $generated@@296)) (= ($generated@@247 ($generated@@14 $generated@@296) ($generated@@80 2)) ($generated@@80 0)))
 :pattern ( ($generated@@39 ($generated@@31 ($generated@@77 $generated@@268) $generated@@269) ($generated@@81 $generated@@9 $generated@@296)))
)) (= (ControlFlow 0 15) 14))) $generated@@294))))
$generated@@295))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
