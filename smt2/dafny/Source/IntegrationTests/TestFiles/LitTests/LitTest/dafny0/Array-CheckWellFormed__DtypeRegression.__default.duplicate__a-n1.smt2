(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@U T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@67 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@71 (T@U) Int)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U Int) T@U)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@114 (T@U T@U) T@U)
(declare-fun $generated@@118 () Int)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@150 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and (or (not (= $generated@@29 $generated@@25)) (not true)) (= ($generated@@26 $generated@@29) ($generated@@24 $generated@@28))) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@23 $generated@@29)) $generated))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@24 $generated@@28))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@5 $generated@@35) 3) (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@37 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
))) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@37 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@37 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@5 $generated@@38) 4)) (= ($generated@@5 $generated@@39) 5)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@5 ($generated@@40 $generated@@55 $generated@@56)) 6))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@40 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@40 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@40 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and (and (and ($generated@@33 $generated@@61) ($generated@@33 $generated@@62)) (or ($generated@@34 $generated@@61 $generated@@63 $generated@@64) (and ($generated@@27 $generated@@35 $generated@@63 ($generated@@36 $generated)) ($generated@@27 $generated@@35 $generated@@64 ($generated@@36 $generated))))) (and ($generated@@30 $generated@@61) ($generated@@31 $generated@@61 $generated@@62))) (=> (forall (($generated@@65 T@U) ($generated@@66 T@U) )  (=> (and (or (not (= $generated@@65 $generated@@25)) (not true)) (or (= $generated@@65 $generated@@63) (= $generated@@65 $generated@@64))) (= ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@61 $generated@@65) $generated@@66) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@62 $generated@@65) $generated@@66)))) (= ($generated@@32 $generated@@61 $generated@@63 $generated@@64) ($generated@@32 $generated@@62 $generated@@63 $generated@@64))))
 :pattern ( ($generated@@30 $generated@@61) ($generated@@31 $generated@@61 $generated@@62) ($generated@@32 $generated@@62 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@67 $generated@@35 $generated@@69 ($generated@@36 $generated@@68) $generated@@70) ($generated@@67 $generated@@35 $generated@@69 ($generated@@24 $generated@@68) $generated@@70))
 :pattern ( ($generated@@67 $generated@@35 $generated@@69 ($generated@@36 $generated@@68) $generated@@70))
 :pattern ( ($generated@@67 $generated@@35 $generated@@69 ($generated@@24 $generated@@68) $generated@@70))
)))
(assert (= ($generated@@71 $generated@@72) 0))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@67 $generated@@35 $generated@@75 ($generated@@24 $generated@@74) $generated@@76)  (or (= $generated@@75 $generated@@25) ($generated@@10 ($generated@@73 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@76 $generated@@75) $generated@@1)))))
 :pattern ( ($generated@@67 $generated@@35 $generated@@75 ($generated@@24 $generated@@74) $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@31 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@10 ($generated@@73 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@77 $generated@@79) $generated@@1))) ($generated@@10 ($generated@@73 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@78 $generated@@79) $generated@@1))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@78 $generated@@79) $generated@@1))
)))
 :pattern ( ($generated@@31 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 Int) ) (!  (=> (and (and (and ($generated@@33 $generated@@83) (and (or (not (= $generated@@84 $generated@@25)) (not true)) (= ($generated@@26 $generated@@84) ($generated@@24 $generated@@82)))) (and (<= 0 $generated@@85) (< $generated@@85 ($generated@@23 $generated@@84)))) ($generated@@10 ($generated@@73 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@83 $generated@@84) $generated@@1)))) ($generated@@81 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@83 $generated@@84) ($generated@@80 $generated@@85)) $generated@@82 $generated@@83))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@83 $generated@@84) ($generated@@80 $generated@@85)) ($generated@@24 $generated@@82))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@86 $generated@@88 $generated@@89)  (and (= ($generated@@71 $generated@@88) ($generated@@71 $generated@@89)) (forall (($generated@@90 Int) ) (!  (=> (and (<= 0 $generated@@90) (< $generated@@90 ($generated@@71 $generated@@88))) (= ($generated@@87 $generated@@88 $generated@@90) ($generated@@87 $generated@@89 $generated@@90)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@90))
 :pattern ( ($generated@@87 $generated@@89 $generated@@90))
))))
 :pattern ( ($generated@@86 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 ($generated@@73 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@73 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@27 $generated@@35 $generated@@95 ($generated@@36 $generated@@94))  (and ($generated@@27 $generated@@35 $generated@@95 ($generated@@24 $generated@@94)) (or (not (= $generated@@95 $generated@@25)) (not true))))
 :pattern ( ($generated@@27 $generated@@35 $generated@@95 ($generated@@36 $generated@@94)))
 :pattern ( ($generated@@27 $generated@@35 $generated@@95 ($generated@@24 $generated@@94)))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@81 ($generated@@91 $generated@@99 $generated@@96) $generated@@97 $generated@@98) ($generated@@67 $generated@@99 $generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@81 ($generated@@91 $generated@@99 $generated@@96) $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@31 $generated@@100 $generated@@101) (=> ($generated@@81 $generated@@102 $generated@@103 $generated@@100) ($generated@@81 $generated@@102 $generated@@103 $generated@@101)))
 :pattern ( ($generated@@31 $generated@@100 $generated@@101) ($generated@@81 $generated@@102 $generated@@103 $generated@@100))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (!  (=> ($generated@@31 $generated@@104 $generated@@105) (=> ($generated@@67 $generated@@108 $generated@@106 $generated@@107 $generated@@104) ($generated@@67 $generated@@108 $generated@@106 $generated@@107 $generated@@105)))
 :pattern ( ($generated@@31 $generated@@104 $generated@@105) ($generated@@67 $generated@@108 $generated@@106 $generated@@107 $generated@@104))
)))
(assert (forall (($generated@@110 T@U) ) (!  (and (= ($generated@@22 ($generated@@24 $generated@@110)) $generated@@2) (= ($generated@@109 ($generated@@24 $generated@@110)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (!  (and (= ($generated@@22 ($generated@@36 $generated@@111)) $generated@@3) (= ($generated@@109 ($generated@@36 $generated@@111)) $generated@@4))
 :pattern ( ($generated@@36 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@27 $generated@@35 $generated@@113 ($generated@@24 $generated@@112))  (or (= $generated@@113 $generated@@25) (= ($generated@@26 $generated@@113) ($generated@@24 $generated@@112))))
 :pattern ( ($generated@@27 $generated@@35 $generated@@113 ($generated@@24 $generated@@112)))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (forall (($generated@@117 Int) ) (!  (=> (and (<= 0 $generated@@117) (< $generated@@117 ($generated@@71 ($generated@@114 $generated@@115 $generated@@116)))) (= ($generated@@87 ($generated@@114 $generated@@115 $generated@@116) $generated@@117) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@115 $generated@@116) ($generated@@80 $generated@@117))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@115 $generated@@116) ($generated@@80 $generated@@117)))
 :pattern ( ($generated@@87 ($generated@@114 $generated@@115 $generated@@116) $generated@@117))
))
 :pattern ( ($generated@@114 $generated@@115 $generated@@116))
)))
(assert  (=> (<= 0 $generated@@118) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or ($generated@@34 $generated@@119 $generated@@120 $generated@@121) (and (< 0 $generated@@118) (and (and ($generated@@33 $generated@@119) ($generated@@27 $generated@@35 $generated@@120 ($generated@@36 $generated))) ($generated@@27 $generated@@35 $generated@@121 ($generated@@36 $generated))))) (= ($generated@@32 $generated@@119 $generated@@120 $generated@@121) ($generated@@86 ($generated@@114 $generated@@119 $generated@@120) ($generated@@114 $generated@@119 $generated@@121))))
 :pattern ( ($generated@@32 $generated@@119 $generated@@120 $generated@@121) ($generated@@33 $generated@@119))
))))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@86 $generated@@122 $generated@@123) (= $generated@@122 $generated@@123))
 :pattern ( ($generated@@86 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (or (not (= $generated@@124 $generated@@126)) (not true)) (=> (and ($generated@@31 $generated@@124 $generated@@125) ($generated@@31 $generated@@125 $generated@@126)) ($generated@@31 $generated@@124 $generated@@126)))
 :pattern ( ($generated@@31 $generated@@124 $generated@@125) ($generated@@31 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@127 $generated@@128 $generated) (and (= ($generated@@91 $generated@@7 ($generated@@73 $generated@@7 $generated@@128)) $generated@@128) ($generated@@27 $generated@@7 ($generated@@73 $generated@@7 $generated@@128) $generated)))
 :pattern ( ($generated@@127 $generated@@128 $generated))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@127 ($generated@@91 $generated@@131 $generated@@129) $generated@@130) ($generated@@27 $generated@@131 $generated@@129 $generated@@130))
 :pattern ( ($generated@@127 ($generated@@91 $generated@@131 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (<= 0 ($generated@@23 $generated@@132))
 :pattern ( ($generated@@23 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (<= 0 ($generated@@71 $generated@@133))
 :pattern ( ($generated@@71 $generated@@133))
)))
(assert (forall (($generated@@134 Int) ) (! (= ($generated@@21 ($generated@@80 $generated@@134)) 1)
 :pattern ( ($generated@@80 $generated@@134))
)))
(assert (forall (($generated@@136 Int) ) (! (= ($generated@@135 ($generated@@80 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@80 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@137 ($generated@@24 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@24 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@36 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@36 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@73 $generated@@142 ($generated@@91 $generated@@142 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@91 $generated@@142 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and ($generated@@33 $generated@@144) (and (or (not (= $generated@@145 $generated@@25)) (not true)) (= ($generated@@26 $generated@@145) ($generated@@24 $generated@@143)))) ($generated@@10 ($generated@@73 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@144 $generated@@145) $generated@@1)))) ($generated@@67 $generated@@7 ($generated@@11 ($generated@@23 $generated@@145)) $generated $generated@@144))
 :pattern ( ($generated@@23 $generated@@145) ($generated@@73 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@144 $generated@@145) $generated@@1)) ($generated@@24 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Int) ) (!  (=> (and (and ($generated@@33 $generated@@147) (and (or (not (= $generated@@148 $generated@@25)) (not true)) (= ($generated@@26 $generated@@148) ($generated@@24 $generated@@146)))) (and (<= 0 $generated@@149) (< $generated@@149 ($generated@@23 $generated@@148)))) ($generated@@127 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@147 $generated@@148) ($generated@@80 $generated@@149)) $generated@@146))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@147 $generated@@148) ($generated@@80 $generated@@149)) ($generated@@24 $generated@@146))
)))
(assert  (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@150 $generated@@153 $generated@@154 $generated@@155 ($generated@@152 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@158 $generated@@159) $generated@@156)
 :weight 0
)) (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@150 $generated@@160 $generated@@161 $generated@@162 ($generated@@152 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@150 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@150 $generated@@169 $generated@@170 $generated@@171 ($generated@@152 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@150 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 Bool) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@10 ($generated@@150 $generated@@35 $generated@@38 $generated@@6 ($generated@@151 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))  (=> (and (or (not (= $generated@@182 $generated@@178)) (not true)) ($generated@@10 ($generated@@73 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@179 $generated@@182) $generated@@180)))) $generated@@181))
 :pattern ( ($generated@@150 $generated@@35 $generated@@38 $generated@@6 ($generated@@151 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (and ($generated@@33 $generated@@184) ($generated@@33 $generated@@185)) ($generated@@31 $generated@@184 $generated@@185)) (= ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@184 $generated@@186) ($generated@@37 $generated@@35 ($generated@@40 $generated@@38 $generated@@39) $generated@@185 $generated@@186))) (= ($generated@@114 $generated@@184 $generated@@186) ($generated@@114 $generated@@185 $generated@@186)))
 :pattern ( ($generated@@114 $generated@@185 $generated@@186) ($generated@@31 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@71 ($generated@@114 $generated@@187 $generated@@188)) ($generated@@23 $generated@@188))
 :pattern ( ($generated@@71 ($generated@@114 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@127 $generated@@190 ($generated@@24 $generated@@189)) (and (= ($generated@@91 $generated@@35 ($generated@@73 $generated@@35 $generated@@190)) $generated@@190) ($generated@@27 $generated@@35 ($generated@@73 $generated@@35 $generated@@190) ($generated@@24 $generated@@189))))
 :pattern ( ($generated@@127 $generated@@190 ($generated@@24 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@127 $generated@@192 ($generated@@36 $generated@@191)) (and (= ($generated@@91 $generated@@35 ($generated@@73 $generated@@35 $generated@@192)) $generated@@192) ($generated@@27 $generated@@35 ($generated@@73 $generated@@35 $generated@@192) ($generated@@36 $generated@@191))))
 :pattern ( ($generated@@127 $generated@@192 ($generated@@36 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ) (!  (=> (= ($generated@@71 $generated@@193) 0) (= $generated@@193 $generated@@72))
 :pattern ( ($generated@@71 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! ($generated@@67 $generated@@7 $generated@@195 $generated $generated@@194)
 :pattern ( ($generated@@67 $generated@@7 $generated@@195 $generated $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ) (! ($generated@@27 $generated@@7 $generated@@196 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@196 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@201  (=> (and (= $generated@@197 ($generated@@151 $generated@@25 $generated@@198 $generated@@1 false)) (= (ControlFlow 0 2) (- 0 1))) (or (not (= $generated@@199 $generated@@25)) (not true)))))
(let (($generated@@202  (=> (and (and (and ($generated@@33 $generated@@198) ($generated@@30 $generated@@198)) (and ($generated@@27 $generated@@35 $generated@@199 ($generated@@36 $generated)) ($generated@@67 $generated@@35 $generated@@199 ($generated@@36 $generated) $generated@@198))) (and (and ($generated@@27 $generated@@35 $generated@@200 ($generated@@36 $generated)) ($generated@@67 $generated@@35 $generated@@200 ($generated@@36 $generated) $generated@@198)) (and (= 1 $generated@@118) (= (ControlFlow 0 3) 2)))) $generated@@201)))
$generated@@202)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
