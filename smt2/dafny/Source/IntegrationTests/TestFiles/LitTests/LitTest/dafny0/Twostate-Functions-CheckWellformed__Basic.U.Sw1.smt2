(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U T@U T@U T@U Int T@U T@U) Real)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (Int) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U T@U T@U Int T@U T@U) Bool)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@83 (Real) Real)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) Bool)
(declare-fun $generated@@123 (T@U) Bool)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27)
 :pattern ( ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27))
)))
(assert (= ($generated@@7 $generated@@29) 3))
(assert (forall (($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@33 $generated@@30)  (or (= $generated@@33 $generated@@31) (= ($generated@@32 $generated@@33) $generated@@30)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@33 $generated@@30))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@24 $generated@@29 $generated@@35 $generated@@34 $generated@@36) ($generated@@24 $generated@@29 $generated@@35 $generated@@30 $generated@@36))
 :pattern ( ($generated@@24 $generated@@29 $generated@@35 $generated@@34 $generated@@36))
 :pattern ( ($generated@@24 $generated@@29 $generated@@35 $generated@@30 $generated@@36))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 Int) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (or ($generated@@43 $generated@@46 $generated@@47 $generated@@48 ($generated@@40 $generated@@49) ($generated@@41 $generated@@29 $generated@@50) ($generated@@41 $generated@@29 $generated@@51)) (and (< 1 $generated@@37) (and (and (and (and (and (and (and ($generated@@42 $generated@@46) ($generated@@42 $generated@@47)) ($generated@@44 $generated@@46 $generated@@47)) (and (or (not (= $generated@@48 $generated@@31)) (not true)) (and ($generated@@28 $generated@@29 $generated@@48 $generated@@34) ($generated@@24 $generated@@29 $generated@@48 $generated@@34 $generated@@46)))) (<= ($generated@@40 0) $generated@@49)) ($generated@@28 $generated@@29 $generated@@50 $generated@@34)) ($generated@@28 $generated@@29 $generated@@51 $generated@@34)) (= ($generated@@41 $generated@@29 $generated@@50) ($generated@@41 $generated@@29 $generated@@51))))) (and (=> (or (not (= ($generated@@40 $generated@@49) ($generated@@40 0))) (not true)) ($generated@@43 $generated@@46 $generated@@47 $generated@@48 ($generated@@40 (- $generated@@49 1)) ($generated@@41 $generated@@29 $generated@@51) ($generated@@41 $generated@@29 $generated@@50))) (= ($generated@@38 ($generated@@39 $generated@@45) $generated@@46 $generated@@47 $generated@@48 ($generated@@40 $generated@@49) ($generated@@41 $generated@@29 $generated@@50) ($generated@@41 $generated@@29 $generated@@51)) (ite (= ($generated@@40 $generated@@49) ($generated@@40 0)) 8.29 ($generated@@38 ($generated@@39 $generated@@45) $generated@@46 $generated@@47 $generated@@48 ($generated@@40 (- $generated@@49 1)) ($generated@@41 $generated@@29 $generated@@51) ($generated@@41 $generated@@29 $generated@@50))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@45) $generated@@46 $generated@@47 $generated@@48 ($generated@@40 $generated@@49) ($generated@@41 $generated@@29 $generated@@50) ($generated@@41 $generated@@29 $generated@@51)) ($generated@@42 $generated@@47))
))))
(assert  (and (and (and (and (and (and (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@53 $generated@@60 $generated@@61 ($generated@@57 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@53 $generated@@65 $generated@@66 ($generated@@57 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@53 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (= ($generated@@7 $generated@@54) 4)) (= ($generated@@7 $generated@@55) 5)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@7 ($generated@@56 $generated@@71 $generated@@72)) 6))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@58 ($generated@@56 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@56 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@59 ($generated@@56 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@56 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@24 $generated@@29 $generated@@77 $generated@@30 $generated@@78)  (or (= $generated@@77 $generated@@31) ($generated@@12 ($generated@@52 $generated@@8 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@29 ($generated@@56 $generated@@54 $generated@@55) $generated@@78 $generated@@77) $generated@@1)))))
 :pattern ( ($generated@@24 $generated@@29 $generated@@77 $generated@@30 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> ($generated@@44 $generated@@79 $generated@@80) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@12 ($generated@@52 $generated@@8 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@29 ($generated@@56 $generated@@54 $generated@@55) $generated@@79 $generated@@81) $generated@@1))) ($generated@@12 ($generated@@52 $generated@@8 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@29 ($generated@@56 $generated@@54 $generated@@55) $generated@@80 $generated@@81) $generated@@1))))
 :pattern ( ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@29 ($generated@@56 $generated@@54 $generated@@55) $generated@@80 $generated@@81) $generated@@1))
)))
 :pattern ( ($generated@@44 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 Int) ) (! (= ($generated@@40 $generated@@82) $generated@@82)
 :pattern ( ($generated@@40 $generated@@82))
)))
(assert (forall (($generated@@84 Real) ) (! (= ($generated@@83 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@41 $generated@@86 $generated@@85) $generated@@85)
 :pattern ( ($generated@@41 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@52 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@52 $generated@@89 $generated@@88))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 Int) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or ($generated@@43 $generated@@91 $generated@@92 $generated@@93 $generated@@94 $generated@@95 $generated@@96) (and (< 1 $generated@@37) (and (and (and (and (and (and (and ($generated@@42 $generated@@91) ($generated@@42 $generated@@92)) ($generated@@44 $generated@@91 $generated@@92)) (and (or (not (= $generated@@93 $generated@@31)) (not true)) (and ($generated@@28 $generated@@29 $generated@@93 $generated@@34) ($generated@@24 $generated@@29 $generated@@93 $generated@@34 $generated@@91)))) (<= ($generated@@40 0) $generated@@94)) ($generated@@28 $generated@@29 $generated@@95 $generated@@34)) ($generated@@28 $generated@@29 $generated@@96 $generated@@34)) (= $generated@@95 $generated@@96)))) (and (=> (or (not (= $generated@@94 ($generated@@40 0))) (not true)) ($generated@@43 $generated@@91 $generated@@92 $generated@@93 (- $generated@@94 1) $generated@@96 $generated@@95)) (= ($generated@@38 ($generated@@39 $generated@@90) $generated@@91 $generated@@92 $generated@@93 $generated@@94 $generated@@95 $generated@@96) (ite (= $generated@@94 ($generated@@40 0)) 8.29 ($generated@@38 $generated@@90 $generated@@91 $generated@@92 $generated@@93 (- $generated@@94 1) $generated@@96 $generated@@95)))))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@90) $generated@@91 $generated@@92 $generated@@93 $generated@@94 $generated@@95 $generated@@96) ($generated@@42 $generated@@92))
))))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@28 $generated@@9 $generated@@97 $generated@@25) (<= ($generated@@40 0) ($generated@@14 $generated@@97)))
 :pattern ( ($generated@@28 $generated@@9 $generated@@97 $generated@@25))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@98 ($generated@@87 $generated@@102 $generated@@99) $generated@@100 $generated@@101) ($generated@@24 $generated@@102 $generated@@99 $generated@@100 $generated@@101))
 :pattern ( ($generated@@98 ($generated@@87 $generated@@102 $generated@@99) $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@44 $generated@@103 $generated@@104) (=> ($generated@@98 $generated@@105 $generated@@106 $generated@@103) ($generated@@98 $generated@@105 $generated@@106 $generated@@104)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104) ($generated@@98 $generated@@105 $generated@@106 $generated@@103))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (!  (=> ($generated@@44 $generated@@107 $generated@@108) (=> ($generated@@24 $generated@@111 $generated@@109 $generated@@110 $generated@@107) ($generated@@24 $generated@@111 $generated@@109 $generated@@110 $generated@@108)))
 :pattern ( ($generated@@44 $generated@@107 $generated@@108) ($generated@@24 $generated@@111 $generated@@109 $generated@@110 $generated@@107))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 Int) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@38 ($generated@@39 $generated@@112) $generated@@113 $generated@@114 $generated@@115 $generated@@116 $generated@@117 $generated@@118) ($generated@@38 $generated@@112 $generated@@113 $generated@@114 $generated@@115 $generated@@116 $generated@@117 $generated@@118))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@112) $generated@@113 $generated@@114 $generated@@115 $generated@@116 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@119 $generated@@34)  (and ($generated@@28 $generated@@29 $generated@@119 $generated@@30) (or (not (= $generated@@119 $generated@@31)) (not true))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@119 $generated@@34))
 :pattern ( ($generated@@28 $generated@@29 $generated@@119 $generated@@30))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (or (not (= $generated@@120 $generated@@122)) (not true)) (=> (and ($generated@@44 $generated@@120 $generated@@121) ($generated@@44 $generated@@121 $generated@@122)) ($generated@@44 $generated@@120 $generated@@122)))
 :pattern ( ($generated@@44 $generated@@120 $generated@@121) ($generated@@44 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 Int) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (and (and (and ($generated@@42 $generated@@126) ($generated@@42 $generated@@127)) (and (or (not (= $generated@@128 $generated@@31)) (not true)) ($generated@@28 $generated@@29 $generated@@128 $generated@@34))) (or ($generated@@43 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@131) (and (and (<= ($generated@@40 0) $generated@@129) ($generated@@28 $generated@@29 $generated@@130 $generated@@34)) ($generated@@28 $generated@@29 $generated@@131 $generated@@34)))) (and ($generated@@123 $generated@@126) ($generated@@44 $generated@@126 $generated@@127))) (=> (forall (($generated@@132 T@U) ($generated@@133 T@U) ) true) (= ($generated@@38 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@131) ($generated@@38 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@130 $generated@@131))))
 :pattern ( ($generated@@123 $generated@@126) ($generated@@44 $generated@@126 $generated@@127) ($generated@@38 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@52 $generated@@135 ($generated@@87 $generated@@135 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@87 $generated@@135 $generated@@134))
)))
(assert  (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@136 $generated@@139 $generated@@140 $generated@@141 ($generated@@138 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@144 $generated@@145) $generated@@142)
 :weight 0
)) (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@136 $generated@@146 $generated@@147 $generated@@148 ($generated@@138 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@136 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@136 $generated@@155 $generated@@156 $generated@@157 ($generated@@138 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@136 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@12 ($generated@@136 $generated@@29 $generated@@54 $generated@@8 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@12 ($generated@@52 $generated@@8 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@29 ($generated@@56 $generated@@54 $generated@@55) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@136 $generated@@29 $generated@@54 $generated@@8 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (= ($generated@@23 $generated@@25) $generated@@2))
(assert (= ($generated@@170 $generated@@25) $generated@@5))
(assert (= ($generated@@23 $generated@@30) $generated@@3))
(assert (= ($generated@@170 $generated@@30) $generated@@6))
(assert (= ($generated@@23 $generated@@34) $generated@@4))
(assert (= ($generated@@170 $generated@@34) $generated@@6))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@87 $generated@@9 ($generated@@13 ($generated@@40 $generated@@171))) ($generated@@41 $generated@@55 ($generated@@87 $generated@@9 ($generated@@13 $generated@@171))))
 :pattern ( ($generated@@87 $generated@@9 ($generated@@13 ($generated@@40 $generated@@171))))
)))
(assert (forall (($generated@@172 Real) ) (! (= ($generated@@87 $generated@@10 ($generated@@15 ($generated@@83 $generated@@172))) ($generated@@41 $generated@@55 ($generated@@87 $generated@@10 ($generated@@15 $generated@@172))))
 :pattern ( ($generated@@87 $generated@@10 ($generated@@15 ($generated@@83 $generated@@172))))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@87 $generated@@174 ($generated@@41 $generated@@174 $generated@@173)) ($generated@@41 $generated@@55 ($generated@@87 $generated@@174 $generated@@173)))
 :pattern ( ($generated@@87 $generated@@174 ($generated@@41 $generated@@174 $generated@@173)))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Int) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (or ($generated@@43 $generated@@176 $generated@@177 ($generated@@41 $generated@@29 $generated@@178) ($generated@@40 $generated@@179) ($generated@@41 $generated@@29 $generated@@180) ($generated@@41 $generated@@29 $generated@@181)) (and (< 1 $generated@@37) (and (and (and (and (and (and (and ($generated@@42 $generated@@176) ($generated@@42 $generated@@177)) ($generated@@44 $generated@@176 $generated@@177)) (and (or (not (= $generated@@178 $generated@@31)) (not true)) (and ($generated@@28 $generated@@29 $generated@@178 $generated@@34) ($generated@@24 $generated@@29 $generated@@178 $generated@@34 $generated@@176)))) (<= ($generated@@40 0) $generated@@179)) ($generated@@28 $generated@@29 $generated@@180 $generated@@34)) ($generated@@28 $generated@@29 $generated@@181 $generated@@34)) (= ($generated@@41 $generated@@29 $generated@@180) ($generated@@41 $generated@@29 $generated@@181))))) (and (=> (or (not (= ($generated@@40 $generated@@179) ($generated@@40 0))) (not true)) ($generated@@43 $generated@@176 $generated@@177 ($generated@@41 $generated@@29 $generated@@178) ($generated@@40 (- $generated@@179 1)) ($generated@@41 $generated@@29 $generated@@181) ($generated@@41 $generated@@29 $generated@@180))) (= ($generated@@38 ($generated@@39 $generated@@175) $generated@@176 $generated@@177 ($generated@@41 $generated@@29 $generated@@178) ($generated@@40 $generated@@179) ($generated@@41 $generated@@29 $generated@@180) ($generated@@41 $generated@@29 $generated@@181)) (ite (= ($generated@@40 $generated@@179) ($generated@@40 0)) 8.29 ($generated@@38 ($generated@@39 $generated@@175) $generated@@176 $generated@@177 ($generated@@41 $generated@@29 $generated@@178) ($generated@@40 (- $generated@@179 1)) ($generated@@41 $generated@@29 $generated@@181) ($generated@@41 $generated@@29 $generated@@180))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@175) $generated@@176 $generated@@177 ($generated@@41 $generated@@29 $generated@@178) ($generated@@40 $generated@@179) ($generated@@41 $generated@@29 $generated@@180) ($generated@@41 $generated@@29 $generated@@181)) ($generated@@42 $generated@@177))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! ($generated@@24 $generated@@10 $generated@@183 $generated $generated@@182)
 :pattern ( ($generated@@24 $generated@@10 $generated@@183 $generated $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ) (! ($generated@@28 $generated@@10 $generated@@184 $generated)
 :pattern ( ($generated@@28 $generated@@10 $generated@@184 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@194  (=> (and (or (not (= $generated@@185 ($generated@@40 0))) (not true)) ($generated@@98 ($generated@@87 $generated@@29 $generated@@186) $generated@@30 $generated@@187)) (and (=> (= (ControlFlow 0 4) (- 0 9)) ($generated@@28 $generated@@9 ($generated@@13 (- $generated@@185 1)) $generated@@25)) (=> ($generated@@28 $generated@@9 ($generated@@13 (- $generated@@185 1)) $generated@@25) (=> (and (and (= $generated@@188 (- $generated@@185 1)) ($generated@@24 $generated@@9 ($generated@@13 $generated@@188) $generated@@25 $generated@@187)) (and ($generated@@24 $generated@@29 $generated@@189 $generated@@34 $generated@@187) ($generated@@24 $generated@@29 $generated@@190 $generated@@34 $generated@@187))) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@24 $generated@@29 $generated@@186 $generated@@34 $generated@@191)) (=> ($generated@@24 $generated@@29 $generated@@186 $generated@@34 $generated@@191) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@24 $generated@@29 $generated@@189 $generated@@34 $generated@@191)) (=> ($generated@@24 $generated@@29 $generated@@189 $generated@@34 $generated@@191) (and (=> (= (ControlFlow 0 4) (- 0 6)) (= $generated@@189 $generated@@190)) (=> (= $generated@@189 $generated@@190) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@185) (= $generated@@188 $generated@@185))) (=> (or (<= 0 $generated@@185) (= $generated@@188 $generated@@185)) (=> (= (ControlFlow 0 4) (- 0 3)) (or (< $generated@@188 $generated@@185) (and (= $generated@@188 $generated@@185) (or (and (= $generated@@189 $generated@@31) (or (not (= $generated@@190 $generated@@31)) (not true))) (and (=  (or (not (= $generated@@189 $generated@@31)) (not true))  (or (not (= $generated@@190 $generated@@31)) (not true))) (and (= $generated@@190 $generated@@31) (or (not (= $generated@@189 $generated@@31)) (not true))))))))))))))))))))))
(let (($generated@@195 true))
(let (($generated@@196 true))
(let (($generated@@197  (=> (and (= $generated@@192 ($generated@@137 $generated@@31 $generated@@187 $generated@@1 false)) (= $generated@@190 $generated@@189)) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@196) (=> (= (ControlFlow 0 10) 2) $generated@@195)) (=> (= (ControlFlow 0 10) 4) $generated@@194)))))
(let (($generated@@198  (=> (and ($generated@@42 $generated@@191) ($generated@@123 $generated@@191)) (=> (and (and (and (and (or (not (= $generated@@186 $generated@@31)) (not true)) (and ($generated@@28 $generated@@29 $generated@@186 $generated@@34) ($generated@@24 $generated@@29 $generated@@186 $generated@@34 $generated@@193))) (<= ($generated@@40 0) $generated@@185)) (and ($generated@@28 $generated@@29 $generated@@190 $generated@@34) ($generated@@24 $generated@@29 $generated@@190 $generated@@34 $generated@@193))) (and (and (and ($generated@@28 $generated@@29 $generated@@189 $generated@@34) ($generated@@24 $generated@@29 $generated@@189 $generated@@34 $generated@@187)) (= 1 $generated@@37)) (and (and (= $generated@@193 $generated@@191) (and ($generated@@44 $generated@@193 $generated@@187) ($generated@@42 $generated@@187))) (= (ControlFlow 0 11) 10)))) $generated@@197))))
$generated@@198))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
