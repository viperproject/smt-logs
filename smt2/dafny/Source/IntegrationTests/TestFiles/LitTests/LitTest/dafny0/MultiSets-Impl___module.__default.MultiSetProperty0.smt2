(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (T@U T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@26 (Int Int) Int)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) Int)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@75 (Int) Int)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@106 () T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (!  (and (= (+ (+ ($generated@@20 ($generated@@21 $generated@@24 $generated@@25)) ($generated@@20 ($generated@@21 $generated@@25 $generated@@24))) (* 2 ($generated@@20 ($generated@@22 $generated@@24 $generated@@25)))) ($generated@@20 ($generated@@23 $generated@@24 $generated@@25))) (= ($generated@@20 ($generated@@21 $generated@@24 $generated@@25)) (- ($generated@@20 $generated@@24) ($generated@@20 ($generated@@22 $generated@@24 $generated@@25)))))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@24 $generated@@25)))
)))
(assert (forall (($generated@@27 Int) ($generated@@28 Int) ) (!  (or (= ($generated@@26 $generated@@27 $generated@@28) $generated@@27) (= ($generated@@26 $generated@@27 $generated@@28) $generated@@28))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28))
)))
(assert (= ($generated@@4 $generated@@30) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@33 ($generated@@31 $generated@@34)) ($generated@@32 $generated@@33))
 :pattern ( ($generated@@29 $generated@@30 $generated@@33 ($generated@@31 $generated@@34)))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (<= ($generated@@35 $generated@@36 $generated@@38) ($generated@@35 $generated@@37 $generated@@38)) (= ($generated@@35 ($generated@@21 $generated@@36 $generated@@37) $generated@@38) 0))
 :pattern ( ($generated@@21 $generated@@36 $generated@@37) ($generated@@35 $generated@@37 $generated@@38) ($generated@@35 $generated@@36 $generated@@38))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@22 ($generated@@22 $generated@@39 $generated@@40) $generated@@40) ($generated@@22 $generated@@39 $generated@@40))
 :pattern ( ($generated@@22 ($generated@@22 $generated@@39 $generated@@40) $generated@@40))
)))
(assert (= ($generated@@4 $generated@@42) 4))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@45 $generated@@43 $generated@@46) ($generated@@41 $generated@@42 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@41 $generated@@42 $generated@@45 $generated@@43 $generated@@46))
 :pattern ( ($generated@@41 $generated@@42 $generated@@45 $generated@@44 $generated@@46))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@49 $generated@@56 $generated@@57 ($generated@@53 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@60) $generated@@58)
 :weight 0
)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (= $generated@@65 $generated@@66) (= ($generated@@49 $generated@@61 $generated@@62 ($generated@@53 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@66) ($generated@@49 $generated@@61 $generated@@62 $generated@@64 $generated@@66)))
 :weight 0
))) (= ($generated@@4 $generated@@50) 5)) (= ($generated@@4 $generated@@51) 6)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (= ($generated@@4 ($generated@@52 $generated@@67 $generated@@68)) 7))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@54 ($generated@@52 $generated@@69 $generated@@70)) $generated@@69)
 :pattern ( ($generated@@52 $generated@@69 $generated@@70))
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@52 $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@73 $generated@@44 $generated@@74)  (or (= $generated@@73 $generated@@47) ($generated@@9 ($generated@@48 $generated@@5 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@74 $generated@@73) $generated@@0)))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@73 $generated@@44 $generated@@74))
)))
(assert (forall (($generated@@76 Int) ) (!  (=> (<= 0 $generated@@76) (= ($generated@@75 $generated@@76) $generated@@76))
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@35 ($generated@@22 $generated@@77 $generated@@78) $generated@@79) ($generated@@26 ($generated@@35 $generated@@77 $generated@@79) ($generated@@35 $generated@@78 $generated@@79)))
 :pattern ( ($generated@@35 ($generated@@22 $generated@@77 $generated@@78) $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@48 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@48 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@87 $generated@@84) $generated@@85 $generated@@86) ($generated@@41 $generated@@87 $generated@@84 $generated@@85 $generated@@86))
 :pattern ( ($generated@@83 ($generated@@80 $generated@@87 $generated@@84) $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@20 ($generated@@23 $generated@@88 $generated@@89)) (+ ($generated@@20 $generated@@88) ($generated@@20 $generated@@89)))
 :pattern ( ($generated@@20 ($generated@@23 $generated@@88 $generated@@89)))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@90 $generated@@91 $generated@@44) (and (= ($generated@@80 $generated@@42 ($generated@@48 $generated@@42 $generated@@91)) $generated@@91) ($generated@@29 $generated@@42 ($generated@@48 $generated@@42 $generated@@91) $generated@@44)))
 :pattern ( ($generated@@90 $generated@@91 $generated@@44))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@90 $generated@@92 $generated@@43) (and (= ($generated@@80 $generated@@42 ($generated@@48 $generated@@42 $generated@@92)) $generated@@92) ($generated@@29 $generated@@42 ($generated@@48 $generated@@42 $generated@@92) $generated@@43)))
 :pattern ( ($generated@@90 $generated@@92 $generated@@43))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@29 $generated@@42 $generated@@93 $generated@@43)  (and ($generated@@29 $generated@@42 $generated@@93 $generated@@44) (or (not (= $generated@@93 $generated@@47)) (not true))))
 :pattern ( ($generated@@29 $generated@@42 $generated@@93 $generated@@43))
 :pattern ( ($generated@@29 $generated@@42 $generated@@93 $generated@@44))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@94 $generated@@95 $generated@@96) (= $generated@@95 $generated@@96))
 :pattern ( ($generated@@94 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@97 ($generated@@31 $generated@@98)) (forall (($generated@@99 T@U) ) (!  (=> (< 0 ($generated@@35 $generated@@97 $generated@@99)) ($generated@@90 $generated@@99 $generated@@98))
 :pattern ( ($generated@@35 $generated@@97 $generated@@99))
)))
 :pattern ( ($generated@@29 $generated@@30 $generated@@97 ($generated@@31 $generated@@98)))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@90 ($generated@@80 $generated@@102 $generated@@100) $generated@@101) ($generated@@29 $generated@@102 $generated@@100 $generated@@101))
 :pattern ( ($generated@@90 ($generated@@80 $generated@@102 $generated@@100) $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@32 $generated@@103) (forall (($generated@@104 T@U) ) (!  (and (<= 0 ($generated@@35 $generated@@103 $generated@@104)) (<= ($generated@@35 $generated@@103 $generated@@104) ($generated@@20 $generated@@103)))
 :pattern ( ($generated@@35 $generated@@103 $generated@@104))
)))
 :pattern ( ($generated@@32 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (<= 0 ($generated@@20 $generated@@105))
 :pattern ( ($generated@@20 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@35 $generated@@106 $generated@@107) 0)
 :pattern ( ($generated@@35 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (! ($generated@@29 $generated@@42 $generated@@108 $generated@@44)
 :pattern ( ($generated@@29 $generated@@42 $generated@@108 $generated@@44))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@109 ($generated@@31 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@31 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@31 $generated@@112)) $generated)
 :pattern ( ($generated@@31 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@48 $generated@@114 ($generated@@80 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@80 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@22 $generated@@115 ($generated@@22 $generated@@115 $generated@@116)) ($generated@@22 $generated@@115 $generated@@116))
 :pattern ( ($generated@@22 $generated@@115 ($generated@@22 $generated@@115 $generated@@116)))
)))
(assert (forall (($generated@@117 T@U) ) (!  (and (= (= ($generated@@20 $generated@@117) 0) (= $generated@@117 $generated@@106)) (=> (or (not (= ($generated@@20 $generated@@117) 0)) (not true)) (exists (($generated@@118 T@U) ) (! (< 0 ($generated@@35 $generated@@117 $generated@@118))
 :pattern ( ($generated@@35 $generated@@117 $generated@@118))
))))
 :pattern ( ($generated@@20 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@35 ($generated@@23 $generated@@119 $generated@@120) $generated@@121) (+ ($generated@@35 $generated@@119 $generated@@121) ($generated@@35 $generated@@120 $generated@@121)))
 :pattern ( ($generated@@35 ($generated@@23 $generated@@119 $generated@@120) $generated@@121))
)))
(assert  (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@122 $generated@@125 $generated@@126 $generated@@127 ($generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@130 $generated@@131) $generated@@128)
 :weight 0
)) (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@122 $generated@@132 $generated@@133 $generated@@134 ($generated@@124 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@122 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@122 $generated@@141 $generated@@142 $generated@@143 ($generated@@124 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@122 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@9 ($generated@@122 $generated@@42 $generated@@50 $generated@@5 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (or (not (= $generated@@154 $generated@@150)) (not true)) ($generated@@9 ($generated@@48 $generated@@5 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@151 $generated@@154) $generated@@152)))) $generated@@153))
 :pattern ( ($generated@@122 $generated@@42 $generated@@50 $generated@@5 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 Int) ($generated@@157 Int) ) (! (= (<= $generated@@156 $generated@@157) (= ($generated@@26 $generated@@156 $generated@@157) $generated@@156))
 :pattern ( ($generated@@26 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 Int) ($generated@@159 Int) ) (! (= (<= $generated@@159 $generated@@158) (= ($generated@@26 $generated@@158 $generated@@159) $generated@@159))
 :pattern ( ($generated@@26 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> ($generated@@90 $generated@@160 ($generated@@31 $generated@@161)) (and (= ($generated@@80 $generated@@30 ($generated@@48 $generated@@30 $generated@@160)) $generated@@160) ($generated@@29 $generated@@30 ($generated@@48 $generated@@30 $generated@@160) ($generated@@31 $generated@@161))))
 :pattern ( ($generated@@90 $generated@@160 ($generated@@31 $generated@@161)))
)))
(assert (= ($generated@@111 $generated@@44) $generated@@1))
(assert (= ($generated@@162 $generated@@44) $generated@@3))
(assert (= ($generated@@111 $generated@@43) $generated@@2))
(assert (= ($generated@@162 $generated@@43) $generated@@3))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@35 ($generated@@21 $generated@@163 $generated@@164) $generated@@165) ($generated@@75 (- ($generated@@35 $generated@@163 $generated@@165) ($generated@@35 $generated@@164 $generated@@165))))
 :pattern ( ($generated@@35 ($generated@@21 $generated@@163 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@166 Int) ) (!  (=> (< $generated@@166 0) (= ($generated@@75 $generated@@166) 0))
 :pattern ( ($generated@@75 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@94 $generated@@167 $generated@@168) (forall (($generated@@169 T@U) ) (! (= ($generated@@35 $generated@@167 $generated@@169) ($generated@@35 $generated@@168 $generated@@169))
 :pattern ( ($generated@@35 $generated@@167 $generated@@169))
 :pattern ( ($generated@@35 $generated@@168 $generated@@169))
)))
 :pattern ( ($generated@@94 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@41 $generated@@30 $generated@@170 ($generated@@31 $generated@@171) $generated@@172) (forall (($generated@@173 T@U) ) (!  (=> (< 0 ($generated@@35 $generated@@170 $generated@@173)) ($generated@@83 $generated@@173 $generated@@171 $generated@@172))
 :pattern ( ($generated@@35 $generated@@170 $generated@@173))
)))
 :pattern ( ($generated@@41 $generated@@30 $generated@@170 ($generated@@31 $generated@@171) $generated@@172))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@182  (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@94 ($generated@@23 $generated@@174 ($generated@@21 $generated@@175 $generated@@174)) $generated@@175))))
(let (($generated@@183  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@94 ($generated@@21 ($generated@@23 $generated@@174 $generated@@175) $generated@@175) $generated@@174))))
(let (($generated@@184  (and (=> (= (ControlFlow 0 7) 4) $generated@@183) (=> (= (ControlFlow 0 7) 6) $generated@@182))))
(let (($generated@@185  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@94 ($generated@@21 ($generated@@23 $generated@@174 $generated@@175) $generated@@174) $generated@@175))))
(let (($generated@@186  (and (=> (= (ControlFlow 0 8) 2) $generated@@185) (=> (= (ControlFlow 0 8) 7) $generated@@184))))
(let (($generated@@187  (=> (and (<= ($generated@@35 $generated@@175 ($generated@@80 $generated@@42 $generated@@176)) 0) (= (ControlFlow 0 11) 8)) $generated@@186)))
(let (($generated@@188  (=> (< 0 ($generated@@35 $generated@@175 ($generated@@80 $generated@@42 $generated@@176))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (< 0 ($generated@@35 ($generated@@23 $generated@@174 $generated@@175) ($generated@@80 $generated@@42 $generated@@176)))) (=> (< 0 ($generated@@35 ($generated@@23 $generated@@174 $generated@@175) ($generated@@80 $generated@@42 $generated@@176))) (=> (= (ControlFlow 0 9) 8) $generated@@186))))))
(let (($generated@@189  (and (=> (= (ControlFlow 0 12) 9) $generated@@188) (=> (= (ControlFlow 0 12) 11) $generated@@187))))
(let (($generated@@190  (=> (and (<= ($generated@@35 $generated@@174 ($generated@@80 $generated@@42 $generated@@176)) 0) (= (ControlFlow 0 15) 12)) $generated@@189)))
(let (($generated@@191  (=> (< 0 ($generated@@35 $generated@@174 ($generated@@80 $generated@@42 $generated@@176))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (< 0 ($generated@@35 ($generated@@23 $generated@@174 $generated@@175) ($generated@@80 $generated@@42 $generated@@176)))) (=> (< 0 ($generated@@35 ($generated@@23 $generated@@174 $generated@@175) ($generated@@80 $generated@@42 $generated@@176))) (=> (= (ControlFlow 0 13) 12) $generated@@189))))))
(let (($generated@@192  (=> (= $generated@@177 ($generated@@123 $generated@@47 $generated@@178 $generated@@0 false)) (and (=> (= (ControlFlow 0 16) 13) $generated@@191) (=> (= (ControlFlow 0 16) 15) $generated@@190)))))
(let (($generated@@193  (=> (and ($generated@@179 $generated@@178) ($generated@@180 $generated@@178)) (=> (and (and (and ($generated@@29 $generated@@30 $generated@@174 ($generated@@31 $generated@@43)) ($generated@@41 $generated@@30 $generated@@174 ($generated@@31 $generated@@43) $generated@@178)) (and ($generated@@29 $generated@@30 $generated@@175 ($generated@@31 $generated@@43)) ($generated@@41 $generated@@30 $generated@@175 ($generated@@31 $generated@@43) $generated@@178))) (and (and ($generated@@29 $generated@@42 $generated@@176 $generated@@43) ($generated@@41 $generated@@42 $generated@@176 $generated@@43 $generated@@178)) (and (= 0 $generated@@181) (= (ControlFlow 0 17) 16)))) $generated@@192))))
$generated@@193)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
