(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@43 (T@T T@U T@U) Bool)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@54 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@98 (T@U T@U T@U) Bool)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ) (! ($generated@@21 ($generated@@20 $generated@@22 $generated@@23) $generated@@23)
 :pattern ( ($generated@@20 $generated@@22 $generated@@23))
)))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> ($generated@@21 $generated@@24 $generated@@26) ($generated@@21 ($generated@@20 $generated@@24 $generated@@25) $generated@@26))
 :pattern ( ($generated@@20 $generated@@24 $generated@@25) ($generated@@21 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@21 $generated@@28 $generated@@30) ($generated@@21 ($generated@@27 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@21 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@21 $generated@@32 $generated@@33) ($generated@@21 ($generated@@27 $generated@@31 $generated@@32) $generated@@33))
 :pattern ( ($generated@@27 $generated@@31 $generated@@32) ($generated@@21 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@21 ($generated@@20 $generated@@34 $generated@@35) $generated@@36)  (or (= $generated@@36 $generated@@35) ($generated@@21 $generated@@34 $generated@@36)))
 :pattern ( ($generated@@21 ($generated@@20 $generated@@34 $generated@@35) $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@21 $generated@@39 $generated@@40) (not ($generated@@21 ($generated@@37 $generated@@38 $generated@@39) $generated@@40)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39) ($generated@@21 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ) (!  (not ($generated@@21 $generated@@41 $generated@@42))
 :pattern ( ($generated@@21 $generated@@41 $generated@@42))
)))
(assert (= ($generated@@4 $generated@@44) 3))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@48 $generated@@45)  (or (= $generated@@48 $generated@@46) (= ($generated@@47 $generated@@48) $generated@@45)))
 :pattern ( ($generated@@43 $generated@@44 $generated@@48 $generated@@45))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@27 ($generated@@27 $generated@@49 $generated@@50) $generated@@50) ($generated@@27 $generated@@49 $generated@@50))
 :pattern ( ($generated@@27 ($generated@@27 $generated@@49 $generated@@50) $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@21 ($generated@@37 $generated@@51 $generated@@52) $generated@@53)  (and ($generated@@21 $generated@@51 $generated@@53) (not ($generated@@21 $generated@@52 $generated@@53))))
 :pattern ( ($generated@@21 ($generated@@37 $generated@@51 $generated@@52) $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@54 $generated@@44 $generated@@56 $generated@@55 $generated@@57) ($generated@@54 $generated@@44 $generated@@56 $generated@@45 $generated@@57))
 :pattern ( ($generated@@54 $generated@@44 $generated@@56 $generated@@55 $generated@@57))
 :pattern ( ($generated@@54 $generated@@44 $generated@@56 $generated@@45 $generated@@57))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@59 $generated@@66 $generated@@67 ($generated@@63 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@70) $generated@@68)
 :weight 0
)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (or (= $generated@@75 $generated@@76) (= ($generated@@59 $generated@@71 $generated@@72 ($generated@@63 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@76) ($generated@@59 $generated@@71 $generated@@72 $generated@@74 $generated@@76)))
 :weight 0
))) (= ($generated@@4 $generated@@60) 4)) (= ($generated@@4 $generated@@61) 5)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (= ($generated@@4 ($generated@@62 $generated@@77 $generated@@78)) 6))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@65 ($generated@@62 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@62 $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@54 $generated@@44 $generated@@83 $generated@@45 $generated@@84)  (or (= $generated@@83 $generated@@46) ($generated@@9 ($generated@@58 $generated@@5 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@44 ($generated@@62 $generated@@60 $generated@@61) $generated@@84 $generated@@83) $generated@@0)))))
 :pattern ( ($generated@@54 $generated@@44 $generated@@83 $generated@@45 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@58 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@58 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 $generated@@89 $generated@@90) (forall (($generated@@91 T@U) ) (!  (or (not ($generated@@21 $generated@@89 $generated@@91)) (not ($generated@@21 $generated@@90 $generated@@91)))
 :pattern ( ($generated@@21 $generated@@89 $generated@@91))
 :pattern ( ($generated@@21 $generated@@90 $generated@@91))
)))
 :pattern ( ($generated@@88 $generated@@89 $generated@@90))
)))
(assert (= ($generated@@4 $generated@@92) 7))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@43 $generated@@92 $generated@@95 ($generated@@93 $generated@@96)) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@21 $generated@@95 $generated@@97) ($generated@@94 $generated@@97 $generated@@96))
 :pattern ( ($generated@@21 $generated@@95 $generated@@97))
)))
 :pattern ( ($generated@@43 $generated@@92 $generated@@95 ($generated@@93 $generated@@96)))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@98 ($generated@@85 $generated@@102 $generated@@99) $generated@@100 $generated@@101) ($generated@@54 $generated@@102 $generated@@99 $generated@@100 $generated@@101))
 :pattern ( ($generated@@98 ($generated@@85 $generated@@102 $generated@@99) $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@94 $generated@@103 $generated@@45) (and (= ($generated@@85 $generated@@44 ($generated@@58 $generated@@44 $generated@@103)) $generated@@103) ($generated@@43 $generated@@44 ($generated@@58 $generated@@44 $generated@@103) $generated@@45)))
 :pattern ( ($generated@@94 $generated@@103 $generated@@45))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@94 $generated@@104 $generated@@55) (and (= ($generated@@85 $generated@@44 ($generated@@58 $generated@@44 $generated@@104)) $generated@@104) ($generated@@43 $generated@@44 ($generated@@58 $generated@@44 $generated@@104) $generated@@55)))
 :pattern ( ($generated@@94 $generated@@104 $generated@@55))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@105 $generated@@55)  (and ($generated@@43 $generated@@44 $generated@@105 $generated@@45) (or (not (= $generated@@105 $generated@@46)) (not true))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@105 $generated@@55))
 :pattern ( ($generated@@43 $generated@@44 $generated@@105 $generated@@45))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@21 ($generated@@27 $generated@@106 $generated@@107) $generated@@108)  (or ($generated@@21 $generated@@106 $generated@@108) ($generated@@21 $generated@@107 $generated@@108)))
 :pattern ( ($generated@@21 ($generated@@27 $generated@@106 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> ($generated@@88 $generated@@109 $generated@@110) (and (= ($generated@@37 ($generated@@27 $generated@@109 $generated@@110) $generated@@109) $generated@@110) (= ($generated@@37 ($generated@@27 $generated@@109 $generated@@110) $generated@@110) $generated@@109)))
 :pattern ( ($generated@@27 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> ($generated@@111 $generated@@112 $generated@@113) (= $generated@@112 $generated@@113))
 :pattern ( ($generated@@111 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@94 ($generated@@85 $generated@@116 $generated@@114) $generated@@115) ($generated@@43 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@94 ($generated@@85 $generated@@116 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@54 $generated@@92 $generated@@117 ($generated@@93 $generated@@118) $generated@@119) (forall (($generated@@120 T@U) ) (!  (=> ($generated@@21 $generated@@117 $generated@@120) ($generated@@98 $generated@@120 $generated@@118 $generated@@119))
 :pattern ( ($generated@@21 $generated@@117 $generated@@120))
)))
 :pattern ( ($generated@@54 $generated@@92 $generated@@117 ($generated@@93 $generated@@118) $generated@@119))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@121 ($generated@@93 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@93 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@93 $generated@@124)) $generated)
 :pattern ( ($generated@@93 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@58 $generated@@126 ($generated@@85 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@85 $generated@@126 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@27 $generated@@127 ($generated@@27 $generated@@127 $generated@@128)) ($generated@@27 $generated@@127 $generated@@128))
 :pattern ( ($generated@@27 $generated@@127 ($generated@@27 $generated@@127 $generated@@128)))
)))
(assert  (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@129 $generated@@132 $generated@@133 $generated@@134 ($generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@129 $generated@@139 $generated@@140 $generated@@141 ($generated@@131 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@129 $generated@@148 $generated@@149 $generated@@150 ($generated@@131 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@129 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@9 ($generated@@129 $generated@@44 $generated@@60 $generated@@5 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@9 ($generated@@58 $generated@@5 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@44 ($generated@@62 $generated@@60 $generated@@61) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@129 $generated@@44 $generated@@60 $generated@@5 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@94 $generated@@163 ($generated@@93 $generated@@164)) (and (= ($generated@@85 $generated@@92 ($generated@@58 $generated@@92 $generated@@163)) $generated@@163) ($generated@@43 $generated@@92 ($generated@@58 $generated@@92 $generated@@163) ($generated@@93 $generated@@164))))
 :pattern ( ($generated@@94 $generated@@163 ($generated@@93 $generated@@164)))
)))
(assert (= ($generated@@123 $generated@@45) $generated@@1))
(assert (= ($generated@@165 $generated@@45) $generated@@3))
(assert (= ($generated@@123 $generated@@55) $generated@@2))
(assert (= ($generated@@165 $generated@@55) $generated@@3))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@111 $generated@@166 $generated@@167) (forall (($generated@@168 T@U) ) (! (= ($generated@@21 $generated@@166 $generated@@168) ($generated@@21 $generated@@167 $generated@@168))
 :pattern ( ($generated@@21 $generated@@166 $generated@@168))
 :pattern ( ($generated@@21 $generated@@167 $generated@@168))
)))
 :pattern ( ($generated@@111 $generated@@166 $generated@@167))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@185  (=> (and (= $generated@@169 ($generated@@170 $generated@@171)) (= $generated@@172 ($generated@@170 ($generated@@170 $generated@@171)))) (=> (and (and (= ($generated@@173 $generated@@171) $generated@@171) (= $generated@@174 ($generated@@130 $generated@@46 $generated@@175 $generated@@0 false))) (and (= $generated@@176 ($generated@@27 $generated@@177 ($generated@@20 $generated@@41 $generated@@178))) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@111 $generated@@176 ($generated@@27 $generated@@177 ($generated@@20 $generated@@41 $generated@@178)))))))
(let (($generated@@186  (=> (and (and ($generated@@179 $generated@@175) ($generated@@180 $generated@@175)) (and (or (not (= $generated@@181 $generated@@46)) (not true)) (and ($generated@@43 $generated@@44 $generated@@181 $generated@@55) ($generated@@54 $generated@@44 $generated@@181 $generated@@55 $generated@@175)))) (=> (and (and (and ($generated@@43 $generated@@92 $generated@@177 ($generated@@93 $generated@@182)) ($generated@@54 $generated@@92 $generated@@177 ($generated@@93 $generated@@182) $generated@@175)) (and ($generated@@94 $generated@@178 $generated@@182) ($generated@@98 $generated@@178 $generated@@182 $generated@@175))) (and (and ($generated@@43 $generated@@92 $generated@@183 ($generated@@93 $generated@@182)) ($generated@@54 $generated@@92 $generated@@183 ($generated@@93 $generated@@182) $generated@@175)) (and (= 0 $generated@@184) (= (ControlFlow 0 3) 2)))) $generated@@185))))
$generated@@186)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
