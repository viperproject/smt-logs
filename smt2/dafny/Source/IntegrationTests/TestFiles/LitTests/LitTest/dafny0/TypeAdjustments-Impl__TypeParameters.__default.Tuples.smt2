(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@U T@U T@U) Bool)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@85 (T@U) Int)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@97 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@T T@T) T@T)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@103 (T@T) T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24)
 :pattern ( ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24))
)))
(assert (= ($generated@@5 $generated@@27) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@31 ($generated@@28 $generated@@29 $generated@@30)) ($generated@@25 $generated@@31))
 :pattern ( ($generated@@25 $generated@@31) ($generated@@26 $generated@@27 $generated@@31 ($generated@@28 $generated@@29 $generated@@30)))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@26 $generated@@27 ($generated@@32 $generated@@36 $generated@@37) ($generated@@28 $generated@@34 $generated@@35))  (and ($generated@@33 $generated@@36 $generated@@34) ($generated@@33 $generated@@37 $generated@@35)))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@32 $generated@@36 $generated@@37) ($generated@@28 $generated@@34 $generated@@35)))
)))
(assert (forall (($generated@@39 Int) ) (! (= ($generated@@38 $generated@@39) $generated@@39)
 :pattern ( ($generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@40 $generated@@42 $generated@@41) $generated@@41)
 :pattern ( ($generated@@40 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> ($generated@@43 $generated@@49) (= ($generated@@21 $generated@@27 ($generated@@32 $generated@@47 $generated@@48) ($generated@@28 $generated@@45 $generated@@46) $generated@@49)  (and ($generated@@44 $generated@@47 $generated@@45 $generated@@49) ($generated@@44 $generated@@48 $generated@@46 $generated@@49))))
 :pattern ( ($generated@@21 $generated@@27 ($generated@@32 $generated@@47 $generated@@48) ($generated@@28 $generated@@45 $generated@@46) $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@25 $generated@@51) (= ($generated@@50 $generated@@51) $generated@@1))
 :pattern ( ($generated@@25 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 ($generated@@52 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@52 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@25 $generated@@56) (exists (($generated@@57 T@U) ($generated@@58 T@U) ) (= $generated@@56 ($generated@@32 $generated@@57 $generated@@58))))
 :pattern ( ($generated@@25 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@26 $generated@@7 $generated@@59 $generated@@22) (<= ($generated@@38 0) ($generated@@12 $generated@@59)))
 :pattern ( ($generated@@26 $generated@@7 $generated@@59 $generated@@22))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@44 ($generated@@53 $generated@@63 $generated@@60) $generated@@61 $generated@@62) ($generated@@21 $generated@@63 $generated@@60 $generated@@61 $generated@@62))
 :pattern ( ($generated@@44 ($generated@@53 $generated@@63 $generated@@60) $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@33 $generated@@64 $generated@@22) (and (= ($generated@@53 $generated@@7 ($generated@@52 $generated@@7 $generated@@64)) $generated@@64) ($generated@@26 $generated@@7 ($generated@@52 $generated@@7 $generated@@64) $generated@@22)))
 :pattern ( ($generated@@33 $generated@@64 $generated@@22))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@33 ($generated@@53 $generated@@67 $generated@@65) $generated@@66) ($generated@@26 $generated@@67 $generated@@65 $generated@@66))
 :pattern ( ($generated@@33 ($generated@@53 $generated@@67 $generated@@65) $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@50 ($generated@@32 $generated@@68 $generated@@69)) $generated@@1)
 :pattern ( ($generated@@32 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@70 ($generated@@28 $generated@@71 $generated@@72)) $generated@@71)
 :pattern ( ($generated@@28 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@73 ($generated@@28 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@28 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@76 ($generated@@32 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@32 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@79 ($generated@@32 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@32 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@52 $generated@@83 ($generated@@53 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@53 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (< ($generated@@84 $generated@@86) ($generated@@85 ($generated@@32 $generated@@86 $generated@@87)))
 :pattern ( ($generated@@32 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (< ($generated@@84 $generated@@89) ($generated@@85 ($generated@@32 $generated@@88 $generated@@89)))
 :pattern ( ($generated@@32 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> ($generated@@33 $generated@@92 ($generated@@28 $generated@@90 $generated@@91)) (and (= ($generated@@53 $generated@@27 ($generated@@52 $generated@@27 $generated@@92)) $generated@@92) ($generated@@26 $generated@@27 ($generated@@52 $generated@@27 $generated@@92) ($generated@@28 $generated@@90 $generated@@91))))
 :pattern ( ($generated@@33 $generated@@92 ($generated@@28 $generated@@90 $generated@@91)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@93 $generated@@104 $generated@@105 $generated@@106 ($generated@@100 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@109 $generated@@110) $generated@@107)
 :weight 0
)) (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@116 $generated@@118) (= ($generated@@93 $generated@@111 $generated@@112 $generated@@113 ($generated@@100 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@93 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@93 $generated@@120 $generated@@121 $generated@@122 ($generated@@100 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@93 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)))) (= ($generated@@5 $generated@@94) 4)) (= ($generated@@5 $generated@@95) 5)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@97 $generated@@129 $generated@@130 ($generated@@101 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@131) $generated@@133) $generated@@131)
 :weight 0
))) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@97 $generated@@134 $generated@@135 ($generated@@101 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@97 $generated@@134 $generated@@135 $generated@@137 $generated@@139)))
 :weight 0
))) (= ($generated@@5 $generated@@98) 6)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (= ($generated@@5 ($generated@@99 $generated@@140 $generated@@141)) 7))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@102 ($generated@@99 $generated@@142 $generated@@143)) $generated@@142)
 :pattern ( ($generated@@99 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@103 ($generated@@99 $generated@@144 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@99 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@10 ($generated@@93 $generated@@94 $generated@@95 $generated@@6 ($generated@@96 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))  (=> (and (or (not (= $generated@@150 $generated@@146)) (not true)) ($generated@@10 ($generated@@52 $generated@@6 ($generated@@97 $generated@@95 $generated@@98 ($generated@@97 $generated@@94 ($generated@@99 $generated@@95 $generated@@98) $generated@@147 $generated@@150) $generated@@148)))) $generated@@149))
 :pattern ( ($generated@@93 $generated@@94 $generated@@95 $generated@@6 ($generated@@96 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (and (= ($generated@@152 ($generated@@28 $generated@@154 $generated@@155)) $generated@@2) (= ($generated@@153 ($generated@@28 $generated@@154 $generated@@155)) $generated@@4))
 :pattern ( ($generated@@28 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@84 ($generated@@53 $generated@@27 $generated@@156)) ($generated@@85 $generated@@156))
 :pattern ( ($generated@@84 ($generated@@53 $generated@@27 $generated@@156)))
)))
(assert (= ($generated@@152 $generated@@22) $generated@@0))
(assert (= ($generated@@153 $generated@@22) $generated@@3))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and ($generated@@43 $generated@@159) (and ($generated@@25 $generated@@157) (exists (($generated@@160 T@U) ) (! ($generated@@21 $generated@@27 $generated@@157 ($generated@@28 $generated@@158 $generated@@160) $generated@@159)
 :pattern ( ($generated@@21 $generated@@27 $generated@@157 ($generated@@28 $generated@@158 $generated@@160) $generated@@159))
)))) ($generated@@44 ($generated@@76 $generated@@157) $generated@@158 $generated@@159))
 :pattern ( ($generated@@44 ($generated@@76 $generated@@157) $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@43 $generated@@163) (and ($generated@@25 $generated@@161) (exists (($generated@@164 T@U) ) (! ($generated@@21 $generated@@27 $generated@@161 ($generated@@28 $generated@@164 $generated@@162) $generated@@163)
 :pattern ( ($generated@@21 $generated@@27 $generated@@161 ($generated@@28 $generated@@164 $generated@@162) $generated@@163))
)))) ($generated@@44 ($generated@@79 $generated@@161) $generated@@162 $generated@@163))
 :pattern ( ($generated@@44 ($generated@@79 $generated@@161) $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@32 ($generated@@40 $generated@@98 $generated@@165) ($generated@@40 $generated@@98 $generated@@166)) ($generated@@40 $generated@@27 ($generated@@32 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@32 ($generated@@40 $generated@@98 $generated@@165) ($generated@@40 $generated@@98 $generated@@166)))
)))
(assert (forall (($generated@@167 Int) ) (! (= ($generated@@53 $generated@@7 ($generated@@11 ($generated@@38 $generated@@167))) ($generated@@40 $generated@@98 ($generated@@53 $generated@@7 ($generated@@11 $generated@@167))))
 :pattern ( ($generated@@53 $generated@@7 ($generated@@11 ($generated@@38 $generated@@167))))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@53 $generated@@169 ($generated@@40 $generated@@169 $generated@@168)) ($generated@@40 $generated@@98 ($generated@@53 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@53 $generated@@169 ($generated@@40 $generated@@169 $generated@@168)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@180  (=> (= $generated@@170 ($generated@@96 $generated@@171 $generated@@172 $generated false)) (=> (and (and (and ($generated@@26 $generated@@27 $generated@@173 ($generated@@28 $generated@@22 $generated@@22)) ($generated@@21 $generated@@27 $generated@@173 ($generated@@28 $generated@@22 $generated@@22) $generated@@172)) (= $generated@@174 ($generated@@32 ($generated@@53 $generated@@7 ($generated@@11 $generated@@175)) ($generated@@53 $generated@@7 ($generated@@11 $generated@@175))))) (and (and ($generated@@26 $generated@@27 $generated@@176 ($generated@@28 $generated@@22 $generated@@22)) ($generated@@21 $generated@@27 $generated@@176 ($generated@@28 $generated@@22 $generated@@22) $generated@@172)) (and ($generated@@25 $generated@@176) ($generated@@25 $generated@@176)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@38 0) ($generated@@12 ($generated@@52 $generated@@7 ($generated@@76 $generated@@176))))) (=> (<= ($generated@@38 0) ($generated@@12 ($generated@@52 $generated@@7 ($generated@@76 $generated@@176)))) (=> ($generated@@25 $generated@@176) (=> (and ($generated@@25 $generated@@176) (= (ControlFlow 0 2) (- 0 1))) (<= ($generated@@38 0) ($generated@@12 ($generated@@52 $generated@@7 ($generated@@79 $generated@@176))))))))))))
(let (($generated@@181  (=> (and (and ($generated@@43 $generated@@172) ($generated@@177 $generated@@172)) (<= ($generated@@38 0) $generated@@175)) (=> (and (and (and ($generated@@26 $generated@@27 $generated@@178 ($generated@@28 $generated@@22 $generated@@22)) ($generated@@21 $generated@@27 $generated@@178 ($generated@@28 $generated@@22 $generated@@22) $generated@@172)) true) (and (= 0 $generated@@179) (= (ControlFlow 0 4) 2))) $generated@@180))))
$generated@@181)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
