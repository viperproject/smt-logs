(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) Int)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U Int) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@U T@U T@U) Bool)
(declare-fun $generated@@61 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@89 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@93 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@T T@T) T@T)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@3 $generated@@25) 3))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@23 $generated@@36) (and (< 0 $generated@@20) ($generated@@24 $generated@@25 $generated@@36 ($generated@@26 ($generated@@26 $generated))))) (and (=> ($generated@@27 $generated@@36 ($generated@@28 $generated@@29 ($generated@@30 $generated@@25 ($generated@@31 $generated@@25 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2)))))))) ($generated@@33 ($generated@@31 $generated@@25 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2))))))) (= ($generated@@21 ($generated@@22 $generated@@35) $generated@@36) (ite ($generated@@27 $generated@@36 ($generated@@28 $generated@@29 ($generated@@30 $generated@@25 ($generated@@31 $generated@@25 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2)))))))) ($generated@@34 $generated@@35 ($generated@@31 $generated@@25 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2)))))) 0))))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@35) $generated@@36))
))))
(assert (= ($generated@@37 $generated@@29) 0))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (or ($generated@@33 $generated@@39) (and (< 0 $generated@@20) ($generated@@24 $generated@@25 $generated@@39 ($generated@@26 $generated)))) (and (=> ($generated@@27 $generated@@39 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2))))) ($generated@@23 ($generated@@31 $generated@@25 ($generated@@28 $generated@@29 ($generated@@30 $generated@@25 ($generated@@31 $generated@@25 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2)))))))))) (= ($generated@@34 ($generated@@22 $generated@@38) $generated@@39) (ite ($generated@@27 $generated@@39 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2))))) ($generated@@21 $generated@@38 ($generated@@31 $generated@@25 ($generated@@28 $generated@@29 ($generated@@30 $generated@@25 ($generated@@31 $generated@@25 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2))))))))) 0))))
 :pattern ( ($generated@@34 ($generated@@22 $generated@@38) $generated@@39))
))))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (or ($generated@@23 ($generated@@31 $generated@@25 $generated@@41)) (and (< 0 $generated@@20) ($generated@@24 $generated@@25 $generated@@41 ($generated@@26 ($generated@@26 $generated))))) (and (=> ($generated@@27 $generated@@41 ($generated@@28 $generated@@29 ($generated@@30 $generated@@25 ($generated@@31 $generated@@25 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2)))))))) ($generated@@33 ($generated@@31 $generated@@25 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2))))))) (= ($generated@@21 ($generated@@22 $generated@@40) ($generated@@31 $generated@@25 $generated@@41)) (ite ($generated@@27 $generated@@41 ($generated@@28 $generated@@29 ($generated@@30 $generated@@25 ($generated@@31 $generated@@25 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2)))))))) ($generated@@34 ($generated@@22 $generated@@40) ($generated@@31 $generated@@25 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2)))))) 0))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@22 $generated@@40) ($generated@@31 $generated@@25 $generated@@41)))
))))
(assert (forall (($generated@@42 Int) ) (! (= ($generated@@32 $generated@@42) $generated@@42)
 :pattern ( ($generated@@32 $generated@@42))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@T) ) (! (= ($generated@@31 $generated@@44 $generated@@43) $generated@@43)
 :pattern ( ($generated@@31 $generated@@44 $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and ($generated@@24 $generated@@25 $generated@@46 ($generated@@26 $generated@@48)) ($generated@@45 $generated@@47 $generated@@48)) ($generated@@24 $generated@@25 ($generated@@28 $generated@@46 $generated@@47) ($generated@@26 $generated@@48)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@28 $generated@@46 $generated@@47) ($generated@@26 $generated@@48)))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (or ($generated@@33 ($generated@@31 $generated@@25 $generated@@50)) (and (< 0 $generated@@20) ($generated@@24 $generated@@25 $generated@@50 ($generated@@26 $generated)))) (and (=> ($generated@@27 $generated@@50 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2))))) ($generated@@23 ($generated@@31 $generated@@25 ($generated@@28 $generated@@29 ($generated@@30 $generated@@25 ($generated@@31 $generated@@25 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2)))))))))) (= ($generated@@34 ($generated@@22 $generated@@49) ($generated@@31 $generated@@25 $generated@@50)) (ite ($generated@@27 $generated@@50 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2))))) ($generated@@21 ($generated@@22 $generated@@49) ($generated@@31 $generated@@25 ($generated@@28 $generated@@29 ($generated@@30 $generated@@25 ($generated@@31 $generated@@25 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2))))))))) 0))))
 :weight 3
 :pattern ( ($generated@@34 ($generated@@22 $generated@@49) ($generated@@31 $generated@@25 $generated@@50)))
))))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@27 $generated@@52 $generated@@53)  (and (= ($generated@@37 $generated@@52) ($generated@@37 $generated@@53)) (forall (($generated@@54 Int) ) (!  (=> (and (<= 0 $generated@@54) (< $generated@@54 ($generated@@37 $generated@@52))) (= ($generated@@51 $generated@@52 $generated@@54) ($generated@@51 $generated@@53 $generated@@54)))
 :pattern ( ($generated@@51 $generated@@52 $generated@@54))
 :pattern ( ($generated@@51 $generated@@53 $generated@@54))
))))
 :pattern ( ($generated@@27 $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@30 $generated@@57 ($generated@@55 $generated@@57 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@55 $generated@@57 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@37 ($generated@@28 $generated@@58 $generated@@59)) (+ 1 ($generated@@37 $generated@@58)))
 :pattern ( ($generated@@28 $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@60 ($generated@@30 $generated@@65 $generated@@62) $generated@@63 $generated@@64) ($generated@@61 $generated@@65 $generated@@62 $generated@@63 $generated@@64))
 :pattern ( ($generated@@60 ($generated@@30 $generated@@65 $generated@@62) $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 Int) ($generated@@68 T@U) ) (!  (and (=> (= $generated@@67 ($generated@@37 $generated@@66)) (= ($generated@@51 ($generated@@28 $generated@@66 $generated@@68) $generated@@67) $generated@@68)) (=> (or (not (= $generated@@67 ($generated@@37 $generated@@66))) (not true)) (= ($generated@@51 ($generated@@28 $generated@@66 $generated@@68) $generated@@67) ($generated@@51 $generated@@66 $generated@@67))))
 :pattern ( ($generated@@51 ($generated@@28 $generated@@66 $generated@@68) $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@27 $generated@@69 $generated@@70) (= $generated@@69 $generated@@70))
 :pattern ( ($generated@@27 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@45 $generated@@71 $generated) (and (= ($generated@@30 $generated@@5 ($generated@@55 $generated@@5 $generated@@71)) $generated@@71) ($generated@@24 $generated@@5 ($generated@@55 $generated@@5 $generated@@71) $generated)))
 :pattern ( ($generated@@45 $generated@@71 $generated))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@45 ($generated@@30 $generated@@74 $generated@@72) $generated@@73) ($generated@@24 $generated@@74 $generated@@72 $generated@@73))
 :pattern ( ($generated@@45 ($generated@@30 $generated@@74 $generated@@72) $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (! (<= 0 ($generated@@37 $generated@@75))
 :pattern ( ($generated@@37 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@61 $generated@@25 $generated@@76 ($generated@@26 $generated@@77) $generated@@78) (forall (($generated@@79 Int) ) (!  (=> (and (<= 0 $generated@@79) (< $generated@@79 ($generated@@37 $generated@@76))) ($generated@@60 ($generated@@51 $generated@@76 $generated@@79) $generated@@77 $generated@@78))
 :pattern ( ($generated@@51 $generated@@76 $generated@@79))
)))
 :pattern ( ($generated@@61 $generated@@25 $generated@@76 ($generated@@26 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@80 ($generated@@26 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@26 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@19 ($generated@@26 $generated@@82)) $generated@@1)
 :pattern ( ($generated@@26 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@55 $generated@@84 ($generated@@30 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@30 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@34 ($generated@@22 $generated@@85) $generated@@86) ($generated@@34 $generated@@85 $generated@@86))
 :pattern ( ($generated@@34 ($generated@@22 $generated@@85) $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@87) $generated@@88) ($generated@@21 $generated@@87 $generated@@88))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@87) $generated@@88))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@89 $generated@@100 $generated@@101 $generated@@102 ($generated@@96 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@105 $generated@@106) $generated@@103)
 :weight 0
)) (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@112 $generated@@114) (= ($generated@@89 $generated@@107 $generated@@108 $generated@@109 ($generated@@96 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@114 $generated@@115) ($generated@@89 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@114 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@89 $generated@@116 $generated@@117 $generated@@118 ($generated@@96 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@89 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)))) (= ($generated@@3 $generated@@90) 4)) (= ($generated@@3 $generated@@91) 5)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@93 $generated@@125 $generated@@126 ($generated@@97 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@127) $generated@@129) $generated@@127)
 :weight 0
))) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@93 $generated@@130 $generated@@131 ($generated@@97 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@93 $generated@@130 $generated@@131 $generated@@133 $generated@@135)))
 :weight 0
))) (= ($generated@@3 $generated@@94) 6)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ) (= ($generated@@3 ($generated@@95 $generated@@136 $generated@@137)) 7))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (! (= ($generated@@98 ($generated@@95 $generated@@138 $generated@@139)) $generated@@138)
 :pattern ( ($generated@@95 $generated@@138 $generated@@139))
))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@99 ($generated@@95 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@95 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Bool) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@8 ($generated@@89 $generated@@90 $generated@@91 $generated@@4 ($generated@@92 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@146 $generated@@147))  (=> (and (or (not (= $generated@@146 $generated@@142)) (not true)) ($generated@@8 ($generated@@55 $generated@@4 ($generated@@93 $generated@@91 $generated@@94 ($generated@@93 $generated@@90 ($generated@@95 $generated@@91 $generated@@94) $generated@@143 $generated@@146) $generated@@144)))) $generated@@145))
 :pattern ( ($generated@@89 $generated@@90 $generated@@91 $generated@@4 ($generated@@92 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (and (= ($generated@@148 ($generated@@28 $generated@@150 $generated@@151)) $generated@@150) (= ($generated@@149 ($generated@@28 $generated@@150 $generated@@151)) $generated@@151))
 :pattern ( ($generated@@28 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@45 $generated@@152 ($generated@@26 $generated@@153)) (and (= ($generated@@30 $generated@@25 ($generated@@55 $generated@@25 $generated@@152)) $generated@@152) ($generated@@24 $generated@@25 ($generated@@55 $generated@@25 $generated@@152) ($generated@@26 $generated@@153))))
 :pattern ( ($generated@@45 $generated@@152 ($generated@@26 $generated@@153)))
)))
(assert (forall (($generated@@154 Int) ) (! (= ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 $generated@@154))) ($generated@@31 $generated@@94 ($generated@@30 $generated@@5 ($generated@@9 $generated@@154))))
 :pattern ( ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 $generated@@154))))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@30 $generated@@156 ($generated@@31 $generated@@156 $generated@@155)) ($generated@@31 $generated@@94 ($generated@@30 $generated@@156 $generated@@155)))
 :pattern ( ($generated@@30 $generated@@156 ($generated@@31 $generated@@156 $generated@@155)))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= ($generated@@37 $generated@@157) 0) (= $generated@@157 $generated@@29))
 :pattern ( ($generated@@37 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! ($generated@@61 $generated@@5 $generated@@159 $generated $generated@@158)
 :pattern ( ($generated@@61 $generated@@5 $generated@@159 $generated $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@160 ($generated@@26 $generated@@161)) (forall (($generated@@162 Int) ) (!  (=> (and (<= 0 $generated@@162) (< $generated@@162 ($generated@@37 $generated@@160))) ($generated@@45 ($generated@@51 $generated@@160 $generated@@162) $generated@@161))
 :pattern ( ($generated@@51 $generated@@160 $generated@@162))
)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@160 ($generated@@26 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! ($generated@@24 $generated@@5 $generated@@163 $generated)
 :pattern ( ($generated@@24 $generated@@5 $generated@@163 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 (T@U) Int)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@172 true))
(let (($generated@@173  (=> (and (and ($generated@@27 $generated@@164 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2))))) (= $generated@@165 ($generated@@31 $generated@@25 ($generated@@28 $generated@@29 ($generated@@30 $generated@@25 ($generated@@31 $generated@@25 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 1)))) ($generated@@30 $generated@@5 ($generated@@9 ($generated@@32 2)))))))))) (and ($generated@@61 $generated@@25 $generated@@165 ($generated@@26 ($generated@@26 $generated)) $generated@@166) (= (ControlFlow 0 3) (- 0 2)))) (< ($generated@@167 $generated@@165) ($generated@@167 $generated@@164)))))
(let (($generated@@174 true))
(let (($generated@@175  (=> (= $generated@@168 ($generated@@92 $generated@@169 $generated@@166 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 5) 1) $generated@@174) (=> (= (ControlFlow 0 5) 3) $generated@@173)) (=> (= (ControlFlow 0 5) 4) $generated@@172)))))
(let (($generated@@176  (=> (and (and (and ($generated@@170 $generated@@166) ($generated@@171 $generated@@166)) ($generated@@24 $generated@@25 $generated@@164 ($generated@@26 $generated))) (and (= 0 $generated@@20) (= (ControlFlow 0 6) 5))) $generated@@175)))
$generated@@176))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
