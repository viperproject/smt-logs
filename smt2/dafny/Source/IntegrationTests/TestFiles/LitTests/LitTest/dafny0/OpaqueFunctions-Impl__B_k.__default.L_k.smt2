(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@T T@T) T@T)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U) T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) Int)
(declare-fun $generated@@161 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert (= ($generated@@8 $generated@@28) 3))
(assert (forall (($generated@@32 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@32 $generated@@29)  (or (= $generated@@32 $generated@@30) (= ($generated@@31 $generated@@32) $generated@@29)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 $generated@@29))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@40 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@40 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@40 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@8 $generated@@41) 4)) (= ($generated@@8 $generated@@42) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@8 ($generated@@43 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@43 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@43 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@43 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@43 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (or ($generated@@34 $generated@@65 $generated@@66) (and ($generated@@35 $generated@@65) (and (or (not (= $generated@@66 $generated@@30)) (not true)) (and ($generated@@27 $generated@@28 $generated@@66 $generated@@36) ($generated@@37 $generated@@28 $generated@@66 $generated@@36 $generated@@65))))) (and (=> ($generated@@33 $generated@@65 $generated@@66) (<= ($generated@@38 0) ($generated@@15 ($generated@@39 $generated@@10 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@65 $generated@@66) $generated@@44))))) (=> (= ($generated@@15 ($generated@@39 $generated@@10 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@65 $generated@@66) $generated@@44))) ($generated@@38 8)) ($generated@@33 $generated@@65 $generated@@66))))
 :pattern ( ($generated@@33 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@37 $generated@@28 $generated@@67 $generated@@36 $generated@@68) ($generated@@37 $generated@@28 $generated@@67 $generated@@29 $generated@@68))
 :pattern ( ($generated@@37 $generated@@28 $generated@@67 $generated@@36 $generated@@68))
 :pattern ( ($generated@@37 $generated@@28 $generated@@67 $generated@@29 $generated@@68))
)))
(assert (= ($generated@@24 $generated@@44) 0))
(assert (= ($generated@@69 $generated@@5 $generated@@7) $generated@@44))
(assert  (not ($generated@@70 $generated@@44)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@37 $generated@@28 $generated@@71 $generated@@29 $generated@@72)  (or (= $generated@@71 $generated@@30) ($generated@@13 ($generated@@39 $generated@@9 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@72 $generated@@71) $generated@@1)))))
 :pattern ( ($generated@@37 $generated@@28 $generated@@71 $generated@@29 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@73 $generated@@74 $generated@@75) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@13 ($generated@@39 $generated@@9 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@74 $generated@@76) $generated@@1))) ($generated@@13 ($generated@@39 $generated@@9 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@75 $generated@@76) $generated@@1))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@75 $generated@@76) $generated@@1))
)))
 :pattern ( ($generated@@73 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 Int) ) (! (= ($generated@@38 $generated@@77) $generated@@77)
 :pattern ( ($generated@@38 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@39 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@39 $generated@@83 $generated@@82))
)))
(assert ($generated@@70 $generated@@1))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (and ($generated@@35 $generated@@84) (and (or (not (= $generated@@85 $generated@@30)) (not true)) (= ($generated@@31 $generated@@85) $generated@@29))) ($generated@@13 ($generated@@39 $generated@@9 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@84 $generated@@85) $generated@@1)))) ($generated@@37 $generated@@10 ($generated@@39 $generated@@10 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@84 $generated@@85) $generated@@44)) $generated $generated@@84))
 :pattern ( ($generated@@39 $generated@@10 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@84 $generated@@85) $generated@@44)))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@86 ($generated@@81 $generated@@90 $generated@@87) $generated@@88 $generated@@89) ($generated@@37 $generated@@90 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@86 ($generated@@81 $generated@@90 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@73 $generated@@91 $generated@@92) (=> ($generated@@86 $generated@@93 $generated@@94 $generated@@91) ($generated@@86 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@73 $generated@@91 $generated@@92) ($generated@@86 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (!  (=> ($generated@@73 $generated@@95 $generated@@96) (=> ($generated@@37 $generated@@99 $generated@@97 $generated@@98 $generated@@95) ($generated@@37 $generated@@99 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@73 $generated@@95 $generated@@96) ($generated@@37 $generated@@99 $generated@@97 $generated@@98 $generated@@95))
)))
(assert  (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@100 $generated@@103 $generated@@104 $generated@@105 ($generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@100 $generated@@110 $generated@@111 $generated@@112 ($generated@@102 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@100 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@100 $generated@@119 $generated@@120 $generated@@121 ($generated@@102 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@100 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@13 ($generated@@100 $generated@@28 $generated@@41 $generated@@9 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))  (=> (and (or (not (= $generated@@132 $generated@@128)) (not true)) ($generated@@13 ($generated@@39 $generated@@9 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@129 $generated@@132) $generated@@130)))) (= $generated@@132 $generated@@131)))
 :pattern ( ($generated@@100 $generated@@28 $generated@@41 $generated@@9 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@134 $generated@@36)  (and ($generated@@27 $generated@@28 $generated@@134 $generated@@29) (or (not (= $generated@@134 $generated@@30)) (not true))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@134 $generated@@36))
 :pattern ( ($generated@@27 $generated@@28 $generated@@134 $generated@@29))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (or (not (= $generated@@135 $generated@@137)) (not true)) (=> (and ($generated@@73 $generated@@135 $generated@@136) ($generated@@73 $generated@@136 $generated@@137)) ($generated@@73 $generated@@135 $generated@@137)))
 :pattern ( ($generated@@73 $generated@@135 $generated@@136) ($generated@@73 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (and (= ($generated@@138 ($generated@@69 $generated@@139 $generated@@140)) $generated@@139) (= ($generated@@26 ($generated@@69 $generated@@139 $generated@@140)) $generated@@140))
 :pattern ( ($generated@@69 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@39 $generated@@142 ($generated@@81 $generated@@142 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@81 $generated@@142 $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and ($generated@@35 $generated@@144) ($generated@@35 $generated@@145)) (and (or (not (= $generated@@146 $generated@@30)) (not true)) ($generated@@27 $generated@@28 $generated@@146 $generated@@36))) (and ($generated@@143 $generated@@144) ($generated@@73 $generated@@144 $generated@@145))) (=> (forall (($generated@@147 T@U) ($generated@@148 T@U) )  (=> (and (or (not (= $generated@@147 $generated@@30)) (not true)) (= $generated@@147 $generated@@146)) (= ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@144 $generated@@147) $generated@@148) ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@145 $generated@@147) $generated@@148)))) (= ($generated@@33 $generated@@144 $generated@@146) ($generated@@33 $generated@@145 $generated@@146))))
 :pattern ( ($generated@@143 $generated@@144) ($generated@@73 $generated@@144 $generated@@145) ($generated@@33 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and ($generated@@35 $generated@@149) (and (or (not (= $generated@@150 $generated@@30)) (not true)) (= ($generated@@31 $generated@@150) $generated@@29))) ($generated@@27 $generated@@10 ($generated@@39 $generated@@10 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@149 $generated@@150) $generated@@44)) $generated))
 :pattern ( ($generated@@39 $generated@@10 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@149 $generated@@150) $generated@@44)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and ($generated@@35 $generated@@152) ($generated@@35 $generated@@153)) (and (or (not (= $generated@@154 $generated@@30)) (not true)) ($generated@@27 $generated@@28 $generated@@154 $generated@@36))) (and ($generated@@143 $generated@@152) ($generated@@73 $generated@@152 $generated@@153))) (=> (forall (($generated@@155 T@U) ($generated@@156 T@U) )  (=> (and (or (not (= $generated@@155 $generated@@30)) (not true)) (= $generated@@155 $generated@@154)) (= ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@152 $generated@@155) $generated@@156) ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@153 $generated@@155) $generated@@156)))) (= ($generated@@151 $generated@@152 $generated@@154) ($generated@@151 $generated@@153 $generated@@154))))
 :pattern ( ($generated@@143 $generated@@152) ($generated@@73 $generated@@152 $generated@@153) ($generated@@151 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@35 ($generated@@45 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@157 $generated@@158 ($generated@@45 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@157 $generated@@158) $generated@@159 $generated@@160))) ($generated@@73 $generated@@157 ($generated@@45 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@157 $generated@@158 ($generated@@45 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@157 $generated@@158) $generated@@159 $generated@@160))))
 :pattern ( ($generated@@45 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@157 $generated@@158 ($generated@@45 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@157 $generated@@158) $generated@@159 $generated@@160)))
)))
(assert (= ($generated@@25 $generated@@36) $generated@@3))
(assert (= ($generated@@161 $generated@@36) $generated@@6))
(assert (= ($generated@@25 $generated@@29) $generated@@4))
(assert (= ($generated@@161 $generated@@29) $generated@@6))
(assert (forall (($generated@@162 Int) ) (! (= ($generated@@81 $generated@@10 ($generated@@14 ($generated@@38 $generated@@162))) ($generated@@78 $generated@@42 ($generated@@81 $generated@@10 ($generated@@14 $generated@@162))))
 :pattern ( ($generated@@81 $generated@@10 ($generated@@14 ($generated@@38 $generated@@162))))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@81 $generated@@164 ($generated@@78 $generated@@164 $generated@@163)) ($generated@@78 $generated@@42 ($generated@@81 $generated@@164 $generated@@163)))
 :pattern ( ($generated@@81 $generated@@164 ($generated@@78 $generated@@164 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! ($generated@@37 $generated@@10 $generated@@166 $generated $generated@@165)
 :pattern ( ($generated@@37 $generated@@10 $generated@@166 $generated $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! ($generated@@27 $generated@@10 $generated@@167 $generated)
 :pattern ( ($generated@@27 $generated@@10 $generated@@167 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@177  (=> (and (and ($generated@@34 $generated@@168 $generated@@169) (= (ControlFlow 0 15) (- 0 14))) ($generated@@33 $generated@@168 $generated@@169)) (= ($generated@@15 ($generated@@39 $generated@@10 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@168 $generated@@169) $generated@@44))) ($generated@@38 8)))))
(let (($generated@@178  (=> (and (not ($generated@@33 $generated@@168 $generated@@169)) (= (ControlFlow 0 18) 15)) $generated@@177)))
(let (($generated@@179  (=> ($generated@@33 $generated@@168 $generated@@169) (and (=> (= (ControlFlow 0 16) (- 0 17)) (or (not (= $generated@@169 $generated@@30)) (not true))) (=> (= (ControlFlow 0 16) 15) $generated@@177)))))
(let (($generated@@180  (and (=> (= (ControlFlow 0 19) (- 0 20)) (or (not (= $generated@@169 $generated@@30)) (not true))) (=> (and ($generated@@86 ($generated@@81 $generated@@28 $generated@@169) $generated@@29 $generated@@168) ($generated@@34 $generated@@168 $generated@@169)) (and (=> (= (ControlFlow 0 19) 16) $generated@@179) (=> (= (ControlFlow 0 19) 18) $generated@@178))))))
(let (($generated@@181  (and (=> (= (ControlFlow 0 10) (- 0 13)) (or (not (= $generated@@169 $generated@@30)) (not true))) (=> (or (not (= $generated@@169 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@13 ($generated@@100 $generated@@28 $generated@@41 $generated@@9 $generated@@170 $generated@@169 $generated@@44))) (=> ($generated@@13 ($generated@@100 $generated@@28 $generated@@41 $generated@@9 $generated@@170 $generated@@169 $generated@@44)) (=> (= $generated@@171 ($generated@@38 8)) (=> (and (= $generated@@172 ($generated@@45 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@168 $generated@@169 ($generated@@45 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@168 $generated@@169) $generated@@44 ($generated@@81 $generated@@10 ($generated@@14 $generated@@171))))) ($generated@@35 $generated@@172)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (not (= $generated@@169 $generated@@30)) (not true))) (=> (and (and ($generated@@86 ($generated@@81 $generated@@28 $generated@@169) $generated@@29 $generated@@172) ($generated@@34 $generated@@172 $generated@@169)) (and ($generated@@34 $generated@@172 $generated@@169) (= (ControlFlow 0 10) (- 0 9)))) ($generated@@33 $generated@@172 $generated@@169)))))))))))
(let (($generated@@182  (and (=> (= (ControlFlow 0 21) 10) $generated@@181) (=> (= (ControlFlow 0 21) 19) $generated@@180))))
(let (($generated@@183  (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (not (= $generated@@169 $generated@@30)) (not true))) (=> (or (not (= $generated@@169 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@13 ($generated@@100 $generated@@28 $generated@@41 $generated@@9 $generated@@170 $generated@@169 $generated@@44))) (=> ($generated@@13 ($generated@@100 $generated@@28 $generated@@41 $generated@@9 $generated@@170 $generated@@169 $generated@@44)) (=> (= $generated@@173 ($generated@@38 7)) (=> (and (= $generated@@174 ($generated@@45 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@168 $generated@@169 ($generated@@45 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@168 $generated@@169) $generated@@44 ($generated@@81 $generated@@10 ($generated@@14 $generated@@173))))) ($generated@@35 $generated@@174)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= $generated@@169 $generated@@30)) (not true))) (=> (and (and ($generated@@86 ($generated@@81 $generated@@28 $generated@@169) $generated@@29 $generated@@174) ($generated@@34 $generated@@174 $generated@@169)) (and ($generated@@34 $generated@@174 $generated@@169) (= (ControlFlow 0 5) (- 0 4)))) ($generated@@33 $generated@@174 $generated@@169)))))))))))
(let (($generated@@184  (and (=> (= (ControlFlow 0 22) 5) $generated@@183) (=> (= (ControlFlow 0 22) 21) $generated@@182))))
(let (($generated@@185  (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@169 $generated@@30)) (not true))) (=> (and (and ($generated@@86 ($generated@@81 $generated@@28 $generated@@169) $generated@@29 $generated@@168) ($generated@@34 $generated@@168 $generated@@169)) (and ($generated@@34 $generated@@168 $generated@@169) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@33 $generated@@168 $generated@@169)))))
(let (($generated@@186  (=> (= $generated@@170 ($generated@@101 $generated@@30 $generated@@168 $generated@@1 $generated@@169)) (and (=> (= (ControlFlow 0 23) (- 0 26)) (or (not (= $generated@@169 $generated@@30)) (not true))) (=> (and ($generated@@86 ($generated@@81 $generated@@28 $generated@@169) $generated@@29 $generated@@168) ($generated@@175 $generated@@168 $generated@@169)) (and (=> (= (ControlFlow 0 23) (- 0 25)) (or (not (= $generated@@169 $generated@@30)) (not true))) (=> ($generated@@175 $generated@@168 $generated@@169) (and (=> (= (ControlFlow 0 23) (- 0 24)) (= ($generated@@151 $generated@@168 $generated@@169) ($generated@@15 ($generated@@39 $generated@@10 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@168 $generated@@169) $generated@@44))))) (=> (= ($generated@@151 $generated@@168 $generated@@169) ($generated@@15 ($generated@@39 $generated@@10 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@28 ($generated@@43 $generated@@41 $generated@@42) $generated@@168 $generated@@169) $generated@@44)))) (and (=> (= (ControlFlow 0 23) 2) $generated@@185) (=> (= (ControlFlow 0 23) 22) $generated@@184)))))))))))
(let (($generated@@187  (=> (and ($generated@@35 $generated@@168) ($generated@@143 $generated@@168)) (=> (and (and ($generated@@27 $generated@@28 $generated@@169 $generated@@36) ($generated@@37 $generated@@28 $generated@@169 $generated@@36 $generated@@168)) (and (= 0 $generated@@176) (= (ControlFlow 0 27) 23))) $generated@@186))))
$generated@@187))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 23) (- 24))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 15) (- 14))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
