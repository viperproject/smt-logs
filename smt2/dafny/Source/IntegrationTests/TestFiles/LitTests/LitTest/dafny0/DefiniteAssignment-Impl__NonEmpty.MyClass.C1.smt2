(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@T T@T) T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@37 (T@T) T@T)
(declare-fun $generated@@38 (T@T) T@T)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@U T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@85 () Int)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@T T@U T@U) Bool)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) 0))
(assert (= ($generated@@24 $generated) $generated@@0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@39 T@T) ($generated@@40 T@T) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@25 $generated@@39 $generated@@40 ($generated@@36 $generated@@39 $generated@@40 $generated@@42 $generated@@43 $generated@@41) $generated@@43) $generated@@41)
 :weight 0
)) (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (or (= $generated@@48 $generated@@49) (= ($generated@@25 $generated@@44 $generated@@45 ($generated@@36 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@49) ($generated@@25 $generated@@44 $generated@@45 $generated@@47 $generated@@49)))
 :weight 0
))) (= ($generated@@7 $generated@@26) 3)) (= ($generated@@7 $generated@@27) 4)) (= ($generated@@7 $generated@@28) 5)) (forall (($generated@@50 T@T) ($generated@@51 T@T) ) (= ($generated@@7 ($generated@@29 $generated@@50 $generated@@51)) 6))) (forall (($generated@@52 T@T) ($generated@@53 T@T) ) (! (= ($generated@@37 ($generated@@29 $generated@@52 $generated@@53)) $generated@@52)
 :pattern ( ($generated@@29 $generated@@52 $generated@@53))
))) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (! (= ($generated@@38 ($generated@@29 $generated@@54 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@29 $generated@@54 $generated@@55))
))))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (and ($generated@@32 $generated@@57) (and (or (not (= $generated@@58 $generated@@33)) (not true)) (= ($generated@@34 $generated@@58) ($generated@@31 $generated@@56)))) ($generated@@35 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@57 $generated@@58) $generated@@30) $generated@@56))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@57 $generated@@58) $generated@@30) ($generated@@31 $generated@@56))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and ($generated@@32 $generated@@61) (and (or (not (= $generated@@62 $generated@@33)) (not true)) (= ($generated@@34 $generated@@62) ($generated@@31 $generated@@60)))) ($generated@@35 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@61 $generated@@62) $generated@@59) $generated@@60))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@61 $generated@@62) $generated@@59) ($generated@@31 $generated@@60))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (and (and ($generated@@32 $generated@@66) (and (or (not (= $generated@@67 $generated@@33)) (not true)) (= ($generated@@34 $generated@@67) ($generated@@31 $generated@@65)))) ($generated@@12 ($generated@@63 $generated@@8 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@66 $generated@@67) $generated)))) ($generated@@64 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@66 $generated@@67) $generated@@30) $generated@@65 $generated@@66))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@66 $generated@@67) $generated@@30) ($generated@@31 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and (and ($generated@@32 $generated@@69) (and (or (not (= $generated@@70 $generated@@33)) (not true)) (= ($generated@@34 $generated@@70) ($generated@@31 $generated@@68)))) ($generated@@12 ($generated@@63 $generated@@8 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@69 $generated@@70) $generated)))) ($generated@@64 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@69 $generated@@70) $generated@@59) $generated@@68 $generated@@69))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@69 $generated@@70) $generated@@59) ($generated@@31 $generated@@68))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@71 $generated@@28 $generated@@74 ($generated@@72 $generated@@73) $generated@@75) ($generated@@71 $generated@@28 $generated@@74 ($generated@@31 $generated@@73) $generated@@75))
 :pattern ( ($generated@@71 $generated@@28 $generated@@74 ($generated@@72 $generated@@73) $generated@@75))
 :pattern ( ($generated@@71 $generated@@28 $generated@@74 ($generated@@31 $generated@@73) $generated@@75))
)))
(assert (= ($generated@@23 $generated@@59) 0))
(assert (= ($generated@@76 $generated@@1 $generated@@6) $generated@@59))
(assert ($generated@@77 $generated@@59))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@71 $generated@@28 $generated@@79 ($generated@@31 $generated@@78) $generated@@80)  (or (= $generated@@79 $generated@@33) ($generated@@12 ($generated@@63 $generated@@8 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@80 $generated@@79) $generated)))))
 :pattern ( ($generated@@71 $generated@@28 $generated@@79 ($generated@@31 $generated@@78) $generated@@80))
)))
(assert (= ($generated@@23 $generated@@30) 0))
(assert (= ($generated@@76 $generated@@1 $generated@@5) $generated@@30))
(assert  (not ($generated@@77 $generated@@30)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@81 $generated@@82 $generated@@83) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@12 ($generated@@63 $generated@@8 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@82 $generated@@84) $generated))) ($generated@@12 ($generated@@63 $generated@@8 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@83 $generated@@84) $generated))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@83 $generated@@84) $generated))
)))
 :pattern ( ($generated@@81 $generated@@82 $generated@@83))
)))
(assert  (=> (< 0 $generated@@85) (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (and (or (not (= $generated@@88 $generated@@33)) (not true)) (= ($generated@@34 $generated@@88) ($generated@@31 $generated@@87))) ($generated@@35 ($generated@@86 $generated@@87 $generated@@88) $generated@@87))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88))
))))
(assert  (=> (< 0 $generated@@85) (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (or (not (= $generated@@91 $generated@@33)) (not true)) (= ($generated@@34 $generated@@91) ($generated@@31 $generated@@90))) ($generated@@35 ($generated@@89 $generated@@90 $generated@@91) $generated@@90))
 :pattern ( ($generated@@89 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@63 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@63 $generated@@94 $generated@@93))
)))
(assert  (=> (< 0 $generated@@85) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (and (and ($generated@@32 $generated@@96) (and (or (not (= $generated@@97 $generated@@33)) (not true)) (= ($generated@@34 $generated@@97) ($generated@@31 $generated@@95)))) ($generated@@12 ($generated@@63 $generated@@8 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@96 $generated@@97) $generated)))) ($generated@@64 ($generated@@86 $generated@@95 $generated@@97) $generated@@95 $generated@@96))
 :pattern ( ($generated@@86 $generated@@95 $generated@@97) ($generated@@63 $generated@@8 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@96 $generated@@97) $generated)))
))))
(assert  (=> (< 0 $generated@@85) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and (and ($generated@@32 $generated@@99) (and (or (not (= $generated@@100 $generated@@33)) (not true)) (= ($generated@@34 $generated@@100) ($generated@@31 $generated@@98)))) ($generated@@12 ($generated@@63 $generated@@8 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@99 $generated@@100) $generated)))) ($generated@@64 ($generated@@89 $generated@@98 $generated@@100) $generated@@98 $generated@@99))
 :pattern ( ($generated@@89 $generated@@98 $generated@@100) ($generated@@63 $generated@@8 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@99 $generated@@100) $generated)))
))))
(assert ($generated@@77 $generated))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@101 $generated@@28 $generated@@103 ($generated@@72 $generated@@102))  (and ($generated@@101 $generated@@28 $generated@@103 ($generated@@31 $generated@@102)) (or (not (= $generated@@103 $generated@@33)) (not true))))
 :pattern ( ($generated@@101 $generated@@28 $generated@@103 ($generated@@72 $generated@@102)))
 :pattern ( ($generated@@101 $generated@@28 $generated@@103 ($generated@@31 $generated@@102)))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@64 ($generated@@92 $generated@@107 $generated@@104) $generated@@105 $generated@@106) ($generated@@71 $generated@@107 $generated@@104 $generated@@105 $generated@@106))
 :pattern ( ($generated@@64 ($generated@@92 $generated@@107 $generated@@104) $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> ($generated@@81 $generated@@108 $generated@@109) (=> ($generated@@64 $generated@@110 $generated@@111 $generated@@108) ($generated@@64 $generated@@110 $generated@@111 $generated@@109)))
 :pattern ( ($generated@@81 $generated@@108 $generated@@109) ($generated@@64 $generated@@110 $generated@@111 $generated@@108))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (!  (=> ($generated@@81 $generated@@112 $generated@@113) (=> ($generated@@71 $generated@@116 $generated@@114 $generated@@115 $generated@@112) ($generated@@71 $generated@@116 $generated@@114 $generated@@115 $generated@@113)))
 :pattern ( ($generated@@81 $generated@@112 $generated@@113) ($generated@@71 $generated@@116 $generated@@114 $generated@@115 $generated@@112))
)))
(assert (forall (($generated@@119 T@U) ) (!  (and (= ($generated@@117 ($generated@@31 $generated@@119)) $generated@@2) (= ($generated@@118 ($generated@@31 $generated@@119)) $generated@@4))
 :pattern ( ($generated@@31 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ) (!  (and (= ($generated@@117 ($generated@@72 $generated@@120)) $generated@@3) (= ($generated@@118 ($generated@@72 $generated@@120)) $generated@@4))
 :pattern ( ($generated@@72 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@101 $generated@@28 $generated@@122 ($generated@@31 $generated@@121))  (or (= $generated@@122 $generated@@33) (= ($generated@@34 $generated@@122) ($generated@@31 $generated@@121))))
 :pattern ( ($generated@@101 $generated@@28 $generated@@122 ($generated@@31 $generated@@121)))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (or (not (= $generated@@123 $generated@@125)) (not true)) (=> (and ($generated@@81 $generated@@123 $generated@@124) ($generated@@81 $generated@@124 $generated@@125)) ($generated@@81 $generated@@123 $generated@@125)))
 :pattern ( ($generated@@81 $generated@@123 $generated@@124) ($generated@@81 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (and (= ($generated@@126 ($generated@@76 $generated@@127 $generated@@128)) $generated@@127) (= ($generated@@24 ($generated@@76 $generated@@127 $generated@@128)) $generated@@128))
 :pattern ( ($generated@@76 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@35 ($generated@@92 $generated@@131 $generated@@129) $generated@@130) ($generated@@101 $generated@@131 $generated@@129 $generated@@130))
 :pattern ( ($generated@@35 ($generated@@92 $generated@@131 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@132 ($generated@@31 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@31 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@134 ($generated@@72 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@72 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@63 $generated@@137 ($generated@@92 $generated@@137 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@92 $generated@@137 $generated@@136))
)))
(assert  (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@138 $generated@@141 $generated@@142 $generated@@143 ($generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@146 $generated@@147) $generated@@144)
 :weight 0
)) (and (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@138 $generated@@148 $generated@@149 $generated@@150 ($generated@@140 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@138 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@138 $generated@@157 $generated@@158 $generated@@159 ($generated@@140 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@138 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Bool) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@12 ($generated@@138 $generated@@28 $generated@@26 $generated@@8 ($generated@@139 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))  (=> (and (or (not (= $generated@@170 $generated@@166)) (not true)) ($generated@@12 ($generated@@63 $generated@@8 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@167 $generated@@170) $generated@@168)))) $generated@@169))
 :pattern ( ($generated@@138 $generated@@28 $generated@@26 $generated@@8 ($generated@@139 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@35 $generated@@173 ($generated@@31 $generated@@172)) (and (= ($generated@@92 $generated@@28 ($generated@@63 $generated@@28 $generated@@173)) $generated@@173) ($generated@@101 $generated@@28 ($generated@@63 $generated@@28 $generated@@173) ($generated@@31 $generated@@172))))
 :pattern ( ($generated@@35 $generated@@173 ($generated@@31 $generated@@172)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@35 $generated@@175 ($generated@@72 $generated@@174)) (and (= ($generated@@92 $generated@@28 ($generated@@63 $generated@@28 $generated@@175)) $generated@@175) ($generated@@101 $generated@@28 ($generated@@63 $generated@@28 $generated@@175) ($generated@@72 $generated@@174))))
 :pattern ( ($generated@@35 $generated@@175 ($generated@@72 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@32 ($generated@@36 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@176 $generated@@177 ($generated@@36 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@176 $generated@@177) $generated@@178 $generated@@179))) ($generated@@81 $generated@@176 ($generated@@36 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@176 $generated@@177 ($generated@@36 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@176 $generated@@177) $generated@@178 $generated@@179))))
 :pattern ( ($generated@@36 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@176 $generated@@177 ($generated@@36 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@176 $generated@@177) $generated@@178 $generated@@179)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () Bool)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@186  (=> (= $generated@@180 ($generated@@139 $generated@@33 $generated@@181 $generated false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) $generated@@182)))))
(let (($generated@@187  (=> (and ($generated@@32 $generated@@181) ($generated@@183 $generated@@181)) (=> (and (and ($generated@@35 $generated@@184 $generated@@185) ($generated@@64 $generated@@184 $generated@@185 $generated@@181)) (and (= 1 $generated@@85) (= (ControlFlow 0 4) 2))) $generated@@186))))
$generated@@187)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
