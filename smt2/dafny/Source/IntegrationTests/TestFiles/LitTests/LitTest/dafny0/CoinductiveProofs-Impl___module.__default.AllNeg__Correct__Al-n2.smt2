(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U Int) Bool)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U Int) Bool)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (Int) T@U)
(declare-fun $generated@@49 (T@U Int) Bool)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@94 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@98 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@99 (T@T T@T) T@T)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@103 (T@T) T@T)
(declare-fun $generated@@158 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@163 (Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@24 T@U) ($generated@@25 Int) ($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@23 $generated@@26 $generated@@27) (=> ($generated@@21 $generated@@24 $generated@@26 $generated@@25) ($generated@@21 $generated@@24 $generated@@27 $generated@@25)))
 :pattern ( ($generated@@21 $generated@@24 $generated@@26 $generated@@25) ($generated@@22 $generated@@26 $generated@@28) ($generated@@22 $generated@@27 $generated@@28))
))))
(assert (= ($generated@@29 $generated) $generated@@1))
(assert (= ($generated@@29 $generated@@0) $generated@@2))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@31 $generated@@32)) ($generated@@23 $generated@@30 $generated@@32))
 :pattern ( ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@31 $generated@@32))
 :pattern ( ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@30 $generated@@32))
)))
(assert (= ($generated@@4 $generated@@35) 3))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 Int) ) (!  (=> (or ($generated@@36 ($generated@@34 $generated@@35 $generated@@42) $generated@@43) (< 1 $generated@@20)) (and (and (=> (< 0 ($generated@@37 $generated@@42)) (=> (or (not (= $generated@@43 ($generated@@38 0))) (not true)) ($generated@@36 ($generated@@39 $generated@@42 ($generated@@40 1)) (+ $generated@@43 1)))) (=> (=> (< 0 ($generated@@37 $generated@@42)) (or (= $generated@@43 ($generated@@38 0)) ($generated@@21 ($generated@@33 $generated@@41) ($generated@@39 $generated@@42 ($generated@@40 1)) (+ $generated@@43 1)))) (=> (= ($generated@@38 0) ($generated@@37 $generated@@42)) (forall (($generated@@44 T@U) ) (!  (=> ($generated@@22 $generated@@44 $generated@@42) ($generated@@36 $generated@@44 $generated@@43))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@41) $generated@@44 $generated@@43))
))))) (= ($generated@@21 ($generated@@33 $generated@@41) ($generated@@34 $generated@@35 $generated@@42) $generated@@43)  (and (=> (< 0 ($generated@@37 $generated@@42)) (or (= $generated@@43 ($generated@@38 0)) ($generated@@21 ($generated@@33 $generated@@41) ($generated@@39 $generated@@42 ($generated@@40 1)) (+ $generated@@43 1)))) (=> (= ($generated@@38 0) ($generated@@37 $generated@@42)) (exists (($generated@@45 T@U) ) (!  (and ($generated@@22 $generated@@45 $generated@@42) ($generated@@21 ($generated@@33 $generated@@41) $generated@@45 $generated@@43))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@41) $generated@@45 $generated@@43))
)))))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@33 $generated@@41) ($generated@@34 $generated@@35 $generated@@42) $generated@@43))
))))
(assert (forall (($generated@@46 T@U) ($generated@@47 Int) ($generated@@48 Int) ) (!  (=> (and (and (<= 0 $generated@@47) (<= 0 $generated@@48)) (<= (+ $generated@@47 $generated@@48) ($generated@@37 $generated@@46))) (= ($generated@@39 ($generated@@39 $generated@@46 ($generated@@40 $generated@@47)) ($generated@@40 $generated@@48)) ($generated@@39 $generated@@46 ($generated@@40 (+ $generated@@47 $generated@@48)))))
 :pattern ( ($generated@@39 ($generated@@39 $generated@@46 ($generated@@40 $generated@@47)) ($generated@@40 $generated@@48)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@50 T@U) ($generated@@51 Int) ) (!  (=> (exists (($generated@@52 T@U) ) (! ($generated@@21 ($generated@@33 $generated@@50) $generated@@52 $generated@@51)
 :pattern ( ($generated@@21 ($generated@@33 $generated@@50) $generated@@52 $generated@@51))
)) ($generated@@49 ($generated@@33 $generated@@50) $generated@@51))
 :pattern ( ($generated@@49 ($generated@@33 $generated@@50) $generated@@51))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@53 T@U) ($generated@@54 Int) ($generated@@55 T@U) ) (!  (=> (= $generated@@55 ($generated@@40 0)) (not ($generated@@21 $generated@@53 $generated@@55 $generated@@54)))
 :pattern ( ($generated@@21 $generated@@53 $generated@@55 $generated@@54))
))))
(assert (forall (($generated@@56 Int) ) (! (= ($generated@@38 $generated@@56) $generated@@56)
 :pattern ( ($generated@@38 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@34 $generated@@58 $generated@@57) $generated@@57)
 :pattern ( ($generated@@34 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 ($generated@@59 $generated@@62 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@59 $generated@@62 $generated@@61))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@63 T@U) ($generated@@64 Int) ) (!  (=> ($generated@@49 ($generated@@33 $generated@@63) $generated@@64) (exists (($generated@@65 T@U) ) (! ($generated@@21 ($generated@@33 $generated@@63) $generated@@65 $generated@@64)
 :pattern ( ($generated@@21 ($generated@@33 $generated@@63) $generated@@65 $generated@@64))
)))
 :pattern ( ($generated@@49 ($generated@@33 $generated@@63) $generated@@64))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 Int) ) (! (= ($generated@@21 ($generated@@33 $generated@@66) $generated@@67 $generated@@68) ($generated@@21 $generated@@66 $generated@@67 $generated@@68))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@66) $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (and ($generated@@69 $generated@@71) (<= ($generated@@37 $generated@@71) ($generated@@37 $generated@@70))) (and (= ($generated@@69 ($generated@@39 $generated@@70 $generated@@71)) ($generated@@69 $generated@@70)) (= ($generated@@37 ($generated@@39 $generated@@70 $generated@@71)) (- ($generated@@37 $generated@@70) ($generated@@37 $generated@@71)))))
 :pattern ( ($generated@@39 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@72 Int) ) (!  (=> (<= 0 $generated@@72) (and ($generated@@69 ($generated@@40 $generated@@72)) (= ($generated@@37 ($generated@@40 $generated@@72)) $generated@@72)))
 :pattern ( ($generated@@40 $generated@@72))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 Int) ) (!  (=> (or ($generated@@36 ($generated@@34 $generated@@35 $generated@@74) ($generated@@38 $generated@@75)) (< 1 $generated@@20)) (and (and (=> (< 0 ($generated@@37 $generated@@74)) (=> (or (not (= ($generated@@38 $generated@@75) ($generated@@38 0))) (not true)) ($generated@@36 ($generated@@39 $generated@@74 ($generated@@40 1)) ($generated@@38 (+ $generated@@75 1))))) (=> (=> (< 0 ($generated@@37 $generated@@74)) (or (= ($generated@@38 $generated@@75) ($generated@@38 0)) ($generated@@21 ($generated@@33 $generated@@73) ($generated@@39 $generated@@74 ($generated@@40 1)) ($generated@@38 (+ $generated@@75 1))))) (=> (= ($generated@@38 0) ($generated@@37 $generated@@74)) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@22 $generated@@76 $generated@@74) ($generated@@36 $generated@@76 $generated@@75))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@73) $generated@@76 $generated@@75))
))))) (= ($generated@@21 ($generated@@33 $generated@@73) ($generated@@34 $generated@@35 $generated@@74) ($generated@@38 $generated@@75))  (and (=> (< 0 ($generated@@37 $generated@@74)) (or (= ($generated@@38 $generated@@75) ($generated@@38 0)) ($generated@@21 ($generated@@33 $generated@@73) ($generated@@39 $generated@@74 ($generated@@40 1)) ($generated@@38 (+ $generated@@75 1))))) (=> (= ($generated@@38 0) ($generated@@37 $generated@@74)) (exists (($generated@@77 T@U) ) (!  (and ($generated@@22 $generated@@77 $generated@@74) ($generated@@21 ($generated@@33 $generated@@73) $generated@@77 $generated@@75))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@73) $generated@@77 $generated@@75))
)))))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@33 $generated@@73) ($generated@@34 $generated@@35 $generated@@74) ($generated@@38 $generated@@75)))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (or (or ($generated@@23 $generated@@78 $generated@@79) (= $generated@@78 $generated@@79)) ($generated@@23 $generated@@79 $generated@@78))
 :pattern ( ($generated@@23 $generated@@78 $generated@@79) ($generated@@23 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@22 $generated@@80 $generated@@81) ($generated@@23 $generated@@80 $generated@@81))
 :pattern ( ($generated@@22 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 Int) ) (! (= ($generated@@49 ($generated@@33 $generated@@82) $generated@@83) ($generated@@49 $generated@@82 $generated@@83))
 :pattern ( ($generated@@49 ($generated@@33 $generated@@82) $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (! (<= 0 ($generated@@37 $generated@@84))
 :pattern ( ($generated@@37 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@59 $generated@@86 ($generated@@60 $generated@@86 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@60 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (and (and (and (=> ($generated@@23 $generated@@87 $generated@@88) (or (not (= $generated@@87 $generated@@88)) (not true))) (=> (and ($generated@@69 $generated@@87) (not ($generated@@69 $generated@@88))) ($generated@@23 $generated@@87 $generated@@88))) (=> (and ($generated@@69 $generated@@87) ($generated@@69 $generated@@88)) (= ($generated@@23 $generated@@87 $generated@@88) (< ($generated@@37 $generated@@87) ($generated@@37 $generated@@88))))) (=> (and ($generated@@23 $generated@@87 $generated@@88) ($generated@@69 $generated@@88)) ($generated@@69 $generated@@87)))
 :pattern ( ($generated@@23 $generated@@87 $generated@@88))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 Int) ) (!  (=> (or ($generated@@36 $generated@@90 $generated@@91) (< 1 $generated@@20)) (and (and (=> (< 0 ($generated@@37 $generated@@90)) (=> (or (not (= $generated@@91 ($generated@@38 0))) (not true)) ($generated@@36 ($generated@@39 $generated@@90 ($generated@@40 1)) (+ $generated@@91 1)))) (=> (=> (< 0 ($generated@@37 $generated@@90)) (or (= $generated@@91 ($generated@@38 0)) ($generated@@21 $generated@@89 ($generated@@39 $generated@@90 ($generated@@40 1)) (+ $generated@@91 1)))) (=> (= ($generated@@38 0) ($generated@@37 $generated@@90)) (forall (($generated@@92 T@U) ) (!  (=> ($generated@@22 $generated@@92 $generated@@90) ($generated@@36 $generated@@92 $generated@@91))
 :pattern ( ($generated@@21 $generated@@89 $generated@@92 $generated@@91))
))))) (= ($generated@@21 ($generated@@33 $generated@@89) $generated@@90 $generated@@91)  (and (=> (< 0 ($generated@@37 $generated@@90)) (or (= $generated@@91 ($generated@@38 0)) ($generated@@21 $generated@@89 ($generated@@39 $generated@@90 ($generated@@40 1)) (+ $generated@@91 1)))) (=> (= ($generated@@38 0) ($generated@@37 $generated@@90)) (exists (($generated@@93 T@U) ) (!  (and ($generated@@22 $generated@@93 $generated@@90) ($generated@@21 $generated@@89 $generated@@93 $generated@@91))
 :pattern ( ($generated@@21 $generated@@89 $generated@@93 $generated@@91))
)))))))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@89) $generated@@90 $generated@@91))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@94 $generated@@104 $generated@@105 $generated@@106 ($generated@@100 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@109 $generated@@110) $generated@@107)
 :weight 0
)) (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@116 $generated@@118) (= ($generated@@94 $generated@@111 $generated@@112 $generated@@113 ($generated@@100 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@94 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@94 $generated@@120 $generated@@121 $generated@@122 ($generated@@100 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@94 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)))) (= ($generated@@4 $generated@@95) 4)) (= ($generated@@4 $generated@@96) 5)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@98 $generated@@129 $generated@@130 ($generated@@101 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@131) $generated@@133) $generated@@131)
 :weight 0
))) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@98 $generated@@134 $generated@@135 ($generated@@101 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@98 $generated@@134 $generated@@135 $generated@@137 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (= ($generated@@4 ($generated@@99 $generated@@140 $generated@@141)) 6))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@102 ($generated@@99 $generated@@142 $generated@@143)) $generated@@142)
 :pattern ( ($generated@@99 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@103 ($generated@@99 $generated@@144 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@99 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@9 ($generated@@94 $generated@@95 $generated@@96 $generated@@5 ($generated@@97 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))  (=> (and (or (not (= $generated@@150 $generated@@146)) (not true)) ($generated@@9 ($generated@@59 $generated@@5 ($generated@@98 $generated@@96 $generated@@35 ($generated@@98 $generated@@95 ($generated@@99 $generated@@96 $generated@@35) $generated@@147 $generated@@150) $generated@@148)))) $generated@@149))
 :pattern ( ($generated@@94 $generated@@95 $generated@@96 $generated@@5 ($generated@@97 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@69 $generated@@152) (= $generated@@152 ($generated@@40 ($generated@@37 $generated@@152))))
 :pattern ( ($generated@@37 $generated@@152))
 :pattern ( ($generated@@69 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and ($generated@@69 $generated@@154) (<= ($generated@@37 $generated@@154) ($generated@@37 $generated@@153))) (or (and (= $generated@@154 ($generated@@40 0)) (= ($generated@@39 $generated@@153 $generated@@154) $generated@@153)) (and (or (not (= $generated@@154 ($generated@@40 0))) (not true)) ($generated@@23 ($generated@@39 $generated@@153 $generated@@154) $generated@@153))))
 :pattern ( ($generated@@39 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 Int) ) (! (= ($generated@@60 $generated@@6 ($generated@@10 ($generated@@38 $generated@@155))) ($generated@@34 $generated@@35 ($generated@@60 $generated@@6 ($generated@@10 $generated@@155))))
 :pattern ( ($generated@@60 $generated@@6 ($generated@@10 ($generated@@38 $generated@@155))))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@60 $generated@@157 ($generated@@34 $generated@@157 $generated@@156)) ($generated@@34 $generated@@35 ($generated@@60 $generated@@157 $generated@@156)))
 :pattern ( ($generated@@60 $generated@@157 ($generated@@34 $generated@@157 $generated@@156)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! ($generated@@158 $generated@@6 $generated@@160 $generated $generated@@159)
 :pattern ( ($generated@@158 $generated@@6 $generated@@160 $generated $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! ($generated@@158 $generated@@35 $generated@@162 $generated@@0 $generated@@161)
 :pattern ( ($generated@@158 $generated@@35 $generated@@162 $generated@@0 $generated@@161))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@164 T@U) ($generated@@165 Int) ) (!  (=> (or ($generated@@163 $generated@@165) (< 0 $generated@@20)) (and (=> (or (not (= $generated@@165 ($generated@@38 0))) (not true)) ($generated@@163 (+ $generated@@165 1))) (= ($generated@@49 ($generated@@33 $generated@@164) $generated@@165)  (or (= $generated@@165 ($generated@@38 0)) ($generated@@49 $generated@@164 (+ $generated@@165 1))))))
 :pattern ( ($generated@@49 ($generated@@33 $generated@@164) $generated@@165))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@177  (=> (= (ControlFlow 0 3) (- 0 2)) (<= $generated@@166 ($generated@@38 0)))))
(let (($generated@@178  (=> (and (and ($generated@@158 $generated@@35 $generated@@167 $generated@@0 $generated@@168) ($generated@@158 $generated@@6 ($generated@@10 $generated@@166) $generated $generated@@168)) (and ($generated@@36 $generated@@167 $generated@@166) ($generated@@36 $generated@@167 $generated@@166))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (exists (($generated@@179 T@U) ) ($generated@@21 ($generated@@33 $generated@@169) $generated@@179 $generated@@166))) (=> (exists (($generated@@180 T@U) ) ($generated@@21 ($generated@@33 $generated@@169) $generated@@180 $generated@@166)) (=> ($generated@@21 ($generated@@33 $generated@@169) $generated@@170 $generated@@166) (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> ($generated@@36 $generated@@170 $generated@@166) (or ($generated@@21 ($generated@@33 $generated@@169) $generated@@170 $generated@@166) (=> (< 0 ($generated@@37 $generated@@170)) (or (= $generated@@166 ($generated@@38 0)) ($generated@@21 ($generated@@33 ($generated@@33 $generated@@169)) ($generated@@39 $generated@@170 ($generated@@40 1)) (+ $generated@@166 1))))))) (=> (=> ($generated@@36 $generated@@170 $generated@@166) (or ($generated@@21 ($generated@@33 $generated@@169) $generated@@170 $generated@@166) (=> (< 0 ($generated@@37 $generated@@170)) (or (= $generated@@166 ($generated@@38 0)) ($generated@@21 ($generated@@33 ($generated@@33 $generated@@169)) ($generated@@39 $generated@@170 ($generated@@40 1)) (+ $generated@@166 1)))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@36 $generated@@170 $generated@@166) (or ($generated@@21 ($generated@@33 $generated@@169) $generated@@170 $generated@@166) (=> (= ($generated@@38 0) ($generated@@37 $generated@@170)) (exists (($generated@@181 T@U) ) (!  (and ($generated@@22 $generated@@181 $generated@@170) ($generated@@21 ($generated@@33 $generated@@169) $generated@@181 $generated@@166))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@169) $generated@@181 $generated@@166))
)))))) (=> (=> ($generated@@36 $generated@@170 $generated@@166) (or ($generated@@21 ($generated@@33 $generated@@169) $generated@@170 $generated@@166) (=> (= ($generated@@38 0) ($generated@@37 $generated@@170)) (exists (($generated@@182 T@U) ) (!  (and ($generated@@22 $generated@@182 $generated@@170) ($generated@@21 ($generated@@33 $generated@@169) $generated@@182 $generated@@166))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@169) $generated@@182 $generated@@166))
))))) (=> (and (and (and ($generated@@171 $generated@@172) ($generated@@173 $generated@@172)) (<= $generated@@166 ($generated@@38 0))) (and (= $generated@@168 $generated@@172) (= (ControlFlow 0 4) 3))) $generated@@177)))))))))))
(let (($generated@@183 true))
(let (($generated@@184  (=> (= $generated@@174 ($generated@@97 $generated@@175 $generated@@176 $generated@@3 false)) (=> (and (and ($generated@@171 $generated@@168) ($generated@@173 $generated@@168)) (and (= $generated@@176 $generated@@168) (forall (($generated@@185 Int) ) (!  (=> (and ($generated@@49 ($generated@@33 $generated@@169) $generated@@185) (and (<= 0 $generated@@185) (< $generated@@185 $generated@@166))) (<= $generated@@185 ($generated@@38 0)))
 :pattern ( ($generated@@49 ($generated@@33 $generated@@169) $generated@@185))
)))) (and (=> (= (ControlFlow 0 8) 4) $generated@@178) (=> (= (ControlFlow 0 8) 1) $generated@@183))))))
(let (($generated@@186  (=> (and (and (and ($generated@@171 $generated@@176) ($generated@@173 $generated@@176)) (= 3 $generated@@20)) (and (and ($generated@@163 $generated@@166) (and ($generated@@49 ($generated@@33 $generated@@169) $generated@@166) (or (= $generated@@166 ($generated@@38 0)) ($generated@@49 ($generated@@33 $generated@@169) (+ $generated@@166 1))))) (= (ControlFlow 0 9) 8))) $generated@@184)))
$generated@@186))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
