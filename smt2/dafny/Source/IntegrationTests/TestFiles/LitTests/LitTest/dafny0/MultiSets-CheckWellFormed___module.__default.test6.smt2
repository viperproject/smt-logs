(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@69 (T@U Int) T@U)
(declare-fun $generated@@70 (T@U T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@72 (Int) T@U)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@81 (Int) Int)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U Int) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) Int)
(declare-fun $generated@@104 (T@U) Int)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@198 (T@U) Int)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and (or (not (= $generated@@29 $generated@@25)) (not true)) (= ($generated@@26 $generated@@29) ($generated@@24 $generated@@28))) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@23 $generated@@29)) $generated))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@24 $generated@@28))
)))
(assert (= ($generated@@5 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35) ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
)))
(assert (= ($generated@@36 $generated@@37) 0))
(assert (forall (($generated@@40 T@U) ) (! ($generated@@39 ($generated@@38 $generated@@40))
 :pattern ( ($generated@@38 $generated@@40))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@42 $generated@@49 $generated@@50 ($generated@@46 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@53) $generated@@51)
 :weight 0
)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@58 $generated@@59) (= ($generated@@42 $generated@@54 $generated@@55 ($generated@@46 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@59) ($generated@@42 $generated@@54 $generated@@55 $generated@@57 $generated@@59)))
 :weight 0
))) (= ($generated@@5 $generated@@43) 4)) (= ($generated@@5 $generated@@44) 5)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (= ($generated@@5 ($generated@@45 $generated@@60 $generated@@61)) 6))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@47 ($generated@@45 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@62 $generated@@63))
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@64 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@45 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@67 ($generated@@24 $generated@@66) $generated@@68)  (or (= $generated@@67 $generated@@25) ($generated@@10 ($generated@@41 $generated@@6 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@68 $generated@@67) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@67 ($generated@@24 $generated@@66) $generated@@68))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 Int) ($generated@@76 Int) ) (!  (=> (and (and (= (+ $generated@@75 1) $generated@@76) (<= 0 $generated@@75)) (<= $generated@@76 ($generated@@23 $generated@@74))) (= ($generated@@69 ($generated@@70 $generated@@73 $generated@@74) $generated@@76) ($generated@@71 ($generated@@69 ($generated@@70 $generated@@73 $generated@@74) $generated@@75) ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@73 $generated@@74) ($generated@@72 $generated@@75)))))
 :pattern ( ($generated@@69 ($generated@@70 $generated@@73 $generated@@74) $generated@@75) ($generated@@69 ($generated@@70 $generated@@73 $generated@@74) $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> ($generated@@77 $generated@@78 $generated@@79) (forall (($generated@@80 T@U) ) (!  (=> ($generated@@10 ($generated@@41 $generated@@6 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@78 $generated@@80) $generated@@1))) ($generated@@10 ($generated@@41 $generated@@6 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@79 $generated@@80) $generated@@1))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@79 $generated@@80) $generated@@1))
)))
 :pattern ( ($generated@@77 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@82 Int) ) (! (= ($generated@@81 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 Int) ($generated@@89 Int) ) (!  (=> (and (and (<= 0 $generated@@89) (< $generated@@89 $generated@@88)) (< $generated@@89 ($generated@@36 $generated@@87))) (= ($generated@@86 ($generated@@69 $generated@@87 $generated@@88) $generated@@89) ($generated@@86 $generated@@87 $generated@@89)))
 :weight 25
 :pattern ( ($generated@@86 ($generated@@69 $generated@@87 $generated@@88) $generated@@89))
 :pattern ( ($generated@@86 $generated@@87 $generated@@89) ($generated@@69 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Int) ) (!  (=> (and (and (and ($generated@@90 $generated@@93) (and (or (not (= $generated@@94 $generated@@25)) (not true)) (= ($generated@@26 $generated@@94) ($generated@@24 $generated@@92)))) (and (<= 0 $generated@@95) (< $generated@@95 ($generated@@23 $generated@@94)))) ($generated@@10 ($generated@@41 $generated@@6 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@93 $generated@@94) $generated@@1)))) ($generated@@91 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@93 $generated@@94) ($generated@@72 $generated@@95)) $generated@@92 $generated@@93))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@93 $generated@@94) ($generated@@72 $generated@@95)) ($generated@@24 $generated@@92))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 ($generated@@41 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@41 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (or (not (= $generated@@102 $generated@@103)) (not true)) (= ($generated@@100 $generated@@101 $generated@@103) ($generated@@100 ($generated@@99 $generated@@101 $generated@@102) $generated@@103)))
 :pattern ( ($generated@@99 $generated@@101 $generated@@102) ($generated@@100 $generated@@101 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@104 ($generated@@99 $generated@@105 $generated@@106)) (+ ($generated@@104 $generated@@105) 1))
 :pattern ( ($generated@@104 ($generated@@99 $generated@@105 $generated@@106)))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@36 ($generated@@71 $generated@@107 $generated@@108)) (+ 1 ($generated@@36 $generated@@107)))
 :pattern ( ($generated@@71 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@110 ($generated@@32 $generated@@109))  (and ($generated@@27 $generated@@31 $generated@@110 ($generated@@24 $generated@@109)) (or (not (= $generated@@110 $generated@@25)) (not true))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@110 ($generated@@32 $generated@@109)))
 :pattern ( ($generated@@27 $generated@@31 $generated@@110 ($generated@@24 $generated@@109)))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@91 ($generated@@96 $generated@@114 $generated@@111) $generated@@112 $generated@@113) ($generated@@30 $generated@@114 $generated@@111 $generated@@112 $generated@@113))
 :pattern ( ($generated@@91 ($generated@@96 $generated@@114 $generated@@111) $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@77 $generated@@115 $generated@@116) (=> ($generated@@91 $generated@@117 $generated@@118 $generated@@115) ($generated@@91 $generated@@117 $generated@@118 $generated@@116)))
 :pattern ( ($generated@@77 $generated@@115 $generated@@116) ($generated@@91 $generated@@117 $generated@@118 $generated@@115))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (!  (=> ($generated@@77 $generated@@119 $generated@@120) (=> ($generated@@30 $generated@@123 $generated@@121 $generated@@122 $generated@@119) ($generated@@30 $generated@@123 $generated@@121 $generated@@122 $generated@@120)))
 :pattern ( ($generated@@77 $generated@@119 $generated@@120) ($generated@@30 $generated@@123 $generated@@121 $generated@@122 $generated@@119))
)))
(assert (forall (($generated@@125 T@U) ) (!  (and (= ($generated@@22 ($generated@@24 $generated@@125)) $generated@@2) (= ($generated@@124 ($generated@@24 $generated@@125)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (!  (and (= ($generated@@22 ($generated@@32 $generated@@126)) $generated@@3) (= ($generated@@124 ($generated@@32 $generated@@126)) $generated@@4))
 :pattern ( ($generated@@32 $generated@@126))
)))
(assert  (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@127 $generated@@130 $generated@@131 $generated@@132 ($generated@@129 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@135 $generated@@136) $generated@@133)
 :weight 0
)) (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@127 $generated@@137 $generated@@138 $generated@@139 ($generated@@129 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@127 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@127 $generated@@146 $generated@@147 $generated@@148 ($generated@@129 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@127 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@10 ($generated@@127 $generated@@31 $generated@@43 $generated@@6 ($generated@@128 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (or (not (= $generated@@159 $generated@@155)) (not true)) ($generated@@10 ($generated@@41 $generated@@6 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@156 $generated@@159) $generated@@157)))) (= $generated@@159 $generated@@158)))
 :pattern ( ($generated@@127 $generated@@31 $generated@@43 $generated@@6 ($generated@@128 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@104 ($generated@@161 $generated@@162 $generated@@163)) (+ ($generated@@104 $generated@@162) ($generated@@104 $generated@@163)))
 :pattern ( ($generated@@104 ($generated@@161 $generated@@162 $generated@@163)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@165 ($generated@@24 $generated@@164))  (or (= $generated@@165 $generated@@25) (= ($generated@@26 $generated@@165) ($generated@@24 $generated@@164))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@165 ($generated@@24 $generated@@164)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 Int) ($generated@@168 T@U) ) (!  (and (=> (= $generated@@167 ($generated@@36 $generated@@166)) (= ($generated@@86 ($generated@@71 $generated@@166 $generated@@168) $generated@@167) $generated@@168)) (=> (or (not (= $generated@@167 ($generated@@36 $generated@@166))) (not true)) (= ($generated@@86 ($generated@@71 $generated@@166 $generated@@168) $generated@@167) ($generated@@86 $generated@@166 $generated@@167))))
 :pattern ( ($generated@@86 ($generated@@71 $generated@@166 $generated@@168) $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (exists (($generated@@171 Int) ) (!  (and (and (<= 0 $generated@@171) (< $generated@@171 ($generated@@36 $generated@@169))) (= $generated@@170 ($generated@@86 $generated@@169 $generated@@171)))
 :pattern ( ($generated@@86 $generated@@169 $generated@@171))
)) (< 0 ($generated@@100 ($generated@@38 $generated@@169) $generated@@170)))
 :pattern ( ($generated@@100 ($generated@@38 $generated@@169) $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (forall (($generated@@174 Int) ) (!  (=> (and (<= 0 $generated@@174) (< $generated@@174 ($generated@@36 ($generated@@70 $generated@@172 $generated@@173)))) (= ($generated@@86 ($generated@@70 $generated@@172 $generated@@173) $generated@@174) ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@172 $generated@@173) ($generated@@72 $generated@@174))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@172 $generated@@173) ($generated@@72 $generated@@174)))
 :pattern ( ($generated@@86 ($generated@@70 $generated@@172 $generated@@173) $generated@@174))
))
 :pattern ( ($generated@@70 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@175 $generated@@176 $generated@@177) (= $generated@@176 $generated@@177))
 :pattern ( ($generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 Int) ) (!  (=> (and (<= 0 $generated@@179) (<= $generated@@179 ($generated@@36 $generated@@178))) (= ($generated@@36 ($generated@@69 $generated@@178 $generated@@179)) $generated@@179))
 :pattern ( ($generated@@36 ($generated@@69 $generated@@178 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (or (not (= $generated@@180 $generated@@182)) (not true)) (=> (and ($generated@@77 $generated@@180 $generated@@181) ($generated@@77 $generated@@181 $generated@@182)) ($generated@@77 $generated@@180 $generated@@182)))
 :pattern ( ($generated@@77 $generated@@180 $generated@@181) ($generated@@77 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> ($generated@@183 $generated@@184 $generated) (and (= ($generated@@96 $generated@@7 ($generated@@41 $generated@@7 $generated@@184)) $generated@@184) ($generated@@27 $generated@@7 ($generated@@41 $generated@@7 $generated@@184) $generated)))
 :pattern ( ($generated@@183 $generated@@184 $generated))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@T) ) (! (= ($generated@@183 ($generated@@96 $generated@@187 $generated@@185) $generated@@186) ($generated@@27 $generated@@187 $generated@@185 $generated@@186))
 :pattern ( ($generated@@183 ($generated@@96 $generated@@187 $generated@@185) $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@39 $generated@@188) (forall (($generated@@189 T@U) ) (!  (and (<= 0 ($generated@@100 $generated@@188 $generated@@189)) (<= ($generated@@100 $generated@@188 $generated@@189) ($generated@@104 $generated@@188)))
 :pattern ( ($generated@@100 $generated@@188 $generated@@189))
)))
 :pattern ( ($generated@@39 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (<= 0 ($generated@@23 $generated@@190))
 :pattern ( ($generated@@23 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (! (<= 0 ($generated@@104 $generated@@191))
 :pattern ( ($generated@@104 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ) (! (<= 0 ($generated@@36 $generated@@192))
 :pattern ( ($generated@@36 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@100 $generated@@193 $generated@@194) 0)
 :pattern ( ($generated@@100 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (! (= ($generated@@100 ($generated@@99 $generated@@195 $generated@@196) $generated@@196) (+ ($generated@@100 $generated@@195 $generated@@196) 1))
 :pattern ( ($generated@@99 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 Int) ) (! (= ($generated@@21 ($generated@@72 $generated@@197)) 1)
 :pattern ( ($generated@@72 $generated@@197))
)))
(assert (forall (($generated@@199 Int) ) (! (= ($generated@@198 ($generated@@72 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@72 $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ) (! (= ($generated@@200 ($generated@@24 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@24 $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ) (! (= ($generated@@202 ($generated@@32 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@32 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@T) ) (! (= ($generated@@41 $generated@@205 ($generated@@96 $generated@@205 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@96 $generated@@205 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and ($generated@@90 $generated@@207) (and (or (not (= $generated@@208 $generated@@25)) (not true)) (= ($generated@@26 $generated@@208) ($generated@@24 $generated@@206)))) ($generated@@10 ($generated@@41 $generated@@6 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@207 $generated@@208) $generated@@1)))) ($generated@@30 $generated@@7 ($generated@@11 ($generated@@23 $generated@@208)) $generated $generated@@207))
 :pattern ( ($generated@@23 $generated@@208) ($generated@@41 $generated@@6 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@207 $generated@@208) $generated@@1)) ($generated@@24 $generated@@206))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Int) ) (!  (=> (and (and ($generated@@90 $generated@@210) (and (or (not (= $generated@@211 $generated@@25)) (not true)) (= ($generated@@26 $generated@@211) ($generated@@24 $generated@@209)))) (and (<= 0 $generated@@212) (< $generated@@212 ($generated@@23 $generated@@211)))) ($generated@@183 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@210 $generated@@211) ($generated@@72 $generated@@212)) $generated@@209))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@210 $generated@@211) ($generated@@72 $generated@@212)) ($generated@@24 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ) (!  (and (= (= ($generated@@104 $generated@@213) 0) (= $generated@@213 $generated@@193)) (=> (or (not (= ($generated@@104 $generated@@213) 0)) (not true)) (exists (($generated@@214 T@U) ) (! (< 0 ($generated@@100 $generated@@213 $generated@@214))
 :pattern ( ($generated@@100 $generated@@213 $generated@@214))
))))
 :pattern ( ($generated@@104 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@100 ($generated@@161 $generated@@215 $generated@@216) $generated@@217) (+ ($generated@@100 $generated@@215 $generated@@217) ($generated@@100 $generated@@216 $generated@@217)))
 :pattern ( ($generated@@100 ($generated@@161 $generated@@215 $generated@@216) $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and ($generated@@90 $generated@@218) ($generated@@90 $generated@@219)) ($generated@@77 $generated@@218 $generated@@219)) (= ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@218 $generated@@220) ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@219 $generated@@220))) (= ($generated@@70 $generated@@218 $generated@@220) ($generated@@70 $generated@@219 $generated@@220)))
 :pattern ( ($generated@@70 $generated@@219 $generated@@220) ($generated@@77 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@36 ($generated@@70 $generated@@221 $generated@@222)) ($generated@@23 $generated@@222))
 :pattern ( ($generated@@36 ($generated@@70 $generated@@221 $generated@@222)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (and (= ($generated@@223 ($generated@@71 $generated@@225 $generated@@226)) $generated@@225) (= ($generated@@224 ($generated@@71 $generated@@225 $generated@@226)) $generated@@226))
 :pattern ( ($generated@@71 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ) (! (= ($generated@@104 ($generated@@38 $generated@@227)) ($generated@@36 $generated@@227))
 :pattern ( ($generated@@104 ($generated@@38 $generated@@227)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> ($generated@@183 $generated@@229 ($generated@@24 $generated@@228)) (and (= ($generated@@96 $generated@@31 ($generated@@41 $generated@@31 $generated@@229)) $generated@@229) ($generated@@27 $generated@@31 ($generated@@41 $generated@@31 $generated@@229) ($generated@@24 $generated@@228))))
 :pattern ( ($generated@@183 $generated@@229 ($generated@@24 $generated@@228)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> ($generated@@183 $generated@@231 ($generated@@32 $generated@@230)) (and (= ($generated@@96 $generated@@31 ($generated@@41 $generated@@31 $generated@@231)) $generated@@231) ($generated@@27 $generated@@31 ($generated@@41 $generated@@31 $generated@@231) ($generated@@32 $generated@@230))))
 :pattern ( ($generated@@183 $generated@@231 ($generated@@32 $generated@@230)))
)))
(assert (= ($generated@@38 $generated@@37) $generated@@193))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= ($generated@@38 ($generated@@71 $generated@@232 $generated@@233)) ($generated@@99 ($generated@@38 $generated@@232) $generated@@233))
 :pattern ( ($generated@@38 ($generated@@71 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@234 Int) ) (! (= ($generated@@96 $generated@@7 ($generated@@11 ($generated@@81 $generated@@234))) ($generated@@83 $generated@@44 ($generated@@96 $generated@@7 ($generated@@11 $generated@@234))))
 :pattern ( ($generated@@96 $generated@@7 ($generated@@11 ($generated@@81 $generated@@234))))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@T) ) (! (= ($generated@@96 $generated@@236 ($generated@@83 $generated@@236 $generated@@235)) ($generated@@83 $generated@@44 ($generated@@96 $generated@@236 $generated@@235)))
 :pattern ( ($generated@@96 $generated@@236 ($generated@@83 $generated@@236 $generated@@235)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (< 0 ($generated@@100 $generated@@237 $generated@@239)) (< 0 ($generated@@100 ($generated@@99 $generated@@237 $generated@@238) $generated@@239)))
 :pattern ( ($generated@@99 $generated@@237 $generated@@238) ($generated@@100 $generated@@237 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ) (!  (=> (= ($generated@@36 $generated@@240) 0) (= $generated@@240 $generated@@37))
 :pattern ( ($generated@@36 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 Int) ) (!  (=> (= $generated@@242 0) (= ($generated@@69 $generated@@241 $generated@@242) $generated@@37))
 :pattern ( ($generated@@69 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (< 0 ($generated@@100 ($generated@@99 $generated@@243 $generated@@244) $generated@@245))  (or (= $generated@@245 $generated@@244) (< 0 ($generated@@100 $generated@@243 $generated@@245))))
 :pattern ( ($generated@@100 ($generated@@99 $generated@@243 $generated@@244) $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= ($generated@@175 $generated@@246 $generated@@247) (forall (($generated@@248 T@U) ) (! (= ($generated@@100 $generated@@246 $generated@@248) ($generated@@100 $generated@@247 $generated@@248))
 :pattern ( ($generated@@100 $generated@@246 $generated@@248))
 :pattern ( ($generated@@100 $generated@@247 $generated@@248))
)))
 :pattern ( ($generated@@175 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! ($generated@@30 $generated@@7 $generated@@250 $generated $generated@@249)
 :pattern ( ($generated@@30 $generated@@7 $generated@@250 $generated $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! ($generated@@27 $generated@@7 $generated@@251 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@251 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@259  (=> (and (<= ($generated@@81 0) $generated@@252) (< $generated@@252 ($generated@@23 $generated@@253))) (=> (and (and ($generated@@90 $generated@@254) ($generated@@255 $generated@@254)) (and (forall (($generated@@260 T@U) ) (!  (=> (and (or (not (= $generated@@260 $generated@@25)) (not true)) ($generated@@10 ($generated@@41 $generated@@6 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@256 $generated@@260) $generated@@1)))) (or (= ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@254 $generated@@260) ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@256 $generated@@260)) (= $generated@@260 $generated@@253)))
 :pattern ( ($generated@@42 $generated@@31 ($generated@@45 $generated@@43 $generated@@44) $generated@@254 $generated@@260))
)) ($generated@@77 $generated@@256 $generated@@254))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@253 $generated@@25)) (not true))) (=> (or (not (= $generated@@253 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 (+ $generated@@252 1)) (<= (+ $generated@@252 1) ($generated@@23 $generated@@253)))) (=> (and (<= 0 (+ $generated@@252 1)) (<= (+ $generated@@252 1) ($generated@@23 $generated@@253))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@253 $generated@@25)) (not true))) (=> (or (not (= $generated@@253 $generated@@25)) (not true)) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 $generated@@252) (<= $generated@@252 ($generated@@23 $generated@@253))))))))))))))
(let (($generated@@261  (=> (and (< $generated@@252 ($generated@@81 0)) (= (ControlFlow 0 8) 2)) $generated@@259)))
(let (($generated@@262  (=> (<= ($generated@@81 0) $generated@@252) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (not (= $generated@@253 $generated@@25)) (not true))) (=> (or (not (= $generated@@253 $generated@@25)) (not true)) (=> (= (ControlFlow 0 6) 2) $generated@@259))))))
(let (($generated@@263  (=> (= $generated@@257 ($generated@@128 $generated@@25 $generated@@256 $generated@@1 $generated@@253)) (and (=> (= (ControlFlow 0 9) 6) $generated@@262) (=> (= (ControlFlow 0 9) 8) $generated@@261)))))
(let (($generated@@264  (=> (and ($generated@@90 $generated@@256) ($generated@@255 $generated@@256)) (=> (and (and ($generated@@27 $generated@@31 $generated@@253 ($generated@@32 $generated)) ($generated@@30 $generated@@31 $generated@@253 ($generated@@32 $generated) $generated@@256)) (and (= 0 $generated@@258) (= (ControlFlow 0 10) 9))) $generated@@263))))
$generated@@264))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
