(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@47 (T@T T@U T@U) Bool)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@T T@T) T@T)
(declare-fun $generated@@66 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@88 (Int) Int)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@97 () Int)
(declare-fun $generated@@98 (T@U T@U T@U Int) Int)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@101 (T@U T@U Int) Bool)
(declare-fun $generated@@102 (T@U T@U Int) Bool)
(declare-fun $generated@@103 (T@U T@U T@U Int) Int)
(declare-fun $generated@@108 (T@T T@U) T@U)
(declare-fun $generated@@122 (T@U T@U T@U) Bool)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@1) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@30 $generated@@1) $generated@@2))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! ($generated@@32 ($generated@@31 $generated@@33 $generated@@34) $generated@@34)
 :pattern ( ($generated@@31 $generated@@33 $generated@@34))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@32 $generated@@35 $generated@@37) ($generated@@32 ($generated@@31 $generated@@35 $generated@@36) $generated@@37))
 :pattern ( ($generated@@31 $generated@@35 $generated@@36) ($generated@@32 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! ($generated@@38 $generated@@14 $generated@@40 $generated@@39 $generated@@41)
 :pattern ( ($generated@@38 $generated@@14 $generated@@40 $generated@@39 $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@32 ($generated@@31 $generated@@42 $generated@@43) $generated@@44)  (or (= $generated@@44 $generated@@43) ($generated@@32 $generated@@42 $generated@@44)))
 :pattern ( ($generated@@32 ($generated@@31 $generated@@42 $generated@@43) $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (!  (not ($generated@@32 $generated@@45 $generated@@46))
 :pattern ( ($generated@@32 $generated@@45 $generated@@46))
)))
(assert (= ($generated@@12 $generated@@48) 3))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@47 $generated@@48 $generated@@52 $generated@@49)  (or (= $generated@@52 $generated@@50) (= ($generated@@51 $generated@@52) $generated@@49)))
 :pattern ( ($generated@@47 $generated@@48 $generated@@52 $generated@@49))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@38 $generated@@48 $generated@@54 $generated@@53 $generated@@55) ($generated@@38 $generated@@48 $generated@@54 $generated@@49 $generated@@55))
 :pattern ( ($generated@@38 $generated@@48 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@38 $generated@@48 $generated@@54 $generated@@49 $generated@@55))
)))
(assert (= ($generated@@28 $generated@@56) 0))
(assert (= ($generated@@57 $generated@@4 $generated@@11) $generated@@56))
(assert ($generated@@58 $generated@@56))
(assert (= ($generated@@28 $generated@@59) 0))
(assert (= ($generated@@57 $generated@@4 $generated@@9) $generated@@59))
(assert  (not ($generated@@58 $generated@@59)))
(assert (= ($generated@@28 $generated@@60) 0))
(assert (= ($generated@@57 $generated@@4 $generated@@10) $generated@@60))
(assert  (not ($generated@@58 $generated@@60)))
(assert  (and (and (and (and (and (and (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@62 $generated@@69 $generated@@70 ($generated@@66 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@73) $generated@@71)
 :weight 0
)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (or (= $generated@@78 $generated@@79) (= ($generated@@62 $generated@@74 $generated@@75 ($generated@@66 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@76) $generated@@79) ($generated@@62 $generated@@74 $generated@@75 $generated@@77 $generated@@79)))
 :weight 0
))) (= ($generated@@12 $generated@@63) 4)) (= ($generated@@12 $generated@@64) 5)) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@12 ($generated@@65 $generated@@80 $generated@@81)) 6))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@67 ($generated@@65 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@65 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@68 ($generated@@65 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@65 $generated@@84 $generated@@85))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@38 $generated@@48 $generated@@86 $generated@@49 $generated@@87)  (or (= $generated@@86 $generated@@50) ($generated@@17 ($generated@@61 $generated@@13 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@87 $generated@@86) $generated@@1)))))
 :pattern ( ($generated@@38 $generated@@48 $generated@@86 $generated@@49 $generated@@87))
)))
(assert (forall (($generated@@89 Int) ) (! (= ($generated@@88 $generated@@89) $generated@@89)
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 $generated@@91) $generated@@91)
 :pattern ( ($generated@@90 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@93 $generated@@94 $generated@@95) (forall (($generated@@96 T@U) ) (!  (=> ($generated@@32 $generated@@94 $generated@@96) ($generated@@32 $generated@@95 $generated@@96))
 :pattern ( ($generated@@32 $generated@@94 $generated@@96))
 :pattern ( ($generated@@32 $generated@@95 $generated@@96))
)))
 :pattern ( ($generated@@93 $generated@@94 $generated@@95))
)))
(assert  (=> (<= 0 $generated@@97) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 Int) ) (!  (=> (or ($generated@@101 $generated@@105 $generated@@106 $generated@@107) (and (< 0 $generated@@97) (and (and ($generated@@100 $generated@@105) (and (or (not (= $generated@@106 $generated@@50)) (not true)) (and ($generated@@47 $generated@@48 $generated@@106 $generated@@53) ($generated@@38 $generated@@48 $generated@@106 $generated@@53 $generated@@105)))) (<= ($generated@@88 0) $generated@@107)))) (and (=> (or (not (= $generated@@107 ($generated@@88 0))) (not true)) ($generated@@102 $generated@@105 $generated@@106 (- $generated@@107 1))) (= ($generated@@98 ($generated@@99 $generated@@104) $generated@@105 $generated@@106 $generated@@107) (ite (= $generated@@107 ($generated@@88 0)) 5 ($generated@@103 $generated@@104 $generated@@105 $generated@@106 (- $generated@@107 1))))))
 :pattern ( ($generated@@98 ($generated@@99 $generated@@104) $generated@@105 $generated@@106 $generated@@107) ($generated@@100 $generated@@105))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@108 $generated@@110 ($generated@@61 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@61 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@47 $generated@@14 $generated@@111 $generated@@39) (<= ($generated@@88 0) ($generated@@19 $generated@@111)))
 :pattern ( ($generated@@47 $generated@@14 $generated@@111 $generated@@39))
)))
(assert ($generated@@58 $generated@@1))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and (and ($generated@@100 $generated@@112) (and (or (not (= $generated@@113 $generated@@50)) (not true)) (= ($generated@@51 $generated@@113) $generated@@49))) ($generated@@17 ($generated@@61 $generated@@13 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@112 $generated@@113) $generated@@1)))) ($generated@@38 $generated@@14 ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@112 $generated@@113) $generated@@59)) $generated $generated@@112))
 :pattern ( ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@112 $generated@@113) $generated@@59)))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and (and ($generated@@100 $generated@@114) (and (or (not (= $generated@@115 $generated@@50)) (not true)) (= ($generated@@51 $generated@@115) $generated@@49))) ($generated@@17 ($generated@@61 $generated@@13 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@114 $generated@@115) $generated@@1)))) ($generated@@38 $generated@@14 ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@114 $generated@@115) $generated@@60)) $generated $generated@@114))
 :pattern ( ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@114 $generated@@115) $generated@@60)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (and (and ($generated@@100 $generated@@116) (and (or (not (= $generated@@117 $generated@@50)) (not true)) (= ($generated@@51 $generated@@117) $generated@@49))) ($generated@@17 ($generated@@61 $generated@@13 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@116 $generated@@117) $generated@@1)))) ($generated@@38 $generated@@14 ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@116 $generated@@117) $generated@@56)) $generated $generated@@116))
 :pattern ( ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@116 $generated@@117) $generated@@56)))
)))
(assert  (=> (<= 0 $generated@@97) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 Int) ) (!  (=> (or ($generated@@102 $generated@@119 $generated@@120 $generated@@121) (and (< 0 $generated@@97) (and (and ($generated@@100 $generated@@119) (and (or (not (= $generated@@120 $generated@@50)) (not true)) (and ($generated@@47 $generated@@48 $generated@@120 $generated@@53) ($generated@@38 $generated@@48 $generated@@120 $generated@@53 $generated@@119)))) (<= ($generated@@88 0) $generated@@121)))) (and ($generated@@101 $generated@@119 $generated@@120 $generated@@121) (= ($generated@@103 ($generated@@99 $generated@@118) $generated@@119 $generated@@120 $generated@@121) (+ (+ (+ ($generated@@19 ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@119 $generated@@120) $generated@@59))) ($generated@@19 ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@119 $generated@@120) $generated@@60)))) ($generated@@19 ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@119 $generated@@120) $generated@@56)))) ($generated@@98 $generated@@118 $generated@@119 $generated@@120 $generated@@121)))))
 :pattern ( ($generated@@103 ($generated@@99 $generated@@118) $generated@@119 $generated@@120 $generated@@121) ($generated@@100 $generated@@119))
))))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@122 ($generated@@108 $generated@@126 $generated@@123) $generated@@124 $generated@@125) ($generated@@38 $generated@@126 $generated@@123 $generated@@124 $generated@@125))
 :pattern ( ($generated@@122 ($generated@@108 $generated@@126 $generated@@123) $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@47 $generated@@48 $generated@@127 $generated@@53)  (and ($generated@@47 $generated@@48 $generated@@127 $generated@@49) (or (not (= $generated@@127 $generated@@50)) (not true))))
 :pattern ( ($generated@@47 $generated@@48 $generated@@127 $generated@@53))
 :pattern ( ($generated@@47 $generated@@48 $generated@@127 $generated@@49))
)))
(assert  (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@128 $generated@@131 $generated@@132 $generated@@133 ($generated@@130 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@136 $generated@@137) $generated@@134)
 :weight 0
)) (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@128 $generated@@138 $generated@@139 $generated@@140 ($generated@@130 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@128 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@128 $generated@@147 $generated@@148 $generated@@149 ($generated@@130 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@128 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@17 ($generated@@128 $generated@@48 $generated@@63 $generated@@13 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))  (=> (and (or (not (= $generated@@163 $generated@@156)) (not true)) ($generated@@17 ($generated@@61 $generated@@13 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@157 $generated@@163) $generated@@158)))) (or (and (= $generated@@163 $generated@@159) (= $generated@@164 $generated@@160)) (and (= $generated@@163 $generated@@161) (= $generated@@164 $generated@@162)))))
 :pattern ( ($generated@@128 $generated@@48 $generated@@63 $generated@@13 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> ($generated@@165 $generated@@166 $generated@@167) (= $generated@@166 $generated@@167))
 :pattern ( ($generated@@165 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (and (= ($generated@@168 ($generated@@57 $generated@@169 $generated@@170)) $generated@@169) (= ($generated@@30 ($generated@@57 $generated@@169 $generated@@170)) $generated@@170))
 :pattern ( ($generated@@57 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@T) ) (! (= ($generated@@61 $generated@@172 ($generated@@108 $generated@@172 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@108 $generated@@172 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and ($generated@@100 $generated@@173) (and (or (not (= $generated@@174 $generated@@50)) (not true)) (= ($generated@@51 $generated@@174) $generated@@49))) ($generated@@47 $generated@@14 ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@173 $generated@@174) $generated@@59)) $generated))
 :pattern ( ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@173 $generated@@174) $generated@@59)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and ($generated@@100 $generated@@175) (and (or (not (= $generated@@176 $generated@@50)) (not true)) (= ($generated@@51 $generated@@176) $generated@@49))) ($generated@@47 $generated@@14 ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@175 $generated@@176) $generated@@60)) $generated))
 :pattern ( ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@175 $generated@@176) $generated@@60)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and ($generated@@100 $generated@@177) (and (or (not (= $generated@@178 $generated@@50)) (not true)) (= ($generated@@51 $generated@@178) $generated@@49))) ($generated@@47 $generated@@14 ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@177 $generated@@178) $generated@@56)) $generated))
 :pattern ( ($generated@@61 $generated@@14 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@177 $generated@@178) $generated@@56)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 Int) ) (! (= ($generated@@103 ($generated@@99 $generated@@179) $generated@@180 $generated@@181 $generated@@182) ($generated@@103 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
 :pattern ( ($generated@@103 ($generated@@99 $generated@@179) $generated@@180 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 Int) ) (! (= ($generated@@98 ($generated@@99 $generated@@183) $generated@@184 $generated@@185 $generated@@186) ($generated@@98 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
 :pattern ( ($generated@@98 ($generated@@99 $generated@@183) $generated@@184 $generated@@185 $generated@@186))
)))
(assert (= ($generated@@29 $generated@@39) $generated@@3))
(assert (= ($generated@@187 $generated@@39) $generated@@7))
(assert (= ($generated@@29 $generated@@49) $generated@@5))
(assert (= ($generated@@187 $generated@@49) $generated@@8))
(assert (= ($generated@@29 $generated@@53) $generated@@6))
(assert (= ($generated@@187 $generated@@53) $generated@@8))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@165 $generated@@188 $generated@@189) (forall (($generated@@190 T@U) ) (! (= ($generated@@32 $generated@@188 $generated@@190) ($generated@@32 $generated@@189 $generated@@190))
 :pattern ( ($generated@@32 $generated@@188 $generated@@190))
 :pattern ( ($generated@@32 $generated@@189 $generated@@190))
)))
 :pattern ( ($generated@@165 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@108 $generated@@14 ($generated@@18 ($generated@@88 $generated@@191))) ($generated@@90 $generated@@64 ($generated@@108 $generated@@14 ($generated@@18 $generated@@191))))
 :pattern ( ($generated@@108 $generated@@14 ($generated@@18 ($generated@@88 $generated@@191))))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@108 $generated@@193 ($generated@@90 $generated@@193 $generated@@192)) ($generated@@90 $generated@@64 ($generated@@108 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@108 $generated@@193 ($generated@@90 $generated@@193 $generated@@192)))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! ($generated@@38 $generated@@14 $generated@@195 $generated $generated@@194)
 :pattern ( ($generated@@38 $generated@@14 $generated@@195 $generated $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ) (! ($generated@@47 $generated@@14 $generated@@196 $generated)
 :pattern ( ($generated@@47 $generated@@14 $generated@@196 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Bool)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@205  (=> (and (or (not (= $generated@@197 ($generated@@88 0))) (not true)) ($generated@@122 ($generated@@108 $generated@@48 $generated@@198) $generated@@49 $generated@@199)) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@47 $generated@@14 ($generated@@18 (- $generated@@197 1)) $generated@@39)) (=> ($generated@@47 $generated@@14 ($generated@@18 (- $generated@@197 1)) $generated@@39) (=> (= $generated@@200 (- $generated@@197 1)) (=> (and ($generated@@38 $generated@@14 ($generated@@18 $generated@@200) $generated@@39 $generated@@199) (= $generated@@201 (forall (($generated@@206 T@U) ($generated@@207 T@U) )  (=> (and (and (or (not (= $generated@@206 $generated@@50)) (not true)) ($generated@@17 ($generated@@61 $generated@@13 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@48 ($generated@@65 $generated@@63 $generated@@64) $generated@@199 $generated@@206) $generated@@1)))) (= $generated@@206 $generated@@198)) ($generated@@17 ($generated@@128 $generated@@48 $generated@@63 $generated@@13 $generated@@202 $generated@@206 $generated@@207)))))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (or (<= 0 $generated@@197) (and ($generated@@93 ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198)) ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198))) (not ($generated@@93 ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198)) ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198)))))) (= $generated@@200 $generated@@197))) (=> (or (or (<= 0 $generated@@197) (and ($generated@@93 ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198)) ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198))) (not ($generated@@93 ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198)) ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198)))))) (= $generated@@200 $generated@@197)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (and ($generated@@93 ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198)) ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198))) (not ($generated@@93 ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198)) ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198))))) (and ($generated@@165 ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198)) ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198))) (< $generated@@200 $generated@@197)))) (=> (or (and ($generated@@93 ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198)) ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198))) (not ($generated@@93 ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198)) ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198))))) (and ($generated@@165 ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198)) ($generated@@31 $generated@@45 ($generated@@108 $generated@@48 $generated@@198))) (< $generated@@200 $generated@@197))) (=> ($generated@@102 $generated@@199 $generated@@198 (- $generated@@197 1)) (=> (and (and (= ($generated@@98 ($generated@@99 $generated@@203) $generated@@199 $generated@@198 $generated@@197) ($generated@@103 ($generated@@99 $generated@@203) $generated@@199 $generated@@198 (- $generated@@197 1))) ($generated@@102 $generated@@199 $generated@@198 (- $generated@@197 1))) (and ($generated@@47 $generated@@14 ($generated@@18 ($generated@@98 ($generated@@99 $generated@@203) $generated@@199 $generated@@198 $generated@@197)) $generated) (= (ControlFlow 0 4) (- 0 3)))) $generated@@201)))))))))))))
(let (($generated@@208 true))
(let (($generated@@209 true))
(let (($generated@@210  (=> (= $generated@@202 ($generated@@129 $generated@@50 $generated@@199 $generated@@1 $generated@@198 $generated@@59 $generated@@198 $generated@@56)) (and (=> (= (ControlFlow 0 8) (- 0 10)) (or (not (= $generated@@198 $generated@@50)) (not true))) (=> (or (not (= $generated@@198 $generated@@50)) (not true)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= $generated@@198 $generated@@50)) (not true))) (=> (or (not (= $generated@@198 $generated@@50)) (not true)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@209) (=> (= (ControlFlow 0 8) 2) $generated@@208)) (=> (= (ControlFlow 0 8) 4) $generated@@205)))))))))
(let (($generated@@211  (=> (and ($generated@@100 $generated@@199) ($generated@@204 $generated@@199)) (=> (and (and (and (or (not (= $generated@@198 $generated@@50)) (not true)) (and ($generated@@47 $generated@@48 $generated@@198 $generated@@53) ($generated@@38 $generated@@48 $generated@@198 $generated@@53 $generated@@199))) (<= ($generated@@88 0) $generated@@197)) (and (= 0 $generated@@97) (= (ControlFlow 0 11) 8))) $generated@@210))))
$generated@@211))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
