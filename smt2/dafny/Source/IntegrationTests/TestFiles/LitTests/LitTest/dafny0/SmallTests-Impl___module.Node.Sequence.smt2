(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@U Int) T@U)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@36 (T@U Int) T@U)
(declare-fun $generated@@37 (T@U Int T@U) T@U)
(declare-fun $generated@@42 (T@U Int) T@U)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@47 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T T@T) T@T)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@84 (Int) Int)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@145 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@23 $generated@@24) 0))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 Int) ) (!  (=> (and (<= 0 $generated@@29) (<= $generated@@29 ($generated@@23 $generated@@27))) (= ($generated@@25 ($generated@@26 $generated@@27 $generated@@28) $generated@@29) ($generated@@26 ($generated@@25 $generated@@27 $generated@@29) $generated@@28)))
 :pattern ( ($generated@@25 ($generated@@26 $generated@@27 $generated@@28) $generated@@29))
)))
(assert (= ($generated@@6 $generated@@31) 3))
(assert (forall (($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@35 $generated@@32)  (or (= $generated@@35 $generated@@33) (= ($generated@@34 $generated@@35) $generated@@32)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@35 $generated@@32))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 Int) ($generated@@40 T@U) ($generated@@41 Int) ) (!  (=> (and (<= 0 $generated@@41) (< $generated@@41 ($generated@@23 $generated@@38))) (and (=> (= $generated@@39 $generated@@41) (= ($generated@@36 ($generated@@37 $generated@@38 $generated@@39 $generated@@40) $generated@@41) $generated@@40)) (=> (or (not (= $generated@@39 $generated@@41)) (not true)) (= ($generated@@36 ($generated@@37 $generated@@38 $generated@@39 $generated@@40) $generated@@41) ($generated@@36 $generated@@38 $generated@@41)))))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@38 $generated@@39 $generated@@40) $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 Int) ) (!  (=> (= $generated@@46 ($generated@@23 $generated@@44)) (and (= ($generated@@42 ($generated@@43 $generated@@44 $generated@@45) $generated@@46) $generated@@44) (= ($generated@@25 ($generated@@43 $generated@@44 $generated@@45) $generated@@46) $generated@@45)))
 :pattern ( ($generated@@42 ($generated@@43 $generated@@44 $generated@@45) $generated@@46))
 :pattern ( ($generated@@25 ($generated@@43 $generated@@44 $generated@@45) $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@47 $generated@@31 $generated@@49 $generated@@48 $generated@@50) ($generated@@47 $generated@@31 $generated@@49 $generated@@32 $generated@@50))
 :pattern ( ($generated@@47 $generated@@31 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@47 $generated@@31 $generated@@49 $generated@@32 $generated@@50))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@52 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@52 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@52 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@6 $generated@@53) 4)) (= ($generated@@6 $generated@@54) 5)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@6 ($generated@@55 $generated@@70 $generated@@71)) 6))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@55 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@55 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@55 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@55 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@47 $generated@@31 $generated@@76 $generated@@32 $generated@@77)  (or (= $generated@@76 $generated@@33) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@77 $generated@@76) $generated@@2)))))
 :pattern ( ($generated@@47 $generated@@31 $generated@@76 $generated@@32 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 Int) ($generated@@80 T@U) ($generated@@81 Int) ) (!  (=> (and (and (<= 0 $generated@@81) (<= $generated@@81 $generated@@79)) (< $generated@@79 ($generated@@23 $generated@@78))) (= ($generated@@25 ($generated@@37 $generated@@78 $generated@@79 $generated@@80) $generated@@81) ($generated@@37 ($generated@@25 $generated@@78 $generated@@81) (- $generated@@79 $generated@@81) $generated@@80)))
 :pattern ( ($generated@@25 ($generated@@37 $generated@@78 $generated@@79 $generated@@80) $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 Int) ) (!  (=> (= $generated@@83 0) (= ($generated@@25 $generated@@82 $generated@@83) $generated@@82))
 :pattern ( ($generated@@25 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@84 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@86 $generated@@88 $generated@@87) $generated@@87)
 :pattern ( ($generated@@86 $generated@@88 $generated@@87))
)))
(assert (= ($generated@@6 $generated@@89) 7))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (and ($generated@@30 $generated@@89 $generated@@92 ($generated@@90 $generated@@94)) ($generated@@91 $generated@@93 $generated@@94)) ($generated@@30 $generated@@89 ($generated@@26 $generated@@92 $generated@@93) ($generated@@90 $generated@@94)))
 :pattern ( ($generated@@30 $generated@@89 ($generated@@26 $generated@@92 $generated@@93) ($generated@@90 $generated@@94)))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 Int) ($generated@@97 Int) ) (!  (=> (and (and (<= 0 $generated@@97) (< $generated@@97 $generated@@96)) (< $generated@@97 ($generated@@23 $generated@@95))) (= ($generated@@36 ($generated@@42 $generated@@95 $generated@@96) $generated@@97) ($generated@@36 $generated@@95 $generated@@97)))
 :weight 25
 :pattern ( ($generated@@36 ($generated@@42 $generated@@95 $generated@@96) $generated@@97))
 :pattern ( ($generated@@36 $generated@@95 $generated@@97) ($generated@@42 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 Int) ) (!  (=> (and (<= 0 $generated@@99) (<= $generated@@99 ($generated@@23 $generated@@98))) (= ($generated@@23 ($generated@@25 $generated@@98 $generated@@99)) (- ($generated@@23 $generated@@98) $generated@@99)))
 :pattern ( ($generated@@23 ($generated@@25 $generated@@98 $generated@@99)))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@100 $generated@@102 ($generated@@51 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@51 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@23 ($generated@@26 $generated@@103 $generated@@104)) (+ 1 ($generated@@23 $generated@@103)))
 :pattern ( ($generated@@26 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@105 ($generated@@100 $generated@@109 $generated@@106) $generated@@107 $generated@@108) ($generated@@47 $generated@@109 $generated@@106 $generated@@107 $generated@@108))
 :pattern ( ($generated@@105 ($generated@@100 $generated@@109 $generated@@106) $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 Int) ($generated@@112 Int) ) (!  (=> (and (and (<= 0 $generated@@111) (<= 0 $generated@@112)) (< $generated@@112 (- ($generated@@23 $generated@@110) $generated@@111))) (= ($generated@@36 ($generated@@25 $generated@@110 $generated@@111) $generated@@112) ($generated@@36 $generated@@110 (+ $generated@@112 $generated@@111))))
 :weight 25
 :pattern ( ($generated@@36 ($generated@@25 $generated@@110 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@23 ($generated@@43 $generated@@113 $generated@@114)) (+ ($generated@@23 $generated@@113) ($generated@@23 $generated@@114)))
 :pattern ( ($generated@@23 ($generated@@43 $generated@@113 $generated@@114)))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@91 $generated@@115 $generated@@48) (and (= ($generated@@100 $generated@@31 ($generated@@51 $generated@@31 $generated@@115)) $generated@@115) ($generated@@30 $generated@@31 ($generated@@51 $generated@@31 $generated@@115) $generated@@48)))
 :pattern ( ($generated@@91 $generated@@115 $generated@@48))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@91 $generated@@116 $generated@@32) (and (= ($generated@@100 $generated@@31 ($generated@@51 $generated@@31 $generated@@116)) $generated@@116) ($generated@@30 $generated@@31 ($generated@@51 $generated@@31 $generated@@116) $generated@@32)))
 :pattern ( ($generated@@91 $generated@@116 $generated@@32))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@117 $generated@@48)  (and ($generated@@30 $generated@@31 $generated@@117 $generated@@32) (or (not (= $generated@@117 $generated@@33)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@117 $generated@@48))
 :pattern ( ($generated@@30 $generated@@31 $generated@@117 $generated@@32))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 Int) ($generated@@120 T@U) ) (!  (and (=> (= $generated@@119 ($generated@@23 $generated@@118)) (= ($generated@@36 ($generated@@26 $generated@@118 $generated@@120) $generated@@119) $generated@@120)) (=> (or (not (= $generated@@119 ($generated@@23 $generated@@118))) (not true)) (= ($generated@@36 ($generated@@26 $generated@@118 $generated@@120) $generated@@119) ($generated@@36 $generated@@118 $generated@@119))))
 :pattern ( ($generated@@36 ($generated@@26 $generated@@118 $generated@@120) $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 Int) ($generated@@123 T@U) ($generated@@124 Int) ) (!  (=> (and (and (<= 0 $generated@@122) (< $generated@@122 $generated@@124)) (<= $generated@@124 ($generated@@23 $generated@@121))) (= ($generated@@25 ($generated@@37 $generated@@121 $generated@@122 $generated@@123) $generated@@124) ($generated@@25 $generated@@121 $generated@@124)))
 :pattern ( ($generated@@25 ($generated@@37 $generated@@121 $generated@@122 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 Int) ) (!  (=> (and (<= 0 $generated@@126) (<= $generated@@126 ($generated@@23 $generated@@125))) (= ($generated@@23 ($generated@@42 $generated@@125 $generated@@126)) $generated@@126))
 :pattern ( ($generated@@23 ($generated@@42 $generated@@125 $generated@@126)))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@91 $generated@@127 $generated) (and (= ($generated@@100 $generated@@7 ($generated@@51 $generated@@7 $generated@@127)) $generated@@127) ($generated@@30 $generated@@7 ($generated@@51 $generated@@7 $generated@@127) $generated)))
 :pattern ( ($generated@@91 $generated@@127 $generated))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@91 ($generated@@100 $generated@@130 $generated@@128) $generated@@129) ($generated@@30 $generated@@130 $generated@@128 $generated@@129))
 :pattern ( ($generated@@91 ($generated@@100 $generated@@130 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 Int) ($generated@@133 T@U) ($generated@@134 Int) ) (!  (=> (and (<= $generated@@134 $generated@@132) (< $generated@@132 ($generated@@23 $generated@@131))) (= ($generated@@42 ($generated@@37 $generated@@131 $generated@@132 $generated@@133) $generated@@134) ($generated@@42 $generated@@131 $generated@@134)))
 :pattern ( ($generated@@42 ($generated@@37 $generated@@131 $generated@@132 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ) (! (<= 0 ($generated@@23 $generated@@135))
 :pattern ( ($generated@@23 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@47 $generated@@89 $generated@@136 ($generated@@90 $generated@@137) $generated@@138) (forall (($generated@@139 Int) ) (!  (=> (and (<= 0 $generated@@139) (< $generated@@139 ($generated@@23 $generated@@136))) ($generated@@105 ($generated@@36 $generated@@136 $generated@@139) $generated@@137 $generated@@138))
 :pattern ( ($generated@@36 $generated@@136 $generated@@139))
)))
 :pattern ( ($generated@@47 $generated@@89 $generated@@136 ($generated@@90 $generated@@137) $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@140 ($generated@@90 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@90 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@22 ($generated@@90 $generated@@142)) $generated@@1)
 :pattern ( ($generated@@90 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@51 $generated@@144 ($generated@@100 $generated@@144 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@100 $generated@@144 $generated@@143))
)))
(assert  (and (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@145 $generated@@148 $generated@@149 $generated@@150 ($generated@@147 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@153 $generated@@154) $generated@@151)
 :weight 0
)) (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@145 $generated@@155 $generated@@156 $generated@@157 ($generated@@147 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@145 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@145 $generated@@164 $generated@@165 $generated@@166 ($generated@@147 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@171 $generated@@172) ($generated@@145 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@171 $generated@@172)))
 :weight 0
)))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 Bool) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@11 ($generated@@145 $generated@@31 $generated@@53 $generated@@7 ($generated@@146 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@177 $generated@@178))  (=> (and (or (not (= $generated@@177 $generated@@173)) (not true)) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@174 $generated@@177) $generated@@175)))) $generated@@176))
 :pattern ( ($generated@@145 $generated@@31 $generated@@53 $generated@@7 ($generated@@146 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 T@U) ) (!  (=> (and (<= 0 $generated@@180) (< $generated@@180 ($generated@@23 $generated@@179))) (= ($generated@@23 ($generated@@37 $generated@@179 $generated@@180 $generated@@181)) ($generated@@23 $generated@@179)))
 :pattern ( ($generated@@23 ($generated@@37 $generated@@179 $generated@@180 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (and (= ($generated@@182 ($generated@@26 $generated@@184 $generated@@185)) $generated@@184) (= ($generated@@183 ($generated@@26 $generated@@184 $generated@@185)) $generated@@185))
 :pattern ( ($generated@@26 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@91 $generated@@186 ($generated@@90 $generated@@187)) (and (= ($generated@@100 $generated@@89 ($generated@@51 $generated@@89 $generated@@186)) $generated@@186) ($generated@@30 $generated@@89 ($generated@@51 $generated@@89 $generated@@186) ($generated@@90 $generated@@187))))
 :pattern ( ($generated@@91 $generated@@186 ($generated@@90 $generated@@187)))
)))
(assert (= ($generated@@22 $generated@@48) $generated@@3))
(assert (= ($generated@@188 $generated@@48) $generated@@5))
(assert (= ($generated@@22 $generated@@32) $generated@@4))
(assert (= ($generated@@188 $generated@@32) $generated@@5))
(assert (forall (($generated@@189 T@U) ($generated@@190 Int) ($generated@@191 Int) ) (!  (=> (and (and (<= 0 $generated@@190) (<= $generated@@190 $generated@@191)) (< $generated@@191 ($generated@@23 $generated@@189))) (= ($generated@@36 ($generated@@25 $generated@@189 $generated@@190) (- $generated@@191 $generated@@190)) ($generated@@36 $generated@@189 $generated@@191)))
 :weight 25
 :pattern ( ($generated@@36 $generated@@189 $generated@@191) ($generated@@25 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 Int) ($generated@@194 Int) ) (!  (=> (and (and (<= 0 $generated@@193) (<= 0 $generated@@194)) (<= (+ $generated@@193 $generated@@194) ($generated@@23 $generated@@192))) (= ($generated@@25 ($generated@@25 $generated@@192 $generated@@193) $generated@@194) ($generated@@25 $generated@@192 (+ $generated@@193 $generated@@194))))
 :pattern ( ($generated@@25 ($generated@@25 $generated@@192 $generated@@193) $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Int) ) (!  (and (=> (< $generated@@197 ($generated@@23 $generated@@195)) (= ($generated@@36 ($generated@@43 $generated@@195 $generated@@196) $generated@@197) ($generated@@36 $generated@@195 $generated@@197))) (=> (<= ($generated@@23 $generated@@195) $generated@@197) (= ($generated@@36 ($generated@@43 $generated@@195 $generated@@196) $generated@@197) ($generated@@36 $generated@@196 (- $generated@@197 ($generated@@23 $generated@@195))))))
 :pattern ( ($generated@@36 ($generated@@43 $generated@@195 $generated@@196) $generated@@197))
)))
(assert (forall (($generated@@198 Int) ) (! (= ($generated@@100 $generated@@8 ($generated@@12 ($generated@@84 $generated@@198))) ($generated@@86 $generated@@54 ($generated@@100 $generated@@8 ($generated@@12 $generated@@198))))
 :pattern ( ($generated@@100 $generated@@8 ($generated@@12 ($generated@@84 $generated@@198))))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@T) ) (! (= ($generated@@100 $generated@@200 ($generated@@86 $generated@@200 $generated@@199)) ($generated@@86 $generated@@54 ($generated@@100 $generated@@200 $generated@@199)))
 :pattern ( ($generated@@100 $generated@@200 ($generated@@86 $generated@@200 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ) (!  (=> (= ($generated@@23 $generated@@201) 0) (= $generated@@201 $generated@@24))
 :pattern ( ($generated@@23 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 Int) ) (!  (=> (= $generated@@203 0) (= ($generated@@42 $generated@@202 $generated@@203) $generated@@24))
 :pattern ( ($generated@@42 $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! ($generated@@47 $generated@@7 $generated@@205 $generated $generated@@204)
 :pattern ( ($generated@@47 $generated@@7 $generated@@205 $generated $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 Int) ($generated@@208 T@U) ($generated@@209 Int) ) (!  (=> (and (and (<= 0 $generated@@207) (< $generated@@207 $generated@@209)) (<= $generated@@209 ($generated@@23 $generated@@206))) (= ($generated@@42 ($generated@@37 $generated@@206 $generated@@207 $generated@@208) $generated@@209) ($generated@@37 ($generated@@42 $generated@@206 $generated@@209) $generated@@207 $generated@@208)))
 :pattern ( ($generated@@42 ($generated@@37 $generated@@206 $generated@@207 $generated@@208) $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@30 $generated@@89 $generated@@210 ($generated@@90 $generated@@211)) (forall (($generated@@212 Int) ) (!  (=> (and (<= 0 $generated@@212) (< $generated@@212 ($generated@@23 $generated@@210))) ($generated@@91 ($generated@@36 $generated@@210 $generated@@212) $generated@@211))
 :pattern ( ($generated@@36 $generated@@210 $generated@@212))
)))
 :pattern ( ($generated@@30 $generated@@89 $generated@@210 ($generated@@90 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ) (! ($generated@@30 $generated@@7 $generated@@213 $generated)
 :pattern ( ($generated@@30 $generated@@7 $generated@@213 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 () Bool)
(declare-fun $generated@@218 () Bool)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@228  (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@23 $generated@@214) ($generated@@23 $generated@@215))) (=> (= ($generated@@23 $generated@@214) ($generated@@23 $generated@@215)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= ($generated@@11 ($generated@@51 $generated@@7 ($generated@@36 $generated@@214 ($generated@@84 8)))) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@36 $generated@@215 ($generated@@84 8))))) (= ($generated@@11 ($generated@@51 $generated@@7 ($generated@@36 $generated@@214 ($generated@@84 9)))) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@36 $generated@@215 ($generated@@84 9))))))) (=> (or (= ($generated@@11 ($generated@@51 $generated@@7 ($generated@@36 $generated@@214 ($generated@@84 8)))) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@36 $generated@@215 ($generated@@84 8))))) (= ($generated@@11 ($generated@@51 $generated@@7 ($generated@@36 $generated@@214 ($generated@@84 9)))) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@36 $generated@@215 ($generated@@84 9)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@11 ($generated@@51 $generated@@7 ($generated@@36 $generated@@214 $generated@@216))) $generated@@217))))))))
(let (($generated@@229  (=> (not $generated@@218) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and (<= 0 $generated@@216) (<= $generated@@216 ($generated@@23 $generated@@215)))) (=> (and (<= 0 $generated@@216) (<= $generated@@216 ($generated@@23 $generated@@215))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 (+ $generated@@216 1)) (<= (+ $generated@@216 1) ($generated@@23 $generated@@215)))) (=> (and (<= 0 (+ $generated@@216 1)) (<= (+ $generated@@216 1) ($generated@@23 $generated@@215))) (=> (= $generated@@219 ($generated@@43 ($generated@@43 ($generated@@42 $generated@@215 $generated@@216) ($generated@@26 $generated@@24 ($generated@@100 $generated@@7 ($generated@@10 $generated@@217)))) ($generated@@25 $generated@@215 (+ $generated@@216 1)))) (=> (and (= $generated@@214 $generated@@219) (= (ControlFlow 0 7) 2)) $generated@@228)))))))))
(let (($generated@@230  (=> $generated@@218 (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@216) (< $generated@@216 ($generated@@23 $generated@@215)))) (=> (and (<= 0 $generated@@216) (< $generated@@216 ($generated@@23 $generated@@215))) (=> (= $generated@@220 ($generated@@37 $generated@@215 $generated@@216 ($generated@@100 $generated@@7 ($generated@@10 $generated@@217)))) (=> (and (= $generated@@214 $generated@@220) (= (ControlFlow 0 5) 2)) $generated@@228)))))))
(let (($generated@@231  (=> (= $generated@@221 ($generated@@146 $generated@@33 $generated@@222 $generated@@2 false)) (and (=> (= (ControlFlow 0 10) 5) $generated@@230) (=> (= (ControlFlow 0 10) 7) $generated@@229)))))
(let (($generated@@232  (=> (and ($generated@@223 $generated@@222) ($generated@@224 $generated@@222)) (=> (and (and (or (not (= $generated@@225 $generated@@33)) (not true)) (and ($generated@@30 $generated@@31 $generated@@225 $generated@@48) ($generated@@47 $generated@@31 $generated@@225 $generated@@48 $generated@@222))) (and ($generated@@30 $generated@@89 $generated@@215 ($generated@@90 $generated)) ($generated@@47 $generated@@89 $generated@@215 ($generated@@90 $generated) $generated@@222))) (=> (and (and (and ($generated@@30 $generated@@89 $generated@@226 ($generated@@90 $generated)) ($generated@@47 $generated@@89 $generated@@226 ($generated@@90 $generated) $generated@@222)) (= 0 $generated@@227)) (and (and (<= ($generated@@84 10) ($generated@@23 $generated@@215)) (<= ($generated@@84 8) $generated@@216)) (and (< $generated@@216 ($generated@@23 $generated@@215)) (= (ControlFlow 0 11) 10)))) $generated@@231)))))
$generated@@232))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
