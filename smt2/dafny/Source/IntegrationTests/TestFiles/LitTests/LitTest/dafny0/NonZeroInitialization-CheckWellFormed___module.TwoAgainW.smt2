(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@26 (T@U T@U T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@67 () Int)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@110 () T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@122 (T@U) Int)
(declare-fun $generated@@123 (T@U) Int)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@135 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@T T@T) T@T)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (forall (($generated@@25 T@U) ) (!  (not ($generated@@23 $generated@@24 $generated@@25))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@26 $generated@@28 ($generated@@27 $generated@@29) $generated@@30) ($generated@@26 $generated@@28 $generated@@29 $generated@@30))
 :pattern ( ($generated@@26 $generated@@28 ($generated@@27 $generated@@29) $generated@@30))
)))
(assert (= ($generated@@31 $generated@@32) $generated@@2))
(assert (= ($generated@@7 $generated@@34) 3))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@36 $generated@@38) ($generated@@33 $generated@@34 $generated@@32 ($generated@@35 $generated@@37) $generated@@38))
 :pattern ( ($generated@@33 $generated@@34 $generated@@32 ($generated@@35 $generated@@37) $generated@@38))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@42 ($generated@@39 $generated@@41) $generated@@43) ($generated@@33 $generated@@34 $generated@@42 ($generated@@35 ($generated@@40 $generated@@41)) $generated@@43))
 :pattern ( ($generated@@33 $generated@@34 $generated@@42 ($generated@@39 $generated@@41) $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ) (! ($generated@@44 $generated@@34 $generated@@32 ($generated@@35 $generated@@45))
 :pattern ( ($generated@@44 $generated@@34 $generated@@32 ($generated@@35 $generated@@45)))
)))
(assert (forall (($generated@@47 Int) ) (! (= ($generated@@46 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@34 ($generated@@51 $generated@@54 $generated@@55) ($generated@@35 $generated@@53))  (and ($generated@@52 $generated@@54 $generated@@53) ($generated@@44 $generated@@34 $generated@@55 ($generated@@35 $generated@@53))))
 :pattern ( ($generated@@44 $generated@@34 ($generated@@51 $generated@@54 $generated@@55) ($generated@@35 $generated@@53)))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@56 $generated@@57) (= ($generated@@31 $generated@@57) $generated@@2))
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@58 $generated@@59) (= ($generated@@31 $generated@@59) $generated@@3))
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 ($generated@@60 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@60 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@58 $generated@@64) (exists (($generated@@65 T@U) ($generated@@66 T@U) ) (= $generated@@64 ($generated@@51 $generated@@65 $generated@@66))))
 :pattern ( ($generated@@58 $generated@@64))
)))
(assert  (=> (<= 1 $generated@@67) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or ($generated@@68 $generated@@70 $generated@@72) (and (< 1 $generated@@67) ($generated@@44 $generated@@34 $generated@@72 ($generated@@35 $generated@@70)))) (and (=> (not ($generated@@56 $generated@@72)) (let (($generated@@73 ($generated@@69 $generated@@72)))
($generated@@68 $generated@@70 $generated@@73))) (= ($generated@@26 $generated@@70 ($generated@@27 $generated@@71) $generated@@72) (ite ($generated@@56 $generated@@72) 0 (let (($generated@@74 ($generated@@69 $generated@@72)))
(+ ($generated@@26 $generated@@70 $generated@@71 $generated@@74) 1))))))
 :pattern ( ($generated@@26 $generated@@70 ($generated@@27 $generated@@71) $generated@@72))
))))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@56 $generated@@75) (= $generated@@75 $generated@@32))
 :pattern ( ($generated@@56 $generated@@75))
)))
(assert (= ($generated@@7 $generated@@76) 4))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@44 $generated@@76 $generated@@77 ($generated@@40 $generated@@78)) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@23 $generated@@77 $generated@@79) ($generated@@52 $generated@@79 $generated@@78))
 :pattern ( ($generated@@23 $generated@@77 $generated@@79))
)))
 :pattern ( ($generated@@44 $generated@@76 $generated@@77 ($generated@@40 $generated@@78)))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@80 ($generated@@61 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@33 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@80 ($generated@@61 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert  (=> (<= 1 $generated@@67) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (or ($generated@@68 $generated@@85 ($generated@@48 $generated@@34 $generated@@87)) (and (< 1 $generated@@67) ($generated@@44 $generated@@34 $generated@@87 ($generated@@35 $generated@@85)))) (and (=> (not ($generated@@12 ($generated@@48 $generated@@8 ($generated@@11 ($generated@@56 ($generated@@48 $generated@@34 $generated@@87)))))) (let (($generated@@88 ($generated@@48 $generated@@34 ($generated@@69 ($generated@@48 $generated@@34 $generated@@87)))))
($generated@@68 $generated@@85 $generated@@88))) (= ($generated@@26 $generated@@85 ($generated@@27 $generated@@86) ($generated@@48 $generated@@34 $generated@@87)) (ite ($generated@@56 ($generated@@48 $generated@@34 $generated@@87)) 0 (let (($generated@@89 ($generated@@48 $generated@@34 ($generated@@69 ($generated@@48 $generated@@34 $generated@@87)))))
($generated@@46 (+ ($generated@@26 $generated@@85 ($generated@@27 $generated@@86) $generated@@89) 1)))))))
 :weight 3
 :pattern ( ($generated@@26 $generated@@85 ($generated@@27 $generated@@86) ($generated@@48 $generated@@34 $generated@@87)))
))))
(assert (forall (($generated@@92 T@U) ) (!  (and (= ($generated@@90 ($generated@@35 $generated@@92)) $generated@@1) (= ($generated@@91 ($generated@@35 $generated@@92)) $generated@@5))
 :pattern ( ($generated@@35 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (!  (and (= ($generated@@90 ($generated@@39 $generated@@93)) $generated@@4) (= ($generated@@91 ($generated@@39 $generated@@93)) $generated@@6))
 :pattern ( ($generated@@39 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> ($generated@@44 $generated@@34 $generated@@95 ($generated@@35 $generated@@94)) (or ($generated@@56 $generated@@95) ($generated@@58 $generated@@95)))
 :pattern ( ($generated@@58 $generated@@95) ($generated@@44 $generated@@34 $generated@@95 ($generated@@35 $generated@@94)))
 :pattern ( ($generated@@56 $generated@@95) ($generated@@44 $generated@@34 $generated@@95 ($generated@@35 $generated@@94)))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@52 ($generated@@61 $generated@@98 $generated@@96) $generated@@97) ($generated@@44 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@52 ($generated@@61 $generated@@98 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@33 $generated@@76 $generated@@99 ($generated@@40 $generated@@100) $generated@@101) (forall (($generated@@102 T@U) ) (!  (=> ($generated@@23 $generated@@99 $generated@@102) ($generated@@80 $generated@@102 $generated@@100 $generated@@101))
 :pattern ( ($generated@@23 $generated@@99 $generated@@102))
)))
 :pattern ( ($generated@@33 $generated@@76 $generated@@99 ($generated@@40 $generated@@100) $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@31 ($generated@@51 $generated@@103 $generated@@104)) $generated@@3)
 :pattern ( ($generated@@51 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@105 ($generated@@51 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@51 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@69 ($generated@@51 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@51 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@44 $generated@@34 $generated@@112 ($generated@@39 $generated@@111))  (and ($generated@@44 $generated@@34 $generated@@112 ($generated@@35 ($generated@@40 $generated@@111))) (<= ($generated@@46 2) ($generated@@26 ($generated@@40 $generated@@111) ($generated@@27 $generated@@110) $generated@@112))))
 :pattern ( ($generated@@44 $generated@@34 $generated@@112 ($generated@@39 $generated@@111)))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 ($generated@@40 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@40 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@90 ($generated@@40 $generated@@115)) $generated)
 :pattern ( ($generated@@40 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@35 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@35 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@39 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@39 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@60 $generated@@121 ($generated@@61 $generated@@121 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@61 $generated@@121 $generated@@120))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (< ($generated@@122 $generated@@124) ($generated@@123 ($generated@@51 $generated@@124 $generated@@125)))
 :pattern ( ($generated@@51 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (< ($generated@@123 $generated@@127) ($generated@@123 ($generated@@51 $generated@@126 $generated@@127)))
 :pattern ( ($generated@@51 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and ($generated@@36 $generated@@130) (and ($generated@@58 $generated@@128) ($generated@@33 $generated@@34 $generated@@128 ($generated@@35 $generated@@129) $generated@@130))) ($generated@@80 ($generated@@105 $generated@@128) $generated@@129 $generated@@130))
 :pattern ( ($generated@@80 ($generated@@105 $generated@@128) $generated@@129 $generated@@130))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@131 $generated@@142 $generated@@143 $generated@@144 ($generated@@138 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@147 $generated@@148) $generated@@145)
 :weight 0
)) (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@131 $generated@@149 $generated@@150 $generated@@151 ($generated@@138 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@131 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@131 $generated@@158 $generated@@159 $generated@@160 ($generated@@138 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@131 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)))) (= ($generated@@7 $generated@@132) 5)) (= ($generated@@7 $generated@@133) 6)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@135 $generated@@167 $generated@@168 ($generated@@139 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@169) $generated@@171) $generated@@169)
 :weight 0
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@176 $generated@@177) (= ($generated@@135 $generated@@172 $generated@@173 ($generated@@139 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@174) $generated@@177) ($generated@@135 $generated@@172 $generated@@173 $generated@@175 $generated@@177)))
 :weight 0
))) (= ($generated@@7 $generated@@136) 7)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@7 ($generated@@137 $generated@@178 $generated@@179)) 8))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@140 ($generated@@137 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@137 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@141 ($generated@@137 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@137 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@12 ($generated@@131 $generated@@132 $generated@@133 $generated@@8 ($generated@@134 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))  (=> (and (or (not (= $generated@@188 $generated@@184)) (not true)) ($generated@@12 ($generated@@60 $generated@@8 ($generated@@135 $generated@@133 $generated@@136 ($generated@@135 $generated@@132 ($generated@@137 $generated@@133 $generated@@136) $generated@@185 $generated@@188) $generated@@186)))) $generated@@187))
 :pattern ( ($generated@@131 $generated@@132 $generated@@133 $generated@@8 ($generated@@134 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@122 ($generated@@61 $generated@@34 $generated@@190)) ($generated@@123 $generated@@190))
 :pattern ( ($generated@@122 ($generated@@61 $generated@@34 $generated@@190)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@52 $generated@@191 ($generated@@40 $generated@@192)) (and (= ($generated@@61 $generated@@76 ($generated@@60 $generated@@76 $generated@@191)) $generated@@191) ($generated@@44 $generated@@76 ($generated@@60 $generated@@76 $generated@@191) ($generated@@40 $generated@@192))))
 :pattern ( ($generated@@52 $generated@@191 ($generated@@40 $generated@@192)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> ($generated@@52 $generated@@194 ($generated@@35 $generated@@193)) (and (= ($generated@@61 $generated@@34 ($generated@@60 $generated@@34 $generated@@194)) $generated@@194) ($generated@@44 $generated@@34 ($generated@@60 $generated@@34 $generated@@194) ($generated@@35 $generated@@193))))
 :pattern ( ($generated@@52 $generated@@194 ($generated@@35 $generated@@193)))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> ($generated@@52 $generated@@196 ($generated@@39 $generated@@195)) (and (= ($generated@@61 $generated@@34 ($generated@@60 $generated@@34 $generated@@196)) $generated@@196) ($generated@@44 $generated@@34 ($generated@@60 $generated@@34 $generated@@196) ($generated@@39 $generated@@195))))
 :pattern ( ($generated@@52 $generated@@196 ($generated@@39 $generated@@195)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@36 $generated@@199) (and ($generated@@58 $generated@@197) ($generated@@33 $generated@@34 $generated@@197 ($generated@@35 $generated@@198) $generated@@199))) ($generated@@33 $generated@@34 ($generated@@69 $generated@@197) ($generated@@35 $generated@@198) $generated@@199))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@69 $generated@@197) ($generated@@35 $generated@@198) $generated@@199))
)))
(assert (= $generated@@32 ($generated@@48 $generated@@34 $generated@@32)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@51 ($generated@@48 $generated@@136 $generated@@200) ($generated@@48 $generated@@34 $generated@@201)) ($generated@@48 $generated@@34 ($generated@@51 $generated@@200 $generated@@201)))
 :pattern ( ($generated@@51 ($generated@@48 $generated@@136 $generated@@200) ($generated@@48 $generated@@34 $generated@@201)))
)))
(assert (forall (($generated@@202 Int) ) (! (= ($generated@@61 $generated@@9 ($generated@@13 ($generated@@46 $generated@@202))) ($generated@@48 $generated@@136 ($generated@@61 $generated@@9 ($generated@@13 $generated@@202))))
 :pattern ( ($generated@@61 $generated@@9 ($generated@@13 ($generated@@46 $generated@@202))))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@T) ) (! (= ($generated@@61 $generated@@204 ($generated@@48 $generated@@204 $generated@@203)) ($generated@@48 $generated@@136 ($generated@@61 $generated@@204 $generated@@203)))
 :pattern ( ($generated@@61 $generated@@204 ($generated@@48 $generated@@204 $generated@@203)))
)))
(assert  (=> (<= 1 $generated@@67) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (or ($generated@@68 $generated@@205 $generated@@207) (and (< 1 $generated@@67) ($generated@@44 $generated@@34 $generated@@207 ($generated@@35 $generated@@205)))) (<= ($generated@@46 0) ($generated@@26 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@26 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@36 $generated@@211) (= ($generated@@33 $generated@@34 ($generated@@51 $generated@@209 $generated@@210) ($generated@@35 $generated@@208) $generated@@211)  (and ($generated@@80 $generated@@209 $generated@@208 $generated@@211) ($generated@@33 $generated@@34 $generated@@210 ($generated@@35 $generated@@208) $generated@@211))))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@51 $generated@@209 $generated@@210) ($generated@@35 $generated@@208) $generated@@211))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@219  (=> (= $generated@@212 ($generated@@48 $generated@@34 ($generated@@51 ($generated@@61 $generated@@76 ($generated@@48 $generated@@76 $generated@@24)) ($generated@@48 $generated@@34 $generated@@32)))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= ($generated@@46 2) ($generated@@26 ($generated@@40 ($generated@@40 $generated@@213)) ($generated@@27 $generated@@110) $generated@@212))) (=> (<= ($generated@@46 2) ($generated@@26 ($generated@@40 ($generated@@40 $generated@@213)) ($generated@@27 $generated@@110) $generated@@212)) (=> (= $generated@@214 ($generated@@48 $generated@@34 ($generated@@51 ($generated@@61 $generated@@76 ($generated@@48 $generated@@76 $generated@@24)) ($generated@@48 $generated@@34 $generated@@32)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@46 2) ($generated@@26 ($generated@@40 ($generated@@40 $generated@@213)) ($generated@@27 $generated@@110) $generated@@214))) (=> (<= ($generated@@46 2) ($generated@@26 ($generated@@40 ($generated@@40 $generated@@213)) ($generated@@27 $generated@@110) $generated@@214)) (=> (and ($generated@@68 ($generated@@40 ($generated@@40 $generated@@213)) ($generated@@48 $generated@@34 ($generated@@51 ($generated@@61 $generated@@76 ($generated@@48 $generated@@76 $generated@@24)) ($generated@@48 $generated@@34 $generated@@32)))) (= (ControlFlow 0 3) (- 0 2))) (<= ($generated@@46 1) ($generated@@46 ($generated@@26 ($generated@@40 ($generated@@40 $generated@@213)) ($generated@@27 ($generated@@27 $generated@@110)) ($generated@@48 $generated@@34 ($generated@@51 ($generated@@61 $generated@@76 ($generated@@48 $generated@@76 $generated@@24)) ($generated@@48 $generated@@34 $generated@@32)))))))))))))))
(let (($generated@@220 true))
(let (($generated@@221  (=> (= $generated@@215 ($generated@@134 $generated@@216 $generated@@217 $generated@@0 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@220) (=> (= (ControlFlow 0 6) 3) $generated@@219)))))
(let (($generated@@222  (=> (and (and ($generated@@36 $generated@@217) ($generated@@218 $generated@@217)) (and (= 3 $generated@@67) (= (ControlFlow 0 7) 6))) $generated@@221)))
$generated@@222)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
