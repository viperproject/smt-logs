(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (Int Int Int Int) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@46 (T@U) Int)
(declare-fun $generated@@51 (Int Int Int Int) T@U)
(declare-fun $generated@@64 (T@U) Int)
(declare-fun $generated@@69 (T@U) Int)
(declare-fun $generated@@74 (Int Int Int Int) T@U)
(declare-fun $generated@@91 (T@U) Int)
(declare-fun $generated@@96 (Int Int Int Int) T@U)
(declare-fun $generated@@113 (T@U) Int)
(declare-fun $generated@@118 (T@U T@U) Bool)
(declare-fun $generated@@121 (T@U) Bool)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@127 (T@U) Bool)
(declare-fun $generated@@130 (T@U) Bool)
(declare-fun $generated@@133 (Int) Int)
(declare-fun $generated@@135 (T@T T@U) T@U)
(declare-fun $generated@@142 (T@T T@U) T@U)
(declare-fun $generated@@143 (T@T T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@163 (T@T T@U T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@203 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@205 () T@T)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@208 () T@T)
(declare-fun $generated@@209 (T@T T@T) T@T)
(declare-fun $generated@@210 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@262 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@27 Int) ($generated@@28 Int) ($generated@@29 Int) ($generated@@30 Int) ) (! (= ($generated@@26 ($generated@@25 $generated@@27 $generated@@28 $generated@@29 $generated@@30)) $generated@@3)
 :pattern ( ($generated@@25 $generated@@27 $generated@@28 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@32 Int) ($generated@@33 Int) ($generated@@34 Int) ($generated@@35 Int) ) (! (= ($generated@@31 ($generated@@25 $generated@@32 $generated@@33 $generated@@34 $generated@@35)) $generated@@32)
 :pattern ( ($generated@@25 $generated@@32 $generated@@33 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 Int) ($generated@@38 Int) ($generated@@39 Int) ($generated@@40 Int) ) (! (= ($generated@@36 ($generated@@25 $generated@@37 $generated@@38 $generated@@39 $generated@@40)) $generated@@38)
 :pattern ( ($generated@@25 $generated@@37 $generated@@38 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 Int) ($generated@@43 Int) ($generated@@44 Int) ($generated@@45 Int) ) (! (= ($generated@@41 ($generated@@25 $generated@@42 $generated@@43 $generated@@44 $generated@@45)) $generated@@44)
 :pattern ( ($generated@@25 $generated@@42 $generated@@43 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 Int) ($generated@@48 Int) ($generated@@49 Int) ($generated@@50 Int) ) (! (= ($generated@@46 ($generated@@25 $generated@@47 $generated@@48 $generated@@49 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@25 $generated@@47 $generated@@48 $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 Int) ($generated@@53 Int) ($generated@@54 Int) ($generated@@55 Int) ) (! (= ($generated@@26 ($generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55)) $generated@@4)
 :pattern ( ($generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@56 Int) ($generated@@57 Int) ($generated@@58 Int) ($generated@@59 Int) ) (! (= ($generated@@36 ($generated@@51 $generated@@56 $generated@@57 $generated@@58 $generated@@59)) $generated@@56)
 :pattern ( ($generated@@51 $generated@@56 $generated@@57 $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@60 Int) ($generated@@61 Int) ($generated@@62 Int) ($generated@@63 Int) ) (! (= ($generated@@41 ($generated@@51 $generated@@60 $generated@@61 $generated@@62 $generated@@63)) $generated@@61)
 :pattern ( ($generated@@51 $generated@@60 $generated@@61 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 Int) ($generated@@66 Int) ($generated@@67 Int) ($generated@@68 Int) ) (! (= ($generated@@64 ($generated@@51 $generated@@65 $generated@@66 $generated@@67 $generated@@68)) $generated@@67)
 :pattern ( ($generated@@51 $generated@@65 $generated@@66 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 Int) ($generated@@71 Int) ($generated@@72 Int) ($generated@@73 Int) ) (! (= ($generated@@69 ($generated@@51 $generated@@70 $generated@@71 $generated@@72 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@51 $generated@@70 $generated@@71 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 Int) ($generated@@76 Int) ($generated@@77 Int) ($generated@@78 Int) ) (! (= ($generated@@26 ($generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78)) $generated@@5)
 :pattern ( ($generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@79 Int) ($generated@@80 Int) ($generated@@81 Int) ($generated@@82 Int) ) (! (= ($generated@@41 ($generated@@74 $generated@@79 $generated@@80 $generated@@81 $generated@@82)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79 $generated@@80 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@83 Int) ($generated@@84 Int) ($generated@@85 Int) ($generated@@86 Int) ) (! (= ($generated@@64 ($generated@@74 $generated@@83 $generated@@84 $generated@@85 $generated@@86)) $generated@@84)
 :pattern ( ($generated@@74 $generated@@83 $generated@@84 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 Int) ($generated@@88 Int) ($generated@@89 Int) ($generated@@90 Int) ) (! (= ($generated@@31 ($generated@@74 $generated@@87 $generated@@88 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@74 $generated@@87 $generated@@88 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 Int) ($generated@@93 Int) ($generated@@94 Int) ($generated@@95 Int) ) (! (= ($generated@@91 ($generated@@74 $generated@@92 $generated@@93 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@74 $generated@@92 $generated@@93 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 Int) ($generated@@98 Int) ($generated@@99 Int) ($generated@@100 Int) ) (! (= ($generated@@26 ($generated@@96 $generated@@97 $generated@@98 $generated@@99 $generated@@100)) $generated@@6)
 :pattern ( ($generated@@96 $generated@@97 $generated@@98 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 Int) ($generated@@102 Int) ($generated@@103 Int) ($generated@@104 Int) ) (! (= ($generated@@64 ($generated@@96 $generated@@101 $generated@@102 $generated@@103 $generated@@104)) $generated@@101)
 :pattern ( ($generated@@96 $generated@@101 $generated@@102 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 Int) ($generated@@106 Int) ($generated@@107 Int) ($generated@@108 Int) ) (! (= ($generated@@31 ($generated@@96 $generated@@105 $generated@@106 $generated@@107 $generated@@108)) $generated@@106)
 :pattern ( ($generated@@96 $generated@@105 $generated@@106 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 Int) ($generated@@110 Int) ($generated@@111 Int) ($generated@@112 Int) ) (! (= ($generated@@36 ($generated@@96 $generated@@109 $generated@@110 $generated@@111 $generated@@112)) $generated@@111)
 :pattern ( ($generated@@96 $generated@@109 $generated@@110 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 Int) ($generated@@115 Int) ($generated@@116 Int) ($generated@@117 Int) ) (! (= ($generated@@113 ($generated@@96 $generated@@114 $generated@@115 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@96 $generated@@114 $generated@@115 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 $generated@@119 $generated@@120) (= $generated@@119 $generated@@120))
 :pattern ( ($generated@@118 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (and ($generated@@121 $generated@@122) ($generated@@121 $generated@@123)) (= ($generated@@118 $generated@@122 $generated@@123)  (and (and (and (= ($generated@@31 $generated@@122) ($generated@@31 $generated@@123)) (= ($generated@@36 $generated@@122) ($generated@@36 $generated@@123))) (= ($generated@@41 $generated@@122) ($generated@@41 $generated@@123))) (= ($generated@@46 $generated@@122) ($generated@@46 $generated@@123)))))
 :pattern ( ($generated@@118 $generated@@122 $generated@@123) ($generated@@121 $generated@@122))
 :pattern ( ($generated@@118 $generated@@122 $generated@@123) ($generated@@121 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@124 $generated@@125) ($generated@@124 $generated@@126)) (= ($generated@@118 $generated@@125 $generated@@126)  (and (and (and (= ($generated@@36 $generated@@125) ($generated@@36 $generated@@126)) (= ($generated@@41 $generated@@125) ($generated@@41 $generated@@126))) (= ($generated@@64 $generated@@125) ($generated@@64 $generated@@126))) (= ($generated@@69 $generated@@125) ($generated@@69 $generated@@126)))))
 :pattern ( ($generated@@118 $generated@@125 $generated@@126) ($generated@@124 $generated@@125))
 :pattern ( ($generated@@118 $generated@@125 $generated@@126) ($generated@@124 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and ($generated@@127 $generated@@128) ($generated@@127 $generated@@129)) (= ($generated@@118 $generated@@128 $generated@@129)  (and (and (and (= ($generated@@41 $generated@@128) ($generated@@41 $generated@@129)) (= ($generated@@64 $generated@@128) ($generated@@64 $generated@@129))) (= ($generated@@31 $generated@@128) ($generated@@31 $generated@@129))) (= ($generated@@91 $generated@@128) ($generated@@91 $generated@@129)))))
 :pattern ( ($generated@@118 $generated@@128 $generated@@129) ($generated@@127 $generated@@128))
 :pattern ( ($generated@@118 $generated@@128 $generated@@129) ($generated@@127 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@130 $generated@@131) ($generated@@130 $generated@@132)) (= ($generated@@118 $generated@@131 $generated@@132)  (and (and (and (= ($generated@@64 $generated@@131) ($generated@@64 $generated@@132)) (= ($generated@@31 $generated@@131) ($generated@@31 $generated@@132))) (= ($generated@@36 $generated@@131) ($generated@@36 $generated@@132))) (= ($generated@@113 $generated@@131) ($generated@@113 $generated@@132)))))
 :pattern ( ($generated@@118 $generated@@131 $generated@@132) ($generated@@130 $generated@@131))
 :pattern ( ($generated@@118 $generated@@131 $generated@@132) ($generated@@130 $generated@@132))
)))
(assert (forall (($generated@@134 Int) ) (! (= ($generated@@133 $generated@@134) $generated@@134)
 :pattern ( ($generated@@133 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@135 $generated@@137 $generated@@136) $generated@@136)
 :pattern ( ($generated@@135 $generated@@137 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@121 $generated@@138) (= ($generated@@26 $generated@@138) $generated@@3))
 :pattern ( ($generated@@121 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@124 $generated@@139) (= ($generated@@26 $generated@@139) $generated@@4))
 :pattern ( ($generated@@124 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@127 $generated@@140) (= ($generated@@26 $generated@@140) $generated@@5))
 :pattern ( ($generated@@127 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@130 $generated@@141) (= ($generated@@26 $generated@@141) $generated@@6))
 :pattern ( ($generated@@130 $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@143 $generated@@145 ($generated@@142 $generated@@145 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@142 $generated@@145 $generated@@144))
)))
(assert (= ($generated@@8 $generated@@146) 3))
(assert (forall (($generated@@147 Int) ($generated@@148 Int) ($generated@@149 Int) ($generated@@150 Int) ) (! (= ($generated@@25 ($generated@@133 $generated@@147) ($generated@@133 $generated@@148) ($generated@@133 $generated@@149) ($generated@@133 $generated@@150)) ($generated@@135 $generated@@146 ($generated@@25 $generated@@147 $generated@@148 $generated@@149 $generated@@150)))
 :pattern ( ($generated@@25 ($generated@@133 $generated@@147) ($generated@@133 $generated@@148) ($generated@@133 $generated@@149) ($generated@@133 $generated@@150)))
)))
(assert (forall (($generated@@151 Int) ($generated@@152 Int) ($generated@@153 Int) ($generated@@154 Int) ) (! (= ($generated@@51 ($generated@@133 $generated@@151) ($generated@@133 $generated@@152) ($generated@@133 $generated@@153) ($generated@@133 $generated@@154)) ($generated@@135 $generated@@146 ($generated@@51 $generated@@151 $generated@@152 $generated@@153 $generated@@154)))
 :pattern ( ($generated@@51 ($generated@@133 $generated@@151) ($generated@@133 $generated@@152) ($generated@@133 $generated@@153) ($generated@@133 $generated@@154)))
)))
(assert (forall (($generated@@155 Int) ($generated@@156 Int) ($generated@@157 Int) ($generated@@158 Int) ) (! (= ($generated@@74 ($generated@@133 $generated@@155) ($generated@@133 $generated@@156) ($generated@@133 $generated@@157) ($generated@@133 $generated@@158)) ($generated@@135 $generated@@146 ($generated@@74 $generated@@155 $generated@@156 $generated@@157 $generated@@158)))
 :pattern ( ($generated@@74 ($generated@@133 $generated@@155) ($generated@@133 $generated@@156) ($generated@@133 $generated@@157) ($generated@@133 $generated@@158)))
)))
(assert (forall (($generated@@159 Int) ($generated@@160 Int) ($generated@@161 Int) ($generated@@162 Int) ) (! (= ($generated@@96 ($generated@@133 $generated@@159) ($generated@@133 $generated@@160) ($generated@@133 $generated@@161) ($generated@@133 $generated@@162)) ($generated@@135 $generated@@146 ($generated@@96 $generated@@159 $generated@@160 $generated@@161 $generated@@162)))
 :pattern ( ($generated@@96 ($generated@@133 $generated@@159) ($generated@@133 $generated@@160) ($generated@@133 $generated@@161) ($generated@@133 $generated@@162)))
)))
(assert (forall (($generated@@165 Int) ($generated@@166 Int) ($generated@@167 Int) ($generated@@168 Int) ) (! (= ($generated@@163 $generated@@146 ($generated@@25 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@164)  (and (and (and ($generated@@163 $generated@@10 ($generated@@14 $generated@@165) $generated) ($generated@@163 $generated@@10 ($generated@@14 $generated@@166) $generated)) ($generated@@163 $generated@@10 ($generated@@14 $generated@@167) $generated)) ($generated@@163 $generated@@10 ($generated@@14 $generated@@168) $generated)))
 :pattern ( ($generated@@163 $generated@@146 ($generated@@25 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@164))
)))
(assert (forall (($generated@@169 Int) ($generated@@170 Int) ($generated@@171 Int) ($generated@@172 Int) ) (! (= ($generated@@163 $generated@@146 ($generated@@51 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@164)  (and (and (and ($generated@@163 $generated@@10 ($generated@@14 $generated@@169) $generated) ($generated@@163 $generated@@10 ($generated@@14 $generated@@170) $generated)) ($generated@@163 $generated@@10 ($generated@@14 $generated@@171) $generated)) ($generated@@163 $generated@@10 ($generated@@14 $generated@@172) $generated)))
 :pattern ( ($generated@@163 $generated@@146 ($generated@@51 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@164))
)))
(assert (forall (($generated@@173 Int) ($generated@@174 Int) ($generated@@175 Int) ($generated@@176 Int) ) (! (= ($generated@@163 $generated@@146 ($generated@@74 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@164)  (and (and (and ($generated@@163 $generated@@10 ($generated@@14 $generated@@173) $generated) ($generated@@163 $generated@@10 ($generated@@14 $generated@@174) $generated)) ($generated@@163 $generated@@10 ($generated@@14 $generated@@175) $generated)) ($generated@@163 $generated@@10 ($generated@@14 $generated@@176) $generated)))
 :pattern ( ($generated@@163 $generated@@146 ($generated@@74 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@164))
)))
(assert (forall (($generated@@177 Int) ($generated@@178 Int) ($generated@@179 Int) ($generated@@180 Int) ) (! (= ($generated@@163 $generated@@146 ($generated@@96 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@164)  (and (and (and ($generated@@163 $generated@@10 ($generated@@14 $generated@@177) $generated) ($generated@@163 $generated@@10 ($generated@@14 $generated@@178) $generated)) ($generated@@163 $generated@@10 ($generated@@14 $generated@@179) $generated)) ($generated@@163 $generated@@10 ($generated@@14 $generated@@180) $generated)))
 :pattern ( ($generated@@163 $generated@@146 ($generated@@96 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@164))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> ($generated@@121 $generated@@181) (exists (($generated@@182 Int) ($generated@@183 Int) ($generated@@184 Int) ($generated@@185 Int) ) (= $generated@@181 ($generated@@25 $generated@@182 $generated@@183 $generated@@184 $generated@@185))))
 :pattern ( ($generated@@121 $generated@@181))
)))
(assert (forall (($generated@@186 T@U) ) (!  (=> ($generated@@124 $generated@@186) (exists (($generated@@187 Int) ($generated@@188 Int) ($generated@@189 Int) ($generated@@190 Int) ) (= $generated@@186 ($generated@@51 $generated@@187 $generated@@188 $generated@@189 $generated@@190))))
 :pattern ( ($generated@@124 $generated@@186))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> ($generated@@127 $generated@@191) (exists (($generated@@192 Int) ($generated@@193 Int) ($generated@@194 Int) ($generated@@195 Int) ) (= $generated@@191 ($generated@@74 $generated@@192 $generated@@193 $generated@@194 $generated@@195))))
 :pattern ( ($generated@@127 $generated@@191))
)))
(assert (forall (($generated@@196 T@U) ) (!  (=> ($generated@@130 $generated@@196) (exists (($generated@@197 Int) ($generated@@198 Int) ($generated@@199 Int) ($generated@@200 Int) ) (= $generated@@196 ($generated@@96 $generated@@197 $generated@@198 $generated@@199 $generated@@200))))
 :pattern ( ($generated@@130 $generated@@196))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@T) ) (! (= ($generated@@142 $generated@@202 ($generated@@143 $generated@@202 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@143 $generated@@202 $generated@@201))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@214 T@T) ($generated@@215 T@T) ($generated@@216 T@T) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (= ($generated@@203 $generated@@214 $generated@@215 $generated@@216 ($generated@@210 $generated@@214 $generated@@215 $generated@@216 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@219 $generated@@220) $generated@@217)
 :weight 0
)) (and (forall (($generated@@221 T@T) ($generated@@222 T@T) ($generated@@223 T@T) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@226 $generated@@228) (= ($generated@@203 $generated@@221 $generated@@222 $generated@@223 ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@203 $generated@@221 $generated@@222 $generated@@223 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
)) (forall (($generated@@230 T@T) ($generated@@231 T@T) ($generated@@232 T@T) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@236 $generated@@238) (= ($generated@@203 $generated@@230 $generated@@231 $generated@@232 ($generated@@210 $generated@@230 $generated@@231 $generated@@232 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@203 $generated@@230 $generated@@231 $generated@@232 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (= ($generated@@8 $generated@@204) 4)) (= ($generated@@8 $generated@@205) 5)) (forall (($generated@@239 T@T) ($generated@@240 T@T) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (= ($generated@@207 $generated@@239 $generated@@240 ($generated@@211 $generated@@239 $generated@@240 $generated@@242 $generated@@243 $generated@@241) $generated@@243) $generated@@241)
 :weight 0
))) (forall (($generated@@244 T@T) ($generated@@245 T@T) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or (= $generated@@248 $generated@@249) (= ($generated@@207 $generated@@244 $generated@@245 ($generated@@211 $generated@@244 $generated@@245 $generated@@247 $generated@@248 $generated@@246) $generated@@249) ($generated@@207 $generated@@244 $generated@@245 $generated@@247 $generated@@249)))
 :weight 0
))) (= ($generated@@8 $generated@@208) 6)) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (= ($generated@@8 ($generated@@209 $generated@@250 $generated@@251)) 7))) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= ($generated@@212 ($generated@@209 $generated@@252 $generated@@253)) $generated@@252)
 :pattern ( ($generated@@209 $generated@@252 $generated@@253))
))) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@213 ($generated@@209 $generated@@254 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@209 $generated@@254 $generated@@255))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 Bool) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (= ($generated@@13 ($generated@@203 $generated@@204 $generated@@205 $generated@@9 ($generated@@206 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@260 $generated@@261))  (=> (and (or (not (= $generated@@260 $generated@@256)) (not true)) ($generated@@13 ($generated@@142 $generated@@9 ($generated@@207 $generated@@205 $generated@@208 ($generated@@207 $generated@@204 ($generated@@209 $generated@@205 $generated@@208) $generated@@257 $generated@@260) $generated@@258)))) $generated@@259))
 :pattern ( ($generated@@203 $generated@@204 $generated@@205 $generated@@9 ($generated@@206 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and ($generated@@263 $generated@@265) (and ($generated@@121 $generated@@264) ($generated@@262 $generated@@146 $generated@@264 $generated@@164 $generated@@265))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@31 $generated@@264)) $generated $generated@@265))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@31 $generated@@264)) $generated $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and ($generated@@263 $generated@@267) (and ($generated@@121 $generated@@266) ($generated@@262 $generated@@146 $generated@@266 $generated@@164 $generated@@267))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@36 $generated@@266)) $generated $generated@@267))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@36 $generated@@266)) $generated $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and ($generated@@263 $generated@@269) (and ($generated@@121 $generated@@268) ($generated@@262 $generated@@146 $generated@@268 $generated@@164 $generated@@269))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@41 $generated@@268)) $generated $generated@@269))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@41 $generated@@268)) $generated $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and ($generated@@263 $generated@@271) (and ($generated@@121 $generated@@270) ($generated@@262 $generated@@146 $generated@@270 $generated@@164 $generated@@271))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@46 $generated@@270)) $generated $generated@@271))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@46 $generated@@270)) $generated $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and ($generated@@263 $generated@@273) (and ($generated@@124 $generated@@272) ($generated@@262 $generated@@146 $generated@@272 $generated@@164 $generated@@273))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@36 $generated@@272)) $generated $generated@@273))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@36 $generated@@272)) $generated $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and ($generated@@263 $generated@@275) (and ($generated@@124 $generated@@274) ($generated@@262 $generated@@146 $generated@@274 $generated@@164 $generated@@275))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@41 $generated@@274)) $generated $generated@@275))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@41 $generated@@274)) $generated $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and ($generated@@263 $generated@@277) (and ($generated@@124 $generated@@276) ($generated@@262 $generated@@146 $generated@@276 $generated@@164 $generated@@277))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@64 $generated@@276)) $generated $generated@@277))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@64 $generated@@276)) $generated $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and ($generated@@263 $generated@@279) (and ($generated@@124 $generated@@278) ($generated@@262 $generated@@146 $generated@@278 $generated@@164 $generated@@279))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@69 $generated@@278)) $generated $generated@@279))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@69 $generated@@278)) $generated $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and ($generated@@263 $generated@@281) (and ($generated@@127 $generated@@280) ($generated@@262 $generated@@146 $generated@@280 $generated@@164 $generated@@281))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@41 $generated@@280)) $generated $generated@@281))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@41 $generated@@280)) $generated $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and ($generated@@263 $generated@@283) (and ($generated@@127 $generated@@282) ($generated@@262 $generated@@146 $generated@@282 $generated@@164 $generated@@283))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@64 $generated@@282)) $generated $generated@@283))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@64 $generated@@282)) $generated $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and ($generated@@263 $generated@@285) (and ($generated@@127 $generated@@284) ($generated@@262 $generated@@146 $generated@@284 $generated@@164 $generated@@285))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@31 $generated@@284)) $generated $generated@@285))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@31 $generated@@284)) $generated $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and ($generated@@263 $generated@@287) (and ($generated@@127 $generated@@286) ($generated@@262 $generated@@146 $generated@@286 $generated@@164 $generated@@287))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@91 $generated@@286)) $generated $generated@@287))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@91 $generated@@286)) $generated $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and ($generated@@263 $generated@@289) (and ($generated@@130 $generated@@288) ($generated@@262 $generated@@146 $generated@@288 $generated@@164 $generated@@289))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@64 $generated@@288)) $generated $generated@@289))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@64 $generated@@288)) $generated $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and ($generated@@263 $generated@@291) (and ($generated@@130 $generated@@290) ($generated@@262 $generated@@146 $generated@@290 $generated@@164 $generated@@291))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@31 $generated@@290)) $generated $generated@@291))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@31 $generated@@290)) $generated $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and ($generated@@263 $generated@@293) (and ($generated@@130 $generated@@292) ($generated@@262 $generated@@146 $generated@@292 $generated@@164 $generated@@293))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@36 $generated@@292)) $generated $generated@@293))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@36 $generated@@292)) $generated $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and ($generated@@263 $generated@@295) (and ($generated@@130 $generated@@294) ($generated@@262 $generated@@146 $generated@@294 $generated@@164 $generated@@295))) ($generated@@262 $generated@@10 ($generated@@14 ($generated@@113 $generated@@294)) $generated $generated@@295))
 :pattern ( ($generated@@262 $generated@@10 ($generated@@14 ($generated@@113 $generated@@294)) $generated $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and ($generated@@263 $generated@@297) ($generated@@163 $generated@@146 $generated@@296 $generated@@164)) ($generated@@262 $generated@@146 $generated@@296 $generated@@164 $generated@@297))
 :pattern ( ($generated@@262 $generated@@146 $generated@@296 $generated@@164 $generated@@297))
)))
(assert (= ($generated@@24 $generated@@164) $generated@@2))
(assert (= ($generated@@298 $generated@@164) $generated@@7))
(assert (forall (($generated@@300 T@U) ) (!  (=> ($generated@@299 $generated@@300) (or (or (or ($generated@@121 $generated@@300) ($generated@@124 $generated@@300)) ($generated@@127 $generated@@300)) ($generated@@130 $generated@@300)))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 Int) ) (! (= ($generated@@143 $generated@@10 ($generated@@14 ($generated@@133 $generated@@301))) ($generated@@135 $generated@@208 ($generated@@143 $generated@@10 ($generated@@14 $generated@@301))))
 :pattern ( ($generated@@143 $generated@@10 ($generated@@14 ($generated@@133 $generated@@301))))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (= ($generated@@143 $generated@@303 ($generated@@135 $generated@@303 $generated@@302)) ($generated@@135 $generated@@208 ($generated@@143 $generated@@303 $generated@@302)))
 :pattern ( ($generated@@143 $generated@@303 ($generated@@135 $generated@@303 $generated@@302)))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> ($generated@@163 $generated@@146 $generated@@304 $generated@@164) (or (or (or ($generated@@121 $generated@@304) ($generated@@124 $generated@@304)) ($generated@@127 $generated@@304)) ($generated@@130 $generated@@304)))
 :pattern ( ($generated@@130 $generated@@304) ($generated@@163 $generated@@146 $generated@@304 $generated@@164))
 :pattern ( ($generated@@127 $generated@@304) ($generated@@163 $generated@@146 $generated@@304 $generated@@164))
 :pattern ( ($generated@@124 $generated@@304) ($generated@@163 $generated@@146 $generated@@304 $generated@@164))
 :pattern ( ($generated@@121 $generated@@304) ($generated@@163 $generated@@146 $generated@@304 $generated@@164))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! ($generated@@262 $generated@@10 $generated@@306 $generated $generated@@305)
 :pattern ( ($generated@@262 $generated@@10 $generated@@306 $generated $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! ($generated@@163 $generated@@10 $generated@@307 $generated)
 :pattern ( ($generated@@163 $generated@@10 $generated@@307 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@308 () T@U)
(declare-fun $generated@@309 () T@U)
(declare-fun $generated@@310 () T@U)
(declare-fun $generated@@311 () T@U)
(declare-fun $generated@@312 () T@U)
(declare-fun $generated@@313 () T@U)
(declare-fun $generated@@314 () Int)
(declare-fun $generated@@315 () Int)
(declare-fun $generated@@316 () Int)
(declare-fun $generated@@317 () Int)
(declare-fun $generated@@318 () T@U)
(declare-fun $generated@@319 (T@U) Bool)
(declare-fun $generated@@320 () T@U)
(declare-fun $generated@@321 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@322  (=> (= $generated@@308 ($generated@@206 $generated@@309 $generated@@310 $generated@@1 false)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@130 $generated@@311)) (=> ($generated@@130 $generated@@311) (=> (= $generated@@312 $generated@@311) (=> (and (and (and ($generated@@163 $generated@@146 $generated@@312 $generated@@164) (= $generated@@313 $generated@@312)) (and (= $generated@@314 ($generated@@133 200)) ($generated@@163 $generated@@10 ($generated@@14 $generated@@314) $generated))) (and (and (= $generated@@315 $generated@@314) (= $generated@@316 ($generated@@133 100))) (and ($generated@@163 $generated@@10 ($generated@@14 $generated@@316) $generated) (= $generated@@317 $generated@@316)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (or ($generated@@124 $generated@@313) ($generated@@127 $generated@@313)) ($generated@@130 $generated@@313))) (=> (or (or ($generated@@124 $generated@@313) ($generated@@127 $generated@@313)) ($generated@@130 $generated@@313)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (or ($generated@@121 $generated@@313) ($generated@@124 $generated@@313)) ($generated@@130 $generated@@313))) (=> (or (or ($generated@@121 $generated@@313) ($generated@@124 $generated@@313)) ($generated@@130 $generated@@313)) (=> (= $generated@@318 (let (($generated@@323 $generated@@311))
(let (($generated@@324 ($generated@@133 200)))
(let (($generated@@325 ($generated@@133 100)))
($generated@@96 ($generated@@64 $generated@@323) $generated@@325 ($generated@@36 $generated@@323) $generated@@324))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (or ($generated@@124 $generated@@311) ($generated@@127 $generated@@311)) ($generated@@130 $generated@@311))) (=> (or (or ($generated@@124 $generated@@311) ($generated@@127 $generated@@311)) ($generated@@130 $generated@@311)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or ($generated@@121 $generated@@311) ($generated@@124 $generated@@311)) ($generated@@130 $generated@@311))) (=> (or (or ($generated@@121 $generated@@311) ($generated@@124 $generated@@311)) ($generated@@130 $generated@@311)) (=> (and ($generated@@299 $generated@@318) (= (ControlFlow 0 2) (- 0 1))) ($generated@@118 $generated@@318 ($generated@@96 ($generated@@64 $generated@@311) ($generated@@133 100) ($generated@@36 $generated@@311) ($generated@@133 200))))))))))))))))))))
(let (($generated@@326  (=> (and ($generated@@263 $generated@@310) ($generated@@319 $generated@@310)) (=> (and (and ($generated@@163 $generated@@146 $generated@@311 $generated@@164) ($generated@@262 $generated@@146 $generated@@311 $generated@@164 $generated@@310)) ($generated@@299 $generated@@311)) (=> (and (and (and (and ($generated@@163 $generated@@146 $generated@@320 $generated@@164) ($generated@@262 $generated@@146 $generated@@320 $generated@@164 $generated@@310)) true) (= 1 $generated@@321)) (and (and (not ($generated@@121 $generated@@311)) (not ($generated@@127 $generated@@311))) (and (not ($generated@@124 $generated@@311)) (= (ControlFlow 0 8) 2)))) $generated@@322)))))
$generated@@326)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
