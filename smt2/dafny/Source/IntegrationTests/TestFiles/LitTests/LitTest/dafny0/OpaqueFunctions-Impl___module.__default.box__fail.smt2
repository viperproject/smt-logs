(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U Bool T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@59 (T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (T@U) Int)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@96 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ) (!  (=> ($generated@@22 $generated@@24) ($generated@@23 $generated@@24))
 :pattern ( ($generated@@22 $generated@@24))
)))
(assert (= ($generated@@5 $generated@@26) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@29 ($generated@@27 $generated@@28)) ($generated@@23 $generated@@29))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@25 $generated@@26 $generated@@29 ($generated@@27 $generated@@28)))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (or ($generated@@32 $generated@@34 $generated@@35) (and (< 0 $generated@@30) ($generated@@33 $generated@@35 $generated@@34))) (= ($generated@@31 $generated@@34 true $generated@@35) $generated@@35))
 :pattern ( ($generated@@31 $generated@@34 true $generated@@35))
))))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@38) (= $generated@@37 $generated@@38))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 Int) ) (! (= ($generated@@39 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ) (! (= ($generated@@23 $generated@@45) (= ($generated@@44 $generated@@45) $generated@@3))
 :pattern ( ($generated@@23 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 ($generated@@46 $generated@@49 $generated@@48)) $generated@@48)
 :pattern ( ($generated@@46 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ) (!  (=> ($generated@@23 $generated@@51) (exists (($generated@@52 T@U) ) (= $generated@@51 ($generated@@50 $generated@@52))))
 :pattern ( ($generated@@23 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@36 $generated@@54 $generated@@55) (= ($generated@@53 $generated@@54) ($generated@@53 $generated@@55)))
 :pattern ( ($generated@@36 $generated@@54 $generated@@55))
)))
(assert (= ($generated@@5 $generated@@56) 4))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (or ($generated@@32 $generated@@57 ($generated@@41 $generated@@56 $generated@@58)) (and (< 0 $generated@@30) ($generated@@33 $generated@@58 $generated@@57))) (= ($generated@@31 $generated@@57 true ($generated@@41 $generated@@56 $generated@@58)) ($generated@@41 $generated@@56 $generated@@58)))
 :weight 3
 :pattern ( ($generated@@31 $generated@@57 true ($generated@@41 $generated@@56 $generated@@58)))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@59 ($generated@@47 $generated@@64 $generated@@61) $generated@@62 $generated@@63) ($generated@@60 $generated@@64 $generated@@61 $generated@@62 $generated@@63))
 :pattern ( ($generated@@59 ($generated@@47 $generated@@64 $generated@@61) $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ) (!  (and (= ($generated@@21 ($generated@@27 $generated@@66)) $generated@@2) (= ($generated@@65 ($generated@@27 $generated@@66)) $generated@@4))
 :pattern ( ($generated@@27 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@67 $generated@@70) (= ($generated@@60 $generated@@26 ($generated@@50 $generated@@69) ($generated@@27 $generated@@68) $generated@@70) ($generated@@59 $generated@@69 $generated@@68 $generated@@70)))
 :pattern ( ($generated@@60 $generated@@26 ($generated@@50 $generated@@69) ($generated@@27 $generated@@68) $generated@@70))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@71 T@U) ($generated@@72 Bool) ($generated@@73 T@U) ) (!  (=> (or ($generated@@32 $generated@@71 $generated@@73) (and (< 0 $generated@@30) ($generated@@33 $generated@@73 $generated@@71))) ($generated@@33 ($generated@@31 $generated@@71 $generated@@72 $generated@@73) $generated@@71))
 :pattern ( ($generated@@31 $generated@@71 $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@33 $generated@@74 $generated) (and (= ($generated@@47 $generated@@7 ($generated@@46 $generated@@7 $generated@@74)) $generated@@74) ($generated@@25 $generated@@7 ($generated@@46 $generated@@7 $generated@@74) $generated)))
 :pattern ( ($generated@@33 $generated@@74 $generated))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@33 ($generated@@47 $generated@@77 $generated@@75) $generated@@76) ($generated@@25 $generated@@77 $generated@@75 $generated@@76))
 :pattern ( ($generated@@33 ($generated@@47 $generated@@77 $generated@@75) $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@78 ($generated@@27 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@27 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@44 ($generated@@50 $generated@@80)) $generated@@3)
 :pattern ( ($generated@@50 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@53 ($generated@@50 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@50 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@46 $generated@@83 ($generated@@47 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@47 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@50 $generated@@85) ($generated@@27 $generated@@84)) ($generated@@33 $generated@@85 $generated@@84))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@50 $generated@@85) ($generated@@27 $generated@@84)))
)))
(assert (forall (($generated@@88 T@U) ) (! (< ($generated@@86 $generated@@88) ($generated@@87 ($generated@@50 $generated@@88)))
 :pattern ( ($generated@@50 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and ($generated@@67 $generated@@91) (and ($generated@@23 $generated@@89) ($generated@@60 $generated@@26 $generated@@89 ($generated@@27 $generated@@90) $generated@@91))) ($generated@@59 ($generated@@53 $generated@@89) $generated@@90 $generated@@91))
 :pattern ( ($generated@@59 ($generated@@53 $generated@@89) $generated@@90 $generated@@91))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@92 $generated@@102 $generated@@103 $generated@@104 ($generated@@98 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@107 $generated@@108) $generated@@105)
 :weight 0
)) (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@92 $generated@@109 $generated@@110 $generated@@111 ($generated@@98 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@92 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@92 $generated@@118 $generated@@119 $generated@@120 ($generated@@98 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@92 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)))) (= ($generated@@5 $generated@@93) 5)) (= ($generated@@5 $generated@@94) 6)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@96 $generated@@127 $generated@@128 ($generated@@99 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@129) $generated@@131) $generated@@129)
 :weight 0
))) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 $generated@@132 $generated@@133 ($generated@@99 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@132 $generated@@133 $generated@@135 $generated@@137)))
 :weight 0
))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (= ($generated@@5 ($generated@@97 $generated@@138 $generated@@139)) 7))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@97 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@97 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 Bool) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@10 ($generated@@92 $generated@@93 $generated@@94 $generated@@6 ($generated@@95 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))  (=> (and (or (not (= $generated@@148 $generated@@144)) (not true)) ($generated@@10 ($generated@@46 $generated@@6 ($generated@@96 $generated@@94 $generated@@56 ($generated@@96 $generated@@93 ($generated@@97 $generated@@94 $generated@@56) $generated@@145 $generated@@148) $generated@@146)))) $generated@@147))
 :pattern ( ($generated@@92 $generated@@93 $generated@@94 $generated@@6 ($generated@@95 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 Bool) ($generated@@153 T@U) ) (!  (=> (and (or ($generated@@32 $generated@@151 $generated@@153) (and (< 0 $generated@@30) (and ($generated@@33 $generated@@153 $generated@@151) ($generated@@59 $generated@@153 $generated@@151 $generated@@150)))) ($generated@@67 $generated@@150)) ($generated@@59 ($generated@@31 $generated@@151 $generated@@152 $generated@@153) $generated@@151 $generated@@150))
 :pattern ( ($generated@@59 ($generated@@31 $generated@@151 $generated@@152 $generated@@153) $generated@@151 $generated@@150))
))))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@86 ($generated@@47 $generated@@26 $generated@@154)) ($generated@@87 $generated@@154))
 :pattern ( ($generated@@86 ($generated@@47 $generated@@26 $generated@@154)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@33 $generated@@156 ($generated@@27 $generated@@155)) (and (= ($generated@@47 $generated@@26 ($generated@@46 $generated@@26 $generated@@156)) $generated@@156) ($generated@@25 $generated@@26 ($generated@@46 $generated@@26 $generated@@156) ($generated@@27 $generated@@155))))
 :pattern ( ($generated@@33 $generated@@156 ($generated@@27 $generated@@155)))
)))
(assert (forall (($generated@@157 Int) ) (! (= ($generated@@47 $generated@@7 ($generated@@11 ($generated@@39 $generated@@157))) ($generated@@41 $generated@@56 ($generated@@47 $generated@@7 ($generated@@11 $generated@@157))))
 :pattern ( ($generated@@47 $generated@@7 ($generated@@11 ($generated@@39 $generated@@157))))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@50 ($generated@@41 $generated@@56 $generated@@158)) ($generated@@41 $generated@@26 ($generated@@50 $generated@@158)))
 :pattern ( ($generated@@50 ($generated@@41 $generated@@56 $generated@@158)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@47 $generated@@160 ($generated@@41 $generated@@160 $generated@@159)) ($generated@@41 $generated@@56 ($generated@@47 $generated@@160 $generated@@159)))
 :pattern ( ($generated@@47 $generated@@160 ($generated@@41 $generated@@160 $generated@@159)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! ($generated@@60 $generated@@7 $generated@@162 $generated $generated@@161)
 :pattern ( ($generated@@60 $generated@@7 $generated@@162 $generated $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! ($generated@@25 $generated@@7 $generated@@163 $generated)
 :pattern ( ($generated@@25 $generated@@7 $generated@@163 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () Bool)
(declare-fun $generated@@169 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@170  (=> (= $generated@@164 ($generated@@95 $generated@@165 $generated@@166 $generated@@1 false)) (=> (and (and (and (= $generated@@167 ($generated@@41 $generated@@26 ($generated@@50 ($generated@@47 $generated@@7 ($generated@@11 ($generated@@39 1)))))) ($generated@@60 $generated@@26 $generated@@167 ($generated@@27 $generated) $generated@@166)) (and ($generated@@32 ($generated@@27 $generated) ($generated@@47 $generated@@26 ($generated@@41 $generated@@26 ($generated@@50 ($generated@@47 $generated@@7 ($generated@@11 ($generated@@39 1))))))) ($generated@@23 ($generated@@46 $generated@@26 ($generated@@31 ($generated@@27 $generated) $generated@@168 ($generated@@47 $generated@@26 ($generated@@41 $generated@@26 ($generated@@50 ($generated@@47 $generated@@7 ($generated@@11 ($generated@@39 1))))))))))) (and (and ($generated@@22 ($generated@@46 $generated@@26 ($generated@@31 ($generated@@27 $generated) $generated@@168 ($generated@@47 $generated@@26 ($generated@@41 $generated@@26 ($generated@@50 ($generated@@47 $generated@@7 ($generated@@11 ($generated@@39 1))))))))) ($generated@@32 ($generated@@27 $generated) ($generated@@47 $generated@@26 ($generated@@41 $generated@@26 ($generated@@50 ($generated@@47 $generated@@7 ($generated@@11 ($generated@@39 1)))))))) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@36 ($generated@@46 $generated@@26 ($generated@@31 ($generated@@27 $generated) $generated@@168 ($generated@@47 $generated@@26 ($generated@@41 $generated@@26 ($generated@@50 ($generated@@47 $generated@@7 ($generated@@11 ($generated@@39 1)))))))) ($generated@@50 ($generated@@47 $generated@@7 ($generated@@11 ($generated@@39 1)))))))))
(let (($generated@@171  (=> (and (and ($generated@@67 $generated@@166) ($generated@@169 $generated@@166)) (and (= 1 $generated@@30) (= (ControlFlow 0 3) 2))) $generated@@170)))
$generated@@171)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
