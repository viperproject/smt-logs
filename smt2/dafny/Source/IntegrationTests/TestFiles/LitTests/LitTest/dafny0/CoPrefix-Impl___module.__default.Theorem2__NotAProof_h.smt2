(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (Int) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U T@U T@U) Bool)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (Int) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@62 (Int T@U) T@U)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@97 (T@U Int) T@U)
(declare-fun $generated@@100 (Int) Bool)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@109 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@110 (T@T T@T) T@T)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@114 (T@T) T@T)
(declare-fun $generated@@164 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ($generated@@25 T@U) ) (!  (=> (and ($generated@@22 $generated@@23 $generated@@24) ($generated@@22 $generated@@24 $generated@@25)) ($generated@@22 $generated@@23 $generated@@25))
 :pattern ( ($generated@@22 $generated@@23 $generated@@24) ($generated@@22 $generated@@24 $generated@@25))
 :pattern ( ($generated@@22 $generated@@23 $generated@@24) ($generated@@22 $generated@@23 $generated@@25))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 Int) ($generated@@31 Int) ) (!  (=> (and (and (<= 0 $generated@@30) (<= 0 $generated@@31)) (<= (+ $generated@@30 $generated@@31) ($generated@@28 $generated@@29))) (= ($generated@@26 ($generated@@26 $generated@@29 ($generated@@27 $generated@@30)) ($generated@@27 $generated@@31)) ($generated@@26 $generated@@29 ($generated@@27 (+ $generated@@30 $generated@@31)))))
 :pattern ( ($generated@@26 ($generated@@26 $generated@@29 ($generated@@27 $generated@@30)) ($generated@@27 $generated@@31)))
)))
(assert (= ($generated@@5 $generated@@34) 3))
(assert (forall (($generated@@36 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@36 $generated@@35) ($generated@@32 $generated@@36))
 :pattern ( ($generated@@32 $generated@@36) ($generated@@33 $generated@@34 $generated@@36 $generated@@35))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> (or ($generated@@40 $generated@@45 $generated@@46) (and (< 2 $generated@@37) ($generated@@33 $generated@@34 $generated@@46 $generated@@35))) (and (and (=> (< 0 ($generated@@28 $generated@@45)) (and ($generated@@32 $generated@@46) (=> (> ($generated@@41 $generated@@46) 0) (and ($generated@@32 $generated@@46) ($generated@@40 ($generated@@26 $generated@@45 ($generated@@27 1)) ($generated@@42 $generated@@46)))))) (=> (=> (< 0 ($generated@@28 $generated@@45)) (and (> ($generated@@41 $generated@@46) 0) ($generated@@38 $generated@@44 ($generated@@26 $generated@@45 ($generated@@27 1)) ($generated@@42 $generated@@46)))) (=> (= ($generated@@43 0) ($generated@@28 $generated@@45)) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@22 $generated@@47 $generated@@45) ($generated@@40 $generated@@47 $generated@@46))
 :pattern ( ($generated@@38 $generated@@44 $generated@@47 $generated@@46))
))))) (= ($generated@@38 ($generated@@39 $generated@@44) $generated@@45 $generated@@46)  (and (=> (< 0 ($generated@@28 $generated@@45)) (and (> ($generated@@41 $generated@@46) 0) ($generated@@38 $generated@@44 ($generated@@26 $generated@@45 ($generated@@27 1)) ($generated@@42 $generated@@46)))) (=> (= ($generated@@43 0) ($generated@@28 $generated@@45)) (forall (($generated@@48 T@U) ) (!  (=> ($generated@@22 $generated@@48 $generated@@45) ($generated@@38 $generated@@44 $generated@@48 $generated@@46))
 :pattern ( ($generated@@38 $generated@@44 $generated@@48 $generated@@46))
)))))))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@44) $generated@@45 $generated@@46))
))))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@43 $generated@@49) $generated@@49)
 :pattern ( ($generated@@43 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@32 $generated@@54) (= ($generated@@53 $generated@@54) $generated@@3))
 :pattern ( ($generated@@32 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 ($generated@@55 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@55 $generated@@58 $generated@@57))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (and ($generated@@33 $generated@@34 $generated@@60 $generated@@35) (= $generated@@61 ($generated@@27 0))) ($generated@@38 $generated@@59 $generated@@61 $generated@@60))
 :pattern ( ($generated@@38 $generated@@59 $generated@@61 $generated@@60))
))))
(assert (forall (($generated@@63 T@U) ) (!  (=> ($generated@@32 $generated@@63) (exists (($generated@@64 Int) ($generated@@65 T@U) ) (= $generated@@63 ($generated@@62 $generated@@64 $generated@@65))))
 :pattern ( ($generated@@32 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@38 ($generated@@39 $generated@@66) $generated@@67 $generated@@68) ($generated@@38 $generated@@66 $generated@@67 $generated@@68))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@66) $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (and ($generated@@69 $generated@@71) (<= ($generated@@28 $generated@@71) ($generated@@28 $generated@@70))) (and (= ($generated@@69 ($generated@@26 $generated@@70 $generated@@71)) ($generated@@69 $generated@@70)) (= ($generated@@28 ($generated@@26 $generated@@70 $generated@@71)) (- ($generated@@28 $generated@@70) ($generated@@28 $generated@@71)))))
 :pattern ( ($generated@@26 $generated@@70 $generated@@71))
)))
(assert (= ($generated@@5 $generated@@72) 4))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (or ($generated@@40 ($generated@@50 $generated@@72 $generated@@74) ($generated@@50 $generated@@34 $generated@@75)) (and (< 2 $generated@@37) ($generated@@33 $generated@@34 $generated@@75 $generated@@35))) (and (and (=> (< 0 ($generated@@28 $generated@@74)) (and ($generated@@32 ($generated@@50 $generated@@34 $generated@@75)) (=> ($generated@@10 ($generated@@50 $generated@@6 ($generated@@9 (> ($generated@@41 ($generated@@50 $generated@@34 $generated@@75)) 0)))) (and ($generated@@32 ($generated@@50 $generated@@34 $generated@@75)) ($generated@@40 ($generated@@26 $generated@@74 ($generated@@27 1)) ($generated@@50 $generated@@34 ($generated@@42 ($generated@@50 $generated@@34 $generated@@75)))))))) (=> (=> (< 0 ($generated@@28 $generated@@74)) (and (> ($generated@@41 ($generated@@50 $generated@@34 $generated@@75)) 0) ($generated@@38 ($generated@@39 $generated@@73) ($generated@@26 $generated@@74 ($generated@@27 1)) ($generated@@50 $generated@@34 ($generated@@42 ($generated@@50 $generated@@34 $generated@@75)))))) (=> (= ($generated@@43 0) ($generated@@28 $generated@@74)) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@22 $generated@@76 $generated@@74) ($generated@@40 $generated@@76 $generated@@75))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@73) $generated@@76 $generated@@75))
))))) (= ($generated@@38 ($generated@@39 $generated@@73) ($generated@@50 $generated@@72 $generated@@74) ($generated@@50 $generated@@34 $generated@@75))  (and (=> (< 0 ($generated@@28 $generated@@74)) (and (> ($generated@@41 ($generated@@50 $generated@@34 $generated@@75)) 0) ($generated@@38 ($generated@@39 $generated@@73) ($generated@@26 $generated@@74 ($generated@@27 1)) ($generated@@50 $generated@@34 ($generated@@42 ($generated@@50 $generated@@34 $generated@@75)))))) (=> (= ($generated@@43 0) ($generated@@28 $generated@@74)) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@22 $generated@@77 $generated@@74) ($generated@@38 ($generated@@39 $generated@@73) $generated@@77 $generated@@75))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@73) $generated@@77 $generated@@75))
)))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@73) ($generated@@50 $generated@@72 $generated@@74) ($generated@@50 $generated@@34 $generated@@75)))
))))
(assert (forall (($generated@@78 Int) ) (!  (=> (<= 0 $generated@@78) (and ($generated@@69 ($generated@@27 $generated@@78)) (= ($generated@@28 ($generated@@27 $generated@@78)) $generated@@78)))
 :pattern ( ($generated@@27 $generated@@78))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@40 ($generated@@50 $generated@@72 $generated@@80) $generated@@81) (and (< 2 $generated@@37) ($generated@@33 $generated@@34 $generated@@81 $generated@@35))) (and (and (=> (< 0 ($generated@@28 $generated@@80)) (and ($generated@@32 $generated@@81) (=> (> ($generated@@41 $generated@@81) 0) (and ($generated@@32 $generated@@81) ($generated@@40 ($generated@@26 $generated@@80 ($generated@@27 1)) ($generated@@42 $generated@@81)))))) (=> (=> (< 0 ($generated@@28 $generated@@80)) (and (> ($generated@@41 $generated@@81) 0) ($generated@@38 ($generated@@39 $generated@@79) ($generated@@26 $generated@@80 ($generated@@27 1)) ($generated@@42 $generated@@81)))) (=> (= ($generated@@43 0) ($generated@@28 $generated@@80)) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@22 $generated@@82 $generated@@80) ($generated@@40 $generated@@82 $generated@@81))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@79) $generated@@82 $generated@@81))
))))) (= ($generated@@38 ($generated@@39 $generated@@79) ($generated@@50 $generated@@72 $generated@@80) $generated@@81)  (and (=> (< 0 ($generated@@28 $generated@@80)) (and (> ($generated@@41 $generated@@81) 0) ($generated@@38 ($generated@@39 $generated@@79) ($generated@@26 $generated@@80 ($generated@@27 1)) ($generated@@42 $generated@@81)))) (=> (= ($generated@@43 0) ($generated@@28 $generated@@80)) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@22 $generated@@83 $generated@@80) ($generated@@38 ($generated@@39 $generated@@79) $generated@@83 $generated@@81))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@79) $generated@@83 $generated@@81))
)))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@79) ($generated@@50 $generated@@72 $generated@@80) $generated@@81))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (or (or ($generated@@22 $generated@@84 $generated@@85) (= $generated@@84 $generated@@85)) ($generated@@22 $generated@@85 $generated@@84))
 :pattern ( ($generated@@22 $generated@@84 $generated@@85) ($generated@@22 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (! (<= 0 ($generated@@28 $generated@@86))
 :pattern ( ($generated@@28 $generated@@86))
)))
(assert (forall (($generated@@87 Int) ($generated@@88 T@U) ) (! (= ($generated@@53 ($generated@@62 $generated@@87 $generated@@88)) $generated@@3)
 :pattern ( ($generated@@62 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 Int) ($generated@@90 T@U) ) (! (= ($generated@@41 ($generated@@62 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@62 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 Int) ($generated@@92 T@U) ) (! (= ($generated@@42 ($generated@@62 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@62 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@55 $generated@@94 ($generated@@56 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@56 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (and (and (and (=> ($generated@@22 $generated@@95 $generated@@96) (or (not (= $generated@@95 $generated@@96)) (not true))) (=> (and ($generated@@69 $generated@@95) (not ($generated@@69 $generated@@96))) ($generated@@22 $generated@@95 $generated@@96))) (=> (and ($generated@@69 $generated@@95) ($generated@@69 $generated@@96)) (= ($generated@@22 $generated@@95 $generated@@96) (< ($generated@@28 $generated@@95) ($generated@@28 $generated@@96))))) (=> (and ($generated@@22 $generated@@95 $generated@@96) ($generated@@69 $generated@@96)) ($generated@@69 $generated@@95)))
 :pattern ( ($generated@@22 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 Int) ) (! (= ($generated@@97 ($generated@@39 $generated@@98) $generated@@99) ($generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@97 ($generated@@39 $generated@@98) $generated@@99))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@101 T@U) ($generated@@102 Int) ) (!  (=> (or ($generated@@100 $generated@@102) (< 1 $generated@@37)) ($generated@@33 $generated@@34 ($generated@@97 $generated@@101 $generated@@102) $generated@@35))
 :pattern ( ($generated@@97 $generated@@101 $generated@@102))
))))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@103 T@U) ($generated@@104 Int) ) (!  (=> (or ($generated@@100 $generated@@104) (< 1 $generated@@37)) (and ($generated@@100 (+ $generated@@104 1)) (= ($generated@@97 ($generated@@39 $generated@@103) $generated@@104) ($generated@@62 $generated@@104 ($generated@@97 $generated@@103 (+ $generated@@104 1))))))
 :pattern ( ($generated@@97 ($generated@@39 $generated@@103) $generated@@104))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@105 $generated@@115 $generated@@116 $generated@@117 ($generated@@111 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@120 $generated@@121) $generated@@118)
 :weight 0
)) (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@105 $generated@@122 $generated@@123 $generated@@124 ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@105 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@105 $generated@@131 $generated@@132 $generated@@133 ($generated@@111 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@105 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)))) (= ($generated@@5 $generated@@106) 5)) (= ($generated@@5 $generated@@107) 6)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@109 $generated@@140 $generated@@141 ($generated@@112 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@142) $generated@@144) $generated@@142)
 :weight 0
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@109 $generated@@145 $generated@@146 ($generated@@112 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@109 $generated@@145 $generated@@146 $generated@@148 $generated@@150)))
 :weight 0
))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (= ($generated@@5 ($generated@@110 $generated@@151 $generated@@152)) 7))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@113 ($generated@@110 $generated@@153 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@110 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@114 ($generated@@110 $generated@@155 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@110 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@10 ($generated@@105 $generated@@106 $generated@@107 $generated@@6 ($generated@@108 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@10 ($generated@@55 $generated@@6 ($generated@@109 $generated@@107 $generated@@72 ($generated@@109 $generated@@106 ($generated@@110 $generated@@107 $generated@@72) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@105 $generated@@106 $generated@@107 $generated@@6 ($generated@@108 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> ($generated@@69 $generated@@163) (= $generated@@163 ($generated@@27 ($generated@@28 $generated@@163))))
 :pattern ( ($generated@@28 $generated@@163))
 :pattern ( ($generated@@69 $generated@@163))
)))
(assert (= ($generated@@21 $generated@@35) $generated@@2))
(assert (= ($generated@@164 $generated@@35) $generated@@4))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and ($generated@@69 $generated@@166) (<= ($generated@@28 $generated@@166) ($generated@@28 $generated@@165))) (or (and (= $generated@@166 ($generated@@27 0)) (= ($generated@@26 $generated@@165 $generated@@166) $generated@@165)) (and (or (not (= $generated@@166 ($generated@@27 0))) (not true)) ($generated@@22 ($generated@@26 $generated@@165 $generated@@166) $generated@@165))))
 :pattern ( ($generated@@26 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 Int) ) (! (= ($generated@@56 $generated@@7 ($generated@@11 ($generated@@43 $generated@@167))) ($generated@@50 $generated@@72 ($generated@@56 $generated@@7 ($generated@@11 $generated@@167))))
 :pattern ( ($generated@@56 $generated@@7 ($generated@@11 ($generated@@43 $generated@@167))))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@56 $generated@@169 ($generated@@50 $generated@@169 $generated@@168)) ($generated@@50 $generated@@72 ($generated@@56 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@56 $generated@@169 ($generated@@50 $generated@@169 $generated@@168)))
)))
(assert (forall (($generated@@170 Int) ($generated@@171 T@U) ) (! (= ($generated@@33 $generated@@34 ($generated@@62 $generated@@170 $generated@@171) $generated@@35)  (and ($generated@@33 $generated@@7 ($generated@@11 $generated@@170) $generated) ($generated@@33 $generated@@34 $generated@@171 $generated@@35)))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@62 $generated@@170 $generated@@171) $generated@@35))
)))
(assert (forall (($generated@@172 T@U) ) (! ($generated@@33 $generated@@7 $generated@@172 $generated)
 :pattern ( ($generated@@33 $generated@@7 $generated@@172 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@182  (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@40 $generated@@173 ($generated@@97 ($generated@@39 $generated@@174) $generated@@175)) (or ($generated@@38 ($generated@@39 $generated@@174) $generated@@173 ($generated@@97 ($generated@@39 $generated@@174) $generated@@175)) (=> (< 0 ($generated@@28 $generated@@173)) (> ($generated@@41 ($generated@@97 ($generated@@39 ($generated@@39 $generated@@174)) $generated@@175)) 0))))) (=> (=> ($generated@@40 $generated@@173 ($generated@@97 ($generated@@39 $generated@@174) $generated@@175)) (or ($generated@@38 ($generated@@39 $generated@@174) $generated@@173 ($generated@@97 ($generated@@39 $generated@@174) $generated@@175)) (=> (< 0 ($generated@@28 $generated@@173)) (> ($generated@@41 ($generated@@97 ($generated@@39 ($generated@@39 $generated@@174)) $generated@@175)) 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@40 $generated@@173 ($generated@@97 ($generated@@39 $generated@@174) $generated@@175)) (or ($generated@@38 ($generated@@39 $generated@@174) $generated@@173 ($generated@@97 ($generated@@39 $generated@@174) $generated@@175)) (=> (< 0 ($generated@@28 $generated@@173)) ($generated@@38 ($generated@@39 ($generated@@39 $generated@@174)) ($generated@@26 $generated@@173 ($generated@@27 1)) ($generated@@42 ($generated@@97 ($generated@@39 ($generated@@39 $generated@@174)) $generated@@175))))))) (=> (=> ($generated@@40 $generated@@173 ($generated@@97 ($generated@@39 $generated@@174) $generated@@175)) (or ($generated@@38 ($generated@@39 $generated@@174) $generated@@173 ($generated@@97 ($generated@@39 $generated@@174) $generated@@175)) (=> (< 0 ($generated@@28 $generated@@173)) ($generated@@38 ($generated@@39 ($generated@@39 $generated@@174)) ($generated@@26 $generated@@173 ($generated@@27 1)) ($generated@@42 ($generated@@97 ($generated@@39 ($generated@@39 $generated@@174)) $generated@@175)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@40 $generated@@173 ($generated@@97 ($generated@@39 $generated@@174) $generated@@175)) (or ($generated@@38 ($generated@@39 $generated@@174) $generated@@173 ($generated@@97 ($generated@@39 $generated@@174) $generated@@175)) (=> (= ($generated@@43 0) ($generated@@28 $generated@@173)) (forall (($generated@@183 T@U) ) (!  (=> ($generated@@22 $generated@@183 $generated@@173) ($generated@@38 ($generated@@39 ($generated@@39 $generated@@174)) $generated@@183 ($generated@@97 ($generated@@39 ($generated@@39 $generated@@174)) $generated@@175)))
 :pattern ( ($generated@@38 ($generated@@39 ($generated@@39 $generated@@174)) $generated@@183 ($generated@@97 ($generated@@39 ($generated@@39 $generated@@174)) $generated@@175)))
))))))))))))
(let (($generated@@184  (=> (<= ($generated@@28 $generated@@173) 0) (=> (and (and (and ($generated@@176 $generated@@177) ($generated@@178 $generated@@177)) (= $generated@@179 $generated@@177)) (and (forall (($generated@@185 T@U) ($generated@@186 Int) ) (!  (=> (and ($generated@@22 $generated@@185 $generated@@173) (<= ($generated@@43 1) $generated@@186)) ($generated@@38 ($generated@@39 $generated@@174) $generated@@185 ($generated@@97 ($generated@@39 $generated@@174) $generated@@186)))
 :pattern ( ($generated@@97 ($generated@@39 $generated@@174) $generated@@186) ($generated@@22 $generated@@185 $generated@@173))
)) (= (ControlFlow 0 6) 2))) $generated@@182))))
(let (($generated@@187  (=> (and (< 0 ($generated@@28 $generated@@173)) (= (ControlFlow 0 5) 2)) $generated@@182)))
(let (($generated@@188  (=> (= $generated@@180 ($generated@@108 $generated@@181 $generated@@179 $generated@@1 false)) (and (=> (= (ControlFlow 0 7) 5) $generated@@187) (=> (= (ControlFlow 0 7) 6) $generated@@184)))))
(let (($generated@@189  (=> (and (and (and ($generated@@176 $generated@@179) ($generated@@178 $generated@@179)) (= 3 $generated@@37)) (and (<= ($generated@@43 1) $generated@@175) (= (ControlFlow 0 8) 7))) $generated@@188)))
$generated@@189))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
