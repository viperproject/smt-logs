(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U T@U T@U T@U T@U) Int)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@72 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@89 () Int)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert  (and (and (and (and (and (and (and (= ($generated@@8 $generated@@33) 3) (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@37 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
))) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@37 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@37 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@8 $generated@@38) 4)) (= ($generated@@8 $generated@@39) 5)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@8 ($generated@@40 $generated@@55 $generated@@56)) 6))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@40 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@40 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@40 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (and (and (and ($generated@@30 $generated@@63) ($generated@@30 $generated@@64)) (or ($generated@@31 $generated@@61 $generated@@62 $generated@@63 $generated@@65 $generated@@66) (and ($generated@@32 $generated@@33 $generated@@65 $generated@@34) ($generated@@35 $generated@@66 $generated@@61)))) (and ($generated@@27 $generated@@63) ($generated@@28 $generated@@63 $generated@@64))) (=> (forall (($generated@@67 T@U) ($generated@@68 T@U) )  (=> (and (or (not (= $generated@@67 $generated@@36)) (not true)) (= $generated@@67 $generated@@65)) (= ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@63 $generated@@67) $generated@@68) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@64 $generated@@67) $generated@@68)))) (= ($generated@@29 $generated@@61 $generated@@62 $generated@@63 $generated@@65 $generated@@66) ($generated@@29 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@66))))
 :pattern ( ($generated@@27 $generated@@63) ($generated@@28 $generated@@63 $generated@@64) ($generated@@29 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@71 $generated@@69)  (or (= $generated@@71 $generated@@36) (= ($generated@@70 $generated@@71) $generated@@69)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@71 $generated@@69))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@72 $generated@@33 $generated@@73 $generated@@34 $generated@@74) ($generated@@72 $generated@@33 $generated@@73 $generated@@69 $generated@@74))
 :pattern ( ($generated@@72 $generated@@33 $generated@@73 $generated@@34 $generated@@74))
 :pattern ( ($generated@@72 $generated@@33 $generated@@73 $generated@@69 $generated@@74))
)))
(assert (= ($generated@@24 $generated@@75) 0))
(assert (= ($generated@@76 $generated@@5 $generated@@7) $generated@@75))
(assert  (not ($generated@@77 $generated@@75)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@72 $generated@@33 $generated@@79 $generated@@69 $generated@@80)  (or (= $generated@@79 $generated@@36) ($generated@@13 ($generated@@78 $generated@@9 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@80 $generated@@79) $generated@@1)))))
 :pattern ( ($generated@@72 $generated@@33 $generated@@79 $generated@@69 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> ($generated@@28 $generated@@81 $generated@@82) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@13 ($generated@@78 $generated@@9 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@81 $generated@@83) $generated@@1))) ($generated@@13 ($generated@@78 $generated@@9 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@82 $generated@@83) $generated@@1))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@82 $generated@@83) $generated@@1))
)))
 :pattern ( ($generated@@28 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 ($generated@@78 $generated@@86 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@78 $generated@@86 $generated@@85))
)))
(assert ($generated@@77 $generated@@1))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@87) (and (or (not (= $generated@@88 $generated@@36)) (not true)) (= ($generated@@70 $generated@@88) $generated@@69))) ($generated@@13 ($generated@@78 $generated@@9 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@87 $generated@@88) $generated@@1)))) ($generated@@72 $generated@@10 ($generated@@78 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@87 $generated@@88) $generated@@75)) $generated $generated@@87))
 :pattern ( ($generated@@78 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@87 $generated@@88) $generated@@75)))
)))
(assert  (=> (<= 1 $generated@@89) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (or ($generated@@31 $generated@@90 $generated@@91 $generated@@92 $generated@@93 $generated@@94) (and (< 1 $generated@@89) (and (and (and (and ($generated@@30 $generated@@91) ($generated@@30 $generated@@92)) ($generated@@28 $generated@@91 $generated@@92)) ($generated@@32 $generated@@33 $generated@@93 $generated@@34)) ($generated@@35 $generated@@94 $generated@@90)))) (= ($generated@@29 $generated@@90 $generated@@91 $generated@@92 $generated@@93 $generated@@94) (+ ($generated@@15 ($generated@@78 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@91 $generated@@93) $generated@@75))) ($generated@@15 ($generated@@78 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@92 $generated@@93) $generated@@75))))))
 :pattern ( ($generated@@29 $generated@@90 $generated@@91 $generated@@92 $generated@@93 $generated@@94) ($generated@@30 $generated@@92))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@95 ($generated@@84 $generated@@99 $generated@@96) $generated@@97 $generated@@98) ($generated@@72 $generated@@99 $generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@95 ($generated@@84 $generated@@99 $generated@@96) $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@28 $generated@@100 $generated@@101) (=> ($generated@@95 $generated@@102 $generated@@103 $generated@@100) ($generated@@95 $generated@@102 $generated@@103 $generated@@101)))
 :pattern ( ($generated@@28 $generated@@100 $generated@@101) ($generated@@95 $generated@@102 $generated@@103 $generated@@100))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (!  (=> ($generated@@28 $generated@@104 $generated@@105) (=> ($generated@@72 $generated@@108 $generated@@106 $generated@@107 $generated@@104) ($generated@@72 $generated@@108 $generated@@106 $generated@@107 $generated@@105)))
 :pattern ( ($generated@@28 $generated@@104 $generated@@105) ($generated@@72 $generated@@108 $generated@@106 $generated@@107 $generated@@104))
)))
(assert  (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@109 $generated@@112 $generated@@113 $generated@@114 ($generated@@111 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@117 $generated@@118) $generated@@115)
 :weight 0
)) (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@109 $generated@@119 $generated@@120 $generated@@121 ($generated@@111 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@109 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@109 $generated@@128 $generated@@129 $generated@@130 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@109 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@13 ($generated@@109 $generated@@33 $generated@@38 $generated@@9 ($generated@@110 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))  (=> (and (or (not (= $generated@@141 $generated@@137)) (not true)) ($generated@@13 ($generated@@78 $generated@@9 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@138 $generated@@141) $generated@@139)))) (= $generated@@141 $generated@@140)))
 :pattern ( ($generated@@109 $generated@@33 $generated@@38 $generated@@9 ($generated@@110 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@35 $generated@@143 $generated@@34) (and (= ($generated@@84 $generated@@33 ($generated@@78 $generated@@33 $generated@@143)) $generated@@143) ($generated@@32 $generated@@33 ($generated@@78 $generated@@33 $generated@@143) $generated@@34)))
 :pattern ( ($generated@@35 $generated@@143 $generated@@34))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> ($generated@@35 $generated@@144 $generated@@69) (and (= ($generated@@84 $generated@@33 ($generated@@78 $generated@@33 $generated@@144)) $generated@@144) ($generated@@32 $generated@@33 ($generated@@78 $generated@@33 $generated@@144) $generated@@69)))
 :pattern ( ($generated@@35 $generated@@144 $generated@@69))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@145 $generated@@34)  (and ($generated@@32 $generated@@33 $generated@@145 $generated@@69) (or (not (= $generated@@145 $generated@@36)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@145 $generated@@34))
 :pattern ( ($generated@@32 $generated@@33 $generated@@145 $generated@@69))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (or (not (= $generated@@146 $generated@@148)) (not true)) (=> (and ($generated@@28 $generated@@146 $generated@@147) ($generated@@28 $generated@@147 $generated@@148)) ($generated@@28 $generated@@146 $generated@@148)))
 :pattern ( ($generated@@28 $generated@@146 $generated@@147) ($generated@@28 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (and (= ($generated@@149 ($generated@@76 $generated@@150 $generated@@151)) $generated@@150) (= ($generated@@26 ($generated@@76 $generated@@150 $generated@@151)) $generated@@151))
 :pattern ( ($generated@@76 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@35 $generated@@152 $generated) (and (= ($generated@@84 $generated@@10 ($generated@@78 $generated@@10 $generated@@152)) $generated@@152) ($generated@@32 $generated@@10 ($generated@@78 $generated@@10 $generated@@152) $generated)))
 :pattern ( ($generated@@35 $generated@@152 $generated))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@35 ($generated@@84 $generated@@155 $generated@@153) $generated@@154) ($generated@@32 $generated@@155 $generated@@153 $generated@@154))
 :pattern ( ($generated@@35 ($generated@@84 $generated@@155 $generated@@153) $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@78 $generated@@157 ($generated@@84 $generated@@157 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@84 $generated@@157 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and ($generated@@30 $generated@@158) (and (or (not (= $generated@@159 $generated@@36)) (not true)) (= ($generated@@70 $generated@@159) $generated@@69))) ($generated@@32 $generated@@10 ($generated@@78 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@158 $generated@@159) $generated@@75)) $generated))
 :pattern ( ($generated@@78 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@158 $generated@@159) $generated@@75)))
)))
(assert (= ($generated@@25 $generated@@34) $generated@@3))
(assert (= ($generated@@160 $generated@@34) $generated@@6))
(assert (= ($generated@@25 $generated@@69) $generated@@4))
(assert (= ($generated@@160 $generated@@69) $generated@@6))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! ($generated@@72 $generated@@10 $generated@@162 $generated $generated@@161)
 :pattern ( ($generated@@72 $generated@@10 $generated@@162 $generated $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! ($generated@@32 $generated@@10 $generated@@163 $generated)
 :pattern ( ($generated@@32 $generated@@10 $generated@@163 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@172  (and (=> (= (ControlFlow 0 3) (- 0 6)) (or (not (= $generated@@164 $generated@@36)) (not true))) (=> (or (not (= $generated@@164 $generated@@36)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@72 $generated@@33 $generated@@164 $generated@@34 $generated@@165)) (=> ($generated@@72 $generated@@33 $generated@@164 $generated@@34 $generated@@165) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= $generated@@164 $generated@@36)) (not true))) (=> (or (not (= $generated@@164 $generated@@36)) (not true)) (=> (and (and (= $generated@@166 ($generated@@13 ($generated@@109 $generated@@33 $generated@@38 $generated@@9 $generated@@167 $generated@@164 $generated@@75))) (= ($generated@@29 $generated@@168 $generated@@165 $generated@@169 $generated@@164 $generated@@170) (+ ($generated@@15 ($generated@@78 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@165 $generated@@164) $generated@@75))) ($generated@@15 ($generated@@78 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@169 $generated@@164) $generated@@75)))))) (and ($generated@@32 $generated@@10 ($generated@@14 ($generated@@29 $generated@@168 $generated@@165 $generated@@169 $generated@@164 $generated@@170)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@166)))))))))
(let (($generated@@173 true))
(let (($generated@@174  (=> (= $generated@@167 ($generated@@110 $generated@@36 $generated@@169 $generated@@1 $generated@@164)) (and (=> (= (ControlFlow 0 7) 1) $generated@@173) (=> (= (ControlFlow 0 7) 3) $generated@@172)))))
(let (($generated@@175  (=> (and (and ($generated@@30 $generated@@165) ($generated@@27 $generated@@165)) (and ($generated@@32 $generated@@33 $generated@@164 $generated@@34) ($generated@@72 $generated@@33 $generated@@164 $generated@@34 $generated@@171))) (=> (and (and (and ($generated@@35 $generated@@170 $generated@@168) ($generated@@95 $generated@@170 $generated@@168 $generated@@171)) (= 1 $generated@@89)) (and (and (= $generated@@171 $generated@@165) (and ($generated@@28 $generated@@171 $generated@@169) ($generated@@30 $generated@@169))) (= (ControlFlow 0 8) 7))) $generated@@174))))
$generated@@175)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
