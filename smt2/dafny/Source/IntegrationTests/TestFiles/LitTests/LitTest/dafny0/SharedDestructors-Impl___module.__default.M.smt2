(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (Int Real Bool) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@45 (T@U) Real)
(declare-fun $generated@@49 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@57 (T@T T@U T@U) Bool)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T T@T) T@T)
(declare-fun $generated@@74 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@96 (Int Real) T@U)
(declare-fun $generated@@99 (Int) Int)
(declare-fun $generated@@101 (Real) Real)
(declare-fun $generated@@103 (T@T T@U) T@U)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@110 (T@U) Bool)
(declare-fun $generated@@112 (T@U) Bool)
(declare-fun $generated@@114 (T@T T@U) T@U)
(declare-fun $generated@@117 (T@U Int) T@U)
(declare-fun $generated@@130 (Real) T@U)
(declare-fun $generated@@138 (T@U) Int)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@158 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@160 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@207 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert (forall (($generated@@33 Int) ($generated@@34 Real) ($generated@@35 Bool) ) (! (= ($generated@@32 ($generated@@31 $generated@@33 $generated@@34 $generated@@35)) $generated@@35)
 :pattern ( ($generated@@31 $generated@@33 $generated@@34 $generated@@35))
)))
(assert (= ($generated@@36 $generated) $generated@@2))
(assert (= ($generated@@36 $generated@@0) $generated@@3))
(assert (= ($generated@@36 $generated@@1) $generated@@4))
(assert (forall (($generated@@38 Int) ($generated@@39 Real) ($generated@@40 Bool) ) (! (= ($generated@@37 ($generated@@31 $generated@@38 $generated@@39 $generated@@40)) $generated@@11)
 :pattern ( ($generated@@31 $generated@@38 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 Int) ($generated@@43 Real) ($generated@@44 Bool) ) (! (= ($generated@@41 ($generated@@31 $generated@@42 $generated@@43 $generated@@44)) $generated@@42)
 :pattern ( ($generated@@31 $generated@@42 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 Int) ($generated@@47 Real) ($generated@@48 Bool) ) (! (= ($generated@@45 ($generated@@31 $generated@@46 $generated@@47 $generated@@48)) $generated@@47)
 :pattern ( ($generated@@31 $generated@@46 $generated@@47 $generated@@48))
)))
(assert (= ($generated@@15 $generated@@50) 3))
(assert (forall (($generated@@53 Int) ($generated@@54 Real) ($generated@@55 Bool) ($generated@@56 T@U) ) (!  (=> ($generated@@52 $generated@@56) (= ($generated@@49 $generated@@50 ($generated@@31 $generated@@53 $generated@@54 $generated@@55) $generated@@51 $generated@@56)  (and (and ($generated@@49 $generated@@17 ($generated@@21 $generated@@53) $generated@@0 $generated@@56) ($generated@@49 $generated@@18 ($generated@@23 $generated@@54) $generated@@1 $generated@@56)) ($generated@@49 $generated@@16 ($generated@@19 $generated@@55) $generated $generated@@56))))
 :pattern ( ($generated@@49 $generated@@50 ($generated@@31 $generated@@53 $generated@@54 $generated@@55) $generated@@51 $generated@@56))
)))
(assert (= ($generated@@15 $generated@@58) 4))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@57 $generated@@58 $generated@@62 $generated@@59)  (or (= $generated@@62 $generated@@60) (= ($generated@@61 $generated@@62) $generated@@59)))
 :pattern ( ($generated@@57 $generated@@58 $generated@@62 $generated@@59))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@49 $generated@@58 $generated@@64 $generated@@63 $generated@@65) ($generated@@49 $generated@@58 $generated@@64 $generated@@59 $generated@@65))
 :pattern ( ($generated@@49 $generated@@58 $generated@@64 $generated@@63 $generated@@65))
 :pattern ( ($generated@@49 $generated@@58 $generated@@64 $generated@@59 $generated@@65))
)))
(assert (forall (($generated@@66 Int) ($generated@@67 Real) ($generated@@68 Bool) ) (! (= ($generated@@57 $generated@@50 ($generated@@31 $generated@@66 $generated@@67 $generated@@68) $generated@@51)  (and (and ($generated@@57 $generated@@17 ($generated@@21 $generated@@66) $generated@@0) ($generated@@57 $generated@@18 ($generated@@23 $generated@@67) $generated@@1)) ($generated@@57 $generated@@16 ($generated@@19 $generated@@68) $generated)))
 :pattern ( ($generated@@57 $generated@@50 ($generated@@31 $generated@@66 $generated@@67 $generated@@68) $generated@@51))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@70 $generated@@77 $generated@@78 ($generated@@74 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@79) $generated@@81) $generated@@79)
 :weight 0
)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (or (= $generated@@86 $generated@@87) (= ($generated@@70 $generated@@82 $generated@@83 ($generated@@74 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@84) $generated@@87) ($generated@@70 $generated@@82 $generated@@83 $generated@@85 $generated@@87)))
 :weight 0
))) (= ($generated@@15 $generated@@71) 5)) (= ($generated@@15 $generated@@72) 6)) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@15 ($generated@@73 $generated@@88 $generated@@89)) 7))) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@75 ($generated@@73 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@73 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@76 ($generated@@73 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@73 $generated@@92 $generated@@93))
))))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@49 $generated@@58 $generated@@94 $generated@@59 $generated@@95)  (or (= $generated@@94 $generated@@60) ($generated@@20 ($generated@@69 $generated@@16 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@58 ($generated@@73 $generated@@71 $generated@@72) $generated@@95 $generated@@94) $generated@@5)))))
 :pattern ( ($generated@@49 $generated@@58 $generated@@94 $generated@@59 $generated@@95))
)))
(assert (forall (($generated@@97 Int) ($generated@@98 Real) ) (! (= ($generated@@57 $generated@@50 ($generated@@96 $generated@@97 $generated@@98) $generated@@51)  (and ($generated@@57 $generated@@17 ($generated@@21 $generated@@97) $generated@@0) ($generated@@57 $generated@@18 ($generated@@23 $generated@@98) $generated@@1)))
 :pattern ( ($generated@@57 $generated@@50 ($generated@@96 $generated@@97 $generated@@98) $generated@@51))
)))
(assert (forall (($generated@@100 Int) ) (! (= ($generated@@99 $generated@@100) $generated@@100)
 :pattern ( ($generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 Real) ) (! (= ($generated@@101 $generated@@102) $generated@@102)
 :pattern ( ($generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@103 $generated@@105 $generated@@104) $generated@@104)
 :pattern ( ($generated@@103 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 $generated@@107) (= ($generated@@37 $generated@@107) $generated@@8))
 :pattern ( ($generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 $generated@@109) (= ($generated@@37 $generated@@109) $generated@@9))
 :pattern ( ($generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@110 $generated@@111) (= ($generated@@37 $generated@@111) $generated@@10))
 :pattern ( ($generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@112 $generated@@113) (= ($generated@@37 $generated@@113) $generated@@11))
 :pattern ( ($generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@114 $generated@@116 ($generated@@69 $generated@@116 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@69 $generated@@116 $generated@@115))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 Int) ) (! (= ($generated@@57 $generated@@50 ($generated@@117 $generated@@118 $generated@@119) $generated@@51)  (and ($generated@@57 $generated@@58 $generated@@118 $generated@@63) ($generated@@57 $generated@@17 ($generated@@21 $generated@@119) $generated@@0)))
 :pattern ( ($generated@@57 $generated@@50 ($generated@@117 $generated@@118 $generated@@119) $generated@@51))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@112 $generated@@120) (exists (($generated@@121 Int) ($generated@@122 Real) ($generated@@123 Bool) ) (= $generated@@120 ($generated@@31 $generated@@121 $generated@@122 $generated@@123))))
 :pattern ( ($generated@@112 $generated@@120))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@106 $generated@@124) (exists (($generated@@125 Int) ($generated@@126 Real) ) (= $generated@@124 ($generated@@96 $generated@@125 $generated@@126))))
 :pattern ( ($generated@@106 $generated@@124))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@108 $generated@@127) (exists (($generated@@128 T@U) ($generated@@129 Int) ) (= $generated@@127 ($generated@@117 $generated@@128 $generated@@129))))
 :pattern ( ($generated@@108 $generated@@127))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@110 $generated@@131) (exists (($generated@@132 Real) ) (= $generated@@131 ($generated@@130 $generated@@132))))
 :pattern ( ($generated@@110 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@57 $generated@@58 $generated@@133 $generated@@63)  (and ($generated@@57 $generated@@58 $generated@@133 $generated@@59) (or (not (= $generated@@133 $generated@@60)) (not true))))
 :pattern ( ($generated@@57 $generated@@58 $generated@@133 $generated@@63))
 :pattern ( ($generated@@57 $generated@@58 $generated@@133 $generated@@59))
)))
(assert (forall (($generated@@134 Real) ($generated@@135 T@U) ) (!  (=> ($generated@@52 $generated@@135) (= ($generated@@49 $generated@@50 ($generated@@130 $generated@@134) $generated@@51 $generated@@135) ($generated@@49 $generated@@18 ($generated@@23 $generated@@134) $generated@@1 $generated@@135)))
 :pattern ( ($generated@@49 $generated@@50 ($generated@@130 $generated@@134) $generated@@51 $generated@@135))
)))
(assert (forall (($generated@@136 Int) ($generated@@137 Real) ) (! (= ($generated@@37 ($generated@@96 $generated@@136 $generated@@137)) $generated@@8)
 :pattern ( ($generated@@96 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 Int) ($generated@@140 Real) ) (! (= ($generated@@138 ($generated@@96 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@96 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 Int) ($generated@@142 Real) ) (! (= ($generated@@45 ($generated@@96 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@96 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 Int) ) (! (= ($generated@@37 ($generated@@117 $generated@@143 $generated@@144)) $generated@@9)
 :pattern ( ($generated@@117 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 Int) ) (! (= ($generated@@145 ($generated@@117 $generated@@146 $generated@@147)) $generated@@146)
 :pattern ( ($generated@@117 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 Int) ) (! (= ($generated@@138 ($generated@@117 $generated@@148 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@117 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 Int) ($generated@@151 Real) ($generated@@152 T@U) ) (! (= ($generated@@31 ($generated@@99 $generated@@150) ($generated@@101 $generated@@151) ($generated@@20 ($generated@@103 $generated@@16 $generated@@152))) ($generated@@103 $generated@@50 ($generated@@31 $generated@@150 $generated@@151 ($generated@@20 $generated@@152))))
 :pattern ( ($generated@@31 ($generated@@99 $generated@@150) ($generated@@101 $generated@@151) ($generated@@20 ($generated@@103 $generated@@16 $generated@@152))))
)))
(assert (forall (($generated@@153 Real) ) (! (= ($generated@@37 ($generated@@130 $generated@@153)) $generated@@10)
 :pattern ( ($generated@@130 $generated@@153))
)))
(assert (forall (($generated@@154 Real) ) (! (= ($generated@@45 ($generated@@130 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@130 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@69 $generated@@156 ($generated@@114 $generated@@156 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@114 $generated@@156 $generated@@155))
)))
(assert (forall (($generated@@157 Real) ) (! (= ($generated@@57 $generated@@50 ($generated@@130 $generated@@157) $generated@@51) ($generated@@57 $generated@@18 ($generated@@23 $generated@@157) $generated@@1))
 :pattern ( ($generated@@57 $generated@@50 ($generated@@130 $generated@@157) $generated@@51))
)))
(assert  (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@158 $generated@@161 $generated@@162 $generated@@163 ($generated@@160 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@166 $generated@@167) $generated@@164)
 :weight 0
)) (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@158 $generated@@168 $generated@@169 $generated@@170 ($generated@@160 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@158 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@183 $generated@@185) (= ($generated@@158 $generated@@177 $generated@@178 $generated@@179 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@158 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@20 ($generated@@158 $generated@@58 $generated@@71 $generated@@16 ($generated@@159 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))  (=> (and (or (not (= $generated@@190 $generated@@186)) (not true)) ($generated@@20 ($generated@@69 $generated@@16 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@58 ($generated@@73 $generated@@71 $generated@@72) $generated@@187 $generated@@190) $generated@@188)))) $generated@@189))
 :pattern ( ($generated@@158 $generated@@58 $generated@@71 $generated@@16 ($generated@@159 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and ($generated@@52 $generated@@193) (and ($generated@@106 $generated@@192) ($generated@@49 $generated@@50 $generated@@192 $generated@@51 $generated@@193))) ($generated@@49 $generated@@17 ($generated@@21 ($generated@@138 $generated@@192)) $generated@@0 $generated@@193))
 :pattern ( ($generated@@49 $generated@@17 ($generated@@21 ($generated@@138 $generated@@192)) $generated@@0 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and ($generated@@52 $generated@@195) (and ($generated@@106 $generated@@194) ($generated@@49 $generated@@50 $generated@@194 $generated@@51 $generated@@195))) ($generated@@49 $generated@@18 ($generated@@23 ($generated@@45 $generated@@194)) $generated@@1 $generated@@195))
 :pattern ( ($generated@@49 $generated@@18 ($generated@@23 ($generated@@45 $generated@@194)) $generated@@1 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and ($generated@@52 $generated@@197) (and ($generated@@108 $generated@@196) ($generated@@49 $generated@@50 $generated@@196 $generated@@51 $generated@@197))) ($generated@@49 $generated@@17 ($generated@@21 ($generated@@138 $generated@@196)) $generated@@0 $generated@@197))
 :pattern ( ($generated@@49 $generated@@17 ($generated@@21 ($generated@@138 $generated@@196)) $generated@@0 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@52 $generated@@199) (and ($generated@@110 $generated@@198) ($generated@@49 $generated@@50 $generated@@198 $generated@@51 $generated@@199))) ($generated@@49 $generated@@18 ($generated@@23 ($generated@@45 $generated@@198)) $generated@@1 $generated@@199))
 :pattern ( ($generated@@49 $generated@@18 ($generated@@23 ($generated@@45 $generated@@198)) $generated@@1 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and ($generated@@52 $generated@@201) (and ($generated@@112 $generated@@200) ($generated@@49 $generated@@50 $generated@@200 $generated@@51 $generated@@201))) ($generated@@49 $generated@@17 ($generated@@21 ($generated@@41 $generated@@200)) $generated@@0 $generated@@201))
 :pattern ( ($generated@@49 $generated@@17 ($generated@@21 ($generated@@41 $generated@@200)) $generated@@0 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and ($generated@@52 $generated@@203) (and ($generated@@112 $generated@@202) ($generated@@49 $generated@@50 $generated@@202 $generated@@51 $generated@@203))) ($generated@@49 $generated@@18 ($generated@@23 ($generated@@45 $generated@@202)) $generated@@1 $generated@@203))
 :pattern ( ($generated@@49 $generated@@18 ($generated@@23 ($generated@@45 $generated@@202)) $generated@@1 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and ($generated@@52 $generated@@205) (and ($generated@@112 $generated@@204) ($generated@@49 $generated@@50 $generated@@204 $generated@@51 $generated@@205))) ($generated@@49 $generated@@16 ($generated@@19 ($generated@@32 $generated@@204)) $generated $generated@@205))
 :pattern ( ($generated@@49 $generated@@16 ($generated@@19 ($generated@@32 $generated@@204)) $generated $generated@@205))
)))
(assert (= ($generated@@36 $generated@@51) $generated@@6))
(assert (= ($generated@@206 $generated@@51) $generated@@13))
(assert (= ($generated@@36 $generated@@63) $generated@@7))
(assert (= ($generated@@206 $generated@@63) $generated@@14))
(assert (= ($generated@@36 $generated@@59) $generated@@12))
(assert (= ($generated@@206 $generated@@59) $generated@@14))
(assert (forall (($generated@@208 T@U) ) (!  (=> ($generated@@207 $generated@@208) (or (or (or ($generated@@106 $generated@@208) ($generated@@108 $generated@@208)) ($generated@@110 $generated@@208)) ($generated@@112 $generated@@208)))
 :pattern ( ($generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and ($generated@@52 $generated@@210) (and ($generated@@108 $generated@@209) ($generated@@49 $generated@@50 $generated@@209 $generated@@51 $generated@@210))) ($generated@@49 $generated@@58 ($generated@@145 $generated@@209) $generated@@63 $generated@@210))
 :pattern ( ($generated@@49 $generated@@58 ($generated@@145 $generated@@209) $generated@@63 $generated@@210))
)))
(assert (forall (($generated@@211 Int) ($generated@@212 Real) ) (! (= ($generated@@96 ($generated@@99 $generated@@211) ($generated@@101 $generated@@212)) ($generated@@103 $generated@@50 ($generated@@96 $generated@@211 $generated@@212)))
 :pattern ( ($generated@@96 ($generated@@99 $generated@@211) ($generated@@101 $generated@@212)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 Int) ) (! (= ($generated@@117 ($generated@@103 $generated@@58 $generated@@213) ($generated@@99 $generated@@214)) ($generated@@103 $generated@@50 ($generated@@117 $generated@@213 $generated@@214)))
 :pattern ( ($generated@@117 ($generated@@103 $generated@@58 $generated@@213) ($generated@@99 $generated@@214)))
)))
(assert (forall (($generated@@215 Int) ) (! (= ($generated@@114 $generated@@17 ($generated@@21 ($generated@@99 $generated@@215))) ($generated@@103 $generated@@72 ($generated@@114 $generated@@17 ($generated@@21 $generated@@215))))
 :pattern ( ($generated@@114 $generated@@17 ($generated@@21 ($generated@@99 $generated@@215))))
)))
(assert (forall (($generated@@216 Real) ) (! (= ($generated@@114 $generated@@18 ($generated@@23 ($generated@@101 $generated@@216))) ($generated@@103 $generated@@72 ($generated@@114 $generated@@18 ($generated@@23 $generated@@216))))
 :pattern ( ($generated@@114 $generated@@18 ($generated@@23 ($generated@@101 $generated@@216))))
)))
(assert (forall (($generated@@217 Real) ) (! (= ($generated@@130 ($generated@@101 $generated@@217)) ($generated@@103 $generated@@50 ($generated@@130 $generated@@217)))
 :pattern ( ($generated@@130 ($generated@@101 $generated@@217)))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@T) ) (! (= ($generated@@114 $generated@@219 ($generated@@103 $generated@@219 $generated@@218)) ($generated@@103 $generated@@72 ($generated@@114 $generated@@219 $generated@@218)))
 :pattern ( ($generated@@114 $generated@@219 ($generated@@103 $generated@@219 $generated@@218)))
)))
(assert (forall (($generated@@220 Int) ($generated@@221 Real) ($generated@@222 T@U) ) (!  (=> ($generated@@52 $generated@@222) (= ($generated@@49 $generated@@50 ($generated@@96 $generated@@220 $generated@@221) $generated@@51 $generated@@222)  (and ($generated@@49 $generated@@17 ($generated@@21 $generated@@220) $generated@@0 $generated@@222) ($generated@@49 $generated@@18 ($generated@@23 $generated@@221) $generated@@1 $generated@@222))))
 :pattern ( ($generated@@49 $generated@@50 ($generated@@96 $generated@@220 $generated@@221) $generated@@51 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> ($generated@@57 $generated@@50 $generated@@223 $generated@@51) (or (or (or ($generated@@106 $generated@@223) ($generated@@108 $generated@@223)) ($generated@@110 $generated@@223)) ($generated@@112 $generated@@223)))
 :pattern ( ($generated@@112 $generated@@223) ($generated@@57 $generated@@50 $generated@@223 $generated@@51))
 :pattern ( ($generated@@110 $generated@@223) ($generated@@57 $generated@@50 $generated@@223 $generated@@51))
 :pattern ( ($generated@@108 $generated@@223) ($generated@@57 $generated@@50 $generated@@223 $generated@@51))
 :pattern ( ($generated@@106 $generated@@223) ($generated@@57 $generated@@50 $generated@@223 $generated@@51))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! ($generated@@49 $generated@@17 $generated@@225 $generated@@0 $generated@@224)
 :pattern ( ($generated@@49 $generated@@17 $generated@@225 $generated@@0 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! ($generated@@49 $generated@@18 $generated@@227 $generated@@1 $generated@@226)
 :pattern ( ($generated@@49 $generated@@18 $generated@@227 $generated@@1 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! ($generated@@49 $generated@@16 $generated@@229 $generated $generated@@228)
 :pattern ( ($generated@@49 $generated@@16 $generated@@229 $generated $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ) (! ($generated@@57 $generated@@17 $generated@@230 $generated@@0)
 :pattern ( ($generated@@57 $generated@@17 $generated@@230 $generated@@0))
)))
(assert (forall (($generated@@231 T@U) ) (! ($generated@@57 $generated@@18 $generated@@231 $generated@@1)
 :pattern ( ($generated@@57 $generated@@18 $generated@@231 $generated@@1))
)))
(assert (forall (($generated@@232 T@U) ) (! ($generated@@57 $generated@@16 $generated@@232 $generated)
 :pattern ( ($generated@@57 $generated@@16 $generated@@232 $generated))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 Int) ($generated@@235 T@U) ) (!  (=> ($generated@@52 $generated@@235) (= ($generated@@49 $generated@@50 ($generated@@117 $generated@@233 $generated@@234) $generated@@51 $generated@@235)  (and ($generated@@49 $generated@@58 $generated@@233 $generated@@63 $generated@@235) ($generated@@49 $generated@@17 ($generated@@21 $generated@@234) $generated@@0 $generated@@235))))
 :pattern ( ($generated@@49 $generated@@50 ($generated@@117 $generated@@233 $generated@@234) $generated@@51 $generated@@235))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () Int)
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 () Real)
(declare-fun $generated@@242 () Real)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () Bool)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () Bool)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@253  (=> (and (or ($generated@@112 $generated@@236) ($generated@@110 $generated@@236)) (= (ControlFlow 0 23) (- 0 22))) (or (or ($generated@@106 $generated@@236) ($generated@@110 $generated@@236)) ($generated@@112 $generated@@236)))))
(let (($generated@@254  (=> (and ($generated@@112 $generated@@236) (= (ControlFlow 0 25) 23)) $generated@@253)))
(let (($generated@@255  (=> (and (not ($generated@@112 $generated@@236)) (= (ControlFlow 0 24) 23)) $generated@@253)))
(let (($generated@@256  (=> (and (and (and (and (and (and (and (and (and (and (not ($generated@@20 ($generated@@103 $generated@@16 ($generated@@19 true)))) (not ($generated@@106 $generated@@236))) (not ($generated@@108 $generated@@236))) (not ($generated@@110 $generated@@236))) (not ($generated@@108 $generated@@236))) ($generated@@108 $generated@@236)) (not (or ($generated@@112 $generated@@236) ($generated@@110 $generated@@236)))) (not ($generated@@20 ($generated@@103 $generated@@16 ($generated@@19 true))))) (not ($generated@@108 $generated@@236))) (not ($generated@@20 ($generated@@103 $generated@@16 ($generated@@19 true))))) (= (ControlFlow 0 21) (- 0 20))) false)))
(let (($generated@@257  (and (=> (= (ControlFlow 0 18) (- 0 19)) ($generated@@106 $generated@@236)) (=> ($generated@@106 $generated@@236) (=> (= $generated@@237 $generated@@236) (=> (and ($generated@@57 $generated@@50 $generated@@237 $generated@@51) (= $generated@@238 $generated@@237)) (=> (and (and (and (= $generated@@239 ($generated@@99 3)) ($generated@@57 $generated@@17 ($generated@@21 $generated@@239) $generated@@0)) (and (= $generated@@240 $generated@@239) (= $generated@@241 ($generated@@101 2.7)))) (and (and ($generated@@57 $generated@@18 ($generated@@23 $generated@@241) $generated@@1) (= $generated@@242 $generated@@241)) (and (= $generated@@243 (let (($generated@@258 ($generated@@99 3)))
(let (($generated@@259 ($generated@@101 2.7)))
($generated@@103 $generated@@50 ($generated@@96 $generated@@258 $generated@@259))))) (= (ControlFlow 0 18) (- 0 17))))) ($generated@@106 $generated@@243))))))))
(let (($generated@@260  (=> (and ($generated@@108 $generated@@236) (= (ControlFlow 0 16) (- 0 15))) ($generated@@108 $generated@@236))))
(let (($generated@@261  (=> (= (ControlFlow 0 14) (- 0 13)) ($generated@@108 $generated@@236))))
(let (($generated@@262  (=> (and (not ($generated@@108 $generated@@236)) (= (ControlFlow 0 12) (- 0 11))) (or (or ($generated@@106 $generated@@236) ($generated@@110 $generated@@236)) ($generated@@112 $generated@@236)))))
(let (($generated@@263  (=> (and ($generated@@108 $generated@@236) (= (ControlFlow 0 10) (- 0 9))) (or (or ($generated@@106 $generated@@236) ($generated@@110 $generated@@236)) ($generated@@112 $generated@@236)))))
(let (($generated@@264  (=> (and ($generated@@110 $generated@@236) (= (ControlFlow 0 8) (- 0 7))) (or ($generated@@106 $generated@@236) ($generated@@108 $generated@@236)))))
(let (($generated@@265  (=> (and ($generated@@108 $generated@@236) (= (ControlFlow 0 6) (- 0 5))) (or ($generated@@106 $generated@@236) ($generated@@108 $generated@@236)))))
(let (($generated@@266  (=> (and ($generated@@106 $generated@@236) (= (ControlFlow 0 4) (- 0 3))) (or ($generated@@106 $generated@@236) ($generated@@108 $generated@@236)))))
(let (($generated@@267  (=> (= (ControlFlow 0 2) (- 0 1)) (or ($generated@@106 $generated@@236) ($generated@@108 $generated@@236)))))
(let (($generated@@268  (=> (= $generated@@244 ($generated@@159 $generated@@60 $generated@@245 $generated@@5 false)) (and (and (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 26) 2) $generated@@267) (=> (= (ControlFlow 0 26) 4) $generated@@266)) (=> (= (ControlFlow 0 26) 6) $generated@@265)) (=> (= (ControlFlow 0 26) 8) $generated@@264)) (=> (= (ControlFlow 0 26) 10) $generated@@263)) (=> (= (ControlFlow 0 26) 12) $generated@@262)) (=> (= (ControlFlow 0 26) 14) $generated@@261)) (=> (= (ControlFlow 0 26) 16) $generated@@260)) (=> (= (ControlFlow 0 26) 18) $generated@@257)) (=> (= (ControlFlow 0 26) 21) $generated@@256)) (=> (= (ControlFlow 0 26) 24) $generated@@255)) (=> (= (ControlFlow 0 26) 25) $generated@@254)))))
(let (($generated@@269  (=> (and ($generated@@52 $generated@@245) ($generated@@246 $generated@@245)) (=> (and (and ($generated@@57 $generated@@50 $generated@@236 $generated@@51) ($generated@@49 $generated@@50 $generated@@236 $generated@@51 $generated@@245)) ($generated@@207 $generated@@236)) (=> (and (and (and (and ($generated@@57 $generated@@50 $generated@@247 $generated@@51) ($generated@@49 $generated@@50 $generated@@247 $generated@@51 $generated@@245)) true) (and (=> $generated@@248 (and ($generated@@57 $generated@@58 $generated@@249 $generated@@63) ($generated@@49 $generated@@58 $generated@@249 $generated@@63 $generated@@245))) true)) (and (and (=> $generated@@250 (and ($generated@@57 $generated@@58 $generated@@251 $generated@@63) ($generated@@49 $generated@@58 $generated@@251 $generated@@63 $generated@@245))) true) (and (= 2 $generated@@252) (= (ControlFlow 0 27) 26)))) $generated@@268)))))
$generated@@269))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 14) (- 13))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 18) (- 19))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 8) (- 7))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
