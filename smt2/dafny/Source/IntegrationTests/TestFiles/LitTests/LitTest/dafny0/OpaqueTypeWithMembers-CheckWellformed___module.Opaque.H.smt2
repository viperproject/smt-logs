(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U T@U T@U T@U) Int)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 (T@T T@T) T@T)
(declare-fun $generated@@55 (Int) T@U)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@101 (T@T T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@141 (T@U) Int)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@160 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert  (=> (< 0 $generated@@23) (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@30) ($generated@@28 $generated@@31 $generated@@26)) ($generated@@25 $generated@@31 $generated@@26 $generated@@30)) ($generated@@29 $generated@@7 ($generated@@11 ($generated@@24 $generated@@31)) $generated $generated@@30))
 :pattern ( ($generated@@24 $generated@@31) ($generated@@25 $generated@@31 $generated@@26 $generated@@30))
))))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (and (or (not (= $generated@@38 $generated@@34)) (not true)) (= ($generated@@35 $generated@@38) ($generated@@33 $generated@@37))) ($generated@@36 $generated@@7 ($generated@@11 ($generated@@32 $generated@@38)) $generated))
 :pattern ( ($generated@@32 $generated@@38) ($generated@@33 $generated@@37))
)))
(assert (= ($generated@@5 $generated@@39) 3))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@29 $generated@@39 $generated@@42 ($generated@@40 $generated@@41) $generated@@43) ($generated@@29 $generated@@39 $generated@@42 ($generated@@33 $generated@@41) $generated@@43))
 :pattern ( ($generated@@29 $generated@@39 $generated@@42 ($generated@@40 $generated@@41) $generated@@43))
 :pattern ( ($generated@@29 $generated@@39 $generated@@42 ($generated@@33 $generated@@41) $generated@@43))
)))
(assert ($generated@@44 $generated@@26))
(assert  (and (and (and (and (and (and (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@51 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@51 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@51 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@5 $generated@@52) 4)) (= ($generated@@5 $generated@@53) 5)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@5 ($generated@@54 $generated@@70 $generated@@71)) 6))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@54 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@54 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@54 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@54 $generated@@74 $generated@@75))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@47 $generated@@76 $generated@@77 $generated@@78 ($generated@@46 $generated@@39 $generated@@79)) (and (< 1 $generated@@23) (and (and (and (and ($generated@@27 $generated@@76) ($generated@@27 $generated@@77)) ($generated@@48 $generated@@76 $generated@@77)) (and ($generated@@28 $generated@@78 $generated@@26) ($generated@@25 $generated@@78 $generated@@26 $generated@@76))) ($generated@@36 $generated@@39 $generated@@79 ($generated@@40 $generated))))) (= ($generated@@45 $generated@@76 $generated@@77 $generated@@78 ($generated@@46 $generated@@39 $generated@@79)) (ite (= ($generated@@49 ($generated@@32 ($generated@@46 $generated@@39 $generated@@79))) ($generated@@49 100)) (+ (+ ($generated@@12 ($generated@@50 $generated@@7 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@76 ($generated@@46 $generated@@39 $generated@@79)) ($generated@@55 ($generated@@49 3))))) ($generated@@24 $generated@@78)) 2) 0)))
 :weight 3
 :pattern ( ($generated@@45 $generated@@76 $generated@@77 $generated@@78 ($generated@@46 $generated@@39 $generated@@79)) ($generated@@27 $generated@@77))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@29 $generated@@39 $generated@@81 ($generated@@33 $generated@@80) $generated@@82)  (or (= $generated@@81 $generated@@34) ($generated@@10 ($generated@@50 $generated@@6 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@82 $generated@@81) $generated@@1)))))
 :pattern ( ($generated@@29 $generated@@39 $generated@@81 ($generated@@33 $generated@@80) $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@48 $generated@@83 $generated@@84) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@10 ($generated@@50 $generated@@6 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@83 $generated@@85) $generated@@1))) ($generated@@10 ($generated@@50 $generated@@6 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@84 $generated@@85) $generated@@1))))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@84 $generated@@85) $generated@@1))
)))
 :pattern ( ($generated@@48 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and (and (and ($generated@@27 $generated@@88) ($generated@@27 $generated@@89)) ($generated@@28 $generated@@90 $generated@@26)) (or ($generated@@47 $generated@@87 $generated@@88 $generated@@90 $generated@@91) ($generated@@36 $generated@@39 $generated@@91 ($generated@@40 $generated)))) (and ($generated@@86 $generated@@88) ($generated@@48 $generated@@88 $generated@@89))) (=> (forall (($generated@@92 T@U) ($generated@@93 T@U) ) true) (= ($generated@@45 $generated@@87 $generated@@88 $generated@@90 $generated@@91) ($generated@@45 $generated@@87 $generated@@89 $generated@@90 $generated@@91))))
 :pattern ( ($generated@@86 $generated@@88) ($generated@@48 $generated@@88 $generated@@89) ($generated@@45 $generated@@87 $generated@@89 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@94 Int) ) (! (= ($generated@@49 $generated@@94) $generated@@94)
 :pattern ( ($generated@@49 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@46 $generated@@96 $generated@@95) $generated@@95)
 :pattern ( ($generated@@46 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 Int) ) (!  (=> (and (and (and ($generated@@27 $generated@@98) (and (or (not (= $generated@@99 $generated@@34)) (not true)) (= ($generated@@35 $generated@@99) ($generated@@33 $generated@@97)))) (and (<= 0 $generated@@100) (< $generated@@100 ($generated@@32 $generated@@99)))) ($generated@@10 ($generated@@50 $generated@@6 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@98 $generated@@99) $generated@@1)))) ($generated@@25 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@98 $generated@@99) ($generated@@55 $generated@@100)) $generated@@97 $generated@@98))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@98 $generated@@99) ($generated@@55 $generated@@100)) ($generated@@33 $generated@@97))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@101 $generated@@103 ($generated@@50 $generated@@103 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@50 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@36 $generated@@39 $generated@@105 ($generated@@40 $generated@@104))  (and ($generated@@36 $generated@@39 $generated@@105 ($generated@@33 $generated@@104)) (or (not (= $generated@@105 $generated@@34)) (not true))))
 :pattern ( ($generated@@36 $generated@@39 $generated@@105 ($generated@@40 $generated@@104)))
 :pattern ( ($generated@@36 $generated@@39 $generated@@105 ($generated@@33 $generated@@104)))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@25 ($generated@@101 $generated@@109 $generated@@106) $generated@@107 $generated@@108) ($generated@@29 $generated@@109 $generated@@106 $generated@@107 $generated@@108))
 :pattern ( ($generated@@25 ($generated@@101 $generated@@109 $generated@@106) $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> ($generated@@48 $generated@@110 $generated@@111) (=> ($generated@@25 $generated@@112 $generated@@113 $generated@@110) ($generated@@25 $generated@@112 $generated@@113 $generated@@111)))
 :pattern ( ($generated@@48 $generated@@110 $generated@@111) ($generated@@25 $generated@@112 $generated@@113 $generated@@110))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (!  (=> ($generated@@48 $generated@@114 $generated@@115) (=> ($generated@@29 $generated@@118 $generated@@116 $generated@@117 $generated@@114) ($generated@@29 $generated@@118 $generated@@116 $generated@@117 $generated@@115)))
 :pattern ( ($generated@@48 $generated@@114 $generated@@115) ($generated@@29 $generated@@118 $generated@@116 $generated@@117 $generated@@114))
)))
(assert (forall (($generated@@120 T@U) ) (!  (and (= ($generated@@22 ($generated@@33 $generated@@120)) $generated@@2) (= ($generated@@119 ($generated@@33 $generated@@120)) $generated@@4))
 :pattern ( ($generated@@33 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ) (!  (and (= ($generated@@22 ($generated@@40 $generated@@121)) $generated@@3) (= ($generated@@119 ($generated@@40 $generated@@121)) $generated@@4))
 :pattern ( ($generated@@40 $generated@@121))
)))
(assert  (=> (< 0 $generated@@23) (forall (($generated@@122 T@U) ) (!  (=> ($generated@@28 $generated@@122 $generated@@26) ($generated@@36 $generated@@7 ($generated@@11 ($generated@@24 $generated@@122)) $generated))
 :pattern ( ($generated@@24 $generated@@122))
))))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@36 $generated@@39 $generated@@124 ($generated@@33 $generated@@123))  (or (= $generated@@124 $generated@@34) (= ($generated@@35 $generated@@124) ($generated@@33 $generated@@123))))
 :pattern ( ($generated@@36 $generated@@39 $generated@@124 ($generated@@33 $generated@@123)))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (or (not (= $generated@@125 $generated@@127)) (not true)) (=> (and ($generated@@48 $generated@@125 $generated@@126) ($generated@@48 $generated@@126 $generated@@127)) ($generated@@48 $generated@@125 $generated@@127)))
 :pattern ( ($generated@@48 $generated@@125 $generated@@126) ($generated@@48 $generated@@126 $generated@@127))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or ($generated@@47 $generated@@128 $generated@@129 ($generated@@46 $generated@@53 $generated@@130) ($generated@@46 $generated@@39 $generated@@131)) (and (< 1 $generated@@23) (and (and (and (and ($generated@@27 $generated@@128) ($generated@@27 $generated@@129)) ($generated@@48 $generated@@128 $generated@@129)) (and ($generated@@28 $generated@@130 $generated@@26) ($generated@@25 $generated@@130 $generated@@26 $generated@@128))) ($generated@@36 $generated@@39 $generated@@131 ($generated@@40 $generated))))) (= ($generated@@45 $generated@@128 $generated@@129 ($generated@@46 $generated@@53 $generated@@130) ($generated@@46 $generated@@39 $generated@@131)) (ite (= ($generated@@49 ($generated@@32 ($generated@@46 $generated@@39 $generated@@131))) ($generated@@49 100)) (+ (+ ($generated@@12 ($generated@@50 $generated@@7 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@128 ($generated@@46 $generated@@39 $generated@@131)) ($generated@@55 ($generated@@49 3))))) ($generated@@24 ($generated@@46 $generated@@53 $generated@@130))) 2) 0)))
 :weight 3
 :pattern ( ($generated@@45 $generated@@128 $generated@@129 ($generated@@46 $generated@@53 $generated@@130) ($generated@@46 $generated@@39 $generated@@131)) ($generated@@27 $generated@@129))
))))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@28 $generated@@132 $generated) (and (= ($generated@@101 $generated@@7 ($generated@@50 $generated@@7 $generated@@132)) $generated@@132) ($generated@@36 $generated@@7 ($generated@@50 $generated@@7 $generated@@132) $generated)))
 :pattern ( ($generated@@28 $generated@@132 $generated))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@28 ($generated@@101 $generated@@135 $generated@@133) $generated@@134) ($generated@@36 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@28 ($generated@@101 $generated@@135 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (<= 0 ($generated@@32 $generated@@136))
 :pattern ( ($generated@@32 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@44 $generated@@137) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> ($generated@@28 $generated@@139 $generated@@137) ($generated@@25 $generated@@139 $generated@@137 $generated@@138))
 :pattern ( ($generated@@25 $generated@@139 $generated@@137 $generated@@138))
)))
 :pattern ( ($generated@@44 $generated@@137))
)))
(assert (forall (($generated@@140 Int) ) (! (= ($generated@@21 ($generated@@55 $generated@@140)) 1)
 :pattern ( ($generated@@55 $generated@@140))
)))
(assert (forall (($generated@@142 Int) ) (! (= ($generated@@141 ($generated@@55 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@55 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@143 ($generated@@33 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@33 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@40 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@40 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@50 $generated@@148 ($generated@@101 $generated@@148 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@101 $generated@@148 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@150) (and (or (not (= $generated@@151 $generated@@34)) (not true)) (= ($generated@@35 $generated@@151) ($generated@@33 $generated@@149)))) ($generated@@10 ($generated@@50 $generated@@6 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@150 $generated@@151) $generated@@1)))) ($generated@@29 $generated@@7 ($generated@@11 ($generated@@32 $generated@@151)) $generated $generated@@150))
 :pattern ( ($generated@@32 $generated@@151) ($generated@@50 $generated@@6 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@150 $generated@@151) $generated@@1)) ($generated@@33 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 Int) ) (!  (=> (and (and ($generated@@27 $generated@@153) (and (or (not (= $generated@@154 $generated@@34)) (not true)) (= ($generated@@35 $generated@@154) ($generated@@33 $generated@@152)))) (and (<= 0 $generated@@155) (< $generated@@155 ($generated@@32 $generated@@154)))) ($generated@@28 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@153 $generated@@154) ($generated@@55 $generated@@155)) $generated@@152))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@153 $generated@@154) ($generated@@55 $generated@@155)) ($generated@@33 $generated@@152))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (or ($generated@@47 $generated@@156 $generated@@157 $generated@@158 $generated@@159) (and (< 1 $generated@@23) (and (and (and (and ($generated@@27 $generated@@156) ($generated@@27 $generated@@157)) ($generated@@48 $generated@@156 $generated@@157)) (and ($generated@@28 $generated@@158 $generated@@26) ($generated@@25 $generated@@158 $generated@@26 $generated@@156))) ($generated@@36 $generated@@39 $generated@@159 ($generated@@40 $generated))))) (= ($generated@@45 $generated@@156 $generated@@157 $generated@@158 $generated@@159) (ite (= ($generated@@32 $generated@@159) ($generated@@49 100)) (+ (+ ($generated@@12 ($generated@@50 $generated@@7 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@156 $generated@@159) ($generated@@55 ($generated@@49 3))))) ($generated@@24 $generated@@158)) 2) 0)))
 :pattern ( ($generated@@45 $generated@@156 $generated@@157 $generated@@158 $generated@@159) ($generated@@27 $generated@@157))
))))
(assert  (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@160 $generated@@163 $generated@@164 $generated@@165 ($generated@@162 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@168 $generated@@169) $generated@@166)
 :weight 0
)) (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@160 $generated@@170 $generated@@171 $generated@@172 ($generated@@162 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@176 $generated@@173) $generated@@177 $generated@@178) ($generated@@160 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@177 $generated@@178)))
 :weight 0
)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@160 $generated@@179 $generated@@180 $generated@@181 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@160 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@10 ($generated@@160 $generated@@39 $generated@@52 $generated@@6 ($generated@@161 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (or (not (= $generated@@192 $generated@@188)) (not true)) ($generated@@10 ($generated@@50 $generated@@6 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@189 $generated@@192) $generated@@190)))) $generated@@191))
 :pattern ( ($generated@@160 $generated@@39 $generated@@52 $generated@@6 ($generated@@161 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> ($generated@@28 $generated@@195 ($generated@@33 $generated@@194)) (and (= ($generated@@101 $generated@@39 ($generated@@50 $generated@@39 $generated@@195)) $generated@@195) ($generated@@36 $generated@@39 ($generated@@50 $generated@@39 $generated@@195) ($generated@@33 $generated@@194))))
 :pattern ( ($generated@@28 $generated@@195 ($generated@@33 $generated@@194)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@28 $generated@@197 ($generated@@40 $generated@@196)) (and (= ($generated@@101 $generated@@39 ($generated@@50 $generated@@39 $generated@@197)) $generated@@197) ($generated@@36 $generated@@39 ($generated@@50 $generated@@39 $generated@@197) ($generated@@40 $generated@@196))))
 :pattern ( ($generated@@28 $generated@@197 ($generated@@40 $generated@@196)))
)))
(assert (forall (($generated@@198 Int) ) (! (= ($generated@@101 $generated@@7 ($generated@@11 ($generated@@49 $generated@@198))) ($generated@@46 $generated@@53 ($generated@@101 $generated@@7 ($generated@@11 $generated@@198))))
 :pattern ( ($generated@@101 $generated@@7 ($generated@@11 ($generated@@49 $generated@@198))))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@T) ) (! (= ($generated@@101 $generated@@200 ($generated@@46 $generated@@200 $generated@@199)) ($generated@@46 $generated@@53 ($generated@@101 $generated@@200 $generated@@199)))
 :pattern ( ($generated@@101 $generated@@200 ($generated@@46 $generated@@200 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! ($generated@@29 $generated@@7 $generated@@202 $generated $generated@@201)
 :pattern ( ($generated@@29 $generated@@7 $generated@@202 $generated $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ) (! ($generated@@36 $generated@@7 $generated@@203 $generated)
 :pattern ( ($generated@@36 $generated@@7 $generated@@203 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@210 true))
(let (($generated@@211  (=> (= ($generated@@32 $generated@@204) ($generated@@49 100)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (not (= $generated@@204 $generated@@34)) (not true))) (=> (or (not (= $generated@@204 $generated@@34)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@29 $generated@@39 $generated@@204 ($generated@@33 $generated) $generated@@205)) (=> ($generated@@29 $generated@@39 $generated@@204 ($generated@@33 $generated) $generated@@205) (=> (= (ControlFlow 0 3) (- 0 2)) (and (<= 0 ($generated@@49 3)) (< ($generated@@49 3) ($generated@@32 $generated@@204)))))))))))
(let (($generated@@212  (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (not (= $generated@@204 $generated@@34)) (not true))) (=> (or (not (= $generated@@204 $generated@@34)) (not true)) (and (=> (= (ControlFlow 0 7) 3) $generated@@211) (=> (= (ControlFlow 0 7) 6) $generated@@210))))))
(let (($generated@@213 true))
(let (($generated@@214  (=> (= $generated@@206 ($generated@@161 $generated@@34 $generated@@207 $generated@@1 false)) (and (=> (= (ControlFlow 0 9) 1) $generated@@213) (=> (= (ControlFlow 0 9) 7) $generated@@212)))))
(let (($generated@@215  (=> (and (and ($generated@@27 $generated@@205) ($generated@@86 $generated@@205)) (and ($generated@@28 $generated@@208 $generated@@26) ($generated@@25 $generated@@208 $generated@@26 $generated@@209))) (=> (and (and (and ($generated@@36 $generated@@39 $generated@@204 ($generated@@40 $generated)) ($generated@@29 $generated@@39 $generated@@204 ($generated@@40 $generated) $generated@@209)) (= 1 $generated@@23)) (and (and (= $generated@@209 $generated@@205) (and ($generated@@48 $generated@@209 $generated@@207) ($generated@@27 $generated@@207))) (= (ControlFlow 0 10) 9))) $generated@@214))))
$generated@@215)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
