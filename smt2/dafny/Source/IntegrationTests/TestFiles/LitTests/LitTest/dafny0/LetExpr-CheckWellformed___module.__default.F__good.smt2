(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () Int)
(declare-fun $generated@@57 (T@U) Int)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@87 (T@U) Int)
(declare-fun $generated@@88 (T@U) Int)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@100 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@T T@T) T@T)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@155 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@1))
(assert (= ($generated@@25 $generated@@0) $generated@@2))
(assert (= ($generated@@9 $generated@@28) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@30 $generated@@31)) ($generated@@26 $generated@@32))
 :pattern ( ($generated@@26 $generated@@32) ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@30 $generated@@31)))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@33 $generated@@37 $generated@@38) ($generated@@29 $generated@@35 $generated@@36))  (and ($generated@@34 $generated@@37 $generated@@35) ($generated@@34 $generated@@38 $generated@@36)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@33 $generated@@37 $generated@@38) ($generated@@29 $generated@@35 $generated@@36)))
)))
(assert (forall (($generated@@40 Int) ) (! (= ($generated@@39 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ) (! (= ($generated@@26 $generated@@45) (= ($generated@@44 $generated@@45) $generated@@6))
 :pattern ( ($generated@@26 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 ($generated@@46 $generated@@49 $generated@@48)) $generated@@48)
 :pattern ( ($generated@@46 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (!  (=> ($generated@@26 $generated@@50) (exists (($generated@@51 T@U) ($generated@@52 T@U) ) (= $generated@@50 ($generated@@33 $generated@@51 $generated@@52))))
 :pattern ( ($generated@@26 $generated@@50))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@27 $generated@@11 $generated@@54 $generated@@53) (<= ($generated@@39 0) ($generated@@16 $generated@@54)))
 :pattern ( ($generated@@27 $generated@@11 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (!  (=> ($generated@@34 $generated@@55 $generated@@53) (and (= ($generated@@47 $generated@@11 ($generated@@46 $generated@@11 $generated@@55)) $generated@@55) ($generated@@27 $generated@@11 ($generated@@46 $generated@@11 $generated@@55) $generated@@53)))
 :pattern ( ($generated@@34 $generated@@55 $generated@@53))
)))
(assert  (=> (<= 1 $generated@@56) (forall (($generated@@61 T@U) ) (!  (=> (or ($generated@@58 $generated@@61) (and (< 1 $generated@@56) (and ($generated@@27 $generated@@28 $generated@@61 ($generated@@29 ($generated@@29 $generated $generated@@0) ($generated@@29 ($generated@@29 $generated@@0 $generated@@0) ($generated@@29 $generated $generated)))) (and (<= ($generated@@39 0) ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@61)))))))) (< ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@61))))))) 100))))) (and (and (and ($generated@@26 $generated@@61) (and (and ($generated@@26 $generated@@61) ($generated@@26 ($generated@@46 $generated@@28 ($generated@@59 $generated@@61)))) ($generated@@26 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@61))))))) (let (($generated@@62 ($generated@@46 $generated@@28 ($generated@@60 $generated@@61))))
($generated@@26 $generated@@62))) (= ($generated@@57 $generated@@61) (let (($generated@@63 ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@61)))))))))
(let (($generated@@64 ($generated@@16 ($generated@@46 $generated@@11 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@61)))))))))
(let (($generated@@65 ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@46 $generated@@28 ($generated@@60 $generated@@61)))))))
(let (($generated@@66 ($generated@@14 ($generated@@46 $generated@@10 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@60 $generated@@61)))))))
(let (($generated@@67 ($generated@@46 $generated@@28 ($generated@@60 $generated@@61))))
(+ ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 $generated@@67))) (ite $generated@@66 (+ $generated@@65 $generated@@64) (+ $generated@@65 $generated@@63)))))))))))
 :pattern ( ($generated@@57 $generated@@61))
))))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@34 $generated@@68 $generated@@0) (and (= ($generated@@47 $generated@@11 ($generated@@46 $generated@@11 $generated@@68)) $generated@@68) ($generated@@27 $generated@@11 ($generated@@46 $generated@@11 $generated@@68) $generated@@0)))
 :pattern ( ($generated@@34 $generated@@68 $generated@@0))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@34 $generated@@69 $generated) (and (= ($generated@@47 $generated@@10 ($generated@@46 $generated@@10 $generated@@69)) $generated@@69) ($generated@@27 $generated@@10 ($generated@@46 $generated@@10 $generated@@69) $generated)))
 :pattern ( ($generated@@34 $generated@@69 $generated))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@34 ($generated@@47 $generated@@72 $generated@@70) $generated@@71) ($generated@@27 $generated@@72 $generated@@70 $generated@@71))
 :pattern ( ($generated@@34 ($generated@@47 $generated@@72 $generated@@70) $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@73 ($generated@@29 $generated@@74 $generated@@75)) $generated@@74)
 :pattern ( ($generated@@29 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@76 ($generated@@29 $generated@@77 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@29 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@44 ($generated@@33 $generated@@79 $generated@@80)) $generated@@6)
 :pattern ( ($generated@@33 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@60 ($generated@@33 $generated@@81 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@33 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@59 ($generated@@33 $generated@@83 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@33 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@46 $generated@@86 ($generated@@47 $generated@@86 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@47 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (< ($generated@@87 $generated@@89) ($generated@@88 ($generated@@33 $generated@@89 $generated@@90)))
 :pattern ( ($generated@@33 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (< ($generated@@87 $generated@@92) ($generated@@88 ($generated@@33 $generated@@91 $generated@@92)))
 :pattern ( ($generated@@33 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> ($generated@@34 $generated@@95 ($generated@@29 $generated@@93 $generated@@94)) (and (= ($generated@@47 $generated@@28 ($generated@@46 $generated@@28 $generated@@95)) $generated@@95) ($generated@@27 $generated@@28 ($generated@@46 $generated@@28 $generated@@95) ($generated@@29 $generated@@93 $generated@@94))))
 :pattern ( ($generated@@34 $generated@@95 ($generated@@29 $generated@@93 $generated@@94)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@96 $generated@@107 $generated@@108 $generated@@109 ($generated@@103 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@112 $generated@@113) $generated@@110)
 :weight 0
)) (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@96 $generated@@114 $generated@@115 $generated@@116 ($generated@@103 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@96 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@96 $generated@@123 $generated@@124 $generated@@125 ($generated@@103 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)))) (= ($generated@@9 $generated@@97) 4)) (= ($generated@@9 $generated@@98) 5)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@100 $generated@@132 $generated@@133 ($generated@@104 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@134) $generated@@136) $generated@@134)
 :weight 0
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@100 $generated@@137 $generated@@138 ($generated@@104 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@100 $generated@@137 $generated@@138 $generated@@140 $generated@@142)))
 :weight 0
))) (= ($generated@@9 $generated@@101) 6)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (= ($generated@@9 ($generated@@102 $generated@@143 $generated@@144)) 7))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@105 ($generated@@102 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@102 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@106 ($generated@@102 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@102 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 Bool) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@14 ($generated@@96 $generated@@97 $generated@@98 $generated@@10 ($generated@@99 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@153 $generated@@154))  (=> (and (or (not (= $generated@@153 $generated@@149)) (not true)) ($generated@@14 ($generated@@46 $generated@@10 ($generated@@100 $generated@@98 $generated@@101 ($generated@@100 $generated@@97 ($generated@@102 $generated@@98 $generated@@101) $generated@@150 $generated@@153) $generated@@151)))) $generated@@152))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98 $generated@@10 ($generated@@99 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (and (= ($generated@@25 ($generated@@29 $generated@@156 $generated@@157)) $generated@@5) (= ($generated@@155 ($generated@@29 $generated@@156 $generated@@157)) $generated@@8))
 :pattern ( ($generated@@29 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@87 ($generated@@47 $generated@@28 $generated@@158)) ($generated@@88 $generated@@158))
 :pattern ( ($generated@@87 ($generated@@47 $generated@@28 $generated@@158)))
)))
(assert (= ($generated@@25 $generated@@53) $generated@@4))
(assert (= ($generated@@155 $generated@@53) $generated@@7))
(assert  (=> (<= 1 $generated@@56) (forall (($generated@@159 T@U) ) (!  (=> (or ($generated@@58 ($generated@@41 $generated@@28 $generated@@159)) (and (< 1 $generated@@56) (and ($generated@@27 $generated@@28 $generated@@159 ($generated@@29 ($generated@@29 $generated $generated@@0) ($generated@@29 ($generated@@29 $generated@@0 $generated@@0) ($generated@@29 $generated $generated)))) (and (<= ($generated@@39 0) ($generated@@39 ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@41 $generated@@28 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@41 $generated@@28 ($generated@@46 $generated@@28 ($generated@@59 ($generated@@41 $generated@@28 $generated@@159)))))))))))) (< ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@41 $generated@@28 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@41 $generated@@28 ($generated@@46 $generated@@28 ($generated@@59 ($generated@@41 $generated@@28 $generated@@159)))))))))) 100))))) (and (and (and ($generated@@26 ($generated@@41 $generated@@28 $generated@@159)) (and (and ($generated@@26 ($generated@@41 $generated@@28 $generated@@159)) ($generated@@26 ($generated@@41 $generated@@28 ($generated@@46 $generated@@28 ($generated@@59 ($generated@@41 $generated@@28 $generated@@159)))))) ($generated@@26 ($generated@@41 $generated@@28 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@41 $generated@@28 ($generated@@46 $generated@@28 ($generated@@59 ($generated@@41 $generated@@28 $generated@@159)))))))))) (let (($generated@@160 ($generated@@41 $generated@@28 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@41 $generated@@28 $generated@@159))))))
($generated@@26 $generated@@160))) (= ($generated@@57 ($generated@@41 $generated@@28 $generated@@159)) (let (($generated@@161 ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 ($generated@@41 $generated@@28 $generated@@159))))))))))
(let (($generated@@162 ($generated@@16 ($generated@@46 $generated@@11 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 ($generated@@41 $generated@@28 $generated@@159))))))))))
(let (($generated@@163 ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@41 $generated@@28 $generated@@159))))))))
(let (($generated@@164 ($generated@@14 ($generated@@46 $generated@@10 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@41 $generated@@28 $generated@@159))))))))
(let (($generated@@165 ($generated@@41 $generated@@28 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@41 $generated@@28 $generated@@159))))))
(+ ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 $generated@@165))) (ite $generated@@164 (+ $generated@@163 $generated@@162) (+ $generated@@163 $generated@@161)))))))))))
 :weight 3
 :pattern ( ($generated@@57 ($generated@@41 $generated@@28 $generated@@159)))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@33 ($generated@@41 $generated@@101 $generated@@166) ($generated@@41 $generated@@101 $generated@@167)) ($generated@@41 $generated@@28 ($generated@@33 $generated@@166 $generated@@167)))
 :pattern ( ($generated@@33 ($generated@@41 $generated@@101 $generated@@166) ($generated@@41 $generated@@101 $generated@@167)))
)))
(assert (forall (($generated@@168 Int) ) (! (= ($generated@@47 $generated@@11 ($generated@@15 ($generated@@39 $generated@@168))) ($generated@@41 $generated@@101 ($generated@@47 $generated@@11 ($generated@@15 $generated@@168))))
 :pattern ( ($generated@@47 $generated@@11 ($generated@@15 ($generated@@39 $generated@@168))))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@T) ) (! (= ($generated@@47 $generated@@170 ($generated@@41 $generated@@170 $generated@@169)) ($generated@@41 $generated@@101 ($generated@@47 $generated@@170 $generated@@169)))
 :pattern ( ($generated@@47 $generated@@170 ($generated@@41 $generated@@170 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (! ($generated@@27 $generated@@11 $generated@@171 $generated@@0)
 :pattern ( ($generated@@27 $generated@@11 $generated@@171 $generated@@0))
)))
(assert (forall (($generated@@172 T@U) ) (! ($generated@@27 $generated@@10 $generated@@172 $generated)
 :pattern ( ($generated@@27 $generated@@10 $generated@@172 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () Bool)
(declare-fun $generated@@182 () Bool)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@190 true))
(let (($generated@@191  (=> (and (not $generated@@173) (= (ControlFlow 0 4) 2)) $generated@@190)))
(let (($generated@@192  (=> (and $generated@@173 (= (ControlFlow 0 3) 2)) $generated@@190)))
(let (($generated@@193  (=> ($generated@@26 $generated@@174) (=> (and (= $generated@@175 ($generated@@46 $generated@@28 ($generated@@60 $generated@@174))) ($generated@@26 $generated@@174)) (=> (and (and (and ($generated@@27 $generated@@28 $generated@@175 ($generated@@29 $generated $generated@@0)) (= $generated@@176 $generated@@175)) (and (= $generated@@177 $generated@@174) ($generated@@27 $generated@@28 $generated@@177 ($generated@@29 ($generated@@29 $generated $generated@@0) ($generated@@29 ($generated@@29 $generated@@0 $generated@@0) ($generated@@29 $generated $generated)))))) (and (and ($generated@@26 $generated@@177) ($generated@@26 ($generated@@46 $generated@@28 ($generated@@60 $generated@@177)))) (and ($generated@@26 ($generated@@46 $generated@@28 ($generated@@59 $generated@@177))) ($generated@@26 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@177)))))))) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@27 $generated@@11 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@177)))))) $generated@@53)) (=> ($generated@@27 $generated@@11 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@177)))))) $generated@@53) (=> (and ($generated@@26 ($generated@@46 $generated@@28 ($generated@@59 ($generated@@46 $generated@@28 ($generated@@59 $generated@@177))))) (= ($generated@@33 ($generated@@47 $generated@@28 ($generated@@33 ($generated@@47 $generated@@10 ($generated@@13 $generated@@173)) ($generated@@47 $generated@@11 ($generated@@15 $generated@@178)))) ($generated@@47 $generated@@28 ($generated@@33 ($generated@@47 $generated@@28 ($generated@@33 ($generated@@47 $generated@@11 ($generated@@15 $generated@@179)) ($generated@@47 $generated@@11 ($generated@@15 $generated@@180)))) ($generated@@47 $generated@@28 ($generated@@33 ($generated@@47 $generated@@10 ($generated@@13 $generated@@181)) ($generated@@47 $generated@@10 ($generated@@13 $generated@@182))))))) $generated@@177)) (=> (and (and ($generated@@26 $generated@@174) ($generated@@26 ($generated@@46 $generated@@28 ($generated@@59 $generated@@174)))) (and ($generated@@26 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@174))))) (= $generated@@183 ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@174)))))))))) (=> (and (and (and ($generated@@26 $generated@@174) ($generated@@26 ($generated@@46 $generated@@28 ($generated@@59 $generated@@174)))) ($generated@@26 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@174)))))) (and ($generated@@27 $generated@@11 ($generated@@15 $generated@@183) $generated@@0) (= $generated@@184 $generated@@183))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< $generated@@184 200)) (=> (< $generated@@184 200) (=> ($generated@@26 $generated@@176) (and (=> (= (ControlFlow 0 5) 3) $generated@@192) (=> (= (ControlFlow 0 5) 4) $generated@@191)))))))))))))))
(let (($generated@@194 true))
(let (($generated@@195  (=> (and (<= ($generated@@39 0) ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@174)))))))) (< ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@174))))))) 100)) (and (=> (= (ControlFlow 0 8) 1) $generated@@194) (=> (= (ControlFlow 0 8) 5) $generated@@193)))))
(let (($generated@@196  (=> (and (< ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@174))))))) ($generated@@39 0)) (= (ControlFlow 0 10) 8)) $generated@@195)))
(let (($generated@@197  (=> (<= ($generated@@39 0) ($generated@@16 ($generated@@46 $generated@@11 ($generated@@59 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@174)))))))) (=> (and (and ($generated@@26 $generated@@174) ($generated@@26 ($generated@@46 $generated@@28 ($generated@@59 $generated@@174)))) (and ($generated@@26 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@174))))) (= (ControlFlow 0 9) 8))) $generated@@195))))
(let (($generated@@198  (=> (and (and (= $generated@@185 ($generated@@99 $generated@@186 $generated@@187 $generated@@3 false)) ($generated@@26 $generated@@174)) (and ($generated@@26 ($generated@@46 $generated@@28 ($generated@@59 $generated@@174))) ($generated@@26 ($generated@@46 $generated@@28 ($generated@@60 ($generated@@46 $generated@@28 ($generated@@59 $generated@@174))))))) (and (=> (= (ControlFlow 0 11) 9) $generated@@197) (=> (= (ControlFlow 0 11) 10) $generated@@196)))))
(let (($generated@@199  (=> (and (and (and ($generated@@188 $generated@@187) ($generated@@189 $generated@@187)) ($generated@@27 $generated@@28 $generated@@174 ($generated@@29 ($generated@@29 $generated $generated@@0) ($generated@@29 ($generated@@29 $generated@@0 $generated@@0) ($generated@@29 $generated $generated))))) (and (= 1 $generated@@56) (= (ControlFlow 0 12) 11))) $generated@@198)))
$generated@@199)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
