(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@1) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@30 $generated@@1) $generated@@2))
(assert (= ($generated@@31 $generated@@32) $generated@@7))
(assert (= ($generated@@31 $generated@@33) $generated@@8))
(assert (= ($generated@@12 $generated@@35) 3))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@39 $generated@@36)  (or (= $generated@@39 $generated@@37) (= ($generated@@38 $generated@@39) $generated@@36)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@39 $generated@@36))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@42 $generated@@41 $generated@@43) ($generated@@40 $generated@@35 $generated@@42 $generated@@36 $generated@@43))
 :pattern ( ($generated@@40 $generated@@35 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@40 $generated@@35 $generated@@42 $generated@@36 $generated@@43))
)))
(assert (= ($generated@@12 $generated@@44) 4))
(assert ($generated@@34 $generated@@44 $generated@@32 $generated@@45))
(assert ($generated@@34 $generated@@44 $generated@@33 $generated@@45))
(assert (= ($generated@@28 $generated@@46) 0))
(assert (= ($generated@@47 $generated@@5 $generated@@11) $generated@@46))
(assert  (not ($generated@@48 $generated@@46)))
(assert  (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@50 $generated@@57 $generated@@58 ($generated@@54 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@61) $generated@@59)
 :weight 0
)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (or (= $generated@@66 $generated@@67) (= ($generated@@50 $generated@@62 $generated@@63 ($generated@@54 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@67) ($generated@@50 $generated@@62 $generated@@63 $generated@@65 $generated@@67)))
 :weight 0
))) (= ($generated@@12 $generated@@51) 5)) (= ($generated@@12 $generated@@52) 6)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (= ($generated@@12 ($generated@@53 $generated@@68 $generated@@69)) 7))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@55 ($generated@@53 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@53 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@56 ($generated@@53 $generated@@72 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@53 $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@74 $generated@@36 $generated@@75)  (or (= $generated@@74 $generated@@37) ($generated@@17 ($generated@@49 $generated@@13 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@75 $generated@@74) $generated@@1)))))
 :pattern ( ($generated@@40 $generated@@35 $generated@@74 $generated@@36 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@76 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@17 ($generated@@49 $generated@@13 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@77 $generated@@79) $generated@@1))) ($generated@@17 ($generated@@49 $generated@@13 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@78 $generated@@79) $generated@@1))))
 :pattern ( ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@78 $generated@@79) $generated@@1))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@80 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@85 $generated@@86) (= ($generated@@31 $generated@@86) $generated@@7))
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@87 $generated@@88) (= ($generated@@31 $generated@@88) $generated@@8))
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@49 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@49 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@85 $generated@@92) (= $generated@@92 $generated@@32))
 :pattern ( ($generated@@85 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@87 $generated@@93) (= $generated@@93 $generated@@33))
 :pattern ( ($generated@@87 $generated@@93))
)))
(assert ($generated@@48 $generated@@1))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and (and ($generated@@94 $generated@@95) (and (or (not (= $generated@@96 $generated@@37)) (not true)) (= ($generated@@38 $generated@@96) $generated@@36))) ($generated@@17 ($generated@@49 $generated@@13 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@95 $generated@@96) $generated@@1)))) ($generated@@40 $generated@@14 ($generated@@49 $generated@@14 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@95 $generated@@96) $generated@@46)) $generated $generated@@95))
 :pattern ( ($generated@@49 $generated@@14 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@95 $generated@@96) $generated@@46)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (!  (=> ($generated@@76 $generated@@97 $generated@@98) (=> ($generated@@40 $generated@@101 $generated@@99 $generated@@100 $generated@@97) ($generated@@40 $generated@@101 $generated@@99 $generated@@100 $generated@@98)))
 :pattern ( ($generated@@76 $generated@@97 $generated@@98) ($generated@@40 $generated@@101 $generated@@99 $generated@@100 $generated@@97))
)))
(assert  (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@102 $generated@@105 $generated@@106 $generated@@107 ($generated@@104 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@110 $generated@@111) $generated@@108)
 :weight 0
)) (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@102 $generated@@112 $generated@@113 $generated@@114 ($generated@@104 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@102 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@102 $generated@@121 $generated@@122 $generated@@123 ($generated@@104 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@102 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@17 ($generated@@102 $generated@@35 $generated@@51 $generated@@13 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))  (=> (and (or (not (= $generated@@134 $generated@@130)) (not true)) ($generated@@17 ($generated@@49 $generated@@13 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@131 $generated@@134) $generated@@132)))) (= $generated@@134 $generated@@133)))
 :pattern ( ($generated@@102 $generated@@35 $generated@@51 $generated@@13 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@136 $generated@@41)  (and ($generated@@34 $generated@@35 $generated@@136 $generated@@36) (or (not (= $generated@@136 $generated@@37)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@136 $generated@@41))
 :pattern ( ($generated@@34 $generated@@35 $generated@@136 $generated@@36))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@137 $generated@@138) (or ($generated@@85 $generated@@138) ($generated@@87 $generated@@138)))
 :pattern ( ($generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@34 $generated@@44 $generated@@139 $generated@@45) (or ($generated@@85 $generated@@139) ($generated@@87 $generated@@139)))
 :pattern ( ($generated@@87 $generated@@139) ($generated@@34 $generated@@44 $generated@@139 $generated@@45))
 :pattern ( ($generated@@85 $generated@@139) ($generated@@34 $generated@@44 $generated@@139 $generated@@45))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (or (not (= $generated@@140 $generated@@142)) (not true)) (=> (and ($generated@@76 $generated@@140 $generated@@141) ($generated@@76 $generated@@141 $generated@@142)) ($generated@@76 $generated@@140 $generated@@142)))
 :pattern ( ($generated@@76 $generated@@140 $generated@@141) ($generated@@76 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (and (= ($generated@@143 ($generated@@47 $generated@@144 $generated@@145)) $generated@@144) (= ($generated@@30 ($generated@@47 $generated@@144 $generated@@145)) $generated@@145))
 :pattern ( ($generated@@47 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@49 $generated@@147 ($generated@@89 $generated@@147 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@89 $generated@@147 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and ($generated@@94 $generated@@148) (and (or (not (= $generated@@149 $generated@@37)) (not true)) (= ($generated@@38 $generated@@149) $generated@@36))) ($generated@@34 $generated@@14 ($generated@@49 $generated@@14 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@148 $generated@@149) $generated@@46)) $generated))
 :pattern ( ($generated@@49 $generated@@14 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@148 $generated@@149) $generated@@46)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@94 ($generated@@54 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@150 $generated@@151 ($generated@@54 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@150 $generated@@151) $generated@@152 $generated@@153))) ($generated@@76 $generated@@150 ($generated@@54 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@150 $generated@@151 ($generated@@54 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@150 $generated@@151) $generated@@152 $generated@@153))))
 :pattern ( ($generated@@54 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@150 $generated@@151 ($generated@@54 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@150 $generated@@151) $generated@@152 $generated@@153)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and ($generated@@94 $generated@@155) ($generated@@34 $generated@@44 $generated@@154 $generated@@45)) ($generated@@40 $generated@@44 $generated@@154 $generated@@45 $generated@@155))
 :pattern ( ($generated@@40 $generated@@44 $generated@@154 $generated@@45 $generated@@155))
)))
(assert (= ($generated@@29 $generated@@41) $generated@@3))
(assert (= ($generated@@156 $generated@@41) $generated@@9))
(assert (= ($generated@@29 $generated@@45) $generated@@4))
(assert (= ($generated@@156 $generated@@45) $generated@@10))
(assert (= ($generated@@29 $generated@@36) $generated@@6))
(assert (= ($generated@@156 $generated@@36) $generated@@9))
(assert (= $generated@@32 ($generated@@82 $generated@@44 $generated@@32)))
(assert (= $generated@@33 ($generated@@82 $generated@@44 $generated@@33)))
(assert (forall (($generated@@157 Int) ) (! (= ($generated@@89 $generated@@14 ($generated@@18 ($generated@@80 $generated@@157))) ($generated@@82 $generated@@52 ($generated@@89 $generated@@14 ($generated@@18 $generated@@157))))
 :pattern ( ($generated@@89 $generated@@14 ($generated@@18 ($generated@@80 $generated@@157))))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@T) ) (! (= ($generated@@89 $generated@@159 ($generated@@82 $generated@@159 $generated@@158)) ($generated@@82 $generated@@52 ($generated@@89 $generated@@159 $generated@@158)))
 :pattern ( ($generated@@89 $generated@@159 ($generated@@82 $generated@@159 $generated@@158)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! ($generated@@40 $generated@@14 $generated@@161 $generated $generated@@160)
 :pattern ( ($generated@@40 $generated@@14 $generated@@161 $generated $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! ($generated@@34 $generated@@14 $generated@@162 $generated)
 :pattern ( ($generated@@34 $generated@@14 $generated@@162 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@173  (=> (= $generated@@163 ($generated@@103 $generated@@37 $generated@@164 $generated@@1 $generated@@165)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@165 $generated@@37)) (not true))) (=> (or (not (= $generated@@165 $generated@@37)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@17 ($generated@@102 $generated@@35 $generated@@51 $generated@@13 $generated@@163 $generated@@165 $generated@@46))) (=> ($generated@@17 ($generated@@102 $generated@@35 $generated@@51 $generated@@13 $generated@@163 $generated@@165 $generated@@46)) (=> (= $generated@@166 ($generated@@80 7)) (=> (and (and (and (= $generated@@167 ($generated@@54 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@164 $generated@@165 ($generated@@54 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@164 $generated@@165) $generated@@46 ($generated@@89 $generated@@14 ($generated@@18 $generated@@166))))) ($generated@@94 $generated@@167)) (and ($generated@@94 $generated@@168) ($generated@@169 $generated@@168))) (and (and (= ($generated@@19 ($generated@@49 $generated@@14 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@168 $generated@@165) $generated@@46))) ($generated@@80 8)) (= $generated@@167 $generated@@168)) (and (= $generated@@170 ($generated@@80 3)) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@17 ($generated@@82 $generated@@13 ($generated@@16 false))))))))))))
(let (($generated@@174  (=> (and (and ($generated@@94 $generated@@164) ($generated@@169 $generated@@164)) (and ($generated@@34 $generated@@35 $generated@@165 $generated@@41) ($generated@@40 $generated@@35 $generated@@165 $generated@@41 $generated@@164))) (=> (and (and (and (and ($generated@@34 $generated@@44 $generated@@171 $generated@@45) ($generated@@40 $generated@@44 $generated@@171 $generated@@45 $generated@@164)) ($generated@@137 $generated@@171)) (= 2 $generated@@172)) (and (= ($generated@@19 ($generated@@49 $generated@@14 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@35 ($generated@@53 $generated@@51 $generated@@52) $generated@@164 $generated@@165) $generated@@46))) ($generated@@80 8)) (= (ControlFlow 0 5) 2))) $generated@@173))))
$generated@@174)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
