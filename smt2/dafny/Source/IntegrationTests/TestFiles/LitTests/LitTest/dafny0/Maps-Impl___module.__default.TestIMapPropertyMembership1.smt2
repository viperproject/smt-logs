(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 (Int) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 ((_ BitVec 3)) T@U)
(declare-fun $generated@@30 (T@U) (_ BitVec 3))
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@109 () T@U)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Int)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Int)
(declare-fun $generated@@188 (T@U) Int)
(declare-fun $generated@@200 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@201 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@202 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@10 $generated@@26 ($generated@@25 0) $generated@@27)
 :pattern ( ($generated@@24 $generated@@10 $generated@@26 ($generated@@25 0) $generated@@27))
)))
(assert  (and (and (= ($generated@@8 $generated@@28) 3) (forall (($generated@@31 (_ BitVec 3)) ) (! (= ($generated@@30 ($generated@@29 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@29 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@29 ($generated@@30 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@30 $generated@@32))
))))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! ($generated@@24 $generated@@28 $generated@@33 ($generated@@25 3) $generated@@34)
 :pattern ( ($generated@@24 $generated@@28 $generated@@33 ($generated@@25 3) $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ) (! ($generated@@35 $generated@@10 $generated@@36 ($generated@@25 0))
 :pattern ( ($generated@@35 $generated@@10 $generated@@36 ($generated@@25 0)))
)))
(assert (forall (($generated@@37 T@U) ) (! ($generated@@35 $generated@@28 $generated@@37 ($generated@@25 3))
 :pattern ( ($generated@@35 $generated@@28 $generated@@37 ($generated@@25 3)))
)))
(assert (= ($generated@@8 $generated@@39) 4))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@35 $generated@@39 $generated@@43 ($generated@@40 $generated@@41 $generated@@42)) ($generated@@38 $generated@@43))
 :pattern ( ($generated@@38 $generated@@43) ($generated@@35 $generated@@39 $generated@@43 ($generated@@40 $generated@@41 $generated@@42)))
)))
(assert (= ($generated@@8 $generated@@44) 5))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@35 $generated@@44 $generated@@48 $generated@@45)  (or (= $generated@@48 $generated@@46) (= ($generated@@47 $generated@@48) $generated@@45)))
 :pattern ( ($generated@@35 $generated@@44 $generated@@48 $generated@@45))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@24 $generated@@44 $generated@@50 $generated@@49 $generated@@51) ($generated@@24 $generated@@44 $generated@@50 $generated@@45 $generated@@51))
 :pattern ( ($generated@@24 $generated@@44 $generated@@50 $generated@@49 $generated@@51))
 :pattern ( ($generated@@24 $generated@@44 $generated@@50 $generated@@45 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@35 $generated@@39 ($generated@@52 $generated@@56 $generated@@57) ($generated@@40 $generated@@54 $generated@@55))  (and ($generated@@53 $generated@@56 $generated@@54) ($generated@@53 $generated@@57 $generated@@55)))
 :pattern ( ($generated@@35 $generated@@39 ($generated@@52 $generated@@56 $generated@@57) ($generated@@40 $generated@@54 $generated@@55)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@59 $generated@@66 $generated@@67 ($generated@@63 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@70) $generated@@68)
 :weight 0
)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (or (= $generated@@75 $generated@@76) (= ($generated@@59 $generated@@71 $generated@@72 ($generated@@63 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@76) ($generated@@59 $generated@@71 $generated@@72 $generated@@74 $generated@@76)))
 :weight 0
))) (= ($generated@@8 $generated@@60) 6)) (= ($generated@@8 $generated@@61) 7)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (= ($generated@@8 ($generated@@62 $generated@@77 $generated@@78)) 8))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@65 ($generated@@62 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@62 $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@24 $generated@@44 $generated@@83 $generated@@45 $generated@@84)  (or (= $generated@@83 $generated@@46) ($generated@@13 ($generated@@58 $generated@@9 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@44 ($generated@@62 $generated@@60 $generated@@61) $generated@@84 $generated@@83) $generated@@1)))))
 :pattern ( ($generated@@24 $generated@@44 $generated@@83 $generated@@45 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@35 ($generated@@62 $generated@@61 $generated@@9) $generated@@86 ($generated@@85 $generated@@87)) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 $generated@@86 $generated@@88)) ($generated@@53 $generated@@88 $generated@@87))
 :pattern ( ($generated@@59 $generated@@61 $generated@@9 $generated@@86 $generated@@88))
)))
 :pattern ( ($generated@@35 ($generated@@62 $generated@@61 $generated@@9) $generated@@86 ($generated@@85 $generated@@87)))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> ($generated@@89 $generated@@95) (= ($generated@@24 $generated@@39 ($generated@@52 $generated@@93 $generated@@94) ($generated@@40 $generated@@91 $generated@@92) $generated@@95)  (and ($generated@@90 $generated@@93 $generated@@91 $generated@@95) ($generated@@90 $generated@@94 $generated@@92 $generated@@95))))
 :pattern ( ($generated@@24 $generated@@39 ($generated@@52 $generated@@93 $generated@@94) ($generated@@40 $generated@@91 $generated@@92) $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@38 $generated@@97) (= ($generated@@96 $generated@@97) $generated@@2))
 :pattern ( ($generated@@38 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 ($generated@@58 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@58 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@38 $generated@@101) (exists (($generated@@102 T@U) ($generated@@103 T@U) ) (= $generated@@101 ($generated@@52 $generated@@102 $generated@@103))))
 :pattern ( ($generated@@38 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@90 ($generated@@98 $generated@@107 $generated@@104) $generated@@105 $generated@@106) ($generated@@24 $generated@@107 $generated@@104 $generated@@105 $generated@@106))
 :pattern ( ($generated@@90 ($generated@@98 $generated@@107 $generated@@104) $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@110 T@U) ) (!  (not ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 ($generated@@108 $generated@@109) $generated@@110)))
 :pattern ( ($generated@@59 $generated@@61 $generated@@9 ($generated@@108 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@111 $generated@@112 $generated@@113) (forall (($generated@@114 T@U) ) (! (= ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 $generated@@112 $generated@@114)) ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 $generated@@113 $generated@@114)))
 :pattern ( ($generated@@59 $generated@@61 $generated@@9 $generated@@112 $generated@@114))
 :pattern ( ($generated@@59 $generated@@61 $generated@@9 $generated@@113 $generated@@114))
)))
 :pattern ( ($generated@@111 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@53 $generated@@115 $generated@@49) (and (= ($generated@@98 $generated@@44 ($generated@@58 $generated@@44 $generated@@115)) $generated@@115) ($generated@@35 $generated@@44 ($generated@@58 $generated@@44 $generated@@115) $generated@@49)))
 :pattern ( ($generated@@53 $generated@@115 $generated@@49))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@53 $generated@@116 $generated@@45) (and (= ($generated@@98 $generated@@44 ($generated@@58 $generated@@44 $generated@@116)) $generated@@116) ($generated@@35 $generated@@44 ($generated@@58 $generated@@44 $generated@@116) $generated@@45)))
 :pattern ( ($generated@@53 $generated@@116 $generated@@45))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@35 $generated@@44 $generated@@117 $generated@@49)  (and ($generated@@35 $generated@@44 $generated@@117 $generated@@45) (or (not (= $generated@@117 $generated@@46)) (not true))))
 :pattern ( ($generated@@35 $generated@@44 $generated@@117 $generated@@49))
 :pattern ( ($generated@@35 $generated@@44 $generated@@117 $generated@@45))
)))
(assert (forall (($generated@@118 T@U) ) (!  (or (= $generated@@118 $generated@@109) (exists (($generated@@119 T@U) ) ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 ($generated@@108 $generated@@118) $generated@@119))))
 :pattern ( ($generated@@108 $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ) (!  (or (= $generated@@121 $generated@@109) (exists (($generated@@122 T@U) ) ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 ($generated@@120 $generated@@121) $generated@@122))))
 :pattern ( ($generated@@120 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@24 ($generated@@62 $generated@@61 $generated@@9) $generated@@123 ($generated@@85 $generated@@124) $generated@@125) (forall (($generated@@126 T@U) ) (!  (=> ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 $generated@@123 $generated@@126)) ($generated@@90 $generated@@126 $generated@@124 $generated@@125))
 :pattern ( ($generated@@59 $generated@@61 $generated@@9 $generated@@123 $generated@@126))
)))
 :pattern ( ($generated@@24 ($generated@@62 $generated@@61 $generated@@9) $generated@@123 ($generated@@85 $generated@@124) $generated@@125))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 ($generated@@127 $generated@@131) $generated@@132))  (and ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 ($generated@@108 $generated@@131) ($generated@@128 ($generated@@58 $generated@@39 $generated@@132)))) (= ($generated@@59 $generated@@61 $generated@@61 ($generated@@129 $generated@@131) ($generated@@128 ($generated@@58 $generated@@39 $generated@@132))) ($generated@@130 ($generated@@58 $generated@@39 $generated@@132)))))
 :pattern ( ($generated@@59 $generated@@61 $generated@@9 ($generated@@127 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 ($generated@@120 $generated@@133) $generated@@134)) (exists (($generated@@135 T@U) ) (!  (and ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 ($generated@@108 $generated@@133) $generated@@135)) (= $generated@@134 ($generated@@59 $generated@@61 $generated@@61 ($generated@@129 $generated@@133) $generated@@135)))
 :pattern ( ($generated@@59 $generated@@61 $generated@@9 ($generated@@108 $generated@@133) $generated@@135))
 :pattern ( ($generated@@59 $generated@@61 $generated@@61 ($generated@@129 $generated@@133) $generated@@135))
)))
 :pattern ( ($generated@@59 $generated@@61 $generated@@9 ($generated@@120 $generated@@133) $generated@@134))
)))
(assert (= ($generated@@8 $generated@@136) 9))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@24 $generated@@136 $generated@@138 ($generated@@137 $generated@@139 $generated@@140) $generated@@141) (forall (($generated@@142 T@U) ) (!  (=> ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 ($generated@@108 $generated@@138) $generated@@142)) (and ($generated@@90 ($generated@@59 $generated@@61 $generated@@61 ($generated@@129 $generated@@138) $generated@@142) $generated@@140 $generated@@141) ($generated@@90 $generated@@142 $generated@@139 $generated@@141)))
 :pattern ( ($generated@@59 $generated@@61 $generated@@61 ($generated@@129 $generated@@138) $generated@@142))
 :pattern ( ($generated@@59 $generated@@61 $generated@@9 ($generated@@108 $generated@@138) $generated@@142))
)))
 :pattern ( ($generated@@24 $generated@@136 $generated@@138 ($generated@@137 $generated@@139 $generated@@140) $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@111 $generated@@143 $generated@@144) (= $generated@@143 $generated@@144))
 :pattern ( ($generated@@111 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= (= $generated@@146 $generated@@109) (= ($generated@@108 $generated@@146) $generated@@145))
 :pattern ( ($generated@@108 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (! (= (= $generated@@147 $generated@@109) (= ($generated@@120 $generated@@147) $generated@@145))
 :pattern ( ($generated@@120 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (! (= (= $generated@@148 $generated@@109) (= ($generated@@127 $generated@@148) $generated@@145))
 :pattern ( ($generated@@127 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (!  (or (= $generated@@149 $generated@@109) (exists (($generated@@150 T@U) ($generated@@151 T@U) ) ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 ($generated@@127 $generated@@149) ($generated@@98 $generated@@39 ($generated@@52 $generated@@150 $generated@@151))))))
 :pattern ( ($generated@@127 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@53 ($generated@@98 $generated@@154 $generated@@152) $generated@@153) ($generated@@35 $generated@@154 $generated@@152 $generated@@153))
 :pattern ( ($generated@@53 ($generated@@98 $generated@@154 $generated@@152) $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@155 ($generated@@137 $generated@@156 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@137 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@158 ($generated@@137 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@137 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@161 ($generated@@137 $generated@@162 $generated@@163)) $generated@@0)
 :pattern ( ($generated@@137 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@96 ($generated@@52 $generated@@164 $generated@@165)) $generated@@2)
 :pattern ( ($generated@@52 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@166 ($generated@@40 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@40 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@169 ($generated@@40 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@40 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@128 ($generated@@52 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@52 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@130 ($generated@@52 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@52 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@177 Int) ) (! (= ($generated@@176 ($generated@@25 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@25 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@178 ($generated@@85 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@85 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@161 ($generated@@85 $generated@@180)) $generated)
 :pattern ( ($generated@@85 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@T) ) (! (= ($generated@@58 $generated@@182 ($generated@@98 $generated@@182 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@98 $generated@@182 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@35 $generated@@136 $generated@@183 ($generated@@137 $generated@@184 $generated@@185)) (forall (($generated@@186 T@U) ) (!  (=> ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 ($generated@@108 $generated@@183) $generated@@186)) (and ($generated@@53 ($generated@@59 $generated@@61 $generated@@61 ($generated@@129 $generated@@183) $generated@@186) $generated@@185) ($generated@@53 $generated@@186 $generated@@184)))
 :pattern ( ($generated@@59 $generated@@61 $generated@@61 ($generated@@129 $generated@@183) $generated@@186))
 :pattern ( ($generated@@59 $generated@@61 $generated@@9 ($generated@@108 $generated@@183) $generated@@186))
)))
 :pattern ( ($generated@@35 $generated@@136 $generated@@183 ($generated@@137 $generated@@184 $generated@@185)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (< ($generated@@187 $generated@@189) ($generated@@188 ($generated@@52 $generated@@189 $generated@@190)))
 :pattern ( ($generated@@52 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (< ($generated@@187 $generated@@192) ($generated@@188 ($generated@@52 $generated@@191 $generated@@192)))
 :pattern ( ($generated@@52 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> ($generated@@53 $generated@@193 ($generated@@137 $generated@@194 $generated@@195)) (and (= ($generated@@98 $generated@@136 ($generated@@58 $generated@@136 $generated@@193)) $generated@@193) ($generated@@35 $generated@@136 ($generated@@58 $generated@@136 $generated@@193) ($generated@@137 $generated@@194 $generated@@195))))
 :pattern ( ($generated@@53 $generated@@193 ($generated@@137 $generated@@194 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@53 $generated@@198 ($generated@@40 $generated@@196 $generated@@197)) (and (= ($generated@@98 $generated@@39 ($generated@@58 $generated@@39 $generated@@198)) $generated@@198) ($generated@@35 $generated@@39 ($generated@@58 $generated@@39 $generated@@198) ($generated@@40 $generated@@196 $generated@@197))))
 :pattern ( ($generated@@53 $generated@@198 ($generated@@40 $generated@@196 $generated@@197)))
)))
(assert (forall (($generated@@199 T@U) ) (!  (not ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 $generated@@145 $generated@@199)))
 :pattern ( ($generated@@59 $generated@@61 $generated@@9 $generated@@145 $generated@@199))
)))
(assert  (and (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@200 $generated@@203 $generated@@204 $generated@@205 ($generated@@202 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@208 $generated@@209) $generated@@206)
 :weight 0
)) (and (forall (($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@200 $generated@@210 $generated@@211 $generated@@212 ($generated@@202 $generated@@210 $generated@@211 $generated@@212 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@200 $generated@@210 $generated@@211 $generated@@212 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@T) ($generated@@220 T@T) ($generated@@221 T@T) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@200 $generated@@219 $generated@@220 $generated@@221 ($generated@@202 $generated@@219 $generated@@220 $generated@@221 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@200 $generated@@219 $generated@@220 $generated@@221 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (= ($generated@@13 ($generated@@200 $generated@@44 $generated@@60 $generated@@9 ($generated@@201 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (or (not (= $generated@@232 $generated@@228)) (not true)) ($generated@@13 ($generated@@58 $generated@@9 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@44 ($generated@@62 $generated@@60 $generated@@61) $generated@@229 $generated@@232) $generated@@230)))) $generated@@231))
 :pattern ( ($generated@@200 $generated@@44 $generated@@60 $generated@@9 ($generated@@201 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (and (= ($generated@@161 ($generated@@40 $generated@@235 $generated@@236)) $generated@@3) (= ($generated@@234 ($generated@@40 $generated@@235 $generated@@236)) $generated@@6))
 :pattern ( ($generated@@40 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (! (= ($generated@@187 ($generated@@98 $generated@@39 $generated@@237)) ($generated@@188 $generated@@237))
 :pattern ( ($generated@@187 ($generated@@98 $generated@@39 $generated@@237)))
)))
(assert (forall (($generated@@238 T@U) ) (!  (=> ($generated@@53 $generated@@238 ($generated@@25 0)) (and (= ($generated@@98 $generated@@10 ($generated@@58 $generated@@10 $generated@@238)) $generated@@238) ($generated@@35 $generated@@10 ($generated@@58 $generated@@10 $generated@@238) ($generated@@25 0))))
 :pattern ( ($generated@@53 $generated@@238 ($generated@@25 0)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> ($generated@@53 $generated@@239 ($generated@@85 $generated@@240)) (and (= ($generated@@98 ($generated@@62 $generated@@61 $generated@@9) ($generated@@58 ($generated@@62 $generated@@61 $generated@@9) $generated@@239)) $generated@@239) ($generated@@35 ($generated@@62 $generated@@61 $generated@@9) ($generated@@58 ($generated@@62 $generated@@61 $generated@@9) $generated@@239) ($generated@@85 $generated@@240))))
 :pattern ( ($generated@@53 $generated@@239 ($generated@@85 $generated@@240)))
)))
(assert (forall (($generated@@241 T@U) ) (!  (=> ($generated@@53 $generated@@241 ($generated@@25 3)) (and (= ($generated@@98 $generated@@28 ($generated@@58 $generated@@28 $generated@@241)) $generated@@241) ($generated@@35 $generated@@28 ($generated@@58 $generated@@28 $generated@@241) ($generated@@25 3))))
 :pattern ( ($generated@@53 $generated@@241 ($generated@@25 3)))
)))
(assert (= ($generated@@161 $generated@@49) $generated@@4))
(assert (= ($generated@@234 $generated@@49) $generated@@7))
(assert (= ($generated@@161 $generated@@45) $generated@@5))
(assert (= ($generated@@234 $generated@@45) $generated@@7))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and ($generated@@89 $generated@@244) (and ($generated@@38 $generated@@242) (exists (($generated@@245 T@U) ) (! ($generated@@24 $generated@@39 $generated@@242 ($generated@@40 $generated@@243 $generated@@245) $generated@@244)
 :pattern ( ($generated@@24 $generated@@39 $generated@@242 ($generated@@40 $generated@@243 $generated@@245) $generated@@244))
)))) ($generated@@90 ($generated@@128 $generated@@242) $generated@@243 $generated@@244))
 :pattern ( ($generated@@90 ($generated@@128 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and ($generated@@89 $generated@@248) (and ($generated@@38 $generated@@246) (exists (($generated@@249 T@U) ) (! ($generated@@24 $generated@@39 $generated@@246 ($generated@@40 $generated@@249 $generated@@247) $generated@@248)
 :pattern ( ($generated@@24 $generated@@39 $generated@@246 ($generated@@40 $generated@@249 $generated@@247) $generated@@248))
)))) ($generated@@90 ($generated@@130 $generated@@246) $generated@@247 $generated@@248))
 :pattern ( ($generated@@90 ($generated@@130 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> ($generated@@35 $generated@@136 $generated@@250 ($generated@@137 $generated@@251 $generated@@252)) (and (and ($generated@@35 ($generated@@62 $generated@@61 $generated@@9) ($generated@@108 $generated@@250) ($generated@@85 $generated@@251)) ($generated@@35 ($generated@@62 $generated@@61 $generated@@9) ($generated@@120 $generated@@250) ($generated@@85 $generated@@252))) ($generated@@35 ($generated@@62 $generated@@61 $generated@@9) ($generated@@127 $generated@@250) ($generated@@85 ($generated@@40 $generated@@251 $generated@@252)))))
 :pattern ( ($generated@@35 $generated@@136 $generated@@250 ($generated@@137 $generated@@251 $generated@@252)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@258 true))
(let (($generated@@259  (=> (= (ControlFlow 0 2) (- 0 1)) (exists (($generated@@260 T@U) ) (! ($generated@@13 ($generated@@59 $generated@@61 $generated@@9 ($generated@@120 $generated@@253) ($generated@@98 $generated@@28 $generated@@260)))
 :pattern ( ($generated@@59 $generated@@61 $generated@@9 ($generated@@120 $generated@@253) ($generated@@98 $generated@@28 $generated@@260)))
)))))
(let (($generated@@261  (=> (= $generated@@254 ($generated@@201 $generated@@46 $generated@@255 $generated@@1 false)) (and (=> (= (ControlFlow 0 4) 2) $generated@@259) (=> (= (ControlFlow 0 4) 3) $generated@@258)))))
(let (($generated@@262  (=> (and ($generated@@89 $generated@@255) ($generated@@256 $generated@@255)) (=> (and (and (and ($generated@@35 $generated@@136 $generated@@253 ($generated@@137 $generated@@49 ($generated@@25 3))) ($generated@@24 $generated@@136 $generated@@253 ($generated@@137 $generated@@49 ($generated@@25 3)) $generated@@255)) (= 1 $generated@@257)) (and (or (not ($generated@@111 ($generated@@127 $generated@@253) $generated@@145)) (not ($generated@@111 ($generated@@108 $generated@@253) $generated@@145))) (= (ControlFlow 0 5) 4))) $generated@@261))))
$generated@@262)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
