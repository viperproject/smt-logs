(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T T@T) T@T)
(declare-fun $generated@@50 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@76 (Int) Int)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@U Int) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U Int Int T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated@@2) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@27 $generated@@2) $generated@@3))
(assert (forall (($generated@@30 T@U) ) (!  (not ($generated@@28 $generated@@29 $generated@@30))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30))
)))
(assert (= ($generated@@31 $generated@@29) 0))
(assert (= ($generated@@9 $generated@@33) 3))
(assert (forall (($generated@@37 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@37 $generated@@34)  (or (= $generated@@37 $generated@@35) (= ($generated@@36 $generated@@37) $generated@@34)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@37 $generated@@34))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@38 $generated@@33 $generated@@40 $generated@@39 $generated@@41) ($generated@@38 $generated@@33 $generated@@40 $generated@@34 $generated@@41))
 :pattern ( ($generated@@38 $generated@@33 $generated@@40 $generated@@39 $generated@@41))
 :pattern ( ($generated@@38 $generated@@33 $generated@@40 $generated@@34 $generated@@41))
)))
(assert (= ($generated@@25 $generated@@42) 0))
(assert (= ($generated@@43 $generated@@4 $generated@@8) $generated@@42))
(assert  (not ($generated@@44 $generated@@42)))
(assert  (and (and (and (and (and (and (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@46 $generated@@53 $generated@@54 ($generated@@50 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@57) $generated@@55)
 :weight 0
)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (or (= $generated@@62 $generated@@63) (= ($generated@@46 $generated@@58 $generated@@59 ($generated@@50 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@63) ($generated@@46 $generated@@58 $generated@@59 $generated@@61 $generated@@63)))
 :weight 0
))) (= ($generated@@9 $generated@@47) 4)) (= ($generated@@9 $generated@@48) 5)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (= ($generated@@9 ($generated@@49 $generated@@64 $generated@@65)) 6))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@51 ($generated@@49 $generated@@66 $generated@@67)) $generated@@66)
 :pattern ( ($generated@@49 $generated@@66 $generated@@67))
))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@52 ($generated@@49 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@49 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@38 $generated@@33 $generated@@70 $generated@@34 $generated@@71)  (or (= $generated@@70 $generated@@35) ($generated@@14 ($generated@@45 $generated@@10 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@33 ($generated@@49 $generated@@47 $generated@@48) $generated@@71 $generated@@70) $generated@@2)))))
 :pattern ( ($generated@@38 $generated@@33 $generated@@70 $generated@@34 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> ($generated@@72 $generated@@73 $generated@@74) (forall (($generated@@75 T@U) ) (!  (=> ($generated@@14 ($generated@@45 $generated@@10 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@33 ($generated@@49 $generated@@47 $generated@@48) $generated@@73 $generated@@75) $generated@@2))) ($generated@@14 ($generated@@45 $generated@@10 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@33 ($generated@@49 $generated@@47 $generated@@48) $generated@@74 $generated@@75) $generated@@2))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@33 ($generated@@49 $generated@@47 $generated@@48) $generated@@74 $generated@@75) $generated@@2))
)))
 :pattern ( ($generated@@72 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@77 Int) ) (! (= ($generated@@76 $generated@@77) $generated@@77)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@45 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@45 $generated@@83 $generated@@82))
)))
(assert ($generated@@44 $generated@@2))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and (and ($generated@@84 $generated@@85) (and (or (not (= $generated@@86 $generated@@35)) (not true)) (= ($generated@@36 $generated@@86) $generated@@34))) ($generated@@14 ($generated@@45 $generated@@10 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@33 ($generated@@49 $generated@@47 $generated@@48) $generated@@85 $generated@@86) $generated@@2)))) ($generated@@38 $generated@@11 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@33 ($generated@@49 $generated@@47 $generated@@48) $generated@@85 $generated@@86) $generated@@42)) $generated $generated@@85))
 :pattern ( ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@33 ($generated@@49 $generated@@47 $generated@@48) $generated@@85 $generated@@86) $generated@@42)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@87 ($generated@@81 $generated@@91 $generated@@88) $generated@@89 $generated@@90) ($generated@@38 $generated@@91 $generated@@88 $generated@@89 $generated@@90))
 :pattern ( ($generated@@87 ($generated@@81 $generated@@91 $generated@@88) $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> ($generated@@72 $generated@@92 $generated@@93) (=> ($generated@@87 $generated@@94 $generated@@95 $generated@@92) ($generated@@87 $generated@@94 $generated@@95 $generated@@93)))
 :pattern ( ($generated@@72 $generated@@92 $generated@@93) ($generated@@87 $generated@@94 $generated@@95 $generated@@92))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (!  (=> ($generated@@72 $generated@@96 $generated@@97) (=> ($generated@@38 $generated@@100 $generated@@98 $generated@@99 $generated@@96) ($generated@@38 $generated@@100 $generated@@98 $generated@@99 $generated@@97)))
 :pattern ( ($generated@@72 $generated@@96 $generated@@97) ($generated@@38 $generated@@100 $generated@@98 $generated@@99 $generated@@96))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@101 $generated@@102 $generated@@34) (and (= ($generated@@81 $generated@@33 ($generated@@45 $generated@@33 $generated@@102)) $generated@@102) ($generated@@32 $generated@@33 ($generated@@45 $generated@@33 $generated@@102) $generated@@34)))
 :pattern ( ($generated@@101 $generated@@102 $generated@@34))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@101 $generated@@103 $generated@@39) (and (= ($generated@@81 $generated@@33 ($generated@@45 $generated@@33 $generated@@103)) $generated@@103) ($generated@@32 $generated@@33 ($generated@@45 $generated@@33 $generated@@103) $generated@@39)))
 :pattern ( ($generated@@101 $generated@@103 $generated@@39))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@104 $generated@@39)  (and ($generated@@32 $generated@@33 $generated@@104 $generated@@34) (or (not (= $generated@@104 $generated@@35)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@104 $generated@@39))
 :pattern ( ($generated@@32 $generated@@33 $generated@@104 $generated@@34))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@28 $generated@@106 $generated@@107) (exists (($generated@@108 Int) ) (!  (and (and (<= 0 $generated@@108) (< $generated@@108 ($generated@@31 $generated@@106))) (= ($generated@@105 $generated@@106 $generated@@108) $generated@@107))
 :pattern ( ($generated@@105 $generated@@106 $generated@@108))
)))
 :pattern ( ($generated@@28 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or (not (= $generated@@109 $generated@@111)) (not true)) (=> (and ($generated@@72 $generated@@109 $generated@@110) ($generated@@72 $generated@@110 $generated@@111)) ($generated@@72 $generated@@109 $generated@@111)))
 :pattern ( ($generated@@72 $generated@@109 $generated@@110) ($generated@@72 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (and (= ($generated@@112 ($generated@@43 $generated@@113 $generated@@114)) $generated@@113) (= ($generated@@27 ($generated@@43 $generated@@113 $generated@@114)) $generated@@114))
 :pattern ( ($generated@@43 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@101 $generated@@115 $generated) (and (= ($generated@@81 $generated@@11 ($generated@@45 $generated@@11 $generated@@115)) $generated@@115) ($generated@@32 $generated@@11 ($generated@@45 $generated@@11 $generated@@115) $generated)))
 :pattern ( ($generated@@101 $generated@@115 $generated))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@101 ($generated@@81 $generated@@118 $generated@@116) $generated@@117) ($generated@@32 $generated@@118 $generated@@116 $generated@@117))
 :pattern ( ($generated@@101 ($generated@@81 $generated@@118 $generated@@116) $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (<= 0 ($generated@@31 $generated@@119))
 :pattern ( ($generated@@31 $generated@@119))
)))
(assert (= ($generated@@9 $generated@@120) 7))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@38 $generated@@120 $generated@@122 ($generated@@121 $generated@@123) $generated@@124) (forall (($generated@@125 Int) ) (!  (=> (and (<= 0 $generated@@125) (< $generated@@125 ($generated@@31 $generated@@122))) ($generated@@87 ($generated@@105 $generated@@122 $generated@@125) $generated@@123 $generated@@124))
 :pattern ( ($generated@@105 $generated@@122 $generated@@125))
)))
 :pattern ( ($generated@@38 $generated@@120 $generated@@122 ($generated@@121 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@121 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@121 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@26 ($generated@@121 $generated@@128)) $generated@@1)
 :pattern ( ($generated@@121 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@45 $generated@@130 ($generated@@81 $generated@@130 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@81 $generated@@130 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@84 $generated@@131) (and (or (not (= $generated@@132 $generated@@35)) (not true)) (= ($generated@@36 $generated@@132) $generated@@34))) ($generated@@32 $generated@@11 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@33 ($generated@@49 $generated@@47 $generated@@48) $generated@@131 $generated@@132) $generated@@42)) $generated))
 :pattern ( ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@33 ($generated@@49 $generated@@47 $generated@@48) $generated@@131 $generated@@132) $generated@@42)))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> ($generated@@101 $generated@@133 ($generated@@121 $generated@@134)) (and (= ($generated@@81 $generated@@120 ($generated@@45 $generated@@120 $generated@@133)) $generated@@133) ($generated@@32 $generated@@120 ($generated@@45 $generated@@120 $generated@@133) ($generated@@121 $generated@@134))))
 :pattern ( ($generated@@101 $generated@@133 ($generated@@121 $generated@@134)))
)))
(assert (= ($generated@@26 $generated@@34) $generated@@5))
(assert (= ($generated@@135 $generated@@34) $generated@@7))
(assert (= ($generated@@26 $generated@@39) $generated@@6))
(assert (= ($generated@@135 $generated@@39) $generated@@7))
(assert (forall (($generated@@136 Int) ) (! (= ($generated@@81 $generated@@11 ($generated@@15 ($generated@@76 $generated@@136))) ($generated@@78 $generated@@48 ($generated@@81 $generated@@11 ($generated@@15 $generated@@136))))
 :pattern ( ($generated@@81 $generated@@11 ($generated@@15 ($generated@@76 $generated@@136))))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@81 $generated@@138 ($generated@@78 $generated@@138 $generated@@137)) ($generated@@78 $generated@@48 ($generated@@81 $generated@@138 $generated@@137)))
 :pattern ( ($generated@@81 $generated@@138 ($generated@@78 $generated@@138 $generated@@137)))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= ($generated@@31 $generated@@139) 0) (= $generated@@139 $generated@@29))
 :pattern ( ($generated@@31 $generated@@139))
)))
(assert  (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@140 $generated@@143 $generated@@144 $generated@@145 ($generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@148 $generated@@149) $generated@@146)
 :weight 0
)) (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@155 $generated@@157) (= ($generated@@140 $generated@@150 $generated@@151 $generated@@152 ($generated@@142 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@140 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@140 $generated@@159 $generated@@160 $generated@@161 ($generated@@142 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@140 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 Int) ($generated@@172 Int) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@14 ($generated@@140 $generated@@33 $generated@@47 $generated@@10 ($generated@@141 $generated@@168 $generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))  (=> (and (or (not (= $generated@@174 $generated@@168)) (not true)) ($generated@@14 ($generated@@45 $generated@@10 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@33 ($generated@@49 $generated@@47 $generated@@48) $generated@@169 $generated@@174) $generated@@170)))) (exists (($generated@@176 Int) )  (and (and (<= $generated@@171 $generated@@176) (< $generated@@176 $generated@@172)) (= ($generated@@105 $generated@@173 $generated@@176) ($generated@@81 $generated@@33 $generated@@174))))))
 :pattern ( ($generated@@140 $generated@@33 $generated@@47 $generated@@10 ($generated@@141 $generated@@168 $generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! ($generated@@38 $generated@@11 $generated@@178 $generated $generated@@177)
 :pattern ( ($generated@@38 $generated@@11 $generated@@178 $generated $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@32 $generated@@120 $generated@@179 ($generated@@121 $generated@@180)) (forall (($generated@@181 Int) ) (!  (=> (and (<= 0 $generated@@181) (< $generated@@181 ($generated@@31 $generated@@179))) ($generated@@101 ($generated@@105 $generated@@179 $generated@@181) $generated@@180))
 :pattern ( ($generated@@105 $generated@@179 $generated@@181))
)))
 :pattern ( ($generated@@32 $generated@@120 $generated@@179 ($generated@@121 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ) (! ($generated@@32 $generated@@11 $generated@@182 $generated)
 :pattern ( ($generated@@32 $generated@@11 $generated@@182 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@191 true))
(let (($generated@@192  (=> (and (and ($generated@@32 $generated@@33 $generated@@183 $generated@@39) ($generated@@38 $generated@@33 $generated@@183 $generated@@39 $generated@@184)) ($generated@@28 $generated@@185 ($generated@@81 $generated@@33 $generated@@183))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@183 $generated@@35)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@14 ($generated@@140 $generated@@33 $generated@@47 $generated@@10 $generated@@186 $generated@@183 $generated@@42))) (=> ($generated@@14 ($generated@@140 $generated@@33 $generated@@47 $generated@@10 $generated@@186 $generated@@183 $generated@@42)) (=> (and (and (and ($generated@@32 $generated@@33 $generated@@187 $generated@@39) ($generated@@38 $generated@@33 $generated@@187 $generated@@39 $generated@@184)) ($generated@@28 $generated@@185 ($generated@@81 $generated@@33 $generated@@187))) (and (or (not (= $generated@@183 $generated@@187)) (not true)) (= (ControlFlow 0 2) (- 0 1)))) (or (or (or (not (= $generated@@183 $generated@@187)) (not true)) (or (not (= $generated@@42 $generated@@42)) (not true))) (= ($generated@@76 10) ($generated@@76 10))))))))))
(let (($generated@@193  (=> (= $generated@@186 ($generated@@141 $generated@@35 $generated@@184 $generated@@2 0 ($generated@@31 $generated@@185) $generated@@185)) (and (=> (= (ControlFlow 0 6) 2) $generated@@192) (=> (= (ControlFlow 0 6) 5) $generated@@191)))))
(let (($generated@@194  (=> (and (and (and ($generated@@84 $generated@@184) ($generated@@188 $generated@@184)) (and (or (not (= $generated@@189 $generated@@35)) (not true)) (and ($generated@@32 $generated@@33 $generated@@189 $generated@@39) ($generated@@38 $generated@@33 $generated@@189 $generated@@39 $generated@@184)))) (and (and ($generated@@32 $generated@@120 $generated@@185 ($generated@@121 $generated@@39)) ($generated@@38 $generated@@120 $generated@@185 ($generated@@121 $generated@@39) $generated@@184)) (and (= 1 $generated@@190) (= (ControlFlow 0 7) 6)))) $generated@@193)))
$generated@@194)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
