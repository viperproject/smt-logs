(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@38 () Int)
(declare-fun $generated@@39 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@90 (T@U) Int)
(declare-fun $generated@@91 (T@U) Int)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@103 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@T T@T) T@T)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated@@21) $generated@@1))
(assert (= ($generated@@4 $generated@@23) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@25 $generated@@27) ($generated@@22 $generated@@23 $generated@@21 ($generated@@24 $generated@@26) $generated@@27))
 :pattern ( ($generated@@22 $generated@@23 $generated@@21 ($generated@@24 $generated@@26) $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ) (! ($generated@@28 $generated@@23 $generated@@21 ($generated@@24 $generated@@29))
 :pattern ( ($generated@@28 $generated@@23 $generated@@21 ($generated@@24 $generated@@29)))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@T) ) (! (= ($generated@@30 $generated@@32 $generated@@31) $generated@@31)
 :pattern ( ($generated@@30 $generated@@32 $generated@@31))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@28 $generated@@23 ($generated@@33 $generated@@36 $generated@@37) ($generated@@24 $generated@@35))  (and ($generated@@34 $generated@@36 $generated@@35) ($generated@@28 $generated@@23 $generated@@37 ($generated@@24 $generated@@35))))
 :pattern ( ($generated@@28 $generated@@23 ($generated@@33 $generated@@36 $generated@@37) ($generated@@24 $generated@@35)))
)))
(assert  (=> (<= 1 $generated@@38) (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (or ($generated@@41 $generated@@45 $generated@@47 $generated@@48) (and (< 1 $generated@@38) (and ($generated@@28 $generated@@23 $generated@@47 ($generated@@24 $generated@@45)) ($generated@@28 $generated@@23 $generated@@48 ($generated@@24 $generated@@45))))) (and (=> (not ($generated@@42 $generated@@47)) (let (($generated@@49 ($generated@@43 $generated@@47)))
($generated@@41 $generated@@45 $generated@@48 $generated@@49))) (= ($generated@@39 $generated@@45 ($generated@@40 $generated@@46) $generated@@47 $generated@@48) (ite ($generated@@42 $generated@@47) $generated@@48 (let (($generated@@50 ($generated@@43 $generated@@47)))
(let (($generated@@51 ($generated@@44 $generated@@47)))
($generated@@33 $generated@@51 ($generated@@39 $generated@@45 $generated@@46 $generated@@48 $generated@@50))))))))
 :pattern ( ($generated@@39 $generated@@45 ($generated@@40 $generated@@46) $generated@@47 $generated@@48))
))))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@42 $generated@@52) (= ($generated@@20 $generated@@52) $generated@@1))
 :pattern ( ($generated@@42 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@53 $generated@@54) (= ($generated@@20 $generated@@54) $generated@@2))
 :pattern ( ($generated@@53 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 ($generated@@55 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@55 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@53 $generated@@59) (exists (($generated@@60 T@U) ($generated@@61 T@U) ) (= $generated@@59 ($generated@@33 $generated@@60 $generated@@61))))
 :pattern ( ($generated@@53 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@42 $generated@@62) (= $generated@@62 $generated@@21))
 :pattern ( ($generated@@42 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@63 ($generated@@56 $generated@@67 $generated@@64) $generated@@65 $generated@@66) ($generated@@22 $generated@@67 $generated@@64 $generated@@65 $generated@@66))
 :pattern ( ($generated@@63 ($generated@@56 $generated@@67 $generated@@64) $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@70 T@U) ) (!  (and (= ($generated@@68 ($generated@@24 $generated@@70)) $generated@@0) (= ($generated@@69 ($generated@@24 $generated@@70)) $generated@@3))
 :pattern ( ($generated@@24 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> ($generated@@28 $generated@@23 $generated@@72 ($generated@@24 $generated@@71)) (or ($generated@@42 $generated@@72) ($generated@@53 $generated@@72)))
 :pattern ( ($generated@@53 $generated@@72) ($generated@@28 $generated@@23 $generated@@72 ($generated@@24 $generated@@71)))
 :pattern ( ($generated@@42 $generated@@72) ($generated@@28 $generated@@23 $generated@@72 ($generated@@24 $generated@@71)))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@34 ($generated@@56 $generated@@75 $generated@@73) $generated@@74) ($generated@@28 $generated@@75 $generated@@73 $generated@@74))
 :pattern ( ($generated@@34 ($generated@@56 $generated@@75 $generated@@73) $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@20 ($generated@@33 $generated@@76 $generated@@77)) $generated@@2)
 :pattern ( ($generated@@33 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@44 ($generated@@33 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@33 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@43 ($generated@@33 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@33 $generated@@80 $generated@@81))
)))
(assert  (=> (<= 1 $generated@@38) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (or ($generated@@41 $generated@@82 $generated@@84 $generated@@85) (and (< 1 $generated@@38) (and ($generated@@28 $generated@@23 $generated@@84 ($generated@@24 $generated@@82)) ($generated@@28 $generated@@23 $generated@@85 ($generated@@24 $generated@@82))))) ($generated@@28 $generated@@23 ($generated@@39 $generated@@82 $generated@@83 $generated@@84 $generated@@85) ($generated@@24 $generated@@82)))
 :pattern ( ($generated@@39 $generated@@82 $generated@@83 $generated@@84 $generated@@85))
))))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 ($generated@@24 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@24 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@55 $generated@@89 ($generated@@56 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@56 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (< ($generated@@90 $generated@@92) ($generated@@91 ($generated@@33 $generated@@92 $generated@@93)))
 :pattern ( ($generated@@33 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (< ($generated@@91 $generated@@95) ($generated@@91 ($generated@@33 $generated@@94 $generated@@95)))
 :pattern ( ($generated@@33 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and ($generated@@25 $generated@@98) (and ($generated@@53 $generated@@96) ($generated@@22 $generated@@23 $generated@@96 ($generated@@24 $generated@@97) $generated@@98))) ($generated@@63 ($generated@@44 $generated@@96) $generated@@97 $generated@@98))
 :pattern ( ($generated@@63 ($generated@@44 $generated@@96) $generated@@97 $generated@@98))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@99 $generated@@110 $generated@@111 $generated@@112 ($generated@@106 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@115 $generated@@116) $generated@@113)
 :weight 0
)) (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@99 $generated@@117 $generated@@118 $generated@@119 ($generated@@106 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@99 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@99 $generated@@126 $generated@@127 $generated@@128 ($generated@@106 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@99 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)))) (= ($generated@@4 $generated@@100) 4)) (= ($generated@@4 $generated@@101) 5)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@103 $generated@@135 $generated@@136 ($generated@@107 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@137) $generated@@139) $generated@@137)
 :weight 0
))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@103 $generated@@140 $generated@@141 ($generated@@107 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@103 $generated@@140 $generated@@141 $generated@@143 $generated@@145)))
 :weight 0
))) (= ($generated@@4 $generated@@104) 6)) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (= ($generated@@4 ($generated@@105 $generated@@146 $generated@@147)) 7))) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (! (= ($generated@@108 ($generated@@105 $generated@@148 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@105 $generated@@148 $generated@@149))
))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (! (= ($generated@@109 ($generated@@105 $generated@@150 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@105 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 Bool) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@9 ($generated@@99 $generated@@100 $generated@@101 $generated@@5 ($generated@@102 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@156 $generated@@157))  (=> (and (or (not (= $generated@@156 $generated@@152)) (not true)) ($generated@@9 ($generated@@55 $generated@@5 ($generated@@103 $generated@@101 $generated@@104 ($generated@@103 $generated@@100 ($generated@@105 $generated@@101 $generated@@104) $generated@@153 $generated@@156) $generated@@154)))) $generated@@155))
 :pattern ( ($generated@@99 $generated@@100 $generated@@101 $generated@@5 ($generated@@102 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@156 $generated@@157))
)))
(assert  (=> (<= 1 $generated@@38) (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (or ($generated@@41 $generated@@159 $generated@@161 $generated@@162) (and (< 1 $generated@@38) (and (and ($generated@@28 $generated@@23 $generated@@161 ($generated@@24 $generated@@159)) ($generated@@22 $generated@@23 $generated@@161 ($generated@@24 $generated@@159) $generated@@158)) (and ($generated@@28 $generated@@23 $generated@@162 ($generated@@24 $generated@@159)) ($generated@@22 $generated@@23 $generated@@162 ($generated@@24 $generated@@159) $generated@@158))))) ($generated@@25 $generated@@158)) ($generated@@22 $generated@@23 ($generated@@39 $generated@@159 $generated@@160 $generated@@161 $generated@@162) ($generated@@24 $generated@@159) $generated@@158))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@39 $generated@@159 $generated@@160 $generated@@161 $generated@@162) ($generated@@24 $generated@@159) $generated@@158))
))))
(assert  (=> (<= 1 $generated@@38) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (or ($generated@@41 $generated@@163 ($generated@@30 $generated@@23 $generated@@165) ($generated@@30 $generated@@23 $generated@@166)) (and (< 1 $generated@@38) (and ($generated@@28 $generated@@23 $generated@@165 ($generated@@24 $generated@@163)) ($generated@@28 $generated@@23 $generated@@166 ($generated@@24 $generated@@163))))) (and (=> (not ($generated@@9 ($generated@@30 $generated@@5 ($generated@@8 ($generated@@42 ($generated@@30 $generated@@23 $generated@@165)))))) (let (($generated@@167 ($generated@@30 $generated@@23 ($generated@@43 ($generated@@30 $generated@@23 $generated@@165)))))
($generated@@41 $generated@@163 ($generated@@30 $generated@@23 $generated@@166) $generated@@167))) (= ($generated@@39 $generated@@163 ($generated@@40 $generated@@164) ($generated@@30 $generated@@23 $generated@@165) ($generated@@30 $generated@@23 $generated@@166)) (ite ($generated@@42 ($generated@@30 $generated@@23 $generated@@165)) $generated@@166 (let (($generated@@168 ($generated@@30 $generated@@23 ($generated@@43 ($generated@@30 $generated@@23 $generated@@165)))))
(let (($generated@@169 ($generated@@30 $generated@@104 ($generated@@44 ($generated@@30 $generated@@23 $generated@@165)))))
($generated@@30 $generated@@23 ($generated@@33 $generated@@169 ($generated@@30 $generated@@23 ($generated@@39 $generated@@163 ($generated@@40 $generated@@164) ($generated@@30 $generated@@23 $generated@@166) $generated@@168))))))))))
 :weight 3
 :pattern ( ($generated@@39 $generated@@163 ($generated@@40 $generated@@164) ($generated@@30 $generated@@23 $generated@@165) ($generated@@30 $generated@@23 $generated@@166)))
))))
(assert (forall (($generated@@170 T@U) ) (! (= ($generated@@90 ($generated@@56 $generated@@23 $generated@@170)) ($generated@@91 $generated@@170))
 :pattern ( ($generated@@90 ($generated@@56 $generated@@23 $generated@@170)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@39 $generated@@171 ($generated@@40 $generated@@172) $generated@@173 $generated@@174) ($generated@@39 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
 :pattern ( ($generated@@39 $generated@@171 ($generated@@40 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@34 $generated@@176 ($generated@@24 $generated@@175)) (and (= ($generated@@56 $generated@@23 ($generated@@55 $generated@@23 $generated@@176)) $generated@@176) ($generated@@28 $generated@@23 ($generated@@55 $generated@@23 $generated@@176) ($generated@@24 $generated@@175))))
 :pattern ( ($generated@@34 $generated@@176 ($generated@@24 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and ($generated@@25 $generated@@179) (and ($generated@@53 $generated@@177) ($generated@@22 $generated@@23 $generated@@177 ($generated@@24 $generated@@178) $generated@@179))) ($generated@@22 $generated@@23 ($generated@@43 $generated@@177) ($generated@@24 $generated@@178) $generated@@179))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@43 $generated@@177) ($generated@@24 $generated@@178) $generated@@179))
)))
(assert (= $generated@@21 ($generated@@30 $generated@@23 $generated@@21)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@33 ($generated@@30 $generated@@104 $generated@@180) ($generated@@30 $generated@@23 $generated@@181)) ($generated@@30 $generated@@23 ($generated@@33 $generated@@180 $generated@@181)))
 :pattern ( ($generated@@33 ($generated@@30 $generated@@104 $generated@@180) ($generated@@30 $generated@@23 $generated@@181)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@56 $generated@@183 ($generated@@30 $generated@@183 $generated@@182)) ($generated@@30 $generated@@104 ($generated@@56 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@56 $generated@@183 ($generated@@30 $generated@@183 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@25 $generated@@187) (= ($generated@@22 $generated@@23 ($generated@@33 $generated@@185 $generated@@186) ($generated@@24 $generated@@184) $generated@@187)  (and ($generated@@63 $generated@@185 $generated@@184 $generated@@187) ($generated@@22 $generated@@23 $generated@@186 ($generated@@24 $generated@@184) $generated@@187))))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@33 $generated@@185 $generated@@186) ($generated@@24 $generated@@184) $generated@@187))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@201 true))
(let (($generated@@202  (=> (and (and (= $generated@@188 ($generated@@33 $generated@@189 $generated@@190)) ($generated@@34 $generated@@189 $generated@@191)) (and ($generated@@28 $generated@@23 $generated@@190 ($generated@@24 $generated@@191)) (= $generated@@192 $generated@@190))) (=> (and (and (and ($generated@@28 $generated@@23 $generated@@192 ($generated@@24 $generated@@191)) (= $generated@@193 $generated@@192)) (and (= $generated@@194 $generated@@189) ($generated@@34 $generated@@194 $generated@@191))) (and (and (= $generated@@195 $generated@@194) ($generated@@22 $generated@@23 $generated@@196 ($generated@@24 $generated@@191) $generated@@197)) (and ($generated@@22 $generated@@23 $generated@@193 ($generated@@24 $generated@@191) $generated@@197) (= (ControlFlow 0 4) (- 0 3))))) (or (< ($generated@@91 $generated@@196) ($generated@@91 $generated@@188)) (and (= ($generated@@91 $generated@@196) ($generated@@91 $generated@@188)) (< ($generated@@91 $generated@@193) ($generated@@91 $generated@@196))))))))
(let (($generated@@203  (=> (or (not (= $generated@@188 $generated@@21)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@202) (=> (= (ControlFlow 0 6) 5) $generated@@201)))))
(let (($generated@@204 true))
(let (($generated@@205 true))
(let (($generated@@206  (=> (= $generated@@198 ($generated@@102 $generated@@199 $generated@@197 $generated false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@205) (=> (= (ControlFlow 0 7) 2) $generated@@204)) (=> (= (ControlFlow 0 7) 6) $generated@@203)))))
(let (($generated@@207  (=> (and ($generated@@25 $generated@@197) ($generated@@200 $generated@@197)) (=> (and (and ($generated@@28 $generated@@23 $generated@@188 ($generated@@24 $generated@@191)) ($generated@@28 $generated@@23 $generated@@196 ($generated@@24 $generated@@191))) (and (= 1 $generated@@38) (= (ControlFlow 0 8) 7))) $generated@@206))))
$generated@@207))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
