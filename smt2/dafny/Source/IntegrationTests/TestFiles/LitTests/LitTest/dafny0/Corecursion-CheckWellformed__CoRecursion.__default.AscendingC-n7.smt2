(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@81 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@137 (T@U T@U Int) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 (T@U Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@25 ($generated@@24 $generated@@26 $generated@@27) $generated@@27)
 :pattern ( ($generated@@24 $generated@@26 $generated@@27))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@28 $generated@@30) ($generated@@25 ($generated@@24 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@24 $generated@@28 $generated@@29) ($generated@@25 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! ($generated@@31 $generated@@9 $generated@@33 $generated@@32 $generated@@34)
 :pattern ( ($generated@@31 $generated@@9 $generated@@33 $generated@@32 $generated@@34))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@25 ($generated@@24 $generated@@35 $generated@@36) $generated@@37)  (or (= $generated@@37 $generated@@36) ($generated@@25 $generated@@35 $generated@@37)))
 :pattern ( ($generated@@25 ($generated@@24 $generated@@35 $generated@@36) $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ) (!  (not ($generated@@25 $generated@@38 $generated@@39))
 :pattern ( ($generated@@25 $generated@@38 $generated@@39))
)))
(assert (= ($generated@@7 $generated@@42) 3))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> ($generated@@41 $generated@@42 $generated@@45 ($generated@@43 $generated@@44)) ($generated@@40 $generated@@45))
 :pattern ( ($generated@@40 $generated@@45) ($generated@@41 $generated@@42 $generated@@45 ($generated@@43 $generated@@44)))
)))
(assert (forall (($generated@@47 Int) ) (! (= ($generated@@46 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@41 $generated@@42 ($generated@@51 $generated@@54 $generated@@55) ($generated@@43 $generated@@53))  (and ($generated@@52 $generated@@54 $generated@@53) ($generated@@41 $generated@@42 $generated@@55 ($generated@@43 $generated@@53))))
 :pattern ( ($generated@@41 $generated@@42 ($generated@@51 $generated@@54 $generated@@55) ($generated@@43 $generated@@53)))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@56 $generated@@57 $generated@@58) (forall (($generated@@59 T@U) ) (!  (=> ($generated@@25 $generated@@57 $generated@@59) ($generated@@25 $generated@@58 $generated@@59))
 :pattern ( ($generated@@25 $generated@@57 $generated@@59))
 :pattern ( ($generated@@25 $generated@@58 $generated@@59))
)))
 :pattern ( ($generated@@56 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@40 $generated@@61) (= ($generated@@60 $generated@@61) $generated@@4))
 :pattern ( ($generated@@40 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@63 $generated@@65 ($generated@@62 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@62 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@40 $generated@@66) (exists (($generated@@67 T@U) ($generated@@68 T@U) ) (= $generated@@66 ($generated@@51 $generated@@67 $generated@@68))))
 :pattern ( ($generated@@40 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@41 $generated@@9 $generated@@69 $generated@@32) (<= ($generated@@46 0) ($generated@@14 $generated@@69)))
 :pattern ( ($generated@@41 $generated@@9 $generated@@69 $generated@@32))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@63 $generated@@74 $generated@@71) $generated@@72 $generated@@73) ($generated@@31 $generated@@74 $generated@@71 $generated@@72 $generated@@73))
 :pattern ( ($generated@@70 ($generated@@63 $generated@@74 $generated@@71) $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ) (!  (and (= ($generated@@23 ($generated@@43 $generated@@76)) $generated@@3) (= ($generated@@75 ($generated@@43 $generated@@76)) $generated@@6))
 :pattern ( ($generated@@43 $generated@@76))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@77 $generated@@88 $generated@@89 $generated@@90 ($generated@@84 $generated@@88 $generated@@89 $generated@@90 $generated@@92 $generated@@93 $generated@@94 $generated@@91) $generated@@93 $generated@@94) $generated@@91)
 :weight 0
)) (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (or (= $generated@@100 $generated@@102) (= ($generated@@77 $generated@@95 $generated@@96 $generated@@97 ($generated@@84 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@100 $generated@@101 $generated@@98) $generated@@102 $generated@@103) ($generated@@77 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@102 $generated@@103)))
 :weight 0
)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@110 $generated@@112) (= ($generated@@77 $generated@@104 $generated@@105 $generated@@106 ($generated@@84 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@111 $generated@@112) ($generated@@77 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@111 $generated@@112)))
 :weight 0
)))) (= ($generated@@7 $generated@@78) 4)) (= ($generated@@7 $generated@@79) 5)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@81 $generated@@113 $generated@@114 ($generated@@85 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@115) $generated@@117) $generated@@115)
 :weight 0
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@81 $generated@@118 $generated@@119 ($generated@@85 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@81 $generated@@118 $generated@@119 $generated@@121 $generated@@123)))
 :weight 0
))) (= ($generated@@7 $generated@@82) 6)) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (= ($generated@@7 ($generated@@83 $generated@@124 $generated@@125)) 7))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@126 $generated@@127)) $generated@@126)
 :pattern ( ($generated@@83 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@128 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@83 $generated@@128 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@12 ($generated@@77 $generated@@78 $generated@@79 $generated@@8 ($generated@@80 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))  (=> (and (or (not (= $generated@@134 $generated@@130)) (not true)) ($generated@@12 ($generated@@62 $generated@@8 ($generated@@81 $generated@@79 $generated@@82 ($generated@@81 $generated@@78 ($generated@@83 $generated@@79 $generated@@82) $generated@@131 $generated@@134) $generated@@132)))) (= $generated@@134 $generated@@133)))
 :pattern ( ($generated@@77 $generated@@78 $generated@@79 $generated@@8 ($generated@@80 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@52 $generated@@136 $generated@@32) (and (= ($generated@@63 $generated@@9 ($generated@@62 $generated@@9 $generated@@136)) $generated@@136) ($generated@@41 $generated@@9 ($generated@@62 $generated@@9 $generated@@136) $generated@@32)))
 :pattern ( ($generated@@52 $generated@@136 $generated@@32))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 Int) ) (! (= ($generated@@137 ($generated@@138 $generated@@139) $generated@@140 $generated@@141) ($generated@@137 $generated@@139 $generated@@140 $generated@@141))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@142 $generated@@143 $generated@@144) (= $generated@@143 $generated@@144))
 :pattern ( ($generated@@142 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@52 $generated@@145 $generated) (and (= ($generated@@63 $generated@@9 ($generated@@62 $generated@@9 $generated@@145)) $generated@@145) ($generated@@41 $generated@@9 ($generated@@62 $generated@@9 $generated@@145) $generated)))
 :pattern ( ($generated@@52 $generated@@145 $generated))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@52 ($generated@@63 $generated@@148 $generated@@146) $generated@@147) ($generated@@41 $generated@@148 $generated@@146 $generated@@147))
 :pattern ( ($generated@@52 ($generated@@63 $generated@@148 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@60 ($generated@@51 $generated@@149 $generated@@150)) $generated@@4)
 :pattern ( ($generated@@51 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@151 ($generated@@51 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@51 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@154 ($generated@@51 $generated@@155 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@51 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@43 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@43 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@62 $generated@@160 ($generated@@63 $generated@@160 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@63 $generated@@160 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and ($generated@@161 $generated@@164) (and ($generated@@40 $generated@@162) ($generated@@31 $generated@@42 $generated@@162 ($generated@@43 $generated@@163) $generated@@164))) ($generated@@70 ($generated@@151 $generated@@162) $generated@@163 $generated@@164))
 :pattern ( ($generated@@70 ($generated@@151 $generated@@162) $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@52 $generated@@166 ($generated@@43 $generated@@165)) (and (= ($generated@@63 $generated@@42 ($generated@@62 $generated@@42 $generated@@166)) $generated@@166) ($generated@@41 $generated@@42 ($generated@@62 $generated@@42 $generated@@166) ($generated@@43 $generated@@165))))
 :pattern ( ($generated@@52 $generated@@166 ($generated@@43 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and ($generated@@161 $generated@@169) (and ($generated@@40 $generated@@167) ($generated@@31 $generated@@42 $generated@@167 ($generated@@43 $generated@@168) $generated@@169))) ($generated@@31 $generated@@42 ($generated@@154 $generated@@167) ($generated@@43 $generated@@168) $generated@@169))
 :pattern ( ($generated@@31 $generated@@42 ($generated@@154 $generated@@167) ($generated@@43 $generated@@168) $generated@@169))
)))
(assert (= ($generated@@23 $generated@@32) $generated@@2))
(assert (= ($generated@@75 $generated@@32) $generated@@5))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@142 $generated@@170 $generated@@171) (forall (($generated@@172 T@U) ) (! (= ($generated@@25 $generated@@170 $generated@@172) ($generated@@25 $generated@@171 $generated@@172))
 :pattern ( ($generated@@25 $generated@@170 $generated@@172))
 :pattern ( ($generated@@25 $generated@@171 $generated@@172))
)))
 :pattern ( ($generated@@142 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@173 Int) ) (! (= ($generated@@63 $generated@@9 ($generated@@13 ($generated@@46 $generated@@173))) ($generated@@48 $generated@@82 ($generated@@63 $generated@@9 ($generated@@13 $generated@@173))))
 :pattern ( ($generated@@63 $generated@@9 ($generated@@13 ($generated@@46 $generated@@173))))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@63 $generated@@175 ($generated@@48 $generated@@175 $generated@@174)) ($generated@@48 $generated@@82 ($generated@@63 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@63 $generated@@175 ($generated@@48 $generated@@175 $generated@@174)))
)))
(assert  (=> (<= 1 $generated@@176) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Int) ) (!  (=> (or ($generated@@177 $generated@@179 $generated@@180) (and (< 1 $generated@@176) (and ($generated@@161 $generated@@179) (<= ($generated@@46 0) $generated@@180)))) ($generated@@41 $generated@@42 ($generated@@137 $generated@@178 $generated@@179 $generated@@180) ($generated@@43 $generated)))
 :pattern ( ($generated@@137 $generated@@178 $generated@@179 $generated@@180))
))))
(assert  (=> (<= 1 $generated@@176) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Int) ) (!  (=> (or ($generated@@177 $generated@@182 $generated@@183) (and (< 1 $generated@@176) (and ($generated@@161 $generated@@182) (<= ($generated@@46 0) $generated@@183)))) (and ($generated@@177 $generated@@182 (+ $generated@@183 1)) (= ($generated@@137 ($generated@@138 $generated@@181) $generated@@182 $generated@@183) ($generated@@51 ($generated@@63 $generated@@9 ($generated@@13 $generated@@183)) ($generated@@137 $generated@@181 $generated@@182 (+ $generated@@183 1))))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@181) $generated@@182 $generated@@183) ($generated@@161 $generated@@182))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! ($generated@@31 $generated@@9 $generated@@185 $generated $generated@@184)
 :pattern ( ($generated@@31 $generated@@9 $generated@@185 $generated $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@161 $generated@@189) (= ($generated@@31 $generated@@42 ($generated@@51 $generated@@187 $generated@@188) ($generated@@43 $generated@@186) $generated@@189)  (and ($generated@@70 $generated@@187 $generated@@186 $generated@@189) ($generated@@31 $generated@@42 $generated@@188 ($generated@@43 $generated@@186) $generated@@189))))
 :pattern ( ($generated@@31 $generated@@42 ($generated@@51 $generated@@187 $generated@@188) ($generated@@43 $generated@@186) $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (! ($generated@@41 $generated@@9 $generated@@190 $generated)
 :pattern ( ($generated@@41 $generated@@9 $generated@@190 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () Bool)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@199  (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@41 $generated@@9 ($generated@@13 (+ $generated@@191 1)) $generated@@32)) (=> ($generated@@41 $generated@@9 ($generated@@13 (+ $generated@@191 1)) $generated@@32) (=> (= $generated@@192 (+ $generated@@191 1)) (=> (and ($generated@@31 $generated@@9 ($generated@@13 $generated@@192) $generated@@32 $generated@@193) (= $generated@@194 (forall (($generated@@200 T@U) ($generated@@201 T@U) )  (=> (and (and (or (not (= $generated@@200 $generated@@195)) (not true)) ($generated@@12 ($generated@@62 $generated@@8 ($generated@@81 $generated@@79 $generated@@82 ($generated@@81 $generated@@78 ($generated@@83 $generated@@79 $generated@@82) $generated@@193 $generated@@200) $generated@@1)))) (= $generated@@200 $generated@@195)) ($generated@@12 ($generated@@77 $generated@@78 $generated@@79 $generated@@8 $generated@@196 $generated@@200 $generated@@201)))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (or (<= 0 $generated@@191) (and ($generated@@56 ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195)) ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195))) (not ($generated@@56 ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195)) ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195)))))) (= $generated@@192 $generated@@191))) (=> (or (or (<= 0 $generated@@191) (and ($generated@@56 ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195)) ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195))) (not ($generated@@56 ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195)) ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195)))))) (= $generated@@192 $generated@@191)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (and ($generated@@56 ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195)) ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195))) (not ($generated@@56 ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195)) ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195))))) (and ($generated@@142 ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195)) ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195))) (< $generated@@192 $generated@@191)))) (=> (or (and ($generated@@56 ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195)) ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195))) (not ($generated@@56 ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195)) ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195))))) (and ($generated@@142 ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195)) ($generated@@24 $generated@@38 ($generated@@63 $generated@@78 $generated@@195))) (< $generated@@192 $generated@@191))) (=> (and ($generated@@177 $generated@@193 (+ $generated@@191 1)) ($generated@@40 ($generated@@137 ($generated@@138 $generated@@197) $generated@@193 (+ $generated@@191 1)))) (=> (and (and (= ($generated@@137 ($generated@@138 $generated@@197) $generated@@193 $generated@@191) ($generated@@51 ($generated@@63 $generated@@9 ($generated@@13 $generated@@191)) ($generated@@137 ($generated@@138 $generated@@197) $generated@@193 (+ $generated@@191 1)))) ($generated@@177 $generated@@193 (+ $generated@@191 1))) (and ($generated@@41 $generated@@42 ($generated@@137 ($generated@@138 $generated@@197) $generated@@193 $generated@@191) ($generated@@43 $generated)) (= (ControlFlow 0 3) (- 0 2)))) $generated@@194))))))))))))
(let (($generated@@202 true))
(let (($generated@@203  (=> (= $generated@@196 ($generated@@80 $generated@@195 $generated@@193 $generated@@1 $generated@@195)) (and (=> (= (ControlFlow 0 7) 1) $generated@@202) (=> (= (ControlFlow 0 7) 3) $generated@@199)))))
(let (($generated@@204  (=> (and (and (and ($generated@@161 $generated@@193) ($generated@@198 $generated@@193)) (<= ($generated@@46 0) $generated@@191)) (and (= 1 $generated@@176) (= (ControlFlow 0 8) 7))) $generated@@203)))
$generated@@204)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 4))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
