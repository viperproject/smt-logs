(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U T@U) Bool)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@35 (Int) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (Int) Int)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@56 (T@U) Int)
(declare-fun $generated@@57 (Int) T@U)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@117 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@118 (T@T T@T) T@T)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@T) T@T)
(declare-fun $generated@@122 (T@T) T@T)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@28 $generated@@29) (=> ($generated@@23 $generated@@26 $generated@@28 $generated@@27) ($generated@@23 $generated@@26 $generated@@29 $generated@@27)))
 :pattern ( ($generated@@23 $generated@@26 $generated@@28 $generated@@27) ($generated@@24 $generated@@28 $generated@@30) ($generated@@24 $generated@@29 $generated@@30))
))))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@32 $generated@@33)) ($generated@@25 $generated@@31 $generated@@33))
 :pattern ( ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@32 $generated@@33))
 :pattern ( ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@31 $generated@@33))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 Int) ($generated@@39 Int) ) (!  (=> (and (and (<= 0 $generated@@38) (<= 0 $generated@@39)) (<= (+ $generated@@38 $generated@@39) ($generated@@36 $generated@@37))) (= ($generated@@34 ($generated@@34 $generated@@37 ($generated@@35 $generated@@38)) ($generated@@35 $generated@@39)) ($generated@@34 $generated@@37 ($generated@@35 (+ $generated@@38 $generated@@39)))))
 :pattern ( ($generated@@34 ($generated@@34 $generated@@37 ($generated@@35 $generated@@38)) ($generated@@35 $generated@@39)))
)))
(assert (= ($generated@@40 $generated@@41) $generated@@3))
(assert (= ($generated@@6 $generated@@43) 3))
(assert ($generated@@42 $generated@@43 $generated@@41 $generated@@44))
(assert (forall (($generated@@46 Int) ) (! (= ($generated@@45 $generated@@46) $generated@@46)
 :pattern ( ($generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 $generated@@48) $generated@@48)
 :pattern ( ($generated@@47 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@50 $generated@@51) (= ($generated@@40 $generated@@51) $generated@@2))
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@52 $generated@@53) (= ($generated@@40 $generated@@53) $generated@@3))
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (or ($generated@@55 $generated@@59 $generated@@60) (and (< 2 $generated@@22) ($generated@@42 $generated@@43 $generated@@60 $generated@@44))) (and (and (=> (< 0 ($generated@@36 $generated@@59)) (=> (not (and ($generated@@50 $generated@@60) (= ($generated@@56 $generated@@60) ($generated@@45 0)))) (=> ($generated@@50 $generated@@60) (=> (<= ($generated@@45 2) ($generated@@56 $generated@@60)) ($generated@@55 ($generated@@34 $generated@@59 ($generated@@35 1)) ($generated@@57 (- ($generated@@56 $generated@@60) 2))))))) (=> (=> (< 0 ($generated@@36 $generated@@59)) (or (and ($generated@@50 $generated@@60) (= ($generated@@56 $generated@@60) ($generated@@45 0))) (and (and ($generated@@50 $generated@@60) (<= ($generated@@45 2) ($generated@@56 $generated@@60))) ($generated@@23 $generated@@58 ($generated@@34 $generated@@59 ($generated@@35 1)) ($generated@@57 (- ($generated@@56 $generated@@60) 2)))))) (=> (= ($generated@@45 0) ($generated@@36 $generated@@59)) (forall (($generated@@61 T@U) ) (!  (=> ($generated@@24 $generated@@61 $generated@@59) ($generated@@55 $generated@@61 $generated@@60))
 :pattern ( ($generated@@23 $generated@@58 $generated@@61 $generated@@60))
))))) (= ($generated@@23 ($generated@@54 $generated@@58) $generated@@59 $generated@@60)  (and (=> (< 0 ($generated@@36 $generated@@59)) (or (and ($generated@@50 $generated@@60) (= ($generated@@56 $generated@@60) ($generated@@45 0))) (and (and ($generated@@50 $generated@@60) (<= ($generated@@45 2) ($generated@@56 $generated@@60))) ($generated@@23 $generated@@58 ($generated@@34 $generated@@59 ($generated@@35 1)) ($generated@@57 (- ($generated@@56 $generated@@60) 2)))))) (=> (= ($generated@@45 0) ($generated@@36 $generated@@59)) (exists (($generated@@62 T@U) ) (!  (and ($generated@@24 $generated@@62 $generated@@59) ($generated@@23 $generated@@58 $generated@@62 $generated@@60))
 :pattern ( ($generated@@23 $generated@@58 $generated@@62 $generated@@60))
)))))))
 :pattern ( ($generated@@23 ($generated@@54 $generated@@58) $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 ($generated@@63 $generated@@66 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@63 $generated@@66 $generated@@65))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (and ($generated@@42 $generated@@43 $generated@@69 $generated@@44) (exists (($generated@@70 T@U) ) (! ($generated@@23 ($generated@@54 $generated@@68) $generated@@70 $generated@@69)
 :pattern ( ($generated@@23 ($generated@@54 $generated@@68) $generated@@70 $generated@@69))
))) ($generated@@67 ($generated@@54 $generated@@68) $generated@@69))
 :pattern ( ($generated@@67 ($generated@@54 $generated@@68) $generated@@69))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and ($generated@@42 $generated@@43 $generated@@72 $generated@@44) (= $generated@@73 ($generated@@35 0))) (not ($generated@@23 $generated@@71 $generated@@73 $generated@@72)))
 :pattern ( ($generated@@23 $generated@@71 $generated@@73 $generated@@72))
))))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@52 $generated@@74) (= $generated@@74 $generated@@41))
 :pattern ( ($generated@@52 $generated@@74))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or ($generated@@75 $generated@@77) (and (< 1 $generated@@22) ($generated@@42 $generated@@43 $generated@@77 $generated@@44))) (and (=> (not (and ($generated@@50 $generated@@77) (= ($generated@@56 $generated@@77) ($generated@@45 0)))) (=> ($generated@@50 $generated@@77) (=> (<= ($generated@@45 2) ($generated@@56 $generated@@77)) ($generated@@75 ($generated@@57 (- ($generated@@56 $generated@@77) 2)))))) (= ($generated@@67 ($generated@@54 $generated@@76) $generated@@77)  (or (and ($generated@@50 $generated@@77) (= ($generated@@56 $generated@@77) ($generated@@45 0))) (and (and ($generated@@50 $generated@@77) (<= ($generated@@45 2) ($generated@@56 $generated@@77))) ($generated@@67 $generated@@76 ($generated@@57 (- ($generated@@56 $generated@@77) 2))))))))
 :pattern ( ($generated@@67 ($generated@@54 $generated@@76) $generated@@77))
))))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@50 $generated@@78) (exists (($generated@@79 Int) ) (= $generated@@78 ($generated@@57 $generated@@79))))
 :pattern ( ($generated@@50 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@42 $generated@@8 $generated@@81 $generated@@80) (<= ($generated@@45 0) ($generated@@13 $generated@@81)))
 :pattern ( ($generated@@42 $generated@@8 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@23 ($generated@@54 $generated@@82) $generated@@83 $generated@@84) ($generated@@23 $generated@@82 $generated@@83 $generated@@84))
 :pattern ( ($generated@@23 ($generated@@54 $generated@@82) $generated@@83 $generated@@84))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and ($generated@@42 $generated@@43 $generated@@86 $generated@@44) ($generated@@67 ($generated@@54 $generated@@85) $generated@@86)) (exists (($generated@@87 T@U) ) (! ($generated@@23 ($generated@@54 $generated@@85) $generated@@87 $generated@@86)
 :pattern ( ($generated@@23 ($generated@@54 $generated@@85) $generated@@87 $generated@@86))
)))
 :pattern ( ($generated@@67 ($generated@@54 $generated@@85) $generated@@86))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and ($generated@@88 $generated@@90) (<= ($generated@@36 $generated@@90) ($generated@@36 $generated@@89))) (and (= ($generated@@88 ($generated@@34 $generated@@89 $generated@@90)) ($generated@@88 $generated@@89)) (= ($generated@@36 ($generated@@34 $generated@@89 $generated@@90)) (- ($generated@@36 $generated@@89) ($generated@@36 $generated@@90)))))
 :pattern ( ($generated@@34 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 Int) ) (!  (=> (<= 0 $generated@@91) (and ($generated@@88 ($generated@@35 $generated@@91)) (= ($generated@@36 ($generated@@35 $generated@@91)) $generated@@91)))
 :pattern ( ($generated@@35 $generated@@91))
)))
(assert (forall (($generated@@92 Int) ) (! (= ($generated@@42 $generated@@43 ($generated@@57 $generated@@92) $generated@@44) ($generated@@42 $generated@@8 ($generated@@12 $generated@@92) $generated@@80))
 :pattern ( ($generated@@42 $generated@@43 ($generated@@57 $generated@@92) $generated@@44))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (or (or ($generated@@25 $generated@@93 $generated@@94) (= $generated@@93 $generated@@94)) ($generated@@25 $generated@@94 $generated@@93))
 :pattern ( ($generated@@25 $generated@@93 $generated@@94) ($generated@@25 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@24 $generated@@95 $generated@@96) ($generated@@25 $generated@@95 $generated@@96))
 :pattern ( ($generated@@24 $generated@@95 $generated@@96))
)))
(assert (= ($generated@@6 $generated@@97) 4))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (or ($generated@@55 ($generated@@47 $generated@@97 $generated@@99) $generated@@100) (and (< 2 $generated@@22) ($generated@@42 $generated@@43 $generated@@100 $generated@@44))) (and (and (=> (< 0 ($generated@@36 $generated@@99)) (=> (not (and ($generated@@50 $generated@@100) (= ($generated@@56 $generated@@100) ($generated@@45 0)))) (=> ($generated@@50 $generated@@100) (=> (<= ($generated@@45 2) ($generated@@56 $generated@@100)) ($generated@@55 ($generated@@34 $generated@@99 ($generated@@35 1)) ($generated@@57 (- ($generated@@56 $generated@@100) 2))))))) (=> (=> (< 0 ($generated@@36 $generated@@99)) (or (and ($generated@@50 $generated@@100) (= ($generated@@56 $generated@@100) ($generated@@45 0))) (and (and ($generated@@50 $generated@@100) (<= ($generated@@45 2) ($generated@@56 $generated@@100))) ($generated@@23 ($generated@@54 $generated@@98) ($generated@@34 $generated@@99 ($generated@@35 1)) ($generated@@57 (- ($generated@@56 $generated@@100) 2)))))) (=> (= ($generated@@45 0) ($generated@@36 $generated@@99)) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@24 $generated@@101 $generated@@99) ($generated@@55 $generated@@101 $generated@@100))
 :pattern ( ($generated@@23 ($generated@@54 $generated@@98) $generated@@101 $generated@@100))
))))) (= ($generated@@23 ($generated@@54 $generated@@98) ($generated@@47 $generated@@97 $generated@@99) $generated@@100)  (and (=> (< 0 ($generated@@36 $generated@@99)) (or (and ($generated@@50 $generated@@100) (= ($generated@@56 $generated@@100) ($generated@@45 0))) (and (and ($generated@@50 $generated@@100) (<= ($generated@@45 2) ($generated@@56 $generated@@100))) ($generated@@23 ($generated@@54 $generated@@98) ($generated@@34 $generated@@99 ($generated@@35 1)) ($generated@@57 (- ($generated@@56 $generated@@100) 2)))))) (=> (= ($generated@@45 0) ($generated@@36 $generated@@99)) (exists (($generated@@102 T@U) ) (!  (and ($generated@@24 $generated@@102 $generated@@99) ($generated@@23 ($generated@@54 $generated@@98) $generated@@102 $generated@@100))
 :pattern ( ($generated@@23 ($generated@@54 $generated@@98) $generated@@102 $generated@@100))
)))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@54 $generated@@98) ($generated@@47 $generated@@97 $generated@@99) $generated@@100))
))))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@103 $generated@@44) (or ($generated@@50 $generated@@103) ($generated@@52 $generated@@103)))
 :pattern ( ($generated@@52 $generated@@103) ($generated@@42 $generated@@43 $generated@@103 $generated@@44))
 :pattern ( ($generated@@50 $generated@@103) ($generated@@42 $generated@@43 $generated@@103 $generated@@44))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@67 ($generated@@54 $generated@@104) $generated@@105) ($generated@@67 $generated@@104 $generated@@105))
 :pattern ( ($generated@@67 ($generated@@54 $generated@@104) $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (! (<= 0 ($generated@@36 $generated@@106))
 :pattern ( ($generated@@36 $generated@@106))
)))
(assert (forall (($generated@@107 Int) ) (! (= ($generated@@40 ($generated@@57 $generated@@107)) $generated@@2)
 :pattern ( ($generated@@57 $generated@@107))
)))
(assert (forall (($generated@@108 Int) ) (! (= ($generated@@56 ($generated@@57 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@57 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@63 $generated@@110 ($generated@@64 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@64 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@111 $generated@@112) (or (not (= $generated@@111 $generated@@112)) (not true))) (=> (and ($generated@@88 $generated@@111) (not ($generated@@88 $generated@@112))) ($generated@@25 $generated@@111 $generated@@112))) (=> (and ($generated@@88 $generated@@111) ($generated@@88 $generated@@112)) (= ($generated@@25 $generated@@111 $generated@@112) (< ($generated@@36 $generated@@111) ($generated@@36 $generated@@112))))) (=> (and ($generated@@25 $generated@@111 $generated@@112) ($generated@@88 $generated@@112)) ($generated@@88 $generated@@111)))
 :pattern ( ($generated@@25 $generated@@111 $generated@@112))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@113 $generated@@123 $generated@@124 $generated@@125 ($generated@@119 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@128 $generated@@129) $generated@@126)
 :weight 0
)) (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@113 $generated@@130 $generated@@131 $generated@@132 ($generated@@119 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@113 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@113 $generated@@139 $generated@@140 $generated@@141 ($generated@@119 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@113 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)))) (= ($generated@@6 $generated@@114) 5)) (= ($generated@@6 $generated@@115) 6)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@117 $generated@@148 $generated@@149 ($generated@@120 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@150) $generated@@152) $generated@@150)
 :weight 0
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@157 $generated@@158) (= ($generated@@117 $generated@@153 $generated@@154 ($generated@@120 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@155) $generated@@158) ($generated@@117 $generated@@153 $generated@@154 $generated@@156 $generated@@158)))
 :weight 0
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (= ($generated@@6 ($generated@@118 $generated@@159 $generated@@160)) 7))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (! (= ($generated@@121 ($generated@@118 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@118 $generated@@161 $generated@@162))
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@122 ($generated@@118 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@118 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@11 ($generated@@113 $generated@@114 $generated@@115 $generated@@7 ($generated@@116 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (or (not (= $generated@@169 $generated@@165)) (not true)) ($generated@@11 ($generated@@63 $generated@@7 ($generated@@117 $generated@@115 $generated@@97 ($generated@@117 $generated@@114 ($generated@@118 $generated@@115 $generated@@97) $generated@@166 $generated@@169) $generated@@167)))) $generated@@168))
 :pattern ( ($generated@@113 $generated@@114 $generated@@115 $generated@@7 ($generated@@116 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> ($generated@@88 $generated@@171) (= $generated@@171 ($generated@@35 ($generated@@36 $generated@@171))))
 :pattern ( ($generated@@36 $generated@@171))
 :pattern ( ($generated@@88 $generated@@171))
)))
(assert (= ($generated@@172 $generated@@80) $generated@@0))
(assert (= ($generated@@173 $generated@@80) $generated@@4))
(assert (= ($generated@@172 $generated@@44) $generated@@1))
(assert (= ($generated@@173 $generated@@44) $generated@@5))
(assert (= $generated@@41 ($generated@@47 $generated@@43 $generated@@41)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and ($generated@@88 $generated@@175) (<= ($generated@@36 $generated@@175) ($generated@@36 $generated@@174))) (or (and (= $generated@@175 ($generated@@35 0)) (= ($generated@@34 $generated@@174 $generated@@175) $generated@@174)) (and (or (not (= $generated@@175 ($generated@@35 0))) (not true)) ($generated@@25 ($generated@@34 $generated@@174 $generated@@175) $generated@@174))))
 :pattern ( ($generated@@34 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 Int) ) (! (= ($generated@@64 $generated@@8 ($generated@@12 ($generated@@45 $generated@@176))) ($generated@@47 $generated@@97 ($generated@@64 $generated@@8 ($generated@@12 $generated@@176))))
 :pattern ( ($generated@@64 $generated@@8 ($generated@@12 ($generated@@45 $generated@@176))))
)))
(assert (forall (($generated@@177 Int) ) (! (= ($generated@@57 ($generated@@45 $generated@@177)) ($generated@@47 $generated@@43 ($generated@@57 $generated@@177)))
 :pattern ( ($generated@@57 ($generated@@45 $generated@@177)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@T) ) (! (= ($generated@@64 $generated@@179 ($generated@@47 $generated@@179 $generated@@178)) ($generated@@47 $generated@@97 ($generated@@64 $generated@@179 $generated@@178)))
 :pattern ( ($generated@@64 $generated@@179 ($generated@@47 $generated@@179 $generated@@178)))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (or ($generated@@55 ($generated@@47 $generated@@97 $generated@@181) ($generated@@47 $generated@@43 $generated@@182)) (and (< 2 $generated@@22) ($generated@@42 $generated@@43 $generated@@182 $generated@@44))) (and (and (=> (< 0 ($generated@@36 $generated@@181)) (=> (not (and ($generated@@50 ($generated@@47 $generated@@43 $generated@@182)) (= ($generated@@45 ($generated@@56 ($generated@@47 $generated@@43 $generated@@182))) ($generated@@45 0)))) (=> ($generated@@11 ($generated@@47 $generated@@7 ($generated@@10 ($generated@@50 ($generated@@47 $generated@@43 $generated@@182))))) (=> (<= ($generated@@45 2) ($generated@@45 ($generated@@56 ($generated@@47 $generated@@43 $generated@@182)))) ($generated@@55 ($generated@@34 $generated@@181 ($generated@@35 1)) ($generated@@47 $generated@@43 ($generated@@57 ($generated@@45 (- ($generated@@56 ($generated@@47 $generated@@43 $generated@@182)) 2))))))))) (=> (=> (< 0 ($generated@@36 $generated@@181)) (or (and ($generated@@50 ($generated@@47 $generated@@43 $generated@@182)) (= ($generated@@45 ($generated@@56 ($generated@@47 $generated@@43 $generated@@182))) ($generated@@45 0))) (and (and ($generated@@50 ($generated@@47 $generated@@43 $generated@@182)) (<= ($generated@@45 2) ($generated@@45 ($generated@@56 ($generated@@47 $generated@@43 $generated@@182))))) ($generated@@23 ($generated@@54 $generated@@180) ($generated@@34 $generated@@181 ($generated@@35 1)) ($generated@@47 $generated@@43 ($generated@@57 ($generated@@45 (- ($generated@@56 ($generated@@47 $generated@@43 $generated@@182)) 2)))))))) (=> (= ($generated@@45 0) ($generated@@36 $generated@@181)) (forall (($generated@@183 T@U) ) (!  (=> ($generated@@24 $generated@@183 $generated@@181) ($generated@@55 $generated@@183 $generated@@182))
 :pattern ( ($generated@@23 ($generated@@54 $generated@@180) $generated@@183 $generated@@182))
))))) (= ($generated@@23 ($generated@@54 $generated@@180) ($generated@@47 $generated@@97 $generated@@181) ($generated@@47 $generated@@43 $generated@@182))  (and (=> (< 0 ($generated@@36 $generated@@181)) (or (and ($generated@@50 ($generated@@47 $generated@@43 $generated@@182)) (= ($generated@@45 ($generated@@56 ($generated@@47 $generated@@43 $generated@@182))) ($generated@@45 0))) (and (and ($generated@@50 ($generated@@47 $generated@@43 $generated@@182)) (<= ($generated@@45 2) ($generated@@45 ($generated@@56 ($generated@@47 $generated@@43 $generated@@182))))) ($generated@@23 ($generated@@54 $generated@@180) ($generated@@34 $generated@@181 ($generated@@35 1)) ($generated@@47 $generated@@43 ($generated@@57 ($generated@@45 (- ($generated@@56 ($generated@@47 $generated@@43 $generated@@182)) 2)))))))) (=> (= ($generated@@45 0) ($generated@@36 $generated@@181)) (exists (($generated@@184 T@U) ) (!  (and ($generated@@24 $generated@@184 $generated@@181) ($generated@@23 ($generated@@54 $generated@@180) $generated@@184 $generated@@182))
 :pattern ( ($generated@@23 ($generated@@54 $generated@@180) $generated@@184 $generated@@182))
)))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@54 $generated@@180) ($generated@@47 $generated@@97 $generated@@181) ($generated@@47 $generated@@43 $generated@@182)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@191  (=> (and (= $generated@@185 ($generated@@116 $generated@@186 $generated@@187 $generated false)) (= (ControlFlow 0 2) (- 0 1))) (not ($generated@@11 ($generated@@47 $generated@@7 ($generated@@10 ($generated@@67 ($generated@@54 ($generated@@54 $generated@@188)) ($generated@@47 $generated@@43 $generated@@41)))))))))
(let (($generated@@192  (=> (and (and ($generated@@189 $generated@@187) ($generated@@190 $generated@@187)) (and (= 2 $generated@@22) (= (ControlFlow 0 3) 2))) $generated@@191)))
$generated@@192)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
