(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@40 () Int)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@62 (T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@94 (T@U) Int)
(declare-fun $generated@@95 (T@U) Int)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@104 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@T T@T) T@T)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (= ($generated@@25 $generated@@26) $generated@@5))
(assert (= ($generated@@8 $generated@@29) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@31)) ($generated@@27 $generated@@32))
 :pattern ( ($generated@@27 $generated@@32) ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@31)))
)))
(assert ($generated@@28 $generated@@29 $generated@@26 $generated@@33))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@36) (= $generated@@35 $generated@@36))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@39) (= $generated@@38 $generated@@39))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39))
)))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@48 T@U) ) (!  (=> (or ($generated@@43 ($generated@@42 $generated@@29 $generated@@48)) (and (< 2 $generated@@40) ($generated@@28 $generated@@29 $generated@@48 ($generated@@30 $generated@@33)))) (and (and ($generated@@27 ($generated@@42 $generated@@29 $generated@@48)) (let (($generated@@49 ($generated@@42 $generated@@29 ($generated@@44 $generated@@29 ($generated@@45 ($generated@@42 $generated@@29 $generated@@48))))))
($generated@@46 $generated@@49))) (= ($generated@@41 ($generated@@42 $generated@@29 $generated@@48)) ($generated@@13 (let (($generated@@50 ($generated@@42 $generated@@29 ($generated@@44 $generated@@29 ($generated@@45 ($generated@@42 $generated@@29 $generated@@48))))))
($generated@@42 $generated@@9 ($generated@@12 ($generated@@47 $generated@@50))))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@42 $generated@@29 $generated@@48)))
))))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@42 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@42 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@27 $generated@@53) (= ($generated@@25 $generated@@53) $generated@@4))
 :pattern ( ($generated@@27 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 ($generated@@44 $generated@@56 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@44 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ) (!  (=> ($generated@@27 $generated@@58) (exists (($generated@@59 T@U) ) (= $generated@@58 ($generated@@57 $generated@@59))))
 :pattern ( ($generated@@27 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@34 $generated@@60 $generated@@61) (= ($generated@@45 $generated@@60) ($generated@@45 $generated@@61)))
 :pattern ( ($generated@@34 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@62 ($generated@@54 $generated@@67 $generated@@64) $generated@@65 $generated@@66) ($generated@@63 $generated@@67 $generated@@64 $generated@@65 $generated@@66))
 :pattern ( ($generated@@62 ($generated@@54 $generated@@67 $generated@@64) $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (!  (and (= ($generated@@24 ($generated@@30 $generated@@69)) $generated@@3) (= ($generated@@68 ($generated@@30 $generated@@69)) $generated@@7))
 :pattern ( ($generated@@30 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@70 $generated@@71 $generated@@33) (and (= ($generated@@54 $generated@@29 ($generated@@44 $generated@@29 $generated@@71)) $generated@@71) ($generated@@28 $generated@@29 ($generated@@44 $generated@@29 $generated@@71) $generated@@33)))
 :pattern ( ($generated@@70 $generated@@71 $generated@@33))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@72 $generated@@75) (= ($generated@@63 $generated@@29 ($generated@@57 $generated@@74) ($generated@@30 $generated@@73) $generated@@75) ($generated@@62 $generated@@74 $generated@@73 $generated@@75)))
 :pattern ( ($generated@@63 $generated@@29 ($generated@@57 $generated@@74) ($generated@@30 $generated@@73) $generated@@75))
)))
(assert  (=> (<= 1 $generated@@40) (forall (($generated@@76 T@U) ) (!  (=> (or ($generated@@46 $generated@@76) (and (< 1 $generated@@40) ($generated@@28 $generated@@29 $generated@@76 $generated@@33))) (= ($generated@@47 $generated@@76) ($generated@@13 ($generated@@42 $generated@@9 ($generated@@12 true)))))
 :pattern ( ($generated@@47 $generated@@76))
))))
(assert  (=> (<= 1 $generated@@40) (forall (($generated@@77 T@U) ) (!  (=> (or ($generated@@46 $generated@@77) (and (< 1 $generated@@40) ($generated@@28 $generated@@29 $generated@@77 $generated@@33))) ($generated@@37 $generated@@77 $generated@@26))
 :pattern ( ($generated@@47 $generated@@77))
))))
(assert  (=> (<= 1 $generated@@40) (forall (($generated@@78 T@U) ) (!  (=> (or ($generated@@46 ($generated@@42 $generated@@29 $generated@@78)) (and (< 1 $generated@@40) ($generated@@28 $generated@@29 $generated@@78 $generated@@33))) (= ($generated@@47 ($generated@@42 $generated@@29 $generated@@78)) ($generated@@13 ($generated@@42 $generated@@9 ($generated@@12 true)))))
 :weight 3
 :pattern ( ($generated@@47 ($generated@@42 $generated@@29 $generated@@78)))
))))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@70 $generated@@79 $generated) (and (= ($generated@@54 $generated@@9 ($generated@@44 $generated@@9 $generated@@79)) $generated@@79) ($generated@@28 $generated@@9 ($generated@@44 $generated@@9 $generated@@79) $generated)))
 :pattern ( ($generated@@70 $generated@@79 $generated))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@70 ($generated@@54 $generated@@82 $generated@@80) $generated@@81) ($generated@@28 $generated@@82 $generated@@80 $generated@@81))
 :pattern ( ($generated@@70 ($generated@@54 $generated@@82 $generated@@80) $generated@@81))
)))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@83 T@U) ) (!  (=> (or ($generated@@43 $generated@@83) (and (< 2 $generated@@40) ($generated@@28 $generated@@29 $generated@@83 ($generated@@30 $generated@@33)))) (and (and ($generated@@27 $generated@@83) (let (($generated@@84 ($generated@@44 $generated@@29 ($generated@@45 $generated@@83))))
($generated@@46 $generated@@84))) (= ($generated@@41 $generated@@83) (let (($generated@@85 ($generated@@44 $generated@@29 ($generated@@45 $generated@@83))))
($generated@@47 $generated@@85)))))
 :pattern ( ($generated@@41 $generated@@83))
))))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 ($generated@@30 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@30 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@25 ($generated@@57 $generated@@88)) $generated@@4)
 :pattern ( ($generated@@57 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@45 ($generated@@57 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@57 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@44 $generated@@91 ($generated@@54 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@54 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@57 $generated@@93) ($generated@@30 $generated@@92)) ($generated@@70 $generated@@93 $generated@@92))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@57 $generated@@93) ($generated@@30 $generated@@92)))
)))
(assert (forall (($generated@@96 T@U) ) (! (< ($generated@@94 $generated@@96) ($generated@@95 ($generated@@57 $generated@@96)))
 :pattern ( ($generated@@57 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and ($generated@@72 $generated@@99) (and ($generated@@27 $generated@@97) ($generated@@63 $generated@@29 $generated@@97 ($generated@@30 $generated@@98) $generated@@99))) ($generated@@62 ($generated@@45 $generated@@97) $generated@@98 $generated@@99))
 :pattern ( ($generated@@62 ($generated@@45 $generated@@97) $generated@@98 $generated@@99))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@100 $generated@@111 $generated@@112 $generated@@113 ($generated@@107 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@100 $generated@@118 $generated@@119 $generated@@120 ($generated@@107 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@100 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@100 $generated@@127 $generated@@128 $generated@@129 ($generated@@107 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))) (= ($generated@@8 $generated@@101) 4)) (= ($generated@@8 $generated@@102) 5)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@104 $generated@@136 $generated@@137 ($generated@@108 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@138) $generated@@140) $generated@@138)
 :weight 0
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@145 $generated@@146) (= ($generated@@104 $generated@@141 $generated@@142 ($generated@@108 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@104 $generated@@141 $generated@@142 $generated@@144 $generated@@146)))
 :weight 0
))) (= ($generated@@8 $generated@@105) 6)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (= ($generated@@8 ($generated@@106 $generated@@147 $generated@@148)) 7))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@109 ($generated@@106 $generated@@149 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@106 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@110 ($generated@@106 $generated@@151 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@106 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Bool) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@13 ($generated@@100 $generated@@101 $generated@@102 $generated@@9 ($generated@@103 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))  (=> (and (or (not (= $generated@@157 $generated@@153)) (not true)) ($generated@@13 ($generated@@44 $generated@@9 ($generated@@104 $generated@@102 $generated@@105 ($generated@@104 $generated@@101 ($generated@@106 $generated@@102 $generated@@105) $generated@@154 $generated@@157) $generated@@155)))) $generated@@156))
 :pattern ( ($generated@@100 $generated@@101 $generated@@102 $generated@@9 ($generated@@103 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@94 ($generated@@54 $generated@@29 $generated@@159)) ($generated@@95 $generated@@159))
 :pattern ( ($generated@@94 ($generated@@54 $generated@@29 $generated@@159)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> ($generated@@70 $generated@@161 ($generated@@30 $generated@@160)) (and (= ($generated@@54 $generated@@29 ($generated@@44 $generated@@29 $generated@@161)) $generated@@161) ($generated@@28 $generated@@29 ($generated@@44 $generated@@29 $generated@@161) ($generated@@30 $generated@@160))))
 :pattern ( ($generated@@70 $generated@@161 ($generated@@30 $generated@@160)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@72 $generated@@163) ($generated@@28 $generated@@29 $generated@@162 $generated@@33)) ($generated@@63 $generated@@29 $generated@@162 $generated@@33 $generated@@163))
 :pattern ( ($generated@@63 $generated@@29 $generated@@162 $generated@@33 $generated@@163))
)))
(assert (= ($generated@@24 $generated@@33) $generated@@2))
(assert (= ($generated@@68 $generated@@33) $generated@@6))
(assert (= $generated@@26 ($generated@@42 $generated@@29 $generated@@26)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@57 ($generated@@42 $generated@@105 $generated@@164)) ($generated@@42 $generated@@29 ($generated@@57 $generated@@164)))
 :pattern ( ($generated@@57 ($generated@@42 $generated@@105 $generated@@164)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@54 $generated@@166 ($generated@@42 $generated@@166 $generated@@165)) ($generated@@42 $generated@@105 ($generated@@54 $generated@@166 $generated@@165)))
 :pattern ( ($generated@@54 $generated@@166 ($generated@@42 $generated@@166 $generated@@165)))
)))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@167 T@U) ) (!  (=> (or ($generated@@43 $generated@@167) (and (< 2 $generated@@40) ($generated@@28 $generated@@29 $generated@@167 ($generated@@30 $generated@@33)))) ($generated@@34 $generated@@167 ($generated@@57 ($generated@@54 $generated@@29 ($generated@@42 $generated@@29 $generated@@26)))))
 :pattern ( ($generated@@41 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! ($generated@@63 $generated@@9 $generated@@169 $generated $generated@@168)
 :pattern ( ($generated@@63 $generated@@9 $generated@@169 $generated $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (! ($generated@@28 $generated@@9 $generated@@170 $generated)
 :pattern ( ($generated@@28 $generated@@9 $generated@@170 $generated))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! ($generated@@37 $generated@@171 $generated@@172)
 :pattern ( ($generated@@37 $generated@@171 $generated@@172))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@181  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@34 $generated@@173 ($generated@@57 ($generated@@54 $generated@@29 ($generated@@42 $generated@@29 $generated@@26)))))))
(let (($generated@@182  (=> (= $generated@@173 ($generated@@57 ($generated@@54 $generated@@29 $generated@@174))) (=> (and ($generated@@28 $generated@@29 $generated@@174 $generated@@33) (= $generated@@175 $generated@@174)) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@175 $generated@@33) (= $generated@@176 $generated@@175)) (and ($generated@@63 $generated@@29 $generated@@176 $generated@@33 $generated@@177) ($generated@@46 $generated@@176))) (and (and (= ($generated@@41 $generated@@173) ($generated@@47 $generated@@176)) ($generated@@46 $generated@@176)) (and ($generated@@28 $generated@@9 ($generated@@12 ($generated@@41 $generated@@173)) $generated) (= (ControlFlow 0 5) 4)))) $generated@@181)))))
(let (($generated@@183 true))
(let (($generated@@184 true))
(let (($generated@@185  (=> (= $generated@@178 ($generated@@103 $generated@@179 $generated@@177 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 6) 1) $generated@@184) (=> (= (ControlFlow 0 6) 5) $generated@@182)) (=> (= (ControlFlow 0 6) 2) $generated@@183)))))
(let (($generated@@186  (=> (and (and (and ($generated@@72 $generated@@177) ($generated@@180 $generated@@177)) ($generated@@28 $generated@@29 $generated@@173 ($generated@@30 $generated@@33))) (and (= 2 $generated@@40) (= (ControlFlow 0 7) 6))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
