(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T T@T) T@T)
(declare-fun $generated@@51 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@124 (T@U T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Int)
(declare-fun $generated@@162 (T@U) Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@175 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@217 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@8 $generated@@26) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)) ($generated@@24 $generated@@30))
 :pattern ( ($generated@@24 $generated@@30) ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)))
)))
(assert (= ($generated@@8 $generated@@31) 4))
(assert (forall (($generated@@35 T@U) ) (! (= ($generated@@25 $generated@@31 $generated@@35 $generated@@32)  (or (= $generated@@35 $generated@@33) (= ($generated@@34 $generated@@35) $generated@@32)))
 :pattern ( ($generated@@25 $generated@@31 $generated@@35 $generated@@32))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@36 $generated@@31 $generated@@38 $generated@@37 $generated@@39) ($generated@@36 $generated@@31 $generated@@38 $generated@@32 $generated@@39))
 :pattern ( ($generated@@36 $generated@@31 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@36 $generated@@31 $generated@@38 $generated@@32 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@40 $generated@@44 $generated@@45) ($generated@@27 $generated@@42 $generated@@43))  (and ($generated@@41 $generated@@44 $generated@@42) ($generated@@41 $generated@@45 $generated@@43)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@40 $generated@@44 $generated@@45) ($generated@@27 $generated@@42 $generated@@43)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@47 $generated@@54 $generated@@55 ($generated@@51 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@58) $generated@@56)
 :weight 0
)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (or (= $generated@@63 $generated@@64) (= ($generated@@47 $generated@@59 $generated@@60 ($generated@@51 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@64) ($generated@@47 $generated@@59 $generated@@60 $generated@@62 $generated@@64)))
 :weight 0
))) (= ($generated@@8 $generated@@48) 5)) (= ($generated@@8 $generated@@49) 6)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (= ($generated@@8 ($generated@@50 $generated@@65 $generated@@66)) 7))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@52 ($generated@@50 $generated@@67 $generated@@68)) $generated@@67)
 :pattern ( ($generated@@50 $generated@@67 $generated@@68))
))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@53 ($generated@@50 $generated@@69 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@50 $generated@@69 $generated@@70))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@36 $generated@@31 $generated@@71 $generated@@32 $generated@@72)  (or (= $generated@@71 $generated@@33) ($generated@@13 ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@31 ($generated@@50 $generated@@48 $generated@@49) $generated@@72 $generated@@71) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@31 $generated@@71 $generated@@32 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@73 $generated@@74 $generated@@75) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@13 ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@31 ($generated@@50 $generated@@48 $generated@@49) $generated@@74 $generated@@76) $generated@@1))) ($generated@@13 ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@31 ($generated@@50 $generated@@48 $generated@@49) $generated@@75 $generated@@76) $generated@@1))))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@31 ($generated@@50 $generated@@48 $generated@@49) $generated@@75 $generated@@76) $generated@@1))
)))
 :pattern ( ($generated@@73 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@77 $generated@@83) (= ($generated@@36 $generated@@26 ($generated@@40 $generated@@81 $generated@@82) ($generated@@27 $generated@@79 $generated@@80) $generated@@83)  (and ($generated@@78 $generated@@81 $generated@@79 $generated@@83) ($generated@@78 $generated@@82 $generated@@80 $generated@@83))))
 :pattern ( ($generated@@36 $generated@@26 ($generated@@40 $generated@@81 $generated@@82) ($generated@@27 $generated@@79 $generated@@80) $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@24 $generated@@85) (= ($generated@@84 $generated@@85) $generated@@2))
 :pattern ( ($generated@@24 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@86 $generated@@88 ($generated@@46 $generated@@88 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@46 $generated@@88 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@24 $generated@@89) (exists (($generated@@90 T@U) ($generated@@91 T@U) ) (= $generated@@89 ($generated@@40 $generated@@90 $generated@@91))))
 :pattern ( ($generated@@24 $generated@@89))
)))
(assert (= ($generated@@8 $generated@@92) 8))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@25 $generated@@92 $generated@@95 ($generated@@93 $generated@@96)) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@94 $generated@@95 $generated@@97) ($generated@@41 $generated@@97 $generated@@96))
 :pattern ( ($generated@@94 $generated@@95 $generated@@97))
)))
 :pattern ( ($generated@@25 $generated@@92 $generated@@95 ($generated@@93 $generated@@96)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@78 ($generated@@86 $generated@@101 $generated@@98) $generated@@99 $generated@@100) ($generated@@36 $generated@@101 $generated@@98 $generated@@99 $generated@@100))
 :pattern ( ($generated@@78 ($generated@@86 $generated@@101 $generated@@98) $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> ($generated@@73 $generated@@102 $generated@@103) (=> ($generated@@78 $generated@@104 $generated@@105 $generated@@102) ($generated@@78 $generated@@104 $generated@@105 $generated@@103)))
 :pattern ( ($generated@@73 $generated@@102 $generated@@103) ($generated@@78 $generated@@104 $generated@@105 $generated@@102))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (!  (=> ($generated@@73 $generated@@106 $generated@@107) (=> ($generated@@36 $generated@@110 $generated@@108 $generated@@109 $generated@@106) ($generated@@36 $generated@@110 $generated@@108 $generated@@109 $generated@@107)))
 :pattern ( ($generated@@73 $generated@@106 $generated@@107) ($generated@@36 $generated@@110 $generated@@108 $generated@@109 $generated@@106))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@41 $generated@@111 $generated@@32) (and (= ($generated@@86 $generated@@31 ($generated@@46 $generated@@31 $generated@@111)) $generated@@111) ($generated@@25 $generated@@31 ($generated@@46 $generated@@31 $generated@@111) $generated@@32)))
 :pattern ( ($generated@@41 $generated@@111 $generated@@32))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@41 $generated@@112 $generated@@37) (and (= ($generated@@86 $generated@@31 ($generated@@46 $generated@@31 $generated@@112)) $generated@@112) ($generated@@25 $generated@@31 ($generated@@46 $generated@@31 $generated@@112) $generated@@37)))
 :pattern ( ($generated@@41 $generated@@112 $generated@@37))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@25 $generated@@31 $generated@@113 $generated@@37)  (and ($generated@@25 $generated@@31 $generated@@113 $generated@@32) (or (not (= $generated@@113 $generated@@33)) (not true))))
 :pattern ( ($generated@@25 $generated@@31 $generated@@113 $generated@@37))
 :pattern ( ($generated@@25 $generated@@31 $generated@@113 $generated@@32))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (or (not (= $generated@@114 $generated@@116)) (not true)) (=> (and ($generated@@73 $generated@@114 $generated@@115) ($generated@@73 $generated@@115 $generated@@116)) ($generated@@73 $generated@@114 $generated@@116)))
 :pattern ( ($generated@@73 $generated@@114 $generated@@115) ($generated@@73 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@41 ($generated@@86 $generated@@119 $generated@@117) $generated@@118) ($generated@@25 $generated@@119 $generated@@117 $generated@@118))
 :pattern ( ($generated@@41 ($generated@@86 $generated@@119 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@36 $generated@@92 $generated@@120 ($generated@@93 $generated@@121) $generated@@122) (forall (($generated@@123 T@U) ) (!  (=> ($generated@@94 $generated@@120 $generated@@123) ($generated@@78 $generated@@123 $generated@@121 $generated@@122))
 :pattern ( ($generated@@94 $generated@@120 $generated@@123))
)))
 :pattern ( ($generated@@36 $generated@@92 $generated@@120 ($generated@@93 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@125 ($generated@@124 $generated@@126 $generated@@127)) $generated@@126)
 :pattern ( ($generated@@124 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@128 ($generated@@124 $generated@@129 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@124 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@131 ($generated@@124 $generated@@132 $generated@@133)) $generated@@0)
 :pattern ( ($generated@@124 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@84 ($generated@@40 $generated@@134 $generated@@135)) $generated@@2)
 :pattern ( ($generated@@40 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@136 ($generated@@27 $generated@@137 $generated@@138)) $generated@@137)
 :pattern ( ($generated@@27 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@139 ($generated@@27 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@27 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@142 ($generated@@40 $generated@@143 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@40 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@145 ($generated@@40 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@40 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@93 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@93 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@131 ($generated@@93 $generated@@150)) $generated)
 :pattern ( ($generated@@93 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@46 $generated@@152 ($generated@@86 $generated@@152 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@86 $generated@@152 $generated@@151))
)))
(assert (= ($generated@@8 $generated@@153) 9))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@36 $generated@@153 $generated@@156 ($generated@@124 $generated@@157 $generated@@158) $generated@@159) (forall (($generated@@160 T@U) ) (!  (=> ($generated@@94 ($generated@@155 $generated@@156) $generated@@160) (and ($generated@@78 ($generated@@47 $generated@@49 $generated@@49 ($generated@@154 $generated@@156) $generated@@160) $generated@@158 $generated@@159) ($generated@@78 $generated@@160 $generated@@157 $generated@@159)))
 :pattern ( ($generated@@47 $generated@@49 $generated@@49 ($generated@@154 $generated@@156) $generated@@160))
 :pattern ( ($generated@@94 ($generated@@155 $generated@@156) $generated@@160))
)))
 :pattern ( ($generated@@36 $generated@@153 $generated@@156 ($generated@@124 $generated@@157 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (< ($generated@@161 $generated@@163) ($generated@@162 ($generated@@40 $generated@@163 $generated@@164)))
 :pattern ( ($generated@@40 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (< ($generated@@161 $generated@@166) ($generated@@162 ($generated@@40 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@40 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (not ($generated@@94 ($generated@@155 $generated@@167) $generated@@168))
 :pattern ( ($generated@@94 ($generated@@155 $generated@@167) $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@41 $generated@@169 ($generated@@124 $generated@@170 $generated@@171)) (and (= ($generated@@86 $generated@@153 ($generated@@46 $generated@@153 $generated@@169)) $generated@@169) ($generated@@25 $generated@@153 ($generated@@46 $generated@@153 $generated@@169) ($generated@@124 $generated@@170 $generated@@171))))
 :pattern ( ($generated@@41 $generated@@169 ($generated@@124 $generated@@170 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> ($generated@@41 $generated@@174 ($generated@@27 $generated@@172 $generated@@173)) (and (= ($generated@@86 $generated@@26 ($generated@@46 $generated@@26 $generated@@174)) $generated@@174) ($generated@@25 $generated@@26 ($generated@@46 $generated@@26 $generated@@174) ($generated@@27 $generated@@172 $generated@@173))))
 :pattern ( ($generated@@41 $generated@@174 ($generated@@27 $generated@@172 $generated@@173)))
)))
(assert  (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@175 $generated@@178 $generated@@179 $generated@@180 ($generated@@177 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@183 $generated@@184) $generated@@181)
 :weight 0
)) (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@175 $generated@@185 $generated@@186 $generated@@187 ($generated@@177 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@175 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@175 $generated@@194 $generated@@195 $generated@@196 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@175 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Bool) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@13 ($generated@@175 $generated@@31 $generated@@48 $generated@@9 ($generated@@176 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@207 $generated@@208))  (=> (and (or (not (= $generated@@207 $generated@@203)) (not true)) ($generated@@13 ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@31 ($generated@@50 $generated@@48 $generated@@49) $generated@@204 $generated@@207) $generated@@205)))) $generated@@206))
 :pattern ( ($generated@@175 $generated@@31 $generated@@48 $generated@@9 ($generated@@176 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (and (= ($generated@@131 ($generated@@27 $generated@@210 $generated@@211)) $generated@@3) (= ($generated@@209 ($generated@@27 $generated@@210 $generated@@211)) $generated@@6))
 :pattern ( ($generated@@27 $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ) (!  (or (= $generated@@212 $generated@@167) (exists (($generated@@213 T@U) ) ($generated@@94 ($generated@@155 $generated@@212) $generated@@213)))
 :pattern ( ($generated@@155 $generated@@212))
)))
(assert (forall (($generated@@215 T@U) ) (!  (or (= $generated@@215 $generated@@167) (exists (($generated@@216 T@U) ) ($generated@@94 ($generated@@214 $generated@@215) $generated@@216)))
 :pattern ( ($generated@@214 $generated@@215))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= ($generated@@94 ($generated@@217 $generated@@218) $generated@@219)  (and ($generated@@94 ($generated@@155 $generated@@218) ($generated@@142 ($generated@@46 $generated@@26 $generated@@219))) (= ($generated@@47 $generated@@49 $generated@@49 ($generated@@154 $generated@@218) ($generated@@142 ($generated@@46 $generated@@26 $generated@@219))) ($generated@@145 ($generated@@46 $generated@@26 $generated@@219)))))
 :pattern ( ($generated@@94 ($generated@@217 $generated@@218) $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@94 ($generated@@214 $generated@@220) $generated@@221) (exists (($generated@@222 T@U) ) (!  (and ($generated@@94 ($generated@@155 $generated@@220) $generated@@222) (= $generated@@221 ($generated@@47 $generated@@49 $generated@@49 ($generated@@154 $generated@@220) $generated@@222)))
 :pattern ( ($generated@@94 ($generated@@155 $generated@@220) $generated@@222))
 :pattern ( ($generated@@47 $generated@@49 $generated@@49 ($generated@@154 $generated@@220) $generated@@222))
)))
 :pattern ( ($generated@@94 ($generated@@214 $generated@@220) $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ) (! (= ($generated@@161 ($generated@@86 $generated@@26 $generated@@223)) ($generated@@162 $generated@@223))
 :pattern ( ($generated@@161 ($generated@@86 $generated@@26 $generated@@223)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> ($generated@@41 $generated@@224 ($generated@@93 $generated@@225)) (and (= ($generated@@86 $generated@@92 ($generated@@46 $generated@@92 $generated@@224)) $generated@@224) ($generated@@25 $generated@@92 ($generated@@46 $generated@@92 $generated@@224) ($generated@@93 $generated@@225))))
 :pattern ( ($generated@@41 $generated@@224 ($generated@@93 $generated@@225)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@25 $generated@@153 $generated@@226 ($generated@@124 $generated@@227 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> ($generated@@94 ($generated@@155 $generated@@226) $generated@@229) (and ($generated@@41 ($generated@@47 $generated@@49 $generated@@49 ($generated@@154 $generated@@226) $generated@@229) $generated@@228) ($generated@@41 $generated@@229 $generated@@227)))
 :pattern ( ($generated@@47 $generated@@49 $generated@@49 ($generated@@154 $generated@@226) $generated@@229))
 :pattern ( ($generated@@94 ($generated@@155 $generated@@226) $generated@@229))
)))
 :pattern ( ($generated@@25 $generated@@153 $generated@@226 ($generated@@124 $generated@@227 $generated@@228)))
)))
(assert (= ($generated@@131 $generated@@32) $generated@@4))
(assert (= ($generated@@209 $generated@@32) $generated@@7))
(assert (= ($generated@@131 $generated@@37) $generated@@5))
(assert (= ($generated@@209 $generated@@37) $generated@@7))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and ($generated@@77 $generated@@232) (and ($generated@@24 $generated@@230) (exists (($generated@@233 T@U) ) (! ($generated@@36 $generated@@26 $generated@@230 ($generated@@27 $generated@@231 $generated@@233) $generated@@232)
 :pattern ( ($generated@@36 $generated@@26 $generated@@230 ($generated@@27 $generated@@231 $generated@@233) $generated@@232))
)))) ($generated@@78 ($generated@@142 $generated@@230) $generated@@231 $generated@@232))
 :pattern ( ($generated@@78 ($generated@@142 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and ($generated@@77 $generated@@236) (and ($generated@@24 $generated@@234) (exists (($generated@@237 T@U) ) (! ($generated@@36 $generated@@26 $generated@@234 ($generated@@27 $generated@@237 $generated@@235) $generated@@236)
 :pattern ( ($generated@@36 $generated@@26 $generated@@234 ($generated@@27 $generated@@237 $generated@@235) $generated@@236))
)))) ($generated@@78 ($generated@@145 $generated@@234) $generated@@235 $generated@@236))
 :pattern ( ($generated@@78 ($generated@@145 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (!  (or (= $generated@@238 $generated@@167) (exists (($generated@@239 T@U) ($generated@@240 T@U) ) ($generated@@94 ($generated@@217 $generated@@238) ($generated@@86 $generated@@26 ($generated@@40 $generated@@239 $generated@@240)))))
 :pattern ( ($generated@@217 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> ($generated@@25 $generated@@153 $generated@@241 ($generated@@124 $generated@@242 $generated@@243)) (and (and ($generated@@25 $generated@@92 ($generated@@155 $generated@@241) ($generated@@93 $generated@@242)) ($generated@@25 $generated@@92 ($generated@@214 $generated@@241) ($generated@@93 $generated@@243))) ($generated@@25 $generated@@92 ($generated@@217 $generated@@241) ($generated@@93 ($generated@@27 $generated@@242 $generated@@243)))))
 :pattern ( ($generated@@25 $generated@@153 $generated@@241 ($generated@@124 $generated@@242 $generated@@243)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@253 true))
(let (($generated@@254  (=> (and (=> ($generated@@94 ($generated@@155 $generated@@244) ($generated@@86 $generated@@31 $generated@@245)) (or (not (= ($generated@@46 $generated@@31 ($generated@@47 $generated@@49 $generated@@49 ($generated@@154 $generated@@244) ($generated@@86 $generated@@31 $generated@@245))) $generated@@33)) (not true))) (= (ControlFlow 0 4) 1)) $generated@@253)))
(let (($generated@@255  (=> ($generated@@94 ($generated@@155 $generated@@244) ($generated@@86 $generated@@31 $generated@@245)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@94 ($generated@@155 $generated@@244) ($generated@@86 $generated@@31 $generated@@245))) (=> ($generated@@94 ($generated@@155 $generated@@244) ($generated@@86 $generated@@31 $generated@@245)) (=> (and (or (not (= ($generated@@46 $generated@@31 ($generated@@47 $generated@@49 $generated@@49 ($generated@@154 $generated@@244) ($generated@@86 $generated@@31 $generated@@245))) $generated@@33)) (not true)) (= (ControlFlow 0 2) 1)) $generated@@253))))))
(let (($generated@@256  (=> (forall (($generated@@257 T@U) ) (!  (=> ($generated@@25 $generated@@31 $generated@@257 $generated@@32) (=> ($generated@@94 ($generated@@155 $generated@@244) ($generated@@86 $generated@@31 $generated@@257)) (or (not (= $generated@@257 $generated@@33)) (not true))))
 :pattern ( ($generated@@94 ($generated@@155 $generated@@244) ($generated@@86 $generated@@31 $generated@@257)))
)) (=> (and ($generated@@25 $generated@@31 $generated@@245 $generated@@32) ($generated@@36 $generated@@31 $generated@@245 $generated@@32 $generated@@246)) (and (=> (= (ControlFlow 0 5) 2) $generated@@255) (=> (= (ControlFlow 0 5) 4) $generated@@254))))))
(let (($generated@@258  (=> (and (=> ($generated@@94 ($generated@@155 $generated@@244) ($generated@@86 $generated@@31 $generated@@247)) (or (not (= $generated@@247 $generated@@33)) (not true))) (= (ControlFlow 0 7) 5)) $generated@@256)))
(let (($generated@@259  (=> ($generated@@94 ($generated@@155 $generated@@244) ($generated@@86 $generated@@31 $generated@@247)) (=> (and (or (not (= $generated@@247 $generated@@33)) (not true)) (= (ControlFlow 0 6) 5)) $generated@@256))))
(let (($generated@@260  (=> (= $generated@@248 ($generated@@176 $generated@@33 $generated@@246 $generated@@1 false)) (=> (and ($generated@@25 $generated@@31 $generated@@247 $generated@@32) ($generated@@36 $generated@@31 $generated@@247 $generated@@32 $generated@@246)) (and (=> (= (ControlFlow 0 8) 6) $generated@@259) (=> (= (ControlFlow 0 8) 7) $generated@@258))))))
(let (($generated@@261  (=> (and ($generated@@77 $generated@@246) ($generated@@249 $generated@@246)) (=> (and (and (and ($generated@@25 $generated@@153 $generated@@244 ($generated@@124 $generated@@32 $generated@@32)) ($generated@@36 $generated@@153 $generated@@244 ($generated@@124 $generated@@32 $generated@@32) $generated@@246)) (and ($generated@@25 $generated@@31 $generated@@250 $generated@@32) ($generated@@36 $generated@@31 $generated@@250 $generated@@32 $generated@@246))) (and (and ($generated@@25 $generated@@31 $generated@@251 $generated@@37) ($generated@@36 $generated@@31 $generated@@251 $generated@@37 $generated@@246)) (and (= 1 $generated@@252) (= (ControlFlow 0 9) 8)))) $generated@@260))))
$generated@@261)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
