(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@T T@T) T@T)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@103 (T@U) Bool)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@125 (T@U) Int)
(declare-fun $generated@@126 (T@U) Int)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated@@21) $generated@@1))
(assert (= ($generated@@4 $generated@@23) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@25 $generated@@27) ($generated@@22 $generated@@23 $generated@@21 ($generated@@24 $generated@@26) $generated@@27))
 :pattern ( ($generated@@22 $generated@@23 $generated@@21 ($generated@@24 $generated@@26) $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ) (! ($generated@@28 $generated@@23 $generated@@21 ($generated@@24 $generated@@29))
 :pattern ( ($generated@@28 $generated@@23 $generated@@21 ($generated@@24 $generated@@29)))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@32) (= $generated@@31 $generated@@32))
 :pattern ( ($generated@@30 $generated@@31 $generated@@32))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@34 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@34 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@34 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@4 $generated@@35) 4)) (= ($generated@@4 $generated@@36) 5)) (= ($generated@@4 $generated@@37) 6)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@4 ($generated@@38 $generated@@54 $generated@@55)) 7))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@38 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@38 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@38 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@38 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@33 $generated@@60 $generated@@61) (forall (($generated@@62 T@U) ) (!  (=> ($generated@@9 ($generated@@39 $generated@@5 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@60 $generated@@62) $generated))) ($generated@@9 ($generated@@39 $generated@@5 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@61 $generated@@62) $generated))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@61 $generated@@62) $generated))
)))
 :pattern ( ($generated@@33 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (and ($generated@@63 $generated@@66) ($generated@@63 $generated@@67)) (= ($generated@@30 $generated@@66 $generated@@67)  (and (= ($generated@@64 $generated@@66) ($generated@@64 $generated@@67)) ($generated@@30 ($generated@@65 $generated@@66) ($generated@@65 $generated@@67)))))
 :pattern ( ($generated@@30 $generated@@66 $generated@@67) ($generated@@63 $generated@@66))
 :pattern ( ($generated@@30 $generated@@66 $generated@@67) ($generated@@63 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 $generated@@69) $generated@@69)
 :pattern ( ($generated@@68 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@28 $generated@@23 ($generated@@71 $generated@@74 $generated@@75) ($generated@@24 $generated@@73))  (and ($generated@@72 $generated@@74 $generated@@73) ($generated@@28 $generated@@23 $generated@@75 ($generated@@24 $generated@@73))))
 :pattern ( ($generated@@28 $generated@@23 ($generated@@71 $generated@@74 $generated@@75) ($generated@@24 $generated@@73)))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@76 $generated@@77) (= ($generated@@20 $generated@@77) $generated@@1))
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@63 $generated@@78) (= ($generated@@20 $generated@@78) $generated@@2))
 :pattern ( ($generated@@63 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 ($generated@@39 $generated@@81 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@39 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@63 $generated@@82) (exists (($generated@@83 T@U) ($generated@@84 T@U) ) (= $generated@@82 ($generated@@71 $generated@@83 $generated@@84))))
 :pattern ( ($generated@@63 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@76 $generated@@85) (= $generated@@85 $generated@@21))
 :pattern ( ($generated@@76 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@86 ($generated@@79 $generated@@90 $generated@@87) $generated@@88 $generated@@89) ($generated@@22 $generated@@90 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@86 ($generated@@79 $generated@@90 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@33 $generated@@91 $generated@@92) (=> ($generated@@86 $generated@@93 $generated@@94 $generated@@91) ($generated@@86 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@33 $generated@@91 $generated@@92) ($generated@@86 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (!  (=> ($generated@@33 $generated@@95 $generated@@96) (=> ($generated@@22 $generated@@99 $generated@@97 $generated@@98 $generated@@95) ($generated@@22 $generated@@99 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@33 $generated@@95 $generated@@96) ($generated@@22 $generated@@99 $generated@@97 $generated@@98 $generated@@95))
)))
(assert (forall (($generated@@102 T@U) ) (!  (and (= ($generated@@100 ($generated@@24 $generated@@102)) $generated@@0) (= ($generated@@101 ($generated@@24 $generated@@102)) $generated@@3))
 :pattern ( ($generated@@24 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@103 $generated@@104) (or ($generated@@76 $generated@@104) ($generated@@63 $generated@@104)))
 :pattern ( ($generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@28 $generated@@23 $generated@@106 ($generated@@24 $generated@@105)) (or ($generated@@76 $generated@@106) ($generated@@63 $generated@@106)))
 :pattern ( ($generated@@63 $generated@@106) ($generated@@28 $generated@@23 $generated@@106 ($generated@@24 $generated@@105)))
 :pattern ( ($generated@@76 $generated@@106) ($generated@@28 $generated@@23 $generated@@106 ($generated@@24 $generated@@105)))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (or (not (= $generated@@107 $generated@@109)) (not true)) (=> (and ($generated@@33 $generated@@107 $generated@@108) ($generated@@33 $generated@@108 $generated@@109)) ($generated@@33 $generated@@107 $generated@@109)))
 :pattern ( ($generated@@33 $generated@@107 $generated@@108) ($generated@@33 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@72 ($generated@@79 $generated@@112 $generated@@110) $generated@@111) ($generated@@28 $generated@@112 $generated@@110 $generated@@111))
 :pattern ( ($generated@@72 ($generated@@79 $generated@@112 $generated@@110) $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (and ($generated@@76 $generated@@113) ($generated@@76 $generated@@114)) ($generated@@30 $generated@@113 $generated@@114))
 :pattern ( ($generated@@30 $generated@@113 $generated@@114) ($generated@@76 $generated@@113))
 :pattern ( ($generated@@30 $generated@@113 $generated@@114) ($generated@@76 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@20 ($generated@@71 $generated@@115 $generated@@116)) $generated@@2)
 :pattern ( ($generated@@71 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@64 ($generated@@71 $generated@@117 $generated@@118)) $generated@@117)
 :pattern ( ($generated@@71 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@65 ($generated@@71 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@71 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@121 ($generated@@24 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@24 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@39 $generated@@124 ($generated@@79 $generated@@124 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@79 $generated@@124 $generated@@123))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (< ($generated@@125 $generated@@127) ($generated@@126 ($generated@@71 $generated@@127 $generated@@128)))
 :pattern ( ($generated@@71 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (< ($generated@@126 $generated@@130) ($generated@@126 ($generated@@71 $generated@@129 $generated@@130)))
 :pattern ( ($generated@@71 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and ($generated@@25 $generated@@133) (and ($generated@@63 $generated@@131) ($generated@@22 $generated@@23 $generated@@131 ($generated@@24 $generated@@132) $generated@@133))) ($generated@@86 ($generated@@64 $generated@@131) $generated@@132 $generated@@133))
 :pattern ( ($generated@@86 ($generated@@64 $generated@@131) $generated@@132 $generated@@133))
)))
(assert  (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@134 $generated@@137 $generated@@138 $generated@@139 ($generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@142 $generated@@143) $generated@@140)
 :weight 0
)) (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@134 $generated@@144 $generated@@145 $generated@@146 ($generated@@136 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@134 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@134 $generated@@153 $generated@@154 $generated@@155 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@134 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Bool) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@9 ($generated@@134 $generated@@37 $generated@@35 $generated@@5 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@162)) (not true)) ($generated@@9 ($generated@@39 $generated@@5 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@163 $generated@@166) $generated@@164)))) $generated@@165))
 :pattern ( ($generated@@134 $generated@@37 $generated@@35 $generated@@5 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@125 ($generated@@79 $generated@@23 $generated@@168)) ($generated@@126 $generated@@168))
 :pattern ( ($generated@@125 ($generated@@79 $generated@@23 $generated@@168)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@72 $generated@@170 ($generated@@24 $generated@@169)) (and (= ($generated@@79 $generated@@23 ($generated@@39 $generated@@23 $generated@@170)) $generated@@170) ($generated@@28 $generated@@23 ($generated@@39 $generated@@23 $generated@@170) ($generated@@24 $generated@@169))))
 :pattern ( ($generated@@72 $generated@@170 ($generated@@24 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@25 $generated@@173) (and ($generated@@63 $generated@@171) ($generated@@22 $generated@@23 $generated@@171 ($generated@@24 $generated@@172) $generated@@173))) ($generated@@22 $generated@@23 ($generated@@65 $generated@@171) ($generated@@24 $generated@@172) $generated@@173))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@65 $generated@@171) ($generated@@24 $generated@@172) $generated@@173))
)))
(assert (= $generated@@21 ($generated@@68 $generated@@23 $generated@@21)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@71 ($generated@@68 $generated@@36 $generated@@174) ($generated@@68 $generated@@23 $generated@@175)) ($generated@@68 $generated@@23 ($generated@@71 $generated@@174 $generated@@175)))
 :pattern ( ($generated@@71 ($generated@@68 $generated@@36 $generated@@174) ($generated@@68 $generated@@23 $generated@@175)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@T) ) (! (= ($generated@@79 $generated@@177 ($generated@@68 $generated@@177 $generated@@176)) ($generated@@68 $generated@@36 ($generated@@79 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@79 $generated@@177 ($generated@@68 $generated@@177 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@25 $generated@@181) (= ($generated@@22 $generated@@23 ($generated@@71 $generated@@179 $generated@@180) ($generated@@24 $generated@@178) $generated@@181)  (and ($generated@@86 $generated@@179 $generated@@178 $generated@@181) ($generated@@22 $generated@@23 $generated@@180 ($generated@@24 $generated@@178) $generated@@181))))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@71 $generated@@179 $generated@@180) ($generated@@24 $generated@@178) $generated@@181))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@208  (=> (= (ControlFlow 0 7) (- 0 6)) true)))
(let (($generated@@209  (=> (= $generated@@182 ($generated@@71 $generated@@183 $generated@@184)) (=> (and (and ($generated@@72 $generated@@183 $generated@@185) ($generated@@86 $generated@@183 $generated@@185 $generated@@186)) (and ($generated@@28 $generated@@23 $generated@@184 ($generated@@24 $generated@@185)) ($generated@@22 $generated@@23 $generated@@184 ($generated@@24 $generated@@185) $generated@@186))) (=> (and (and (and (and (and ($generated@@28 $generated@@23 $generated@@187 ($generated@@24 $generated@@185)) ($generated@@22 $generated@@23 $generated@@187 ($generated@@24 $generated@@185) $generated@@186)) (= $generated@@188 $generated@@184)) (and ($generated@@28 $generated@@23 $generated@@188 ($generated@@24 $generated@@185)) (= $generated@@187 $generated@@188))) (and (and ($generated@@72 $generated@@189 $generated@@185) ($generated@@86 $generated@@189 $generated@@185 $generated@@186)) (= $generated@@190 $generated@@183))) (and (and (and ($generated@@72 $generated@@190 $generated@@185) (= $generated@@189 $generated@@190)) (and ($generated@@72 $generated@@191 $generated@@185) ($generated@@86 $generated@@191 $generated@@185 $generated@@186))) (and (and (= $generated@@192 $generated@@193) ($generated@@72 $generated@@192 $generated@@185)) (and (= $generated@@191 $generated@@192) (= $generated@@194 ($generated@@71 $generated@@189 $generated@@187)))))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (< ($generated@@126 $generated@@194) ($generated@@126 $generated@@195))) (=> (< ($generated@@126 $generated@@194) ($generated@@126 $generated@@195)) (=> (and ($generated@@72 $generated@@196 $generated@@197) ($generated@@86 $generated@@196 $generated@@197 $generated@@186)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (not ($generated@@30 $generated@@194 $generated@@21))) (=> (not ($generated@@30 $generated@@194 $generated@@21)) (=> (and ($generated@@25 $generated@@198) ($generated@@199 $generated@@198)) (=> (and (and (and ($generated@@72 $generated@@200 $generated@@185) ($generated@@86 $generated@@200 $generated@@185 $generated@@198)) (forall (($generated@@210 T@U) ) (!  (=> (and (or (not (= $generated@@210 $generated@@201)) (not true)) ($generated@@9 ($generated@@39 $generated@@5 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@186 $generated@@210) $generated)))) (= ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@198 $generated@@210) ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@186 $generated@@210)))
 :pattern ( ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@198 $generated@@210))
))) (and ($generated@@33 $generated@@186 $generated@@198) (= (ControlFlow 0 9) 7))) $generated@@208))))))))))))
(let (($generated@@211  (=> (= $generated@@182 $generated@@21) (=> (and ($generated@@72 $generated@@202 $generated@@185) ($generated@@86 $generated@@202 $generated@@185 $generated@@186)) (=> (and (and (= $generated@@203 $generated@@193) ($generated@@72 $generated@@203 $generated@@185)) (and (= $generated@@202 $generated@@203) (= (ControlFlow 0 8) 7))) $generated@@208)))))
(let (($generated@@212 true))
(let (($generated@@213  (=> (or (not (= $generated@@182 $generated@@21)) (not true)) (and (=> (= (ControlFlow 0 12) 9) $generated@@209) (=> (= (ControlFlow 0 12) 5) $generated@@212)))))
(let (($generated@@214  (=> (= $generated@@195 ($generated@@71 $generated@@193 $generated@@182)) (=> (and (and ($generated@@72 $generated@@193 $generated@@185) ($generated@@86 $generated@@193 $generated@@185 $generated@@186)) (and ($generated@@28 $generated@@23 $generated@@182 ($generated@@24 $generated@@185)) ($generated@@22 $generated@@23 $generated@@182 ($generated@@24 $generated@@185) $generated@@186))) (and (=> (= (ControlFlow 0 13) 8) $generated@@211) (=> (= (ControlFlow 0 13) 12) $generated@@213))))))
(let (($generated@@215 true))
(let (($generated@@216  (=> (and (= $generated@@195 $generated@@21) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@217  (=> (or (not (= $generated@@195 ($generated@@71 $generated@@193 $generated@@182))) (not true)) (and (=> (= (ControlFlow 0 4) 2) $generated@@216) (=> (= (ControlFlow 0 4) 3) $generated@@215)))))
(let (($generated@@218  (=> (= $generated@@204 ($generated@@135 $generated@@201 $generated@@186 $generated false)) (and (=> (= (ControlFlow 0 14) 13) $generated@@214) (=> (= (ControlFlow 0 14) 4) $generated@@217)))))
(let (($generated@@219  (=> (and ($generated@@25 $generated@@186) ($generated@@199 $generated@@186)) (=> (and (and (and ($generated@@28 $generated@@23 $generated@@195 ($generated@@24 $generated@@185)) ($generated@@22 $generated@@23 $generated@@195 ($generated@@24 $generated@@185) $generated@@186)) ($generated@@103 $generated@@195)) (and (and (=> $generated@@205 (and ($generated@@72 $generated@@206 $generated@@185) ($generated@@86 $generated@@206 $generated@@185 $generated@@186))) (= 1 $generated@@207)) (and (not ($generated@@30 $generated@@195 $generated@@21)) (= (ControlFlow 0 15) 14)))) $generated@@218))))
$generated@@219))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
