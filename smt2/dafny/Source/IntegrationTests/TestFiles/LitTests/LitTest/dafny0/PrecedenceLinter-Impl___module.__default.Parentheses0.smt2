(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T T@T) T@T)
(declare-fun $generated@@62 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@85 (Int) Int)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@99 (Int) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@117 (T@U T@U) T@U)
(declare-fun $generated@@122 (T@U T@U) T@U)
(declare-fun $generated@@129 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Int)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@206 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@208 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated@@3) 0))
(assert (= ($generated@@30 $generated) $generated@@1))
(assert (= ($generated@@30 $generated@@0) $generated@@2))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (and (or (not (= $generated@@37 $generated@@33)) (not true)) (= ($generated@@34 $generated@@37) ($generated@@32 $generated@@36))) ($generated@@35 $generated@@15 ($generated@@19 ($generated@@31 $generated@@37)) $generated@@0))
 :pattern ( ($generated@@31 $generated@@37) ($generated@@32 $generated@@36))
)))
(assert (= ($generated@@13 $generated@@39) 3))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@42 ($generated@@40 $generated@@41) $generated@@43) ($generated@@38 $generated@@39 $generated@@42 ($generated@@32 $generated@@41) $generated@@43))
 :pattern ( ($generated@@38 $generated@@39 $generated@@42 ($generated@@40 $generated@@41) $generated@@43))
 :pattern ( ($generated@@38 $generated@@39 $generated@@42 ($generated@@32 $generated@@41) $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ) (!  (not ($generated@@44 $generated@@45 $generated@@46))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46))
)))
(assert (= ($generated@@13 $generated@@47) 4))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (and (and ($generated@@35 $generated@@47 $generated@@50 ($generated@@48 $generated@@51 $generated@@52)) (forall (($generated@@55 T@U) ) (!  (=> ($generated@@49 $generated@@55 $generated@@53) ($generated@@49 $generated@@55 $generated@@51))
 :pattern ( ($generated@@49 $generated@@55 $generated@@53))
 :pattern ( ($generated@@49 $generated@@55 $generated@@51))
))) (forall (($generated@@56 T@U) ) (!  (=> ($generated@@49 $generated@@56 $generated@@52) ($generated@@49 $generated@@56 $generated@@54))
 :pattern ( ($generated@@49 $generated@@56 $generated@@52))
 :pattern ( ($generated@@49 $generated@@56 $generated@@54))
))) ($generated@@35 $generated@@47 $generated@@50 ($generated@@48 $generated@@53 $generated@@54)))
 :pattern ( ($generated@@35 $generated@@47 $generated@@50 ($generated@@48 $generated@@51 $generated@@52)) ($generated@@35 $generated@@47 $generated@@50 ($generated@@48 $generated@@53 $generated@@54)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@58 $generated@@65 $generated@@66 ($generated@@62 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@69) $generated@@67)
 :weight 0
)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (or (= $generated@@74 $generated@@75) (= ($generated@@58 $generated@@70 $generated@@71 ($generated@@62 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@75) ($generated@@58 $generated@@70 $generated@@71 $generated@@73 $generated@@75)))
 :weight 0
))) (= ($generated@@13 $generated@@59) 5)) (= ($generated@@13 $generated@@60) 6)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@13 ($generated@@61 $generated@@76 $generated@@77)) 7))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@63 ($generated@@61 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@61 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@64 ($generated@@61 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@61 $generated@@80 $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@83 ($generated@@32 $generated@@82) $generated@@84)  (or (= $generated@@83 $generated@@33) ($generated@@18 ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@84 $generated@@83) $generated@@3)))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@83 ($generated@@32 $generated@@82) $generated@@84))
)))
(assert (forall (($generated@@86 Int) ) (! (= ($generated@@85 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 $generated@@88) $generated@@88)
 :pattern ( ($generated@@87 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and ($generated@@92 $generated@@96) (and ($generated@@49 $generated@@98 $generated@@94) ($generated@@35 $generated@@47 $generated@@97 ($generated@@48 $generated@@94 $generated@@95)))) (= ($generated@@93 ($generated@@90 $generated@@94 $generated@@95 $generated@@91 $generated@@97 $generated@@98) $generated@@45) ($generated@@93 ($generated@@90 $generated@@94 $generated@@95 $generated@@96 $generated@@97 $generated@@98) $generated@@45)))
 :pattern ( ($generated@@90 $generated@@94 $generated@@95 $generated@@91 $generated@@97 $generated@@98) ($generated@@92 $generated@@96))
 :pattern ( ($generated@@90 $generated@@94 $generated@@95 $generated@@96 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 Int) ) (!  (=> (and (and (and ($generated@@92 $generated@@102) (and (or (not (= $generated@@103 $generated@@33)) (not true)) (= ($generated@@34 $generated@@103) ($generated@@32 $generated@@101)))) (and (<= 0 $generated@@104) (< $generated@@104 ($generated@@31 $generated@@103)))) ($generated@@18 ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@102 $generated@@103) $generated@@3)))) ($generated@@100 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@102 $generated@@103) ($generated@@99 $generated@@104)) $generated@@101 $generated@@102))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@102 $generated@@103) ($generated@@99 $generated@@104)) ($generated@@32 $generated@@101))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@105 $generated@@107 ($generated@@57 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@57 $generated@@107 $generated@@106))
)))
(assert ($generated@@92 $generated@@91))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@35 $generated@@39 $generated@@109 ($generated@@40 $generated@@108))  (and ($generated@@35 $generated@@39 $generated@@109 ($generated@@32 $generated@@108)) (or (not (= $generated@@109 $generated@@33)) (not true))))
 :pattern ( ($generated@@35 $generated@@39 $generated@@109 ($generated@@40 $generated@@108)))
 :pattern ( ($generated@@35 $generated@@39 $generated@@109 ($generated@@32 $generated@@108)))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@100 ($generated@@105 $generated@@113 $generated@@110) $generated@@111 $generated@@112) ($generated@@38 $generated@@113 $generated@@110 $generated@@111 $generated@@112))
 :pattern ( ($generated@@100 ($generated@@105 $generated@@113 $generated@@110) $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@115 T@U) ) (!  (and (= ($generated@@30 ($generated@@32 $generated@@115)) $generated@@4) (= ($generated@@114 ($generated@@32 $generated@@115)) $generated@@9))
 :pattern ( ($generated@@32 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (!  (and (= ($generated@@30 ($generated@@40 $generated@@116)) $generated@@5) (= ($generated@@114 ($generated@@40 $generated@@116)) $generated@@9))
 :pattern ( ($generated@@40 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@38 $generated@@47 $generated@@120 ($generated@@117 $generated@@118 $generated@@119) $generated@@121) ($generated@@38 $generated@@47 $generated@@120 ($generated@@48 $generated@@118 $generated@@119) $generated@@121))
 :pattern ( ($generated@@38 $generated@@47 $generated@@120 ($generated@@117 $generated@@118 $generated@@119) $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@38 $generated@@47 $generated@@125 ($generated@@122 $generated@@123 $generated@@124) $generated@@126) ($generated@@38 $generated@@47 $generated@@125 ($generated@@117 $generated@@123 $generated@@124) $generated@@126))
 :pattern ( ($generated@@38 $generated@@47 $generated@@125 ($generated@@122 $generated@@123 $generated@@124) $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@35 $generated@@39 $generated@@128 ($generated@@32 $generated@@127))  (or (= $generated@@128 $generated@@33) (= ($generated@@34 $generated@@128) ($generated@@32 $generated@@127))))
 :pattern ( ($generated@@35 $generated@@39 $generated@@128 ($generated@@32 $generated@@127)))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and ($generated@@92 $generated@@134) ($generated@@38 $generated@@47 $generated@@131 ($generated@@48 $generated@@132 $generated@@133) $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and ($generated@@100 $generated@@135 $generated@@132 $generated@@134) ($generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131 $generated@@135)) ($generated@@100 ($generated@@129 $generated@@132 $generated@@133 $generated@@134 $generated@@131 $generated@@135) $generated@@133 $generated@@134))
 :pattern ( ($generated@@129 $generated@@132 $generated@@133 $generated@@134 $generated@@131 $generated@@135))
)))
 :pattern ( ($generated@@38 $generated@@47 $generated@@131 ($generated@@48 $generated@@132 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> ($generated@@93 $generated@@136 $generated@@137) (= $generated@@136 $generated@@137))
 :pattern ( ($generated@@93 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@35 $generated@@47 $generated@@138 ($generated@@48 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and ($generated@@92 $generated@@141) ($generated@@49 $generated@@142 $generated@@139)) ($generated@@130 $generated@@139 $generated@@140 $generated@@141 $generated@@138 $generated@@142)) ($generated@@49 ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@138 $generated@@142) $generated@@140))
 :pattern ( ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@138 $generated@@142))
)))
 :pattern ( ($generated@@35 $generated@@47 $generated@@138 ($generated@@48 $generated@@139 $generated@@140)))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@49 $generated@@143 $generated@@0) (and (= ($generated@@105 $generated@@15 ($generated@@57 $generated@@15 $generated@@143)) $generated@@143) ($generated@@35 $generated@@15 ($generated@@57 $generated@@15 $generated@@143) $generated@@0)))
 :pattern ( ($generated@@49 $generated@@143 $generated@@0))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> ($generated@@49 $generated@@144 $generated) (and (= ($generated@@105 $generated@@14 ($generated@@57 $generated@@14 $generated@@144)) $generated@@144) ($generated@@35 $generated@@14 ($generated@@57 $generated@@14 $generated@@144) $generated)))
 :pattern ( ($generated@@49 $generated@@144 $generated))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@49 ($generated@@105 $generated@@147 $generated@@145) $generated@@146) ($generated@@35 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@49 ($generated@@105 $generated@@147 $generated@@145) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ) (! (<= 0 ($generated@@31 $generated@@148))
 :pattern ( ($generated@@31 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@149 ($generated@@48 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@48 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@152 ($generated@@48 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@48 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@155 ($generated@@117 $generated@@156 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@117 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@158 ($generated@@117 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@117 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@161 ($generated@@122 $generated@@162 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@122 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@164 ($generated@@122 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@122 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 Int) ) (! (= ($generated@@29 ($generated@@99 $generated@@167)) 1)
 :pattern ( ($generated@@99 $generated@@167))
)))
(assert (forall (($generated@@169 Int) ) (! (= ($generated@@168 ($generated@@99 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@99 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@170 ($generated@@32 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@32 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@172 ($generated@@40 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@40 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@57 $generated@@175 ($generated@@105 $generated@@175 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@105 $generated@@175 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and ($generated@@92 $generated@@177) (and (or (not (= $generated@@178 $generated@@33)) (not true)) (= ($generated@@34 $generated@@178) ($generated@@32 $generated@@176)))) ($generated@@18 ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@177 $generated@@178) $generated@@3)))) ($generated@@38 $generated@@15 ($generated@@19 ($generated@@31 $generated@@178)) $generated@@0 $generated@@177))
 :pattern ( ($generated@@31 $generated@@178) ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@177 $generated@@178) $generated@@3)) ($generated@@32 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 Int) ) (!  (=> (and (and ($generated@@92 $generated@@180) (and (or (not (= $generated@@181 $generated@@33)) (not true)) (= ($generated@@34 $generated@@181) ($generated@@32 $generated@@179)))) (and (<= 0 $generated@@182) (< $generated@@182 ($generated@@31 $generated@@181)))) ($generated@@49 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@180 $generated@@181) ($generated@@99 $generated@@182)) $generated@@179))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@180 $generated@@181) ($generated@@99 $generated@@182)) ($generated@@32 $generated@@179))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@35 $generated@@47 $generated@@185 ($generated@@122 $generated@@183 $generated@@184))  (and ($generated@@35 $generated@@47 $generated@@185 ($generated@@117 $generated@@183 $generated@@184)) (forall (($generated@@186 T@U) )  (=> ($generated@@49 $generated@@186 $generated@@183) ($generated@@130 $generated@@183 $generated@@184 $generated@@91 $generated@@185 $generated@@186)))))
 :pattern ( ($generated@@35 $generated@@47 $generated@@185 ($generated@@122 $generated@@183 $generated@@184)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@35 $generated@@47 $generated@@189 ($generated@@117 $generated@@187 $generated@@188))  (and ($generated@@35 $generated@@47 $generated@@189 ($generated@@48 $generated@@187 $generated@@188)) (forall (($generated@@190 T@U) )  (=> ($generated@@49 $generated@@190 $generated@@187) ($generated@@93 ($generated@@90 $generated@@187 $generated@@188 $generated@@91 $generated@@189 $generated@@190) $generated@@45)))))
 :pattern ( ($generated@@35 $generated@@47 $generated@@189 ($generated@@117 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> ($generated@@92 $generated@@194) (= ($generated@@38 $generated@@47 $generated@@191 ($generated@@48 $generated@@192 $generated@@193) $generated@@194) (forall (($generated@@195 T@U) ) (!  (=> (and (and ($generated@@49 $generated@@195 $generated@@192) ($generated@@100 $generated@@195 $generated@@192 $generated@@194)) ($generated@@130 $generated@@192 $generated@@193 $generated@@194 $generated@@191 $generated@@195)) (forall (($generated@@196 T@U) ) (!  (=> (and (or (not (= $generated@@196 $generated@@33)) (not true)) ($generated@@44 ($generated@@90 $generated@@192 $generated@@193 $generated@@194 $generated@@191 $generated@@195) ($generated@@105 $generated@@39 $generated@@196))) ($generated@@18 ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@194 $generated@@196) $generated@@3))))
 :pattern ( ($generated@@44 ($generated@@90 $generated@@192 $generated@@193 $generated@@194 $generated@@191 $generated@@195) ($generated@@105 $generated@@39 $generated@@196)))
)))
 :pattern ( ($generated@@129 $generated@@192 $generated@@193 $generated@@194 $generated@@191 $generated@@195))
 :pattern ( ($generated@@90 $generated@@192 $generated@@193 $generated@@194 $generated@@191 $generated@@195))
))))
 :pattern ( ($generated@@38 $generated@@47 $generated@@191 ($generated@@48 $generated@@192 $generated@@193) $generated@@194))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@49 $generated@@199 ($generated@@48 $generated@@197 $generated@@198)) (and (= ($generated@@105 $generated@@47 ($generated@@57 $generated@@47 $generated@@199)) $generated@@199) ($generated@@35 $generated@@47 ($generated@@57 $generated@@47 $generated@@199) ($generated@@48 $generated@@197 $generated@@198))))
 :pattern ( ($generated@@49 $generated@@199 ($generated@@48 $generated@@197 $generated@@198)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> ($generated@@49 $generated@@202 ($generated@@117 $generated@@200 $generated@@201)) (and (= ($generated@@105 $generated@@47 ($generated@@57 $generated@@47 $generated@@202)) $generated@@202) ($generated@@35 $generated@@47 ($generated@@57 $generated@@47 $generated@@202) ($generated@@117 $generated@@200 $generated@@201))))
 :pattern ( ($generated@@49 $generated@@202 ($generated@@117 $generated@@200 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> ($generated@@49 $generated@@205 ($generated@@122 $generated@@203 $generated@@204)) (and (= ($generated@@105 $generated@@47 ($generated@@57 $generated@@47 $generated@@205)) $generated@@205) ($generated@@35 $generated@@47 ($generated@@57 $generated@@47 $generated@@205) ($generated@@122 $generated@@203 $generated@@204))))
 :pattern ( ($generated@@49 $generated@@205 ($generated@@122 $generated@@203 $generated@@204)))
)))
(assert  (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (= ($generated@@206 $generated@@209 $generated@@210 $generated@@211 ($generated@@208 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@214 $generated@@215) $generated@@212)
 :weight 0
)) (and (forall (($generated@@216 T@T) ($generated@@217 T@T) ($generated@@218 T@T) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@206 $generated@@216 $generated@@217 $generated@@218 ($generated@@208 $generated@@216 $generated@@217 $generated@@218 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@206 $generated@@216 $generated@@217 $generated@@218 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)) (forall (($generated@@225 T@T) ($generated@@226 T@T) ($generated@@227 T@T) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@206 $generated@@225 $generated@@226 $generated@@227 ($generated@@208 $generated@@225 $generated@@226 $generated@@227 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@206 $generated@@225 $generated@@226 $generated@@227 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (= ($generated@@18 ($generated@@206 $generated@@39 $generated@@59 $generated@@14 ($generated@@207 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (or (not (= $generated@@238 $generated@@234)) (not true)) ($generated@@18 ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@235 $generated@@238) $generated@@236)))) $generated@@237))
 :pattern ( ($generated@@206 $generated@@39 $generated@@59 $generated@@14 ($generated@@207 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (and (= ($generated@@30 ($generated@@48 $generated@@240 $generated@@241)) $generated@@6) (= ($generated@@114 ($generated@@48 $generated@@240 $generated@@241)) $generated@@10))
 :pattern ( ($generated@@48 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (and (= ($generated@@30 ($generated@@117 $generated@@242 $generated@@243)) $generated@@7) (= ($generated@@114 ($generated@@117 $generated@@242 $generated@@243)) $generated@@11))
 :pattern ( ($generated@@117 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (and (= ($generated@@30 ($generated@@122 $generated@@244 $generated@@245)) $generated@@8) (= ($generated@@114 ($generated@@122 $generated@@244 $generated@@245)) $generated@@12))
 :pattern ( ($generated@@122 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and ($generated@@92 $generated@@248) (and ($generated@@49 $generated@@250 $generated@@246) ($generated@@35 $generated@@47 $generated@@249 ($generated@@48 $generated@@246 $generated@@247)))) ($generated@@93 ($generated@@90 $generated@@246 $generated@@247 $generated@@91 $generated@@249 $generated@@250) $generated@@45)) (= ($generated@@130 $generated@@246 $generated@@247 $generated@@91 $generated@@249 $generated@@250) ($generated@@130 $generated@@246 $generated@@247 $generated@@248 $generated@@249 $generated@@250)))
 :pattern ( ($generated@@130 $generated@@246 $generated@@247 $generated@@91 $generated@@249 $generated@@250) ($generated@@92 $generated@@248))
 :pattern ( ($generated@@130 $generated@@246 $generated@@247 $generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> ($generated@@49 $generated@@252 ($generated@@32 $generated@@251)) (and (= ($generated@@105 $generated@@39 ($generated@@57 $generated@@39 $generated@@252)) $generated@@252) ($generated@@35 $generated@@39 ($generated@@57 $generated@@39 $generated@@252) ($generated@@32 $generated@@251))))
 :pattern ( ($generated@@49 $generated@@252 ($generated@@32 $generated@@251)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> ($generated@@49 $generated@@254 ($generated@@40 $generated@@253)) (and (= ($generated@@105 $generated@@39 ($generated@@57 $generated@@39 $generated@@254)) $generated@@254) ($generated@@35 $generated@@39 ($generated@@57 $generated@@39 $generated@@254) ($generated@@40 $generated@@253))))
 :pattern ( ($generated@@49 $generated@@254 ($generated@@40 $generated@@253)))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (= ($generated@@93 $generated@@255 $generated@@256) (forall (($generated@@257 T@U) ) (! (= ($generated@@44 $generated@@255 $generated@@257) ($generated@@44 $generated@@256 $generated@@257))
 :pattern ( ($generated@@44 $generated@@255 $generated@@257))
 :pattern ( ($generated@@44 $generated@@256 $generated@@257))
)))
 :pattern ( ($generated@@93 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@105 $generated@@15 ($generated@@19 ($generated@@85 $generated@@258))) ($generated@@87 $generated@@60 ($generated@@105 $generated@@15 ($generated@@19 $generated@@258))))
 :pattern ( ($generated@@105 $generated@@15 ($generated@@19 ($generated@@85 $generated@@258))))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@T) ) (! (= ($generated@@105 $generated@@260 ($generated@@87 $generated@@260 $generated@@259)) ($generated@@87 $generated@@60 ($generated@@105 $generated@@260 $generated@@259)))
 :pattern ( ($generated@@105 $generated@@260 ($generated@@87 $generated@@260 $generated@@259)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! ($generated@@38 $generated@@15 $generated@@262 $generated@@0 $generated@@261)
 :pattern ( ($generated@@38 $generated@@15 $generated@@262 $generated@@0 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! ($generated@@38 $generated@@14 $generated@@264 $generated $generated@@263)
 :pattern ( ($generated@@38 $generated@@14 $generated@@264 $generated $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! ($generated@@35 $generated@@15 $generated@@265 $generated@@0)
 :pattern ( ($generated@@35 $generated@@15 $generated@@265 $generated@@0))
)))
(assert (forall (($generated@@266 T@U) ) (! ($generated@@35 $generated@@14 $generated@@266 $generated)
 :pattern ( ($generated@@35 $generated@@14 $generated@@266 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U T@U) Bool)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () Int)
(declare-fun $generated@@272 () Bool)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () Int)
(declare-fun $generated@@275 () Bool)
(declare-fun $generated@@276 () Int)
(declare-fun $generated@@277 () Int)
(declare-fun $generated@@278 () Int)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@281 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 52) (let (($generated@@282 true))
(let (($generated@@283  (=> (and (or (not (= ($generated@@31 $generated@@267) ($generated@@85 3))) (not true)) (= (ControlFlow 0 7) 5)) $generated@@282)))
(let (($generated@@284  (=> (and (= ($generated@@31 $generated@@267) ($generated@@85 3)) (= (ControlFlow 0 6) 5)) $generated@@282)))
(let (($generated@@285  (=> (forall (($generated@@286 T@U) ) (!  (=> (and (<= ($generated@@85 0) ($generated@@20 $generated@@286)) (< ($generated@@20 $generated@@286) ($generated@@31 $generated@@267))) ($generated@@269 $generated@@0 ($generated@@105 $generated@@15 $generated@@286)))
 :pattern ( ($generated@@268 $generated@@0 ($generated@@105 $generated@@15 $generated@@286)))
)) (and (=> (= (ControlFlow 0 8) (- 0 10)) (forall (($generated@@287 Int) ) (!  (=> (and (and (<= ($generated@@85 0) $generated@@287) (< $generated@@287 ($generated@@31 $generated@@267))) ($generated@@268 $generated@@0 ($generated@@105 $generated@@15 ($generated@@19 $generated@@287)))) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (or (not (= $generated@@288 $generated@@33)) (not true)) (=> (= $generated@@288 $generated@@267) (= ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@288) $generated@@289) ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@288) $generated@@289))))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@288) $generated@@289))
)))
 :pattern ( ($generated@@268 $generated@@0 ($generated@@105 $generated@@15 ($generated@@19 $generated@@287))))
))) (=> (forall (($generated@@290 T@U) ) (!  (=> (and (and (<= ($generated@@85 0) ($generated@@20 $generated@@290)) (< ($generated@@20 $generated@@290) ($generated@@31 $generated@@267))) ($generated@@268 $generated@@0 ($generated@@105 $generated@@15 $generated@@290))) (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (or (not (= $generated@@291 $generated@@33)) (not true)) (=> (= $generated@@291 $generated@@267) (= ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@291) $generated@@292) ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@291) $generated@@292))))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@291) $generated@@292))
)))
 :pattern ( ($generated@@268 $generated@@0 ($generated@@105 $generated@@15 $generated@@290)))
)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= $generated@@267 $generated@@33)) (not true))) (=> (or (not (= $generated@@267 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 8) 6) $generated@@284) (=> (= (ControlFlow 0 8) 7) $generated@@283)))))))))
(let (($generated@@293  (=> (and (not (and (and (<= ($generated@@85 0) $generated@@271) (< $generated@@271 ($generated@@31 $generated@@267))) ($generated@@268 $generated@@0 ($generated@@105 $generated@@15 ($generated@@19 $generated@@271))))) (= (ControlFlow 0 13) 8)) $generated@@285)))
(let (($generated@@294  (=> (and (and (<= ($generated@@85 0) $generated@@271) (< $generated@@271 ($generated@@31 $generated@@267))) ($generated@@268 $generated@@0 ($generated@@105 $generated@@15 ($generated@@19 $generated@@271)))) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@38 $generated@@39 $generated@@267 ($generated@@40 $generated@@0) $generated@@270)) (=> ($generated@@38 $generated@@39 $generated@@267 ($generated@@40 $generated@@0) $generated@@270) (=> (= (ControlFlow 0 11) 8) $generated@@285))))))
(let (($generated@@295  (=> (not (and (<= ($generated@@85 0) $generated@@271) (< $generated@@271 ($generated@@31 $generated@@267)))) (and (=> (= (ControlFlow 0 15) 11) $generated@@294) (=> (= (ControlFlow 0 15) 13) $generated@@293)))))
(let (($generated@@296  (=> (and (and (<= ($generated@@85 0) $generated@@271) (< $generated@@271 ($generated@@31 $generated@@267))) (and ($generated@@38 $generated@@15 ($generated@@19 $generated@@271) $generated@@0 $generated@@270) ($generated@@269 $generated@@0 ($generated@@105 $generated@@15 ($generated@@19 $generated@@271))))) (and (=> (= (ControlFlow 0 14) 11) $generated@@294) (=> (= (ControlFlow 0 14) 13) $generated@@293)))))
(let (($generated@@297  (=> (< $generated@@271 ($generated@@85 0)) (and (=> (= (ControlFlow 0 18) 14) $generated@@296) (=> (= (ControlFlow 0 18) 15) $generated@@295)))))
(let (($generated@@298  (=> (<= ($generated@@85 0) $generated@@271) (and (=> (= (ControlFlow 0 16) (- 0 17)) (or (not (= $generated@@267 $generated@@33)) (not true))) (and (=> (= (ControlFlow 0 16) 14) $generated@@296) (=> (= (ControlFlow 0 16) 15) $generated@@295))))))
(let (($generated@@299  (and (=> (= (ControlFlow 0 19) 16) $generated@@298) (=> (= (ControlFlow 0 19) 18) $generated@@297))))
(let (($generated@@300 true))
(let (($generated@@301  (=> (= $generated@@272 (forall (($generated@@302 Int) ) (!  (=> (and (<= ($generated@@85 0) $generated@@302) (< $generated@@302 ($generated@@31 $generated@@267))) ($generated@@18 ($generated@@57 $generated@@14 ($generated@@129 $generated@@0 $generated $generated@@270 $generated@@273 ($generated@@105 $generated@@15 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@302))))))))
 :pattern ( ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@302))))
))) (and (=> (= (ControlFlow 0 20) 19) $generated@@299) (=> (= (ControlFlow 0 20) 4) $generated@@300)))))
(let (($generated@@303  (=> (and (not (and (<= ($generated@@85 0) $generated@@274) (< $generated@@274 ($generated@@31 $generated@@267)))) (= (ControlFlow 0 24) 20)) $generated@@301)))
(let (($generated@@304  (=> (and (<= ($generated@@85 0) $generated@@274) (< $generated@@274 ($generated@@31 $generated@@267))) (and (=> (= (ControlFlow 0 21) (- 0 23)) (or (not (= $generated@@267 $generated@@33)) (not true))) (=> (or (not (= $generated@@267 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (and (<= 0 $generated@@274) (< $generated@@274 ($generated@@31 $generated@@267)))) (=> (and (<= 0 $generated@@274) (< $generated@@274 ($generated@@31 $generated@@267))) (=> (= (ControlFlow 0 21) 20) $generated@@301))))))))
(let (($generated@@305  (=> (< $generated@@274 ($generated@@85 0)) (and (=> (= (ControlFlow 0 27) 21) $generated@@304) (=> (= (ControlFlow 0 27) 24) $generated@@303)))))
(let (($generated@@306  (=> (<= ($generated@@85 0) $generated@@274) (and (=> (= (ControlFlow 0 25) (- 0 26)) (or (not (= $generated@@267 $generated@@33)) (not true))) (=> (or (not (= $generated@@267 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 25) 21) $generated@@304) (=> (= (ControlFlow 0 25) 24) $generated@@303)))))))
(let (($generated@@307  (and (=> (= (ControlFlow 0 28) 25) $generated@@306) (=> (= (ControlFlow 0 28) 27) $generated@@305))))
(let (($generated@@308 true))
(let (($generated@@309  (=> (and (forall (($generated@@310 Int) ) (!  (=> (and (<= ($generated@@85 0) $generated@@310) (< $generated@@310 ($generated@@31 $generated@@267))) ($generated@@269 $generated@@0 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@310))))
 :pattern ( ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@310))))
)) (= $generated@@275 (forall (($generated@@311 Int) ) (!  (=> (and (<= ($generated@@85 0) $generated@@311) (< $generated@@311 ($generated@@31 $generated@@267))) ($generated@@268 $generated@@0 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@311))))
 :pattern ( ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@311))))
)))) (and (=> (= (ControlFlow 0 29) 28) $generated@@307) (=> (= (ControlFlow 0 29) 3) $generated@@308)))))
(let (($generated@@312  (=> (and (not (and (<= ($generated@@85 0) $generated@@276) (< $generated@@276 ($generated@@31 $generated@@267)))) (= (ControlFlow 0 33) 29)) $generated@@309)))
(let (($generated@@313  (=> (and (<= ($generated@@85 0) $generated@@276) (< $generated@@276 ($generated@@31 $generated@@267))) (and (=> (= (ControlFlow 0 30) (- 0 32)) (or (not (= $generated@@267 $generated@@33)) (not true))) (=> (or (not (= $generated@@267 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (and (<= 0 $generated@@276) (< $generated@@276 ($generated@@31 $generated@@267)))) (=> (and (<= 0 $generated@@276) (< $generated@@276 ($generated@@31 $generated@@267))) (=> (and (and (= $generated@@277 ($generated@@20 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@276))))) ($generated@@38 $generated@@15 ($generated@@19 $generated@@277) $generated@@0 $generated@@270)) (and ($generated@@269 $generated@@0 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@276))) (= (ControlFlow 0 30) 29))) $generated@@309))))))))
(let (($generated@@314  (=> (< $generated@@276 ($generated@@85 0)) (and (=> (= (ControlFlow 0 36) 30) $generated@@313) (=> (= (ControlFlow 0 36) 33) $generated@@312)))))
(let (($generated@@315  (=> (<= ($generated@@85 0) $generated@@276) (and (=> (= (ControlFlow 0 34) (- 0 35)) (or (not (= $generated@@267 $generated@@33)) (not true))) (=> (or (not (= $generated@@267 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 34) 30) $generated@@313) (=> (= (ControlFlow 0 34) 33) $generated@@312)))))))
(let (($generated@@316  (and (=> (= (ControlFlow 0 37) 34) $generated@@315) (=> (= (ControlFlow 0 37) 36) $generated@@314))))
(let (($generated@@317 true))
(let (($generated@@318  (and (=> (= (ControlFlow 0 38) (- 0 39)) (forall (($generated@@319 Int) ) (!  (=> (and (<= ($generated@@85 0) $generated@@319) (< $generated@@319 ($generated@@31 $generated@@267))) (= ($generated@@20 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@319)))) ($generated@@20 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@319))))))
 :pattern ( ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@319))))
 :pattern ( ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@319))))
))) (=> (forall (($generated@@320 Int) ) (!  (=> (and (<= ($generated@@85 0) $generated@@320) (< $generated@@320 ($generated@@31 $generated@@267))) (= ($generated@@20 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@320)))) ($generated@@20 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@320))))))
 :pattern ( ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@320))))
 :pattern ( ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@39 ($generated@@61 $generated@@59 $generated@@60) $generated@@270 $generated@@267) ($generated@@99 $generated@@320))))
)) (and (=> (= (ControlFlow 0 38) 37) $generated@@316) (=> (= (ControlFlow 0 38) 2) $generated@@317))))))
(let (($generated@@321  (=> (and (not (and (<= ($generated@@85 0) $generated@@278) (< $generated@@278 ($generated@@31 $generated@@267)))) (= (ControlFlow 0 46) 38)) $generated@@318)))
(let (($generated@@322  (=> (and (<= ($generated@@85 0) $generated@@278) (< $generated@@278 ($generated@@31 $generated@@267))) (and (=> (= (ControlFlow 0 40) (- 0 45)) (or (not (= $generated@@267 $generated@@33)) (not true))) (=> (or (not (= $generated@@267 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 40) (- 0 44)) (and (<= 0 $generated@@278) (< $generated@@278 ($generated@@31 $generated@@267)))) (and (=> (= (ControlFlow 0 40) (- 0 43)) (or (not (= $generated@@267 $generated@@33)) (not true))) (=> (or (not (= $generated@@267 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 40) (- 0 42)) ($generated@@38 $generated@@39 $generated@@267 ($generated@@32 $generated@@0) $generated@@270)) (=> ($generated@@38 $generated@@39 $generated@@267 ($generated@@32 $generated@@0) $generated@@270) (and (=> (= (ControlFlow 0 40) (- 0 41)) (and (<= 0 $generated@@278) (< $generated@@278 ($generated@@31 $generated@@267)))) (=> (= (ControlFlow 0 40) 38) $generated@@318))))))))))))
(let (($generated@@323  (=> (< $generated@@278 ($generated@@85 0)) (and (=> (= (ControlFlow 0 49) 40) $generated@@322) (=> (= (ControlFlow 0 49) 46) $generated@@321)))))
(let (($generated@@324  (=> (<= ($generated@@85 0) $generated@@278) (and (=> (= (ControlFlow 0 47) (- 0 48)) (or (not (= $generated@@267 $generated@@33)) (not true))) (and (=> (= (ControlFlow 0 47) 40) $generated@@322) (=> (= (ControlFlow 0 47) 46) $generated@@321))))))
(let (($generated@@325  (and (=> (= (ControlFlow 0 50) 47) $generated@@324) (=> (= (ControlFlow 0 50) 49) $generated@@323))))
(let (($generated@@326 true))
(let (($generated@@327  (=> (= $generated@@279 ($generated@@207 $generated@@33 $generated@@270 $generated@@3 false)) (and (=> (= (ControlFlow 0 51) 50) $generated@@325) (=> (= (ControlFlow 0 51) 1) $generated@@326)))))
(let (($generated@@328  (=> (and (and (and ($generated@@92 $generated@@270) ($generated@@280 $generated@@270)) (and ($generated@@35 $generated@@39 $generated@@267 ($generated@@40 $generated@@0)) ($generated@@38 $generated@@39 $generated@@267 ($generated@@40 $generated@@0) $generated@@270))) (and (and ($generated@@35 $generated@@47 $generated@@273 ($generated@@122 $generated@@0 $generated)) ($generated@@38 $generated@@47 $generated@@273 ($generated@@122 $generated@@0 $generated) $generated@@270)) (and (= 1 $generated@@281) (= (ControlFlow 0 52) 51)))) $generated@@327)))
$generated@@328))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
