(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (T@U T@U) T@U)
(declare-fun $generated@@19 (T@U T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@23 (Int Int) Int)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) Int)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U T@U T@U) Bool)
(declare-fun $generated@@48 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@80 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@84 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (!  (and (= (+ (+ ($generated@@17 ($generated@@18 $generated@@21 $generated@@22)) ($generated@@17 ($generated@@18 $generated@@22 $generated@@21))) (* 2 ($generated@@17 ($generated@@19 $generated@@21 $generated@@22)))) ($generated@@17 ($generated@@20 $generated@@21 $generated@@22))) (= ($generated@@17 ($generated@@18 $generated@@21 $generated@@22)) (- ($generated@@17 $generated@@21) ($generated@@17 ($generated@@19 $generated@@21 $generated@@22)))))
 :pattern ( ($generated@@17 ($generated@@18 $generated@@21 $generated@@22)))
)))
(assert (forall (($generated@@24 Int) ($generated@@25 Int) ) (!  (or (= ($generated@@23 $generated@@24 $generated@@25) $generated@@24) (= ($generated@@23 $generated@@24 $generated@@25) $generated@@25))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25))
)))
(assert (= ($generated@@1 $generated@@27) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@29 $generated@@30))
 :pattern ( ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31)))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (<= ($generated@@32 $generated@@33 $generated@@35) ($generated@@32 $generated@@34 $generated@@35)) (= ($generated@@32 ($generated@@18 $generated@@33 $generated@@34) $generated@@35) 0))
 :pattern ( ($generated@@18 $generated@@33 $generated@@34) ($generated@@32 $generated@@34 $generated@@35) ($generated@@32 $generated@@33 $generated@@35))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@19 ($generated@@19 $generated@@36 $generated@@37) $generated@@37) ($generated@@19 $generated@@36 $generated@@37))
 :pattern ( ($generated@@19 ($generated@@19 $generated@@36 $generated@@37) $generated@@37))
)))
(assert (forall (($generated@@39 Int) ) (!  (=> (<= 0 $generated@@39) (= ($generated@@38 $generated@@39) $generated@@39))
 :pattern ( ($generated@@38 $generated@@39))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@32 ($generated@@19 $generated@@40 $generated@@41) $generated@@42) ($generated@@23 ($generated@@32 $generated@@40 $generated@@42) ($generated@@32 $generated@@41 $generated@@42)))
 :pattern ( ($generated@@32 ($generated@@19 $generated@@40 $generated@@41) $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 ($generated@@43 $generated@@46 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@43 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@52 $generated@@49) $generated@@50 $generated@@51) ($generated@@48 $generated@@52 $generated@@49 $generated@@50 $generated@@51))
 :pattern ( ($generated@@47 ($generated@@44 $generated@@52 $generated@@49) $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@17 ($generated@@20 $generated@@53 $generated@@54)) (+ ($generated@@17 $generated@@53) ($generated@@17 $generated@@54)))
 :pattern ( ($generated@@17 ($generated@@20 $generated@@53 $generated@@54)))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@56 ($generated@@28 $generated@@57)) (forall (($generated@@58 T@U) ) (!  (=> (< 0 ($generated@@32 $generated@@56 $generated@@58)) ($generated@@55 $generated@@58 $generated@@57))
 :pattern ( ($generated@@32 $generated@@56 $generated@@58))
)))
 :pattern ( ($generated@@26 $generated@@27 $generated@@56 ($generated@@28 $generated@@57)))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@55 ($generated@@44 $generated@@61 $generated@@59) $generated@@60) ($generated@@26 $generated@@61 $generated@@59 $generated@@60))
 :pattern ( ($generated@@55 ($generated@@44 $generated@@61 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@29 $generated@@62) (forall (($generated@@63 T@U) ) (!  (and (<= 0 ($generated@@32 $generated@@62 $generated@@63)) (<= ($generated@@32 $generated@@62 $generated@@63) ($generated@@17 $generated@@62)))
 :pattern ( ($generated@@32 $generated@@62 $generated@@63))
)))
 :pattern ( ($generated@@29 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (<= 0 ($generated@@17 $generated@@64))
 :pattern ( ($generated@@17 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@32 $generated@@65 $generated@@66) 0)
 :pattern ( ($generated@@32 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 ($generated@@28 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@28 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 ($generated@@28 $generated@@70)) $generated)
 :pattern ( ($generated@@28 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@43 $generated@@72 ($generated@@44 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@44 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@19 $generated@@73 ($generated@@19 $generated@@73 $generated@@74)) ($generated@@19 $generated@@73 $generated@@74))
 :pattern ( ($generated@@19 $generated@@73 ($generated@@19 $generated@@73 $generated@@74)))
)))
(assert (forall (($generated@@75 T@U) ) (!  (and (= (= ($generated@@17 $generated@@75) 0) (= $generated@@75 $generated@@65)) (=> (or (not (= ($generated@@17 $generated@@75) 0)) (not true)) (exists (($generated@@76 T@U) ) (! (< 0 ($generated@@32 $generated@@75 $generated@@76))
 :pattern ( ($generated@@32 $generated@@75 $generated@@76))
))))
 :pattern ( ($generated@@17 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@32 ($generated@@20 $generated@@77 $generated@@78) $generated@@79) (+ ($generated@@32 $generated@@77 $generated@@79) ($generated@@32 $generated@@78 $generated@@79)))
 :pattern ( ($generated@@32 ($generated@@20 $generated@@77 $generated@@78) $generated@@79))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@80 $generated@@91 $generated@@92 $generated@@93 ($generated@@87 $generated@@91 $generated@@92 $generated@@93 $generated@@95 $generated@@96 $generated@@97 $generated@@94) $generated@@96 $generated@@97) $generated@@94)
 :weight 0
)) (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@103 $generated@@105) (= ($generated@@80 $generated@@98 $generated@@99 $generated@@100 ($generated@@87 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@104 $generated@@101) $generated@@105 $generated@@106) ($generated@@80 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@105 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@80 $generated@@107 $generated@@108 $generated@@109 ($generated@@87 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@114 $generated@@115) ($generated@@80 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@114 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 4)) (= ($generated@@1 $generated@@82) 5)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@84 $generated@@116 $generated@@117 ($generated@@88 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@118) $generated@@120) $generated@@118)
 :weight 0
))) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@84 $generated@@121 $generated@@122 ($generated@@88 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@84 $generated@@121 $generated@@122 $generated@@124 $generated@@126)))
 :weight 0
))) (= ($generated@@1 $generated@@85) 6)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@127 $generated@@128)) 7))) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (! (= ($generated@@89 ($generated@@86 $generated@@129 $generated@@130)) $generated@@129)
 :pattern ( ($generated@@86 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@131 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@86 $generated@@131 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 Bool) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@6 ($generated@@80 $generated@@81 $generated@@82 $generated@@2 ($generated@@83 $generated@@133 $generated@@134 $generated@@135 $generated@@136) $generated@@137 $generated@@138))  (=> (and (or (not (= $generated@@137 $generated@@133)) (not true)) ($generated@@6 ($generated@@43 $generated@@2 ($generated@@84 $generated@@82 $generated@@85 ($generated@@84 $generated@@81 ($generated@@86 $generated@@82 $generated@@85) $generated@@134 $generated@@137) $generated@@135)))) $generated@@136))
 :pattern ( ($generated@@80 $generated@@81 $generated@@82 $generated@@2 ($generated@@83 $generated@@133 $generated@@134 $generated@@135 $generated@@136) $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 Int) ($generated@@140 Int) ) (! (= (<= $generated@@139 $generated@@140) (= ($generated@@23 $generated@@139 $generated@@140) $generated@@139))
 :pattern ( ($generated@@23 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 Int) ($generated@@142 Int) ) (! (= (<= $generated@@142 $generated@@141) (= ($generated@@23 $generated@@141 $generated@@142) $generated@@142))
 :pattern ( ($generated@@23 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@55 $generated@@143 ($generated@@28 $generated@@144)) (and (= ($generated@@44 $generated@@27 ($generated@@43 $generated@@27 $generated@@143)) $generated@@143) ($generated@@26 $generated@@27 ($generated@@43 $generated@@27 $generated@@143) ($generated@@28 $generated@@144))))
 :pattern ( ($generated@@55 $generated@@143 ($generated@@28 $generated@@144)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@32 ($generated@@18 $generated@@145 $generated@@146) $generated@@147) ($generated@@38 (- ($generated@@32 $generated@@145 $generated@@147) ($generated@@32 $generated@@146 $generated@@147))))
 :pattern ( ($generated@@32 ($generated@@18 $generated@@145 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@148 Int) ) (!  (=> (< $generated@@148 0) (= ($generated@@38 $generated@@148) 0))
 :pattern ( ($generated@@38 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@48 $generated@@27 $generated@@149 ($generated@@28 $generated@@150) $generated@@151) (forall (($generated@@152 T@U) ) (!  (=> (< 0 ($generated@@32 $generated@@149 $generated@@152)) ($generated@@47 $generated@@152 $generated@@150 $generated@@151))
 :pattern ( ($generated@@32 $generated@@149 $generated@@152))
)))
 :pattern ( ($generated@@48 $generated@@27 $generated@@149 ($generated@@28 $generated@@150) $generated@@151))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@162  (=> (and (= $generated@@153 ($generated@@83 $generated@@154 $generated@@155 $generated@@0 false)) (= (ControlFlow 0 2) (- 0 1))) (= (+ (+ (+ ($generated@@17 ($generated@@19 $generated@@156 $generated@@157)) ($generated@@17 ($generated@@19 $generated@@157 $generated@@156))) ($generated@@17 ($generated@@18 $generated@@156 $generated@@157))) ($generated@@17 ($generated@@18 $generated@@157 $generated@@156))) ($generated@@17 ($generated@@20 $generated@@156 $generated@@157))))))
(let (($generated@@163  (=> (and (and (and ($generated@@158 $generated@@155) ($generated@@159 $generated@@155)) (and ($generated@@26 $generated@@27 $generated@@156 ($generated@@28 $generated@@160)) ($generated@@48 $generated@@27 $generated@@156 ($generated@@28 $generated@@160) $generated@@155))) (and (and ($generated@@26 $generated@@27 $generated@@157 ($generated@@28 $generated@@160)) ($generated@@48 $generated@@27 $generated@@157 ($generated@@28 $generated@@160) $generated@@155)) (and (= 0 $generated@@161) (= (ControlFlow 0 3) 2)))) $generated@@162)))
$generated@@163)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
