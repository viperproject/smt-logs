(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U Int T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) Int)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@59 (Int Int) Int)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@64 (T@T T@U T@U) Bool)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@75 (Int) Int)
(declare-fun $generated@@77 (Int) Int)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) Bool)
(declare-fun $generated@@103 (T@U T@U) Bool)
(declare-fun $generated@@107 (T@U T@U T@U) Bool)
(declare-fun $generated@@108 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@115 (T@U T@U) Bool)
(declare-fun $generated@@118 (T@U T@U) Bool)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@158 (T@T T@T) T@T)
(declare-fun $generated@@159 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated) $generated@@0))
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@22 ($generated@@21 $generated@@23 $generated@@24) $generated@@24)
 :pattern ( ($generated@@21 $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (and (= (+ (+ ($generated@@25 ($generated@@26 $generated@@29 $generated@@30)) ($generated@@25 ($generated@@26 $generated@@30 $generated@@29))) (* 2 ($generated@@25 ($generated@@27 $generated@@29 $generated@@30)))) ($generated@@25 ($generated@@28 $generated@@29 $generated@@30))) (= ($generated@@25 ($generated@@26 $generated@@29 $generated@@30)) (- ($generated@@25 $generated@@29) ($generated@@25 ($generated@@27 $generated@@29 $generated@@30)))))
 :pattern ( ($generated@@25 ($generated@@26 $generated@@29 $generated@@30)))
)))
(assert  (and (and (forall (($generated@@37 T@T) ($generated@@38 T@T) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@31 $generated@@37 $generated@@38 ($generated@@36 $generated@@37 $generated@@38 $generated@@40 $generated@@41 $generated@@39) $generated@@41) $generated@@39)
 :weight 0
)) (forall (($generated@@42 T@T) ($generated@@43 T@T) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (or (= $generated@@46 $generated@@47) (= ($generated@@31 $generated@@42 $generated@@43 ($generated@@36 $generated@@42 $generated@@43 $generated@@45 $generated@@46 $generated@@44) $generated@@47) ($generated@@31 $generated@@42 $generated@@43 $generated@@45 $generated@@47)))
 :weight 0
))) (= ($generated@@4 $generated@@32) 3)))
(assert (forall (($generated@@48 T@U) ($generated@@49 Int) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@9 ($generated@@31 $generated@@32 $generated@@5 ($generated@@33 $generated@@48 $generated@@49 $generated@@50) $generated@@51)) (exists (($generated@@52 Int) ) (!  (and (> ($generated@@34 $generated@@48 ($generated@@35 $generated@@6 ($generated@@10 $generated@@52))) $generated@@49) (= $generated@@51 ($generated@@35 $generated@@6 ($generated@@10 $generated@@52))))
 :pattern ( ($generated@@34 $generated@@50 ($generated@@35 $generated@@6 ($generated@@10 $generated@@52))))
)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@5 ($generated@@33 $generated@@48 $generated@@49 $generated@@50) $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> ($generated@@22 $generated@@53 $generated@@55) ($generated@@22 ($generated@@21 $generated@@53 $generated@@54) $generated@@55))
 :pattern ( ($generated@@21 $generated@@53 $generated@@54) ($generated@@22 $generated@@53 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@22 ($generated@@21 $generated@@56 $generated@@57) $generated@@58)  (or (= $generated@@58 $generated@@57) ($generated@@22 $generated@@56 $generated@@58)))
 :pattern ( ($generated@@22 ($generated@@21 $generated@@56 $generated@@57) $generated@@58))
)))
(assert (forall (($generated@@60 Int) ($generated@@61 Int) ) (!  (or (= ($generated@@59 $generated@@60 $generated@@61) $generated@@60) (= ($generated@@59 $generated@@60 $generated@@61) $generated@@61))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (!  (not ($generated@@22 $generated@@62 $generated@@63))
 :pattern ( ($generated@@22 $generated@@62 $generated@@63))
)))
(assert (= ($generated@@4 $generated@@65) 4))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@64 $generated@@65 $generated@@68 ($generated@@66 $generated@@69)) ($generated@@67 $generated@@68))
 :pattern ( ($generated@@64 $generated@@65 $generated@@68 ($generated@@66 $generated@@69)))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (<= ($generated@@34 $generated@@70 $generated@@72) ($generated@@34 $generated@@71 $generated@@72)) (= ($generated@@34 ($generated@@26 $generated@@70 $generated@@71) $generated@@72) 0))
 :pattern ( ($generated@@26 $generated@@70 $generated@@71) ($generated@@34 $generated@@71 $generated@@72) ($generated@@34 $generated@@70 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@27 ($generated@@27 $generated@@73 $generated@@74) $generated@@74) ($generated@@27 $generated@@73 $generated@@74))
 :pattern ( ($generated@@27 ($generated@@27 $generated@@73 $generated@@74) $generated@@74))
)))
(assert (forall (($generated@@76 Int) ) (!  (=> (<= 0 $generated@@76) (= ($generated@@75 $generated@@76) $generated@@76))
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@77 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@34 ($generated@@27 $generated@@82 $generated@@83) $generated@@84) ($generated@@59 ($generated@@34 $generated@@82 $generated@@84) ($generated@@34 $generated@@83 $generated@@84)))
 :pattern ( ($generated@@34 ($generated@@27 $generated@@82 $generated@@83) $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@35 $generated@@87 ($generated@@85 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@85 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or (not (= $generated@@90 $generated@@91)) (not true)) (= ($generated@@34 $generated@@89 $generated@@91) ($generated@@34 ($generated@@88 $generated@@89 $generated@@90) $generated@@91)))
 :pattern ( ($generated@@88 $generated@@89 $generated@@90) ($generated@@34 $generated@@89 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@22 ($generated@@92 $generated@@93) $generated@@94) ($generated@@9 ($generated@@31 $generated@@32 $generated@@5 $generated@@93 $generated@@94)))
 :pattern ( ($generated@@22 ($generated@@92 $generated@@93) $generated@@94))
)))
(assert (= ($generated@@4 $generated@@95) 5))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@64 $generated@@95 $generated@@98 ($generated@@96 $generated@@99)) (forall (($generated@@100 T@U) ) (!  (=> ($generated@@22 $generated@@98 $generated@@100) ($generated@@97 $generated@@100 $generated@@99))
 :pattern ( ($generated@@22 $generated@@98 $generated@@100))
)))
 :pattern ( ($generated@@64 $generated@@95 $generated@@98 ($generated@@96 $generated@@99)))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@25 ($generated@@88 $generated@@101 $generated@@102)) (+ ($generated@@25 $generated@@101) 1))
 :pattern ( ($generated@@25 ($generated@@88 $generated@@101 $generated@@102)))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@103 $generated@@104 $generated@@105) (forall (($generated@@106 T@U) ) (!  (or (= ($generated@@34 $generated@@104 $generated@@106) 0) (= ($generated@@34 $generated@@105 $generated@@106) 0))
 :pattern ( ($generated@@34 $generated@@104 $generated@@106))
 :pattern ( ($generated@@34 $generated@@105 $generated@@106))
)))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@107 ($generated@@35 $generated@@112 $generated@@109) $generated@@110 $generated@@111) ($generated@@108 $generated@@112 $generated@@109 $generated@@110 $generated@@111))
 :pattern ( ($generated@@107 ($generated@@35 $generated@@112 $generated@@109) $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@25 ($generated@@28 $generated@@113 $generated@@114)) (+ ($generated@@25 $generated@@113) ($generated@@25 $generated@@114)))
 :pattern ( ($generated@@25 ($generated@@28 $generated@@113 $generated@@114)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> ($generated@@115 $generated@@116 $generated@@117) (= $generated@@116 $generated@@117))
 :pattern ( ($generated@@115 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@118 $generated@@119 $generated@@120) (= $generated@@119 $generated@@120))
 :pattern ( ($generated@@118 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@64 $generated@@65 $generated@@121 ($generated@@66 $generated@@122)) (forall (($generated@@123 T@U) ) (!  (=> (< 0 ($generated@@34 $generated@@121 $generated@@123)) ($generated@@97 $generated@@123 $generated@@122))
 :pattern ( ($generated@@34 $generated@@121 $generated@@123))
)))
 :pattern ( ($generated@@64 $generated@@65 $generated@@121 ($generated@@66 $generated@@122)))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@97 $generated@@124 $generated) (and (= ($generated@@35 $generated@@6 ($generated@@85 $generated@@6 $generated@@124)) $generated@@124) ($generated@@64 $generated@@6 ($generated@@85 $generated@@6 $generated@@124) $generated)))
 :pattern ( ($generated@@97 $generated@@124 $generated))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@97 ($generated@@35 $generated@@127 $generated@@125) $generated@@126) ($generated@@64 $generated@@127 $generated@@125 $generated@@126))
 :pattern ( ($generated@@97 ($generated@@35 $generated@@127 $generated@@125) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@67 $generated@@128) (forall (($generated@@129 T@U) ) (!  (and (<= 0 ($generated@@34 $generated@@128 $generated@@129)) (<= ($generated@@34 $generated@@128 $generated@@129) ($generated@@25 $generated@@128)))
 :pattern ( ($generated@@34 $generated@@128 $generated@@129))
)))
 :pattern ( ($generated@@67 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (! (<= 0 ($generated@@25 $generated@@130))
 :pattern ( ($generated@@25 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@108 $generated@@95 $generated@@131 ($generated@@96 $generated@@132) $generated@@133) (forall (($generated@@134 T@U) ) (!  (=> ($generated@@22 $generated@@131 $generated@@134) ($generated@@107 $generated@@134 $generated@@132 $generated@@133))
 :pattern ( ($generated@@22 $generated@@131 $generated@@134))
)))
 :pattern ( ($generated@@108 $generated@@95 $generated@@131 ($generated@@96 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@34 $generated@@135 $generated@@136) 0)
 :pattern ( ($generated@@34 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@34 ($generated@@88 $generated@@137 $generated@@138) $generated@@138) (+ ($generated@@34 $generated@@137 $generated@@138) 1))
 :pattern ( ($generated@@88 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@96 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@96 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@20 ($generated@@96 $generated@@141)) $generated@@1)
 :pattern ( ($generated@@96 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@66 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@66 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@20 ($generated@@66 $generated@@144)) $generated@@2)
 :pattern ( ($generated@@66 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@85 $generated@@146 ($generated@@35 $generated@@146 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@35 $generated@@146 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@27 $generated@@147 ($generated@@27 $generated@@147 $generated@@148)) ($generated@@27 $generated@@147 $generated@@148))
 :pattern ( ($generated@@27 $generated@@147 ($generated@@27 $generated@@147 $generated@@148)))
)))
(assert (forall (($generated@@149 T@U) ) (!  (and (= (= ($generated@@25 $generated@@149) 0) (= $generated@@149 $generated@@135)) (=> (or (not (= ($generated@@25 $generated@@149) 0)) (not true)) (exists (($generated@@150 T@U) ) (! (< 0 ($generated@@34 $generated@@149 $generated@@150))
 :pattern ( ($generated@@34 $generated@@149 $generated@@150))
))))
 :pattern ( ($generated@@25 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@34 ($generated@@28 $generated@@151 $generated@@152) $generated@@153) (+ ($generated@@34 $generated@@151 $generated@@153) ($generated@@34 $generated@@152 $generated@@153)))
 :pattern ( ($generated@@34 ($generated@@28 $generated@@151 $generated@@152) $generated@@153))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@154 $generated@@162 $generated@@163 $generated@@164 ($generated@@159 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@167 $generated@@168) $generated@@165)
 :weight 0
)) (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@154 $generated@@169 $generated@@170 $generated@@171 ($generated@@159 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@154 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@154 $generated@@178 $generated@@179 $generated@@180 ($generated@@159 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@154 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)))) (= ($generated@@4 $generated@@155) 6)) (= ($generated@@4 $generated@@156) 7)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@4 ($generated@@158 $generated@@187 $generated@@188)) 8))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@160 ($generated@@158 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@158 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@161 ($generated@@158 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@158 $generated@@191 $generated@@192))
))))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 Bool) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@9 ($generated@@154 $generated@@155 $generated@@156 $generated@@5 ($generated@@157 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@197 $generated@@198))  (=> (and (or (not (= $generated@@197 $generated@@193)) (not true)) ($generated@@9 ($generated@@85 $generated@@5 ($generated@@31 $generated@@156 $generated@@32 ($generated@@31 $generated@@155 ($generated@@158 $generated@@156 $generated@@32) $generated@@194 $generated@@197) $generated@@195)))) $generated@@196))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156 $generated@@5 ($generated@@157 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 Int) ($generated@@200 Int) ) (! (= (<= $generated@@199 $generated@@200) (= ($generated@@59 $generated@@199 $generated@@200) $generated@@199))
 :pattern ( ($generated@@59 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 Int) ($generated@@202 Int) ) (! (= (<= $generated@@202 $generated@@201) (= ($generated@@59 $generated@@201 $generated@@202) $generated@@202))
 :pattern ( ($generated@@59 $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> ($generated@@97 $generated@@203 ($generated@@96 $generated@@204)) (and (= ($generated@@35 $generated@@95 ($generated@@85 $generated@@95 $generated@@203)) $generated@@203) ($generated@@64 $generated@@95 ($generated@@85 $generated@@95 $generated@@203) ($generated@@96 $generated@@204))))
 :pattern ( ($generated@@97 $generated@@203 ($generated@@96 $generated@@204)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> ($generated@@97 $generated@@205 ($generated@@66 $generated@@206)) (and (= ($generated@@35 $generated@@65 ($generated@@85 $generated@@65 $generated@@205)) $generated@@205) ($generated@@64 $generated@@65 ($generated@@85 $generated@@65 $generated@@205) ($generated@@66 $generated@@206))))
 :pattern ( ($generated@@97 $generated@@205 ($generated@@66 $generated@@206)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@34 ($generated@@26 $generated@@207 $generated@@208) $generated@@209) ($generated@@75 (- ($generated@@34 $generated@@207 $generated@@209) ($generated@@34 $generated@@208 $generated@@209))))
 :pattern ( ($generated@@34 ($generated@@26 $generated@@207 $generated@@208) $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@115 $generated@@210 $generated@@211) (forall (($generated@@212 T@U) ) (! (= ($generated@@22 $generated@@210 $generated@@212) ($generated@@22 $generated@@211 $generated@@212))
 :pattern ( ($generated@@22 $generated@@210 $generated@@212))
 :pattern ( ($generated@@22 $generated@@211 $generated@@212))
)))
 :pattern ( ($generated@@115 $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@213 Int) ) (!  (=> (< $generated@@213 0) (= ($generated@@75 $generated@@213) 0))
 :pattern ( ($generated@@75 $generated@@213))
)))
(assert (forall (($generated@@214 Int) ) (! (= ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 $generated@@214))) ($generated@@79 $generated@@32 ($generated@@35 $generated@@6 ($generated@@10 $generated@@214))))
 :pattern ( ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 $generated@@214))))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@T) ) (! (= ($generated@@35 $generated@@216 ($generated@@79 $generated@@216 $generated@@215)) ($generated@@79 $generated@@32 ($generated@@35 $generated@@216 $generated@@215)))
 :pattern ( ($generated@@35 $generated@@216 ($generated@@79 $generated@@216 $generated@@215)))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (< 0 ($generated@@34 $generated@@217 $generated@@219)) (< 0 ($generated@@34 ($generated@@88 $generated@@217 $generated@@218) $generated@@219)))
 :pattern ( ($generated@@88 $generated@@217 $generated@@218) ($generated@@34 $generated@@217 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (= (< 0 ($generated@@34 ($generated@@88 $generated@@220 $generated@@221) $generated@@222))  (or (= $generated@@222 $generated@@221) (< 0 ($generated@@34 $generated@@220 $generated@@222))))
 :pattern ( ($generated@@34 ($generated@@88 $generated@@220 $generated@@221) $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= ($generated@@118 $generated@@223 $generated@@224) (forall (($generated@@225 T@U) ) (! (= ($generated@@34 $generated@@223 $generated@@225) ($generated@@34 $generated@@224 $generated@@225))
 :pattern ( ($generated@@34 $generated@@223 $generated@@225))
 :pattern ( ($generated@@34 $generated@@224 $generated@@225))
)))
 :pattern ( ($generated@@118 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@108 $generated@@65 $generated@@226 ($generated@@66 $generated@@227) $generated@@228) (forall (($generated@@229 T@U) ) (!  (=> (< 0 ($generated@@34 $generated@@226 $generated@@229)) ($generated@@107 $generated@@229 $generated@@227 $generated@@228))
 :pattern ( ($generated@@34 $generated@@226 $generated@@229))
)))
 :pattern ( ($generated@@108 $generated@@65 $generated@@226 ($generated@@66 $generated@@227) $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! ($generated@@108 $generated@@6 $generated@@231 $generated $generated@@230)
 :pattern ( ($generated@@108 $generated@@6 $generated@@231 $generated $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! ($generated@@64 $generated@@6 $generated@@232 $generated)
 :pattern ( ($generated@@64 $generated@@6 $generated@@232 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () Int)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 32) (let (($generated@@250 true))
(let (($generated@@251  (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@252 T@U) )  (=> ($generated@@64 $generated@@95 $generated@@252 ($generated@@96 $generated)) (=> ($generated@@115 $generated@@252 ($generated@@92 ($generated@@33 $generated@@233 0 $generated@@233))) ($generated@@115 $generated@@252 ($generated@@21 $generated@@62 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1)))))))))))
(let (($generated@@253  (=> (and (not ($generated@@115 $generated@@234 ($generated@@92 ($generated@@33 $generated@@233 0 $generated@@233)))) (= (ControlFlow 0 7) 3)) $generated@@251)))
(let (($generated@@254  (=> (and ($generated@@115 $generated@@234 ($generated@@92 ($generated@@33 $generated@@233 0 $generated@@233))) (= (ControlFlow 0 6) 3)) $generated@@251)))
(let (($generated@@255  (=> (>= 0 ($generated@@34 $generated@@233 ($generated@@35 $generated@@6 ($generated@@10 $generated@@235)))) (and (=> (= (ControlFlow 0 9) 6) $generated@@254) (=> (= (ControlFlow 0 9) 7) $generated@@253)))))
(let (($generated@@256  (=> (> ($generated@@34 $generated@@233 ($generated@@35 $generated@@6 ($generated@@10 $generated@@235))) 0) (and (=> (= (ControlFlow 0 8) 6) $generated@@254) (=> (= (ControlFlow 0 8) 7) $generated@@253)))))
(let (($generated@@257  (and (=> (= (ControlFlow 0 10) 8) $generated@@256) (=> (= (ControlFlow 0 10) 9) $generated@@255))))
(let (($generated@@258  (=> (and ($generated@@64 $generated@@95 $generated@@234 ($generated@@96 $generated)) ($generated@@108 $generated@@95 $generated@@234 ($generated@@96 $generated) $generated@@236)) (and (=> (= (ControlFlow 0 11) 10) $generated@@257) (=> (= (ControlFlow 0 11) 5) $generated@@250)))))
(let (($generated@@259  (=> (and (not (and ($generated@@64 $generated@@95 $generated@@234 ($generated@@96 $generated)) ($generated@@108 $generated@@95 $generated@@234 ($generated@@96 $generated) $generated@@236))) (= (ControlFlow 0 4) 3)) $generated@@251)))
(let (($generated@@260  (and (=> (= (ControlFlow 0 12) (- 0 13)) (forall (($generated@@261 T@U) )  (=> ($generated@@64 $generated@@65 $generated@@261 ($generated@@66 $generated)) ($generated@@103 (let (($generated@@262 $generated@@261))
$generated@@262) $generated@@135)))) (=> (forall (($generated@@263 T@U) )  (=> ($generated@@64 $generated@@65 $generated@@263 ($generated@@66 $generated)) ($generated@@103 (let (($generated@@264 $generated@@263))
$generated@@264) $generated@@135))) (and (=> (= (ControlFlow 0 12) 11) $generated@@258) (=> (= (ControlFlow 0 12) 4) $generated@@259))))))
(let (($generated@@265  (=> (and (not (and ($generated@@64 $generated@@65 $generated@@237 ($generated@@66 $generated)) ($generated@@108 $generated@@65 $generated@@237 ($generated@@66 $generated) $generated@@236))) (= (ControlFlow 0 15) 12)) $generated@@260)))
(let (($generated@@266  (=> (and ($generated@@64 $generated@@65 $generated@@237 ($generated@@66 $generated)) ($generated@@108 $generated@@65 $generated@@237 ($generated@@66 $generated) $generated@@236)) (=> (and (and (= $generated@@238 $generated@@237) ($generated@@64 $generated@@65 $generated@@238 ($generated@@66 $generated))) (and (= $generated@@239 $generated@@238) (= (ControlFlow 0 14) 12))) $generated@@260))))
(let (($generated@@267  (and (=> (= (ControlFlow 0 16) (- 0 17)) (exists (($generated@@268 T@U) )  (and ($generated@@64 $generated@@65 $generated@@268 ($generated@@66 $generated)) (not ($generated@@103 $generated@@268 ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))))))) (=> (exists (($generated@@269 T@U) )  (and ($generated@@64 $generated@@65 $generated@@269 ($generated@@66 $generated)) (not ($generated@@103 $generated@@269 ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1)))))))) (and (=> (= (ControlFlow 0 16) 14) $generated@@266) (=> (= (ControlFlow 0 16) 15) $generated@@265))))))
(let (($generated@@270  (=> (and (not (and ($generated@@64 $generated@@65 $generated@@240 ($generated@@66 $generated)) ($generated@@108 $generated@@65 $generated@@240 ($generated@@66 $generated) $generated@@236))) (= (ControlFlow 0 19) 16)) $generated@@267)))
(let (($generated@@271  (=> (and (and ($generated@@64 $generated@@65 $generated@@240 ($generated@@66 $generated)) ($generated@@108 $generated@@65 $generated@@240 ($generated@@66 $generated) $generated@@236)) (= (ControlFlow 0 18) 16)) $generated@@267)))
(let (($generated@@272  (and (=> (= (ControlFlow 0 20) (- 0 26)) (forall (($generated@@273 Int) ) (!  (=> (or (not (= $generated@@273 1)) (not true)) (not (> ($generated@@34 $generated@@233 ($generated@@35 $generated@@6 ($generated@@10 $generated@@273))) 0)))
 :pattern ( ($generated@@34 $generated@@233 ($generated@@35 $generated@@6 ($generated@@10 $generated@@273))))
))) (=> (forall (($generated@@274 T@U) ) (!  (=> (or (not (= ($generated@@11 $generated@@274) 1)) (not true)) (not (> ($generated@@34 $generated@@233 ($generated@@35 $generated@@6 $generated@@274)) 0)))
 :pattern ( ($generated@@34 $generated@@233 ($generated@@35 $generated@@6 $generated@@274)))
)) (and (=> (= (ControlFlow 0 20) (- 0 25)) (not ($generated@@118 ($generated@@26 ($generated@@26 $generated@@233 ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))) ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))) $generated@@135))) (=> (not ($generated@@118 ($generated@@26 ($generated@@26 $generated@@233 ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))) ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))) $generated@@135)) (and (=> (= (ControlFlow 0 20) (- 0 24)) ($generated@@118 ($generated@@26 ($generated@@26 ($generated@@26 $generated@@233 ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))) ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))) ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))) $generated@@135)) (=> ($generated@@118 ($generated@@26 ($generated@@26 ($generated@@26 $generated@@233 ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))) ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))) ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))) $generated@@135) (and (=> (= (ControlFlow 0 20) (- 0 23)) ($generated@@118 ($generated@@26 $generated@@241 $generated@@233) $generated@@241)) (=> ($generated@@118 ($generated@@26 $generated@@241 $generated@@233) $generated@@241) (and (=> (= (ControlFlow 0 20) (- 0 22)) ($generated@@118 ($generated@@26 $generated@@233 ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))) ($generated@@88 ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1)))) ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1)))))) (=> ($generated@@118 ($generated@@26 $generated@@233 ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))) ($generated@@88 ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1)))) ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (not ($generated@@103 ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1)))) ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1))))))) (=> (not ($generated@@103 ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1)))) ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1)))))) (and (=> (= (ControlFlow 0 20) 18) $generated@@271) (=> (= (ControlFlow 0 20) 19) $generated@@270))))))))))))))))
(let (($generated@@275  (=> (and (= $generated@@242 1) (= (ControlFlow 0 28) 20)) $generated@@272)))
(let (($generated@@276  (=> (and (or (not (= $generated@@242 1)) (not true)) (= (ControlFlow 0 27) 20)) $generated@@272)))
(let (($generated@@277  (and (=> (= (ControlFlow 0 29) 27) $generated@@276) (=> (= (ControlFlow 0 29) 28) $generated@@275))))
(let (($generated@@278 true))
(let (($generated@@279  (=> (= $generated@@243 ($generated@@157 $generated@@244 $generated@@236 $generated@@3 false)) (=> (and (= $generated@@233 ($generated@@79 $generated@@65 ($generated@@88 ($generated@@88 ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1)))) ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1)))) ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1)))))) (= $generated@@241 ($generated@@79 $generated@@65 ($generated@@88 $generated@@135 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 3))))))) (and (=> (= (ControlFlow 0 30) (- 0 31)) (> ($generated@@34 $generated@@233 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1)))) 0)) (=> (> ($generated@@34 $generated@@233 ($generated@@35 $generated@@6 ($generated@@10 ($generated@@77 1)))) 0) (and (=> (= (ControlFlow 0 30) 29) $generated@@277) (=> (= (ControlFlow 0 30) 1) $generated@@278))))))))
(let (($generated@@280  (=> (and ($generated@@245 $generated@@236) ($generated@@246 $generated@@236)) (=> (and (and ($generated@@64 $generated@@65 $generated@@247 ($generated@@66 $generated)) ($generated@@108 $generated@@65 $generated@@247 ($generated@@66 $generated) $generated@@236)) true) (=> (and (and (and ($generated@@64 $generated@@65 $generated@@248 ($generated@@66 $generated)) ($generated@@108 $generated@@65 $generated@@248 ($generated@@66 $generated) $generated@@236)) true) (and (= 0 $generated@@249) (= (ControlFlow 0 32) 30))) $generated@@279)))))
$generated@@280)))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
