(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T T@T) T@T)
(declare-fun $generated@@50 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@72 (Int) Int)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ) (! ($generated@@24 ($generated@@23 $generated@@25 $generated@@26) $generated@@26)
 :pattern ( ($generated@@23 $generated@@25 $generated@@26))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> ($generated@@24 $generated@@27 $generated@@29) ($generated@@24 ($generated@@23 $generated@@27 $generated@@28) $generated@@29))
 :pattern ( ($generated@@23 $generated@@27 $generated@@28) ($generated@@24 $generated@@27 $generated@@29))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@24 ($generated@@23 $generated@@30 $generated@@31) $generated@@32)  (or (= $generated@@32 $generated@@31) ($generated@@24 $generated@@30 $generated@@32)))
 :pattern ( ($generated@@24 ($generated@@23 $generated@@30 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ) (!  (not ($generated@@24 $generated@@33 $generated@@34))
 :pattern ( ($generated@@24 $generated@@33 $generated@@34))
)))
(assert (= ($generated@@6 $generated@@36) 3))
(assert (forall (($generated@@40 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@40 $generated@@37)  (or (= $generated@@40 $generated@@38) (= ($generated@@39 $generated@@40) $generated@@37)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@40 $generated@@37))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@41 $generated@@36 $generated@@43 $generated@@42 $generated@@44) ($generated@@41 $generated@@36 $generated@@43 $generated@@37 $generated@@44))
 :pattern ( ($generated@@41 $generated@@36 $generated@@43 $generated@@42 $generated@@44))
 :pattern ( ($generated@@41 $generated@@36 $generated@@43 $generated@@37 $generated@@44))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@46 $generated@@53 $generated@@54 ($generated@@50 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@57) $generated@@55)
 :weight 0
)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (or (= $generated@@62 $generated@@63) (= ($generated@@46 $generated@@58 $generated@@59 ($generated@@50 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@63) ($generated@@46 $generated@@58 $generated@@59 $generated@@61 $generated@@63)))
 :weight 0
))) (= ($generated@@6 $generated@@47) 4)) (= ($generated@@6 $generated@@48) 5)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (= ($generated@@6 ($generated@@49 $generated@@64 $generated@@65)) 6))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@51 ($generated@@49 $generated@@66 $generated@@67)) $generated@@66)
 :pattern ( ($generated@@49 $generated@@66 $generated@@67))
))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@52 ($generated@@49 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@49 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@41 $generated@@36 $generated@@70 $generated@@37 $generated@@71)  (or (= $generated@@70 $generated@@38) ($generated@@11 ($generated@@45 $generated@@7 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@71 $generated@@70) $generated@@2)))))
 :pattern ( ($generated@@41 $generated@@36 $generated@@70 $generated@@37 $generated@@71))
)))
(assert (forall (($generated@@73 Int) ) (! (= ($generated@@72 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 $generated@@75) $generated@@75)
 :pattern ( ($generated@@74 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 ($generated@@45 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@45 $generated@@79 $generated@@78))
)))
(assert (= ($generated@@6 $generated@@80) 7))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@35 $generated@@80 $generated@@83 ($generated@@81 $generated@@84)) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@24 $generated@@83 $generated@@85) ($generated@@82 $generated@@85 $generated@@84))
 :pattern ( ($generated@@24 $generated@@83 $generated@@85))
)))
 :pattern ( ($generated@@35 $generated@@80 $generated@@83 ($generated@@81 $generated@@84)))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@86 ($generated@@77 $generated@@90 $generated@@87) $generated@@88 $generated@@89) ($generated@@41 $generated@@90 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@86 ($generated@@77 $generated@@90 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@82 $generated@@91 $generated@@37) (and (= ($generated@@77 $generated@@36 ($generated@@45 $generated@@36 $generated@@91)) $generated@@91) ($generated@@35 $generated@@36 ($generated@@45 $generated@@36 $generated@@91) $generated@@37)))
 :pattern ( ($generated@@82 $generated@@91 $generated@@37))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@82 $generated@@92 $generated@@42) (and (= ($generated@@77 $generated@@36 ($generated@@45 $generated@@36 $generated@@92)) $generated@@92) ($generated@@35 $generated@@36 ($generated@@45 $generated@@36 $generated@@92) $generated@@42)))
 :pattern ( ($generated@@82 $generated@@92 $generated@@42))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@93 $generated@@42)  (and ($generated@@35 $generated@@36 $generated@@93 $generated@@37) (or (not (= $generated@@93 $generated@@38)) (not true))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@93 $generated@@42))
 :pattern ( ($generated@@35 $generated@@36 $generated@@93 $generated@@37))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@94 $generated@@95 $generated@@96) (= $generated@@95 $generated@@96))
 :pattern ( ($generated@@94 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@82 $generated@@97 $generated) (and (= ($generated@@77 $generated@@8 ($generated@@45 $generated@@8 $generated@@97)) $generated@@97) ($generated@@35 $generated@@8 ($generated@@45 $generated@@8 $generated@@97) $generated)))
 :pattern ( ($generated@@82 $generated@@97 $generated))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@82 ($generated@@77 $generated@@100 $generated@@98) $generated@@99) ($generated@@35 $generated@@100 $generated@@98 $generated@@99))
 :pattern ( ($generated@@82 ($generated@@77 $generated@@100 $generated@@98) $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@41 $generated@@80 $generated@@101 ($generated@@81 $generated@@102) $generated@@103) (forall (($generated@@104 T@U) ) (!  (=> ($generated@@24 $generated@@101 $generated@@104) ($generated@@86 $generated@@104 $generated@@102 $generated@@103))
 :pattern ( ($generated@@24 $generated@@101 $generated@@104))
)))
 :pattern ( ($generated@@41 $generated@@80 $generated@@101 ($generated@@81 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@105 ($generated@@81 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@81 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@22 ($generated@@81 $generated@@107)) $generated@@1)
 :pattern ( ($generated@@81 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@45 $generated@@109 ($generated@@77 $generated@@109 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@77 $generated@@109 $generated@@108))
)))
(assert  (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@110 $generated@@113 $generated@@114 $generated@@115 ($generated@@112 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@118 $generated@@119) $generated@@116)
 :weight 0
)) (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@110 $generated@@120 $generated@@121 $generated@@122 ($generated@@112 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@110 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@110 $generated@@129 $generated@@130 $generated@@131 ($generated@@112 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@110 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 Bool) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@11 ($generated@@110 $generated@@36 $generated@@47 $generated@@7 ($generated@@111 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@142 $generated@@143))  (=> (and (or (not (= $generated@@142 $generated@@138)) (not true)) ($generated@@11 ($generated@@45 $generated@@7 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@139 $generated@@142) $generated@@140)))) $generated@@141))
 :pattern ( ($generated@@110 $generated@@36 $generated@@47 $generated@@7 ($generated@@111 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> ($generated@@82 $generated@@144 ($generated@@81 $generated@@145)) (and (= ($generated@@77 $generated@@80 ($generated@@45 $generated@@80 $generated@@144)) $generated@@144) ($generated@@35 $generated@@80 ($generated@@45 $generated@@80 $generated@@144) ($generated@@81 $generated@@145))))
 :pattern ( ($generated@@82 $generated@@144 ($generated@@81 $generated@@145)))
)))
(assert (= ($generated@@22 $generated@@37) $generated@@3))
(assert (= ($generated@@146 $generated@@37) $generated@@5))
(assert (= ($generated@@22 $generated@@42) $generated@@4))
(assert (= ($generated@@146 $generated@@42) $generated@@5))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@94 $generated@@147 $generated@@148) (forall (($generated@@149 T@U) ) (! (= ($generated@@24 $generated@@147 $generated@@149) ($generated@@24 $generated@@148 $generated@@149))
 :pattern ( ($generated@@24 $generated@@147 $generated@@149))
 :pattern ( ($generated@@24 $generated@@148 $generated@@149))
)))
 :pattern ( ($generated@@94 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@150 Int) ) (! (= ($generated@@77 $generated@@8 ($generated@@12 ($generated@@72 $generated@@150))) ($generated@@74 $generated@@48 ($generated@@77 $generated@@8 ($generated@@12 $generated@@150))))
 :pattern ( ($generated@@77 $generated@@8 ($generated@@12 ($generated@@72 $generated@@150))))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@77 $generated@@152 ($generated@@74 $generated@@152 $generated@@151)) ($generated@@74 $generated@@48 ($generated@@77 $generated@@152 $generated@@151)))
 :pattern ( ($generated@@77 $generated@@152 ($generated@@74 $generated@@152 $generated@@151)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! ($generated@@41 $generated@@8 $generated@@154 $generated $generated@@153)
 :pattern ( ($generated@@41 $generated@@8 $generated@@154 $generated $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (! ($generated@@35 $generated@@8 $generated@@155 $generated)
 :pattern ( ($generated@@35 $generated@@8 $generated@@155 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@164  (=> (= (ControlFlow 0 4) (- 0 3)) (not ($generated@@94 $generated@@156 ($generated@@23 ($generated@@23 $generated@@33 ($generated@@77 $generated@@8 ($generated@@12 ($generated@@72 1)))) ($generated@@77 $generated@@8 ($generated@@12 ($generated@@72 0)))))))))
(let (($generated@@165  (=> (= (ControlFlow 0 2) (- 0 1)) (not ($generated@@94 $generated@@156 ($generated@@23 ($generated@@23 $generated@@33 ($generated@@77 $generated@@8 ($generated@@12 ($generated@@72 0)))) ($generated@@77 $generated@@8 ($generated@@12 ($generated@@72 1)))))))))
(let (($generated@@166  (=> (and (= $generated@@157 ($generated@@111 $generated@@38 $generated@@158 $generated@@2 false)) (= $generated@@156 ($generated@@74 $generated@@80 ($generated@@23 $generated@@33 ($generated@@77 $generated@@8 ($generated@@12 ($generated@@72 1))))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not ($generated@@94 $generated@@156 $generated@@33))) (=> (not ($generated@@94 $generated@@156 $generated@@33)) (and (=> (= (ControlFlow 0 5) 2) $generated@@165) (=> (= (ControlFlow 0 5) 4) $generated@@164)))))))
(let (($generated@@167  (=> (and (and ($generated@@159 $generated@@158) ($generated@@160 $generated@@158)) (and (or (not (= $generated@@161 $generated@@38)) (not true)) (and ($generated@@35 $generated@@36 $generated@@161 $generated@@42) ($generated@@41 $generated@@36 $generated@@161 $generated@@42 $generated@@158)))) (=> (and (and (and ($generated@@35 $generated@@80 $generated@@162 ($generated@@81 $generated)) ($generated@@41 $generated@@80 $generated@@162 ($generated@@81 $generated) $generated@@158)) true) (and (= 0 $generated@@163) (= (ControlFlow 0 7) 5))) $generated@@166))))
$generated@@167)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
