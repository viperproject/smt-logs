(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@28 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@T T@T) T@T)
(declare-fun $generated@@59 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@81 (Int) Int)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@134 (T@U) Int)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert  (and (= ($generated@@9 $generated@@31) 3) (= ($generated@@9 $generated@@34) 4)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (and (or ($generated@@28 $generated@@39 $generated@@40 $generated@@41 $generated@@42) (and (< 1 $generated@@25) (and (and (and (or (not (= $generated@@40 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@40 $generated@@32 $generated@@38)) (and ($generated@@33 $generated@@34 $generated@@41 ($generated@@35 $generated@@39)) ($generated@@30 $generated@@34 $generated@@41 ($generated@@35 $generated@@39) $generated@@38))) (and ($generated@@36 $generated@@42 $generated@@39) ($generated@@26 $generated@@42 $generated@@39 $generated@@38))))) ($generated@@37 $generated@@38)) ($generated@@26 ($generated@@27 $generated@@39 $generated@@40 $generated@@41 $generated@@42) $generated@@39 $generated@@38))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@39 $generated@@40 $generated@@41 $generated@@42) $generated@@39 $generated@@38))
))))
(assert (= ($generated@@43 $generated) $generated@@0))
(assert (= ($generated@@44 $generated@@45) $generated@@3))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@33 $generated@@31 $generated@@48 $generated@@46)  (or (= $generated@@48 $generated@@29) (= ($generated@@47 $generated@@48) $generated@@46)))
 :pattern ( ($generated@@33 $generated@@31 $generated@@48 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@49 $generated@@32 $generated@@50) ($generated@@30 $generated@@31 $generated@@49 $generated@@46 $generated@@50))
 :pattern ( ($generated@@30 $generated@@31 $generated@@49 $generated@@32 $generated@@50))
 :pattern ( ($generated@@30 $generated@@31 $generated@@49 $generated@@46 $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> ($generated@@37 $generated@@52) ($generated@@30 $generated@@34 $generated@@45 ($generated@@35 $generated@@51) $generated@@52))
 :pattern ( ($generated@@30 $generated@@34 $generated@@45 ($generated@@35 $generated@@51) $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ) (! ($generated@@33 $generated@@34 $generated@@45 ($generated@@35 $generated@@53))
 :pattern ( ($generated@@33 $generated@@34 $generated@@45 ($generated@@35 $generated@@53)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@55 $generated@@62 $generated@@63 ($generated@@59 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@66) $generated@@64)
 :weight 0
)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (or (= $generated@@71 $generated@@72) (= ($generated@@55 $generated@@67 $generated@@68 ($generated@@59 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@72) ($generated@@55 $generated@@67 $generated@@68 $generated@@70 $generated@@72)))
 :weight 0
))) (= ($generated@@9 $generated@@56) 5)) (= ($generated@@9 $generated@@57) 6)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (= ($generated@@9 ($generated@@58 $generated@@73 $generated@@74)) 7))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@60 ($generated@@58 $generated@@75 $generated@@76)) $generated@@75)
 :pattern ( ($generated@@58 $generated@@75 $generated@@76))
))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@61 ($generated@@58 $generated@@77 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@58 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@79 $generated@@46 $generated@@80)  (or (= $generated@@79 $generated@@29) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@31 ($generated@@58 $generated@@56 $generated@@57) $generated@@80 $generated@@79) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@79 $generated@@46 $generated@@80))
)))
(assert (forall (($generated@@82 Int) ) (! (= ($generated@@81 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@33 $generated@@34 ($generated@@86 $generated@@88 $generated@@89) ($generated@@35 $generated@@87))  (and ($generated@@36 $generated@@88 $generated@@87) ($generated@@33 $generated@@34 $generated@@89 ($generated@@35 $generated@@87))))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@86 $generated@@88 $generated@@89) ($generated@@35 $generated@@87)))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@90 $generated@@91) (= ($generated@@44 $generated@@91) $generated@@3))
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@92 $generated@@93) (= ($generated@@44 $generated@@93) $generated@@4))
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 ($generated@@54 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@54 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@92 $generated@@97) (exists (($generated@@98 T@U) ($generated@@99 T@U) ) (= $generated@@97 ($generated@@86 $generated@@98 $generated@@99))))
 :pattern ( ($generated@@92 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@90 $generated@@100) (= $generated@@100 $generated@@45))
 :pattern ( ($generated@@90 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@26 ($generated@@94 $generated@@104 $generated@@101) $generated@@102 $generated@@103) ($generated@@30 $generated@@104 $generated@@101 $generated@@102 $generated@@103))
 :pattern ( ($generated@@26 ($generated@@94 $generated@@104 $generated@@101) $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ) (!  (and (= ($generated@@43 ($generated@@35 $generated@@106)) $generated@@2) (= ($generated@@105 ($generated@@35 $generated@@106)) $generated@@7))
 :pattern ( ($generated@@35 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@36 $generated@@107 $generated@@46) (and (= ($generated@@94 $generated@@31 ($generated@@54 $generated@@31 $generated@@107)) $generated@@107) ($generated@@33 $generated@@31 ($generated@@54 $generated@@31 $generated@@107) $generated@@46)))
 :pattern ( ($generated@@36 $generated@@107 $generated@@46))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@36 $generated@@108 $generated@@32) (and (= ($generated@@94 $generated@@31 ($generated@@54 $generated@@31 $generated@@108)) $generated@@108) ($generated@@33 $generated@@31 ($generated@@54 $generated@@31 $generated@@108) $generated@@32)))
 :pattern ( ($generated@@36 $generated@@108 $generated@@32))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@33 $generated@@31 $generated@@109 $generated@@32)  (and ($generated@@33 $generated@@31 $generated@@109 $generated@@46) (or (not (= $generated@@109 $generated@@29)) (not true))))
 :pattern ( ($generated@@33 $generated@@31 $generated@@109 $generated@@32))
 :pattern ( ($generated@@33 $generated@@31 $generated@@109 $generated@@46))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (or ($generated@@28 $generated@@112 $generated@@113 $generated@@114 $generated@@115) (and (< 1 $generated@@25) (and (and (and (or (not (= $generated@@113 $generated@@29)) (not true)) ($generated@@33 $generated@@31 $generated@@113 $generated@@32)) ($generated@@33 $generated@@34 $generated@@114 ($generated@@35 $generated@@112))) ($generated@@36 $generated@@115 $generated@@112)))) (= ($generated@@27 $generated@@112 $generated@@113 $generated@@114 $generated@@115) (ite ($generated@@90 $generated@@114) $generated@@115 (let (($generated@@116 ($generated@@110 $generated@@114)))
(ite ($generated@@90 $generated@@116) $generated@@115 (let (($generated@@117 ($generated@@111 $generated@@116)))
$generated@@117))))))
 :pattern ( ($generated@@27 $generated@@112 $generated@@113 $generated@@114 $generated@@115))
))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@119 ($generated@@35 $generated@@118)) (or ($generated@@90 $generated@@119) ($generated@@92 $generated@@119)))
 :pattern ( ($generated@@92 $generated@@119) ($generated@@33 $generated@@34 $generated@@119 ($generated@@35 $generated@@118)))
 :pattern ( ($generated@@90 $generated@@119) ($generated@@33 $generated@@34 $generated@@119 ($generated@@35 $generated@@118)))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@36 $generated@@120 $generated) (and (= ($generated@@94 $generated@@11 ($generated@@54 $generated@@11 $generated@@120)) $generated@@120) ($generated@@33 $generated@@11 ($generated@@54 $generated@@11 $generated@@120) $generated)))
 :pattern ( ($generated@@36 $generated@@120 $generated))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@36 ($generated@@94 $generated@@123 $generated@@121) $generated@@122) ($generated@@33 $generated@@123 $generated@@121 $generated@@122))
 :pattern ( ($generated@@36 ($generated@@94 $generated@@123 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@44 ($generated@@86 $generated@@124 $generated@@125)) $generated@@4)
 :pattern ( ($generated@@86 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@111 ($generated@@86 $generated@@126 $generated@@127)) $generated@@126)
 :pattern ( ($generated@@86 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@110 ($generated@@86 $generated@@128 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@86 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@35 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@35 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@54 $generated@@133 ($generated@@94 $generated@@133 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@94 $generated@@133 $generated@@132))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (< ($generated@@134 $generated@@136) ($generated@@135 ($generated@@86 $generated@@136 $generated@@137)))
 :pattern ( ($generated@@86 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (< ($generated@@135 $generated@@139) ($generated@@135 ($generated@@86 $generated@@138 $generated@@139)))
 :pattern ( ($generated@@86 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and ($generated@@37 $generated@@142) (and ($generated@@92 $generated@@140) ($generated@@30 $generated@@34 $generated@@140 ($generated@@35 $generated@@141) $generated@@142))) ($generated@@26 ($generated@@111 $generated@@140) $generated@@141 $generated@@142))
 :pattern ( ($generated@@26 ($generated@@111 $generated@@140) $generated@@141 $generated@@142))
)))
(assert  (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@143 $generated@@146 $generated@@147 $generated@@148 ($generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@151 $generated@@152) $generated@@149)
 :weight 0
)) (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@143 $generated@@153 $generated@@154 $generated@@155 ($generated@@145 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@143 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@143 $generated@@162 $generated@@163 $generated@@164 ($generated@@145 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@143 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@14 ($generated@@143 $generated@@31 $generated@@56 $generated@@10 ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@31 ($generated@@58 $generated@@56 $generated@@57) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@143 $generated@@31 $generated@@56 $generated@@10 ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (or ($generated@@28 $generated@@177 ($generated@@83 $generated@@31 $generated@@178) ($generated@@83 $generated@@34 $generated@@179) ($generated@@83 $generated@@57 $generated@@180)) (and (< 1 $generated@@25) (and (and (and (or (not (= $generated@@178 $generated@@29)) (not true)) ($generated@@33 $generated@@31 $generated@@178 $generated@@32)) ($generated@@33 $generated@@34 $generated@@179 ($generated@@35 $generated@@177))) ($generated@@36 $generated@@180 $generated@@177)))) (= ($generated@@27 $generated@@177 ($generated@@83 $generated@@31 $generated@@178) ($generated@@83 $generated@@34 $generated@@179) ($generated@@83 $generated@@57 $generated@@180)) (ite ($generated@@90 ($generated@@83 $generated@@34 $generated@@179)) $generated@@180 (let (($generated@@181 ($generated@@83 $generated@@34 ($generated@@110 ($generated@@83 $generated@@34 $generated@@179)))))
(ite ($generated@@90 $generated@@181) $generated@@180 (let (($generated@@182 ($generated@@83 $generated@@57 ($generated@@111 $generated@@181))))
$generated@@182))))))
 :weight 3
 :pattern ( ($generated@@27 $generated@@177 ($generated@@83 $generated@@31 $generated@@178) ($generated@@83 $generated@@34 $generated@@179) ($generated@@83 $generated@@57 $generated@@180)))
))))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@134 ($generated@@94 $generated@@34 $generated@@183)) ($generated@@135 $generated@@183))
 :pattern ( ($generated@@134 ($generated@@94 $generated@@34 $generated@@183)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> ($generated@@36 $generated@@185 ($generated@@35 $generated@@184)) (and (= ($generated@@94 $generated@@34 ($generated@@54 $generated@@34 $generated@@185)) $generated@@185) ($generated@@33 $generated@@34 ($generated@@54 $generated@@34 $generated@@185) ($generated@@35 $generated@@184))))
 :pattern ( ($generated@@36 $generated@@185 ($generated@@35 $generated@@184)))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (or ($generated@@28 $generated@@186 $generated@@187 $generated@@188 $generated@@189) (and (< 1 $generated@@25) (and (and (and (or (not (= $generated@@187 $generated@@29)) (not true)) ($generated@@33 $generated@@31 $generated@@187 $generated@@32)) ($generated@@33 $generated@@34 $generated@@188 ($generated@@35 $generated@@186))) ($generated@@36 $generated@@189 $generated@@186)))) ($generated@@36 ($generated@@27 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@186))
 :pattern ( ($generated@@27 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and ($generated@@37 $generated@@192) (and ($generated@@92 $generated@@190) ($generated@@30 $generated@@34 $generated@@190 ($generated@@35 $generated@@191) $generated@@192))) ($generated@@30 $generated@@34 ($generated@@110 $generated@@190) ($generated@@35 $generated@@191) $generated@@192))
 :pattern ( ($generated@@30 $generated@@34 ($generated@@110 $generated@@190) ($generated@@35 $generated@@191) $generated@@192))
)))
(assert (= ($generated@@43 $generated@@46) $generated@@5))
(assert (= ($generated@@105 $generated@@46) $generated@@8))
(assert (= ($generated@@43 $generated@@32) $generated@@6))
(assert (= ($generated@@105 $generated@@32) $generated@@8))
(assert (= $generated@@45 ($generated@@83 $generated@@34 $generated@@45)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (or ($generated@@28 $generated@@193 $generated@@194 ($generated@@83 $generated@@34 $generated@@195) $generated@@196) (and (< 1 $generated@@25) (and (and (and (or (not (= $generated@@194 $generated@@29)) (not true)) ($generated@@33 $generated@@31 $generated@@194 $generated@@32)) ($generated@@33 $generated@@34 $generated@@195 ($generated@@35 $generated@@193))) ($generated@@36 $generated@@196 $generated@@193)))) (= ($generated@@27 $generated@@193 $generated@@194 ($generated@@83 $generated@@34 $generated@@195) $generated@@196) (ite ($generated@@90 ($generated@@83 $generated@@34 $generated@@195)) $generated@@196 (let (($generated@@197 ($generated@@83 $generated@@34 ($generated@@110 ($generated@@83 $generated@@34 $generated@@195)))))
(ite ($generated@@90 $generated@@197) $generated@@196 (let (($generated@@198 ($generated@@83 $generated@@57 ($generated@@111 $generated@@197))))
$generated@@198))))))
 :weight 3
 :pattern ( ($generated@@27 $generated@@193 $generated@@194 ($generated@@83 $generated@@34 $generated@@195) $generated@@196))
))))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@86 ($generated@@83 $generated@@57 $generated@@199) ($generated@@83 $generated@@34 $generated@@200)) ($generated@@83 $generated@@34 ($generated@@86 $generated@@199 $generated@@200)))
 :pattern ( ($generated@@86 ($generated@@83 $generated@@57 $generated@@199) ($generated@@83 $generated@@34 $generated@@200)))
)))
(assert (forall (($generated@@201 Int) ) (! (= ($generated@@94 $generated@@11 ($generated@@15 ($generated@@81 $generated@@201))) ($generated@@83 $generated@@57 ($generated@@94 $generated@@11 ($generated@@15 $generated@@201))))
 :pattern ( ($generated@@94 $generated@@11 ($generated@@15 ($generated@@81 $generated@@201))))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@T) ) (! (= ($generated@@94 $generated@@203 ($generated@@83 $generated@@203 $generated@@202)) ($generated@@83 $generated@@57 ($generated@@94 $generated@@203 $generated@@202)))
 :pattern ( ($generated@@94 $generated@@203 ($generated@@83 $generated@@203 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! ($generated@@30 $generated@@11 $generated@@205 $generated $generated@@204)
 :pattern ( ($generated@@30 $generated@@11 $generated@@205 $generated $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> ($generated@@37 $generated@@209) (= ($generated@@30 $generated@@34 ($generated@@86 $generated@@207 $generated@@208) ($generated@@35 $generated@@206) $generated@@209)  (and ($generated@@26 $generated@@207 $generated@@206 $generated@@209) ($generated@@30 $generated@@34 $generated@@208 ($generated@@35 $generated@@206) $generated@@209))))
 :pattern ( ($generated@@30 $generated@@34 ($generated@@86 $generated@@207 $generated@@208) ($generated@@35 $generated@@206) $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ) (! ($generated@@33 $generated@@11 $generated@@210 $generated)
 :pattern ( ($generated@@33 $generated@@11 $generated@@210 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () Int)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 (T@U) Bool)
(declare-fun $generated@@223 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@224 true))
(let (($generated@@225  (=> (and (and (and (and (= $generated@@211 ($generated@@86 ($generated@@94 $generated@@11 ($generated@@15 $generated@@212)) $generated@@213)) ($generated@@33 $generated@@34 $generated@@213 ($generated@@35 $generated))) (and ($generated@@33 $generated@@34 $generated@@214 ($generated@@35 $generated)) ($generated@@30 $generated@@34 $generated@@214 ($generated@@35 $generated) $generated@@215))) (and (and (= $generated@@216 $generated@@213) ($generated@@33 $generated@@34 $generated@@216 ($generated@@35 $generated))) (and (= $generated@@214 $generated@@216) (= $generated@@217 $generated@@212)))) (and (and (and ($generated@@33 $generated@@11 ($generated@@15 $generated@@217) $generated) (= $generated@@218 $generated@@217)) (and ($generated@@26 ($generated@@94 $generated@@31 $generated@@219) $generated@@46 $generated@@215) ($generated@@30 $generated@@34 $generated@@214 ($generated@@35 $generated) $generated@@215))) (and (and ($generated@@30 $generated@@11 ($generated@@15 $generated@@220) $generated $generated@@215) ($generated@@28 $generated $generated@@219 $generated@@214 ($generated@@94 $generated@@11 ($generated@@15 $generated@@220)))) (and ($generated@@28 $generated $generated@@219 $generated@@214 ($generated@@94 $generated@@11 ($generated@@15 $generated@@220))) (= (ControlFlow 0 4) (- 0 3)))))) (= ($generated@@16 ($generated@@54 $generated@@11 ($generated@@27 $generated $generated@@219 $generated@@214 ($generated@@94 $generated@@11 ($generated@@15 $generated@@220))))) ($generated@@81 5)))))
(let (($generated@@226  (=> (or (not (= $generated@@211 $generated@@45)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@225) (=> (= (ControlFlow 0 6) 5) $generated@@224)))))
(let (($generated@@227  (=> (and (= $generated@@211 $generated@@45) (= (ControlFlow 0 2) (- 0 1))) ($generated@@14 ($generated@@83 $generated@@10 ($generated@@13 false))))))
(let (($generated@@228  (=> (and (and (and (= $generated@@221 ($generated@@144 $generated@@29 $generated@@215 $generated@@1 false)) (= $generated@@220 ($generated@@81 5))) (and (= $generated@@211 ($generated@@83 $generated@@34 ($generated@@86 ($generated@@94 $generated@@11 ($generated@@15 ($generated@@81 3))) ($generated@@83 $generated@@34 ($generated@@86 ($generated@@94 $generated@@11 ($generated@@15 ($generated@@81 6))) ($generated@@83 $generated@@34 $generated@@45)))))) ($generated@@26 ($generated@@94 $generated@@31 $generated@@219) $generated@@46 $generated@@215))) (and (and ($generated@@30 $generated@@34 $generated@@211 ($generated@@35 $generated) $generated@@215) ($generated@@30 $generated@@11 ($generated@@15 $generated@@220) $generated $generated@@215)) (and ($generated@@28 $generated $generated@@219 $generated@@211 ($generated@@94 $generated@@11 ($generated@@15 $generated@@220))) ($generated@@28 $generated $generated@@219 $generated@@211 ($generated@@94 $generated@@11 ($generated@@15 $generated@@220)))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (= ($generated@@16 ($generated@@54 $generated@@11 ($generated@@27 $generated $generated@@219 $generated@@211 ($generated@@94 $generated@@11 ($generated@@15 $generated@@220))))) ($generated@@81 6))) (=> (= ($generated@@16 ($generated@@54 $generated@@11 ($generated@@27 $generated $generated@@219 $generated@@211 ($generated@@94 $generated@@11 ($generated@@15 $generated@@220))))) ($generated@@81 6)) (and (=> (= (ControlFlow 0 7) 2) $generated@@227) (=> (= (ControlFlow 0 7) 6) $generated@@226)))))))
(let (($generated@@229  (=> (and (and ($generated@@37 $generated@@215) ($generated@@222 $generated@@215)) (and (or (not (= $generated@@219 $generated@@29)) (not true)) (and ($generated@@33 $generated@@31 $generated@@219 $generated@@32) ($generated@@30 $generated@@31 $generated@@219 $generated@@32 $generated@@215)))) (=> (and (and (and ($generated@@33 $generated@@34 $generated@@223 ($generated@@35 $generated)) ($generated@@30 $generated@@34 $generated@@223 ($generated@@35 $generated) $generated@@215)) true) (and (= 2 $generated@@25) (= (ControlFlow 0 9) 7))) $generated@@228))))
$generated@@229)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
