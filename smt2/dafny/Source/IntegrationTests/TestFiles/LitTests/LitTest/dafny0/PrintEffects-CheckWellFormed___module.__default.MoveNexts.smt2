(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@93 (T@T T@U) T@U)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) Bool)
(declare-fun $generated@@102 (T@U) Bool)
(declare-fun $generated@@103 (T@U T@U) Bool)
(declare-fun $generated@@104 (T@U) Bool)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@181 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated@@0) 0))
(assert (= ($generated@@31 $generated@@0) $generated@@1))
(assert (forall (($generated@@34 T@U) ) (!  (not ($generated@@32 $generated@@33 $generated@@34))
 :pattern ( ($generated@@32 $generated@@33 $generated@@34))
)))
(assert (= ($generated@@14 $generated@@36) 3))
(assert (forall (($generated@@40 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@40 $generated@@37)  (or (= $generated@@40 $generated@@38) (= ($generated@@39 $generated@@40) $generated@@37)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@40 $generated@@37))
)))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@42 $generated@@41)  (or (= $generated@@42 $generated@@38) (= ($generated@@39 $generated@@42) $generated@@41)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@43 $generated@@36 $generated@@46 $generated@@44 $generated@@47) ($generated@@43 $generated@@36 $generated@@46 $generated@@45 $generated@@47))
 :pattern ( ($generated@@43 $generated@@36 $generated@@46 $generated@@44 $generated@@47))
 :pattern ( ($generated@@43 $generated@@36 $generated@@46 $generated@@45 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@43 $generated@@36 $generated@@49 $generated@@48 $generated@@50) ($generated@@43 $generated@@36 $generated@@49 $generated@@37 $generated@@50))
 :pattern ( ($generated@@43 $generated@@36 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@43 $generated@@36 $generated@@49 $generated@@37 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@43 $generated@@36 $generated@@52 $generated@@51 $generated@@53) ($generated@@43 $generated@@36 $generated@@52 $generated@@41 $generated@@53))
 :pattern ( ($generated@@43 $generated@@36 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@43 $generated@@36 $generated@@52 $generated@@41 $generated@@53))
)))
(assert (= ($generated@@30 $generated@@54) 0))
(assert (= ($generated@@55 $generated@@8 $generated@@13) $generated@@54))
(assert ($generated@@56 $generated@@54))
(assert (= ($generated@@30 $generated@@57) 0))
(assert (= ($generated@@55 $generated@@9 $generated@@13) $generated@@57))
(assert ($generated@@56 $generated@@57))
(assert  (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@59 $generated@@66 $generated@@67 ($generated@@63 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@70) $generated@@68)
 :weight 0
)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (or (= $generated@@75 $generated@@76) (= ($generated@@59 $generated@@71 $generated@@72 ($generated@@63 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@76) ($generated@@59 $generated@@71 $generated@@72 $generated@@74 $generated@@76)))
 :weight 0
))) (= ($generated@@14 $generated@@60) 4)) (= ($generated@@14 $generated@@61) 5)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (= ($generated@@14 ($generated@@62 $generated@@77 $generated@@78)) 6))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@65 ($generated@@62 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@62 $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@43 $generated@@36 $generated@@83 $generated@@45 $generated@@84)  (or (= $generated@@83 $generated@@38) ($generated@@19 ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@84 $generated@@83) $generated@@0)))))
 :pattern ( ($generated@@43 $generated@@36 $generated@@83 $generated@@45 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@43 $generated@@36 $generated@@85 $generated@@37 $generated@@86)  (or (= $generated@@85 $generated@@38) ($generated@@19 ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@86 $generated@@85) $generated@@0)))))
 :pattern ( ($generated@@43 $generated@@36 $generated@@85 $generated@@37 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@43 $generated@@36 $generated@@87 $generated@@41 $generated@@88)  (or (= $generated@@87 $generated@@38) ($generated@@19 ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@88 $generated@@87) $generated@@0)))))
 :pattern ( ($generated@@43 $generated@@36 $generated@@87 $generated@@41 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> ($generated@@89 $generated@@90 $generated@@91) (forall (($generated@@92 T@U) ) (!  (=> ($generated@@19 ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@90 $generated@@92) $generated@@0))) ($generated@@19 ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@91 $generated@@92) $generated@@0))))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@91 $generated@@92) $generated@@0))
)))
 :pattern ( ($generated@@89 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@93 $generated@@95 ($generated@@58 $generated@@95 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@58 $generated@@95 $generated@@94))
)))
(assert (= ($generated@@14 $generated@@96) 7))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@35 $generated@@96 $generated@@99 ($generated@@97 $generated@@100)) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@32 $generated@@99 $generated@@101) ($generated@@98 $generated@@101 $generated@@100))
 :pattern ( ($generated@@32 $generated@@99 $generated@@101))
)))
 :pattern ( ($generated@@35 $generated@@96 $generated@@99 ($generated@@97 $generated@@100)))
)))
(assert ($generated@@56 $generated@@0))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (and (and (and ($generated@@104 $generated@@106) ($generated@@104 $generated@@107)) (and (or (not (= $generated@@108 $generated@@38)) (not true)) ($generated@@35 $generated@@36 $generated@@108 $generated@@48))) (and ($generated@@102 $generated@@106) ($generated@@89 $generated@@106 $generated@@107))) (=> (forall (($generated@@109 T@U) ($generated@@110 T@U) )  (=> (and (or (not (= $generated@@109 $generated@@38)) (not true)) (or (or (= $generated@@109 $generated@@108) ($generated@@32 ($generated@@105 $generated@@108) ($generated@@93 $generated@@36 $generated@@109))) ($generated@@32 ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@106 $generated@@108) $generated@@54)) ($generated@@93 $generated@@36 $generated@@109)))) (= ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@106 $generated@@109) $generated@@110) ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@107 $generated@@109) $generated@@110)))) (= ($generated@@103 $generated@@106 $generated@@108) ($generated@@103 $generated@@107 $generated@@108))))
 :pattern ( ($generated@@102 $generated@@106) ($generated@@89 $generated@@106 $generated@@107) ($generated@@103 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and (and (and ($generated@@104 $generated@@113) ($generated@@104 $generated@@114)) (and (or (not (= $generated@@115 $generated@@38)) (not true)) ($generated@@35 $generated@@36 $generated@@115 $generated@@51))) (and ($generated@@102 $generated@@113) ($generated@@89 $generated@@113 $generated@@114))) (=> (forall (($generated@@116 T@U) ($generated@@117 T@U) )  (=> (and (or (not (= $generated@@116 $generated@@38)) (not true)) (or (or (= $generated@@116 $generated@@115) ($generated@@32 ($generated@@112 $generated@@115) ($generated@@93 $generated@@36 $generated@@116))) ($generated@@32 ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@113 $generated@@115) $generated@@57)) ($generated@@93 $generated@@36 $generated@@116)))) (= ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@113 $generated@@116) $generated@@117) ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@114 $generated@@116) $generated@@117)))) (= ($generated@@111 $generated@@113 $generated@@115) ($generated@@111 $generated@@114 $generated@@115))))
 :pattern ( ($generated@@102 $generated@@113) ($generated@@89 $generated@@113 $generated@@114) ($generated@@111 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@118 ($generated@@93 $generated@@122 $generated@@119) $generated@@120 $generated@@121) ($generated@@43 $generated@@122 $generated@@119 $generated@@120 $generated@@121))
 :pattern ( ($generated@@118 ($generated@@93 $generated@@122 $generated@@119) $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> ($generated@@89 $generated@@123 $generated@@124) (=> ($generated@@118 $generated@@125 $generated@@126 $generated@@123) ($generated@@118 $generated@@125 $generated@@126 $generated@@124)))
 :pattern ( ($generated@@89 $generated@@123 $generated@@124) ($generated@@118 $generated@@125 $generated@@126 $generated@@123))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@T) ) (!  (=> ($generated@@89 $generated@@127 $generated@@128) (=> ($generated@@43 $generated@@131 $generated@@129 $generated@@130 $generated@@127) ($generated@@43 $generated@@131 $generated@@129 $generated@@130 $generated@@128)))
 :pattern ( ($generated@@89 $generated@@127 $generated@@128) ($generated@@43 $generated@@131 $generated@@129 $generated@@130 $generated@@127))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@98 $generated@@132 $generated@@45) (and (= ($generated@@93 $generated@@36 ($generated@@58 $generated@@36 $generated@@132)) $generated@@132) ($generated@@35 $generated@@36 ($generated@@58 $generated@@36 $generated@@132) $generated@@45)))
 :pattern ( ($generated@@98 $generated@@132 $generated@@45))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@98 $generated@@133 $generated@@44) (and (= ($generated@@93 $generated@@36 ($generated@@58 $generated@@36 $generated@@133)) $generated@@133) ($generated@@35 $generated@@36 ($generated@@58 $generated@@36 $generated@@133) $generated@@44)))
 :pattern ( ($generated@@98 $generated@@133 $generated@@44))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@98 $generated@@134 $generated@@48) (and (= ($generated@@93 $generated@@36 ($generated@@58 $generated@@36 $generated@@134)) $generated@@134) ($generated@@35 $generated@@36 ($generated@@58 $generated@@36 $generated@@134) $generated@@48)))
 :pattern ( ($generated@@98 $generated@@134 $generated@@48))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> ($generated@@98 $generated@@135 $generated@@51) (and (= ($generated@@93 $generated@@36 ($generated@@58 $generated@@36 $generated@@135)) $generated@@135) ($generated@@35 $generated@@36 ($generated@@58 $generated@@36 $generated@@135) $generated@@51)))
 :pattern ( ($generated@@98 $generated@@135 $generated@@51))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@98 $generated@@136 $generated@@37) (and (= ($generated@@93 $generated@@36 ($generated@@58 $generated@@36 $generated@@136)) $generated@@136) ($generated@@35 $generated@@36 ($generated@@58 $generated@@36 $generated@@136) $generated@@37)))
 :pattern ( ($generated@@98 $generated@@136 $generated@@37))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@98 $generated@@137 $generated@@41) (and (= ($generated@@93 $generated@@36 ($generated@@58 $generated@@36 $generated@@137)) $generated@@137) ($generated@@35 $generated@@36 ($generated@@58 $generated@@36 $generated@@137) $generated@@41)))
 :pattern ( ($generated@@98 $generated@@137 $generated@@41))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@138 $generated@@44)  (and ($generated@@35 $generated@@36 $generated@@138 $generated@@45) (or (not (= $generated@@138 $generated@@38)) (not true))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@138 $generated@@44))
 :pattern ( ($generated@@35 $generated@@36 $generated@@138 $generated@@45))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@139 $generated@@48)  (and ($generated@@35 $generated@@36 $generated@@139 $generated@@37) (or (not (= $generated@@139 $generated@@38)) (not true))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@139 $generated@@48))
 :pattern ( ($generated@@35 $generated@@36 $generated@@139 $generated@@37))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@140 $generated@@51)  (and ($generated@@35 $generated@@36 $generated@@140 $generated@@41) (or (not (= $generated@@140 $generated@@38)) (not true))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@140 $generated@@51))
 :pattern ( ($generated@@35 $generated@@36 $generated@@140 $generated@@41))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and ($generated@@104 $generated@@141) (and (or (not (= $generated@@142 $generated@@38)) (not true)) (= ($generated@@39 $generated@@142) $generated@@37))) ($generated@@35 $generated@@96 ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@141 $generated@@142) $generated@@54)) ($generated@@97 $generated@@45)))
 :pattern ( ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@141 $generated@@142) $generated@@54)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and ($generated@@104 $generated@@143) (and (or (not (= $generated@@144 $generated@@38)) (not true)) (= ($generated@@39 $generated@@144) $generated@@41))) ($generated@@35 $generated@@96 ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@143 $generated@@144) $generated@@57)) ($generated@@97 $generated@@45)))
 :pattern ( ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@143 $generated@@144) $generated@@57)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and ($generated@@104 $generated@@145) (and (or (not (= $generated@@146 $generated@@38)) (not true)) (= ($generated@@39 $generated@@146) $generated@@37))) ($generated@@19 ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@145 $generated@@146) $generated@@0)))) ($generated@@43 $generated@@96 ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@145 $generated@@146) $generated@@54)) ($generated@@97 $generated@@45) $generated@@145))
 :pattern ( ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@145 $generated@@146) $generated@@54)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and ($generated@@104 $generated@@147) (and (or (not (= $generated@@148 $generated@@38)) (not true)) (= ($generated@@39 $generated@@148) $generated@@41))) ($generated@@19 ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@147 $generated@@148) $generated@@0)))) ($generated@@43 $generated@@96 ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@147 $generated@@148) $generated@@57)) ($generated@@97 $generated@@45) $generated@@147))
 :pattern ( ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@147 $generated@@148) $generated@@57)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> ($generated@@149 $generated@@150 $generated@@151) (= $generated@@150 $generated@@151))
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (or (not (= $generated@@152 $generated@@154)) (not true)) (=> (and ($generated@@89 $generated@@152 $generated@@153) ($generated@@89 $generated@@153 $generated@@154)) ($generated@@89 $generated@@152 $generated@@154)))
 :pattern ( ($generated@@89 $generated@@152 $generated@@153) ($generated@@89 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (and (= ($generated@@155 ($generated@@55 $generated@@156 $generated@@157)) $generated@@156) (= ($generated@@31 ($generated@@55 $generated@@156 $generated@@157)) $generated@@157))
 :pattern ( ($generated@@55 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@98 ($generated@@93 $generated@@160 $generated@@158) $generated@@159) ($generated@@35 $generated@@160 $generated@@158 $generated@@159))
 :pattern ( ($generated@@98 ($generated@@93 $generated@@160 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@43 $generated@@96 $generated@@161 ($generated@@97 $generated@@162) $generated@@163) (forall (($generated@@164 T@U) ) (!  (=> ($generated@@32 $generated@@161 $generated@@164) ($generated@@118 $generated@@164 $generated@@162 $generated@@163))
 :pattern ( ($generated@@32 $generated@@161 $generated@@164))
)))
 :pattern ( ($generated@@43 $generated@@96 $generated@@161 ($generated@@97 $generated@@162) $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! ($generated@@35 $generated@@36 $generated@@165 $generated@@45)
 :pattern ( ($generated@@35 $generated@@36 $generated@@165 $generated@@45))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@166 ($generated@@97 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@97 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@168 ($generated@@97 $generated@@169)) $generated)
 :pattern ( ($generated@@97 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@58 $generated@@171 ($generated@@93 $generated@@171 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@93 $generated@@171 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@98 $generated@@172 ($generated@@97 $generated@@173)) (and (= ($generated@@93 $generated@@96 ($generated@@58 $generated@@96 $generated@@172)) $generated@@172) ($generated@@35 $generated@@96 ($generated@@58 $generated@@96 $generated@@172) ($generated@@97 $generated@@173))))
 :pattern ( ($generated@@98 $generated@@172 ($generated@@97 $generated@@173)))
)))
(assert (= ($generated@@168 $generated@@45) $generated@@2))
(assert (= ($generated@@174 $generated@@45) $generated@@10))
(assert (= ($generated@@168 $generated@@44) $generated@@3))
(assert (= ($generated@@174 $generated@@44) $generated@@10))
(assert (= ($generated@@168 $generated@@48) $generated@@4))
(assert (= ($generated@@174 $generated@@48) $generated@@11))
(assert (= ($generated@@168 $generated@@51) $generated@@5))
(assert (= ($generated@@174 $generated@@51) $generated@@12))
(assert (= ($generated@@168 $generated@@37) $generated@@6))
(assert (= ($generated@@174 $generated@@37) $generated@@11))
(assert (= ($generated@@168 $generated@@41) $generated@@7))
(assert (= ($generated@@174 $generated@@41) $generated@@12))
(assert (forall (($generated@@175 T@U) ) (!  (=> (and (or (not (= $generated@@175 $generated@@38)) (not true)) (= ($generated@@39 $generated@@175) $generated@@37)) ($generated@@35 $generated@@96 ($generated@@105 $generated@@175) ($generated@@97 $generated@@45)))
 :pattern ( ($generated@@105 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (and (or (not (= $generated@@177 $generated@@38)) (not true)) (= ($generated@@39 $generated@@177) $generated@@37)) ($generated@@35 $generated@@96 ($generated@@176 $generated@@177) ($generated@@97 $generated@@45)))
 :pattern ( ($generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (and (or (not (= $generated@@178 $generated@@38)) (not true)) (= ($generated@@39 $generated@@178) $generated@@41)) ($generated@@35 $generated@@96 ($generated@@112 $generated@@178) ($generated@@97 $generated@@45)))
 :pattern ( ($generated@@112 $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (and (or (not (= $generated@@180 $generated@@38)) (not true)) (= ($generated@@39 $generated@@180) $generated@@41)) ($generated@@35 $generated@@96 ($generated@@179 $generated@@180) ($generated@@97 $generated@@45)))
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert  (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@181 $generated@@184 $generated@@185 $generated@@186 ($generated@@183 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@189 $generated@@190) $generated@@187)
 :weight 0
)) (and (forall (($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@181 $generated@@191 $generated@@192 $generated@@193 ($generated@@183 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@181 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@181 $generated@@200 $generated@@201 $generated@@202 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@181 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (= ($generated@@19 ($generated@@181 $generated@@36 $generated@@60 $generated@@15 ($generated@@182 $generated@@209 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (or (not (= $generated@@214 $generated@@209)) (not true)) ($generated@@19 ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@214) $generated@@211)))) (or (= $generated@@214 $generated@@212) (= $generated@@214 $generated@@213))))
 :pattern ( ($generated@@181 $generated@@36 $generated@@60 $generated@@15 ($generated@@182 $generated@@209 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@149 $generated@@216 $generated@@217) (forall (($generated@@218 T@U) ) (! (= ($generated@@32 $generated@@216 $generated@@218) ($generated@@32 $generated@@217 $generated@@218))
 :pattern ( ($generated@@32 $generated@@216 $generated@@218))
 :pattern ( ($generated@@32 $generated@@217 $generated@@218))
)))
 :pattern ( ($generated@@149 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and ($generated@@104 $generated@@219) (and (or (not (= $generated@@220 $generated@@38)) (not true)) (= ($generated@@39 $generated@@220) $generated@@37))) ($generated@@19 ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@219 $generated@@220) $generated@@0)))) ($generated@@43 $generated@@96 ($generated@@105 $generated@@220) ($generated@@97 $generated@@45) $generated@@219))
 :pattern ( ($generated@@105 $generated@@220) ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@219 $generated@@220) $generated@@0)))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and ($generated@@104 $generated@@221) (and (or (not (= $generated@@222 $generated@@38)) (not true)) (= ($generated@@39 $generated@@222) $generated@@37))) ($generated@@19 ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@221 $generated@@222) $generated@@0)))) ($generated@@43 $generated@@96 ($generated@@176 $generated@@222) ($generated@@97 $generated@@45) $generated@@221))
 :pattern ( ($generated@@176 $generated@@222) ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@221 $generated@@222) $generated@@0)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and ($generated@@104 $generated@@223) (and (or (not (= $generated@@224 $generated@@38)) (not true)) (= ($generated@@39 $generated@@224) $generated@@41))) ($generated@@19 ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@223 $generated@@224) $generated@@0)))) ($generated@@43 $generated@@96 ($generated@@112 $generated@@224) ($generated@@97 $generated@@45) $generated@@223))
 :pattern ( ($generated@@112 $generated@@224) ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@223 $generated@@224) $generated@@0)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and ($generated@@104 $generated@@225) (and (or (not (= $generated@@226 $generated@@38)) (not true)) (= ($generated@@39 $generated@@226) $generated@@41))) ($generated@@19 ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@225 $generated@@226) $generated@@0)))) ($generated@@43 $generated@@96 ($generated@@179 $generated@@226) ($generated@@97 $generated@@45) $generated@@225))
 :pattern ( ($generated@@179 $generated@@226) ($generated@@58 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@225 $generated@@226) $generated@@0)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@232 (T@U T@U) Bool)
(declare-fun $generated@@233 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@234 true))
(let (($generated@@235  (=> (and (not (and ($generated@@149 ($generated@@179 $generated@@227) ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@228 $generated@@227) $generated@@57))) ($generated@@149 ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@228 $generated@@227) $generated@@57)) ($generated@@112 $generated@@227)))) (= (ControlFlow 0 4) 1)) $generated@@234)))
(let (($generated@@236  (=> (and ($generated@@149 ($generated@@179 $generated@@227) ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@228 $generated@@227) $generated@@57))) ($generated@@149 ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@228 $generated@@227) $generated@@57)) ($generated@@112 $generated@@227))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@227 $generated@@38)) (not true))) (=> (or (not (= $generated@@227 $generated@@38)) (not true)) (=> (= (ControlFlow 0 2) 1) $generated@@234))))))
(let (($generated@@237  (=> (not ($generated@@149 ($generated@@179 $generated@@227) ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@228 $generated@@227) $generated@@57)))) (and (=> (= (ControlFlow 0 8) 2) $generated@@236) (=> (= (ControlFlow 0 8) 4) $generated@@235)))))
(let (($generated@@238  (=> ($generated@@149 ($generated@@179 $generated@@227) ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@228 $generated@@227) $generated@@57))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (not (= $generated@@227 $generated@@38)) (not true))) (=> (or (not (= $generated@@227 $generated@@38)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= $generated@@227 $generated@@38)) (not true))) (=> (or (not (= $generated@@227 $generated@@38)) (not true)) (and (=> (= (ControlFlow 0 5) 2) $generated@@236) (=> (= (ControlFlow 0 5) 4) $generated@@235)))))))))
(let (($generated@@239  (=> (and (and ($generated@@149 ($generated@@176 $generated@@229) ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@228 $generated@@229) $generated@@54))) ($generated@@149 ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@228 $generated@@229) $generated@@54)) ($generated@@105 $generated@@229))) ($generated@@149 ($generated@@105 $generated@@229) $generated@@33)) (and (=> (= (ControlFlow 0 9) (- 0 11)) (or (not (= $generated@@227 $generated@@38)) (not true))) (=> (or (not (= $generated@@227 $generated@@38)) (not true)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (not (= $generated@@227 $generated@@38)) (not true))) (=> (or (not (= $generated@@227 $generated@@38)) (not true)) (and (=> (= (ControlFlow 0 9) 5) $generated@@238) (=> (= (ControlFlow 0 9) 8) $generated@@237)))))))))
(let (($generated@@240  (=> (and (not (and ($generated@@149 ($generated@@176 $generated@@229) ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@228 $generated@@229) $generated@@54))) ($generated@@149 ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@228 $generated@@229) $generated@@54)) ($generated@@105 $generated@@229)))) (= (ControlFlow 0 14) 9)) $generated@@239)))
(let (($generated@@241  (=> (and ($generated@@149 ($generated@@176 $generated@@229) ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@228 $generated@@229) $generated@@54))) ($generated@@149 ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@228 $generated@@229) $generated@@54)) ($generated@@105 $generated@@229))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (or (not (= $generated@@229 $generated@@38)) (not true))) (=> (or (not (= $generated@@229 $generated@@38)) (not true)) (=> (= (ControlFlow 0 12) 9) $generated@@239))))))
(let (($generated@@242  (=> (not ($generated@@149 ($generated@@176 $generated@@229) ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@228 $generated@@229) $generated@@54)))) (and (=> (= (ControlFlow 0 18) 12) $generated@@241) (=> (= (ControlFlow 0 18) 14) $generated@@240)))))
(let (($generated@@243  (=> ($generated@@149 ($generated@@176 $generated@@229) ($generated@@58 $generated@@96 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@228 $generated@@229) $generated@@54))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (or (not (= $generated@@229 $generated@@38)) (not true))) (=> (or (not (= $generated@@229 $generated@@38)) (not true)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (not (= $generated@@229 $generated@@38)) (not true))) (=> (or (not (= $generated@@229 $generated@@38)) (not true)) (and (=> (= (ControlFlow 0 15) 12) $generated@@241) (=> (= (ControlFlow 0 15) 14) $generated@@240)))))))))
(let (($generated@@244  (=> (= $generated@@230 ($generated@@182 $generated@@38 $generated@@228 $generated@@0 $generated@@229 $generated@@227)) (and (=> (= (ControlFlow 0 19) (- 0 23)) (or (not (= $generated@@229 $generated@@38)) (not true))) (=> (or (not (= $generated@@229 $generated@@38)) (not true)) (=> ($generated@@118 ($generated@@93 $generated@@36 $generated@@229) $generated@@37 $generated@@228) (=> (and ($generated@@231 $generated@@228 $generated@@229) ($generated@@103 $generated@@228 $generated@@229)) (and (=> (= (ControlFlow 0 19) (- 0 22)) (or (not (= $generated@@227 $generated@@38)) (not true))) (=> (or (not (= $generated@@227 $generated@@38)) (not true)) (=> ($generated@@118 ($generated@@93 $generated@@36 $generated@@227) $generated@@41 $generated@@228) (=> (and ($generated@@232 $generated@@228 $generated@@227) ($generated@@111 $generated@@228 $generated@@227)) (and (=> (= (ControlFlow 0 19) (- 0 21)) (or (not (= $generated@@229 $generated@@38)) (not true))) (=> (or (not (= $generated@@229 $generated@@38)) (not true)) (and (=> (= (ControlFlow 0 19) (- 0 20)) (or (not (= $generated@@229 $generated@@38)) (not true))) (=> (or (not (= $generated@@229 $generated@@38)) (not true)) (and (=> (= (ControlFlow 0 19) 15) $generated@@243) (=> (= (ControlFlow 0 19) 18) $generated@@242)))))))))))))))))
(let (($generated@@245  (=> (and (and (and ($generated@@104 $generated@@228) ($generated@@102 $generated@@228)) (and ($generated@@35 $generated@@36 $generated@@229 $generated@@48) ($generated@@43 $generated@@36 $generated@@229 $generated@@48 $generated@@228))) (and (and ($generated@@35 $generated@@36 $generated@@227 $generated@@51) ($generated@@43 $generated@@36 $generated@@227 $generated@@51 $generated@@228)) (and (= 2 $generated@@233) (= (ControlFlow 0 24) 19)))) $generated@@244)))
$generated@@245)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
