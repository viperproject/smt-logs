(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () Int)
(declare-fun $generated@@30 (T@U T@U Int T@U T@U) Int)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U T@U Int T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@T T@T) T@T)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@68 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@85 (Int) Int)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@1) 0))
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@28 $generated@@1) $generated@@2))
(assert  (and (and (and (and (and (and (and (= ($generated@@10 $generated@@35) 3) (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@38 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
))) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@38 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@38 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@10 $generated@@39) 4)) (= ($generated@@10 $generated@@40) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@10 ($generated@@41 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@41 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@41 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@41 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@41 $generated@@61 $generated@@62))
))))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 Int) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@32 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67) (and (< 1 $generated@@29) (and (and (and (and ($generated@@31 $generated@@63) ($generated@@31 $generated@@64)) ($generated@@33 $generated@@63 $generated@@64)) ($generated@@34 $generated@@35 $generated@@66 $generated@@36)) ($generated@@34 $generated@@35 $generated@@67 $generated@@36)))) (= ($generated@@30 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67) (+ (+ (+ (+ $generated@@65 ($generated@@17 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@63 $generated@@66) $generated@@42)))) ($generated@@17 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@64 $generated@@66) $generated@@42)))) ($generated@@17 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@63 $generated@@67) $generated@@42)))) ($generated@@17 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@64 $generated@@67) $generated@@42))))))
 :pattern ( ($generated@@30 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67) ($generated@@31 $generated@@64))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! ($generated@@68 $generated@@12 $generated@@70 $generated@@69 $generated@@71)
 :pattern ( ($generated@@68 $generated@@12 $generated@@70 $generated@@69 $generated@@71))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@75 $generated@@72)  (or (= $generated@@75 $generated@@73) (= ($generated@@74 $generated@@75) $generated@@72)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@75 $generated@@72))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@68 $generated@@35 $generated@@76 $generated@@36 $generated@@77) ($generated@@68 $generated@@35 $generated@@76 $generated@@72 $generated@@77))
 :pattern ( ($generated@@68 $generated@@35 $generated@@76 $generated@@36 $generated@@77))
 :pattern ( ($generated@@68 $generated@@35 $generated@@76 $generated@@72 $generated@@77))
)))
(assert (= ($generated@@26 $generated@@42) 0))
(assert (= ($generated@@78 $generated@@5 $generated@@9) $generated@@42))
(assert  (not ($generated@@79 $generated@@42)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@68 $generated@@35 $generated@@80 $generated@@72 $generated@@81)  (or (= $generated@@80 $generated@@73) ($generated@@15 ($generated@@37 $generated@@11 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@81 $generated@@80) $generated@@1)))))
 :pattern ( ($generated@@68 $generated@@35 $generated@@80 $generated@@72 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@33 $generated@@82 $generated@@83) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@15 ($generated@@37 $generated@@11 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@82 $generated@@84) $generated@@1))) ($generated@@15 ($generated@@37 $generated@@11 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@83 $generated@@84) $generated@@1))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@83 $generated@@84) $generated@@1))
)))
 :pattern ( ($generated@@33 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 Int) ) (! (= ($generated@@85 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 $generated@@88) $generated@@88)
 :pattern ( ($generated@@87 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 ($generated@@37 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@37 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@34 $generated@@12 $generated@@93 $generated@@69) (<= ($generated@@85 0) ($generated@@17 $generated@@93)))
 :pattern ( ($generated@@34 $generated@@12 $generated@@93 $generated@@69))
)))
(assert ($generated@@79 $generated@@1))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (!  (=> ($generated@@33 $generated@@94 $generated@@95) (=> ($generated@@68 $generated@@98 $generated@@96 $generated@@97 $generated@@94) ($generated@@68 $generated@@98 $generated@@96 $generated@@97 $generated@@95)))
 :pattern ( ($generated@@33 $generated@@94 $generated@@95) ($generated@@68 $generated@@98 $generated@@96 $generated@@97 $generated@@94))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and ($generated@@31 $generated@@99) (and (or (not (= $generated@@100 $generated@@73)) (not true)) (= ($generated@@74 $generated@@100) $generated@@72))) ($generated@@34 $generated@@12 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@99 $generated@@100) $generated@@42)) $generated@@69))
 :pattern ( ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@99 $generated@@100) $generated@@42)))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@101 $generated@@36)  (and ($generated@@34 $generated@@35 $generated@@101 $generated@@72) (or (not (= $generated@@101 $generated@@73)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@101 $generated@@36))
 :pattern ( ($generated@@34 $generated@@35 $generated@@101 $generated@@72))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and (and ($generated@@31 $generated@@102) (and (or (not (= $generated@@103 $generated@@73)) (not true)) (= ($generated@@74 $generated@@103) $generated@@72))) ($generated@@15 ($generated@@37 $generated@@11 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@102 $generated@@103) $generated@@1)))) ($generated@@68 $generated@@12 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@102 $generated@@103) $generated@@42)) $generated@@69 $generated@@102))
 :pattern ( ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@102 $generated@@103) $generated@@42)))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or (not (= $generated@@104 $generated@@106)) (not true)) (=> (and ($generated@@33 $generated@@104 $generated@@105) ($generated@@33 $generated@@105 $generated@@106)) ($generated@@33 $generated@@104 $generated@@106)))
 :pattern ( ($generated@@33 $generated@@104 $generated@@105) ($generated@@33 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (and (= ($generated@@107 ($generated@@78 $generated@@108 $generated@@109)) $generated@@108) (= ($generated@@28 ($generated@@78 $generated@@108 $generated@@109)) $generated@@109))
 :pattern ( ($generated@@78 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@37 $generated@@111 ($generated@@90 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@90 $generated@@111 $generated@@110))
)))
(assert (= ($generated@@27 $generated@@69) $generated@@3))
(assert (= ($generated@@112 $generated@@69) $generated@@7))
(assert (= ($generated@@27 $generated@@36) $generated@@4))
(assert (= ($generated@@112 $generated@@36) $generated@@8))
(assert (= ($generated@@27 $generated@@72) $generated@@6))
(assert (= ($generated@@112 $generated@@72) $generated@@8))
(assert  (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@113 $generated@@116 $generated@@117 $generated@@118 ($generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@121 $generated@@122) $generated@@119)
 :weight 0
)) (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@113 $generated@@123 $generated@@124 $generated@@125 ($generated@@115 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@113 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@113 $generated@@132 $generated@@133 $generated@@134 ($generated@@115 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@113 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@15 ($generated@@113 $generated@@35 $generated@@39 $generated@@11 ($generated@@114 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@146 $generated@@147))  (=> (and (or (not (= $generated@@146 $generated@@141)) (not true)) ($generated@@15 ($generated@@37 $generated@@11 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@142 $generated@@146) $generated@@143)))) (or (= $generated@@146 $generated@@144) (= $generated@@146 $generated@@145))))
 :pattern ( ($generated@@113 $generated@@35 $generated@@39 $generated@@11 ($generated@@114 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 Int) ) (! (= ($generated@@90 $generated@@12 ($generated@@16 ($generated@@85 $generated@@148))) ($generated@@87 $generated@@40 ($generated@@90 $generated@@12 ($generated@@16 $generated@@148))))
 :pattern ( ($generated@@90 $generated@@12 ($generated@@16 ($generated@@85 $generated@@148))))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@90 $generated@@150 ($generated@@87 $generated@@150 $generated@@149)) ($generated@@87 $generated@@40 ($generated@@90 $generated@@150 $generated@@149)))
 :pattern ( ($generated@@90 $generated@@150 ($generated@@87 $generated@@150 $generated@@149)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 Int) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and ($generated@@31 $generated@@153) ($generated@@31 $generated@@154)) (or ($generated@@32 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157) (and ($generated@@34 $generated@@35 $generated@@156 $generated@@36) ($generated@@34 $generated@@35 $generated@@157 $generated@@36)))) (and ($generated@@151 $generated@@153) ($generated@@33 $generated@@153 $generated@@154))) (=> (forall (($generated@@158 T@U) ($generated@@159 T@U) )  (=> (and (or (not (= $generated@@158 $generated@@73)) (not true)) (or (= $generated@@158 $generated@@156) (= $generated@@158 $generated@@157))) (= ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@153 $generated@@158) $generated@@159) ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@154 $generated@@158) $generated@@159)))) (= ($generated@@30 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157) ($generated@@30 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@157))))
 :pattern ( ($generated@@151 $generated@@153) ($generated@@33 $generated@@153 $generated@@154) ($generated@@30 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! ($generated@@68 $generated@@12 $generated@@161 $generated $generated@@160)
 :pattern ( ($generated@@68 $generated@@12 $generated@@161 $generated $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! ($generated@@34 $generated@@12 $generated@@162 $generated)
 :pattern ( ($generated@@34 $generated@@12 $generated@@162 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Bool)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@172  (and (=> (= (ControlFlow 0 3) (- 0 10)) (or (not (= $generated@@163 $generated@@73)) (not true))) (=> (or (not (= $generated@@163 $generated@@73)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 9)) ($generated@@68 $generated@@35 $generated@@163 $generated@@36 $generated@@164)) (=> ($generated@@68 $generated@@35 $generated@@163 $generated@@36 $generated@@164) (and (=> (= (ControlFlow 0 3) (- 0 8)) (or (not (= $generated@@163 $generated@@73)) (not true))) (=> (or (not (= $generated@@163 $generated@@73)) (not true)) (=> (= $generated@@165 ($generated@@15 ($generated@@113 $generated@@35 $generated@@39 $generated@@11 $generated@@166 $generated@@163 $generated@@42))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (or (not (= $generated@@167 $generated@@73)) (not true))) (=> (or (not (= $generated@@167 $generated@@73)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@68 $generated@@35 $generated@@167 $generated@@36 $generated@@164)) (=> ($generated@@68 $generated@@35 $generated@@167 $generated@@36 $generated@@164) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (not (= $generated@@167 $generated@@73)) (not true))) (=> (or (not (= $generated@@167 $generated@@73)) (not true)) (=> (= $generated@@168 ($generated@@15 ($generated@@113 $generated@@35 $generated@@39 $generated@@11 $generated@@166 $generated@@167 $generated@@42))) (=> (and (= ($generated@@30 $generated@@164 $generated@@169 $generated@@170 $generated@@163 $generated@@167) (+ (+ (+ (+ $generated@@170 ($generated@@17 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@164 $generated@@163) $generated@@42)))) ($generated@@17 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@169 $generated@@163) $generated@@42)))) ($generated@@17 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@164 $generated@@167) $generated@@42)))) ($generated@@17 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@169 $generated@@167) $generated@@42))))) ($generated@@34 $generated@@12 ($generated@@16 ($generated@@30 $generated@@164 $generated@@169 $generated@@170 $generated@@163 $generated@@167)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@165) (=> $generated@@165 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@168))))))))))))))))))))
(let (($generated@@173 true))
(let (($generated@@174  (=> (= $generated@@166 ($generated@@114 $generated@@73 $generated@@169 $generated@@1 $generated@@163 $generated@@167)) (and (=> (= (ControlFlow 0 11) 1) $generated@@173) (=> (= (ControlFlow 0 11) 3) $generated@@172)))))
(let (($generated@@175  (=> (and (and ($generated@@31 $generated@@164) ($generated@@151 $generated@@164)) (and ($generated@@34 $generated@@35 $generated@@163 $generated@@36) ($generated@@68 $generated@@35 $generated@@163 $generated@@36 $generated@@171))) (=> (and (and (and ($generated@@34 $generated@@35 $generated@@167 $generated@@36) ($generated@@68 $generated@@35 $generated@@167 $generated@@36 $generated@@169)) (= 1 $generated@@29)) (and (and (= $generated@@171 $generated@@164) (and ($generated@@33 $generated@@171 $generated@@169) ($generated@@31 $generated@@169))) (= (ControlFlow 0 12) 11))) $generated@@174))))
$generated@@175)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 6))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
