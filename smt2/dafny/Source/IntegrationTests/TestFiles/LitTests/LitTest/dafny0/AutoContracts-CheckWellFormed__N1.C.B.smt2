(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () Int)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@T T@T) T@T)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@77 (T@U T@U) T@U)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@0) 0))
(assert (= ($generated@@27 $generated@@0) $generated@@1))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@34) 3) (= ($generated@@10 $generated@@39) 4)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@40 $generated@@49 $generated@@50 ($generated@@46 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@53) $generated@@51)
 :weight 0
))) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@58 $generated@@59) (= ($generated@@40 $generated@@54 $generated@@55 ($generated@@46 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@59) ($generated@@40 $generated@@54 $generated@@55 $generated@@57 $generated@@59)))
 :weight 0
))) (= ($generated@@10 $generated@@41) 5)) (= ($generated@@10 $generated@@42) 6)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (= ($generated@@10 ($generated@@43 $generated@@60 $generated@@61)) 7))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@47 ($generated@@43 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@43 $generated@@62 $generated@@63))
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@48 ($generated@@43 $generated@@64 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@43 $generated@@64 $generated@@65))
))))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@31 $generated@@66 $generated@@67) (and (< 0 $generated@@28) (and ($generated@@30 $generated@@66) (and (or (not (= $generated@@67 $generated@@32)) (not true)) (and ($generated@@33 $generated@@34 $generated@@67 $generated@@35) ($generated@@36 $generated@@34 $generated@@67 $generated@@35 $generated@@66)))))) (= ($generated@@29 $generated@@66 $generated@@67)  (and (and ($generated@@37 ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@66 $generated@@67) $generated@@44)) ($generated@@45 $generated@@34 $generated@@67)) (not ($generated@@37 ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@66 $generated@@67) $generated@@44)) ($generated@@45 $generated@@34 $generated@@32)))) true)))
 :pattern ( ($generated@@29 $generated@@66 $generated@@67) ($generated@@30 $generated@@66))
))))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@70 $generated@@68)  (or (= $generated@@70 $generated@@32) (= ($generated@@69 $generated@@70) $generated@@68)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@70 $generated@@68))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@36 $generated@@34 $generated@@73 $generated@@71 $generated@@74) ($generated@@36 $generated@@34 $generated@@73 $generated@@72 $generated@@74))
 :pattern ( ($generated@@36 $generated@@34 $generated@@73 $generated@@71 $generated@@74))
 :pattern ( ($generated@@36 $generated@@34 $generated@@73 $generated@@72 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@36 $generated@@34 $generated@@75 $generated@@35 $generated@@76) ($generated@@36 $generated@@34 $generated@@75 $generated@@68 $generated@@76))
 :pattern ( ($generated@@36 $generated@@34 $generated@@75 $generated@@35 $generated@@76))
 :pattern ( ($generated@@36 $generated@@34 $generated@@75 $generated@@68 $generated@@76))
)))
(assert (= ($generated@@26 $generated@@44) 0))
(assert (= ($generated@@77 $generated@@4 $generated@@9) $generated@@44))
(assert ($generated@@78 $generated@@44))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@36 $generated@@34 $generated@@79 $generated@@72 $generated@@80)  (or (= $generated@@79 $generated@@32) ($generated@@15 ($generated@@38 $generated@@11 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@80 $generated@@79) $generated@@0)))))
 :pattern ( ($generated@@36 $generated@@34 $generated@@79 $generated@@72 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@36 $generated@@34 $generated@@81 $generated@@68 $generated@@82)  (or (= $generated@@81 $generated@@32) ($generated@@15 ($generated@@38 $generated@@11 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@82 $generated@@81) $generated@@0)))))
 :pattern ( ($generated@@36 $generated@@34 $generated@@81 $generated@@68 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@83 $generated@@84 $generated@@85) (forall (($generated@@86 T@U) ) (!  (=> ($generated@@15 ($generated@@38 $generated@@11 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@84 $generated@@86) $generated@@0))) ($generated@@15 ($generated@@38 $generated@@11 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@85 $generated@@86) $generated@@0))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@85 $generated@@86) $generated@@0))
)))
 :pattern ( ($generated@@83 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@45 $generated@@88 ($generated@@38 $generated@@88 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@38 $generated@@88 $generated@@87))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@33 $generated@@39 $generated@@91 ($generated@@89 $generated@@92)) (forall (($generated@@93 T@U) ) (!  (=> ($generated@@37 $generated@@91 $generated@@93) ($generated@@90 $generated@@93 $generated@@92))
 :pattern ( ($generated@@37 $generated@@91 $generated@@93))
)))
 :pattern ( ($generated@@33 $generated@@39 $generated@@91 ($generated@@89 $generated@@92)))
)))
(assert ($generated@@78 $generated@@0))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@94 ($generated@@45 $generated@@98 $generated@@95) $generated@@96 $generated@@97) ($generated@@36 $generated@@98 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@94 ($generated@@45 $generated@@98 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> ($generated@@83 $generated@@99 $generated@@100) (=> ($generated@@94 $generated@@101 $generated@@102 $generated@@99) ($generated@@94 $generated@@101 $generated@@102 $generated@@100)))
 :pattern ( ($generated@@83 $generated@@99 $generated@@100) ($generated@@94 $generated@@101 $generated@@102 $generated@@99))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (!  (=> ($generated@@83 $generated@@103 $generated@@104) (=> ($generated@@36 $generated@@107 $generated@@105 $generated@@106 $generated@@103) ($generated@@36 $generated@@107 $generated@@105 $generated@@106 $generated@@104)))
 :pattern ( ($generated@@83 $generated@@103 $generated@@104) ($generated@@36 $generated@@107 $generated@@105 $generated@@106 $generated@@103))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@90 $generated@@108 $generated@@72) (and (= ($generated@@45 $generated@@34 ($generated@@38 $generated@@34 $generated@@108)) $generated@@108) ($generated@@33 $generated@@34 ($generated@@38 $generated@@34 $generated@@108) $generated@@72)))
 :pattern ( ($generated@@90 $generated@@108 $generated@@72))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@90 $generated@@109 $generated@@71) (and (= ($generated@@45 $generated@@34 ($generated@@38 $generated@@34 $generated@@109)) $generated@@109) ($generated@@33 $generated@@34 ($generated@@38 $generated@@34 $generated@@109) $generated@@71)))
 :pattern ( ($generated@@90 $generated@@109 $generated@@71))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@90 $generated@@110 $generated@@68) (and (= ($generated@@45 $generated@@34 ($generated@@38 $generated@@34 $generated@@110)) $generated@@110) ($generated@@33 $generated@@34 ($generated@@38 $generated@@34 $generated@@110) $generated@@68)))
 :pattern ( ($generated@@90 $generated@@110 $generated@@68))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@90 $generated@@111 $generated@@35) (and (= ($generated@@45 $generated@@34 ($generated@@38 $generated@@34 $generated@@111)) $generated@@111) ($generated@@33 $generated@@34 ($generated@@38 $generated@@34 $generated@@111) $generated@@35)))
 :pattern ( ($generated@@90 $generated@@111 $generated@@35))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@112 $generated@@71)  (and ($generated@@33 $generated@@34 $generated@@112 $generated@@72) (or (not (= $generated@@112 $generated@@32)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@112 $generated@@71))
 :pattern ( ($generated@@33 $generated@@34 $generated@@112 $generated@@72))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@113 $generated@@35)  (and ($generated@@33 $generated@@34 $generated@@113 $generated@@68) (or (not (= $generated@@113 $generated@@32)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@113 $generated@@35))
 :pattern ( ($generated@@33 $generated@@34 $generated@@113 $generated@@68))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and ($generated@@30 $generated@@114) (and (or (not (= $generated@@115 $generated@@32)) (not true)) (= ($generated@@69 $generated@@115) $generated@@68))) ($generated@@33 $generated@@39 ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@114 $generated@@115) $generated@@44)) ($generated@@89 $generated@@72)))
 :pattern ( ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@114 $generated@@115) $generated@@44)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@116) (and (or (not (= $generated@@117 $generated@@32)) (not true)) (= ($generated@@69 $generated@@117) $generated@@68))) ($generated@@15 ($generated@@38 $generated@@11 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@116 $generated@@117) $generated@@0)))) ($generated@@36 $generated@@39 ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@116 $generated@@117) $generated@@44)) ($generated@@89 $generated@@72) $generated@@116))
 :pattern ( ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@116 $generated@@117) $generated@@44)))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (or (not (= $generated@@118 $generated@@120)) (not true)) (=> (and ($generated@@83 $generated@@118 $generated@@119) ($generated@@83 $generated@@119 $generated@@120)) ($generated@@83 $generated@@118 $generated@@120)))
 :pattern ( ($generated@@83 $generated@@118 $generated@@119) ($generated@@83 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (and (= ($generated@@121 ($generated@@77 $generated@@122 $generated@@123)) $generated@@122) (= ($generated@@27 ($generated@@77 $generated@@122 $generated@@123)) $generated@@123))
 :pattern ( ($generated@@77 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@90 ($generated@@45 $generated@@126 $generated@@124) $generated@@125) ($generated@@33 $generated@@126 $generated@@124 $generated@@125))
 :pattern ( ($generated@@90 ($generated@@45 $generated@@126 $generated@@124) $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@36 $generated@@39 $generated@@127 ($generated@@89 $generated@@128) $generated@@129) (forall (($generated@@130 T@U) ) (!  (=> ($generated@@37 $generated@@127 $generated@@130) ($generated@@94 $generated@@130 $generated@@128 $generated@@129))
 :pattern ( ($generated@@37 $generated@@127 $generated@@130))
)))
 :pattern ( ($generated@@36 $generated@@39 $generated@@127 ($generated@@89 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! ($generated@@33 $generated@@34 $generated@@131 $generated@@72)
 :pattern ( ($generated@@33 $generated@@34 $generated@@131 $generated@@72))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@132 ($generated@@89 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@89 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@134 ($generated@@89 $generated@@135)) $generated)
 :pattern ( ($generated@@89 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@38 $generated@@137 ($generated@@45 $generated@@137 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@45 $generated@@137 $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and ($generated@@30 $generated@@139) ($generated@@30 $generated@@140)) (and (or (not (= $generated@@141 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@141 $generated@@35))) (and ($generated@@138 $generated@@139) ($generated@@83 $generated@@139 $generated@@140))) (=> (forall (($generated@@142 T@U) ($generated@@143 T@U) )  (=> (and (or (not (= $generated@@142 $generated@@32)) (not true)) (or (= $generated@@142 $generated@@141) ($generated@@37 ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@139 $generated@@141) $generated@@44)) ($generated@@45 $generated@@34 $generated@@142)))) (= ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@139 $generated@@142) $generated@@143) ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@140 $generated@@142) $generated@@143)))) (= ($generated@@29 $generated@@139 $generated@@141) ($generated@@29 $generated@@140 $generated@@141))))
 :pattern ( ($generated@@138 $generated@@139) ($generated@@83 $generated@@139 $generated@@140) ($generated@@29 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> ($generated@@90 $generated@@144 ($generated@@89 $generated@@145)) (and (= ($generated@@45 $generated@@39 ($generated@@38 $generated@@39 $generated@@144)) $generated@@144) ($generated@@33 $generated@@39 ($generated@@38 $generated@@39 $generated@@144) ($generated@@89 $generated@@145))))
 :pattern ( ($generated@@90 $generated@@144 ($generated@@89 $generated@@145)))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (or ($generated@@31 $generated@@146 $generated@@147) (and (< 0 $generated@@28) (and ($generated@@30 $generated@@146) (and (or (not (= $generated@@147 $generated@@32)) (not true)) (and ($generated@@33 $generated@@34 $generated@@147 $generated@@35) ($generated@@36 $generated@@34 $generated@@147 $generated@@35 $generated@@146)))))) (=> ($generated@@29 $generated@@146 $generated@@147) ($generated@@37 ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@146 $generated@@147) $generated@@44)) ($generated@@45 $generated@@34 $generated@@147))))
 :pattern ( ($generated@@29 $generated@@146 $generated@@147))
))))
(assert (= ($generated@@134 $generated@@72) $generated@@2))
(assert (= ($generated@@148 $generated@@72) $generated@@7))
(assert (= ($generated@@134 $generated@@71) $generated@@3))
(assert (= ($generated@@148 $generated@@71) $generated@@7))
(assert (= ($generated@@134 $generated@@68) $generated@@5))
(assert (= ($generated@@148 $generated@@68) $generated@@8))
(assert (= ($generated@@134 $generated@@35) $generated@@6))
(assert (= ($generated@@148 $generated@@35) $generated@@8))
(assert  (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@149 $generated@@152 $generated@@153 $generated@@154 ($generated@@151 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@157 $generated@@158) $generated@@155)
 :weight 0
)) (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@149 $generated@@159 $generated@@160 $generated@@161 ($generated@@151 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@149 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@149 $generated@@168 $generated@@169 $generated@@170 ($generated@@151 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@149 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@15 ($generated@@149 $generated@@34 $generated@@41 $generated@@11 ($generated@@150 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@181 $generated@@182))  (=> (and (or (not (= $generated@@181 $generated@@177)) (not true)) ($generated@@15 ($generated@@38 $generated@@11 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@178 $generated@@181) $generated@@179)))) ($generated@@37 $generated@@180 ($generated@@45 $generated@@34 $generated@@181))))
 :pattern ( ($generated@@149 $generated@@34 $generated@@41 $generated@@11 ($generated@@150 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@181 $generated@@182))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@187  (=> (and (and (= $generated@@183 ($generated@@150 $generated@@32 $generated@@184 $generated@@0 ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@184 $generated@@185) $generated@@44)))) ($generated@@94 ($generated@@45 $generated@@34 $generated@@185) $generated@@68 $generated@@184)) (and ($generated@@31 $generated@@184 $generated@@185) ($generated@@29 $generated@@184 $generated@@185))) (=> (and (and (and ($generated@@30 $generated@@186) ($generated@@138 $generated@@186)) (and (forall (($generated@@188 T@U) ) (!  (=> (and (or (not (= $generated@@188 $generated@@32)) (not true)) ($generated@@15 ($generated@@38 $generated@@11 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@184 $generated@@188) $generated@@0)))) (or (= ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@186 $generated@@188) ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@184 $generated@@188)) ($generated@@37 ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@184 $generated@@185) $generated@@44)) ($generated@@45 $generated@@34 $generated@@188))))
 :pattern ( ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@186 $generated@@188))
)) ($generated@@83 $generated@@184 $generated@@186))) (and (and ($generated@@94 ($generated@@45 $generated@@34 $generated@@185) $generated@@68 $generated@@186) ($generated@@31 $generated@@186 $generated@@185)) (and ($generated@@29 $generated@@186 $generated@@185) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@36 $generated@@34 $generated@@185 $generated@@35 $generated@@184)))))
(let (($generated@@189  (=> (and ($generated@@30 $generated@@184) ($generated@@138 $generated@@184)) (=> (and (and (or (not (= $generated@@185 $generated@@32)) (not true)) (and ($generated@@33 $generated@@34 $generated@@185 $generated@@35) ($generated@@36 $generated@@34 $generated@@185 $generated@@35 $generated@@184))) (and (= 1 $generated@@28) (= (ControlFlow 0 3) 2))) $generated@@187))))
$generated@@189)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
