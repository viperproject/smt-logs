(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () Int)
(declare-fun $generated@@0 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@1 (Int) Int)
(declare-fun $generated@@2 (Real) Real)
(declare-fun $generated@@3 (T@U) (_ BitVec 67))
(declare-fun $generated@@4 (T@T T@U) T@U)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (T@U) (_ BitVec 32))
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (T@U) (_ BitVec 7))
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@11 (Int Int) Int)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@22 ((_ BitVec 67)) T@U)
(declare-fun $generated@@23 ((_ BitVec 32)) T@U)
(declare-fun $generated@@24 ((_ BitVec 7)) T@U)
(declare-fun $generated@@46 (Real) Int)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@65 (Int) Real)
(declare-fun $generated@@70 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@74 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@13) 0) (= ($generated@@15 $generated@@16) 1)) (= ($generated@@15 $generated@@17) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@12 ($generated@@14 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@14 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@14 ($generated@@12 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@12 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@18 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@19 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@20 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@21 $generated@@30))
))) (= ($generated@@15 $generated@@5) 3)) (forall (($generated@@31 (_ BitVec 67)) ) (! (= ($generated@@3 ($generated@@22 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@22 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@22 ($generated@@3 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@3 $generated@@32))
))) (= ($generated@@15 $generated@@7) 4)) (forall (($generated@@33 (_ BitVec 32)) ) (! (= ($generated@@6 ($generated@@23 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@23 $generated@@33))
))) (forall (($generated@@34 T@U) ) (! (= ($generated@@23 ($generated@@6 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@6 $generated@@34))
))) (= ($generated@@15 $generated@@9) 5)) (forall (($generated@@35 (_ BitVec 7)) ) (! (= ($generated@@8 ($generated@@24 $generated@@35)) $generated@@35)
 :pattern ( ($generated@@24 $generated@@35))
))) (forall (($generated@@36 T@U) ) (! (= ($generated@@24 ($generated@@8 $generated@@36)) $generated@@36)
 :pattern ( ($generated@@8 $generated@@36))
))))
(assert  (=> (<= 1 $generated) (forall (($generated@@37 Int) ($generated@@38 Int) ($generated@@39 Real) ($generated@@40 Int) ($generated@@41 Real) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 Int) ) (!  (=> (or ($generated@@10 ($generated@@1 $generated@@37) ($generated@@1 $generated@@38) ($generated@@2 $generated@@39) ($generated@@1 $generated@@40) ($generated@@2 $generated@@41) ($generated@@3 ($generated@@4 $generated@@5 $generated@@42)) ($generated@@6 ($generated@@4 $generated@@7 $generated@@43)) ($generated@@8 ($generated@@4 $generated@@9 $generated@@44)) ($generated@@1 $generated@@45)) (and (< 1 $generated) (and (and (and (<= ($generated@@1 0) $generated@@38) (= ($generated@@11 $generated@@40 ($generated@@1 2)) ($generated@@1 0))) (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@41) (< $generated@@41 300.0))) (= 0 $generated@@45)))) (= ($generated@@0 ($generated@@1 $generated@@37) ($generated@@1 $generated@@38) ($generated@@2 $generated@@39) ($generated@@1 $generated@@40) ($generated@@2 $generated@@41) ($generated@@3 ($generated@@4 $generated@@5 $generated@@42)) ($generated@@6 ($generated@@4 $generated@@7 $generated@@43)) ($generated@@8 ($generated@@4 $generated@@9 $generated@@44)) ($generated@@1 $generated@@45)) ($generated@@12 ($generated@@4 $generated@@13 ($generated@@14 true)))))
 :weight 3
 :pattern ( ($generated@@0 ($generated@@1 $generated@@37) ($generated@@1 $generated@@38) ($generated@@2 $generated@@39) ($generated@@1 $generated@@40) ($generated@@2 $generated@@41) ($generated@@3 ($generated@@4 $generated@@5 $generated@@42)) ($generated@@6 ($generated@@4 $generated@@7 $generated@@43)) ($generated@@8 ($generated@@4 $generated@@9 $generated@@44)) ($generated@@1 $generated@@45)))
))))
(assert (forall (($generated@@47 Real) ) (! (= ($generated@@46 $generated@@47) (to_int $generated@@47))
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@48 Int) ) (! (= ($generated@@1 $generated@@48) $generated@@48)
 :pattern ( ($generated@@1 $generated@@48))
)))
(assert (forall (($generated@@49 Real) ) (! (= ($generated@@2 $generated@@49) $generated@@49)
 :pattern ( ($generated@@2 $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@4 $generated@@51 $generated@@50) $generated@@50)
 :pattern ( ($generated@@4 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 ($generated@@52 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@52 $generated@@55 $generated@@54))
)))
(assert  (=> (<= 1 $generated) (forall (($generated@@56 Int) ($generated@@57 Int) ($generated@@58 Real) ($generated@@59 Int) ($generated@@60 Real) ($generated@@61 (_ BitVec 67)) ($generated@@62 (_ BitVec 32)) ($generated@@63 (_ BitVec 7)) ($generated@@64 Int) ) (!  (=> (or ($generated@@10 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64) (and (< 1 $generated) (and (and (and (<= ($generated@@1 0) $generated@@57) (= ($generated@@11 $generated@@59 ($generated@@1 2)) ($generated@@1 0))) (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@60) (< $generated@@60 300.0))) (= 0 $generated@@64)))) (= ($generated@@0 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64) ($generated@@12 ($generated@@4 $generated@@13 ($generated@@14 true)))))
 :pattern ( ($generated@@0 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@65 $generated@@66) (to_real $generated@@66))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@67 Int) ) (! (= ($generated@@46 ($generated@@65 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@46 ($generated@@65 $generated@@67)))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@52 $generated@@69 ($generated@@53 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@53 $generated@@69 $generated@@68))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@70 $generated@@81 $generated@@82 $generated@@83 ($generated@@77 $generated@@81 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@87 $generated@@84) $generated@@86 $generated@@87) $generated@@84)
 :weight 0
)) (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (or (= $generated@@93 $generated@@95) (= ($generated@@70 $generated@@88 $generated@@89 $generated@@90 ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@92 $generated@@93 $generated@@94 $generated@@91) $generated@@95 $generated@@96) ($generated@@70 $generated@@88 $generated@@89 $generated@@90 $generated@@92 $generated@@95 $generated@@96)))
 :weight 0
)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or (= $generated@@103 $generated@@105) (= ($generated@@70 $generated@@97 $generated@@98 $generated@@99 ($generated@@77 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103 $generated@@100) $generated@@104 $generated@@105) ($generated@@70 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@104 $generated@@105)))
 :weight 0
)))) (= ($generated@@15 $generated@@71) 6)) (= ($generated@@15 $generated@@72) 7)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@74 $generated@@106 $generated@@107 ($generated@@78 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@108) $generated@@110) $generated@@108)
 :weight 0
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@74 $generated@@111 $generated@@112 ($generated@@78 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@74 $generated@@111 $generated@@112 $generated@@114 $generated@@116)))
 :weight 0
))) (= ($generated@@15 $generated@@75) 8)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (= ($generated@@15 ($generated@@76 $generated@@117 $generated@@118)) 9))) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@76 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@121 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@76 $generated@@121 $generated@@122))
))))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 Bool) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@12 ($generated@@70 $generated@@71 $generated@@72 $generated@@13 ($generated@@73 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))  (=> (and (or (not (= $generated@@127 $generated@@123)) (not true)) ($generated@@12 ($generated@@52 $generated@@13 ($generated@@74 $generated@@72 $generated@@75 ($generated@@74 $generated@@71 ($generated@@76 $generated@@72 $generated@@75) $generated@@124 $generated@@127) $generated@@125)))) $generated@@126))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72 $generated@@13 ($generated@@73 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 Int) ($generated@@130 Int) ) (! (= ($generated@@11 $generated@@129 $generated@@130) (mod $generated@@129 $generated@@130))
 :pattern ( ($generated@@11 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 Int) ) (! (= ($generated@@53 $generated@@16 ($generated@@18 ($generated@@1 $generated@@131))) ($generated@@4 $generated@@75 ($generated@@53 $generated@@16 ($generated@@18 $generated@@131))))
 :pattern ( ($generated@@53 $generated@@16 ($generated@@18 ($generated@@1 $generated@@131))))
)))
(assert (forall (($generated@@132 Real) ) (! (= ($generated@@53 $generated@@17 ($generated@@20 ($generated@@2 $generated@@132))) ($generated@@4 $generated@@75 ($generated@@53 $generated@@17 ($generated@@20 $generated@@132))))
 :pattern ( ($generated@@53 $generated@@17 ($generated@@20 ($generated@@2 $generated@@132))))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@53 $generated@@134 ($generated@@4 $generated@@134 $generated@@133)) ($generated@@4 $generated@@75 ($generated@@53 $generated@@134 $generated@@133)))
 :pattern ( ($generated@@53 $generated@@134 ($generated@@4 $generated@@134 $generated@@133)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@135 () Int)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 () Real)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 () Real)
(declare-fun $generated@@140 () (_ BitVec 67))
(declare-fun $generated@@141 () (_ BitVec 32))
(declare-fun $generated@@142 () (_ BitVec 7))
(declare-fun $generated@@143 () Int)
(declare-fun $generated@@144 () (_ BitVec 32))
(declare-fun $generated@@145 () (_ BitVec 7))
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 () (_ BitVec 67))
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 () Real)
(declare-fun $generated@@151 () (_ BitVec 7))
(declare-fun $generated@@152 () (_ BitVec 32))
(declare-fun $generated@@153 () Real)
(declare-fun $generated@@154 () Real)
(declare-fun $generated@@155 () Real)
(declare-fun $generated@@156 () Int)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () (_ BitVec 7))
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () (_ BitVec 7))
(declare-fun $generated@@161 () (_ BitVec 32))
(declare-fun $generated@@162 () (_ BitVec 67))
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 38) (let (($generated@@169  (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@10 $generated@@135 $generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143) (or ($generated@@0 $generated@@135 $generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143) ($generated@@12 ($generated@@4 $generated@@13 ($generated@@14 true))))))))
(let (($generated@@170  (=> (and (<= ($generated@@1 0) $generated@@138) (< $generated@@138 4294967296)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (and (<= 0 $generated@@138) (< $generated@@138 4294967296))) (=> (and (<= 0 $generated@@138) (< $generated@@138 4294967296)) (=> (and (= $generated@@144 ((_ int2bv 32) $generated@@138)) (= $generated@@142 $generated@@145)) (=> (and (and (= $generated@@141 $generated@@144) (= $generated@@143 $generated@@146)) (and (= $generated@@140 $generated@@147) (= (ControlFlow 0 30) 4))) $generated@@169)))))))
(let (($generated@@171  (=> (and (< $generated@@138 ($generated@@1 0)) (= (ControlFlow 0 34) 30)) $generated@@170)))
(let (($generated@@172  (=> (and (<= ($generated@@1 0) $generated@@138) (= $generated@@148 ($generated@@1 4294967296))) (and (=> (= (ControlFlow 0 32) (- 0 33)) (= ($generated@@11 $generated@@148 ($generated@@1 2)) ($generated@@1 0))) (=> (= ($generated@@11 $generated@@148 ($generated@@1 2)) ($generated@@1 0)) (=> (= (ControlFlow 0 32) 30) $generated@@170))))))
(let (($generated@@173  (=> (= $generated@@149 ($generated@@1 0)) (and (=> (= (ControlFlow 0 35) (- 0 36)) (= ($generated@@11 $generated@@149 ($generated@@1 2)) ($generated@@1 0))) (=> (= ($generated@@11 $generated@@149 ($generated@@1 2)) ($generated@@1 0)) (and (=> (= (ControlFlow 0 35) 32) $generated@@172) (=> (= (ControlFlow 0 35) 34) $generated@@171)))))))
(let (($generated@@174  (=> (= $generated@@150 (ite  (and (<= ($generated@@2 0.0) $generated@@139) (< $generated@@139 100.0)) $generated@@139 100.0)) (and (=> (= (ControlFlow 0 19) (- 0 21)) (= ($generated@@65 ($generated@@46 $generated@@150)) $generated@@150)) (=> (= ($generated@@65 ($generated@@46 $generated@@150)) $generated@@150) (and (=> (= (ControlFlow 0 19) (- 0 20)) (and (<= 0 ($generated@@46 $generated@@150)) (< ($generated@@46 $generated@@150) 128))) (=> (and (<= 0 ($generated@@46 $generated@@150)) (< ($generated@@46 $generated@@150) 128)) (=> (and (= $generated@@151 ((_ int2bv 7) ($generated@@46 (ite  (and (<= ($generated@@2 0.0) $generated@@139) (< $generated@@139 100.0)) $generated@@139 100.0)))) (= $generated@@142 $generated@@151)) (=> (and (and (= $generated@@141 $generated@@152) (= $generated@@143 $generated@@146)) (and (= $generated@@140 $generated@@147) (= (ControlFlow 0 19) 4))) $generated@@169)))))))))
(let (($generated@@175  (=> (and (not (and (<= ($generated@@2 0.0) $generated@@139) (< $generated@@139 100.0))) (= $generated@@153 ($generated@@2 100.0))) (and (=> (= (ControlFlow 0 23) (- 0 24)) (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@153) (< $generated@@153 300.0))) (=> (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@153) (< $generated@@153 300.0)) (=> (= (ControlFlow 0 23) 19) $generated@@174))))))
(let (($generated@@176  (=> (and (and (<= ($generated@@2 0.0) $generated@@139) (< $generated@@139 100.0)) (= (ControlFlow 0 22) 19)) $generated@@174)))
(let (($generated@@177  (=> (< $generated@@139 ($generated@@2 0.0)) (and (=> (= (ControlFlow 0 27) 22) $generated@@176) (=> (= (ControlFlow 0 27) 23) $generated@@175)))))
(let (($generated@@178  (=> (and (<= ($generated@@2 0.0) $generated@@139) (= $generated@@154 ($generated@@2 100.0))) (and (=> (= (ControlFlow 0 25) (- 0 26)) (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@154) (< $generated@@154 300.0))) (=> (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@154) (< $generated@@154 300.0)) (and (=> (= (ControlFlow 0 25) 22) $generated@@176) (=> (= (ControlFlow 0 25) 23) $generated@@175)))))))
(let (($generated@@179  (=> (and (= $generated@@139 ($generated@@65 ($generated@@46 $generated@@139))) (= $generated@@155 ($generated@@2 0.0))) (and (=> (= (ControlFlow 0 28) (- 0 29)) (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@155) (< $generated@@155 300.0))) (=> (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@155) (< $generated@@155 300.0)) (and (=> (= (ControlFlow 0 28) 25) $generated@@178) (=> (= (ControlFlow 0 28) 27) $generated@@177)))))))
(let (($generated@@180  (=> (< $generated@@136 1) (and (=> (= (ControlFlow 0 17) (- 0 18)) (and (<= 0 $generated@@136) (< $generated@@136 1))) (=> (and (<= 0 $generated@@136) (< $generated@@136 1)) (=> (and (= $generated@@156 0) (= $generated@@142 $generated@@145)) (=> (and (and (= $generated@@141 $generated@@152) (= $generated@@143 $generated@@156)) (and (= $generated@@140 $generated@@147) (= (ControlFlow 0 17) 4))) $generated@@169)))))))
(let (($generated@@181  (=> (= $generated@@136 ($generated@@1 0)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= 0 $generated@@136) (< $generated@@136 1))) (=> (and (<= 0 $generated@@136) (< $generated@@136 1)) (=> (and (= $generated@@157 0) (= $generated@@142 $generated@@145)) (=> (and (and (= $generated@@141 $generated@@152) (= $generated@@143 $generated@@157)) (and (= $generated@@140 $generated@@147) (= (ControlFlow 0 15) 4))) $generated@@169)))))))
(let (($generated@@182  (=> (< $generated@@136 128) (and (=> (= (ControlFlow 0 13) (- 0 14)) (and (<= 0 $generated@@136) (< $generated@@136 128))) (=> (and (<= 0 $generated@@136) (< $generated@@136 128)) (=> (and (= $generated@@158 ((_ int2bv 7) $generated@@136)) (= $generated@@142 $generated@@158)) (=> (and (and (= $generated@@141 $generated@@152) (= $generated@@143 $generated@@146)) (and (= $generated@@140 $generated@@147) (= (ControlFlow 0 13) 4))) $generated@@169)))))))
(let (($generated@@183  (and (=> (= (ControlFlow 0 11) (- 0 12)) (and (<= 0 $generated@@135) (< $generated@@135 1))) (=> (and (<= 0 $generated@@135) (< $generated@@135 1)) (=> (and (= $generated@@159 0) (= $generated@@142 $generated@@145)) (=> (and (and (= $generated@@141 $generated@@152) (= $generated@@143 $generated@@159)) (and (= $generated@@140 $generated@@147) (= (ControlFlow 0 11) 4))) $generated@@169))))))
(let (($generated@@184  (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 $generated@@135) (< $generated@@135 128))) (=> (and (<= 0 $generated@@135) (< $generated@@135 128)) (=> (and (= $generated@@160 ((_ int2bv 7) $generated@@135)) (= $generated@@142 $generated@@160)) (=> (and (and (= $generated@@141 $generated@@152) (= $generated@@143 $generated@@146)) (and (= $generated@@140 $generated@@147) (= (ControlFlow 0 9) 4))) $generated@@169))))))
(let (($generated@@185  (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 $generated@@135) (< $generated@@135 4294967296))) (=> (and (<= 0 $generated@@135) (< $generated@@135 4294967296)) (=> (and (= $generated@@161 ((_ int2bv 32) $generated@@135)) (= $generated@@142 $generated@@145)) (=> (and (and (= $generated@@141 $generated@@161) (= $generated@@143 $generated@@146)) (and (= $generated@@140 $generated@@147) (= (ControlFlow 0 7) 4))) $generated@@169))))))
(let (($generated@@186  (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@135) (< $generated@@135 147573952589676412928))) (=> (and (<= 0 $generated@@135) (< $generated@@135 147573952589676412928)) (=> (and (= $generated@@162 ((_ int2bv 67) $generated@@135)) (= $generated@@142 $generated@@145)) (=> (and (and (= $generated@@141 $generated@@152) (= $generated@@143 $generated@@146)) (and (= $generated@@140 $generated@@162) (= (ControlFlow 0 5) 4))) $generated@@169))))))
(let (($generated@@187  (=> (and (and (and (and (and (and (and (and (and (not ($generated@@12 ($generated@@4 $generated@@13 ($generated@@14 true)))) (not ($generated@@12 ($generated@@4 $generated@@13 ($generated@@14 true))))) (not ($generated@@12 ($generated@@4 $generated@@13 ($generated@@14 true))))) (not ($generated@@12 ($generated@@4 $generated@@13 ($generated@@14 true))))) (<= 128 $generated@@136)) (or (not (= $generated@@136 ($generated@@1 0))) (not true))) (<= 1 $generated@@136)) (not (and (<= ($generated@@1 0) $generated@@138) (< $generated@@138 4294967296)))) (or (not (= $generated@@139 ($generated@@65 ($generated@@46 $generated@@139)))) (not true))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@188  (=> (and (= $generated@@163 ($generated@@73 $generated@@164 $generated@@165 $generated@@166 false)) (= $generated@@135 ($generated@@1 150))) (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 37) 5) $generated@@186) (=> (= (ControlFlow 0 37) 7) $generated@@185)) (=> (= (ControlFlow 0 37) 9) $generated@@184)) (=> (= (ControlFlow 0 37) 11) $generated@@183)) (=> (= (ControlFlow 0 37) 13) $generated@@182)) (=> (= (ControlFlow 0 37) 15) $generated@@181)) (=> (= (ControlFlow 0 37) 17) $generated@@180)) (=> (= (ControlFlow 0 37) 35) $generated@@173)) (=> (= (ControlFlow 0 37) 28) $generated@@179)) (=> (= (ControlFlow 0 37) 2) $generated@@187)))))
(let (($generated@@189  (=> (and (and ($generated@@167 $generated@@165) ($generated@@168 $generated@@165)) (and (<= ($generated@@1 0) $generated@@136) (= ($generated@@11 $generated@@138 ($generated@@1 2)) ($generated@@1 0)))) (=> (and (and (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@139) (< $generated@@139 300.0)) (= 0 $generated@@146)) (and (= 2 $generated) (= (ControlFlow 0 38) 37))) $generated@@188))))
$generated@@189))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 9) (- 10))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 11) (- 12))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
