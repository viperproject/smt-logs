(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@T T@T) T@T)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@117 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@24) 3))
(assert (forall (($generated@@28 T@U) ) (! (= ($generated@@23 $generated@@24 $generated@@28 $generated@@25)  (or (= $generated@@28 $generated@@26) (= ($generated@@27 $generated@@28) $generated@@25)))
 :pattern ( ($generated@@23 $generated@@24 $generated@@28 $generated@@25))
)))
(assert (forall (($generated@@30 T@U) ) (! (= ($generated@@23 $generated@@24 $generated@@30 $generated@@29)  (or (= $generated@@30 $generated@@26) (= ($generated@@27 $generated@@30) $generated@@29)))
 :pattern ( ($generated@@23 $generated@@24 $generated@@30 $generated@@29))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@31 $generated@@24 $generated@@33 $generated@@32 $generated@@34) ($generated@@31 $generated@@24 $generated@@33 $generated@@25 $generated@@34))
 :pattern ( ($generated@@31 $generated@@24 $generated@@33 $generated@@32 $generated@@34))
 :pattern ( ($generated@@31 $generated@@24 $generated@@33 $generated@@25 $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@31 $generated@@24 $generated@@36 $generated@@35 $generated@@37) ($generated@@31 $generated@@24 $generated@@36 $generated@@29 $generated@@37))
 :pattern ( ($generated@@31 $generated@@24 $generated@@36 $generated@@35 $generated@@37))
 :pattern ( ($generated@@31 $generated@@24 $generated@@36 $generated@@29 $generated@@37))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@39 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@39 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@39 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@7 $generated@@40) 4)) (= ($generated@@7 $generated@@41) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@7 ($generated@@42 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@42 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@42 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@42 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@42 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@31 $generated@@24 $generated@@63 $generated@@25 $generated@@64)  (or (= $generated@@63 $generated@@26) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@64 $generated@@63) $generated@@0)))))
 :pattern ( ($generated@@31 $generated@@24 $generated@@63 $generated@@25 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@31 $generated@@24 $generated@@65 $generated@@29 $generated@@66)  (or (= $generated@@65 $generated@@26) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@66 $generated@@65) $generated@@0)))))
 :pattern ( ($generated@@31 $generated@@24 $generated@@65 $generated@@29 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@67 $generated@@68 $generated@@69) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@68 $generated@@70) $generated@@0))) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@69 $generated@@70) $generated@@0))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@69 $generated@@70) $generated@@0))
)))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 ($generated@@38 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@38 $generated@@73 $generated@@72))
)))
(assert (= ($generated@@7 $generated@@74) 7))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@23 $generated@@74 $generated@@78 ($generated@@75 $generated@@79)) (forall (($generated@@80 T@U) ) (!  (=> ($generated@@76 $generated@@78 $generated@@80) ($generated@@77 $generated@@80 $generated@@79))
 :pattern ( ($generated@@76 $generated@@78 $generated@@80))
)))
 :pattern ( ($generated@@23 $generated@@74 $generated@@78 ($generated@@75 $generated@@79)))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@81 ($generated@@71 $generated@@85 $generated@@82) $generated@@83 $generated@@84) ($generated@@31 $generated@@85 $generated@@82 $generated@@83 $generated@@84))
 :pattern ( ($generated@@81 ($generated@@71 $generated@@85 $generated@@82) $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@67 $generated@@86 $generated@@87) (=> ($generated@@81 $generated@@88 $generated@@89 $generated@@86) ($generated@@81 $generated@@88 $generated@@89 $generated@@87)))
 :pattern ( ($generated@@67 $generated@@86 $generated@@87) ($generated@@81 $generated@@88 $generated@@89 $generated@@86))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (!  (=> ($generated@@67 $generated@@90 $generated@@91) (=> ($generated@@31 $generated@@94 $generated@@92 $generated@@93 $generated@@90) ($generated@@31 $generated@@94 $generated@@92 $generated@@93 $generated@@91)))
 :pattern ( ($generated@@67 $generated@@90 $generated@@91) ($generated@@31 $generated@@94 $generated@@92 $generated@@93 $generated@@90))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@77 $generated@@95 $generated@@32) (and (= ($generated@@71 $generated@@24 ($generated@@38 $generated@@24 $generated@@95)) $generated@@95) ($generated@@23 $generated@@24 ($generated@@38 $generated@@24 $generated@@95) $generated@@32)))
 :pattern ( ($generated@@77 $generated@@95 $generated@@32))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@77 $generated@@96 $generated@@35) (and (= ($generated@@71 $generated@@24 ($generated@@38 $generated@@24 $generated@@96)) $generated@@96) ($generated@@23 $generated@@24 ($generated@@38 $generated@@24 $generated@@96) $generated@@35)))
 :pattern ( ($generated@@77 $generated@@96 $generated@@35))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@77 $generated@@97 $generated@@25) (and (= ($generated@@71 $generated@@24 ($generated@@38 $generated@@24 $generated@@97)) $generated@@97) ($generated@@23 $generated@@24 ($generated@@38 $generated@@24 $generated@@97) $generated@@25)))
 :pattern ( ($generated@@77 $generated@@97 $generated@@25))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@77 $generated@@98 $generated@@29) (and (= ($generated@@71 $generated@@24 ($generated@@38 $generated@@24 $generated@@98)) $generated@@98) ($generated@@23 $generated@@24 ($generated@@38 $generated@@24 $generated@@98) $generated@@29)))
 :pattern ( ($generated@@77 $generated@@98 $generated@@29))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@23 $generated@@24 $generated@@99 $generated@@32)  (and ($generated@@23 $generated@@24 $generated@@99 $generated@@25) (or (not (= $generated@@99 $generated@@26)) (not true))))
 :pattern ( ($generated@@23 $generated@@24 $generated@@99 $generated@@32))
 :pattern ( ($generated@@23 $generated@@24 $generated@@99 $generated@@25))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@23 $generated@@24 $generated@@100 $generated@@35)  (and ($generated@@23 $generated@@24 $generated@@100 $generated@@29) (or (not (= $generated@@100 $generated@@26)) (not true))))
 :pattern ( ($generated@@23 $generated@@24 $generated@@100 $generated@@35))
 :pattern ( ($generated@@23 $generated@@24 $generated@@100 $generated@@29))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (or (not (= $generated@@101 $generated@@103)) (not true)) (=> (and ($generated@@67 $generated@@101 $generated@@102) ($generated@@67 $generated@@102 $generated@@103)) ($generated@@67 $generated@@101 $generated@@103)))
 :pattern ( ($generated@@67 $generated@@101 $generated@@102) ($generated@@67 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@77 ($generated@@71 $generated@@106 $generated@@104) $generated@@105) ($generated@@23 $generated@@106 $generated@@104 $generated@@105))
 :pattern ( ($generated@@77 ($generated@@71 $generated@@106 $generated@@104) $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@31 $generated@@74 $generated@@107 ($generated@@75 $generated@@108) $generated@@109) (forall (($generated@@110 T@U) ) (!  (=> ($generated@@76 $generated@@107 $generated@@110) ($generated@@81 $generated@@110 $generated@@108 $generated@@109))
 :pattern ( ($generated@@76 $generated@@107 $generated@@110))
)))
 :pattern ( ($generated@@31 $generated@@74 $generated@@107 ($generated@@75 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@75 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@75 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 ($generated@@75 $generated@@114)) $generated)
 :pattern ( ($generated@@75 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@38 $generated@@116 ($generated@@71 $generated@@116 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@71 $generated@@116 $generated@@115))
)))
(assert  (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@117 $generated@@120 $generated@@121 $generated@@122 ($generated@@119 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@125 $generated@@126) $generated@@123)
 :weight 0
)) (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@117 $generated@@127 $generated@@128 $generated@@129 ($generated@@119 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@117 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@117 $generated@@136 $generated@@137 $generated@@138 ($generated@@119 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@117 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Bool) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@12 ($generated@@117 $generated@@24 $generated@@40 $generated@@8 ($generated@@118 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))  (=> (and (or (not (= $generated@@149 $generated@@145)) (not true)) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@146 $generated@@149) $generated@@147)))) $generated@@148))
 :pattern ( ($generated@@117 $generated@@24 $generated@@40 $generated@@8 ($generated@@118 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@77 $generated@@151 ($generated@@75 $generated@@152)) (and (= ($generated@@71 $generated@@74 ($generated@@38 $generated@@74 $generated@@151)) $generated@@151) ($generated@@23 $generated@@74 ($generated@@38 $generated@@74 $generated@@151) ($generated@@75 $generated@@152))))
 :pattern ( ($generated@@77 $generated@@151 ($generated@@75 $generated@@152)))
)))
(assert (= ($generated@@113 $generated@@32) $generated@@1))
(assert (= ($generated@@153 $generated@@32) $generated@@5))
(assert (= ($generated@@113 $generated@@35) $generated@@2))
(assert (= ($generated@@153 $generated@@35) $generated@@6))
(assert (= ($generated@@113 $generated@@25) $generated@@3))
(assert (= ($generated@@153 $generated@@25) $generated@@5))
(assert (= ($generated@@113 $generated@@29) $generated@@4))
(assert (= ($generated@@153 $generated@@29) $generated@@6))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () Bool)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@173  (=> (= $generated@@154 ($generated@@118 $generated@@26 $generated@@155 $generated@@0 false)) (=> (and (and (or (not (= $generated@@156 $generated@@26)) (not true)) (and ($generated@@23 $generated@@24 $generated@@156 $generated@@32) ($generated@@31 $generated@@24 $generated@@156 $generated@@32 $generated@@155))) (and ($generated@@157 $generated@@158) ($generated@@159 $generated@@158))) (=> (and (and (and (and (and (or (not (= $generated@@160 $generated@@26)) (not true)) (and ($generated@@23 $generated@@24 $generated@@160 $generated@@32) ($generated@@31 $generated@@24 $generated@@160 $generated@@32 $generated@@158))) (not ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@155 $generated@@160) $generated@@0))))) (and (forall (($generated@@174 T@U) ) (!  (=> (and (or (not (= $generated@@174 $generated@@26)) (not true)) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@155 $generated@@174) $generated@@0)))) (= ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@158 $generated@@174) ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@155 $generated@@174)))
 :pattern ( ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@158 $generated@@174))
)) ($generated@@67 $generated@@155 $generated@@158))) (and (and (or (not (= $generated@@161 $generated@@26)) (not true)) (and ($generated@@23 $generated@@24 $generated@@161 $generated@@32) ($generated@@31 $generated@@24 $generated@@161 $generated@@32 $generated@@155))) (and ($generated@@157 $generated@@162) ($generated@@159 $generated@@162)))) (and (and (and (or (not (= $generated@@163 $generated@@26)) (not true)) (and ($generated@@23 $generated@@24 $generated@@163 $generated@@32) ($generated@@31 $generated@@24 $generated@@163 $generated@@32 $generated@@162))) (not ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@158 $generated@@163) $generated@@0))))) (and (forall (($generated@@175 T@U) ) (!  (=> (and (or (not (= $generated@@175 $generated@@26)) (not true)) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@158 $generated@@175) $generated@@0)))) (= ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@162 $generated@@175) ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@158 $generated@@175)))
 :pattern ( ($generated@@39 $generated@@24 ($generated@@42 $generated@@40 $generated@@41) $generated@@162 $generated@@175))
)) ($generated@@67 $generated@@158 $generated@@162)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= $generated@@160 $generated@@163)) (not true))))))))))
(let (($generated@@176  (=> (and ($generated@@157 $generated@@155) ($generated@@159 $generated@@155)) (=> (and (and (and (and ($generated@@23 $generated@@24 $generated@@164 $generated@@32) ($generated@@31 $generated@@24 $generated@@164 $generated@@32 $generated@@155)) (and ($generated@@23 $generated@@74 $generated@@165 ($generated@@75 $generated@@32)) ($generated@@31 $generated@@74 $generated@@165 ($generated@@75 $generated@@32) $generated@@155))) (and (and (=> $generated@@166 (and ($generated@@23 $generated@@24 $generated@@167 $generated@@32) ($generated@@31 $generated@@24 $generated@@167 $generated@@32 $generated@@155))) true) (and (=> $generated@@168 (and ($generated@@23 $generated@@24 $generated@@169 $generated@@32) ($generated@@31 $generated@@24 $generated@@169 $generated@@32 $generated@@155))) true))) (and (and (and (=> $generated@@170 (and ($generated@@23 $generated@@24 $generated@@171 $generated@@35) ($generated@@31 $generated@@24 $generated@@171 $generated@@35 $generated@@155))) true) (= 0 $generated@@172)) (and ($generated@@76 $generated@@165 ($generated@@71 $generated@@24 $generated@@164)) (= (ControlFlow 0 5) 2)))) $generated@@173))))
$generated@@176)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
