(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@T T@T) T@T)
(declare-fun $generated@@61 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@103 (T@T T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U) Bool)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Int)
(declare-fun $generated@@160 (T@U) Int)
(declare-fun $generated@@168 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated@@30) $generated@@6))
(assert (= ($generated@@13 $generated@@32) 3))
(assert (forall (($generated@@36 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@36 $generated@@33)  (or (= $generated@@36 $generated@@34) (= ($generated@@35 $generated@@36) $generated@@33)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 $generated@@33))
)))
(assert (forall (($generated@@38 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@38 $generated@@37)  (or (= $generated@@38 $generated@@34) (= ($generated@@35 $generated@@38) $generated@@37)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@38 $generated@@37))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@39 $generated@@32 $generated@@42 $generated@@40 $generated@@43) ($generated@@39 $generated@@32 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@39 $generated@@32 $generated@@42 $generated@@40 $generated@@43))
 :pattern ( ($generated@@39 $generated@@32 $generated@@42 $generated@@41 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@39 $generated@@32 $generated@@45 $generated@@44 $generated@@46) ($generated@@39 $generated@@32 $generated@@45 $generated@@33 $generated@@46))
 :pattern ( ($generated@@39 $generated@@32 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@39 $generated@@32 $generated@@45 $generated@@33 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@39 $generated@@32 $generated@@48 $generated@@47 $generated@@49) ($generated@@39 $generated@@32 $generated@@48 $generated@@37 $generated@@49))
 :pattern ( ($generated@@39 $generated@@32 $generated@@48 $generated@@47 $generated@@49))
 :pattern ( ($generated@@39 $generated@@32 $generated@@48 $generated@@37 $generated@@49))
)))
(assert (= ($generated@@13 $generated@@50) 4))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> ($generated@@52 $generated@@54) ($generated@@39 $generated@@50 $generated@@30 ($generated@@51 $generated@@53) $generated@@54))
 :pattern ( ($generated@@39 $generated@@50 $generated@@30 ($generated@@51 $generated@@53) $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ) (! ($generated@@31 $generated@@50 $generated@@30 ($generated@@51 $generated@@55))
 :pattern ( ($generated@@31 $generated@@50 $generated@@30 ($generated@@51 $generated@@55)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@57 $generated@@64 $generated@@65 ($generated@@61 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@68) $generated@@66)
 :weight 0
)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (or (= $generated@@73 $generated@@74) (= ($generated@@57 $generated@@69 $generated@@70 ($generated@@61 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@74) ($generated@@57 $generated@@69 $generated@@70 $generated@@72 $generated@@74)))
 :weight 0
))) (= ($generated@@13 $generated@@58) 5)) (= ($generated@@13 $generated@@59) 6)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@13 ($generated@@60 $generated@@75 $generated@@76)) 7))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@62 ($generated@@60 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@60 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@63 ($generated@@60 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@60 $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@39 $generated@@32 $generated@@81 $generated@@41 $generated@@82)  (or (= $generated@@81 $generated@@34) ($generated@@18 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@82 $generated@@81) $generated)))))
 :pattern ( ($generated@@39 $generated@@32 $generated@@81 $generated@@41 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@39 $generated@@32 $generated@@83 $generated@@33 $generated@@84)  (or (= $generated@@83 $generated@@34) ($generated@@18 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@84 $generated@@83) $generated)))))
 :pattern ( ($generated@@39 $generated@@32 $generated@@83 $generated@@33 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@39 $generated@@32 $generated@@85 $generated@@37 $generated@@86)  (or (= $generated@@85 $generated@@34) ($generated@@18 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@86 $generated@@85) $generated)))))
 :pattern ( ($generated@@39 $generated@@32 $generated@@85 $generated@@37 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@87 $generated@@88 $generated@@89) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@18 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@88 $generated@@90) $generated))) ($generated@@18 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@89 $generated@@90) $generated))))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@89 $generated@@90) $generated))
)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 $generated@@92) $generated@@92)
 :pattern ( ($generated@@91 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@31 $generated@@50 ($generated@@94 $generated@@97 $generated@@98) ($generated@@51 $generated@@96))  (and ($generated@@95 $generated@@97 $generated@@96) ($generated@@31 $generated@@50 $generated@@98 ($generated@@51 $generated@@96))))
 :pattern ( ($generated@@31 $generated@@50 ($generated@@94 $generated@@97 $generated@@98) ($generated@@51 $generated@@96)))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@99 $generated@@100) (= ($generated@@29 $generated@@100) $generated@@6))
 :pattern ( ($generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@101 $generated@@102) (= ($generated@@29 $generated@@102) $generated@@7))
 :pattern ( ($generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@103 $generated@@105 ($generated@@56 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@56 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@101 $generated@@106) (exists (($generated@@107 T@U) ($generated@@108 T@U) ) (= $generated@@106 ($generated@@94 $generated@@107 $generated@@108))))
 :pattern ( ($generated@@101 $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@99 $generated@@109) (= $generated@@109 $generated@@30))
 :pattern ( ($generated@@99 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@110 ($generated@@103 $generated@@114 $generated@@111) $generated@@112 $generated@@113) ($generated@@39 $generated@@114 $generated@@111 $generated@@112 $generated@@113))
 :pattern ( ($generated@@110 ($generated@@103 $generated@@114 $generated@@111) $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@87 $generated@@115 $generated@@116) (=> ($generated@@110 $generated@@117 $generated@@118 $generated@@115) ($generated@@110 $generated@@117 $generated@@118 $generated@@116)))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116) ($generated@@110 $generated@@117 $generated@@118 $generated@@115))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (!  (=> ($generated@@87 $generated@@119 $generated@@120) (=> ($generated@@39 $generated@@123 $generated@@121 $generated@@122 $generated@@119) ($generated@@39 $generated@@123 $generated@@121 $generated@@122 $generated@@120)))
 :pattern ( ($generated@@87 $generated@@119 $generated@@120) ($generated@@39 $generated@@123 $generated@@121 $generated@@122 $generated@@119))
)))
(assert (forall (($generated@@126 T@U) ) (!  (and (= ($generated@@124 ($generated@@51 $generated@@126)) $generated@@3) (= ($generated@@125 ($generated@@51 $generated@@126)) $generated@@11))
 :pattern ( ($generated@@51 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@95 $generated@@127 $generated@@41) (and (= ($generated@@103 $generated@@32 ($generated@@56 $generated@@32 $generated@@127)) $generated@@127) ($generated@@31 $generated@@32 ($generated@@56 $generated@@32 $generated@@127) $generated@@41)))
 :pattern ( ($generated@@95 $generated@@127 $generated@@41))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@95 $generated@@128 $generated@@40) (and (= ($generated@@103 $generated@@32 ($generated@@56 $generated@@32 $generated@@128)) $generated@@128) ($generated@@31 $generated@@32 ($generated@@56 $generated@@32 $generated@@128) $generated@@40)))
 :pattern ( ($generated@@95 $generated@@128 $generated@@40))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@95 $generated@@129 $generated@@44) (and (= ($generated@@103 $generated@@32 ($generated@@56 $generated@@32 $generated@@129)) $generated@@129) ($generated@@31 $generated@@32 ($generated@@56 $generated@@32 $generated@@129) $generated@@44)))
 :pattern ( ($generated@@95 $generated@@129 $generated@@44))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@95 $generated@@130 $generated@@47) (and (= ($generated@@103 $generated@@32 ($generated@@56 $generated@@32 $generated@@130)) $generated@@130) ($generated@@31 $generated@@32 ($generated@@56 $generated@@32 $generated@@130) $generated@@47)))
 :pattern ( ($generated@@95 $generated@@130 $generated@@47))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@95 $generated@@131 $generated@@33) (and (= ($generated@@103 $generated@@32 ($generated@@56 $generated@@32 $generated@@131)) $generated@@131) ($generated@@31 $generated@@32 ($generated@@56 $generated@@32 $generated@@131) $generated@@33)))
 :pattern ( ($generated@@95 $generated@@131 $generated@@33))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@95 $generated@@132 $generated@@37) (and (= ($generated@@103 $generated@@32 ($generated@@56 $generated@@32 $generated@@132)) $generated@@132) ($generated@@31 $generated@@32 ($generated@@56 $generated@@32 $generated@@132) $generated@@37)))
 :pattern ( ($generated@@95 $generated@@132 $generated@@37))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@133 $generated@@40)  (and ($generated@@31 $generated@@32 $generated@@133 $generated@@41) (or (not (= $generated@@133 $generated@@34)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@133 $generated@@40))
 :pattern ( ($generated@@31 $generated@@32 $generated@@133 $generated@@41))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@134 $generated@@44)  (and ($generated@@31 $generated@@32 $generated@@134 $generated@@33) (or (not (= $generated@@134 $generated@@34)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@134 $generated@@44))
 :pattern ( ($generated@@31 $generated@@32 $generated@@134 $generated@@33))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@135 $generated@@47)  (and ($generated@@31 $generated@@32 $generated@@135 $generated@@37) (or (not (= $generated@@135 $generated@@34)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@135 $generated@@47))
 :pattern ( ($generated@@31 $generated@@32 $generated@@135 $generated@@37))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@136 $generated@@137) (or ($generated@@99 $generated@@137) ($generated@@101 $generated@@137)))
 :pattern ( ($generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> ($generated@@31 $generated@@50 $generated@@139 ($generated@@51 $generated@@138)) (or ($generated@@99 $generated@@139) ($generated@@101 $generated@@139)))
 :pattern ( ($generated@@101 $generated@@139) ($generated@@31 $generated@@50 $generated@@139 ($generated@@51 $generated@@138)))
 :pattern ( ($generated@@99 $generated@@139) ($generated@@31 $generated@@50 $generated@@139 ($generated@@51 $generated@@138)))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (or (not (= $generated@@140 $generated@@142)) (not true)) (=> (and ($generated@@87 $generated@@140 $generated@@141) ($generated@@87 $generated@@141 $generated@@142)) ($generated@@87 $generated@@140 $generated@@142)))
 :pattern ( ($generated@@87 $generated@@140 $generated@@141) ($generated@@87 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@95 ($generated@@103 $generated@@145 $generated@@143) $generated@@144) ($generated@@31 $generated@@145 $generated@@143 $generated@@144))
 :pattern ( ($generated@@95 ($generated@@103 $generated@@145 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@29 ($generated@@94 $generated@@146 $generated@@147)) $generated@@7)
 :pattern ( ($generated@@94 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@148 ($generated@@94 $generated@@149 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@94 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@151 ($generated@@94 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@94 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! ($generated@@31 $generated@@32 $generated@@154 $generated@@41)
 :pattern ( ($generated@@31 $generated@@32 $generated@@154 $generated@@41))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@155 ($generated@@51 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@51 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@T) ) (! (= ($generated@@56 $generated@@158 ($generated@@103 $generated@@158 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@103 $generated@@158 $generated@@157))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (< ($generated@@159 $generated@@161) ($generated@@160 ($generated@@94 $generated@@161 $generated@@162)))
 :pattern ( ($generated@@94 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (< ($generated@@160 $generated@@164) ($generated@@160 ($generated@@94 $generated@@163 $generated@@164)))
 :pattern ( ($generated@@94 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@52 $generated@@167) (and ($generated@@101 $generated@@165) ($generated@@39 $generated@@50 $generated@@165 ($generated@@51 $generated@@166) $generated@@167))) ($generated@@110 ($generated@@148 $generated@@165) $generated@@166 $generated@@167))
 :pattern ( ($generated@@110 ($generated@@148 $generated@@165) $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@168 $generated@@171 $generated@@172 $generated@@173 ($generated@@170 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@176 $generated@@177) $generated@@174)
 :weight 0
)) (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@183 $generated@@185) (= ($generated@@168 $generated@@178 $generated@@179 $generated@@180 ($generated@@170 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@168 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@168 $generated@@187 $generated@@188 $generated@@189 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@168 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 Bool) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@18 ($generated@@168 $generated@@32 $generated@@58 $generated@@14 ($generated@@169 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))  (=> (and (or (not (= $generated@@200 $generated@@196)) (not true)) ($generated@@18 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@197 $generated@@200) $generated@@198)))) $generated@@199))
 :pattern ( ($generated@@168 $generated@@32 $generated@@58 $generated@@14 ($generated@@169 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ) (! (= ($generated@@159 ($generated@@103 $generated@@50 $generated@@202)) ($generated@@160 $generated@@202))
 :pattern ( ($generated@@159 ($generated@@103 $generated@@50 $generated@@202)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> ($generated@@95 $generated@@204 ($generated@@51 $generated@@203)) (and (= ($generated@@103 $generated@@50 ($generated@@56 $generated@@50 $generated@@204)) $generated@@204) ($generated@@31 $generated@@50 ($generated@@56 $generated@@50 $generated@@204) ($generated@@51 $generated@@203))))
 :pattern ( ($generated@@95 $generated@@204 ($generated@@51 $generated@@203)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@52 ($generated@@61 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@205 $generated@@206 ($generated@@61 $generated@@58 $generated@@59 ($generated@@57 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@205 $generated@@206) $generated@@207 $generated@@208))) ($generated@@87 $generated@@205 ($generated@@61 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@205 $generated@@206 ($generated@@61 $generated@@58 $generated@@59 ($generated@@57 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@205 $generated@@206) $generated@@207 $generated@@208))))
 :pattern ( ($generated@@61 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@205 $generated@@206 ($generated@@61 $generated@@58 $generated@@59 ($generated@@57 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@205 $generated@@206) $generated@@207 $generated@@208)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and ($generated@@52 $generated@@211) (and ($generated@@101 $generated@@209) ($generated@@39 $generated@@50 $generated@@209 ($generated@@51 $generated@@210) $generated@@211))) ($generated@@39 $generated@@50 ($generated@@151 $generated@@209) ($generated@@51 $generated@@210) $generated@@211))
 :pattern ( ($generated@@39 $generated@@50 ($generated@@151 $generated@@209) ($generated@@51 $generated@@210) $generated@@211))
)))
(assert (= ($generated@@124 $generated@@41) $generated@@0))
(assert (= ($generated@@125 $generated@@41) $generated@@9))
(assert (= ($generated@@124 $generated@@40) $generated@@1))
(assert (= ($generated@@125 $generated@@40) $generated@@9))
(assert (= ($generated@@124 $generated@@44) $generated@@2))
(assert (= ($generated@@125 $generated@@44) $generated@@10))
(assert (= ($generated@@124 $generated@@47) $generated@@4))
(assert (= ($generated@@125 $generated@@47) $generated@@12))
(assert (= ($generated@@124 $generated@@33) $generated@@5))
(assert (= ($generated@@125 $generated@@33) $generated@@10))
(assert (= ($generated@@124 $generated@@37) $generated@@8))
(assert (= ($generated@@125 $generated@@37) $generated@@12))
(assert (= $generated@@30 ($generated@@91 $generated@@50 $generated@@30)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (= ($generated@@94 ($generated@@91 $generated@@59 $generated@@212) ($generated@@91 $generated@@50 $generated@@213)) ($generated@@91 $generated@@50 ($generated@@94 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@94 ($generated@@91 $generated@@59 $generated@@212) ($generated@@91 $generated@@50 $generated@@213)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@T) ) (! (= ($generated@@103 $generated@@215 ($generated@@91 $generated@@215 $generated@@214)) ($generated@@91 $generated@@59 ($generated@@103 $generated@@215 $generated@@214)))
 :pattern ( ($generated@@103 $generated@@215 ($generated@@91 $generated@@215 $generated@@214)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> ($generated@@52 $generated@@219) (= ($generated@@39 $generated@@50 ($generated@@94 $generated@@217 $generated@@218) ($generated@@51 $generated@@216) $generated@@219)  (and ($generated@@110 $generated@@217 $generated@@216 $generated@@219) ($generated@@39 $generated@@50 $generated@@218 ($generated@@51 $generated@@216) $generated@@219))))
 :pattern ( ($generated@@39 $generated@@50 ($generated@@94 $generated@@217 $generated@@218) ($generated@@51 $generated@@216) $generated@@219))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 () Bool)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () Bool)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () Bool)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 34) (let (($generated@@266 true))
(let (($generated@@267  (=> (= $generated@@220 ($generated@@94 ($generated@@103 $generated@@32 $generated@@221) $generated@@222)) (=> (and (and ($generated@@31 $generated@@32 $generated@@221 $generated@@47) ($generated@@39 $generated@@32 $generated@@221 $generated@@47 $generated@@223)) (and ($generated@@31 $generated@@50 $generated@@222 ($generated@@51 $generated@@47)) ($generated@@39 $generated@@50 $generated@@222 ($generated@@51 $generated@@47) $generated@@223))) (=> (and (and (and (and ($generated@@31 $generated@@50 $generated@@224 ($generated@@51 $generated@@47)) ($generated@@39 $generated@@50 $generated@@224 ($generated@@51 $generated@@47) $generated@@223)) (= $generated@@225 $generated@@222)) (and ($generated@@31 $generated@@50 $generated@@225 ($generated@@51 $generated@@47)) (= $generated@@224 $generated@@225))) (and (and (and ($generated@@31 $generated@@32 $generated@@226 $generated@@47) ($generated@@39 $generated@@32 $generated@@226 $generated@@47 $generated@@223)) (= $generated@@227 $generated@@221)) (and ($generated@@31 $generated@@32 $generated@@227 $generated@@47) (= $generated@@226 $generated@@227)))) (and (=> (= (ControlFlow 0 8) (- 0 10)) true) (and (=> (= (ControlFlow 0 8) (- 0 9)) true) (=> (= (ControlFlow 0 8) (- 0 7)) (or (not (= $generated@@228 $generated@@226)) (not true))))))))))
(let (($generated@@268  (=> (or (not (= $generated@@220 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 12) 8) $generated@@267) (=> (= (ControlFlow 0 12) 11) $generated@@266)))))
(let (($generated@@269 true))
(let (($generated@@270  (=> (= $generated@@229 ($generated@@94 ($generated@@103 $generated@@32 $generated@@230) $generated@@231)) (=> (and (and ($generated@@31 $generated@@32 $generated@@230 $generated@@47) ($generated@@39 $generated@@32 $generated@@230 $generated@@47 $generated@@223)) (and ($generated@@31 $generated@@50 $generated@@231 ($generated@@51 $generated@@47)) ($generated@@39 $generated@@50 $generated@@231 ($generated@@51 $generated@@47) $generated@@223))) (=> (and (and (and (and ($generated@@31 $generated@@50 $generated@@220 ($generated@@51 $generated@@47)) ($generated@@39 $generated@@50 $generated@@220 ($generated@@51 $generated@@47) $generated@@223)) (= $generated@@232 $generated@@231)) (and ($generated@@31 $generated@@50 $generated@@232 ($generated@@51 $generated@@47)) (= $generated@@220 $generated@@232))) (and (and (and ($generated@@31 $generated@@32 $generated@@233 $generated@@47) ($generated@@39 $generated@@32 $generated@@233 $generated@@47 $generated@@223)) (= $generated@@234 $generated@@230)) (and ($generated@@31 $generated@@32 $generated@@234 $generated@@47) (= $generated@@233 $generated@@234)))) (and (=> (= (ControlFlow 0 13) 6) $generated@@269) (=> (= (ControlFlow 0 13) 12) $generated@@268)))))))
(let (($generated@@271 true))
(let (($generated@@272  (=> (or (not (= $generated@@229 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 14) 13) $generated@@270) (=> (= (ControlFlow 0 14) 5) $generated@@271)))))
(let (($generated@@273 true))
(let (($generated@@274  (and (=> (= (ControlFlow 0 15) 4) $generated@@273) (=> (= (ControlFlow 0 15) 14) $generated@@272))))
(let (($generated@@275  (=> (= $generated@@235 ($generated@@94 ($generated@@103 $generated@@32 $generated@@236) $generated@@237)) (=> (and ($generated@@31 $generated@@32 $generated@@236 $generated@@44) ($generated@@31 $generated@@50 $generated@@237 ($generated@@51 $generated@@44))) (=> (and (and (and (and ($generated@@31 $generated@@50 $generated@@238 ($generated@@51 $generated@@44)) ($generated@@39 $generated@@50 $generated@@238 ($generated@@51 $generated@@44) $generated@@223)) (= $generated@@239 $generated@@237)) (and ($generated@@31 $generated@@50 $generated@@239 ($generated@@51 $generated@@44)) (= $generated@@238 $generated@@239))) (and (and (and ($generated@@31 $generated@@32 $generated@@240 $generated@@44) ($generated@@39 $generated@@32 $generated@@240 $generated@@44 $generated@@223)) (= $generated@@241 $generated@@236)) (and ($generated@@31 $generated@@32 $generated@@241 $generated@@44) (= $generated@@240 $generated@@241)))) (and (=> (= (ControlFlow 0 18) (- 0 22)) true) (and (=> (= (ControlFlow 0 18) (- 0 21)) (or (not (= $generated@@240 $generated@@242)) (not true))) (=> (or (not (= $generated@@240 $generated@@242)) (not true)) (and (=> (= (ControlFlow 0 18) (- 0 20)) true) (and (=> (= (ControlFlow 0 18) (- 0 19)) (or (not (= $generated@@240 $generated@@228)) (not true))) (=> (or (not (= $generated@@240 $generated@@228)) (not true)) (=> (= (ControlFlow 0 18) 15) $generated@@274))))))))))))
(let (($generated@@276  (=> (and (= $generated@@235 $generated@@30) (= (ControlFlow 0 17) 15)) $generated@@274)))
(let (($generated@@277  (=> (and (= $generated@@243 $generated@@30) (= (ControlFlow 0 16) 15)) $generated@@274)))
(let (($generated@@278 true))
(let (($generated@@279  (=> (or (not (= $generated@@235 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 23) 18) $generated@@275) (=> (= (ControlFlow 0 23) 3) $generated@@278)))))
(let (($generated@@280  (=> (= $generated@@243 ($generated@@94 ($generated@@103 $generated@@32 $generated@@244) $generated@@245)) (=> (and ($generated@@31 $generated@@32 $generated@@244 $generated@@44) ($generated@@31 $generated@@50 $generated@@245 ($generated@@51 $generated@@44))) (=> (and (and (and (and ($generated@@31 $generated@@50 $generated@@235 ($generated@@51 $generated@@44)) ($generated@@39 $generated@@50 $generated@@235 ($generated@@51 $generated@@44) $generated@@223)) (= $generated@@246 $generated@@245)) (and ($generated@@31 $generated@@50 $generated@@246 ($generated@@51 $generated@@44)) (= $generated@@235 $generated@@246))) (and (and (and ($generated@@31 $generated@@32 $generated@@247 $generated@@44) ($generated@@39 $generated@@32 $generated@@247 $generated@@44 $generated@@223)) (= $generated@@248 $generated@@244)) (and ($generated@@31 $generated@@32 $generated@@248 $generated@@44) (= $generated@@247 $generated@@248)))) (and (=> (= (ControlFlow 0 24) 17) $generated@@276) (=> (= (ControlFlow 0 24) 23) $generated@@279)))))))
(let (($generated@@281 true))
(let (($generated@@282  (=> (or (not (= $generated@@243 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 25) 24) $generated@@280) (=> (= (ControlFlow 0 25) 2) $generated@@281)))))
(let (($generated@@283  (and (=> (= (ControlFlow 0 26) 16) $generated@@277) (=> (= (ControlFlow 0 26) 25) $generated@@282))))
(let (($generated@@284  (=> (= $generated@@249 ($generated@@94 ($generated@@103 $generated@@32 $generated@@250) $generated@@251)) (=> (and (and ($generated@@31 $generated@@32 $generated@@250 $generated@@44) ($generated@@39 $generated@@32 $generated@@250 $generated@@44 $generated@@223)) (and ($generated@@31 $generated@@50 $generated@@251 ($generated@@51 $generated@@44)) ($generated@@39 $generated@@50 $generated@@251 ($generated@@51 $generated@@44) $generated@@223))) (=> (and (and (and (and ($generated@@31 $generated@@50 $generated@@252 ($generated@@51 $generated@@44)) ($generated@@39 $generated@@50 $generated@@252 ($generated@@51 $generated@@44) $generated@@223)) (= $generated@@253 $generated@@251)) (and ($generated@@31 $generated@@50 $generated@@253 ($generated@@51 $generated@@44)) (= $generated@@252 $generated@@253))) (and (and (and ($generated@@31 $generated@@32 $generated@@254 $generated@@44) ($generated@@39 $generated@@32 $generated@@254 $generated@@44 $generated@@223)) (= $generated@@255 $generated@@250)) (and ($generated@@31 $generated@@32 $generated@@255 $generated@@44) (= $generated@@254 $generated@@255)))) (and (=> (= (ControlFlow 0 28) (- 0 30)) true) (and (=> (= (ControlFlow 0 28) (- 0 29)) (or (not (= $generated@@254 $generated@@242)) (not true))) (=> (or (not (= $generated@@254 $generated@@242)) (not true)) (=> (and (= $generated@@228 $generated@@254) (= (ControlFlow 0 28) 26)) $generated@@283)))))))))
(let (($generated@@285  (=> (= $generated@@249 $generated@@30) (=> (and (= $generated@@228 $generated@@242) (= (ControlFlow 0 27) 26)) $generated@@283))))
(let (($generated@@286 true))
(let (($generated@@287  (=> (or (not (= $generated@@249 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 31) 28) $generated@@284) (=> (= (ControlFlow 0 31) 1) $generated@@286)))))
(let (($generated@@288  (=> (= $generated@@256 ($generated@@169 $generated@@34 $generated@@257 $generated false)) (=> (and (or (not (= $generated@@242 $generated@@34)) (not true)) ($generated@@31 $generated@@32 $generated@@242 $generated@@33)) (=> (and (and (not ($generated@@18 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@257 $generated@@242) $generated)))) (= $generated@@223 ($generated@@61 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@257 $generated@@242 ($generated@@61 $generated@@58 $generated@@59 ($generated@@57 $generated@@32 ($generated@@60 $generated@@58 $generated@@59) $generated@@257 $generated@@242) $generated ($generated@@103 $generated@@14 ($generated@@17 true)))))) (and ($generated@@52 $generated@@223) ($generated@@258 $generated@@223))) (and (=> (= (ControlFlow 0 32) (- 0 33)) true) (and (=> (= (ControlFlow 0 32) 27) $generated@@285) (=> (= (ControlFlow 0 32) 31) $generated@@287))))))))
(let (($generated@@289  (=> (and ($generated@@52 $generated@@257) ($generated@@258 $generated@@257)) (=> (and (and ($generated@@31 $generated@@50 $generated@@249 ($generated@@51 $generated@@44)) ($generated@@39 $generated@@50 $generated@@249 ($generated@@51 $generated@@44) $generated@@257)) ($generated@@136 $generated@@249)) (=> (and (and (and (and ($generated@@31 $generated@@50 $generated@@243 ($generated@@51 $generated@@44)) ($generated@@39 $generated@@50 $generated@@243 ($generated@@51 $generated@@44) $generated@@257)) ($generated@@136 $generated@@243)) (and (and ($generated@@31 $generated@@50 $generated@@229 ($generated@@51 $generated@@47)) ($generated@@39 $generated@@50 $generated@@229 ($generated@@51 $generated@@47) $generated@@257)) ($generated@@136 $generated@@229))) (and (and (and (=> $generated@@259 (and ($generated@@31 $generated@@32 $generated@@260 $generated@@44) ($generated@@39 $generated@@32 $generated@@260 $generated@@44 $generated@@257))) true) (and (=> $generated@@261 (and ($generated@@31 $generated@@32 $generated@@262 $generated@@44) ($generated@@39 $generated@@32 $generated@@262 $generated@@44 $generated@@257))) true)) (and (and (=> $generated@@263 (and ($generated@@31 $generated@@32 $generated@@264 $generated@@40) ($generated@@39 $generated@@32 $generated@@264 $generated@@40 $generated@@257))) true) (and (= 1 $generated@@265) (= (ControlFlow 0 34) 32))))) $generated@@288)))))
$generated@@289)))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 18) (- 19))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
