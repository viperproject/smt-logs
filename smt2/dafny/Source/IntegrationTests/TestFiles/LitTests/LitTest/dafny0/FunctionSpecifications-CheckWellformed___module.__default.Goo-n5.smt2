(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U) T@U)
(declare-fun $generated@@19 () Int)
(declare-fun $generated@@20 (T@U Int) Int)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (Int) Bool)
(declare-fun $generated@@23 (Int) Int)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@36 (Int Int) Int)
(declare-fun $generated@@43 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@47 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T T@T) T@T)
(declare-fun $generated@@50 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@107 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@110 (T@T T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (= ($generated@@18 $generated) $generated@@0))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@24 T@U) ($generated@@25 Int) ) (!  (=> (or ($generated@@22 $generated@@25) (and (< 0 $generated@@19) (<= ($generated@@23 0) $generated@@25))) (and (=> (<= 2 $generated@@25) (and ($generated@@22 (- $generated@@25 2)) ($generated@@22 (- $generated@@25 1)))) (= ($generated@@20 ($generated@@21 $generated@@24) $generated@@25) (ite (< $generated@@25 2) $generated@@25 (+ ($generated@@20 $generated@@24 (- $generated@@25 2)) ($generated@@20 $generated@@24 (- $generated@@25 1)))))))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@24) $generated@@25))
))))
(assert (forall (($generated@@26 Int) ) (! (= ($generated@@23 $generated@@26) $generated@@26)
 :pattern ( ($generated@@23 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@T) ) (! (= ($generated@@27 $generated@@29 $generated@@28) $generated@@28)
 :pattern ( ($generated@@27 $generated@@29 $generated@@28))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@T) ) (! (= ($generated@@31 $generated@@33 ($generated@@30 $generated@@33 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@30 $generated@@33 $generated@@32))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@34 T@U) ($generated@@35 Int) ) (!  (=> (or ($generated@@22 ($generated@@23 $generated@@35)) (and (< 0 $generated@@19) (<= ($generated@@23 0) ($generated@@23 $generated@@35)))) (and (=> (not ($generated@@7 ($generated@@27 $generated@@3 ($generated@@6 (< $generated@@35 2))))) (and ($generated@@22 ($generated@@23 (- $generated@@35 2))) ($generated@@22 ($generated@@23 (- $generated@@35 1))))) (= ($generated@@20 ($generated@@21 $generated@@34) ($generated@@23 $generated@@35)) (ite (< $generated@@35 2) $generated@@35 (+ ($generated@@20 ($generated@@21 $generated@@34) ($generated@@23 (- $generated@@35 2))) ($generated@@20 ($generated@@21 $generated@@34) ($generated@@23 (- $generated@@35 1))))))))
 :weight 3
 :pattern ( ($generated@@20 ($generated@@21 $generated@@34) ($generated@@23 $generated@@35)))
))))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@37 T@U) ($generated@@38 Int) ) (!  (=> (or ($generated@@22 $generated@@38) (and (< 0 $generated@@19) (<= ($generated@@23 0) $generated@@38))) (and (=> (<= ($generated@@23 1) $generated@@38) (= ($generated@@20 $generated@@37 (- $generated@@38 1)) ($generated@@20 $generated@@37 (- $generated@@38 1)))) (= ($generated@@20 $generated@@37 (- ($generated@@36 ($generated@@23 2) $generated@@38) $generated@@38)) ($generated@@20 $generated@@37 (- (- ($generated@@36 ($generated@@23 2) (+ $generated@@38 5)) 10) $generated@@38)))))
 :pattern ( ($generated@@20 $generated@@37 $generated@@38))
))))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@30 $generated@@40 ($generated@@31 $generated@@40 $generated@@39)) $generated@@39)
 :pattern ( ($generated@@31 $generated@@40 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 Int) ) (! (= ($generated@@20 ($generated@@21 $generated@@41) $generated@@42) ($generated@@20 $generated@@41 $generated@@42))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@41) $generated@@42))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@43 $generated@@54 $generated@@55 $generated@@56 ($generated@@50 $generated@@54 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@60 $generated@@57) $generated@@59 $generated@@60) $generated@@57)
 :weight 0
)) (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@66 $generated@@68) (= ($generated@@43 $generated@@61 $generated@@62 $generated@@63 ($generated@@50 $generated@@61 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@67 $generated@@64) $generated@@68 $generated@@69) ($generated@@43 $generated@@61 $generated@@62 $generated@@63 $generated@@65 $generated@@68 $generated@@69)))
 :weight 0
)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@76 $generated@@78) (= ($generated@@43 $generated@@70 $generated@@71 $generated@@72 ($generated@@50 $generated@@70 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@76 $generated@@73) $generated@@77 $generated@@78) ($generated@@43 $generated@@70 $generated@@71 $generated@@72 $generated@@74 $generated@@77 $generated@@78)))
 :weight 0
)))) (= ($generated@@2 $generated@@44) 3)) (= ($generated@@2 $generated@@45) 4)) (forall (($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@47 $generated@@79 $generated@@80 ($generated@@51 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@81) $generated@@83) $generated@@81)
 :weight 0
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (or (= $generated@@88 $generated@@89) (= ($generated@@47 $generated@@84 $generated@@85 ($generated@@51 $generated@@84 $generated@@85 $generated@@87 $generated@@88 $generated@@86) $generated@@89) ($generated@@47 $generated@@84 $generated@@85 $generated@@87 $generated@@89)))
 :weight 0
))) (= ($generated@@2 $generated@@48) 5)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@2 ($generated@@49 $generated@@90 $generated@@91)) 6))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@52 ($generated@@49 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@49 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@53 ($generated@@49 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@49 $generated@@94 $generated@@95))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 Bool) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@7 ($generated@@43 $generated@@44 $generated@@45 $generated@@3 ($generated@@46 $generated@@96 $generated@@97 $generated@@98 $generated@@99) $generated@@100 $generated@@101))  (=> (and (or (not (= $generated@@100 $generated@@96)) (not true)) ($generated@@7 ($generated@@30 $generated@@3 ($generated@@47 $generated@@45 $generated@@48 ($generated@@47 $generated@@44 ($generated@@49 $generated@@45 $generated@@48) $generated@@97 $generated@@100) $generated@@98)))) $generated@@99))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45 $generated@@3 ($generated@@46 $generated@@96 $generated@@97 $generated@@98 $generated@@99) $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 Int) ($generated@@103 Int) ) (! (= ($generated@@36 $generated@@102 $generated@@103) (* $generated@@102 $generated@@103))
 :pattern ( ($generated@@36 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 Int) ) (! (= ($generated@@31 $generated@@4 ($generated@@8 ($generated@@23 $generated@@104))) ($generated@@27 $generated@@48 ($generated@@31 $generated@@4 ($generated@@8 $generated@@104))))
 :pattern ( ($generated@@31 $generated@@4 ($generated@@8 ($generated@@23 $generated@@104))))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@31 $generated@@106 ($generated@@27 $generated@@106 $generated@@105)) ($generated@@27 $generated@@48 ($generated@@31 $generated@@106 $generated@@105)))
 :pattern ( ($generated@@31 $generated@@106 ($generated@@27 $generated@@106 $generated@@105)))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! ($generated@@107 $generated@@4 $generated@@109 $generated $generated@@108)
 :pattern ( ($generated@@107 $generated@@4 $generated@@109 $generated $generated@@108))
)))
(assert (forall (($generated@@111 T@U) ) (! ($generated@@110 $generated@@4 $generated@@111 $generated)
 :pattern ( ($generated@@110 $generated@@4 $generated@@111 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@112 () Int)
(declare-fun $generated@@113 () T@U)
(declare-fun $generated@@114 () Int)
(declare-fun $generated@@115 () T@U)
(declare-fun $generated@@116 () Int)
(declare-fun $generated@@117 () Int)
(declare-fun $generated@@118 () Int)
(declare-fun $generated@@119 () Int)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 () T@U)
(declare-fun $generated@@122 () T@U)
(declare-fun $generated@@123 (T@U) Bool)
(declare-fun $generated@@124 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@125  (and (=> (= (ControlFlow 0 17) (- 0 18)) (=> (<= ($generated@@23 1) $generated@@112) (= ($generated@@20 ($generated@@21 ($generated@@21 $generated@@113)) (- $generated@@112 1)) ($generated@@20 ($generated@@21 ($generated@@21 $generated@@113)) (- $generated@@112 1))))) (=> (=> (<= ($generated@@23 1) $generated@@112) (= ($generated@@20 ($generated@@21 ($generated@@21 $generated@@113)) (- $generated@@112 1)) ($generated@@20 ($generated@@21 ($generated@@21 $generated@@113)) (- $generated@@112 1)))) (=> (= (ControlFlow 0 17) (- 0 16)) (= ($generated@@20 ($generated@@21 ($generated@@21 $generated@@113)) (- ($generated@@36 ($generated@@23 2) $generated@@112) $generated@@112)) ($generated@@20 ($generated@@21 ($generated@@21 $generated@@113)) (- (- ($generated@@36 ($generated@@23 2) (+ $generated@@112 5)) 10) $generated@@112))))))))
(let (($generated@@126  (=> (<= 2 $generated@@112) (=> (and (= $generated@@114 (- $generated@@112 2)) ($generated@@107 $generated@@4 ($generated@@8 $generated@@114) $generated $generated@@115)) (and (=> (= (ControlFlow 0 20) (- 0 26)) (<= ($generated@@23 0) $generated@@114)) (=> (<= ($generated@@23 0) $generated@@114) (and (=> (= (ControlFlow 0 20) (- 0 25)) (or (<= 0 $generated@@112) (= $generated@@114 $generated@@112))) (=> (or (<= 0 $generated@@112) (= $generated@@114 $generated@@112)) (and (=> (= (ControlFlow 0 20) (- 0 24)) (< $generated@@114 $generated@@112)) (=> (< $generated@@114 $generated@@112) (=> ($generated@@22 (- $generated@@112 2)) (=> (and (= $generated@@116 (- $generated@@112 1)) ($generated@@107 $generated@@4 ($generated@@8 $generated@@116) $generated $generated@@115)) (and (=> (= (ControlFlow 0 20) (- 0 23)) (<= ($generated@@23 0) $generated@@116)) (=> (<= ($generated@@23 0) $generated@@116) (and (=> (= (ControlFlow 0 20) (- 0 22)) (or (<= 0 $generated@@112) (= $generated@@116 $generated@@112))) (=> (or (<= 0 $generated@@112) (= $generated@@116 $generated@@112)) (and (=> (= (ControlFlow 0 20) (- 0 21)) (< $generated@@116 $generated@@112)) (=> (< $generated@@116 $generated@@112) (=> (and ($generated@@22 (- $generated@@112 1)) (= ($generated@@20 ($generated@@21 $generated@@113) $generated@@112) (+ ($generated@@20 ($generated@@21 $generated@@113) (- $generated@@112 2)) ($generated@@20 ($generated@@21 $generated@@113) (- $generated@@112 1))))) (=> (and (and ($generated@@22 (- $generated@@112 2)) ($generated@@22 (- $generated@@112 1))) (and ($generated@@110 $generated@@4 ($generated@@8 ($generated@@20 ($generated@@21 $generated@@113) $generated@@112)) $generated) (= (ControlFlow 0 20) 17))) $generated@@125))))))))))))))))))))
(let (($generated@@127  (=> (and (and (< $generated@@112 2) (= ($generated@@20 ($generated@@21 $generated@@113) $generated@@112) $generated@@112)) (and ($generated@@110 $generated@@4 ($generated@@8 ($generated@@20 ($generated@@21 $generated@@113) $generated@@112)) $generated) (= (ControlFlow 0 19) 17))) $generated@@125)))
(let (($generated@@128  (and (=> (= (ControlFlow 0 27) (- 0 28)) (= (- ($generated@@36 ($generated@@23 2) $generated@@112) $generated@@112) (- (- ($generated@@36 ($generated@@23 2) (+ $generated@@112 5)) 10) $generated@@112))) (=> (= (- ($generated@@36 ($generated@@23 2) $generated@@112) $generated@@112) (- (- ($generated@@36 ($generated@@23 2) (+ $generated@@112 5)) 10) $generated@@112)) (and (=> (= (ControlFlow 0 27) 19) $generated@@127) (=> (= (ControlFlow 0 27) 20) $generated@@126))))))
(let (($generated@@129  (=> (and (= $generated@@117 (- ($generated@@36 ($generated@@23 2) $generated@@112) $generated@@112)) ($generated@@107 $generated@@4 ($generated@@8 $generated@@117) $generated $generated@@115)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (<= ($generated@@23 0) $generated@@117)) (=> (<= ($generated@@23 0) $generated@@117) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (<= 0 $generated@@112) (= $generated@@117 $generated@@112))) (=> (or (<= 0 $generated@@112) (= $generated@@117 $generated@@112)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (= (- ($generated@@36 ($generated@@23 2) $generated@@112) $generated@@112) $generated@@112) (< $generated@@117 $generated@@112))) (=> (or (= (- ($generated@@36 ($generated@@23 2) $generated@@112) $generated@@112) $generated@@112) (< $generated@@117 $generated@@112)) (=> (or (= (- ($generated@@36 ($generated@@23 2) $generated@@112) $generated@@112) $generated@@112) ($generated@@22 (- ($generated@@36 ($generated@@23 2) $generated@@112) $generated@@112))) (=> (and (= $generated@@118 (- (- ($generated@@36 ($generated@@23 2) (+ $generated@@112 5)) 10) $generated@@112)) ($generated@@107 $generated@@4 ($generated@@8 $generated@@118) $generated $generated@@115)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@23 0) $generated@@118)) (=> (<= ($generated@@23 0) $generated@@118) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@112) (= $generated@@118 $generated@@112))) (=> (or (<= 0 $generated@@112) (= $generated@@118 $generated@@112)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (= (- (- ($generated@@36 ($generated@@23 2) (+ $generated@@112 5)) 10) $generated@@112) $generated@@112) (< $generated@@118 $generated@@112))))))))))))))))))
(let (($generated@@130  (=> (and (=> (<= ($generated@@23 1) $generated@@112) (= ($generated@@20 ($generated@@21 $generated@@113) (- $generated@@112 1)) ($generated@@20 ($generated@@21 $generated@@113) (- $generated@@112 1)))) (= (ControlFlow 0 15) 2)) $generated@@129)))
(let (($generated@@131  (=> (<= ($generated@@23 1) $generated@@112) (=> (and (= $generated@@119 (- $generated@@112 1)) ($generated@@107 $generated@@4 ($generated@@8 $generated@@119) $generated $generated@@115)) (and (=> (= (ControlFlow 0 8) (- 0 14)) (<= ($generated@@23 0) $generated@@119)) (=> (<= ($generated@@23 0) $generated@@119) (and (=> (= (ControlFlow 0 8) (- 0 13)) (or (<= 0 $generated@@112) (= $generated@@119 $generated@@112))) (=> (or (<= 0 $generated@@112) (= $generated@@119 $generated@@112)) (and (=> (= (ControlFlow 0 8) (- 0 12)) (or (= (- $generated@@112 1) $generated@@112) (< $generated@@119 $generated@@112))) (=> (or (= (- $generated@@112 1) $generated@@112) (< $generated@@119 $generated@@112)) (=> (or (= (- $generated@@112 1) $generated@@112) ($generated@@22 (- $generated@@112 1))) (=> (and (= $generated@@120 (- $generated@@112 1)) ($generated@@107 $generated@@4 ($generated@@8 $generated@@120) $generated $generated@@115)) (and (=> (= (ControlFlow 0 8) (- 0 11)) (<= ($generated@@23 0) $generated@@120)) (=> (<= ($generated@@23 0) $generated@@120) (and (=> (= (ControlFlow 0 8) (- 0 10)) (or (<= 0 $generated@@112) (= $generated@@120 $generated@@112))) (=> (or (<= 0 $generated@@112) (= $generated@@120 $generated@@112)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (= (- $generated@@112 1) $generated@@112) (< $generated@@120 $generated@@112))) (=> (or (= (- $generated@@112 1) $generated@@112) (< $generated@@120 $generated@@112)) (=> (or (= (- $generated@@112 1) $generated@@112) ($generated@@22 (- $generated@@112 1))) (=> (and (= ($generated@@20 ($generated@@21 $generated@@113) (- $generated@@112 1)) ($generated@@20 ($generated@@21 $generated@@113) (- $generated@@112 1))) (= (ControlFlow 0 8) 2)) $generated@@129))))))))))))))))))))
(let (($generated@@132  (=> (and (= $generated@@121 ($generated@@46 $generated@@122 $generated@@115 $generated@@1 false)) (<= ($generated@@23 0) $generated@@112)) (and (and (=> (= (ControlFlow 0 29) 27) $generated@@128) (=> (= (ControlFlow 0 29) 8) $generated@@131)) (=> (= (ControlFlow 0 29) 15) $generated@@130)))))
(let (($generated@@133  (=> (and (and ($generated@@123 $generated@@115) ($generated@@124 $generated@@115)) (and (= 0 $generated@@19) (= (ControlFlow 0 30) 29))) $generated@@132)))
$generated@@133))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
