(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U Int) T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@50 (T@U Int) T@U)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@96 (Int) Int)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@U Int) T@U)
(declare-fun $generated@@107 (T@U) Bool)
(declare-fun $generated@@108 (T@U T@U T@U) Bool)
(declare-fun $generated@@113 (T@U T@U) Bool)
(declare-fun $generated@@117 (T@T T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 (T@U T@U T@U Bool) Bool)
(declare-fun $generated@@236 (T@U T@U T@U Bool) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@3) 0))
(assert (= ($generated@@27 $generated) $generated@@1))
(assert (= ($generated@@27 $generated@@0) $generated@@2))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and (or (not (= $generated@@34 $generated@@30)) (not true)) (= ($generated@@31 $generated@@34) ($generated@@29 $generated@@33))) ($generated@@32 $generated@@12 ($generated@@16 ($generated@@28 $generated@@34)) $generated@@0))
 :pattern ( ($generated@@28 $generated@@34) ($generated@@29 $generated@@33))
)))
(assert (= ($generated@@10 $generated@@36) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40) ($generated@@35 $generated@@36 $generated@@39 ($generated@@29 $generated@@38) $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@29 $generated@@38) $generated@@40))
)))
(assert (= ($generated@@41 $generated@@42) 0))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 Int) ) (!  (=> (and (<= 0 $generated@@47) (<= $generated@@47 ($generated@@41 $generated@@45))) (= ($generated@@43 ($generated@@44 $generated@@45 $generated@@46) $generated@@47) ($generated@@44 ($generated@@43 $generated@@45 $generated@@47) $generated@@46)))
 :pattern ( ($generated@@43 ($generated@@44 $generated@@45 $generated@@46) $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@49 $generated@@48)  (or (= $generated@@49 $generated@@30) (= ($generated@@31 $generated@@49) $generated@@48)))
 :pattern ( ($generated@@32 $generated@@36 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 Int) ) (!  (=> (= $generated@@54 ($generated@@41 $generated@@52)) (and (= ($generated@@50 ($generated@@51 $generated@@52 $generated@@53) $generated@@54) $generated@@52) (= ($generated@@43 ($generated@@51 $generated@@52 $generated@@53) $generated@@54) $generated@@53)))
 :pattern ( ($generated@@50 ($generated@@51 $generated@@52 $generated@@53) $generated@@54))
 :pattern ( ($generated@@43 ($generated@@51 $generated@@52 $generated@@53) $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@56 $generated@@55 $generated@@57) ($generated@@35 $generated@@36 $generated@@56 $generated@@48 $generated@@57))
 :pattern ( ($generated@@35 $generated@@36 $generated@@56 $generated@@55 $generated@@57))
 :pattern ( ($generated@@35 $generated@@36 $generated@@56 $generated@@48 $generated@@57))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@59 $generated@@66 $generated@@67 ($generated@@63 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@70) $generated@@68)
 :weight 0
)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (or (= $generated@@75 $generated@@76) (= ($generated@@59 $generated@@71 $generated@@72 ($generated@@63 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@76) ($generated@@59 $generated@@71 $generated@@72 $generated@@74 $generated@@76)))
 :weight 0
))) (= ($generated@@10 $generated@@60) 4)) (= ($generated@@10 $generated@@61) 5)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (= ($generated@@10 ($generated@@62 $generated@@77 $generated@@78)) 6))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@65 ($generated@@62 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@62 $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@84 ($generated@@29 $generated@@83) $generated@@85)  (or (= $generated@@84 $generated@@30) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@85 $generated@@84) $generated@@3)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@84 ($generated@@29 $generated@@83) $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@86 $generated@@48 $generated@@87)  (or (= $generated@@86 $generated@@30) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@87 $generated@@86) $generated@@3)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@86 $generated@@48 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 Int) ($generated@@93 Int) ) (!  (=> (and (and (= (+ $generated@@92 1) $generated@@93) (<= 0 $generated@@92)) (<= $generated@@93 ($generated@@28 $generated@@91))) (= ($generated@@50 ($generated@@88 $generated@@90 $generated@@91) $generated@@93) ($generated@@44 ($generated@@50 ($generated@@88 $generated@@90 $generated@@91) $generated@@92) ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@90 $generated@@91) ($generated@@89 $generated@@92)))))
 :pattern ( ($generated@@50 ($generated@@88 $generated@@90 $generated@@91) $generated@@92) ($generated@@50 ($generated@@88 $generated@@90 $generated@@91) $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 Int) ) (!  (=> (= $generated@@95 0) (= ($generated@@43 $generated@@94 $generated@@95) $generated@@94))
 :pattern ( ($generated@@43 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 Int) ) (! (= ($generated@@96 $generated@@97) $generated@@97)
 :pattern ( ($generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 $generated@@99) $generated@@99)
 :pattern ( ($generated@@98 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 Int) ($generated@@104 Int) ) (!  (=> (and (and (<= 0 $generated@@104) (< $generated@@104 $generated@@103)) (< $generated@@104 ($generated@@41 $generated@@102))) (= ($generated@@101 ($generated@@50 $generated@@102 $generated@@103) $generated@@104) ($generated@@101 $generated@@102 $generated@@104)))
 :weight 25
 :pattern ( ($generated@@101 ($generated@@50 $generated@@102 $generated@@103) $generated@@104))
 :pattern ( ($generated@@101 $generated@@102 $generated@@104) ($generated@@50 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 Int) ) (!  (=> (and (<= 0 $generated@@106) (<= $generated@@106 ($generated@@41 $generated@@105))) (= ($generated@@41 ($generated@@43 $generated@@105 $generated@@106)) (- ($generated@@41 $generated@@105) $generated@@106)))
 :pattern ( ($generated@@41 ($generated@@43 $generated@@105 $generated@@106)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 Int) ) (!  (=> (and (and (and ($generated@@107 $generated@@110) (and (or (not (= $generated@@111 $generated@@30)) (not true)) (= ($generated@@31 $generated@@111) ($generated@@29 $generated@@109)))) (and (<= 0 $generated@@112) (< $generated@@112 ($generated@@28 $generated@@111)))) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@110 $generated@@111) $generated@@3)))) ($generated@@108 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@110 $generated@@111) ($generated@@89 $generated@@112)) $generated@@109 $generated@@110))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@110 $generated@@111) ($generated@@89 $generated@@112)) ($generated@@29 $generated@@109))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@113 $generated@@114 $generated@@115)  (and (= ($generated@@41 $generated@@114) ($generated@@41 $generated@@115)) (forall (($generated@@116 Int) ) (!  (=> (and (<= 0 $generated@@116) (< $generated@@116 ($generated@@41 $generated@@114))) (= ($generated@@101 $generated@@114 $generated@@116) ($generated@@101 $generated@@115 $generated@@116)))
 :pattern ( ($generated@@101 $generated@@114 $generated@@116))
 :pattern ( ($generated@@101 $generated@@115 $generated@@116))
))))
 :pattern ( ($generated@@113 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@117 $generated@@119 ($generated@@58 $generated@@119 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@58 $generated@@119 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@41 ($generated@@44 $generated@@120 $generated@@121)) (+ 1 ($generated@@41 $generated@@120)))
 :pattern ( ($generated@@44 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@123 ($generated@@37 $generated@@122))  (and ($generated@@32 $generated@@36 $generated@@123 ($generated@@29 $generated@@122)) (or (not (= $generated@@123 $generated@@30)) (not true))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@123 ($generated@@37 $generated@@122)))
 :pattern ( ($generated@@32 $generated@@36 $generated@@123 ($generated@@29 $generated@@122)))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@108 ($generated@@117 $generated@@127 $generated@@124) $generated@@125 $generated@@126) ($generated@@35 $generated@@127 $generated@@124 $generated@@125 $generated@@126))
 :pattern ( ($generated@@108 ($generated@@117 $generated@@127 $generated@@124) $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 Int) ($generated@@130 Int) ) (!  (=> (and (and (<= 0 $generated@@129) (<= 0 $generated@@130)) (< $generated@@130 (- ($generated@@41 $generated@@128) $generated@@129))) (= ($generated@@101 ($generated@@43 $generated@@128 $generated@@129) $generated@@130) ($generated@@101 $generated@@128 (+ $generated@@130 $generated@@129))))
 :weight 25
 :pattern ( ($generated@@101 ($generated@@43 $generated@@128 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (!  (and (= ($generated@@27 ($generated@@29 $generated@@132)) $generated@@4) (= ($generated@@131 ($generated@@29 $generated@@132)) $generated@@8))
 :pattern ( ($generated@@29 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (!  (and (= ($generated@@27 ($generated@@37 $generated@@133)) $generated@@5) (= ($generated@@131 ($generated@@37 $generated@@133)) $generated@@8))
 :pattern ( ($generated@@37 $generated@@133))
)))
(assert  (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@134 $generated@@137 $generated@@138 $generated@@139 ($generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@142 $generated@@143) $generated@@140)
 :weight 0
)) (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@134 $generated@@144 $generated@@145 $generated@@146 ($generated@@136 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@134 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@134 $generated@@153 $generated@@154 $generated@@155 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@134 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@15 ($generated@@134 $generated@@36 $generated@@60 $generated@@11 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@162)) (not true)) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@163 $generated@@166) $generated@@164)))) (= $generated@@166 $generated@@165)))
 :pattern ( ($generated@@134 $generated@@36 $generated@@60 $generated@@11 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@41 ($generated@@51 $generated@@168 $generated@@169)) (+ ($generated@@41 $generated@@168) ($generated@@41 $generated@@169)))
 :pattern ( ($generated@@41 ($generated@@51 $generated@@168 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> ($generated@@170 $generated@@171 $generated@@48) (and (= ($generated@@117 $generated@@36 ($generated@@58 $generated@@36 $generated@@171)) $generated@@171) ($generated@@32 $generated@@36 ($generated@@58 $generated@@36 $generated@@171) $generated@@48)))
 :pattern ( ($generated@@170 $generated@@171 $generated@@48))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> ($generated@@170 $generated@@172 $generated@@55) (and (= ($generated@@117 $generated@@36 ($generated@@58 $generated@@36 $generated@@172)) $generated@@172) ($generated@@32 $generated@@36 ($generated@@58 $generated@@36 $generated@@172) $generated@@55)))
 :pattern ( ($generated@@170 $generated@@172 $generated@@55))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@174 ($generated@@29 $generated@@173))  (or (= $generated@@174 $generated@@30) (= ($generated@@31 $generated@@174) ($generated@@29 $generated@@173))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@174 ($generated@@29 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@175 $generated@@55)  (and ($generated@@32 $generated@@36 $generated@@175 $generated@@48) (or (not (= $generated@@175 $generated@@30)) (not true))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@175 $generated@@55))
 :pattern ( ($generated@@32 $generated@@36 $generated@@175 $generated@@48))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 Int) ($generated@@178 T@U) ) (!  (and (=> (= $generated@@177 ($generated@@41 $generated@@176)) (= ($generated@@101 ($generated@@44 $generated@@176 $generated@@178) $generated@@177) $generated@@178)) (=> (or (not (= $generated@@177 ($generated@@41 $generated@@176))) (not true)) (= ($generated@@101 ($generated@@44 $generated@@176 $generated@@178) $generated@@177) ($generated@@101 $generated@@176 $generated@@177))))
 :pattern ( ($generated@@101 ($generated@@44 $generated@@176 $generated@@178) $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (forall (($generated@@181 Int) ) (!  (=> (and (<= 0 $generated@@181) (< $generated@@181 ($generated@@41 ($generated@@88 $generated@@179 $generated@@180)))) (= ($generated@@101 ($generated@@88 $generated@@179 $generated@@180) $generated@@181) ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@179 $generated@@180) ($generated@@89 $generated@@181))))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@179 $generated@@180) ($generated@@89 $generated@@181)))
 :pattern ( ($generated@@101 ($generated@@88 $generated@@179 $generated@@180) $generated@@181))
))
 :pattern ( ($generated@@88 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> ($generated@@113 $generated@@182 $generated@@183) (= $generated@@182 $generated@@183))
 :pattern ( ($generated@@113 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 Int) ) (!  (=> (and (<= 0 $generated@@185) (<= $generated@@185 ($generated@@41 $generated@@184))) (= ($generated@@41 ($generated@@50 $generated@@184 $generated@@185)) $generated@@185))
 :pattern ( ($generated@@41 ($generated@@50 $generated@@184 $generated@@185)))
)))
(assert (forall (($generated@@186 T@U) ) (!  (=> ($generated@@170 $generated@@186 $generated@@0) (and (= ($generated@@117 $generated@@12 ($generated@@58 $generated@@12 $generated@@186)) $generated@@186) ($generated@@32 $generated@@12 ($generated@@58 $generated@@12 $generated@@186) $generated@@0)))
 :pattern ( ($generated@@170 $generated@@186 $generated@@0))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> ($generated@@170 $generated@@187 $generated) (and (= ($generated@@117 $generated@@11 ($generated@@58 $generated@@11 $generated@@187)) $generated@@187) ($generated@@32 $generated@@11 ($generated@@58 $generated@@11 $generated@@187) $generated)))
 :pattern ( ($generated@@170 $generated@@187 $generated))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@T) ) (! (= ($generated@@170 ($generated@@117 $generated@@190 $generated@@188) $generated@@189) ($generated@@32 $generated@@190 $generated@@188 $generated@@189))
 :pattern ( ($generated@@170 ($generated@@117 $generated@@190 $generated@@188) $generated@@189))
)))
(assert (forall (($generated@@191 T@U) ) (! (<= 0 ($generated@@28 $generated@@191))
 :pattern ( ($generated@@28 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ) (! (<= 0 ($generated@@41 $generated@@192))
 :pattern ( ($generated@@41 $generated@@192))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@26 ($generated@@89 $generated@@193)) 1)
 :pattern ( ($generated@@89 $generated@@193))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@194 ($generated@@89 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@89 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@196 ($generated@@29 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@29 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ) (! (= ($generated@@198 ($generated@@37 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@37 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@T) ) (! (= ($generated@@58 $generated@@201 ($generated@@117 $generated@@201 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@117 $generated@@201 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and ($generated@@107 $generated@@203) (and (or (not (= $generated@@204 $generated@@30)) (not true)) (= ($generated@@31 $generated@@204) ($generated@@29 $generated@@202)))) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@203 $generated@@204) $generated@@3)))) ($generated@@35 $generated@@12 ($generated@@16 ($generated@@28 $generated@@204)) $generated@@0 $generated@@203))
 :pattern ( ($generated@@28 $generated@@204) ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@203 $generated@@204) $generated@@3)) ($generated@@29 $generated@@202))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Int) ) (!  (=> (and (and ($generated@@107 $generated@@206) (and (or (not (= $generated@@207 $generated@@30)) (not true)) (= ($generated@@31 $generated@@207) ($generated@@29 $generated@@205)))) (and (<= 0 $generated@@208) (< $generated@@208 ($generated@@28 $generated@@207)))) ($generated@@170 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@206 $generated@@207) ($generated@@89 $generated@@208)) $generated@@205))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@206 $generated@@207) ($generated@@89 $generated@@208)) ($generated@@29 $generated@@205))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@41 ($generated@@88 $generated@@209 $generated@@210)) ($generated@@28 $generated@@210))
 :pattern ( ($generated@@41 ($generated@@88 $generated@@209 $generated@@210)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (and (= ($generated@@211 ($generated@@44 $generated@@213 $generated@@214)) $generated@@213) (= ($generated@@212 ($generated@@44 $generated@@213 $generated@@214)) $generated@@214))
 :pattern ( ($generated@@44 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> ($generated@@170 $generated@@216 ($generated@@29 $generated@@215)) (and (= ($generated@@117 $generated@@36 ($generated@@58 $generated@@36 $generated@@216)) $generated@@216) ($generated@@32 $generated@@36 ($generated@@58 $generated@@36 $generated@@216) ($generated@@29 $generated@@215))))
 :pattern ( ($generated@@170 $generated@@216 ($generated@@29 $generated@@215)))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> ($generated@@170 $generated@@218 ($generated@@37 $generated@@217)) (and (= ($generated@@117 $generated@@36 ($generated@@58 $generated@@36 $generated@@218)) $generated@@218) ($generated@@32 $generated@@36 ($generated@@58 $generated@@36 $generated@@218) ($generated@@37 $generated@@217))))
 :pattern ( ($generated@@170 $generated@@218 ($generated@@37 $generated@@217)))
)))
(assert (= ($generated@@27 $generated@@48) $generated@@6))
(assert (= ($generated@@131 $generated@@48) $generated@@9))
(assert (= ($generated@@27 $generated@@55) $generated@@7))
(assert (= ($generated@@131 $generated@@55) $generated@@9))
(assert (forall (($generated@@219 T@U) ($generated@@220 Int) ($generated@@221 Int) ) (!  (=> (and (and (<= 0 $generated@@220) (<= $generated@@220 $generated@@221)) (< $generated@@221 ($generated@@41 $generated@@219))) (= ($generated@@101 ($generated@@43 $generated@@219 $generated@@220) (- $generated@@221 $generated@@220)) ($generated@@101 $generated@@219 $generated@@221)))
 :weight 25
 :pattern ( ($generated@@101 $generated@@219 $generated@@221) ($generated@@43 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 Int) ($generated@@224 Int) ) (!  (=> (and (and (<= 0 $generated@@223) (<= 0 $generated@@224)) (<= (+ $generated@@223 $generated@@224) ($generated@@41 $generated@@222))) (= ($generated@@43 ($generated@@43 $generated@@222 $generated@@223) $generated@@224) ($generated@@43 $generated@@222 (+ $generated@@223 $generated@@224))))
 :pattern ( ($generated@@43 ($generated@@43 $generated@@222 $generated@@223) $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Int) ) (!  (and (=> (< $generated@@227 ($generated@@41 $generated@@225)) (= ($generated@@101 ($generated@@51 $generated@@225 $generated@@226) $generated@@227) ($generated@@101 $generated@@225 $generated@@227))) (=> (<= ($generated@@41 $generated@@225) $generated@@227) (= ($generated@@101 ($generated@@51 $generated@@225 $generated@@226) $generated@@227) ($generated@@101 $generated@@226 (- $generated@@227 ($generated@@41 $generated@@225))))))
 :pattern ( ($generated@@101 ($generated@@51 $generated@@225 $generated@@226) $generated@@227))
)))
(assert (forall (($generated@@228 Int) ) (! (= ($generated@@117 $generated@@12 ($generated@@16 ($generated@@96 $generated@@228))) ($generated@@98 $generated@@61 ($generated@@117 $generated@@12 ($generated@@16 $generated@@228))))
 :pattern ( ($generated@@117 $generated@@12 ($generated@@16 ($generated@@96 $generated@@228))))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@T) ) (! (= ($generated@@117 $generated@@230 ($generated@@98 $generated@@230 $generated@@229)) ($generated@@98 $generated@@61 ($generated@@117 $generated@@230 $generated@@229)))
 :pattern ( ($generated@@117 $generated@@230 ($generated@@98 $generated@@230 $generated@@229)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= ($generated@@41 $generated@@231) 0) (= $generated@@231 $generated@@42))
 :pattern ( ($generated@@41 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 Int) ) (!  (=> (= $generated@@233 0) (= ($generated@@50 $generated@@232 $generated@@233) $generated@@42))
 :pattern ( ($generated@@50 $generated@@232 $generated@@233))
)))
(assert  (=> (<= 0 $generated@@234) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ) (!  (=> (or ($generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240) (and (< 0 $generated@@234) (and (and ($generated@@107 $generated@@237) (and (or (not (= $generated@@238 $generated@@30)) (not true)) (and ($generated@@32 $generated@@36 $generated@@238 $generated@@55) ($generated@@35 $generated@@36 $generated@@238 $generated@@55 $generated@@237)))) ($generated@@32 $generated@@36 $generated@@239 ($generated@@37 $generated@@0))))) (= ($generated@@235 $generated@@237 $generated@@238 $generated@@239 $generated@@240)  (and (= ($generated@@28 $generated@@239) ($generated@@96 10)) (ite $generated@@240 ($generated@@113 ($generated@@88 $generated@@237 $generated@@239) $generated@@42) ($generated@@113 ($generated@@51 ($generated@@51 ($generated@@43 ($generated@@50 ($generated@@88 $generated@@237 $generated@@239) ($generated@@96 5)) ($generated@@96 2)) ($generated@@50 ($generated@@88 $generated@@237 $generated@@239) ($generated@@96 5))) ($generated@@43 ($generated@@88 $generated@@237 $generated@@239) ($generated@@96 2))) $generated@@42)))))
 :pattern ( ($generated@@235 $generated@@237 $generated@@238 $generated@@239 $generated@@240) ($generated@@107 $generated@@237))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! ($generated@@35 $generated@@12 $generated@@242 $generated@@0 $generated@@241)
 :pattern ( ($generated@@35 $generated@@12 $generated@@242 $generated@@0 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! ($generated@@35 $generated@@11 $generated@@244 $generated $generated@@243)
 :pattern ( ($generated@@35 $generated@@11 $generated@@244 $generated $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! ($generated@@32 $generated@@12 $generated@@245 $generated@@0)
 :pattern ( ($generated@@32 $generated@@12 $generated@@245 $generated@@0))
)))
(assert (forall (($generated@@246 T@U) ) (! ($generated@@32 $generated@@11 $generated@@246 $generated)
 :pattern ( ($generated@@32 $generated@@11 $generated@@246 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () Bool)
(declare-fun $generated@@251 () Bool)
(declare-fun $generated@@252 () Bool)
(declare-fun $generated@@253 () Bool)
(declare-fun $generated@@254 () Bool)
(declare-fun $generated@@255 () Bool)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () Bool)
(declare-fun $generated@@258 () Bool)
(declare-fun $generated@@259 () Bool)
(declare-fun $generated@@260 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@261  (=> (and (= ($generated@@235 $generated@@247 $generated@@248 $generated@@249 $generated@@250)  (and (= ($generated@@28 $generated@@249) ($generated@@96 10)) (ite $generated@@250 ($generated@@113 ($generated@@88 $generated@@247 $generated@@249) $generated@@42) ($generated@@113 ($generated@@51 ($generated@@51 ($generated@@43 ($generated@@50 ($generated@@88 $generated@@247 $generated@@249) ($generated@@96 5)) ($generated@@96 2)) ($generated@@50 ($generated@@88 $generated@@247 $generated@@249) ($generated@@96 5))) ($generated@@43 ($generated@@88 $generated@@247 $generated@@249) ($generated@@96 2))) $generated@@42)))) ($generated@@32 $generated@@11 ($generated@@14 ($generated@@235 $generated@@247 $generated@@248 $generated@@249 $generated@@250)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 6)) $generated@@251) (=> $generated@@251 (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@252) (=> $generated@@252 (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@253) (=> $generated@@253 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@254))))))))))
(let (($generated@@262  (=> (not $generated@@250) (and (=> (= (ControlFlow 0 10) (- 0 17)) (or (not (= $generated@@249 $generated@@30)) (not true))) (=> (or (not (= $generated@@249 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 10) (- 0 16)) (and (<= 0 ($generated@@96 2)) (<= ($generated@@96 2) ($generated@@28 $generated@@249)))) (=> (and (<= 0 ($generated@@96 2)) (<= ($generated@@96 2) ($generated@@28 $generated@@249))) (and (=> (= (ControlFlow 0 10) (- 0 15)) (and (<= ($generated@@96 2) ($generated@@96 5)) (<= ($generated@@96 5) ($generated@@28 $generated@@249)))) (=> (and (<= ($generated@@96 2) ($generated@@96 5)) (<= ($generated@@96 5) ($generated@@28 $generated@@249))) (=> (= $generated@@255 (forall (($generated@@263 Int) ) (!  (=> (and (<= ($generated@@96 2) $generated@@263) (< $generated@@263 ($generated@@96 5))) ($generated@@15 ($generated@@134 $generated@@36 $generated@@60 $generated@@11 $generated@@256 $generated@@249 ($generated@@89 $generated@@263))))
 :pattern ( ($generated@@134 $generated@@36 $generated@@60 $generated@@11 $generated@@256 $generated@@249 ($generated@@89 $generated@@263)))
))) (and (=> (= (ControlFlow 0 10) (- 0 14)) (or (not (= $generated@@249 $generated@@30)) (not true))) (=> (or (not (= $generated@@249 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 10) (- 0 13)) (and (<= 0 ($generated@@96 5)) (<= ($generated@@96 5) ($generated@@28 $generated@@249)))) (=> (and (<= 0 ($generated@@96 5)) (<= ($generated@@96 5) ($generated@@28 $generated@@249))) (=> (= $generated@@257 (forall (($generated@@264 Int) ) (!  (=> (and (<= 0 $generated@@264) (< $generated@@264 ($generated@@96 5))) ($generated@@15 ($generated@@134 $generated@@36 $generated@@60 $generated@@11 $generated@@256 $generated@@249 ($generated@@89 $generated@@264))))
 :pattern ( ($generated@@134 $generated@@36 $generated@@60 $generated@@11 $generated@@256 $generated@@249 ($generated@@89 $generated@@264)))
))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (not (= $generated@@249 $generated@@30)) (not true))) (=> (or (not (= $generated@@249 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 ($generated@@96 2)) (<= ($generated@@96 2) ($generated@@28 $generated@@249)))) (=> (and (<= 0 ($generated@@96 2)) (<= ($generated@@96 2) ($generated@@28 $generated@@249))) (=> (and (= $generated@@258 (forall (($generated@@265 Int) ) (!  (=> (and (<= ($generated@@96 2) $generated@@265) (< $generated@@265 ($generated@@28 $generated@@249))) ($generated@@15 ($generated@@134 $generated@@36 $generated@@60 $generated@@11 $generated@@256 $generated@@249 ($generated@@89 $generated@@265))))
 :pattern ( ($generated@@134 $generated@@36 $generated@@60 $generated@@11 $generated@@256 $generated@@249 ($generated@@89 $generated@@265)))
))) (= $generated@@252 $generated@@255)) (=> (and (and (= $generated@@253 $generated@@257) (= $generated@@254 $generated@@258)) (and (= $generated@@251 true) (= (ControlFlow 0 10) 3))) $generated@@261)))))))))))))))))))))
(let (($generated@@266  (=> $generated@@250 (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= $generated@@249 $generated@@30)) (not true))) (=> (or (not (= $generated@@249 $generated@@30)) (not true)) (=> (and (= $generated@@259 (forall (($generated@@267 Int) ) (!  (=> (and (<= 0 $generated@@267) (< $generated@@267 ($generated@@28 $generated@@249))) ($generated@@15 ($generated@@134 $generated@@36 $generated@@60 $generated@@11 $generated@@256 $generated@@249 ($generated@@89 $generated@@267))))
 :pattern ( ($generated@@134 $generated@@36 $generated@@60 $generated@@11 $generated@@256 $generated@@249 ($generated@@89 $generated@@267)))
))) (= $generated@@252 true)) (=> (and (and (= $generated@@253 true) (= $generated@@254 true)) (and (= $generated@@251 $generated@@259) (= (ControlFlow 0 8) 3))) $generated@@261)))))))
(let (($generated@@268  (=> (= ($generated@@28 $generated@@249) ($generated@@96 10)) (and (=> (= (ControlFlow 0 18) 8) $generated@@266) (=> (= (ControlFlow 0 18) 10) $generated@@262)))))
(let (($generated@@269  (=> (and (or (not (= ($generated@@28 $generated@@249) ($generated@@96 10))) (not true)) (= $generated@@252 true)) (=> (and (and (= $generated@@253 true) (= $generated@@254 true)) (and (= $generated@@251 true) (= (ControlFlow 0 7) 3))) $generated@@261))))
(let (($generated@@270  (and (=> (= (ControlFlow 0 19) (- 0 20)) (or (not (= $generated@@249 $generated@@30)) (not true))) (=> (or (not (= $generated@@249 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 19) 18) $generated@@268) (=> (= (ControlFlow 0 19) 7) $generated@@269))))))
(let (($generated@@271 true))
(let (($generated@@272  (=> (= $generated@@256 ($generated@@135 $generated@@30 $generated@@247 $generated@@3 $generated@@249)) (and (=> (= (ControlFlow 0 21) 1) $generated@@271) (=> (= (ControlFlow 0 21) 19) $generated@@270)))))
(let (($generated@@273  (=> (and ($generated@@107 $generated@@247) ($generated@@260 $generated@@247)) (=> (and (and (and (or (not (= $generated@@248 $generated@@30)) (not true)) (and ($generated@@32 $generated@@36 $generated@@248 $generated@@55) ($generated@@35 $generated@@36 $generated@@248 $generated@@55 $generated@@247))) ($generated@@32 $generated@@36 $generated@@249 ($generated@@37 $generated@@0))) (and (= 0 $generated@@234) (= (ControlFlow 0 22) 21))) $generated@@272))))
$generated@@273))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
