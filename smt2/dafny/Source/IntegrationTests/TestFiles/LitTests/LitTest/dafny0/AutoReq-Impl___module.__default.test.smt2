(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (Int) Bool)
(declare-fun $generated@@23 (Int) Bool)
(declare-fun $generated@@25 (Int) Int)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@30 (Int Bool) Bool)
(declare-fun $generated@@31 (Int Bool) Bool)
(declare-fun $generated@@32 (Int Int) Int)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T T@T) T@T)
(declare-fun $generated@@51 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@108 (T@T T@U T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated) $generated@@1))
(assert (= ($generated@@20 $generated@@0) $generated@@2))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@24 Int) ) (!  (=> (or ($generated@@23 $generated@@24) (and (< 0 $generated@@21) (> $generated@@24 3))) (= ($generated@@22 $generated@@24) (> $generated@@24 7)))
 :pattern ( ($generated@@22 $generated@@24))
))))
(assert (forall (($generated@@26 Int) ) (! (= ($generated@@25 $generated@@26) $generated@@26)
 :pattern ( ($generated@@25 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@T) ) (! (= ($generated@@27 $generated@@29 $generated@@28) $generated@@28)
 :pattern ( ($generated@@27 $generated@@29 $generated@@28))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@33 Int) ($generated@@34 T@U) ) (!  (=> (or ($generated@@31 ($generated@@25 $generated@@33) ($generated@@9 ($generated@@27 $generated@@5 $generated@@34))) (and (< 1 $generated@@21) (ite ($generated@@9 $generated@@34) (> (+ $generated@@33 2) 3) (> ($generated@@32 ($generated@@25 2) ($generated@@25 $generated@@33)) 3)))) (and (and (=> ($generated@@9 ($generated@@27 $generated@@5 $generated@@34)) ($generated@@23 ($generated@@25 (+ $generated@@33 2)))) (=> (not ($generated@@9 ($generated@@27 $generated@@5 $generated@@34))) ($generated@@23 ($generated@@25 ($generated@@32 ($generated@@25 2) ($generated@@25 $generated@@33)))))) (= ($generated@@30 ($generated@@25 $generated@@33) ($generated@@9 ($generated@@27 $generated@@5 $generated@@34))) (ite ($generated@@9 $generated@@34) ($generated@@22 ($generated@@25 (+ $generated@@33 2))) ($generated@@22 ($generated@@25 ($generated@@32 ($generated@@25 2) ($generated@@25 $generated@@33))))))))
 :weight 3
 :pattern ( ($generated@@30 ($generated@@25 $generated@@33) ($generated@@9 ($generated@@27 $generated@@5 $generated@@34))))
))))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@T) ) (! (= ($generated@@36 $generated@@38 ($generated@@35 $generated@@38 $generated@@37)) $generated@@37)
 :pattern ( ($generated@@35 $generated@@38 $generated@@37))
)))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@39 Int) ) (!  (=> (or ($generated@@23 ($generated@@25 $generated@@39)) (and (< 0 $generated@@21) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 (> $generated@@39 3)))))) (= ($generated@@22 ($generated@@25 $generated@@39)) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 (> $generated@@39 7))))))
 :weight 3
 :pattern ( ($generated@@22 ($generated@@25 $generated@@39)))
))))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@35 $generated@@41 ($generated@@36 $generated@@41 $generated@@40)) $generated@@40)
 :pattern ( ($generated@@36 $generated@@41 $generated@@40))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@42 Int) ($generated@@43 Bool) ) (!  (=> (or ($generated@@31 $generated@@42 $generated@@43) (and (< 1 $generated@@21) (ite $generated@@43 (> (+ $generated@@42 2) 3) (> ($generated@@32 ($generated@@25 2) $generated@@42) 3)))) (and (and (=> $generated@@43 ($generated@@23 (+ $generated@@42 2))) (=> (not $generated@@43) ($generated@@23 ($generated@@32 ($generated@@25 2) $generated@@42)))) (= ($generated@@30 $generated@@42 $generated@@43) (ite $generated@@43 ($generated@@22 (+ $generated@@42 2)) ($generated@@22 ($generated@@32 ($generated@@25 2) $generated@@42))))))
 :pattern ( ($generated@@30 $generated@@42 $generated@@43))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@44 $generated@@55 $generated@@56 $generated@@57 ($generated@@51 $generated@@55 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@61 $generated@@58) $generated@@60 $generated@@61) $generated@@58)
 :weight 0
)) (and (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@67 $generated@@69) (= ($generated@@44 $generated@@62 $generated@@63 $generated@@64 ($generated@@51 $generated@@62 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@68 $generated@@65) $generated@@69 $generated@@70) ($generated@@44 $generated@@62 $generated@@63 $generated@@64 $generated@@66 $generated@@69 $generated@@70)))
 :weight 0
)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (or (= $generated@@77 $generated@@79) (= ($generated@@44 $generated@@71 $generated@@72 $generated@@73 ($generated@@51 $generated@@71 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@77 $generated@@74) $generated@@78 $generated@@79) ($generated@@44 $generated@@71 $generated@@72 $generated@@73 $generated@@75 $generated@@78 $generated@@79)))
 :weight 0
)))) (= ($generated@@4 $generated@@45) 3)) (= ($generated@@4 $generated@@46) 4)) (forall (($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@48 $generated@@80 $generated@@81 ($generated@@52 $generated@@80 $generated@@81 $generated@@83 $generated@@84 $generated@@82) $generated@@84) $generated@@82)
 :weight 0
))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (or (= $generated@@89 $generated@@90) (= ($generated@@48 $generated@@85 $generated@@86 ($generated@@52 $generated@@85 $generated@@86 $generated@@88 $generated@@89 $generated@@87) $generated@@90) ($generated@@48 $generated@@85 $generated@@86 $generated@@88 $generated@@90)))
 :weight 0
))) (= ($generated@@4 $generated@@49) 5)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@4 ($generated@@50 $generated@@91 $generated@@92)) 6))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@53 ($generated@@50 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@50 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@54 ($generated@@50 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@50 $generated@@95 $generated@@96))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 Bool) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@9 ($generated@@44 $generated@@45 $generated@@46 $generated@@5 ($generated@@47 $generated@@97 $generated@@98 $generated@@99 $generated@@100) $generated@@101 $generated@@102))  (=> (and (or (not (= $generated@@101 $generated@@97)) (not true)) ($generated@@9 ($generated@@35 $generated@@5 ($generated@@48 $generated@@46 $generated@@49 ($generated@@48 $generated@@45 ($generated@@50 $generated@@46 $generated@@49) $generated@@98 $generated@@101) $generated@@99)))) $generated@@100))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 $generated@@5 ($generated@@47 $generated@@97 $generated@@98 $generated@@99 $generated@@100) $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 Int) ($generated@@104 Int) ) (! (= ($generated@@32 $generated@@103 $generated@@104) (* $generated@@103 $generated@@104))
 :pattern ( ($generated@@32 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 Int) ) (! (= ($generated@@36 $generated@@6 ($generated@@10 ($generated@@25 $generated@@105))) ($generated@@27 $generated@@49 ($generated@@36 $generated@@6 ($generated@@10 $generated@@105))))
 :pattern ( ($generated@@36 $generated@@6 ($generated@@10 ($generated@@25 $generated@@105))))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@36 $generated@@107 ($generated@@27 $generated@@107 $generated@@106)) ($generated@@27 $generated@@49 ($generated@@36 $generated@@107 $generated@@106)))
 :pattern ( ($generated@@36 $generated@@107 ($generated@@27 $generated@@107 $generated@@106)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! ($generated@@108 $generated@@6 $generated@@110 $generated@@0 $generated@@109)
 :pattern ( ($generated@@108 $generated@@6 $generated@@110 $generated@@0 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! ($generated@@108 $generated@@5 $generated@@112 $generated $generated@@111)
 :pattern ( ($generated@@108 $generated@@5 $generated@@112 $generated $generated@@111))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@113 () Int)
(declare-fun $generated@@114 () T@U)
(declare-fun $generated@@115 () Bool)
(declare-fun $generated@@116 () Int)
(declare-fun $generated@@117 () Bool)
(declare-fun $generated@@118 () Int)
(declare-fun $generated@@119 () Bool)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 () Bool)
(declare-fun $generated@@122 () T@U)
(declare-fun $generated@@123 () T@U)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@125 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@126  (=> (and (and (= $generated@@113 ($generated@@25 7)) ($generated@@108 $generated@@6 ($generated@@10 $generated@@113) $generated@@0 $generated@@114)) (and (= $generated@@115 ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false)))) ($generated@@108 $generated@@5 ($generated@@8 $generated@@115) $generated $generated@@114))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> $generated@@115 (> (+ $generated@@113 2) 3))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> (not $generated@@115) (> ($generated@@32 ($generated@@25 2) $generated@@113) 3))) (=> (and ($generated@@31 ($generated@@25 7) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false)))) ($generated@@31 ($generated@@25 7) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@31 ($generated@@25 7) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false)))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@30 ($generated@@25 7) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false))))))) (=> ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false))) (=> ($generated@@23 ($generated@@25 (+ 7 2))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@22 ($generated@@25 (+ 7 2)))))) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 (> (+ 7 2) 7)))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@31 ($generated@@25 7) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false)))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@30 ($generated@@25 7) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false))))))) (=> (not ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false)))) (=> ($generated@@23 ($generated@@25 ($generated@@32 ($generated@@25 2) ($generated@@25 7)))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@22 ($generated@@25 ($generated@@32 ($generated@@25 2) ($generated@@25 7))))))) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 (> ($generated@@32 ($generated@@25 2) ($generated@@25 7)) 7)))))))))))))))))
(let (($generated@@127  (=> (and (and (= $generated@@116 ($generated@@25 3)) ($generated@@108 $generated@@6 ($generated@@10 $generated@@116) $generated@@0 $generated@@114)) (and (= $generated@@117 ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true)))) ($generated@@108 $generated@@5 ($generated@@8 $generated@@117) $generated $generated@@114))) (and (=> (= (ControlFlow 0 6) (- 0 10)) (=> $generated@@117 (> (+ $generated@@116 2) 3))) (and (=> (= (ControlFlow 0 6) (- 0 9)) (=> (not $generated@@117) (> ($generated@@32 ($generated@@25 2) $generated@@116) 3))) (=> (and ($generated@@31 ($generated@@25 3) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true)))) ($generated@@31 ($generated@@25 3) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true))))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (=> ($generated@@31 ($generated@@25 3) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true)))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@30 ($generated@@25 3) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true))))))) (=> ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true))) (=> ($generated@@23 ($generated@@25 (+ 3 2))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@22 ($generated@@25 (+ 3 2)))))) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 (> (+ 3 2) 7)))))))))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (=> ($generated@@31 ($generated@@25 3) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true)))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@30 ($generated@@25 3) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true))))))) (=> (not ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true)))) (=> ($generated@@23 ($generated@@25 ($generated@@32 ($generated@@25 2) ($generated@@25 3)))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@22 ($generated@@25 ($generated@@32 ($generated@@25 2) ($generated@@25 3))))))) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 (> ($generated@@32 ($generated@@25 2) ($generated@@25 3)) 7)))))))))) (=> (and ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@30 ($generated@@25 3) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true))))))) (= (ControlFlow 0 6) 2)) $generated@@126)))))))))
(let (($generated@@128  (and (=> (= (ControlFlow 0 11) 6) $generated@@127) (=> (= (ControlFlow 0 11) 2) $generated@@126))))
(let (($generated@@129  (=> (= (ControlFlow 0 17) 11) $generated@@128)))
(let (($generated@@130  (=> (and (and (= $generated@@118 ($generated@@25 0)) ($generated@@108 $generated@@6 ($generated@@10 $generated@@118) $generated@@0 $generated@@114)) (and (= $generated@@119 ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false)))) ($generated@@108 $generated@@5 ($generated@@8 $generated@@119) $generated $generated@@114))) (and (=> (= (ControlFlow 0 18) (- 0 22)) (=> $generated@@119 (> (+ $generated@@118 2) 3))) (and (=> (= (ControlFlow 0 18) (- 0 21)) (=> (not $generated@@119) (> ($generated@@32 ($generated@@25 2) $generated@@118) 3))) (=> (and ($generated@@31 ($generated@@25 0) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false)))) ($generated@@31 ($generated@@25 0) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false))))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (=> ($generated@@31 ($generated@@25 0) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false)))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@30 ($generated@@25 0) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false))))))) (=> ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false))) (=> ($generated@@23 ($generated@@25 (+ 0 2))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@22 ($generated@@25 (+ 0 2)))))) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 (> (+ 0 2) 7)))))))))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> ($generated@@31 ($generated@@25 0) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false)))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@30 ($generated@@25 0) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false))))))) (=> (not ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false)))) (=> ($generated@@23 ($generated@@25 ($generated@@32 ($generated@@25 2) ($generated@@25 0)))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@22 ($generated@@25 ($generated@@32 ($generated@@25 2) ($generated@@25 0))))))) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 (> ($generated@@32 ($generated@@25 2) ($generated@@25 0)) 7)))))))))) (=> (and ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@30 ($generated@@25 0) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 false))))))) (= (ControlFlow 0 18) 17)) $generated@@129)))))))))
(let (($generated@@131  (and (=> (= (ControlFlow 0 23) 18) $generated@@130) (=> (= (ControlFlow 0 23) 17) $generated@@129))))
(let (($generated@@132  (=> (and (and (= $generated@@120 ($generated@@25 1)) ($generated@@108 $generated@@6 ($generated@@10 $generated@@120) $generated@@0 $generated@@114)) (and (= $generated@@121 ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true)))) ($generated@@108 $generated@@5 ($generated@@8 $generated@@121) $generated $generated@@114))) (and (=> (= (ControlFlow 0 12) (- 0 16)) (=> $generated@@121 (> (+ $generated@@120 2) 3))) (and (=> (= (ControlFlow 0 12) (- 0 15)) (=> (not $generated@@121) (> ($generated@@32 ($generated@@25 2) $generated@@120) 3))) (=> (and ($generated@@31 ($generated@@25 1) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true)))) ($generated@@31 ($generated@@25 1) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true))))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (=> ($generated@@31 ($generated@@25 1) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true)))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@30 ($generated@@25 1) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true))))))) (=> ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true))) (=> ($generated@@23 ($generated@@25 (+ 1 2))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@22 ($generated@@25 (+ 1 2)))))) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 (> (+ 1 2) 7)))))))))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (=> ($generated@@31 ($generated@@25 1) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true)))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@30 ($generated@@25 1) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true))))))) (=> (not ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true)))) (=> ($generated@@23 ($generated@@25 ($generated@@32 ($generated@@25 2) ($generated@@25 1)))) (or ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@22 ($generated@@25 ($generated@@32 ($generated@@25 2) ($generated@@25 1))))))) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 (> ($generated@@32 ($generated@@25 2) ($generated@@25 1)) 7)))))))))) (=> (and ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@30 ($generated@@25 1) ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 true))))))) (= (ControlFlow 0 12) 11)) $generated@@128)))))))))
(let (($generated@@133  (=> (= $generated@@122 ($generated@@47 $generated@@123 $generated@@114 $generated@@3 false)) (and (=> (= (ControlFlow 0 24) 12) $generated@@132) (=> (= (ControlFlow 0 24) 23) $generated@@131)))))
(let (($generated@@134  (=> (and (and ($generated@@124 $generated@@114) ($generated@@125 $generated@@114)) (and (= 2 $generated@@21) (= (ControlFlow 0 25) 24))) $generated@@133)))
$generated@@134))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 18) (- 21))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 18) (- 19))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 8))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 12) (- 16))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(pop 1)
; Invalid
