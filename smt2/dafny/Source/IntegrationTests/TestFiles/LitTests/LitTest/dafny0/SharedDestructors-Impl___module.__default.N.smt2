(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@31 (Int Real Real) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@40 (T@U) Real)
(declare-fun $generated@@44 (T@U) Real)
(declare-fun $generated@@48 (T@T T@U T@U) Bool)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@56 (Int Real) T@U)
(declare-fun $generated@@59 (Real) Real)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@85 (Int) Real)
(declare-fun $generated@@92 (T@U) Real)
(declare-fun $generated@@96 (T@U) Int)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@105 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@T T@T) T@T)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@T) T@T)
(declare-fun $generated@@160 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@1))
(assert (= ($generated@@27 $generated@@0) $generated@@2))
(assert (forall (($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@29 $generated@@30))
 :pattern ( ($generated@@28 $generated@@30))
)))
(assert (forall (($generated@@33 Int) ($generated@@34 Real) ($generated@@35 Real) ) (! (= ($generated@@32 ($generated@@31 $generated@@33 $generated@@34 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@31 $generated@@33 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 Int) ($generated@@38 Real) ($generated@@39 Real) ) (! (= ($generated@@36 ($generated@@31 $generated@@37 $generated@@38 $generated@@39)) $generated@@37)
 :pattern ( ($generated@@31 $generated@@37 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 Int) ($generated@@42 Real) ($generated@@43 Real) ) (! (= ($generated@@40 ($generated@@31 $generated@@41 $generated@@42 $generated@@43)) $generated@@42)
 :pattern ( ($generated@@31 $generated@@41 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 Int) ($generated@@46 Real) ($generated@@47 Real) ) (! (= ($generated@@44 ($generated@@31 $generated@@45 $generated@@46 $generated@@47)) $generated@@47)
 :pattern ( ($generated@@31 $generated@@45 $generated@@46 $generated@@47))
)))
(assert (= ($generated@@11 $generated@@49) 3))
(assert (forall (($generated@@51 T@U) ) (!  (=> ($generated@@48 $generated@@49 $generated@@51 $generated@@50) ($generated@@29 $generated@@51))
 :pattern ( ($generated@@29 $generated@@51) ($generated@@48 $generated@@49 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@53 Int) ($generated@@54 Real) ($generated@@55 Real) ) (! (= ($generated@@48 $generated@@49 ($generated@@31 $generated@@53 $generated@@54 $generated@@55) $generated@@52)  (and (and ($generated@@48 $generated@@13 ($generated@@17 $generated@@53) $generated) ($generated@@48 $generated@@14 ($generated@@19 $generated@@54) $generated@@0)) ($generated@@48 $generated@@14 ($generated@@19 $generated@@55) $generated@@0)))
 :pattern ( ($generated@@48 $generated@@49 ($generated@@31 $generated@@53 $generated@@54 $generated@@55) $generated@@52))
)))
(assert (forall (($generated@@57 Int) ($generated@@58 Real) ) (! (= ($generated@@48 $generated@@49 ($generated@@56 $generated@@57 $generated@@58) $generated@@52)  (and ($generated@@48 $generated@@13 ($generated@@17 $generated@@57) $generated) ($generated@@48 $generated@@14 ($generated@@19 $generated@@58) $generated@@0)))
 :pattern ( ($generated@@48 $generated@@49 ($generated@@56 $generated@@57 $generated@@58) $generated@@52))
)))
(assert (forall (($generated@@60 Real) ) (! (= ($generated@@59 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 $generated@@62) $generated@@62)
 :pattern ( ($generated@@61 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@29 $generated@@64) (= ($generated@@32 $generated@@64) $generated@@6))
 :pattern ( ($generated@@29 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 $generated@@66) (= ($generated@@32 $generated@@66) $generated@@7))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 $generated@@68) (= ($generated@@32 $generated@@68) $generated@@8))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@69 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@69 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@65 $generated@@73) (exists (($generated@@74 Int) ($generated@@75 Real) ($generated@@76 Real) ) (= $generated@@73 ($generated@@31 $generated@@74 $generated@@75 $generated@@76))))
 :pattern ( ($generated@@65 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@67 $generated@@77) (exists (($generated@@78 Int) ($generated@@79 Real) ) (= $generated@@77 ($generated@@56 $generated@@78 $generated@@79))))
 :pattern ( ($generated@@67 $generated@@77))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@29 $generated@@81) (exists (($generated@@82 Int) ) (= $generated@@81 ($generated@@80 $generated@@82))))
 :pattern ( ($generated@@29 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@83 $generated@@84) (or ($generated@@65 $generated@@84) ($generated@@67 $generated@@84)))
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 Int) ) (! (= ($generated@@85 $generated@@86) (to_real $generated@@86))
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@48 $generated@@49 $generated@@87 $generated@@52) (or ($generated@@65 $generated@@87) ($generated@@67 $generated@@87)))
 :pattern ( ($generated@@67 $generated@@87) ($generated@@48 $generated@@49 $generated@@87 $generated@@52))
 :pattern ( ($generated@@65 $generated@@87) ($generated@@48 $generated@@49 $generated@@87 $generated@@52))
)))
(assert (forall (($generated@@88 Int) ($generated@@89 Real) ) (! (= ($generated@@32 ($generated@@56 $generated@@88 $generated@@89)) $generated@@8)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 Int) ($generated@@91 Real) ) (! (= ($generated@@36 ($generated@@56 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@56 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 Int) ($generated@@94 Real) ) (! (= ($generated@@92 ($generated@@56 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@56 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 Int) ) (! (= ($generated@@32 ($generated@@80 $generated@@95)) $generated@@6)
 :pattern ( ($generated@@80 $generated@@95))
)))
(assert (forall (($generated@@97 Int) ) (! (= ($generated@@96 ($generated@@80 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@80 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@69 $generated@@99 ($generated@@70 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@70 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@100 Int) ) (! (= ($generated@@48 $generated@@49 ($generated@@80 $generated@@100) $generated@@50) ($generated@@48 $generated@@13 ($generated@@17 $generated@@100) $generated))
 :pattern ( ($generated@@48 $generated@@49 ($generated@@80 $generated@@100) $generated@@50))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@101 $generated@@112 $generated@@113 $generated@@114 ($generated@@108 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@117 $generated@@118) $generated@@115)
 :weight 0
)) (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@101 $generated@@119 $generated@@120 $generated@@121 ($generated@@108 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@101 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@101 $generated@@128 $generated@@129 $generated@@130 ($generated@@108 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)))) (= ($generated@@11 $generated@@102) 4)) (= ($generated@@11 $generated@@103) 5)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@105 $generated@@137 $generated@@138 ($generated@@109 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@139) $generated@@141) $generated@@139)
 :weight 0
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@146 $generated@@147) (= ($generated@@105 $generated@@142 $generated@@143 ($generated@@109 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@105 $generated@@142 $generated@@143 $generated@@145 $generated@@147)))
 :weight 0
))) (= ($generated@@11 $generated@@106) 6)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (= ($generated@@11 ($generated@@107 $generated@@148 $generated@@149)) 7))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (! (= ($generated@@110 ($generated@@107 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@107 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@111 ($generated@@107 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@107 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 Bool) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@16 ($generated@@101 $generated@@102 $generated@@103 $generated@@12 ($generated@@104 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))  (=> (and (or (not (= $generated@@158 $generated@@154)) (not true)) ($generated@@16 ($generated@@69 $generated@@12 ($generated@@105 $generated@@103 $generated@@106 ($generated@@105 $generated@@102 ($generated@@107 $generated@@103 $generated@@106) $generated@@155 $generated@@158) $generated@@156)))) $generated@@157))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103 $generated@@12 ($generated@@104 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@161 $generated@@163) (and ($generated@@29 $generated@@162) ($generated@@160 $generated@@49 $generated@@162 $generated@@50 $generated@@163))) ($generated@@160 $generated@@13 ($generated@@17 ($generated@@96 $generated@@162)) $generated $generated@@163))
 :pattern ( ($generated@@160 $generated@@13 ($generated@@17 ($generated@@96 $generated@@162)) $generated $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@161 $generated@@165) (and ($generated@@65 $generated@@164) ($generated@@160 $generated@@49 $generated@@164 $generated@@52 $generated@@165))) ($generated@@160 $generated@@13 ($generated@@17 ($generated@@36 $generated@@164)) $generated $generated@@165))
 :pattern ( ($generated@@160 $generated@@13 ($generated@@17 ($generated@@36 $generated@@164)) $generated $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@161 $generated@@167) (and ($generated@@65 $generated@@166) ($generated@@160 $generated@@49 $generated@@166 $generated@@52 $generated@@167))) ($generated@@160 $generated@@14 ($generated@@19 ($generated@@40 $generated@@166)) $generated@@0 $generated@@167))
 :pattern ( ($generated@@160 $generated@@14 ($generated@@19 ($generated@@40 $generated@@166)) $generated@@0 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and ($generated@@161 $generated@@169) (and ($generated@@65 $generated@@168) ($generated@@160 $generated@@49 $generated@@168 $generated@@52 $generated@@169))) ($generated@@160 $generated@@14 ($generated@@19 ($generated@@44 $generated@@168)) $generated@@0 $generated@@169))
 :pattern ( ($generated@@160 $generated@@14 ($generated@@19 ($generated@@44 $generated@@168)) $generated@@0 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and ($generated@@161 $generated@@171) (and ($generated@@67 $generated@@170) ($generated@@160 $generated@@49 $generated@@170 $generated@@52 $generated@@171))) ($generated@@160 $generated@@13 ($generated@@17 ($generated@@36 $generated@@170)) $generated $generated@@171))
 :pattern ( ($generated@@160 $generated@@13 ($generated@@17 ($generated@@36 $generated@@170)) $generated $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@161 $generated@@173) (and ($generated@@67 $generated@@172) ($generated@@160 $generated@@49 $generated@@172 $generated@@52 $generated@@173))) ($generated@@160 $generated@@14 ($generated@@19 ($generated@@92 $generated@@172)) $generated@@0 $generated@@173))
 :pattern ( ($generated@@160 $generated@@14 ($generated@@19 ($generated@@92 $generated@@172)) $generated@@0 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and ($generated@@161 $generated@@175) ($generated@@48 $generated@@49 $generated@@174 $generated@@50)) ($generated@@160 $generated@@49 $generated@@174 $generated@@50 $generated@@175))
 :pattern ( ($generated@@160 $generated@@49 $generated@@174 $generated@@50 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and ($generated@@161 $generated@@177) ($generated@@48 $generated@@49 $generated@@176 $generated@@52)) ($generated@@160 $generated@@49 $generated@@176 $generated@@52 $generated@@177))
 :pattern ( ($generated@@160 $generated@@49 $generated@@176 $generated@@52 $generated@@177))
)))
(assert (= ($generated@@27 $generated@@50) $generated@@4))
(assert (= ($generated@@178 $generated@@50) $generated@@9))
(assert (= ($generated@@27 $generated@@52) $generated@@5))
(assert (= ($generated@@178 $generated@@52) $generated@@10))
(assert (forall (($generated@@179 Real) ) (! (= ($generated@@70 $generated@@14 ($generated@@19 ($generated@@59 $generated@@179))) ($generated@@61 $generated@@106 ($generated@@70 $generated@@14 ($generated@@19 $generated@@179))))
 :pattern ( ($generated@@70 $generated@@14 ($generated@@19 ($generated@@59 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@70 $generated@@181 ($generated@@61 $generated@@181 $generated@@180)) ($generated@@61 $generated@@106 ($generated@@70 $generated@@181 $generated@@180)))
 :pattern ( ($generated@@70 $generated@@181 ($generated@@61 $generated@@181 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! ($generated@@160 $generated@@13 $generated@@183 $generated $generated@@182)
 :pattern ( ($generated@@160 $generated@@13 $generated@@183 $generated $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! ($generated@@160 $generated@@14 $generated@@185 $generated@@0 $generated@@184)
 :pattern ( ($generated@@160 $generated@@14 $generated@@185 $generated@@0 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! ($generated@@48 $generated@@13 $generated@@186 $generated)
 :pattern ( ($generated@@48 $generated@@13 $generated@@186 $generated))
)))
(assert (forall (($generated@@187 T@U) ) (! ($generated@@48 $generated@@14 $generated@@187 $generated@@0)
 :pattern ( ($generated@@48 $generated@@14 $generated@@187 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Real)
(declare-fun $generated@@193 () Real)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Real)
(declare-fun $generated@@198 () Real)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () Real)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () Real)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () Real)
(declare-fun $generated@@206 () Real)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@220  (and (=> (= (ControlFlow 0 6) (- 0 8)) ($generated@@65 $generated@@188)) (=> ($generated@@65 $generated@@188) (=> (= $generated@@189 $generated@@188) (=> (and ($generated@@48 $generated@@49 $generated@@189 $generated@@52) (= $generated@@190 $generated@@189)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@67 $generated@@191)) (=> ($generated@@67 $generated@@191) (=> (= $generated@@192 ($generated@@92 $generated@@191)) (=> (and (and ($generated@@48 $generated@@14 ($generated@@19 $generated@@192) $generated@@0) (= $generated@@193 $generated@@192)) (and (or ($generated@@65 $generated@@190) ($generated@@67 $generated@@190)) (= (ControlFlow 0 6) (- 0 5)))) ($generated@@65 $generated@@190)))))))))))
(let (($generated@@221  (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@65 $generated@@194)) (=> ($generated@@65 $generated@@194) (=> (= $generated@@195 $generated@@194) (=> (and ($generated@@48 $generated@@49 $generated@@195 $generated@@52) (= $generated@@196 $generated@@195)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@67 $generated@@191)) (=> ($generated@@67 $generated@@191) (=> (= $generated@@197 ($generated@@92 $generated@@191)) (=> (and (and ($generated@@48 $generated@@14 ($generated@@19 $generated@@197) $generated@@0) (= $generated@@198 $generated@@197)) (and (or ($generated@@65 $generated@@196) ($generated@@67 $generated@@196)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@65 $generated@@196)))))))))))
(let (($generated@@222  (and (=> (= (ControlFlow 0 9) 2) $generated@@221) (=> (= (ControlFlow 0 9) 6) $generated@@220))))
(let (($generated@@223  (=> (and (= $generated@@194 $generated@@199) (= (ControlFlow 0 15) 9)) $generated@@222)))
(let (($generated@@224  (and (=> (= (ControlFlow 0 16) (- 0 17)) ($generated@@65 $generated@@188)) (=> ($generated@@65 $generated@@188) (=> (and (= $generated@@200 ($generated@@40 $generated@@188)) (= (ControlFlow 0 16) 15)) $generated@@223)))))
(let (($generated@@225  (=> (not ($generated@@65 $generated@@188)) (=> (and ($generated@@29 $generated@@201) ($generated@@29 $generated@@201)) (=> (and (and ($generated@@29 $generated@@201) ($generated@@29 $generated@@201)) (= $generated@@199 ($generated@@31 ($generated@@96 $generated@@201) ($generated@@85 ($generated@@96 $generated@@201)) ($generated@@59 0.0)))) (and (=> (= (ControlFlow 0 18) 16) $generated@@224) (=> (= (ControlFlow 0 18) 15) $generated@@223)))))))
(let (($generated@@226  (=> ($generated@@65 $generated@@188) (and (=> (= (ControlFlow 0 10) (- 0 14)) ($generated@@65 $generated@@188)) (=> ($generated@@65 $generated@@188) (=> (= $generated@@202 ($generated@@40 $generated@@188)) (and (=> (= (ControlFlow 0 10) (- 0 13)) ($generated@@65 $generated@@188)) (=> ($generated@@65 $generated@@188) (=> (= $generated@@203 $generated@@188) (=> (and ($generated@@48 $generated@@49 $generated@@203 $generated@@52) (= $generated@@204 $generated@@203)) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@67 $generated@@191)) (=> ($generated@@67 $generated@@191) (=> (and (and (= $generated@@205 (+ ($generated@@92 $generated@@191) 100.2)) ($generated@@48 $generated@@14 ($generated@@19 $generated@@205) $generated@@0)) (and (= $generated@@206 $generated@@205) (or ($generated@@65 $generated@@204) ($generated@@67 $generated@@204)))) (and (=> (= (ControlFlow 0 10) (- 0 11)) ($generated@@65 $generated@@204)) (=> ($generated@@65 $generated@@204) (=> (and (and (let (($generated@@227 $generated@@188))
 (or ($generated@@65 $generated@@227) ($generated@@67 $generated@@227))) (= $generated@@207 (let (($generated@@228 $generated@@188))
(let (($generated@@229 (+ ($generated@@92 $generated@@191) 100.2)))
($generated@@31 ($generated@@36 $generated@@228) $generated@@229 ($generated@@44 $generated@@228)))))) (and (= $generated@@194 $generated@@207) (= (ControlFlow 0 10) 9))) $generated@@222))))))))))))))))
(let (($generated@@230  (=> (= $generated@@208 ($generated@@104 $generated@@209 $generated@@210 $generated@@3 false)) (=> (and (= $generated@@211 $generated@@201) ($generated@@48 $generated@@49 $generated@@211 $generated@@50)) (=> (and (and (= $generated@@212 $generated@@211) ($generated@@29 $generated@@201)) (and (or ($generated@@65 $generated@@188) ($generated@@67 $generated@@188)) (= $generated@@213 (+ ($generated@@96 $generated@@201) ($generated@@36 $generated@@188))))) (=> (and (and (and ($generated@@29 $generated@@201) (or ($generated@@65 $generated@@188) ($generated@@67 $generated@@188))) (and ($generated@@48 $generated@@13 ($generated@@17 $generated@@213) $generated) (= $generated@@214 $generated@@213))) (and (and ($generated@@29 $generated@@201) (or ($generated@@65 $generated@@188) ($generated@@67 $generated@@188))) (= $generated@@215 (let (($generated@@231 (+ ($generated@@96 $generated@@201) ($generated@@36 $generated@@188))))
($generated@@80 $generated@@231))))) (and (=> (= (ControlFlow 0 19) 10) $generated@@226) (=> (= (ControlFlow 0 19) 18) $generated@@225))))))))
(let (($generated@@232  (=> (and ($generated@@161 $generated@@210) ($generated@@216 $generated@@210)) (=> (and (and (and ($generated@@48 $generated@@49 $generated@@201 $generated@@50) ($generated@@160 $generated@@49 $generated@@201 $generated@@50 $generated@@210)) ($generated@@28 $generated@@201)) (and (and ($generated@@48 $generated@@49 $generated@@188 $generated@@52) ($generated@@160 $generated@@49 $generated@@188 $generated@@52 $generated@@210)) ($generated@@83 $generated@@188))) (=> (and (and (and (and ($generated@@48 $generated@@49 $generated@@191 $generated@@52) ($generated@@160 $generated@@49 $generated@@191 $generated@@52 $generated@@210)) ($generated@@83 $generated@@191)) (and ($generated@@48 $generated@@49 $generated@@217 $generated@@50) ($generated@@160 $generated@@49 $generated@@217 $generated@@50 $generated@@210))) (and (and (and ($generated@@48 $generated@@49 $generated@@218 $generated@@52) ($generated@@160 $generated@@49 $generated@@218 $generated@@52 $generated@@210)) (= 1 $generated@@219)) (and ($generated@@67 $generated@@191) (= (ControlFlow 0 20) 19)))) $generated@@230)))))
$generated@@232))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 16) (- 17))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 8))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
