(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@38 (T@U) Int)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@48 (T@U Int) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U Int) T@U)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@57 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@T T@T) T@T)
(declare-fun $generated@@61 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@93 (T@T T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@132 (Int) T@U)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert  (and (and (= ($generated@@6 $generated@@28) 3) (= ($generated@@6 $generated@@30) 4)) (= ($generated@@6 $generated@@34) 5)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (or ($generated@@25 $generated@@36 $generated@@37) (and (< 0 $generated@@23) (and (and (and (or (not (= $generated@@36 $generated@@26)) (not true)) ($generated@@27 $generated@@28 $generated@@36 $generated@@29)) ($generated@@27 $generated@@30 $generated@@37 ($generated@@31 $generated))) (not ($generated@@32 $generated@@37 $generated@@33))))) ($generated@@27 $generated@@34 ($generated@@24 $generated@@35 $generated@@36 $generated@@37) $generated))
 :pattern ( ($generated@@24 $generated@@35 $generated@@36 $generated@@37))
))))
(assert (= ($generated@@38 $generated@@33) 0))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@41 $generated@@39)  (or (= $generated@@41 $generated@@26) (= ($generated@@40 $generated@@41) $generated@@39)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@41 $generated@@39))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@42 $generated@@28 $generated@@43 $generated@@29 $generated@@44) ($generated@@42 $generated@@28 $generated@@43 $generated@@39 $generated@@44))
 :pattern ( ($generated@@42 $generated@@28 $generated@@43 $generated@@29 $generated@@44))
 :pattern ( ($generated@@42 $generated@@28 $generated@@43 $generated@@39 $generated@@44))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (or ($generated@@25 ($generated@@46 $generated@@28 $generated@@53) ($generated@@46 $generated@@30 $generated@@54)) (and (< 0 $generated@@23) (and (and (and (or (not (= $generated@@53 $generated@@26)) (not true)) ($generated@@27 $generated@@28 $generated@@53 $generated@@29)) ($generated@@27 $generated@@30 $generated@@54 ($generated@@31 $generated))) (not ($generated@@32 $generated@@54 $generated@@33))))) (and (=> (or (not (= ($generated@@38 ($generated@@46 $generated@@30 $generated@@54)) ($generated@@47 1))) (not true)) ($generated@@25 ($generated@@46 $generated@@28 $generated@@53) ($generated@@46 $generated@@30 ($generated@@48 ($generated@@46 $generated@@30 $generated@@54) ($generated@@47 1))))) (= ($generated@@24 ($generated@@45 $generated@@52) ($generated@@46 $generated@@28 $generated@@53) ($generated@@46 $generated@@30 $generated@@54)) (let (($generated@@55 ($generated@@49 $generated@@34 ($generated@@50 ($generated@@46 $generated@@30 $generated@@54) ($generated@@47 0)))))
(ite (= ($generated@@38 ($generated@@46 $generated@@30 $generated@@54)) ($generated@@47 1)) $generated@@55 (let (($generated@@56 ($generated@@46 $generated@@34 ($generated@@24 ($generated@@45 $generated@@52) ($generated@@46 $generated@@28 $generated@@53) ($generated@@46 $generated@@30 ($generated@@48 ($generated@@46 $generated@@30 $generated@@54) ($generated@@47 1)))))))
(ite (< ($generated@@51 $generated@@56) ($generated@@51 $generated@@55)) $generated@@56 $generated@@55)))))))
 :weight 3
 :pattern ( ($generated@@24 ($generated@@45 $generated@@52) ($generated@@46 $generated@@28 $generated@@53) ($generated@@46 $generated@@30 $generated@@54)))
))))
(assert  (and (and (and (and (and (and (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@57 $generated@@64 $generated@@65 ($generated@@61 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@68) $generated@@66)
 :weight 0
)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (or (= $generated@@73 $generated@@74) (= ($generated@@57 $generated@@69 $generated@@70 ($generated@@61 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@74) ($generated@@57 $generated@@69 $generated@@70 $generated@@72 $generated@@74)))
 :weight 0
))) (= ($generated@@6 $generated@@58) 6)) (= ($generated@@6 $generated@@59) 7)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@6 ($generated@@60 $generated@@75 $generated@@76)) 8))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@62 ($generated@@60 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@60 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@63 ($generated@@60 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@60 $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@42 $generated@@28 $generated@@81 $generated@@39 $generated@@82)  (or (= $generated@@81 $generated@@26) ($generated@@11 ($generated@@49 $generated@@7 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@28 ($generated@@60 $generated@@58 $generated@@59) $generated@@82 $generated@@81) $generated@@2)))))
 :pattern ( ($generated@@42 $generated@@28 $generated@@81 $generated@@39 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 Int) ) (!  (=> (= $generated@@84 0) (= ($generated@@48 $generated@@83 $generated@@84) $generated@@83))
 :pattern ( ($generated@@48 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@47 $generated@@85) $generated@@85)
 :pattern ( ($generated@@47 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@46 $generated@@87 $generated@@86) $generated@@86)
 :pattern ( ($generated@@46 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 Int) ) (!  (=> (and (<= 0 $generated@@89) (<= $generated@@89 ($generated@@38 $generated@@88))) (= ($generated@@38 ($generated@@48 $generated@@88 $generated@@89)) (- ($generated@@38 $generated@@88) $generated@@89)))
 :pattern ( ($generated@@38 ($generated@@48 $generated@@88 $generated@@89)))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@32 $generated@@90 $generated@@91)  (and (= ($generated@@38 $generated@@90) ($generated@@38 $generated@@91)) (forall (($generated@@92 Int) ) (!  (=> (and (<= 0 $generated@@92) (< $generated@@92 ($generated@@38 $generated@@90))) (= ($generated@@50 $generated@@90 $generated@@92) ($generated@@50 $generated@@91 $generated@@92)))
 :pattern ( ($generated@@50 $generated@@90 $generated@@92))
 :pattern ( ($generated@@50 $generated@@91 $generated@@92))
))))
 :pattern ( ($generated@@32 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@93 $generated@@95 ($generated@@49 $generated@@95 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@49 $generated@@95 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@100 $generated@@97) $generated@@98 $generated@@99) ($generated@@42 $generated@@100 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@96 ($generated@@93 $generated@@100 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 Int) ($generated@@103 Int) ) (!  (=> (and (and (<= 0 $generated@@102) (<= 0 $generated@@103)) (< $generated@@103 (- ($generated@@38 $generated@@101) $generated@@102))) (= ($generated@@50 ($generated@@48 $generated@@101 $generated@@102) $generated@@103) ($generated@@50 $generated@@101 (+ $generated@@103 $generated@@102))))
 :weight 25
 :pattern ( ($generated@@50 ($generated@@48 $generated@@101 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@104 $generated@@105 $generated@@39) (and (= ($generated@@93 $generated@@28 ($generated@@49 $generated@@28 $generated@@105)) $generated@@105) ($generated@@27 $generated@@28 ($generated@@49 $generated@@28 $generated@@105) $generated@@39)))
 :pattern ( ($generated@@104 $generated@@105 $generated@@39))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@104 $generated@@106 $generated@@29) (and (= ($generated@@93 $generated@@28 ($generated@@49 $generated@@28 $generated@@106)) $generated@@106) ($generated@@27 $generated@@28 ($generated@@49 $generated@@28 $generated@@106) $generated@@29)))
 :pattern ( ($generated@@104 $generated@@106 $generated@@29))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@107 $generated@@29)  (and ($generated@@27 $generated@@28 $generated@@107 $generated@@39) (or (not (= $generated@@107 $generated@@26)) (not true))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@107 $generated@@29))
 :pattern ( ($generated@@27 $generated@@28 $generated@@107 $generated@@39))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@24 ($generated@@45 $generated@@108) $generated@@109 $generated@@110) ($generated@@24 $generated@@108 $generated@@109 $generated@@110))
 :pattern ( ($generated@@24 ($generated@@45 $generated@@108) $generated@@109 $generated@@110))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@25 $generated@@112 ($generated@@46 $generated@@30 $generated@@113)) (and (< 0 $generated@@23) (and (and (and (or (not (= $generated@@112 $generated@@26)) (not true)) ($generated@@27 $generated@@28 $generated@@112 $generated@@29)) ($generated@@27 $generated@@30 $generated@@113 ($generated@@31 $generated))) (not ($generated@@32 $generated@@113 $generated@@33))))) (and (=> (or (not (= ($generated@@38 ($generated@@46 $generated@@30 $generated@@113)) ($generated@@47 1))) (not true)) ($generated@@25 $generated@@112 ($generated@@46 $generated@@30 ($generated@@48 ($generated@@46 $generated@@30 $generated@@113) ($generated@@47 1))))) (= ($generated@@24 ($generated@@45 $generated@@111) $generated@@112 ($generated@@46 $generated@@30 $generated@@113)) (let (($generated@@114 ($generated@@49 $generated@@34 ($generated@@50 ($generated@@46 $generated@@30 $generated@@113) ($generated@@47 0)))))
(ite (= ($generated@@38 ($generated@@46 $generated@@30 $generated@@113)) ($generated@@47 1)) $generated@@114 (let (($generated@@115 ($generated@@24 ($generated@@45 $generated@@111) $generated@@112 ($generated@@46 $generated@@30 ($generated@@48 ($generated@@46 $generated@@30 $generated@@113) ($generated@@47 1))))))
(ite (< ($generated@@51 $generated@@115) ($generated@@51 $generated@@114)) $generated@@115 $generated@@114)))))))
 :weight 3
 :pattern ( ($generated@@24 ($generated@@45 $generated@@111) $generated@@112 ($generated@@46 $generated@@30 $generated@@113)))
))))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> ($generated@@32 $generated@@116 $generated@@117) (= $generated@@116 $generated@@117))
 :pattern ( ($generated@@32 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@104 $generated@@118 $generated) (and (= ($generated@@93 $generated@@34 ($generated@@49 $generated@@34 $generated@@118)) $generated@@118) ($generated@@27 $generated@@34 ($generated@@49 $generated@@34 $generated@@118) $generated)))
 :pattern ( ($generated@@104 $generated@@118 $generated))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@104 ($generated@@93 $generated@@121 $generated@@119) $generated@@120) ($generated@@27 $generated@@121 $generated@@119 $generated@@120))
 :pattern ( ($generated@@104 ($generated@@93 $generated@@121 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! (<= 0 ($generated@@38 $generated@@122))
 :pattern ( ($generated@@38 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@42 $generated@@30 $generated@@123 ($generated@@31 $generated@@124) $generated@@125) (forall (($generated@@126 Int) ) (!  (=> (and (<= 0 $generated@@126) (< $generated@@126 ($generated@@38 $generated@@123))) ($generated@@96 ($generated@@50 $generated@@123 $generated@@126) $generated@@124 $generated@@125))
 :pattern ( ($generated@@50 $generated@@123 $generated@@126))
)))
 :pattern ( ($generated@@42 $generated@@30 $generated@@123 ($generated@@31 $generated@@124) $generated@@125))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@31 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@31 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@22 ($generated@@31 $generated@@129)) $generated@@1)
 :pattern ( ($generated@@31 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@49 $generated@@131 ($generated@@93 $generated@@131 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@93 $generated@@131 $generated@@130))
)))
(assert (forall (($generated@@133 Int) ) (!  (=> (or (and (<= 0 $generated@@133) (< $generated@@133 55296)) (and (<= 57344 $generated@@133) (< $generated@@133 1114112))) (= ($generated@@51 ($generated@@132 $generated@@133)) $generated@@133))
 :pattern ( ($generated@@132 $generated@@133))
)))
(assert  (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@134 $generated@@137 $generated@@138 $generated@@139 ($generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@142 $generated@@143) $generated@@140)
 :weight 0
)) (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@134 $generated@@144 $generated@@145 $generated@@146 ($generated@@136 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@134 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@134 $generated@@153 $generated@@154 $generated@@155 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@134 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Bool) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@11 ($generated@@134 $generated@@28 $generated@@58 $generated@@7 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@162)) (not true)) ($generated@@11 ($generated@@49 $generated@@7 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@28 ($generated@@60 $generated@@58 $generated@@59) $generated@@163 $generated@@166) $generated@@164)))) $generated@@165))
 :pattern ( ($generated@@134 $generated@@28 $generated@@58 $generated@@7 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@104 $generated@@168 ($generated@@31 $generated@@169)) (and (= ($generated@@93 $generated@@30 ($generated@@49 $generated@@30 $generated@@168)) $generated@@168) ($generated@@27 $generated@@30 ($generated@@49 $generated@@30 $generated@@168) ($generated@@31 $generated@@169))))
 :pattern ( ($generated@@104 $generated@@168 ($generated@@31 $generated@@169)))
)))
(assert (forall (($generated@@170 T@U) ) (!  (and (= ($generated@@132 ($generated@@51 $generated@@170)) $generated@@170) (or (and (<= 0 ($generated@@51 $generated@@170)) (< ($generated@@51 $generated@@170) 55296)) (and (<= 57344 ($generated@@51 $generated@@170)) (< ($generated@@51 $generated@@170) 1114112))))
 :pattern ( ($generated@@51 $generated@@170))
)))
(assert (= ($generated@@22 $generated@@39) $generated@@3))
(assert (= ($generated@@171 $generated@@39) $generated@@5))
(assert (= ($generated@@22 $generated@@29) $generated@@4))
(assert (= ($generated@@171 $generated@@29) $generated@@5))
(assert (forall (($generated@@172 T@U) ($generated@@173 Int) ($generated@@174 Int) ) (!  (=> (and (and (<= 0 $generated@@173) (<= $generated@@173 $generated@@174)) (< $generated@@174 ($generated@@38 $generated@@172))) (= ($generated@@50 ($generated@@48 $generated@@172 $generated@@173) (- $generated@@174 $generated@@173)) ($generated@@50 $generated@@172 $generated@@174)))
 :weight 25
 :pattern ( ($generated@@50 $generated@@172 $generated@@174) ($generated@@48 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 Int) ($generated@@177 Int) ) (!  (=> (and (and (<= 0 $generated@@176) (<= 0 $generated@@177)) (<= (+ $generated@@176 $generated@@177) ($generated@@38 $generated@@175))) (= ($generated@@48 ($generated@@48 $generated@@175 $generated@@176) $generated@@177) ($generated@@48 $generated@@175 (+ $generated@@176 $generated@@177))))
 :pattern ( ($generated@@48 ($generated@@48 $generated@@175 $generated@@176) $generated@@177))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (or ($generated@@25 $generated@@179 $generated@@180) (and (< 0 $generated@@23) (and (and (and (or (not (= $generated@@179 $generated@@26)) (not true)) ($generated@@27 $generated@@28 $generated@@179 $generated@@29)) ($generated@@27 $generated@@30 $generated@@180 ($generated@@31 $generated))) (not ($generated@@32 $generated@@180 $generated@@33))))) (and (=> (or (not (= ($generated@@38 $generated@@180) ($generated@@47 1))) (not true)) ($generated@@25 $generated@@179 ($generated@@48 $generated@@180 ($generated@@47 1)))) (= ($generated@@24 ($generated@@45 $generated@@178) $generated@@179 $generated@@180) (let (($generated@@181 ($generated@@49 $generated@@34 ($generated@@50 $generated@@180 ($generated@@47 0)))))
(ite (= ($generated@@38 $generated@@180) ($generated@@47 1)) $generated@@181 (let (($generated@@182 ($generated@@24 $generated@@178 $generated@@179 ($generated@@48 $generated@@180 ($generated@@47 1)))))
(ite (< ($generated@@51 $generated@@182) ($generated@@51 $generated@@181)) $generated@@182 $generated@@181)))))))
 :pattern ( ($generated@@24 ($generated@@45 $generated@@178) $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@183 Int) ) (! (= ($generated@@93 $generated@@8 ($generated@@12 ($generated@@47 $generated@@183))) ($generated@@46 $generated@@59 ($generated@@93 $generated@@8 ($generated@@12 $generated@@183))))
 :pattern ( ($generated@@93 $generated@@8 ($generated@@12 ($generated@@47 $generated@@183))))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@T) ) (! (= ($generated@@93 $generated@@185 ($generated@@46 $generated@@185 $generated@@184)) ($generated@@46 $generated@@59 ($generated@@93 $generated@@185 $generated@@184)))
 :pattern ( ($generated@@93 $generated@@185 ($generated@@46 $generated@@185 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ) (!  (=> (= ($generated@@38 $generated@@186) 0) (= $generated@@186 $generated@@33))
 :pattern ( ($generated@@38 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! ($generated@@42 $generated@@34 $generated@@188 $generated $generated@@187)
 :pattern ( ($generated@@42 $generated@@34 $generated@@188 $generated $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@27 $generated@@30 $generated@@189 ($generated@@31 $generated@@190)) (forall (($generated@@191 Int) ) (!  (=> (and (<= 0 $generated@@191) (< $generated@@191 ($generated@@38 $generated@@189))) ($generated@@104 ($generated@@50 $generated@@189 $generated@@191) $generated@@190))
 :pattern ( ($generated@@50 $generated@@189 $generated@@191))
)))
 :pattern ( ($generated@@27 $generated@@30 $generated@@189 ($generated@@31 $generated@@190)))
)))
(assert (forall (($generated@@192 T@U) ) (! ($generated@@27 $generated@@34 $generated@@192 $generated)
 :pattern ( ($generated@@27 $generated@@34 $generated@@192 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@201 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@202 true))
(let (($generated@@203  (=> (and (and (<= ($generated@@47 0) $generated@@193) (< $generated@@193 ($generated@@38 $generated@@194))) (and ($generated@@96 ($generated@@93 $generated@@28 $generated@@195) $generated@@39 $generated@@196) ($generated@@42 $generated@@30 $generated@@194 ($generated@@31 $generated) $generated@@196))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not ($generated@@32 $generated@@194 $generated@@33))) (=> (and (not ($generated@@32 $generated@@194 $generated@@33)) ($generated@@25 $generated@@195 $generated@@194)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 $generated@@193) (< $generated@@193 ($generated@@38 $generated@@194)))) (=> (and (<= 0 $generated@@193) (< $generated@@193 ($generated@@38 $generated@@194))) (=> (and (<= ($generated@@51 ($generated@@24 ($generated@@45 $generated@@197) $generated@@195 $generated@@194)) ($generated@@51 ($generated@@49 $generated@@34 ($generated@@50 $generated@@194 $generated@@193)))) (= (ControlFlow 0 3) 1)) $generated@@202))))))))
(let (($generated@@204  (=> (and (< $generated@@193 ($generated@@47 0)) (= (ControlFlow 0 7) 3)) $generated@@203)))
(let (($generated@@205  (=> (and (<= ($generated@@47 0) $generated@@193) (= (ControlFlow 0 6) 3)) $generated@@203)))
(let (($generated@@206  (=> (and (=> (and (<= ($generated@@47 0) $generated@@193) (< $generated@@193 ($generated@@38 $generated@@194))) (<= ($generated@@51 ($generated@@24 ($generated@@45 $generated@@197) $generated@@195 $generated@@194)) ($generated@@51 ($generated@@49 $generated@@34 ($generated@@50 $generated@@194 $generated@@193))))) (= (ControlFlow 0 2) 1)) $generated@@202)))
(let (($generated@@207  (=> (and (= $generated@@198 ($generated@@135 $generated@@26 $generated@@199 $generated@@2 false)) (or (not (= ($generated@@38 $generated@@194) 0)) (not true))) (=> (and (and ($generated@@200 $generated@@196) ($generated@@201 $generated@@196)) (= $generated@@199 $generated@@196)) (and (and (=> (= (ControlFlow 0 8) 2) $generated@@206) (=> (= (ControlFlow 0 8) 6) $generated@@205)) (=> (= (ControlFlow 0 8) 7) $generated@@204))))))
(let (($generated@@208  (=> (and (and (and ($generated@@200 $generated@@199) ($generated@@201 $generated@@199)) (and (or (not (= $generated@@195 $generated@@26)) (not true)) (and ($generated@@27 $generated@@28 $generated@@195 $generated@@29) ($generated@@42 $generated@@28 $generated@@195 $generated@@29 $generated@@199)))) (and (and ($generated@@27 $generated@@30 $generated@@194 ($generated@@31 $generated)) ($generated@@42 $generated@@30 $generated@@194 ($generated@@31 $generated) $generated@@199)) (and (= 1 $generated@@23) (= (ControlFlow 0 9) 8)))) $generated@@207)))
$generated@@208))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
