(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 (T@T) Int)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 (Bool) T@U)
(declare-fun $generated@@21 (T@U) Bool)
(declare-fun $generated@@22 (Int) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (Real) T@U)
(declare-fun $generated@@25 (T@U) Real)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@T T@T) T@T)
(declare-fun $generated@@66 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@U T@U) Bool)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@121 (T@U) Bool)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@16 $generated@@17) 0) (= ($generated@@16 $generated@@18) 1)) (= ($generated@@16 $generated@@19) 2)) (forall (($generated@@26 Bool) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Int) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Real) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15)
)
(assert (= ($generated@@32 $generated@@0) 0))
(assert (= ($generated@@33 $generated@@0) $generated@@1))
(assert (= ($generated@@16 $generated@@35) 3))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@39 $generated@@36)  (or (= $generated@@39 $generated@@37) (= ($generated@@38 $generated@@39) $generated@@36)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@39 $generated@@36))
)))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@41 $generated@@40)  (or (= $generated@@41 $generated@@37) (= ($generated@@38 $generated@@41) $generated@@40)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@41 $generated@@40))
)))
(assert (forall (($generated@@43 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@43 $generated@@42)  (or (= $generated@@43 $generated@@37) (= ($generated@@38 $generated@@43) $generated@@42)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@44 $generated@@35 $generated@@47 $generated@@45 $generated@@48) ($generated@@44 $generated@@35 $generated@@47 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@35 $generated@@47 $generated@@45 $generated@@48))
 :pattern ( ($generated@@44 $generated@@35 $generated@@47 $generated@@46 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@44 $generated@@35 $generated@@50 $generated@@49 $generated@@51) ($generated@@44 $generated@@35 $generated@@50 $generated@@36 $generated@@51))
 :pattern ( ($generated@@44 $generated@@35 $generated@@50 $generated@@49 $generated@@51))
 :pattern ( ($generated@@44 $generated@@35 $generated@@50 $generated@@36 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@44 $generated@@35 $generated@@53 $generated@@52 $generated@@54) ($generated@@44 $generated@@35 $generated@@53 $generated@@40 $generated@@54))
 :pattern ( ($generated@@44 $generated@@35 $generated@@53 $generated@@52 $generated@@54))
 :pattern ( ($generated@@44 $generated@@35 $generated@@53 $generated@@40 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@44 $generated@@35 $generated@@56 $generated@@55 $generated@@57) ($generated@@44 $generated@@35 $generated@@56 $generated@@42 $generated@@57))
 :pattern ( ($generated@@44 $generated@@35 $generated@@56 $generated@@55 $generated@@57))
 :pattern ( ($generated@@44 $generated@@35 $generated@@56 $generated@@42 $generated@@57))
)))
(assert (= ($generated@@32 $generated@@58) 0))
(assert (= ($generated@@59 $generated@@4 $generated@@15) $generated@@58))
(assert  (not ($generated@@60 $generated@@58)))
(assert  (and (and (and (and (and (and (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@62 $generated@@69 $generated@@70 ($generated@@66 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@73) $generated@@71)
 :weight 0
)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (or (= $generated@@78 $generated@@79) (= ($generated@@62 $generated@@74 $generated@@75 ($generated@@66 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@76) $generated@@79) ($generated@@62 $generated@@74 $generated@@75 $generated@@77 $generated@@79)))
 :weight 0
))) (= ($generated@@16 $generated@@63) 4)) (= ($generated@@16 $generated@@64) 5)) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@16 ($generated@@65 $generated@@80 $generated@@81)) 6))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@67 ($generated@@65 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@65 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@68 ($generated@@65 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@65 $generated@@84 $generated@@85))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@44 $generated@@35 $generated@@86 $generated@@46 $generated@@87)  (or (= $generated@@86 $generated@@37) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@35 ($generated@@65 $generated@@63 $generated@@64) $generated@@87 $generated@@86) $generated@@0)))))
 :pattern ( ($generated@@44 $generated@@35 $generated@@86 $generated@@46 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@44 $generated@@35 $generated@@88 $generated@@36 $generated@@89)  (or (= $generated@@88 $generated@@37) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@35 ($generated@@65 $generated@@63 $generated@@64) $generated@@89 $generated@@88) $generated@@0)))))
 :pattern ( ($generated@@44 $generated@@35 $generated@@88 $generated@@36 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@44 $generated@@35 $generated@@90 $generated@@40 $generated@@91)  (or (= $generated@@90 $generated@@37) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@35 ($generated@@65 $generated@@63 $generated@@64) $generated@@91 $generated@@90) $generated@@0)))))
 :pattern ( ($generated@@44 $generated@@35 $generated@@90 $generated@@40 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@44 $generated@@35 $generated@@92 $generated@@42 $generated@@93)  (or (= $generated@@92 $generated@@37) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@35 ($generated@@65 $generated@@63 $generated@@64) $generated@@93 $generated@@92) $generated@@0)))))
 :pattern ( ($generated@@44 $generated@@35 $generated@@92 $generated@@42 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 ($generated@@61 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@61 $generated@@96 $generated@@95))
)))
(assert (= ($generated@@16 $generated@@97) 7))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@34 $generated@@97 $generated@@101 ($generated@@98 $generated@@102)) (forall (($generated@@103 T@U) ) (!  (=> ($generated@@99 $generated@@101 $generated@@103) ($generated@@100 $generated@@103 $generated@@102))
 :pattern ( ($generated@@99 $generated@@101 $generated@@103))
)))
 :pattern ( ($generated@@34 $generated@@97 $generated@@101 ($generated@@98 $generated@@102)))
)))
(assert ($generated@@60 $generated@@0))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@104 ($generated@@94 $generated@@108 $generated@@105) $generated@@106 $generated@@107) ($generated@@44 $generated@@108 $generated@@105 $generated@@106 $generated@@107))
 :pattern ( ($generated@@104 ($generated@@94 $generated@@108 $generated@@105) $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@100 $generated@@109 $generated@@46) (and (= ($generated@@94 $generated@@35 ($generated@@61 $generated@@35 $generated@@109)) $generated@@109) ($generated@@34 $generated@@35 ($generated@@61 $generated@@35 $generated@@109) $generated@@46)))
 :pattern ( ($generated@@100 $generated@@109 $generated@@46))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@100 $generated@@110 $generated@@45) (and (= ($generated@@94 $generated@@35 ($generated@@61 $generated@@35 $generated@@110)) $generated@@110) ($generated@@34 $generated@@35 ($generated@@61 $generated@@35 $generated@@110) $generated@@45)))
 :pattern ( ($generated@@100 $generated@@110 $generated@@45))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@100 $generated@@111 $generated@@36) (and (= ($generated@@94 $generated@@35 ($generated@@61 $generated@@35 $generated@@111)) $generated@@111) ($generated@@34 $generated@@35 ($generated@@61 $generated@@35 $generated@@111) $generated@@36)))
 :pattern ( ($generated@@100 $generated@@111 $generated@@36))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@100 $generated@@112 $generated@@42) (and (= ($generated@@94 $generated@@35 ($generated@@61 $generated@@35 $generated@@112)) $generated@@112) ($generated@@34 $generated@@35 ($generated@@61 $generated@@35 $generated@@112) $generated@@42)))
 :pattern ( ($generated@@100 $generated@@112 $generated@@42))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@100 $generated@@113 $generated@@49) (and (= ($generated@@94 $generated@@35 ($generated@@61 $generated@@35 $generated@@113)) $generated@@113) ($generated@@34 $generated@@35 ($generated@@61 $generated@@35 $generated@@113) $generated@@49)))
 :pattern ( ($generated@@100 $generated@@113 $generated@@49))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@100 $generated@@114 $generated@@52) (and (= ($generated@@94 $generated@@35 ($generated@@61 $generated@@35 $generated@@114)) $generated@@114) ($generated@@34 $generated@@35 ($generated@@61 $generated@@35 $generated@@114) $generated@@52)))
 :pattern ( ($generated@@100 $generated@@114 $generated@@52))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@100 $generated@@115 $generated@@40) (and (= ($generated@@94 $generated@@35 ($generated@@61 $generated@@35 $generated@@115)) $generated@@115) ($generated@@34 $generated@@35 ($generated@@61 $generated@@35 $generated@@115) $generated@@40)))
 :pattern ( ($generated@@100 $generated@@115 $generated@@40))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@100 $generated@@116 $generated@@55) (and (= ($generated@@94 $generated@@35 ($generated@@61 $generated@@35 $generated@@116)) $generated@@116) ($generated@@34 $generated@@35 ($generated@@61 $generated@@35 $generated@@116) $generated@@55)))
 :pattern ( ($generated@@100 $generated@@116 $generated@@55))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@117 $generated@@45)  (and ($generated@@34 $generated@@35 $generated@@117 $generated@@46) (or (not (= $generated@@117 $generated@@37)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@117 $generated@@45))
 :pattern ( ($generated@@34 $generated@@35 $generated@@117 $generated@@46))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@118 $generated@@49)  (and ($generated@@34 $generated@@35 $generated@@118 $generated@@36) (or (not (= $generated@@118 $generated@@37)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@118 $generated@@49))
 :pattern ( ($generated@@34 $generated@@35 $generated@@118 $generated@@36))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@119 $generated@@52)  (and ($generated@@34 $generated@@35 $generated@@119 $generated@@40) (or (not (= $generated@@119 $generated@@37)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@119 $generated@@52))
 :pattern ( ($generated@@34 $generated@@35 $generated@@119 $generated@@40))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@120 $generated@@55)  (and ($generated@@34 $generated@@35 $generated@@120 $generated@@42) (or (not (= $generated@@120 $generated@@37)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@120 $generated@@55))
 :pattern ( ($generated@@34 $generated@@35 $generated@@120 $generated@@42))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (and ($generated@@121 $generated@@122) (and (or (not (= $generated@@123 $generated@@37)) (not true)) (= ($generated@@38 $generated@@123) $generated@@36))) ($generated@@34 $generated@@97 ($generated@@61 $generated@@97 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@35 ($generated@@65 $generated@@63 $generated@@64) $generated@@122 $generated@@123) $generated@@58)) ($generated@@98 $generated@@42)))
 :pattern ( ($generated@@61 $generated@@97 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@35 ($generated@@65 $generated@@63 $generated@@64) $generated@@122 $generated@@123) $generated@@58)))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (and (and ($generated@@121 $generated@@124) (and (or (not (= $generated@@125 $generated@@37)) (not true)) (= ($generated@@38 $generated@@125) $generated@@36))) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@35 ($generated@@65 $generated@@63 $generated@@64) $generated@@124 $generated@@125) $generated@@0)))) ($generated@@44 $generated@@97 ($generated@@61 $generated@@97 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@35 ($generated@@65 $generated@@63 $generated@@64) $generated@@124 $generated@@125) $generated@@58)) ($generated@@98 $generated@@42) $generated@@124))
 :pattern ( ($generated@@61 $generated@@97 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@35 ($generated@@65 $generated@@63 $generated@@64) $generated@@124 $generated@@125) $generated@@58)))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (and (= ($generated@@126 ($generated@@59 $generated@@127 $generated@@128)) $generated@@127) (= ($generated@@33 ($generated@@59 $generated@@127 $generated@@128)) $generated@@128))
 :pattern ( ($generated@@59 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@100 ($generated@@94 $generated@@131 $generated@@129) $generated@@130) ($generated@@34 $generated@@131 $generated@@129 $generated@@130))
 :pattern ( ($generated@@100 ($generated@@94 $generated@@131 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@44 $generated@@97 $generated@@132 ($generated@@98 $generated@@133) $generated@@134) (forall (($generated@@135 T@U) ) (!  (=> ($generated@@99 $generated@@132 $generated@@135) ($generated@@104 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@99 $generated@@132 $generated@@135))
)))
 :pattern ( ($generated@@44 $generated@@97 $generated@@132 ($generated@@98 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! ($generated@@34 $generated@@35 $generated@@136 $generated@@46)
 :pattern ( ($generated@@34 $generated@@35 $generated@@136 $generated@@46))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@137 ($generated@@98 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@98 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@98 $generated@@140)) $generated)
 :pattern ( ($generated@@98 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@61 $generated@@142 ($generated@@94 $generated@@142 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@94 $generated@@142 $generated@@141))
)))
(assert  (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@143 $generated@@146 $generated@@147 $generated@@148 ($generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@151 $generated@@152) $generated@@149)
 :weight 0
)) (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@143 $generated@@153 $generated@@154 $generated@@155 ($generated@@145 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@143 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@143 $generated@@162 $generated@@163 $generated@@164 ($generated@@145 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@143 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@21 ($generated@@143 $generated@@35 $generated@@63 $generated@@17 ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@35 ($generated@@65 $generated@@63 $generated@@64) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@143 $generated@@35 $generated@@63 $generated@@17 ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@100 $generated@@177 ($generated@@98 $generated@@178)) (and (= ($generated@@94 $generated@@97 ($generated@@61 $generated@@97 $generated@@177)) $generated@@177) ($generated@@34 $generated@@97 ($generated@@61 $generated@@97 $generated@@177) ($generated@@98 $generated@@178))))
 :pattern ( ($generated@@100 $generated@@177 ($generated@@98 $generated@@178)))
)))
(assert (= ($generated@@139 $generated@@46) $generated@@2))
(assert (= ($generated@@179 $generated@@46) $generated@@11))
(assert (= ($generated@@139 $generated@@45) $generated@@3))
(assert (= ($generated@@179 $generated@@45) $generated@@11))
(assert (= ($generated@@139 $generated@@36) $generated@@5))
(assert (= ($generated@@179 $generated@@36) $generated@@12))
(assert (= ($generated@@139 $generated@@42) $generated@@6))
(assert (= ($generated@@179 $generated@@42) $generated@@13))
(assert (= ($generated@@139 $generated@@49) $generated@@7))
(assert (= ($generated@@179 $generated@@49) $generated@@12))
(assert (= ($generated@@139 $generated@@52) $generated@@8))
(assert (= ($generated@@179 $generated@@52) $generated@@14))
(assert (= ($generated@@139 $generated@@40) $generated@@9))
(assert (= ($generated@@179 $generated@@40) $generated@@14))
(assert (= ($generated@@139 $generated@@55) $generated@@10))
(assert (= ($generated@@179 $generated@@55) $generated@@13))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@188  (=> (= $generated@@180 ($generated@@144 $generated@@37 $generated@@181 $generated@@0 false)) (=> (and (= $generated@@182 ($generated@@61 $generated@@97 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@35 ($generated@@65 $generated@@63 $generated@@64) $generated@@181 $generated@@183) $generated@@58))) (= (ControlFlow 0 2) (- 0 1))) (not ($generated@@99 $generated@@182 ($generated@@94 $generated@@35 $generated@@184)))))))
(let (($generated@@189  (=> (and ($generated@@121 $generated@@181) ($generated@@185 $generated@@181)) (=> (and (and (or (not (= $generated@@183 $generated@@37)) (not true)) (and ($generated@@34 $generated@@35 $generated@@183 $generated@@49) ($generated@@44 $generated@@35 $generated@@183 $generated@@49 $generated@@181))) (and ($generated@@34 $generated@@35 $generated@@184 $generated@@40) ($generated@@44 $generated@@35 $generated@@184 $generated@@40 $generated@@181))) (=> (and (and (and ($generated@@34 $generated@@97 $generated@@186 ($generated@@98 $generated@@46)) ($generated@@44 $generated@@97 $generated@@186 ($generated@@98 $generated@@46) $generated@@181)) true) (and (= 0 $generated@@187) (= (ControlFlow 0 3) 2))) $generated@@188)))))
$generated@@189)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
