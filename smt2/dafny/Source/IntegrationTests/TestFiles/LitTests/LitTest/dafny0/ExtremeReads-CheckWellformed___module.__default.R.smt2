(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (Int) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@38 () Int)
(declare-fun $generated@@39 (T@U T@U T@U) Bool)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@47 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T T@T) T@T)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@78 (Int) Int)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ($generated@@25 T@U) ) (!  (=> (and ($generated@@22 $generated@@23 $generated@@24) ($generated@@22 $generated@@24 $generated@@25)) ($generated@@22 $generated@@23 $generated@@25))
 :pattern ( ($generated@@22 $generated@@23 $generated@@24) ($generated@@22 $generated@@24 $generated@@25))
 :pattern ( ($generated@@22 $generated@@23 $generated@@24) ($generated@@22 $generated@@23 $generated@@25))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 Int) ($generated@@31 Int) ) (!  (=> (and (and (<= 0 $generated@@30) (<= 0 $generated@@31)) (<= (+ $generated@@30 $generated@@31) ($generated@@28 $generated@@29))) (= ($generated@@26 ($generated@@26 $generated@@29 ($generated@@27 $generated@@30)) ($generated@@27 $generated@@31)) ($generated@@26 $generated@@29 ($generated@@27 (+ $generated@@30 $generated@@31)))))
 :pattern ( ($generated@@26 ($generated@@26 $generated@@29 ($generated@@27 $generated@@30)) ($generated@@27 $generated@@31)))
)))
(assert (= ($generated@@5 $generated@@33) 3))
(assert (forall (($generated@@37 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@37 $generated@@34)  (or (= $generated@@37 $generated@@35) (= ($generated@@36 $generated@@37) $generated@@34)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@37 $generated@@34))
)))
(assert  (=> (<= 1 $generated@@38) (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@44) ($generated@@32 $generated@@33 $generated@@45 $generated@@34)) ($generated@@39 ($generated@@40 $generated@@43) $generated@@44 $generated@@45)) (forall (($generated@@46 T@U) ) (! ($generated@@42 ($generated@@40 $generated@@43) $generated@@44 $generated@@46 $generated@@45)
 :pattern ( ($generated@@42 ($generated@@40 $generated@@43) $generated@@44 $generated@@46 $generated@@45))
)))
 :pattern ( ($generated@@39 ($generated@@40 $generated@@43) $generated@@44 $generated@@45))
))))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@47 $generated@@33 $generated@@49 $generated@@48 $generated@@50) ($generated@@47 $generated@@33 $generated@@49 $generated@@34 $generated@@50))
 :pattern ( ($generated@@47 $generated@@33 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@47 $generated@@33 $generated@@49 $generated@@34 $generated@@50))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@52 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@52 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@52 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@5 $generated@@53) 4)) (= ($generated@@5 $generated@@54) 5)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@5 ($generated@@55 $generated@@70 $generated@@71)) 6))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@55 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@55 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@55 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@55 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@47 $generated@@33 $generated@@76 $generated@@34 $generated@@77)  (or (= $generated@@76 $generated@@35) ($generated@@10 ($generated@@51 $generated@@6 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@77 $generated@@76) $generated@@1)))))
 :pattern ( ($generated@@47 $generated@@33 $generated@@76 $generated@@34 $generated@@77))
)))
(assert (forall (($generated@@79 Int) ) (! (= ($generated@@78 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 ($generated@@51 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@51 $generated@@85 $generated@@84))
)))
(assert  (=> (<= 1 $generated@@38) (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@87) ($generated@@32 $generated@@33 $generated@@88 $generated@@34)) (forall (($generated@@89 T@U) ) (! ($generated@@42 ($generated@@40 $generated@@86) $generated@@87 $generated@@89 $generated@@88)
 :pattern ( ($generated@@42 ($generated@@40 $generated@@86) $generated@@87 $generated@@89 $generated@@88))
))) ($generated@@39 ($generated@@40 $generated@@86) $generated@@87 $generated@@88))
 :pattern ( ($generated@@39 ($generated@@40 $generated@@86) $generated@@87 $generated@@88))
))))
(assert  (=> (<= 0 $generated@@38) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@90 $generated@@92 $generated@@93) (and (< 0 $generated@@38) (and ($generated@@41 $generated@@92) ($generated@@32 $generated@@33 $generated@@93 $generated@@34)))) (and ($generated@@90 $generated@@92 $generated@@93) (= ($generated@@39 ($generated@@40 $generated@@91) $generated@@92 $generated@@93) ($generated@@39 $generated@@91 $generated@@92 $generated@@93))))
 :pattern ( ($generated@@39 ($generated@@40 $generated@@91) $generated@@92 $generated@@93) ($generated@@41 $generated@@92))
))))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@39 ($generated@@40 $generated@@94) $generated@@95 $generated@@96) ($generated@@39 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@39 ($generated@@40 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and ($generated@@97 $generated@@99) (<= ($generated@@28 $generated@@99) ($generated@@28 $generated@@98))) (and (= ($generated@@97 ($generated@@26 $generated@@98 $generated@@99)) ($generated@@97 $generated@@98)) (= ($generated@@28 ($generated@@26 $generated@@98 $generated@@99)) (- ($generated@@28 $generated@@98) ($generated@@28 $generated@@99)))))
 :pattern ( ($generated@@26 $generated@@98 $generated@@99))
)))
(assert  (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@100 $generated@@103 $generated@@104 $generated@@105 ($generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@100 $generated@@110 $generated@@111 $generated@@112 ($generated@@102 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@100 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@100 $generated@@119 $generated@@120 $generated@@121 ($generated@@102 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@100 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@10 ($generated@@100 $generated@@33 $generated@@53 $generated@@6 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))  (=> (and (or (not (= $generated@@132 $generated@@128)) (not true)) ($generated@@10 ($generated@@51 $generated@@6 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@129 $generated@@132) $generated@@130)))) (= $generated@@132 $generated@@131)))
 :pattern ( ($generated@@100 $generated@@33 $generated@@53 $generated@@6 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 Int) ) (!  (=> (<= 0 $generated@@134) (and ($generated@@97 ($generated@@27 $generated@@134)) (= ($generated@@28 ($generated@@27 $generated@@134)) $generated@@134)))
 :pattern ( ($generated@@27 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@135 $generated@@48)  (and ($generated@@32 $generated@@33 $generated@@135 $generated@@34) (or (not (= $generated@@135 $generated@@35)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@135 $generated@@48))
 :pattern ( ($generated@@32 $generated@@33 $generated@@135 $generated@@34))
)))
(assert  (=> (<= 1 $generated@@38) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (or ($generated@@136 $generated@@138 $generated@@139 $generated@@140) (and (< 1 $generated@@38) (and ($generated@@41 $generated@@138) ($generated@@32 $generated@@33 $generated@@140 $generated@@34)))) (and (and (=> (< 0 ($generated@@28 $generated@@139)) ($generated@@136 $generated@@138 ($generated@@26 $generated@@139 ($generated@@27 1)) $generated@@140)) (=> (=> (< 0 ($generated@@28 $generated@@139)) ($generated@@42 $generated@@137 $generated@@138 ($generated@@26 $generated@@139 ($generated@@27 1)) $generated@@140)) (=> (= ($generated@@78 0) ($generated@@28 $generated@@139)) (forall (($generated@@141 T@U) ) (!  (=> ($generated@@22 $generated@@141 $generated@@139) ($generated@@136 $generated@@138 $generated@@141 $generated@@140))
 :pattern ( ($generated@@42 $generated@@137 $generated@@138 $generated@@141 $generated@@140))
))))) (= ($generated@@42 ($generated@@40 $generated@@137) $generated@@138 $generated@@139 $generated@@140)  (and (=> (< 0 ($generated@@28 $generated@@139)) ($generated@@42 $generated@@137 $generated@@138 ($generated@@26 $generated@@139 ($generated@@27 1)) $generated@@140)) (=> (= ($generated@@78 0) ($generated@@28 $generated@@139)) (forall (($generated@@142 T@U) ) (!  (=> ($generated@@22 $generated@@142 $generated@@139) ($generated@@42 $generated@@137 $generated@@138 $generated@@142 $generated@@140))
 :pattern ( ($generated@@42 $generated@@137 $generated@@138 $generated@@142 $generated@@140))
)))))))
 :pattern ( ($generated@@42 ($generated@@40 $generated@@137) $generated@@138 $generated@@139 $generated@@140) ($generated@@41 $generated@@138))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (or ($generated@@22 $generated@@143 $generated@@144) (= $generated@@143 $generated@@144)) ($generated@@22 $generated@@144 $generated@@143))
 :pattern ( ($generated@@22 $generated@@143 $generated@@144) ($generated@@22 $generated@@144 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@42 ($generated@@40 $generated@@145) $generated@@146 $generated@@147 $generated@@148) ($generated@@42 $generated@@145 $generated@@146 $generated@@147 $generated@@148))
 :pattern ( ($generated@@42 ($generated@@40 $generated@@145) $generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (! (<= 0 ($generated@@28 $generated@@149))
 :pattern ( ($generated@@28 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@51 $generated@@151 ($generated@@83 $generated@@151 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@83 $generated@@151 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (and (and (and (=> ($generated@@22 $generated@@152 $generated@@153) (or (not (= $generated@@152 $generated@@153)) (not true))) (=> (and ($generated@@97 $generated@@152) (not ($generated@@97 $generated@@153))) ($generated@@22 $generated@@152 $generated@@153))) (=> (and ($generated@@97 $generated@@152) ($generated@@97 $generated@@153)) (= ($generated@@22 $generated@@152 $generated@@153) (< ($generated@@28 $generated@@152) ($generated@@28 $generated@@153))))) (=> (and ($generated@@22 $generated@@152 $generated@@153) ($generated@@97 $generated@@153)) ($generated@@97 $generated@@152)))
 :pattern ( ($generated@@22 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> ($generated@@97 $generated@@154) (= $generated@@154 ($generated@@27 ($generated@@28 $generated@@154))))
 :pattern ( ($generated@@28 $generated@@154))
 :pattern ( ($generated@@97 $generated@@154))
)))
(assert (= ($generated@@21 $generated@@34) $generated@@2))
(assert (= ($generated@@155 $generated@@34) $generated@@4))
(assert (= ($generated@@21 $generated@@48) $generated@@3))
(assert (= ($generated@@155 $generated@@48) $generated@@4))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and ($generated@@97 $generated@@157) (<= ($generated@@28 $generated@@157) ($generated@@28 $generated@@156))) (or (and (= $generated@@157 ($generated@@27 0)) (= ($generated@@26 $generated@@156 $generated@@157) $generated@@156)) (and (or (not (= $generated@@157 ($generated@@27 0))) (not true)) ($generated@@22 ($generated@@26 $generated@@156 $generated@@157) $generated@@156))))
 :pattern ( ($generated@@26 $generated@@156 $generated@@157))
)))
(assert  (=> (<= 1 $generated@@38) (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@159) ($generated@@32 $generated@@33 $generated@@160 $generated@@34)) (= $generated@@161 ($generated@@27 0))) ($generated@@42 $generated@@158 $generated@@159 $generated@@161 $generated@@160))
 :pattern ( ($generated@@42 $generated@@158 $generated@@159 $generated@@161 $generated@@160))
))))
(assert (forall (($generated@@162 Int) ) (! (= ($generated@@83 $generated@@7 ($generated@@11 ($generated@@78 $generated@@162))) ($generated@@80 $generated@@54 ($generated@@83 $generated@@7 ($generated@@11 $generated@@162))))
 :pattern ( ($generated@@83 $generated@@7 ($generated@@11 ($generated@@78 $generated@@162))))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@83 $generated@@164 ($generated@@80 $generated@@164 $generated@@163)) ($generated@@80 $generated@@54 ($generated@@83 $generated@@164 $generated@@163)))
 :pattern ( ($generated@@83 $generated@@164 ($generated@@80 $generated@@164 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! ($generated@@47 $generated@@6 $generated@@166 $generated $generated@@165)
 :pattern ( ($generated@@47 $generated@@6 $generated@@166 $generated $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! ($generated@@32 $generated@@6 $generated@@167 $generated)
 :pattern ( ($generated@@32 $generated@@6 $generated@@167 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () Bool)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@174  (=> ($generated@@47 $generated@@33 $generated@@168 $generated@@34 $generated@@169) (=> (and (= $generated@@170 (forall (($generated@@175 T@U) ($generated@@176 T@U) )  (=> (and (and (or (not (= $generated@@175 $generated@@35)) (not true)) ($generated@@10 ($generated@@51 $generated@@6 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@169 $generated@@175) $generated@@1)))) (= $generated@@175 $generated@@168)) ($generated@@10 ($generated@@100 $generated@@33 $generated@@53 $generated@@6 $generated@@171 $generated@@175 $generated@@176))))) ($generated@@90 $generated@@169 $generated@@168)) (=> (and (and (= ($generated@@39 ($generated@@40 $generated@@172) $generated@@169 $generated@@168) ($generated@@39 ($generated@@40 $generated@@172) $generated@@169 $generated@@168)) ($generated@@90 $generated@@169 $generated@@168)) (and ($generated@@32 $generated@@6 ($generated@@9 ($generated@@39 ($generated@@40 $generated@@172) $generated@@169 $generated@@168)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@170)))))
(let (($generated@@177 true))
(let (($generated@@178  (=> (= $generated@@171 ($generated@@101 $generated@@35 $generated@@169 $generated@@1 $generated@@168)) (and (=> (= (ControlFlow 0 4) 1) $generated@@177) (=> (= (ControlFlow 0 4) 3) $generated@@174)))))
(let (($generated@@179  (=> (and (and (and ($generated@@41 $generated@@169) ($generated@@173 $generated@@169)) ($generated@@32 $generated@@33 $generated@@168 $generated@@34)) (and (= 0 $generated@@38) (= (ControlFlow 0 5) 4))) $generated@@178)))
$generated@@179)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
