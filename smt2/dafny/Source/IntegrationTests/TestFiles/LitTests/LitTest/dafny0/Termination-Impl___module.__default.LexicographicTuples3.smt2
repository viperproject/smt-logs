(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U T@U) Bool)
(declare-fun $generated@@0 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@1 () T@T)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 (T@T T@T) T@T)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (T@T T@U) T@U)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@17 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@18 (T@T) T@T)
(declare-fun $generated@@19 (T@T) T@T)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@55 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@56 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@8) 0) (= ($generated@@9 $generated@@10) 1)) (= ($generated@@9 $generated@@11) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@6 ($generated@@12 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@12 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@12 ($generated@@6 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@6 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@13 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@14 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@15 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@16 $generated@@25))
))) (forall (($generated@@26 T@T) ($generated@@27 T@T) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@0 $generated@@26 $generated@@27 ($generated@@17 $generated@@26 $generated@@27 $generated@@29 $generated@@30 $generated@@28) $generated@@30) $generated@@28)
 :weight 0
))) (forall (($generated@@31 T@T) ($generated@@32 T@T) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (or (= $generated@@35 $generated@@36) (= ($generated@@0 $generated@@31 $generated@@32 ($generated@@17 $generated@@31 $generated@@32 $generated@@34 $generated@@35 $generated@@33) $generated@@36) ($generated@@0 $generated@@31 $generated@@32 $generated@@34 $generated@@36)))
 :weight 0
))) (= ($generated@@9 $generated@@1) 3)) (= ($generated@@9 $generated@@2) 4)) (= ($generated@@9 $generated@@3) 5)) (forall (($generated@@37 T@T) ($generated@@38 T@T) ) (= ($generated@@9 ($generated@@4 $generated@@37 $generated@@38)) 6))) (forall (($generated@@39 T@T) ($generated@@40 T@T) ) (! (= ($generated@@18 ($generated@@4 $generated@@39 $generated@@40)) $generated@@39)
 :pattern ( ($generated@@4 $generated@@39 $generated@@40))
))) (forall (($generated@@41 T@T) ($generated@@42 T@T) ) (! (= ($generated@@19 ($generated@@4 $generated@@41 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@4 $generated@@41 $generated@@42))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated $generated@@43 $generated@@44) (forall (($generated@@45 T@U) ) (!  (=> ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@43 $generated@@45) $generated@@5))) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@44 $generated@@45) $generated@@5))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@44 $generated@@45) $generated@@5))
)))
 :pattern ( ($generated $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@46 $generated@@48 ($generated@@7 $generated@@48 $generated@@47)) $generated@@47)
 :pattern ( ($generated@@7 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (or (not (= $generated@@49 $generated@@51)) (not true)) (=> (and ($generated $generated@@49 $generated@@50) ($generated $generated@@50 $generated@@51)) ($generated $generated@@49 $generated@@51)))
 :pattern ( ($generated $generated@@49 $generated@@50) ($generated $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@7 $generated@@53 ($generated@@46 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@46 $generated@@53 $generated@@52))
)))
(assert  (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@54 $generated@@57 $generated@@58 $generated@@59 ($generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@63 $generated@@60) $generated@@62 $generated@@63) $generated@@60)
 :weight 0
)) (and (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (or (= $generated@@69 $generated@@71) (= ($generated@@54 $generated@@64 $generated@@65 $generated@@66 ($generated@@56 $generated@@64 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@70 $generated@@67) $generated@@71 $generated@@72) ($generated@@54 $generated@@64 $generated@@65 $generated@@66 $generated@@68 $generated@@71 $generated@@72)))
 :weight 0
)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (or (= $generated@@79 $generated@@81) (= ($generated@@54 $generated@@73 $generated@@74 $generated@@75 ($generated@@56 $generated@@73 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@79 $generated@@76) $generated@@80 $generated@@81) ($generated@@54 $generated@@73 $generated@@74 $generated@@75 $generated@@77 $generated@@80 $generated@@81)))
 :weight 0
)))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 Bool) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@6 ($generated@@54 $generated@@3 $generated@@1 $generated@@8 ($generated@@55 $generated@@82 $generated@@83 $generated@@84 $generated@@85) $generated@@86 $generated@@87))  (=> (and (or (not (= $generated@@86 $generated@@82)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@83 $generated@@86) $generated@@84)))) $generated@@85))
 :pattern ( ($generated@@54 $generated@@3 $generated@@1 $generated@@8 ($generated@@55 $generated@@82 $generated@@83 $generated@@84 $generated@@85) $generated@@86 $generated@@87))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@88 () Bool)
(declare-fun $generated@@89 () Bool)
(declare-fun $generated@@90 () Int)
(declare-fun $generated@@91 () Bool)
(declare-fun $generated@@92 () Bool)
(declare-fun $generated@@93 () Int)
(declare-fun $generated@@94 () Bool)
(declare-fun $generated@@95 () Bool)
(declare-fun $generated@@96 () Bool)
(declare-fun $generated@@97 () Int)
(declare-fun $generated@@98 () Bool)
(declare-fun $generated@@99 () Bool)
(declare-fun $generated@@100 () Int)
(declare-fun $generated@@101 () Int)
(declare-fun $generated@@102 () Bool)
(declare-fun $generated@@103 () Bool)
(declare-fun $generated@@104 () Int)
(declare-fun $generated@@105 () Int)
(declare-fun $generated@@106 () Bool)
(declare-fun $generated@@107 () Bool)
(declare-fun $generated@@108 () Int)
(declare-fun $generated@@109 () Int)
(declare-fun $generated@@110 () Int)
(declare-fun $generated@@111 () Int)
(declare-fun $generated@@112 () Int)
(declare-fun $generated@@113 () Int)
(declare-fun $generated@@114 () Int)
(declare-fun $generated@@115 () Int)
(declare-fun $generated@@116 () Bool)
(declare-fun $generated@@117 () T@U)
(declare-fun $generated@@118 () T@U)
(declare-fun $generated@@119 () T@U)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 () Int)
(declare-fun $generated@@122 () Int)
(declare-fun $generated@@123 () Bool)
(declare-fun $generated@@124 () Bool)
(declare-fun $generated@@125 () Int)
(declare-fun $generated@@126 () Bool)
(declare-fun $generated@@127 () Bool)
(declare-fun $generated@@128 () Int)
(declare-fun $generated@@129 () Bool)
(declare-fun $generated@@130 () Bool)
(declare-fun $generated@@131 () Int)
(declare-fun $generated@@132 (T@U) Bool)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 71) (let (($generated@@135 true))
(let (($generated@@136  (=> (and (not (and (and (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) $generated@@94) $generated@@95)) (= (ControlFlow 0 36) 34)) $generated@@135)))
(let (($generated@@137  (=> (and (and (and (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) $generated@@94) $generated@@95) (= (ControlFlow 0 35) 34)) $generated@@135)))
(let (($generated@@138  (=> (not (and (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) $generated@@94)) (and (=> (= (ControlFlow 0 38) 35) $generated@@137) (=> (= (ControlFlow 0 38) 36) $generated@@136)))))
(let (($generated@@139  (=> (and (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) $generated@@94) (and (=> (= (ControlFlow 0 37) 35) $generated@@137) (=> (= (ControlFlow 0 37) 36) $generated@@136)))))
(let (($generated@@140  (=> (not (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93))) (and (=> (= (ControlFlow 0 40) 37) $generated@@139) (=> (= (ControlFlow 0 40) 38) $generated@@138)))))
(let (($generated@@141  (=> (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) (and (=> (= (ControlFlow 0 39) 37) $generated@@139) (=> (= (ControlFlow 0 39) 38) $generated@@138)))))
(let (($generated@@142  (=> (not (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92)) (and (=> (= (ControlFlow 0 42) 39) $generated@@141) (=> (= (ControlFlow 0 42) 40) $generated@@140)))))
(let (($generated@@143  (=> (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (and (=> (= (ControlFlow 0 41) 39) $generated@@141) (=> (= (ControlFlow 0 41) 40) $generated@@140)))))
(let (($generated@@144  (=> (not (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91)) (and (=> (= (ControlFlow 0 44) 41) $generated@@143) (=> (= (ControlFlow 0 44) 42) $generated@@142)))))
(let (($generated@@145  (=> (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) (and (=> (= (ControlFlow 0 43) 41) $generated@@143) (=> (= (ControlFlow 0 43) 42) $generated@@142)))))
(let (($generated@@146  (=> (not (and (and $generated@@88 $generated@@89) (< 0 $generated@@90))) (and (=> (= (ControlFlow 0 46) 43) $generated@@145) (=> (= (ControlFlow 0 46) 44) $generated@@144)))))
(let (($generated@@147  (=> (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) (and (=> (= (ControlFlow 0 45) 43) $generated@@145) (=> (= (ControlFlow 0 45) 44) $generated@@144)))))
(let (($generated@@148  (=> (not (and $generated@@88 $generated@@89)) (and (=> (= (ControlFlow 0 48) 45) $generated@@147) (=> (= (ControlFlow 0 48) 46) $generated@@146)))))
(let (($generated@@149  (=> (and $generated@@88 $generated@@89) (and (=> (= (ControlFlow 0 47) 45) $generated@@147) (=> (= (ControlFlow 0 47) 46) $generated@@146)))))
(let (($generated@@150  (=> (not $generated@@88) (and (=> (= (ControlFlow 0 50) 47) $generated@@149) (=> (= (ControlFlow 0 50) 48) $generated@@148)))))
(let (($generated@@151  (=> $generated@@88 (and (=> (= (ControlFlow 0 49) 47) $generated@@149) (=> (= (ControlFlow 0 49) 48) $generated@@148)))))
(let (($generated@@152  (and (=> (= (ControlFlow 0 51) 49) $generated@@151) (=> (= (ControlFlow 0 51) 50) $generated@@150))))
(let (($generated@@153  (=> (and (not (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92)) (= (ControlFlow 0 53) 51)) $generated@@152)))
(let (($generated@@154  (=> (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (= (ControlFlow 0 52) 51)) $generated@@152)))
(let (($generated@@155  (=> (not (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91)) (and (=> (= (ControlFlow 0 55) 52) $generated@@154) (=> (= (ControlFlow 0 55) 53) $generated@@153)))))
(let (($generated@@156  (=> (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) (and (=> (= (ControlFlow 0 54) 52) $generated@@154) (=> (= (ControlFlow 0 54) 53) $generated@@153)))))
(let (($generated@@157  (=> (not (and (and $generated@@88 $generated@@89) (< 0 $generated@@90))) (and (=> (= (ControlFlow 0 57) 54) $generated@@156) (=> (= (ControlFlow 0 57) 55) $generated@@155)))))
(let (($generated@@158  (=> (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) (and (=> (= (ControlFlow 0 56) 54) $generated@@156) (=> (= (ControlFlow 0 56) 55) $generated@@155)))))
(let (($generated@@159  (=> (not (and $generated@@88 $generated@@89)) (and (=> (= (ControlFlow 0 59) 56) $generated@@158) (=> (= (ControlFlow 0 59) 57) $generated@@157)))))
(let (($generated@@160  (=> (and $generated@@88 $generated@@89) (and (=> (= (ControlFlow 0 58) 56) $generated@@158) (=> (= (ControlFlow 0 58) 57) $generated@@157)))))
(let (($generated@@161  (=> (not $generated@@88) (and (=> (= (ControlFlow 0 61) 58) $generated@@160) (=> (= (ControlFlow 0 61) 59) $generated@@159)))))
(let (($generated@@162  (=> $generated@@88 (and (=> (= (ControlFlow 0 60) 58) $generated@@160) (=> (= (ControlFlow 0 60) 59) $generated@@159)))))
(let (($generated@@163  (and (=> (= (ControlFlow 0 62) 60) $generated@@162) (=> (= (ControlFlow 0 62) 61) $generated@@161))))
(let (($generated@@164  (=> (and (not (and $generated@@88 $generated@@89)) (= (ControlFlow 0 64) 62)) $generated@@163)))
(let (($generated@@165  (=> (and (and $generated@@88 $generated@@89) (= (ControlFlow 0 63) 62)) $generated@@163)))
(let (($generated@@166  (=> (not $generated@@88) (and (=> (= (ControlFlow 0 66) 63) $generated@@165) (=> (= (ControlFlow 0 66) 64) $generated@@164)))))
(let (($generated@@167  (=> $generated@@88 (and (=> (= (ControlFlow 0 65) 63) $generated@@165) (=> (= (ControlFlow 0 65) 64) $generated@@164)))))
(let (($generated@@168  (=> (not $generated@@96) (and (=> (= (ControlFlow 0 67) 65) $generated@@167) (=> (= (ControlFlow 0 67) 66) $generated@@166)))))
(let (($generated@@169  (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@97) (= (ite  (and $generated@@98 $generated@@99) (- $generated@@100 0) (- 0 1)) $generated@@97))) (=> (or (<= 0 $generated@@97) (= (ite  (and $generated@@98 $generated@@99) (- $generated@@100 0) (- 0 1)) $generated@@97)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (or (<= 0 $generated@@101) (< (ite  (and $generated@@98 $generated@@99) (- $generated@@100 0) (- 0 1)) $generated@@97)) (= (ite  (and (and (and (and $generated@@98 $generated@@99) (< 0 $generated@@100)) $generated@@102) $generated@@103) (- $generated@@104 0) (- 0 1)) $generated@@101))) (=> (or (or (<= 0 $generated@@101) (< (ite  (and $generated@@98 $generated@@99) (- $generated@@100 0) (- 0 1)) $generated@@97)) (= (ite  (and (and (and (and $generated@@98 $generated@@99) (< 0 $generated@@100)) $generated@@102) $generated@@103) (- $generated@@104 0) (- 0 1)) $generated@@101)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (or (or (<= 0 $generated@@105) (< (ite  (and $generated@@98 $generated@@99) (- $generated@@100 0) (- 0 1)) $generated@@97)) (< (ite  (and (and (and (and $generated@@98 $generated@@99) (< 0 $generated@@100)) $generated@@102) $generated@@103) (- $generated@@104 0) (- 0 1)) $generated@@101)) (= (ite  (and (and (and (and (and (and (and $generated@@98 $generated@@99) (< 0 $generated@@100)) $generated@@102) $generated@@103) (< 0 $generated@@104)) $generated@@106) $generated@@107) (- $generated@@108 0) (- 0 1)) $generated@@105))) (=> (or (or (or (<= 0 $generated@@105) (< (ite  (and $generated@@98 $generated@@99) (- $generated@@100 0) (- 0 1)) $generated@@97)) (< (ite  (and (and (and (and $generated@@98 $generated@@99) (< 0 $generated@@100)) $generated@@102) $generated@@103) (- $generated@@104 0) (- 0 1)) $generated@@101)) (= (ite  (and (and (and (and (and (and (and $generated@@98 $generated@@99) (< 0 $generated@@100)) $generated@@102) $generated@@103) (< 0 $generated@@104)) $generated@@106) $generated@@107) (- $generated@@108 0) (- 0 1)) $generated@@105)) (=> (= (ControlFlow 0 4) (- 0 3)) (or (< (ite  (and $generated@@98 $generated@@99) (- $generated@@100 0) (- 0 1)) $generated@@97) (and (= (ite  (and $generated@@98 $generated@@99) (- $generated@@100 0) (- 0 1)) $generated@@97) (or (< (ite  (and (and (and (and $generated@@98 $generated@@99) (< 0 $generated@@100)) $generated@@102) $generated@@103) (- $generated@@104 0) (- 0 1)) $generated@@101) (and (= (ite  (and (and (and (and $generated@@98 $generated@@99) (< 0 $generated@@100)) $generated@@102) $generated@@103) (- $generated@@104 0) (- 0 1)) $generated@@101) (< (ite  (and (and (and (and (and (and (and $generated@@98 $generated@@99) (< 0 $generated@@100)) $generated@@102) $generated@@103) (< 0 $generated@@104)) $generated@@106) $generated@@107) (- $generated@@108 0) (- 0 1)) $generated@@105))))))))))))))
(let (($generated@@170  (=> (and (and (= $generated@@100 $generated@@109) (= $generated@@104 $generated@@110)) (and (= $generated@@108 $generated@@111) (= (ControlFlow 0 9) 4))) $generated@@169)))
(let (($generated@@171  (=> (<= $generated@@93 0) (=> (and (and (= $generated@@112 (- $generated@@90 1)) (= $generated@@109 $generated@@112)) (and (= $generated@@110 $generated@@113) (= (ControlFlow 0 11) 9))) $generated@@170))))
(let (($generated@@172  (=> (< 0 $generated@@93) (=> (and (and (= $generated@@114 (- $generated@@93 1)) (= $generated@@109 $generated@@90)) (and (= $generated@@110 $generated@@114) (= (ControlFlow 0 10) 9))) $generated@@170))))
(let (($generated@@173  (=> (<= $generated@@111 0) (and (=> (= (ControlFlow 0 12) 10) $generated@@172) (=> (= (ControlFlow 0 12) 11) $generated@@171)))))
(let (($generated@@174  (=> (and (< 0 $generated@@111) (= $generated@@115 (- $generated@@111 1))) (=> (and (and (= $generated@@100 $generated@@90) (= $generated@@104 $generated@@93)) (and (= $generated@@108 $generated@@115) (= (ControlFlow 0 8) 4))) $generated@@169))))
(let (($generated@@175  (=> (and (and (and (and (and (and (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) $generated@@94) $generated@@95) (< 0 $generated@@111)) $generated@@116) (= $generated@@97 (ite  (and $generated@@88 $generated@@89) (- $generated@@90 0) (- 0 1)))) (and (= $generated@@101 (ite  (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (- $generated@@93 0) (- 0 1))) (= $generated@@105 (ite  (and (and (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) $generated@@94) $generated@@95) (- $generated@@111 0) (- 0 1))))) (and (=> (= (ControlFlow 0 13) 8) $generated@@174) (=> (= (ControlFlow 0 13) 12) $generated@@173)))))
(let (($generated@@176 true))
(let (($generated@@177  (and (=> (= (ControlFlow 0 14) 2) $generated@@176) (=> (= (ControlFlow 0 14) 13) $generated@@175))))
(let (($generated@@178  (=> (and (not (and (and (and (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) $generated@@94) $generated@@95) (< 0 $generated@@111))) (= (ControlFlow 0 16) 14)) $generated@@177)))
(let (($generated@@179  (=> (and (and (and (and (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) $generated@@94) $generated@@95) (< 0 $generated@@111)) (= (ControlFlow 0 15) 14)) $generated@@177)))
(let (($generated@@180  (=> (not (and (and (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) $generated@@94) $generated@@95)) (and (=> (= (ControlFlow 0 18) 15) $generated@@179) (=> (= (ControlFlow 0 18) 16) $generated@@178)))))
(let (($generated@@181  (=> (and (and (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) $generated@@94) $generated@@95) (and (=> (= (ControlFlow 0 17) 15) $generated@@179) (=> (= (ControlFlow 0 17) 16) $generated@@178)))))
(let (($generated@@182  (=> (not (and (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) $generated@@94)) (and (=> (= (ControlFlow 0 20) 17) $generated@@181) (=> (= (ControlFlow 0 20) 18) $generated@@180)))))
(let (($generated@@183  (=> (and (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) $generated@@94) (and (=> (= (ControlFlow 0 19) 17) $generated@@181) (=> (= (ControlFlow 0 19) 18) $generated@@180)))))
(let (($generated@@184  (=> (not (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93))) (and (=> (= (ControlFlow 0 22) 19) $generated@@183) (=> (= (ControlFlow 0 22) 20) $generated@@182)))))
(let (($generated@@185  (=> (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) (and (=> (= (ControlFlow 0 21) 19) $generated@@183) (=> (= (ControlFlow 0 21) 20) $generated@@182)))))
(let (($generated@@186  (=> (not (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92)) (and (=> (= (ControlFlow 0 24) 21) $generated@@185) (=> (= (ControlFlow 0 24) 22) $generated@@184)))))
(let (($generated@@187  (=> (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (and (=> (= (ControlFlow 0 23) 21) $generated@@185) (=> (= (ControlFlow 0 23) 22) $generated@@184)))))
(let (($generated@@188  (=> (not (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91)) (and (=> (= (ControlFlow 0 26) 23) $generated@@187) (=> (= (ControlFlow 0 26) 24) $generated@@186)))))
(let (($generated@@189  (=> (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) (and (=> (= (ControlFlow 0 25) 23) $generated@@187) (=> (= (ControlFlow 0 25) 24) $generated@@186)))))
(let (($generated@@190  (=> (not (and (and $generated@@88 $generated@@89) (< 0 $generated@@90))) (and (=> (= (ControlFlow 0 28) 25) $generated@@189) (=> (= (ControlFlow 0 28) 26) $generated@@188)))))
(let (($generated@@191  (=> (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) (and (=> (= (ControlFlow 0 27) 25) $generated@@189) (=> (= (ControlFlow 0 27) 26) $generated@@188)))))
(let (($generated@@192  (=> (not (and $generated@@88 $generated@@89)) (and (=> (= (ControlFlow 0 30) 27) $generated@@191) (=> (= (ControlFlow 0 30) 28) $generated@@190)))))
(let (($generated@@193  (=> (and $generated@@88 $generated@@89) (and (=> (= (ControlFlow 0 29) 27) $generated@@191) (=> (= (ControlFlow 0 29) 28) $generated@@190)))))
(let (($generated@@194  (=> (not $generated@@88) (and (=> (= (ControlFlow 0 32) 29) $generated@@193) (=> (= (ControlFlow 0 32) 30) $generated@@192)))))
(let (($generated@@195  (=> $generated@@88 (and (=> (= (ControlFlow 0 31) 29) $generated@@193) (=> (= (ControlFlow 0 31) 30) $generated@@192)))))
(let (($generated@@196  (=> $generated@@96 (and (=> (= (ControlFlow 0 33) 31) $generated@@195) (=> (= (ControlFlow 0 33) 32) $generated@@194)))))
(let (($generated@@197  (and (=> (= (ControlFlow 0 68) 67) $generated@@168) (=> (= (ControlFlow 0 68) 33) $generated@@196))))
(let (($generated@@198 true))
(let (($generated@@199  (=> (and (not false) (forall (($generated@@200 T@U) ) (!  (=> (and (or (not (= $generated@@200 $generated@@118)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@117 $generated@@200) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@117 $generated@@200) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@117 $generated@@200)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@117 $generated@@200))
))) (=> (and (and ($generated $generated@@117 $generated@@117) (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (or (not (= $generated@@201 $generated@@118)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@117 $generated@@201) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@117 $generated@@201) $generated@@202) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@117 $generated@@201) $generated@@202)) ($generated@@6 ($generated@@54 $generated@@3 $generated@@1 $generated@@8 $generated@@119 $generated@@201 $generated@@202))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@117 $generated@@201) $generated@@202))
))) (and (<= (ite  (and $generated@@88 $generated@@89) (- $generated@@90 0) (- 0 1)) $generated@@120) (=> (= (ite  (and $generated@@88 $generated@@89) (- $generated@@90 0) (- 0 1)) $generated@@120) (and (<= (ite  (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (- $generated@@93 0) (- 0 1)) $generated@@121) (=> (= (ite  (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (- $generated@@93 0) (- 0 1)) $generated@@121) (<= (ite  (and (and (and (and (and (and (and $generated@@88 $generated@@89) (< 0 $generated@@90)) $generated@@91) $generated@@92) (< 0 $generated@@93)) $generated@@94) $generated@@95) (- $generated@@111 0) (- 0 1)) $generated@@122)))))) (and (=> (= (ControlFlow 0 69) 1) $generated@@198) (=> (= (ControlFlow 0 69) 68) $generated@@197))))))
(let (($generated@@203  (=> (= $generated@@119 ($generated@@55 $generated@@118 $generated@@117 $generated@@5 false)) (=> (and (and (= $generated@@120 (ite  (and $generated@@123 $generated@@124) (- $generated@@125 0) (- 0 1))) (= $generated@@121 (ite  (and (and (and (and $generated@@123 $generated@@124) (< 0 $generated@@125)) $generated@@126) $generated@@127) (- $generated@@128 0) (- 0 1)))) (and (= $generated@@122 (ite  (and (and (and (and (and (and (and $generated@@123 $generated@@124) (< 0 $generated@@125)) $generated@@126) $generated@@127) (< 0 $generated@@128)) $generated@@129) $generated@@130) (- $generated@@131 0) (- 0 1))) (= (ControlFlow 0 70) 69))) $generated@@199))))
(let (($generated@@204  (=> (and (and ($generated@@132 $generated@@117) ($generated@@133 $generated@@117)) (and (= 0 $generated@@134) (= (ControlFlow 0 71) 70))) $generated@@203)))
$generated@@204))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
