(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@T T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@T T@T) T@T)
(declare-fun $generated@@37 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@38 (T@T) T@T)
(declare-fun $generated@@39 (T@T) T@T)
(declare-fun $generated@@59 (Int) Int)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U Int) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated@@21) 0))
(assert (= ($generated@@4 $generated@@23) 3))
(assert (forall (($generated@@27 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@27 $generated@@24)  (or (= $generated@@27 $generated@@25) (= ($generated@@26 $generated@@27) $generated@@24)))
 :pattern ( ($generated@@22 $generated@@23 $generated@@27 $generated@@24))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@28 $generated@@23 $generated@@30 $generated@@29 $generated@@31) ($generated@@28 $generated@@23 $generated@@30 $generated@@24 $generated@@31))
 :pattern ( ($generated@@28 $generated@@23 $generated@@30 $generated@@29 $generated@@31))
 :pattern ( ($generated@@28 $generated@@23 $generated@@30 $generated@@24 $generated@@31))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@40 T@T) ($generated@@41 T@T) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@33 $generated@@40 $generated@@41 ($generated@@37 $generated@@40 $generated@@41 $generated@@43 $generated@@44 $generated@@42) $generated@@44) $generated@@42)
 :weight 0
)) (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (or (= $generated@@49 $generated@@50) (= ($generated@@33 $generated@@45 $generated@@46 ($generated@@37 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@50) ($generated@@33 $generated@@45 $generated@@46 $generated@@48 $generated@@50)))
 :weight 0
))) (= ($generated@@4 $generated@@34) 4)) (= ($generated@@4 $generated@@35) 5)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (= ($generated@@4 ($generated@@36 $generated@@51 $generated@@52)) 6))) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (! (= ($generated@@38 ($generated@@36 $generated@@53 $generated@@54)) $generated@@53)
 :pattern ( ($generated@@36 $generated@@53 $generated@@54))
))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@39 ($generated@@36 $generated@@55 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@36 $generated@@55 $generated@@56))
))))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@28 $generated@@23 $generated@@57 $generated@@24 $generated@@58)  (or (= $generated@@57 $generated@@25) ($generated@@9 ($generated@@32 $generated@@5 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@23 ($generated@@36 $generated@@34 $generated@@35) $generated@@58 $generated@@57) $generated@@0)))))
 :pattern ( ($generated@@28 $generated@@23 $generated@@57 $generated@@24 $generated@@58))
)))
(assert (forall (($generated@@60 Int) ) (! (= ($generated@@59 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 $generated@@62) $generated@@62)
 :pattern ( ($generated@@61 $generated@@63 $generated@@62))
)))
(assert (= ($generated@@4 $generated@@64) 7))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and ($generated@@22 $generated@@64 $generated@@68 ($generated@@66 $generated@@70)) ($generated@@67 $generated@@69 $generated@@70)) ($generated@@22 $generated@@64 ($generated@@65 $generated@@68 $generated@@69) ($generated@@66 $generated@@70)))
 :pattern ( ($generated@@22 $generated@@64 ($generated@@65 $generated@@68 $generated@@69) ($generated@@66 $generated@@70)))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 ($generated@@32 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@32 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@20 ($generated@@65 $generated@@74 $generated@@75)) (+ 1 ($generated@@20 $generated@@74)))
 :pattern ( ($generated@@65 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@71 $generated@@80 $generated@@77) $generated@@78 $generated@@79) ($generated@@28 $generated@@80 $generated@@77 $generated@@78 $generated@@79))
 :pattern ( ($generated@@76 ($generated@@71 $generated@@80 $generated@@77) $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@67 $generated@@81 $generated@@29) (and (= ($generated@@71 $generated@@23 ($generated@@32 $generated@@23 $generated@@81)) $generated@@81) ($generated@@22 $generated@@23 ($generated@@32 $generated@@23 $generated@@81) $generated@@29)))
 :pattern ( ($generated@@67 $generated@@81 $generated@@29))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@67 $generated@@82 $generated@@24) (and (= ($generated@@71 $generated@@23 ($generated@@32 $generated@@23 $generated@@82)) $generated@@82) ($generated@@22 $generated@@23 ($generated@@32 $generated@@23 $generated@@82) $generated@@24)))
 :pattern ( ($generated@@67 $generated@@82 $generated@@24))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@83 $generated@@29)  (and ($generated@@22 $generated@@23 $generated@@83 $generated@@24) (or (not (= $generated@@83 $generated@@25)) (not true))))
 :pattern ( ($generated@@22 $generated@@23 $generated@@83 $generated@@29))
 :pattern ( ($generated@@22 $generated@@23 $generated@@83 $generated@@24))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 Int) ($generated@@87 T@U) ) (!  (and (=> (= $generated@@86 ($generated@@20 $generated@@85)) (= ($generated@@84 ($generated@@65 $generated@@85 $generated@@87) $generated@@86) $generated@@87)) (=> (or (not (= $generated@@86 ($generated@@20 $generated@@85))) (not true)) (= ($generated@@84 ($generated@@65 $generated@@85 $generated@@87) $generated@@86) ($generated@@84 $generated@@85 $generated@@86))))
 :pattern ( ($generated@@84 ($generated@@65 $generated@@85 $generated@@87) $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@67 ($generated@@71 $generated@@90 $generated@@88) $generated@@89) ($generated@@22 $generated@@90 $generated@@88 $generated@@89))
 :pattern ( ($generated@@67 ($generated@@71 $generated@@90 $generated@@88) $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (<= 0 ($generated@@20 $generated@@91))
 :pattern ( ($generated@@20 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@28 $generated@@64 $generated@@92 ($generated@@66 $generated@@93) $generated@@94) (forall (($generated@@95 Int) ) (!  (=> (and (<= 0 $generated@@95) (< $generated@@95 ($generated@@20 $generated@@92))) ($generated@@76 ($generated@@84 $generated@@92 $generated@@95) $generated@@93 $generated@@94))
 :pattern ( ($generated@@84 $generated@@92 $generated@@95))
)))
 :pattern ( ($generated@@28 $generated@@64 $generated@@92 ($generated@@66 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@96 ($generated@@66 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@66 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@98 ($generated@@66 $generated@@99)) $generated)
 :pattern ( ($generated@@66 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@32 $generated@@101 ($generated@@71 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@71 $generated@@101 $generated@@100))
)))
(assert  (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@102 $generated@@105 $generated@@106 $generated@@107 ($generated@@104 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@110 $generated@@111) $generated@@108)
 :weight 0
)) (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@102 $generated@@112 $generated@@113 $generated@@114 ($generated@@104 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@102 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@102 $generated@@121 $generated@@122 $generated@@123 ($generated@@104 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@102 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 Bool) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@9 ($generated@@102 $generated@@23 $generated@@34 $generated@@5 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))  (=> (and (or (not (= $generated@@134 $generated@@130)) (not true)) ($generated@@9 ($generated@@32 $generated@@5 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@23 ($generated@@36 $generated@@34 $generated@@35) $generated@@131 $generated@@134) $generated@@132)))) $generated@@133))
 :pattern ( ($generated@@102 $generated@@23 $generated@@34 $generated@@5 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (and (= ($generated@@136 ($generated@@65 $generated@@138 $generated@@139)) $generated@@138) (= ($generated@@137 ($generated@@65 $generated@@138 $generated@@139)) $generated@@139))
 :pattern ( ($generated@@65 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> ($generated@@67 $generated@@140 ($generated@@66 $generated@@141)) (and (= ($generated@@71 $generated@@64 ($generated@@32 $generated@@64 $generated@@140)) $generated@@140) ($generated@@22 $generated@@64 ($generated@@32 $generated@@64 $generated@@140) ($generated@@66 $generated@@141))))
 :pattern ( ($generated@@67 $generated@@140 ($generated@@66 $generated@@141)))
)))
(assert (= ($generated@@98 $generated@@29) $generated@@1))
(assert (= ($generated@@142 $generated@@29) $generated@@3))
(assert (= ($generated@@98 $generated@@24) $generated@@2))
(assert (= ($generated@@142 $generated@@24) $generated@@3))
(assert (forall (($generated@@143 Int) ) (! (= ($generated@@71 $generated@@6 ($generated@@10 ($generated@@59 $generated@@143))) ($generated@@61 $generated@@35 ($generated@@71 $generated@@6 ($generated@@10 $generated@@143))))
 :pattern ( ($generated@@71 $generated@@6 ($generated@@10 ($generated@@59 $generated@@143))))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@71 $generated@@145 ($generated@@61 $generated@@145 $generated@@144)) ($generated@@61 $generated@@35 ($generated@@71 $generated@@145 $generated@@144)))
 :pattern ( ($generated@@71 $generated@@145 ($generated@@61 $generated@@145 $generated@@144)))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= ($generated@@20 $generated@@146) 0) (= $generated@@146 $generated@@21))
 :pattern ( ($generated@@20 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@22 $generated@@64 $generated@@147 ($generated@@66 $generated@@148)) (forall (($generated@@149 Int) ) (!  (=> (and (<= 0 $generated@@149) (< $generated@@149 ($generated@@20 $generated@@147))) ($generated@@67 ($generated@@84 $generated@@147 $generated@@149) $generated@@148))
 :pattern ( ($generated@@84 $generated@@147 $generated@@149))
)))
 :pattern ( ($generated@@22 $generated@@64 $generated@@147 ($generated@@66 $generated@@148)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@164  (=> (= (ControlFlow 0 10) (- 0 9)) ($generated@@22 $generated@@64 $generated@@150 ($generated@@66 $generated@@29)))))
(let (($generated@@165  (=> (= (ControlFlow 0 11) 10) $generated@@164)))
(let (($generated@@166  (=> (= (ControlFlow 0 8) (- 0 7)) ($generated@@22 $generated@@64 $generated@@151 ($generated@@66 $generated@@29)))))
(let (($generated@@167  (and (=> (= (ControlFlow 0 12) 8) $generated@@166) (=> (= (ControlFlow 0 12) 11) $generated@@165))))
(let (($generated@@168 true))
(let (($generated@@169  (and (=> (= (ControlFlow 0 13) 6) $generated@@168) (=> (= (ControlFlow 0 13) 12) $generated@@167))))
(let (($generated@@170  (=> (= (ControlFlow 0 5) (- 0 4)) ($generated@@22 $generated@@64 $generated@@152 ($generated@@66 $generated@@29)))))
(let (($generated@@171  (and (=> (= (ControlFlow 0 14) 5) $generated@@170) (=> (= (ControlFlow 0 14) 13) $generated@@169))))
(let (($generated@@172 true))
(let (($generated@@173  (and (=> (= (ControlFlow 0 15) 3) $generated@@172) (=> (= (ControlFlow 0 15) 14) $generated@@171))))
(let (($generated@@174  (=> (and (= ($generated@@20 $generated@@152) ($generated@@59 0)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@22 $generated@@64 $generated@@152 ($generated@@66 $generated@@29)))))
(let (($generated@@175  (=> (and (and (= $generated@@153 ($generated@@103 $generated@@25 $generated@@154 $generated@@0 false)) (= $generated@@155 ($generated@@65 $generated@@21 ($generated@@71 $generated@@23 $generated@@156)))) (and (= $generated@@151 ($generated@@65 $generated@@21 ($generated@@71 $generated@@23 $generated@@156))) (= $generated@@150 ($generated@@65 $generated@@21 ($generated@@71 $generated@@23 $generated@@25))))) (and (=> (= (ControlFlow 0 16) 2) $generated@@174) (=> (= (ControlFlow 0 16) 15) $generated@@173)))))
(let (($generated@@176  (=> (and (and (and ($generated@@157 $generated@@154) ($generated@@158 $generated@@154)) (and ($generated@@22 $generated@@23 $generated@@156 $generated@@29) ($generated@@28 $generated@@23 $generated@@156 $generated@@29 $generated@@154))) (and (and ($generated@@22 $generated@@64 $generated@@159 ($generated@@66 $generated@@29)) ($generated@@28 $generated@@64 $generated@@159 ($generated@@66 $generated@@29) $generated@@154)) (and ($generated@@22 $generated@@64 $generated@@152 ($generated@@66 $generated@@24)) ($generated@@28 $generated@@64 $generated@@152 ($generated@@66 $generated@@24) $generated@@154)))) (=> (and (and (and (and ($generated@@22 $generated@@64 $generated@@160 ($generated@@66 $generated@@29)) ($generated@@28 $generated@@64 $generated@@160 ($generated@@66 $generated@@29) $generated@@154)) true) (and (and ($generated@@22 $generated@@64 $generated@@161 ($generated@@66 $generated@@24)) ($generated@@28 $generated@@64 $generated@@161 ($generated@@66 $generated@@24) $generated@@154)) true)) (and (and (and ($generated@@22 $generated@@64 $generated@@162 ($generated@@66 $generated@@24)) ($generated@@28 $generated@@64 $generated@@162 ($generated@@66 $generated@@24) $generated@@154)) true) (and (= 1 $generated@@163) (= (ControlFlow 0 17) 16)))) $generated@@175))))
$generated@@176))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 10) (- 9))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
