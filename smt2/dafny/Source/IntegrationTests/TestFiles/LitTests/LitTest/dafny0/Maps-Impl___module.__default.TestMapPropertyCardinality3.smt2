(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 (Int) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 ((_ BitVec 3)) T@U)
(declare-fun $generated@@30 (T@U) (_ BitVec 3))
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) Int)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T T@T) T@T)
(declare-fun $generated@@69 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@118 (T@U) Int)
(declare-fun $generated@@119 () T@U)
(declare-fun $generated@@130 (T@U T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Int)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Int)
(declare-fun $generated@@170 (T@U) Int)
(declare-fun $generated@@182 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@224 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@10 $generated@@26 ($generated@@25 0) $generated@@27)
 :pattern ( ($generated@@24 $generated@@10 $generated@@26 ($generated@@25 0) $generated@@27))
)))
(assert  (and (and (= ($generated@@8 $generated@@28) 3) (forall (($generated@@31 (_ BitVec 3)) ) (! (= ($generated@@30 ($generated@@29 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@29 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@29 ($generated@@30 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@30 $generated@@32))
))))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! ($generated@@24 $generated@@28 $generated@@33 ($generated@@25 3) $generated@@34)
 :pattern ( ($generated@@24 $generated@@28 $generated@@33 ($generated@@25 3) $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ) (! ($generated@@35 $generated@@10 $generated@@36 ($generated@@25 0))
 :pattern ( ($generated@@35 $generated@@10 $generated@@36 ($generated@@25 0)))
)))
(assert (forall (($generated@@37 T@U) ) (! ($generated@@35 $generated@@28 $generated@@37 ($generated@@25 3))
 :pattern ( ($generated@@35 $generated@@28 $generated@@37 ($generated@@25 3)))
)))
(assert (= ($generated@@8 $generated@@39) 4))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@35 $generated@@39 $generated@@43 ($generated@@40 $generated@@41 $generated@@42)) ($generated@@38 $generated@@43))
 :pattern ( ($generated@@38 $generated@@43) ($generated@@35 $generated@@39 $generated@@43 ($generated@@40 $generated@@41 $generated@@42)))
)))
(assert (forall (($generated@@46 T@U) ) (!  (not ($generated@@44 $generated@@45 $generated@@46))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46))
)))
(assert (= ($generated@@8 $generated@@47) 5))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@35 $generated@@47 $generated@@51 $generated@@48)  (or (= $generated@@51 $generated@@49) (= ($generated@@50 $generated@@51) $generated@@48)))
 :pattern ( ($generated@@35 $generated@@47 $generated@@51 $generated@@48))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@24 $generated@@47 $generated@@53 $generated@@52 $generated@@54) ($generated@@24 $generated@@47 $generated@@53 $generated@@48 $generated@@54))
 :pattern ( ($generated@@24 $generated@@47 $generated@@53 $generated@@52 $generated@@54))
 :pattern ( ($generated@@24 $generated@@47 $generated@@53 $generated@@48 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@35 $generated@@39 ($generated@@55 $generated@@59 $generated@@60) ($generated@@40 $generated@@57 $generated@@58))  (and ($generated@@56 $generated@@59 $generated@@57) ($generated@@56 $generated@@60 $generated@@58)))
 :pattern ( ($generated@@35 $generated@@39 ($generated@@55 $generated@@59 $generated@@60) ($generated@@40 $generated@@57 $generated@@58)))
)))
(assert (forall (($generated@@62 T@U) ) (!  (and (= (= ($generated@@61 $generated@@62) 0) (= $generated@@62 $generated@@45)) (=> (or (not (= ($generated@@61 $generated@@62) 0)) (not true)) (exists (($generated@@63 T@U) ) (! ($generated@@44 $generated@@62 $generated@@63)
 :pattern ( ($generated@@44 $generated@@62 $generated@@63))
))))
 :pattern ( ($generated@@61 $generated@@62))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@65 $generated@@72 $generated@@73 ($generated@@69 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@76) $generated@@74)
 :weight 0
)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@65 $generated@@77 $generated@@78 ($generated@@69 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@65 $generated@@77 $generated@@78 $generated@@80 $generated@@82)))
 :weight 0
))) (= ($generated@@8 $generated@@66) 6)) (= ($generated@@8 $generated@@67) 7)) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (= ($generated@@8 ($generated@@68 $generated@@83 $generated@@84)) 8))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@70 ($generated@@68 $generated@@85 $generated@@86)) $generated@@85)
 :pattern ( ($generated@@68 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@71 ($generated@@68 $generated@@87 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@68 $generated@@87 $generated@@88))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@24 $generated@@47 $generated@@89 $generated@@48 $generated@@90)  (or (= $generated@@89 $generated@@49) ($generated@@13 ($generated@@64 $generated@@9 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@47 ($generated@@68 $generated@@66 $generated@@67) $generated@@90 $generated@@89) $generated@@1)))))
 :pattern ( ($generated@@24 $generated@@47 $generated@@89 $generated@@48 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@91 $generated@@97) (= ($generated@@24 $generated@@39 ($generated@@55 $generated@@95 $generated@@96) ($generated@@40 $generated@@93 $generated@@94) $generated@@97)  (and ($generated@@92 $generated@@95 $generated@@93 $generated@@97) ($generated@@92 $generated@@96 $generated@@94 $generated@@97))))
 :pattern ( ($generated@@24 $generated@@39 ($generated@@55 $generated@@95 $generated@@96) ($generated@@40 $generated@@93 $generated@@94) $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@38 $generated@@99) (= ($generated@@98 $generated@@99) $generated@@2))
 :pattern ( ($generated@@38 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@100 $generated@@102 ($generated@@64 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@64 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@38 $generated@@103) (exists (($generated@@104 T@U) ($generated@@105 T@U) ) (= $generated@@103 ($generated@@55 $generated@@104 $generated@@105))))
 :pattern ( ($generated@@38 $generated@@103))
)))
(assert (= ($generated@@8 $generated@@106) 9))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@35 $generated@@106 $generated@@108 ($generated@@107 $generated@@109)) (forall (($generated@@110 T@U) ) (!  (=> ($generated@@44 $generated@@108 $generated@@110) ($generated@@56 $generated@@110 $generated@@109))
 :pattern ( ($generated@@44 $generated@@108 $generated@@110))
)))
 :pattern ( ($generated@@35 $generated@@106 $generated@@108 ($generated@@107 $generated@@109)))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@92 ($generated@@100 $generated@@114 $generated@@111) $generated@@112 $generated@@113) ($generated@@24 $generated@@114 $generated@@111 $generated@@112 $generated@@113))
 :pattern ( ($generated@@92 ($generated@@100 $generated@@114 $generated@@111) $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@56 $generated@@115 $generated@@52) (and (= ($generated@@100 $generated@@47 ($generated@@64 $generated@@47 $generated@@115)) $generated@@115) ($generated@@35 $generated@@47 ($generated@@64 $generated@@47 $generated@@115) $generated@@52)))
 :pattern ( ($generated@@56 $generated@@115 $generated@@52))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@56 $generated@@116 $generated@@48) (and (= ($generated@@100 $generated@@47 ($generated@@64 $generated@@47 $generated@@116)) $generated@@116) ($generated@@35 $generated@@47 ($generated@@64 $generated@@47 $generated@@116) $generated@@48)))
 :pattern ( ($generated@@56 $generated@@116 $generated@@48))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@35 $generated@@47 $generated@@117 $generated@@52)  (and ($generated@@35 $generated@@47 $generated@@117 $generated@@48) (or (not (= $generated@@117 $generated@@49)) (not true))))
 :pattern ( ($generated@@35 $generated@@47 $generated@@117 $generated@@52))
 :pattern ( ($generated@@35 $generated@@47 $generated@@117 $generated@@48))
)))
(assert (forall (($generated@@120 T@U) ) (! (= (= ($generated@@118 $generated@@120) 0) (= $generated@@120 $generated@@119))
 :pattern ( ($generated@@118 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@56 ($generated@@100 $generated@@123 $generated@@121) $generated@@122) ($generated@@35 $generated@@123 $generated@@121 $generated@@122))
 :pattern ( ($generated@@56 ($generated@@100 $generated@@123 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (<= 0 ($generated@@61 $generated@@124))
 :pattern ( ($generated@@61 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (! (<= 0 ($generated@@118 $generated@@125))
 :pattern ( ($generated@@118 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@24 $generated@@106 $generated@@126 ($generated@@107 $generated@@127) $generated@@128) (forall (($generated@@129 T@U) ) (!  (=> ($generated@@44 $generated@@126 $generated@@129) ($generated@@92 $generated@@129 $generated@@127 $generated@@128))
 :pattern ( ($generated@@44 $generated@@126 $generated@@129))
)))
 :pattern ( ($generated@@24 $generated@@106 $generated@@126 ($generated@@107 $generated@@127) $generated@@128))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@131 ($generated@@130 $generated@@132 $generated@@133)) $generated@@132)
 :pattern ( ($generated@@130 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@134 ($generated@@130 $generated@@135 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@130 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@137 ($generated@@130 $generated@@138 $generated@@139)) $generated@@0)
 :pattern ( ($generated@@130 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@98 ($generated@@55 $generated@@140 $generated@@141)) $generated@@2)
 :pattern ( ($generated@@55 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@142 ($generated@@40 $generated@@143 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@40 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@145 ($generated@@40 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@40 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@148 ($generated@@55 $generated@@149 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@55 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@151 ($generated@@55 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@55 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@155 Int) ) (! (= ($generated@@154 ($generated@@25 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@25 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@156 ($generated@@107 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@107 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@137 ($generated@@107 $generated@@158)) $generated)
 :pattern ( ($generated@@107 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@64 $generated@@160 ($generated@@100 $generated@@160 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@100 $generated@@160 $generated@@159))
)))
(assert (= ($generated@@8 $generated@@161) 10))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@24 $generated@@161 $generated@@164 ($generated@@130 $generated@@165 $generated@@166) $generated@@167) (forall (($generated@@168 T@U) ) (!  (=> ($generated@@44 ($generated@@163 $generated@@164) $generated@@168) (and ($generated@@92 ($generated@@65 $generated@@67 $generated@@67 ($generated@@162 $generated@@164) $generated@@168) $generated@@166 $generated@@167) ($generated@@92 $generated@@168 $generated@@165 $generated@@167)))
 :pattern ( ($generated@@65 $generated@@67 $generated@@67 ($generated@@162 $generated@@164) $generated@@168))
 :pattern ( ($generated@@44 ($generated@@163 $generated@@164) $generated@@168))
)))
 :pattern ( ($generated@@24 $generated@@161 $generated@@164 ($generated@@130 $generated@@165 $generated@@166) $generated@@167))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (< ($generated@@169 $generated@@171) ($generated@@170 ($generated@@55 $generated@@171 $generated@@172)))
 :pattern ( ($generated@@55 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (< ($generated@@169 $generated@@174) ($generated@@170 ($generated@@55 $generated@@173 $generated@@174)))
 :pattern ( ($generated@@55 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ) (!  (not ($generated@@44 ($generated@@163 $generated@@119) $generated@@175))
 :pattern ( ($generated@@44 ($generated@@163 $generated@@119) $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@56 $generated@@176 ($generated@@130 $generated@@177 $generated@@178)) (and (= ($generated@@100 $generated@@161 ($generated@@64 $generated@@161 $generated@@176)) $generated@@176) ($generated@@35 $generated@@161 ($generated@@64 $generated@@161 $generated@@176) ($generated@@130 $generated@@177 $generated@@178))))
 :pattern ( ($generated@@56 $generated@@176 ($generated@@130 $generated@@177 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@56 $generated@@181 ($generated@@40 $generated@@179 $generated@@180)) (and (= ($generated@@100 $generated@@39 ($generated@@64 $generated@@39 $generated@@181)) $generated@@181) ($generated@@35 $generated@@39 ($generated@@64 $generated@@39 $generated@@181) ($generated@@40 $generated@@179 $generated@@180))))
 :pattern ( ($generated@@56 $generated@@181 ($generated@@40 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@182 $generated@@185 $generated@@186 $generated@@187 ($generated@@184 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@190 $generated@@191) $generated@@188)
 :weight 0
)) (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@182 $generated@@192 $generated@@193 $generated@@194 ($generated@@184 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@182 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@182 $generated@@201 $generated@@202 $generated@@203 ($generated@@184 $generated@@201 $generated@@202 $generated@@203 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@182 $generated@@201 $generated@@202 $generated@@203 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (= ($generated@@13 ($generated@@182 $generated@@47 $generated@@66 $generated@@9 ($generated@@183 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (or (not (= $generated@@214 $generated@@210)) (not true)) ($generated@@13 ($generated@@64 $generated@@9 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@47 ($generated@@68 $generated@@66 $generated@@67) $generated@@211 $generated@@214) $generated@@212)))) $generated@@213))
 :pattern ( ($generated@@182 $generated@@47 $generated@@66 $generated@@9 ($generated@@183 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (and (= ($generated@@137 ($generated@@40 $generated@@217 $generated@@218)) $generated@@3) (= ($generated@@216 ($generated@@40 $generated@@217 $generated@@218)) $generated@@6))
 :pattern ( ($generated@@40 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ) (!  (or (= $generated@@219 $generated@@119) (exists (($generated@@220 T@U) ) ($generated@@44 ($generated@@163 $generated@@219) $generated@@220)))
 :pattern ( ($generated@@163 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ) (!  (or (= $generated@@222 $generated@@119) (exists (($generated@@223 T@U) ) ($generated@@44 ($generated@@221 $generated@@222) $generated@@223)))
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@44 ($generated@@224 $generated@@225) $generated@@226)  (and ($generated@@44 ($generated@@163 $generated@@225) ($generated@@148 ($generated@@64 $generated@@39 $generated@@226))) (= ($generated@@65 $generated@@67 $generated@@67 ($generated@@162 $generated@@225) ($generated@@148 ($generated@@64 $generated@@39 $generated@@226))) ($generated@@151 ($generated@@64 $generated@@39 $generated@@226)))))
 :pattern ( ($generated@@44 ($generated@@224 $generated@@225) $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@44 ($generated@@221 $generated@@227) $generated@@228) (exists (($generated@@229 T@U) ) (!  (and ($generated@@44 ($generated@@163 $generated@@227) $generated@@229) (= $generated@@228 ($generated@@65 $generated@@67 $generated@@67 ($generated@@162 $generated@@227) $generated@@229)))
 :pattern ( ($generated@@44 ($generated@@163 $generated@@227) $generated@@229))
 :pattern ( ($generated@@65 $generated@@67 $generated@@67 ($generated@@162 $generated@@227) $generated@@229))
)))
 :pattern ( ($generated@@44 ($generated@@221 $generated@@227) $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ) (! (= ($generated@@169 ($generated@@100 $generated@@39 $generated@@230)) ($generated@@170 $generated@@230))
 :pattern ( ($generated@@169 ($generated@@100 $generated@@39 $generated@@230)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= ($generated@@61 ($generated@@163 $generated@@231)) ($generated@@118 $generated@@231))
 :pattern ( ($generated@@61 ($generated@@163 $generated@@231)))
 :pattern ( ($generated@@118 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ) (! (= ($generated@@61 ($generated@@224 $generated@@232)) ($generated@@118 $generated@@232))
 :pattern ( ($generated@@61 ($generated@@224 $generated@@232)))
 :pattern ( ($generated@@118 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ) (! (<= ($generated@@61 ($generated@@221 $generated@@233)) ($generated@@118 $generated@@233))
 :pattern ( ($generated@@61 ($generated@@221 $generated@@233)))
 :pattern ( ($generated@@118 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> ($generated@@56 $generated@@234 ($generated@@25 0)) (and (= ($generated@@100 $generated@@10 ($generated@@64 $generated@@10 $generated@@234)) $generated@@234) ($generated@@35 $generated@@10 ($generated@@64 $generated@@10 $generated@@234) ($generated@@25 0))))
 :pattern ( ($generated@@56 $generated@@234 ($generated@@25 0)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> ($generated@@56 $generated@@235 ($generated@@107 $generated@@236)) (and (= ($generated@@100 $generated@@106 ($generated@@64 $generated@@106 $generated@@235)) $generated@@235) ($generated@@35 $generated@@106 ($generated@@64 $generated@@106 $generated@@235) ($generated@@107 $generated@@236))))
 :pattern ( ($generated@@56 $generated@@235 ($generated@@107 $generated@@236)))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> ($generated@@56 $generated@@237 ($generated@@25 3)) (and (= ($generated@@100 $generated@@28 ($generated@@64 $generated@@28 $generated@@237)) $generated@@237) ($generated@@35 $generated@@28 ($generated@@64 $generated@@28 $generated@@237) ($generated@@25 3))))
 :pattern ( ($generated@@56 $generated@@237 ($generated@@25 3)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (= ($generated@@35 $generated@@161 $generated@@238 ($generated@@130 $generated@@239 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> ($generated@@44 ($generated@@163 $generated@@238) $generated@@241) (and ($generated@@56 ($generated@@65 $generated@@67 $generated@@67 ($generated@@162 $generated@@238) $generated@@241) $generated@@240) ($generated@@56 $generated@@241 $generated@@239)))
 :pattern ( ($generated@@65 $generated@@67 $generated@@67 ($generated@@162 $generated@@238) $generated@@241))
 :pattern ( ($generated@@44 ($generated@@163 $generated@@238) $generated@@241))
)))
 :pattern ( ($generated@@35 $generated@@161 $generated@@238 ($generated@@130 $generated@@239 $generated@@240)))
)))
(assert (= ($generated@@137 $generated@@52) $generated@@4))
(assert (= ($generated@@216 $generated@@52) $generated@@7))
(assert (= ($generated@@137 $generated@@48) $generated@@5))
(assert (= ($generated@@216 $generated@@48) $generated@@7))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and ($generated@@91 $generated@@244) (and ($generated@@38 $generated@@242) (exists (($generated@@245 T@U) ) (! ($generated@@24 $generated@@39 $generated@@242 ($generated@@40 $generated@@243 $generated@@245) $generated@@244)
 :pattern ( ($generated@@24 $generated@@39 $generated@@242 ($generated@@40 $generated@@243 $generated@@245) $generated@@244))
)))) ($generated@@92 ($generated@@148 $generated@@242) $generated@@243 $generated@@244))
 :pattern ( ($generated@@92 ($generated@@148 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and ($generated@@91 $generated@@248) (and ($generated@@38 $generated@@246) (exists (($generated@@249 T@U) ) (! ($generated@@24 $generated@@39 $generated@@246 ($generated@@40 $generated@@249 $generated@@247) $generated@@248)
 :pattern ( ($generated@@24 $generated@@39 $generated@@246 ($generated@@40 $generated@@249 $generated@@247) $generated@@248))
)))) ($generated@@92 ($generated@@151 $generated@@246) $generated@@247 $generated@@248))
 :pattern ( ($generated@@92 ($generated@@151 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (!  (or (= $generated@@250 $generated@@119) (exists (($generated@@251 T@U) ($generated@@252 T@U) ) ($generated@@44 ($generated@@224 $generated@@250) ($generated@@100 $generated@@39 ($generated@@55 $generated@@251 $generated@@252)))))
 :pattern ( ($generated@@224 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> ($generated@@35 $generated@@161 $generated@@253 ($generated@@130 $generated@@254 $generated@@255)) (and (and ($generated@@35 $generated@@106 ($generated@@163 $generated@@253) ($generated@@107 $generated@@254)) ($generated@@35 $generated@@106 ($generated@@221 $generated@@253) ($generated@@107 $generated@@255))) ($generated@@35 $generated@@106 ($generated@@224 $generated@@253) ($generated@@107 ($generated@@40 $generated@@254 $generated@@255)))))
 :pattern ( ($generated@@35 $generated@@161 $generated@@253 ($generated@@130 $generated@@254 $generated@@255)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@261  (=> (and (= $generated@@256 ($generated@@183 $generated@@49 $generated@@257 $generated@@1 false)) (= (ControlFlow 0 2) (- 0 1))) (= ($generated@@61 ($generated@@224 $generated@@258)) ($generated@@118 $generated@@258)))))
(let (($generated@@262  (=> (and ($generated@@91 $generated@@257) ($generated@@259 $generated@@257)) (=> (and (and ($generated@@35 $generated@@161 $generated@@258 ($generated@@130 $generated@@52 ($generated@@25 3))) ($generated@@24 $generated@@161 $generated@@258 ($generated@@130 $generated@@52 ($generated@@25 3)) $generated@@257)) (and (= 1 $generated@@260) (= (ControlFlow 0 3) 2))) $generated@@261))))
$generated@@262)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
