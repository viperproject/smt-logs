(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (T@T T@U T@U) Bool)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 (T@U T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@32 () Int)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@96 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@3 $generated@@21) 3))
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ($generated@@25 T@U) ) (!  (=> ($generated@@20 $generated@@21 $generated@@25 ($generated@@22 $generated@@23 $generated@@24)) ($generated@@19 $generated@@25))
 :pattern ( ($generated@@19 $generated@@25) ($generated@@20 $generated@@21 $generated@@25 ($generated@@22 $generated@@23 $generated@@24)))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@20 $generated@@21 ($generated@@26 $generated@@30 $generated@@31) ($generated@@22 $generated@@28 $generated@@29))  (and ($generated@@27 $generated@@30 $generated@@28) ($generated@@27 $generated@@31 $generated@@29)))
 :pattern ( ($generated@@20 $generated@@21 ($generated@@26 $generated@@30 $generated@@31) ($generated@@22 $generated@@28 $generated@@29)))
)))
(assert (= ($generated@@3 $generated@@35) 4))
(assert  (=> (<= 0 $generated@@32) (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (or ($generated@@36 $generated@@37 ($generated@@34 $generated@@35 $generated@@38)) (and (< 0 $generated@@32) ($generated@@27 $generated@@38 $generated@@37))) (= ($generated@@33 $generated@@37 ($generated@@34 $generated@@35 $generated@@38)) ($generated@@34 $generated@@21 ($generated@@26 ($generated@@34 $generated@@35 $generated@@38) ($generated@@34 $generated@@35 $generated@@38)))))
 :weight 3
 :pattern ( ($generated@@33 $generated@@37 ($generated@@34 $generated@@35 $generated@@38)))
))))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@34 $generated@@40 $generated@@39) $generated@@39)
 :pattern ( ($generated@@34 $generated@@40 $generated@@39))
)))
(assert  (=> (<= 0 $generated@@32) (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (or ($generated@@36 $generated@@41 $generated@@42) (and (< 0 $generated@@32) ($generated@@27 $generated@@42 $generated@@41))) ($generated@@20 $generated@@21 ($generated@@33 $generated@@41 $generated@@42) ($generated@@22 $generated@@41 $generated@@41)))
 :pattern ( ($generated@@33 $generated@@41 $generated@@42))
))))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> ($generated@@44 $generated@@50) (= ($generated@@43 $generated@@21 ($generated@@26 $generated@@48 $generated@@49) ($generated@@22 $generated@@46 $generated@@47) $generated@@50)  (and ($generated@@45 $generated@@48 $generated@@46 $generated@@50) ($generated@@45 $generated@@49 $generated@@47 $generated@@50))))
 :pattern ( ($generated@@43 $generated@@21 ($generated@@26 $generated@@48 $generated@@49) ($generated@@22 $generated@@46 $generated@@47) $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@19 $generated@@52) (= ($generated@@51 $generated@@52) $generated@@0))
 :pattern ( ($generated@@19 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 ($generated@@53 $generated@@56 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@53 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@19 $generated@@57) (exists (($generated@@58 T@U) ($generated@@59 T@U) ) (= $generated@@57 ($generated@@26 $generated@@58 $generated@@59))))
 :pattern ( ($generated@@19 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@45 ($generated@@54 $generated@@63 $generated@@60) $generated@@61 $generated@@62) ($generated@@43 $generated@@63 $generated@@60 $generated@@61 $generated@@62))
 :pattern ( ($generated@@45 ($generated@@54 $generated@@63 $generated@@60) $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@27 ($generated@@54 $generated@@66 $generated@@64) $generated@@65) ($generated@@20 $generated@@66 $generated@@64 $generated@@65))
 :pattern ( ($generated@@27 ($generated@@54 $generated@@66 $generated@@64) $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@51 ($generated@@26 $generated@@67 $generated@@68)) $generated@@0)
 :pattern ( ($generated@@26 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@69 ($generated@@22 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@22 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@72 ($generated@@22 $generated@@73 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@22 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@75 ($generated@@26 $generated@@76 $generated@@77)) $generated@@76)
 :pattern ( ($generated@@26 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@78 ($generated@@26 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@26 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@53 $generated@@82 ($generated@@54 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@54 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (< ($generated@@83 $generated@@85) ($generated@@84 ($generated@@26 $generated@@85 $generated@@86)))
 :pattern ( ($generated@@26 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (< ($generated@@83 $generated@@88) ($generated@@84 ($generated@@26 $generated@@87 $generated@@88)))
 :pattern ( ($generated@@26 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> ($generated@@27 $generated@@91 ($generated@@22 $generated@@89 $generated@@90)) (and (= ($generated@@54 $generated@@21 ($generated@@53 $generated@@21 $generated@@91)) $generated@@91) ($generated@@20 $generated@@21 ($generated@@53 $generated@@21 $generated@@91) ($generated@@22 $generated@@89 $generated@@90))))
 :pattern ( ($generated@@27 $generated@@91 ($generated@@22 $generated@@89 $generated@@90)))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@92 $generated@@102 $generated@@103 $generated@@104 ($generated@@98 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@107 $generated@@108) $generated@@105)
 :weight 0
)) (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@92 $generated@@109 $generated@@110 $generated@@111 ($generated@@98 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@92 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@92 $generated@@118 $generated@@119 $generated@@120 ($generated@@98 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@92 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)))) (= ($generated@@3 $generated@@93) 5)) (= ($generated@@3 $generated@@94) 6)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@96 $generated@@127 $generated@@128 ($generated@@99 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@129) $generated@@131) $generated@@129)
 :weight 0
))) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 $generated@@132 $generated@@133 ($generated@@99 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@132 $generated@@133 $generated@@135 $generated@@137)))
 :weight 0
))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (= ($generated@@3 ($generated@@97 $generated@@138 $generated@@139)) 7))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@97 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@97 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 Bool) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@8 ($generated@@92 $generated@@93 $generated@@94 $generated@@4 ($generated@@95 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))  (=> (and (or (not (= $generated@@148 $generated@@144)) (not true)) ($generated@@8 ($generated@@53 $generated@@4 ($generated@@96 $generated@@94 $generated@@35 ($generated@@96 $generated@@93 ($generated@@97 $generated@@94 $generated@@35) $generated@@145 $generated@@148) $generated@@146)))) $generated@@147))
 :pattern ( ($generated@@92 $generated@@93 $generated@@94 $generated@@4 ($generated@@95 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (and (= ($generated@@150 ($generated@@22 $generated@@152 $generated@@153)) $generated@@1) (= ($generated@@151 ($generated@@22 $generated@@152 $generated@@153)) $generated@@2))
 :pattern ( ($generated@@22 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@83 ($generated@@54 $generated@@21 $generated@@154)) ($generated@@84 $generated@@154))
 :pattern ( ($generated@@83 ($generated@@54 $generated@@21 $generated@@154)))
)))
(assert  (=> (<= 0 $generated@@32) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (or ($generated@@36 $generated@@155 $generated@@156) (and (< 0 $generated@@32) ($generated@@27 $generated@@156 $generated@@155))) (= ($generated@@33 $generated@@155 $generated@@156) ($generated@@26 $generated@@156 $generated@@156)))
 :pattern ( ($generated@@33 $generated@@155 $generated@@156))
))))
(assert  (=> (<= 0 $generated@@32) (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (or ($generated@@36 $generated@@158 $generated@@159) (and (< 0 $generated@@32) (and ($generated@@27 $generated@@159 $generated@@158) ($generated@@45 $generated@@159 $generated@@158 $generated@@157)))) ($generated@@44 $generated@@157)) ($generated@@43 $generated@@21 ($generated@@33 $generated@@158 $generated@@159) ($generated@@22 $generated@@158 $generated@@158) $generated@@157))
 :pattern ( ($generated@@43 $generated@@21 ($generated@@33 $generated@@158 $generated@@159) ($generated@@22 $generated@@158 $generated@@158) $generated@@157))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and ($generated@@44 $generated@@162) (and ($generated@@19 $generated@@160) (exists (($generated@@163 T@U) ) (! ($generated@@43 $generated@@21 $generated@@160 ($generated@@22 $generated@@161 $generated@@163) $generated@@162)
 :pattern ( ($generated@@43 $generated@@21 $generated@@160 ($generated@@22 $generated@@161 $generated@@163) $generated@@162))
)))) ($generated@@45 ($generated@@75 $generated@@160) $generated@@161 $generated@@162))
 :pattern ( ($generated@@45 ($generated@@75 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and ($generated@@44 $generated@@166) (and ($generated@@19 $generated@@164) (exists (($generated@@167 T@U) ) (! ($generated@@43 $generated@@21 $generated@@164 ($generated@@22 $generated@@167 $generated@@165) $generated@@166)
 :pattern ( ($generated@@43 $generated@@21 $generated@@164 ($generated@@22 $generated@@167 $generated@@165) $generated@@166))
)))) ($generated@@45 ($generated@@78 $generated@@164) $generated@@165 $generated@@166))
 :pattern ( ($generated@@45 ($generated@@78 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@26 ($generated@@34 $generated@@35 $generated@@168) ($generated@@34 $generated@@35 $generated@@169)) ($generated@@34 $generated@@21 ($generated@@26 $generated@@168 $generated@@169)))
 :pattern ( ($generated@@26 ($generated@@34 $generated@@35 $generated@@168) ($generated@@34 $generated@@35 $generated@@169)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@54 $generated@@171 ($generated@@34 $generated@@171 $generated@@170)) ($generated@@34 $generated@@35 ($generated@@54 $generated@@171 $generated@@170)))
 :pattern ( ($generated@@54 $generated@@171 ($generated@@34 $generated@@171 $generated@@170)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Bool)
(declare-fun $generated@@184 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@185  (=> (= $generated@@172 ($generated@@95 $generated@@173 $generated@@174 $generated false)) (=> (and ($generated@@27 $generated@@175 $generated@@176) ($generated@@45 $generated@@175 $generated@@176 $generated@@174)) (=> (and (and ($generated@@27 $generated@@177 $generated@@176) ($generated@@45 $generated@@177 $generated@@176 $generated@@174)) ($generated@@45 $generated@@178 $generated@@176 $generated@@174)) (=> (and (and (and ($generated@@36 $generated@@176 $generated@@178) ($generated@@19 ($generated@@33 $generated@@176 $generated@@178))) (and (= $generated@@179 ($generated@@33 $generated@@176 $generated@@178)) ($generated@@36 $generated@@176 $generated@@178))) (and (and ($generated@@36 $generated@@176 $generated@@178) ($generated@@20 $generated@@21 $generated@@179 ($generated@@22 $generated@@176 $generated@@176))) (and ($generated@@19 $generated@@179) (= ($generated@@26 $generated@@175 $generated@@177) $generated@@179)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true))))))))
(let (($generated@@186  (=> (and ($generated@@44 $generated@@174) ($generated@@180 $generated@@174)) (=> (and (and (and ($generated@@27 $generated@@178 $generated@@176) ($generated@@45 $generated@@178 $generated@@176 $generated@@174)) (and (=> $generated@@181 (and ($generated@@27 $generated@@182 $generated@@176) ($generated@@45 $generated@@182 $generated@@176 $generated@@174))) true)) (and (and (=> $generated@@183 (and ($generated@@27 $generated@@184 $generated@@176) ($generated@@45 $generated@@184 $generated@@176 $generated@@174))) true) (and (= 1 $generated@@32) (= (ControlFlow 0 4) 2)))) $generated@@185))))
$generated@@186)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
