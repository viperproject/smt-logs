(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@73 (Int) Int)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated@@1) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@27 $generated@@1) $generated@@2))
(assert (= ($generated@@9 $generated@@29) 3))
(assert (forall (($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@33 $generated@@30)  (or (= $generated@@33 $generated@@31) (= ($generated@@32 $generated@@33) $generated@@30)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@33 $generated@@30))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@36 $generated@@35 $generated@@37) ($generated@@34 $generated@@29 $generated@@36 $generated@@30 $generated@@37))
 :pattern ( ($generated@@34 $generated@@29 $generated@@36 $generated@@35 $generated@@37))
 :pattern ( ($generated@@34 $generated@@29 $generated@@36 $generated@@30 $generated@@37))
)))
(assert (= ($generated@@25 $generated@@38) 0))
(assert (= ($generated@@39 $generated@@4 $generated@@7) $generated@@38))
(assert  (not ($generated@@40 $generated@@38)))
(assert (= ($generated@@25 $generated@@41) 0))
(assert (= ($generated@@39 $generated@@4 $generated@@8) $generated@@41))
(assert  (not ($generated@@40 $generated@@41)))
(assert  (and (and (and (and (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@43 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@43 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@9 $generated@@44) 4)) (= ($generated@@9 $generated@@45) 5)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@9 ($generated@@46 $generated@@61 $generated@@62)) 6))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@46 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@46 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@67 $generated@@30 $generated@@68)  (or (= $generated@@67 $generated@@31) ($generated@@14 ($generated@@42 $generated@@10 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@68 $generated@@67) $generated@@1)))))
 :pattern ( ($generated@@34 $generated@@29 $generated@@67 $generated@@30 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@69 $generated@@70 $generated@@71) (forall (($generated@@72 T@U) ) (!  (=> ($generated@@14 ($generated@@42 $generated@@10 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@70 $generated@@72) $generated@@1))) ($generated@@14 ($generated@@42 $generated@@10 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@71 $generated@@72) $generated@@1))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@71 $generated@@72) $generated@@1))
)))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 Int) ) (! (= ($generated@@73 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 ($generated@@42 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@42 $generated@@80 $generated@@79))
)))
(assert ($generated@@40 $generated@@1))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and (and ($generated@@81 $generated@@82) (and (or (not (= $generated@@83 $generated@@31)) (not true)) (= ($generated@@32 $generated@@83) $generated@@30))) ($generated@@14 ($generated@@42 $generated@@10 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@82 $generated@@83) $generated@@1)))) ($generated@@34 $generated@@11 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@82 $generated@@83) $generated@@38)) $generated $generated@@82))
 :pattern ( ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@82 $generated@@83) $generated@@38)))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (and ($generated@@81 $generated@@84) (and (or (not (= $generated@@85 $generated@@31)) (not true)) (= ($generated@@32 $generated@@85) $generated@@30))) ($generated@@14 ($generated@@42 $generated@@10 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@84 $generated@@85) $generated@@1)))) ($generated@@34 $generated@@11 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@84 $generated@@85) $generated@@41)) $generated $generated@@84))
 :pattern ( ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@84 $generated@@85) $generated@@41)))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (!  (=> ($generated@@69 $generated@@86 $generated@@87) (=> ($generated@@34 $generated@@90 $generated@@88 $generated@@89 $generated@@86) ($generated@@34 $generated@@90 $generated@@88 $generated@@89 $generated@@87)))
 :pattern ( ($generated@@69 $generated@@86 $generated@@87) ($generated@@34 $generated@@90 $generated@@88 $generated@@89 $generated@@86))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@91 $generated@@35)  (and ($generated@@28 $generated@@29 $generated@@91 $generated@@30) (or (not (= $generated@@91 $generated@@31)) (not true))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@91 $generated@@35))
 :pattern ( ($generated@@28 $generated@@29 $generated@@91 $generated@@30))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (or (not (= $generated@@92 $generated@@94)) (not true)) (=> (and ($generated@@69 $generated@@92 $generated@@93) ($generated@@69 $generated@@93 $generated@@94)) ($generated@@69 $generated@@92 $generated@@94)))
 :pattern ( ($generated@@69 $generated@@92 $generated@@93) ($generated@@69 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (and (= ($generated@@95 ($generated@@39 $generated@@96 $generated@@97)) $generated@@96) (= ($generated@@27 ($generated@@39 $generated@@96 $generated@@97)) $generated@@97))
 :pattern ( ($generated@@39 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@42 $generated@@99 ($generated@@78 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (and ($generated@@81 $generated@@100) (and (or (not (= $generated@@101 $generated@@31)) (not true)) (= ($generated@@32 $generated@@101) $generated@@30))) ($generated@@28 $generated@@11 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@100 $generated@@101) $generated@@38)) $generated))
 :pattern ( ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@100 $generated@@101) $generated@@38)))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@81 $generated@@102) (and (or (not (= $generated@@103 $generated@@31)) (not true)) (= ($generated@@32 $generated@@103) $generated@@30))) ($generated@@28 $generated@@11 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@102 $generated@@103) $generated@@41)) $generated))
 :pattern ( ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@102 $generated@@103) $generated@@41)))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@81 ($generated@@47 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@104 $generated@@105 ($generated@@47 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@104 $generated@@105) $generated@@106 $generated@@107))) ($generated@@69 $generated@@104 ($generated@@47 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@104 $generated@@105 ($generated@@47 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@104 $generated@@105) $generated@@106 $generated@@107))))
 :pattern ( ($generated@@47 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@104 $generated@@105 ($generated@@47 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@104 $generated@@105) $generated@@106 $generated@@107)))
)))
(assert (= ($generated@@26 $generated@@35) $generated@@3))
(assert (= ($generated@@108 $generated@@35) $generated@@6))
(assert (= ($generated@@26 $generated@@30) $generated@@5))
(assert (= ($generated@@108 $generated@@30) $generated@@6))
(assert  (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@109 $generated@@112 $generated@@113 $generated@@114 ($generated@@111 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@117 $generated@@118) $generated@@115)
 :weight 0
)) (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@109 $generated@@119 $generated@@120 $generated@@121 ($generated@@111 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@109 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@109 $generated@@128 $generated@@129 $generated@@130 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@109 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@14 ($generated@@109 $generated@@29 $generated@@44 $generated@@10 ($generated@@110 $generated@@137 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@142 $generated@@143))  (=> (and (or (not (= $generated@@142 $generated@@137)) (not true)) ($generated@@14 ($generated@@42 $generated@@10 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@138 $generated@@142) $generated@@139)))) (or (= $generated@@142 $generated@@140) (= $generated@@142 $generated@@141))))
 :pattern ( ($generated@@109 $generated@@29 $generated@@44 $generated@@10 ($generated@@110 $generated@@137 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 Int) ) (! (= ($generated@@78 $generated@@11 ($generated@@15 ($generated@@73 $generated@@144))) ($generated@@75 $generated@@45 ($generated@@78 $generated@@11 ($generated@@15 $generated@@144))))
 :pattern ( ($generated@@78 $generated@@11 ($generated@@15 ($generated@@73 $generated@@144))))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@78 $generated@@146 ($generated@@75 $generated@@146 $generated@@145)) ($generated@@75 $generated@@45 ($generated@@78 $generated@@146 $generated@@145)))
 :pattern ( ($generated@@78 $generated@@146 ($generated@@75 $generated@@146 $generated@@145)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! ($generated@@34 $generated@@11 $generated@@148 $generated $generated@@147)
 :pattern ( ($generated@@34 $generated@@11 $generated@@148 $generated $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! ($generated@@28 $generated@@11 $generated@@149 $generated)
 :pattern ( ($generated@@28 $generated@@11 $generated@@149 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@161  (=> (= $generated@@150 ($generated@@110 $generated@@31 $generated@@151 $generated@@1 $generated@@152 $generated@@153)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (or (not (= $generated@@152 $generated@@31)) (not true))) (=> (or (not (= $generated@@152 $generated@@31)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 11)) ($generated@@14 ($generated@@109 $generated@@29 $generated@@44 $generated@@10 $generated@@150 $generated@@152 $generated@@38))) (=> ($generated@@14 ($generated@@109 $generated@@29 $generated@@44 $generated@@10 $generated@@150 $generated@@152 $generated@@38)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (or (not (= $generated@@153 $generated@@31)) (not true))) (=> (or (not (= $generated@@153 $generated@@31)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@14 ($generated@@109 $generated@@29 $generated@@44 $generated@@10 $generated@@150 $generated@@153 $generated@@38))) (=> ($generated@@14 ($generated@@109 $generated@@29 $generated@@44 $generated@@10 $generated@@150 $generated@@153 $generated@@38)) (=> (= $generated@@154 ($generated@@73 4)) (and (=> (= (ControlFlow 0 2) (- 0 8)) (or (not (= $generated@@152 $generated@@31)) (not true))) (=> (or (not (= $generated@@152 $generated@@31)) (not true)) (=> (= $generated@@155 ($generated@@16 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@151 $generated@@152) $generated@@41)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (or (not (= $generated@@153 $generated@@152)) (not true)) (= $generated@@155 $generated@@154))) (=> (or (or (not (= $generated@@153 $generated@@152)) (not true)) (= $generated@@155 $generated@@154)) (=> (and (and (= $generated@@156 ($generated@@47 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@151 $generated@@152 ($generated@@47 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@151 $generated@@152) $generated@@38 ($generated@@78 $generated@@11 ($generated@@15 $generated@@154))))) ($generated@@81 $generated@@156)) (and (= $generated@@157 ($generated@@47 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@156 $generated@@153 ($generated@@47 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@156 $generated@@153) $generated@@38 ($generated@@78 $generated@@11 ($generated@@15 $generated@@155))))) ($generated@@81 $generated@@157))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (not (= $generated@@152 $generated@@31)) (not true))) (=> (or (not (= $generated@@152 $generated@@31)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@14 ($generated@@109 $generated@@29 $generated@@44 $generated@@10 $generated@@150 $generated@@152 $generated@@38))) (=> ($generated@@14 ($generated@@109 $generated@@29 $generated@@44 $generated@@10 $generated@@150 $generated@@152 $generated@@38)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@152 $generated@@31)) (not true))) (=> (or (not (= $generated@@152 $generated@@31)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@14 ($generated@@109 $generated@@29 $generated@@44 $generated@@10 $generated@@150 $generated@@152 $generated@@41))) (=> ($generated@@14 ($generated@@109 $generated@@29 $generated@@44 $generated@@10 $generated@@150 $generated@@152 $generated@@41)) (=> (and (= $generated@@158 ($generated@@73 3)) (= (ControlFlow 0 2) (- 0 1))) (or (not (= $generated@@152 $generated@@31)) (not true)))))))))))))))))))))))))))))
(let (($generated@@162  (=> (and (and ($generated@@81 $generated@@151) ($generated@@159 $generated@@151)) (and ($generated@@28 $generated@@29 $generated@@152 $generated@@35) ($generated@@34 $generated@@29 $generated@@152 $generated@@35 $generated@@151))) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@153 $generated@@35) ($generated@@34 $generated@@29 $generated@@153 $generated@@35 $generated@@151)) (= 1 $generated@@160)) (and (or (not (= $generated@@152 $generated@@153)) (not true)) (= (ControlFlow 0 13) 2))) $generated@@161))))
$generated@@162)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
