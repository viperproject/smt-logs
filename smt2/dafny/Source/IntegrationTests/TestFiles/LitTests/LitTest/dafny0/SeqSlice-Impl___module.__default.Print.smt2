(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@U Int) T@U)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U Int) T@U)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@34 (Int) Int)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@U Int) T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (Int) T@U)
(declare-fun $generated@@65 () Int)
(declare-fun $generated@@66 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@74 ((_ BitVec 10)) Int)
(declare-fun $generated@@84 ((_ BitVec 24)) Int)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@104 (T@U) Int)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@110 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@T T@T) T@T)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T) T@T)
(declare-fun $generated@@116 (T@T) T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@20 $generated@@21) 0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 Int) ) (!  (=> (and (<= 0 $generated@@26) (<= $generated@@26 ($generated@@20 $generated@@24))) (= ($generated@@22 ($generated@@23 $generated@@24 $generated@@25) $generated@@26) ($generated@@23 ($generated@@22 $generated@@24 $generated@@26) $generated@@25)))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@24 $generated@@25) $generated@@26))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 Int) ) (!  (=> (= $generated@@31 ($generated@@20 $generated@@29)) (and (= ($generated@@27 ($generated@@28 $generated@@29 $generated@@30) $generated@@31) $generated@@29) (= ($generated@@22 ($generated@@28 $generated@@29 $generated@@30) $generated@@31) $generated@@30)))
 :pattern ( ($generated@@27 ($generated@@28 $generated@@29 $generated@@30) $generated@@31))
 :pattern ( ($generated@@22 ($generated@@28 $generated@@29 $generated@@30) $generated@@31))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 Int) ) (!  (=> (= $generated@@33 0) (= ($generated@@22 $generated@@32 $generated@@33) $generated@@32))
 :pattern ( ($generated@@22 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 Int) ) (! (= ($generated@@34 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@T) ) (! (= ($generated@@36 $generated@@38 $generated@@37) $generated@@37)
 :pattern ( ($generated@@36 $generated@@38 $generated@@37))
)))
(assert (= ($generated@@3 $generated@@40) 3))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (and ($generated@@39 $generated@@40 $generated@@43 ($generated@@41 $generated@@45)) ($generated@@42 $generated@@44 $generated@@45)) ($generated@@39 $generated@@40 ($generated@@23 $generated@@43 $generated@@44) ($generated@@41 $generated@@45)))
 :pattern ( ($generated@@39 $generated@@40 ($generated@@23 $generated@@43 $generated@@44) ($generated@@41 $generated@@45)))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 Int) ($generated@@49 Int) ) (!  (=> (and (and (<= 0 $generated@@49) (< $generated@@49 $generated@@48)) (< $generated@@49 ($generated@@20 $generated@@47))) (= ($generated@@46 ($generated@@27 $generated@@47 $generated@@48) $generated@@49) ($generated@@46 $generated@@47 $generated@@49)))
 :weight 25
 :pattern ( ($generated@@46 ($generated@@27 $generated@@47 $generated@@48) $generated@@49))
 :pattern ( ($generated@@46 $generated@@47 $generated@@49) ($generated@@27 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 Int) ) (!  (=> (and (<= 0 $generated@@51) (<= $generated@@51 ($generated@@20 $generated@@50))) (= ($generated@@20 ($generated@@22 $generated@@50 $generated@@51)) (- ($generated@@20 $generated@@50) $generated@@51)))
 :pattern ( ($generated@@20 ($generated@@22 $generated@@50 $generated@@51)))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@52 $generated@@53 $generated@@54)  (and (= ($generated@@20 $generated@@53) ($generated@@20 $generated@@54)) (forall (($generated@@55 Int) ) (!  (=> (and (<= 0 $generated@@55) (< $generated@@55 ($generated@@20 $generated@@53))) (= ($generated@@46 $generated@@53 $generated@@55) ($generated@@46 $generated@@54 $generated@@55)))
 :pattern ( ($generated@@46 $generated@@53 $generated@@55))
 :pattern ( ($generated@@46 $generated@@54 $generated@@55))
))))
 :pattern ( ($generated@@52 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@57 $generated@@59 ($generated@@56 $generated@@59 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@56 $generated@@59 $generated@@58))
)))
(assert (= ($generated@@3 $generated@@61) 4))
(assert (= $generated@@60 ($generated@@36 $generated@@40 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 $generated@@21 ($generated@@57 $generated@@61 ($generated@@62 65))) ($generated@@57 $generated@@61 ($generated@@62 66))) ($generated@@57 $generated@@61 ($generated@@62 67))) ($generated@@57 $generated@@61 ($generated@@62 68))) ($generated@@57 $generated@@61 ($generated@@62 69))) ($generated@@57 $generated@@61 ($generated@@62 70))) ($generated@@57 $generated@@61 ($generated@@62 71))) ($generated@@57 $generated@@61 ($generated@@62 72))) ($generated@@57 $generated@@61 ($generated@@62 73))) ($generated@@57 $generated@@61 ($generated@@62 74))) ($generated@@57 $generated@@61 ($generated@@62 75))) ($generated@@57 $generated@@61 ($generated@@62 76))) ($generated@@57 $generated@@61 ($generated@@62 77))) ($generated@@57 $generated@@61 ($generated@@62 78))) ($generated@@57 $generated@@61 ($generated@@62 79))) ($generated@@57 $generated@@61 ($generated@@62 80))) ($generated@@57 $generated@@61 ($generated@@62 81))) ($generated@@57 $generated@@61 ($generated@@62 82))) ($generated@@57 $generated@@61 ($generated@@62 83))) ($generated@@57 $generated@@61 ($generated@@62 84))) ($generated@@57 $generated@@61 ($generated@@62 85))) ($generated@@57 $generated@@61 ($generated@@62 86))) ($generated@@57 $generated@@61 ($generated@@62 87))) ($generated@@57 $generated@@61 ($generated@@62 88))) ($generated@@57 $generated@@61 ($generated@@62 89))) ($generated@@57 $generated@@61 ($generated@@62 90))) ($generated@@57 $generated@@61 ($generated@@62 97))) ($generated@@57 $generated@@61 ($generated@@62 98))) ($generated@@57 $generated@@61 ($generated@@62 99))) ($generated@@57 $generated@@61 ($generated@@62 100))) ($generated@@57 $generated@@61 ($generated@@62 101))) ($generated@@57 $generated@@61 ($generated@@62 102))) ($generated@@57 $generated@@61 ($generated@@62 103))) ($generated@@57 $generated@@61 ($generated@@62 104))) ($generated@@57 $generated@@61 ($generated@@62 105))) ($generated@@57 $generated@@61 ($generated@@62 106))) ($generated@@57 $generated@@61 ($generated@@62 107))) ($generated@@57 $generated@@61 ($generated@@62 108))) ($generated@@57 $generated@@61 ($generated@@62 109))) ($generated@@57 $generated@@61 ($generated@@62 110))) ($generated@@57 $generated@@61 ($generated@@62 111))) ($generated@@57 $generated@@61 ($generated@@62 112))) ($generated@@57 $generated@@61 ($generated@@62 113))) ($generated@@57 $generated@@61 ($generated@@62 114))) ($generated@@57 $generated@@61 ($generated@@62 115))) ($generated@@57 $generated@@61 ($generated@@62 116))) ($generated@@57 $generated@@61 ($generated@@62 117))) ($generated@@57 $generated@@61 ($generated@@62 118))) ($generated@@57 $generated@@61 ($generated@@62 119))) ($generated@@57 $generated@@61 ($generated@@62 120))) ($generated@@57 $generated@@61 ($generated@@62 121))) ($generated@@57 $generated@@61 ($generated@@62 122))) ($generated@@57 $generated@@61 ($generated@@62 48))) ($generated@@57 $generated@@61 ($generated@@62 49))) ($generated@@57 $generated@@61 ($generated@@62 50))) ($generated@@57 $generated@@61 ($generated@@62 51))) ($generated@@57 $generated@@61 ($generated@@62 52))) ($generated@@57 $generated@@61 ($generated@@62 53))) ($generated@@57 $generated@@61 ($generated@@62 54))) ($generated@@57 $generated@@61 ($generated@@62 55))) ($generated@@57 $generated@@61 ($generated@@62 56))) ($generated@@57 $generated@@61 ($generated@@62 57))) ($generated@@57 $generated@@61 ($generated@@62 43))) ($generated@@57 $generated@@61 ($generated@@62 47))))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@20 ($generated@@23 $generated@@63 $generated@@64)) (+ 1 ($generated@@20 $generated@@63)))
 :pattern ( ($generated@@23 $generated@@63 $generated@@64))
)))
(assert  (=> (< 0 $generated@@65) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@67 $generated@@68) ($generated@@66 $generated@@40 $generated@@60 ($generated@@41 $generated) $generated@@68))
 :pattern ( ($generated@@66 $generated@@40 $generated@@60 ($generated@@41 $generated) $generated@@68))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@57 $generated@@73 $generated@@70) $generated@@71 $generated@@72) ($generated@@66 $generated@@73 $generated@@70 $generated@@71 $generated@@72))
 :pattern ( ($generated@@69 ($generated@@57 $generated@@73 $generated@@70) $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@75 (_ BitVec 10)) ) (!  (and (and (<= 0 ($generated@@74 $generated@@75)) (< ($generated@@74 $generated@@75) 1024)) (= ($generated@@74 $generated@@75) (bv2int $generated@@75)))
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 Int) ($generated@@78 Int) ) (!  (=> (and (and (<= 0 $generated@@77) (<= 0 $generated@@78)) (< $generated@@78 (- ($generated@@20 $generated@@76) $generated@@77))) (= ($generated@@46 ($generated@@22 $generated@@76 $generated@@77) $generated@@78) ($generated@@46 $generated@@76 (+ $generated@@78 $generated@@77))))
 :weight 25
 :pattern ( ($generated@@46 ($generated@@22 $generated@@76 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@20 ($generated@@28 $generated@@79 $generated@@80)) (+ ($generated@@20 $generated@@79) ($generated@@20 $generated@@80)))
 :pattern ( ($generated@@20 ($generated@@28 $generated@@79 $generated@@80)))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 Int) ($generated@@83 T@U) ) (!  (and (=> (= $generated@@82 ($generated@@20 $generated@@81)) (= ($generated@@46 ($generated@@23 $generated@@81 $generated@@83) $generated@@82) $generated@@83)) (=> (or (not (= $generated@@82 ($generated@@20 $generated@@81))) (not true)) (= ($generated@@46 ($generated@@23 $generated@@81 $generated@@83) $generated@@82) ($generated@@46 $generated@@81 $generated@@82))))
 :pattern ( ($generated@@46 ($generated@@23 $generated@@81 $generated@@83) $generated@@82))
)))
(assert (forall (($generated@@85 (_ BitVec 24)) ) (!  (and (and (<= 0 ($generated@@84 $generated@@85)) (< ($generated@@84 $generated@@85) 16777216)) (= ($generated@@84 $generated@@85) (bv2int $generated@@85)))
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@52 $generated@@86 $generated@@87) (= $generated@@86 $generated@@87))
 :pattern ( ($generated@@52 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 Int) ) (!  (=> (and (<= 0 $generated@@89) (<= $generated@@89 ($generated@@20 $generated@@88))) (= ($generated@@20 ($generated@@27 $generated@@88 $generated@@89)) $generated@@89))
 :pattern ( ($generated@@20 ($generated@@27 $generated@@88 $generated@@89)))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@42 $generated@@90 $generated) (and (= ($generated@@57 $generated@@61 ($generated@@56 $generated@@61 $generated@@90)) $generated@@90) ($generated@@39 $generated@@61 ($generated@@56 $generated@@61 $generated@@90) $generated)))
 :pattern ( ($generated@@42 $generated@@90 $generated))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@42 ($generated@@57 $generated@@93 $generated@@91) $generated@@92) ($generated@@39 $generated@@93 $generated@@91 $generated@@92))
 :pattern ( ($generated@@42 ($generated@@57 $generated@@93 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (! (<= 0 ($generated@@20 $generated@@94))
 :pattern ( ($generated@@20 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@66 $generated@@40 $generated@@95 ($generated@@41 $generated@@96) $generated@@97) (forall (($generated@@98 Int) ) (!  (=> (and (<= 0 $generated@@98) (< $generated@@98 ($generated@@20 $generated@@95))) ($generated@@69 ($generated@@46 $generated@@95 $generated@@98) $generated@@96 $generated@@97))
 :pattern ( ($generated@@46 $generated@@95 $generated@@98))
)))
 :pattern ( ($generated@@66 $generated@@40 $generated@@95 ($generated@@41 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@99 ($generated@@41 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@41 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@19 ($generated@@41 $generated@@101)) $generated@@1)
 :pattern ( ($generated@@41 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@56 $generated@@103 ($generated@@57 $generated@@103 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@57 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@105 Int) ) (!  (=> (or (and (<= 0 $generated@@105) (< $generated@@105 55296)) (and (<= 57344 $generated@@105) (< $generated@@105 1114112))) (= ($generated@@104 ($generated@@62 $generated@@105)) $generated@@105))
 :pattern ( ($generated@@62 $generated@@105))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@106 $generated@@117 $generated@@118 $generated@@119 ($generated@@113 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@122 $generated@@123) $generated@@120)
 :weight 0
)) (and (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@106 $generated@@124 $generated@@125 $generated@@126 ($generated@@113 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@106 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@106 $generated@@133 $generated@@134 $generated@@135 ($generated@@113 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@106 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)))) (= ($generated@@3 $generated@@107) 5)) (= ($generated@@3 $generated@@108) 6)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@110 $generated@@142 $generated@@143 ($generated@@114 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@144) $generated@@146) $generated@@144)
 :weight 0
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@151 $generated@@152) (= ($generated@@110 $generated@@147 $generated@@148 ($generated@@114 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@152) ($generated@@110 $generated@@147 $generated@@148 $generated@@150 $generated@@152)))
 :weight 0
))) (= ($generated@@3 $generated@@111) 7)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (= ($generated@@3 ($generated@@112 $generated@@153 $generated@@154)) 8))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@115 ($generated@@112 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@112 $generated@@155 $generated@@156))
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@116 ($generated@@112 $generated@@157 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@112 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Bool) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@8 ($generated@@106 $generated@@107 $generated@@108 $generated@@4 ($generated@@109 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))  (=> (and (or (not (= $generated@@163 $generated@@159)) (not true)) ($generated@@8 ($generated@@56 $generated@@4 ($generated@@110 $generated@@108 $generated@@111 ($generated@@110 $generated@@107 ($generated@@112 $generated@@108 $generated@@111) $generated@@160 $generated@@163) $generated@@161)))) $generated@@162))
 :pattern ( ($generated@@106 $generated@@107 $generated@@108 $generated@@4 ($generated@@109 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (and (= ($generated@@165 ($generated@@23 $generated@@167 $generated@@168)) $generated@@167) (= ($generated@@166 ($generated@@23 $generated@@167 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@23 $generated@@167 $generated@@168))
)))
(assert  (=> (< 0 $generated@@65) ($generated@@39 $generated@@40 $generated@@60 ($generated@@41 $generated))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@42 $generated@@169 ($generated@@41 $generated@@170)) (and (= ($generated@@57 $generated@@40 ($generated@@56 $generated@@40 $generated@@169)) $generated@@169) ($generated@@39 $generated@@40 ($generated@@56 $generated@@40 $generated@@169) ($generated@@41 $generated@@170))))
 :pattern ( ($generated@@42 $generated@@169 ($generated@@41 $generated@@170)))
)))
(assert (forall (($generated@@171 T@U) ) (!  (and (= ($generated@@62 ($generated@@104 $generated@@171)) $generated@@171) (or (and (<= 0 ($generated@@104 $generated@@171)) (< ($generated@@104 $generated@@171) 55296)) (and (<= 57344 ($generated@@104 $generated@@171)) (< ($generated@@104 $generated@@171) 1114112))))
 :pattern ( ($generated@@104 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 Int) ($generated@@174 Int) ) (!  (=> (and (and (<= 0 $generated@@173) (<= $generated@@173 $generated@@174)) (< $generated@@174 ($generated@@20 $generated@@172))) (= ($generated@@46 ($generated@@22 $generated@@172 $generated@@173) (- $generated@@174 $generated@@173)) ($generated@@46 $generated@@172 $generated@@174)))
 :weight 25
 :pattern ( ($generated@@46 $generated@@172 $generated@@174) ($generated@@22 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 Int) ($generated@@177 Int) ) (!  (=> (and (and (<= 0 $generated@@176) (<= 0 $generated@@177)) (<= (+ $generated@@176 $generated@@177) ($generated@@20 $generated@@175))) (= ($generated@@22 ($generated@@22 $generated@@175 $generated@@176) $generated@@177) ($generated@@22 $generated@@175 (+ $generated@@176 $generated@@177))))
 :pattern ( ($generated@@22 ($generated@@22 $generated@@175 $generated@@176) $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Int) ) (!  (and (=> (< $generated@@180 ($generated@@20 $generated@@178)) (= ($generated@@46 ($generated@@28 $generated@@178 $generated@@179) $generated@@180) ($generated@@46 $generated@@178 $generated@@180))) (=> (<= ($generated@@20 $generated@@178) $generated@@180) (= ($generated@@46 ($generated@@28 $generated@@178 $generated@@179) $generated@@180) ($generated@@46 $generated@@179 (- $generated@@180 ($generated@@20 $generated@@178))))))
 :pattern ( ($generated@@46 ($generated@@28 $generated@@178 $generated@@179) $generated@@180))
)))
(assert (forall (($generated@@181 Int) ) (! (= ($generated@@57 $generated@@5 ($generated@@9 ($generated@@34 $generated@@181))) ($generated@@36 $generated@@111 ($generated@@57 $generated@@5 ($generated@@9 $generated@@181))))
 :pattern ( ($generated@@57 $generated@@5 ($generated@@9 ($generated@@34 $generated@@181))))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@57 $generated@@183 ($generated@@36 $generated@@183 $generated@@182)) ($generated@@36 $generated@@111 ($generated@@57 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@57 $generated@@183 ($generated@@36 $generated@@183 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= ($generated@@20 $generated@@184) 0) (= $generated@@184 $generated@@21))
 :pattern ( ($generated@@20 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 Int) ) (!  (=> (= $generated@@186 0) (= ($generated@@27 $generated@@185 $generated@@186) $generated@@21))
 :pattern ( ($generated@@27 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! ($generated@@66 $generated@@61 $generated@@188 $generated $generated@@187)
 :pattern ( ($generated@@66 $generated@@61 $generated@@188 $generated $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@189 ($generated@@41 $generated@@190)) (forall (($generated@@191 Int) ) (!  (=> (and (<= 0 $generated@@191) (< $generated@@191 ($generated@@20 $generated@@189))) ($generated@@42 ($generated@@46 $generated@@189 $generated@@191) $generated@@190))
 :pattern ( ($generated@@46 $generated@@189 $generated@@191))
)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@189 ($generated@@41 $generated@@190)))
)))
(assert (forall (($generated@@192 T@U) ) (! ($generated@@39 $generated@@61 $generated@@192 $generated)
 :pattern ( ($generated@@39 $generated@@61 $generated@@192 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@193 () (_ BitVec 24))
(declare-fun $generated@@194 () (_ BitVec 10))
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@204 true))
(let (($generated@@205  (=> (and (and (<= ($generated@@84 $generated@@193) ($generated@@74 $generated@@194)) (<= ($generated@@74 $generated@@194) ($generated@@20 $generated@@195))) (= $generated@@196 ($generated@@34 18))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= 0 $generated@@196) (< $generated@@196 32))) (=> (and (<= 0 $generated@@196) (< $generated@@196 32)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (bvule #b10010 #b11000)) (=> (bvule #b10010 #b11000) (and (=> (= (ControlFlow 0 2) (- 0 6)) (< ($generated@@84 (bvlshr $generated@@193 (concat #b0000000000000000000 #b10010))) ($generated@@20 $generated@@195))) (=> (< ($generated@@84 (bvlshr $generated@@193 (concat #b0000000000000000000 #b10010))) ($generated@@20 $generated@@195)) (=> (= $generated@@197 ($generated@@56 $generated@@61 ($generated@@46 $generated@@195 ($generated@@84 (bvlshr $generated@@193 (concat #b0000000000000000000 #b10010)))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@84 $generated@@193) ($generated@@20 $generated@@195))) (=> (<= ($generated@@84 $generated@@193) ($generated@@20 $generated@@195)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@84 $generated@@193) ($generated@@20 $generated@@195))) (=> (<= ($generated@@84 $generated@@193) ($generated@@20 $generated@@195)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@84 $generated@@193) ($generated@@74 $generated@@194)) (<= ($generated@@74 $generated@@194) ($generated@@20 $generated@@195)))) (=> (and (<= ($generated@@84 $generated@@193) ($generated@@74 $generated@@194)) (<= ($generated@@74 $generated@@194) ($generated@@20 $generated@@195))) (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@74 $generated@@194) ($generated@@20 $generated@@195)))))))))))))))))))
(let (($generated@@206  (and (=> (= (ControlFlow 0 10) 2) $generated@@205) (=> (= (ControlFlow 0 10) 9) $generated@@204))))
(let (($generated@@207  (=> (and (< ($generated@@74 $generated@@194) ($generated@@84 $generated@@193)) (= (ControlFlow 0 12) 10)) $generated@@206)))
(let (($generated@@208  (=> (and (<= ($generated@@84 $generated@@193) ($generated@@74 $generated@@194)) (= (ControlFlow 0 11) 10)) $generated@@206)))
(let (($generated@@209  (=> (= $generated@@198 ($generated@@109 $generated@@199 $generated@@200 $generated@@2 false)) (and (=> (= (ControlFlow 0 13) (- 0 15)) (< ($generated@@84 $generated@@193) ($generated@@20 $generated@@60))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (< ($generated@@74 $generated@@194) ($generated@@20 $generated@@60))) (and (=> (= (ControlFlow 0 13) 11) $generated@@208) (=> (= (ControlFlow 0 13) 12) $generated@@207)))))))
(let (($generated@@210  (=> (and ($generated@@67 $generated@@200) ($generated@@201 $generated@@200)) (=> (and (and ($generated@@39 $generated@@40 $generated@@195 ($generated@@41 $generated)) ($generated@@66 $generated@@40 $generated@@195 ($generated@@41 $generated) $generated@@200)) (and ($generated@@39 $generated@@61 $generated@@202 $generated) true)) (=> (and (and (and (and ($generated@@39 $generated@@40 $generated@@203 ($generated@@41 $generated)) ($generated@@66 $generated@@40 $generated@@203 ($generated@@41 $generated) $generated@@200)) true) (= 1 $generated@@65)) (and (and (bvult $generated@@193 #x000040) (bvult $generated@@194 #b0001000001)) (and (not ($generated@@52 $generated@@195 $generated@@21)) (= (ControlFlow 0 16) 13)))) $generated@@209)))))
$generated@@210))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 13) (- 14))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
