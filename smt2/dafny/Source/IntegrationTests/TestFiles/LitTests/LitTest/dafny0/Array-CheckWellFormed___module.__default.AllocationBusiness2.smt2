(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T T@T) T@T)
(declare-fun $generated@@51 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@112 (T@U) Bool)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@121 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (or (not (= $generated@@31 $generated@@27)) (not true)) (= ($generated@@28 $generated@@31) ($generated@@26 $generated@@30))) ($generated@@29 $generated@@10 ($generated@@14 ($generated@@25 $generated@@31)) $generated))
 :pattern ( ($generated@@25 $generated@@31) ($generated@@26 $generated@@30))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and (or (not (= $generated@@34 $generated@@27)) (not true)) (= ($generated@@28 $generated@@34) ($generated@@26 $generated@@33))) ($generated@@29 $generated@@10 ($generated@@14 ($generated@@32 $generated@@34)) $generated))
 :pattern ( ($generated@@32 $generated@@34) ($generated@@26 $generated@@33))
)))
(assert (= ($generated@@8 $generated@@36) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40) ($generated@@35 $generated@@36 $generated@@39 ($generated@@26 $generated@@38) $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@26 $generated@@38) $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@42 $generated@@41)  (or (= $generated@@42 $generated@@27) (= ($generated@@28 $generated@@42) $generated@@41)))
 :pattern ( ($generated@@29 $generated@@36 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@44 $generated@@43 $generated@@45) ($generated@@35 $generated@@36 $generated@@44 $generated@@41 $generated@@45))
 :pattern ( ($generated@@35 $generated@@36 $generated@@44 $generated@@43 $generated@@45))
 :pattern ( ($generated@@35 $generated@@36 $generated@@44 $generated@@41 $generated@@45))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@47 $generated@@54 $generated@@55 ($generated@@51 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@58) $generated@@56)
 :weight 0
)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (or (= $generated@@63 $generated@@64) (= ($generated@@47 $generated@@59 $generated@@60 ($generated@@51 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@64) ($generated@@47 $generated@@59 $generated@@60 $generated@@62 $generated@@64)))
 :weight 0
))) (= ($generated@@8 $generated@@48) 4)) (= ($generated@@8 $generated@@49) 5)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (= ($generated@@8 ($generated@@50 $generated@@65 $generated@@66)) 6))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@52 ($generated@@50 $generated@@67 $generated@@68)) $generated@@67)
 :pattern ( ($generated@@50 $generated@@67 $generated@@68))
))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@53 ($generated@@50 $generated@@69 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@50 $generated@@69 $generated@@70))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@72 ($generated@@26 $generated@@71) $generated@@73)  (or (= $generated@@72 $generated@@27) ($generated@@13 ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@73 $generated@@72) $generated@@1)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@72 ($generated@@26 $generated@@71) $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@74 $generated@@41 $generated@@75)  (or (= $generated@@74 $generated@@27) ($generated@@13 ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@75 $generated@@74) $generated@@1)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@74 $generated@@41 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@76 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@13 ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@77 $generated@@79) $generated@@1))) ($generated@@13 ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@78 $generated@@79) $generated@@1))))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@78 $generated@@79) $generated@@1))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@80 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@46 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@46 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@89 ($generated@@37 $generated@@88))  (and ($generated@@29 $generated@@36 $generated@@89 ($generated@@26 $generated@@88)) (or (not (= $generated@@89 $generated@@27)) (not true))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@89 ($generated@@37 $generated@@88)))
 :pattern ( ($generated@@29 $generated@@36 $generated@@89 ($generated@@26 $generated@@88)))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (!  (=> ($generated@@76 $generated@@90 $generated@@91) (=> ($generated@@35 $generated@@94 $generated@@92 $generated@@93 $generated@@90) ($generated@@35 $generated@@94 $generated@@92 $generated@@93 $generated@@91)))
 :pattern ( ($generated@@76 $generated@@90 $generated@@91) ($generated@@35 $generated@@94 $generated@@92 $generated@@93 $generated@@90))
)))
(assert (forall (($generated@@96 T@U) ) (!  (and (= ($generated@@24 ($generated@@26 $generated@@96)) $generated@@2) (= ($generated@@95 ($generated@@26 $generated@@96)) $generated@@6))
 :pattern ( ($generated@@26 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (!  (and (= ($generated@@24 ($generated@@37 $generated@@97)) $generated@@3) (= ($generated@@95 ($generated@@37 $generated@@97)) $generated@@6))
 :pattern ( ($generated@@37 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@99 ($generated@@26 $generated@@98))  (or (= $generated@@99 $generated@@27) (= ($generated@@28 $generated@@99) ($generated@@26 $generated@@98))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@99 ($generated@@26 $generated@@98)))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@100 $generated@@43)  (and ($generated@@29 $generated@@36 $generated@@100 $generated@@41) (or (not (= $generated@@100 $generated@@27)) (not true))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@100 $generated@@43))
 :pattern ( ($generated@@29 $generated@@36 $generated@@100 $generated@@41))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (or (not (= $generated@@101 $generated@@103)) (not true)) (=> (and ($generated@@76 $generated@@101 $generated@@102) ($generated@@76 $generated@@102 $generated@@103)) ($generated@@76 $generated@@101 $generated@@103)))
 :pattern ( ($generated@@76 $generated@@101 $generated@@102) ($generated@@76 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (! (<= 0 ($generated@@25 $generated@@104))
 :pattern ( ($generated@@25 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (! (<= 0 ($generated@@32 $generated@@105))
 :pattern ( ($generated@@32 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 ($generated@@26 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@26 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 ($generated@@37 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@37 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@46 $generated@@111 ($generated@@85 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@85 $generated@@111 $generated@@110))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and (and ($generated@@112 $generated@@114) (and (or (not (= $generated@@115 $generated@@27)) (not true)) (= ($generated@@28 $generated@@115) ($generated@@26 $generated@@113)))) ($generated@@13 ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@114 $generated@@115) $generated@@1)))) ($generated@@35 $generated@@10 ($generated@@14 ($generated@@25 $generated@@115)) $generated $generated@@114))
 :pattern ( ($generated@@25 $generated@@115) ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@114 $generated@@115) $generated@@1)) ($generated@@26 $generated@@113))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and (and ($generated@@112 $generated@@117) (and (or (not (= $generated@@118 $generated@@27)) (not true)) (= ($generated@@28 $generated@@118) ($generated@@26 $generated@@116)))) ($generated@@13 ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@117 $generated@@118) $generated@@1)))) ($generated@@35 $generated@@10 ($generated@@14 ($generated@@32 $generated@@118)) $generated $generated@@117))
 :pattern ( ($generated@@32 $generated@@118) ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@117 $generated@@118) $generated@@1)) ($generated@@26 $generated@@116))
)))
(assert  (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@119 $generated@@122 $generated@@123 $generated@@124 ($generated@@121 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@127 $generated@@128) $generated@@125)
 :weight 0
)) (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@119 $generated@@129 $generated@@130 $generated@@131 ($generated@@121 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@119 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@119 $generated@@138 $generated@@139 $generated@@140 ($generated@@121 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@119 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 Bool) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@13 ($generated@@119 $generated@@36 $generated@@48 $generated@@9 ($generated@@120 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))  (=> (and (or (not (= $generated@@151 $generated@@147)) (not true)) ($generated@@13 ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@148 $generated@@151) $generated@@149)))) $generated@@150))
 :pattern ( ($generated@@119 $generated@@36 $generated@@48 $generated@@9 ($generated@@120 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))
)))
(assert (= ($generated@@24 $generated@@43) $generated@@4))
(assert (= ($generated@@95 $generated@@43) $generated@@7))
(assert (= ($generated@@24 $generated@@41) $generated@@5))
(assert (= ($generated@@95 $generated@@41) $generated@@7))
(assert (forall (($generated@@153 Int) ) (! (= ($generated@@85 $generated@@10 ($generated@@14 ($generated@@80 $generated@@153))) ($generated@@82 $generated@@49 ($generated@@85 $generated@@10 ($generated@@14 $generated@@153))))
 :pattern ( ($generated@@85 $generated@@10 ($generated@@14 ($generated@@80 $generated@@153))))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@85 $generated@@155 ($generated@@82 $generated@@155 $generated@@154)) ($generated@@82 $generated@@49 ($generated@@85 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@85 $generated@@155 ($generated@@82 $generated@@155 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! ($generated@@35 $generated@@10 $generated@@157 $generated $generated@@156)
 :pattern ( ($generated@@35 $generated@@10 $generated@@157 $generated $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! ($generated@@29 $generated@@10 $generated@@158 $generated)
 :pattern ( ($generated@@29 $generated@@10 $generated@@158 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@166 true))
(let (($generated@@167  (=> (and (< $generated@@159 ($generated@@80 0)) (= (ControlFlow 0 4) 1)) $generated@@166)))
(let (($generated@@168  (=> (<= ($generated@@80 0) $generated@@159) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@160 $generated@@27)) (not true))) (=> (or (not (= $generated@@160 $generated@@27)) (not true)) (=> (= (ControlFlow 0 2) 1) $generated@@166))))))
(let (($generated@@169  (=> (and (<= ($generated@@80 0) $generated@@161) (< $generated@@161 ($generated@@25 $generated@@160))) (and (=> (= (ControlFlow 0 5) 2) $generated@@168) (=> (= (ControlFlow 0 5) 4) $generated@@167)))))
(let (($generated@@170  (=> (and (< $generated@@161 ($generated@@80 0)) (= (ControlFlow 0 8) 5)) $generated@@169)))
(let (($generated@@171  (=> (<= ($generated@@80 0) $generated@@161) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (not (= $generated@@160 $generated@@27)) (not true))) (=> (or (not (= $generated@@160 $generated@@27)) (not true)) (=> (= (ControlFlow 0 6) 5) $generated@@169))))))
(let (($generated@@172  (=> (= $generated@@162 ($generated@@120 $generated@@27 $generated@@163 $generated@@1 false)) (and (=> (= (ControlFlow 0 9) 6) $generated@@171) (=> (= (ControlFlow 0 9) 8) $generated@@170)))))
(let (($generated@@173  (=> (and ($generated@@112 $generated@@163) ($generated@@164 $generated@@163)) (=> (and (and ($generated@@29 $generated@@36 $generated@@160 ($generated@@37 $generated@@43)) ($generated@@35 $generated@@36 $generated@@160 ($generated@@37 $generated@@43) $generated@@163)) (and (= 1 $generated@@165) (= (ControlFlow 0 10) 9))) $generated@@172))))
$generated@@173)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
