(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 () Int)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@T T@U) T@U)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@34 (Int) Int)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@48 (Int) Bool)
(declare-fun $generated@@49 (Int) Bool)
(declare-fun $generated@@50 (Int Int) Int)
(declare-fun $generated@@52 (T@U Int) T@U)
(declare-fun $generated@@57 (T@T T@U T@U) Bool)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@74 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@78 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@81 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@138 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@3 $generated@@22) 3))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> (or ($generated@@23 $generated@@25 ($generated@@21 $generated@@22 $generated@@26)) (and (< 0 $generated@@19) ($generated@@24 $generated@@26 $generated@@25))) (= ($generated@@20 $generated@@25 ($generated@@21 $generated@@22 $generated@@26)) ($generated@@21 $generated@@22 $generated@@26)))
 :weight 3
 :pattern ( ($generated@@20 $generated@@25 ($generated@@21 $generated@@22 $generated@@26)))
))))
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (forall (($generated@@30 T@U) ) (!  (not ($generated@@28 $generated@@29 $generated@@30))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30))
)))
(assert (= ($generated@@31 $generated@@29) 0))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (or ($generated@@23 $generated@@32 $generated@@33) (and (< 0 $generated@@19) ($generated@@24 $generated@@33 $generated@@32))) ($generated@@24 ($generated@@20 $generated@@32 $generated@@33) $generated@@32))
 :pattern ( ($generated@@20 $generated@@32 $generated@@33))
))))
(assert (forall (($generated@@35 Int) ) (! (= ($generated@@34 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@35))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@T) ) (! (= ($generated@@21 $generated@@37 $generated@@36) $generated@@36)
 :pattern ( ($generated@@21 $generated@@37 $generated@@36))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@39 $generated@@41 ($generated@@38 $generated@@41 $generated@@40)) $generated@@40)
 :pattern ( ($generated@@38 $generated@@41 $generated@@40))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@47 $generated@@44) $generated@@45 $generated@@46) ($generated@@43 $generated@@47 $generated@@44 $generated@@45 $generated@@46))
 :pattern ( ($generated@@42 ($generated@@39 $generated@@47 $generated@@44) $generated@@45 $generated@@46))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@51 Int) ) (!  (=> (or ($generated@@49 $generated@@51) (< 0 $generated@@19)) (= ($generated@@48 $generated@@51) (= ($generated@@50 $generated@@51 ($generated@@34 2)) ($generated@@34 0))))
 :pattern ( ($generated@@48 $generated@@51))
))))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@28 $generated@@53 $generated@@54) (exists (($generated@@55 Int) ) (!  (and (and (<= 0 $generated@@55) (< $generated@@55 ($generated@@31 $generated@@53))) (= ($generated@@52 $generated@@53 $generated@@55) $generated@@54))
 :pattern ( ($generated@@52 $generated@@53 $generated@@55))
)))
 :pattern ( ($generated@@28 $generated@@53 $generated@@54))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@56 Int) ) (!  (=> (or ($generated@@49 ($generated@@34 $generated@@56)) (< 0 $generated@@19)) (= ($generated@@48 ($generated@@34 $generated@@56)) (= ($generated@@34 ($generated@@50 $generated@@56 ($generated@@34 2))) ($generated@@34 0))))
 :weight 3
 :pattern ( ($generated@@48 ($generated@@34 $generated@@56)))
))))
(assert (forall (($generated@@58 T@U) ) (!  (=> ($generated@@24 $generated@@58 $generated) (and (= ($generated@@39 $generated@@5 ($generated@@38 $generated@@5 $generated@@58)) $generated@@58) ($generated@@57 $generated@@5 ($generated@@38 $generated@@5 $generated@@58) $generated)))
 :pattern ( ($generated@@24 $generated@@58 $generated))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@24 ($generated@@39 $generated@@61 $generated@@59) $generated@@60) ($generated@@57 $generated@@61 $generated@@59 $generated@@60))
 :pattern ( ($generated@@24 ($generated@@39 $generated@@61 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (<= 0 ($generated@@31 $generated@@62))
 :pattern ( ($generated@@31 $generated@@62))
)))
(assert (= ($generated@@3 $generated@@63) 4))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@43 $generated@@63 $generated@@65 ($generated@@64 $generated@@66) $generated@@67) (forall (($generated@@68 Int) ) (!  (=> (and (<= 0 $generated@@68) (< $generated@@68 ($generated@@31 $generated@@65))) ($generated@@42 ($generated@@52 $generated@@65 $generated@@68) $generated@@66 $generated@@67))
 :pattern ( ($generated@@52 $generated@@65 $generated@@68))
)))
 :pattern ( ($generated@@43 $generated@@63 $generated@@65 ($generated@@64 $generated@@66) $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 ($generated@@64 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@64 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@27 ($generated@@64 $generated@@71)) $generated@@1)
 :pattern ( ($generated@@64 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@38 $generated@@73 ($generated@@39 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@39 $generated@@73 $generated@@72))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@74 $generated@@84 $generated@@85 $generated@@86 ($generated@@80 $generated@@84 $generated@@85 $generated@@86 $generated@@88 $generated@@89 $generated@@90 $generated@@87) $generated@@89 $generated@@90) $generated@@87)
 :weight 0
)) (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (or (= $generated@@96 $generated@@98) (= ($generated@@74 $generated@@91 $generated@@92 $generated@@93 ($generated@@80 $generated@@91 $generated@@92 $generated@@93 $generated@@95 $generated@@96 $generated@@97 $generated@@94) $generated@@98 $generated@@99) ($generated@@74 $generated@@91 $generated@@92 $generated@@93 $generated@@95 $generated@@98 $generated@@99)))
 :weight 0
)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@106 $generated@@108) (= ($generated@@74 $generated@@100 $generated@@101 $generated@@102 ($generated@@80 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@107 $generated@@108) ($generated@@74 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@107 $generated@@108)))
 :weight 0
)))) (= ($generated@@3 $generated@@75) 5)) (= ($generated@@3 $generated@@76) 6)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@78 $generated@@109 $generated@@110 ($generated@@81 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@111) $generated@@113) $generated@@111)
 :weight 0
))) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 $generated@@114 $generated@@115 ($generated@@81 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@114 $generated@@115 $generated@@117 $generated@@119)))
 :weight 0
))) (forall (($generated@@120 T@T) ($generated@@121 T@T) ) (= ($generated@@3 ($generated@@79 $generated@@120 $generated@@121)) 7))) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@122 $generated@@123)) $generated@@122)
 :pattern ( ($generated@@79 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@124 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@79 $generated@@124 $generated@@125))
))))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 Bool) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@8 ($generated@@74 $generated@@75 $generated@@76 $generated@@4 ($generated@@77 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@130 $generated@@131))  (=> (and (or (not (= $generated@@130 $generated@@126)) (not true)) ($generated@@8 ($generated@@38 $generated@@4 ($generated@@78 $generated@@76 $generated@@22 ($generated@@78 $generated@@75 ($generated@@79 $generated@@76 $generated@@22) $generated@@127 $generated@@130) $generated@@128)))) $generated@@129))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76 $generated@@4 ($generated@@77 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@130 $generated@@131))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (or ($generated@@23 $generated@@132 $generated@@133) (and (< 0 $generated@@19) ($generated@@24 $generated@@133 $generated@@132))) (= ($generated@@20 $generated@@132 $generated@@133) $generated@@133))
 :pattern ( ($generated@@20 $generated@@132 $generated@@133))
))))
(assert (forall (($generated@@134 Int) ($generated@@135 Int) ) (! (= ($generated@@50 $generated@@134 $generated@@135) (mod $generated@@134 $generated@@135))
 :pattern ( ($generated@@50 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> ($generated@@24 $generated@@136 ($generated@@64 $generated@@137)) (and (= ($generated@@39 $generated@@63 ($generated@@38 $generated@@63 $generated@@136)) $generated@@136) ($generated@@57 $generated@@63 ($generated@@38 $generated@@63 $generated@@136) ($generated@@64 $generated@@137))))
 :pattern ( ($generated@@24 $generated@@136 ($generated@@64 $generated@@137)))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (or ($generated@@23 $generated@@140 $generated@@141) (and (< 0 $generated@@19) (and ($generated@@24 $generated@@141 $generated@@140) ($generated@@42 $generated@@141 $generated@@140 $generated@@139)))) ($generated@@138 $generated@@139)) ($generated@@42 ($generated@@20 $generated@@140 $generated@@141) $generated@@140 $generated@@139))
 :pattern ( ($generated@@42 ($generated@@20 $generated@@140 $generated@@141) $generated@@140 $generated@@139))
))))
(assert (forall (($generated@@142 Int) ) (! (= ($generated@@39 $generated@@5 ($generated@@9 ($generated@@34 $generated@@142))) ($generated@@21 $generated@@22 ($generated@@39 $generated@@5 ($generated@@9 $generated@@142))))
 :pattern ( ($generated@@39 $generated@@5 ($generated@@9 ($generated@@34 $generated@@142))))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@39 $generated@@144 ($generated@@21 $generated@@144 $generated@@143)) ($generated@@21 $generated@@22 ($generated@@39 $generated@@144 $generated@@143)))
 :pattern ( ($generated@@39 $generated@@144 ($generated@@21 $generated@@144 $generated@@143)))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= ($generated@@31 $generated@@145) 0) (= $generated@@145 $generated@@29))
 :pattern ( ($generated@@31 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! ($generated@@43 $generated@@5 $generated@@147 $generated $generated@@146)
 :pattern ( ($generated@@43 $generated@@5 $generated@@147 $generated $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@57 $generated@@63 $generated@@148 ($generated@@64 $generated@@149)) (forall (($generated@@150 Int) ) (!  (=> (and (<= 0 $generated@@150) (< $generated@@150 ($generated@@31 $generated@@148))) ($generated@@24 ($generated@@52 $generated@@148 $generated@@150) $generated@@149))
 :pattern ( ($generated@@52 $generated@@148 $generated@@150))
)))
 :pattern ( ($generated@@57 $generated@@63 $generated@@148 ($generated@@64 $generated@@149)))
)))
(assert (forall (($generated@@151 T@U) ) (! ($generated@@57 $generated@@5 $generated@@151 $generated)
 :pattern ( ($generated@@57 $generated@@5 $generated@@151 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@152 () Bool)
(declare-fun $generated@@153 () Bool)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () Bool)
(declare-fun $generated@@156 () Int)
(declare-fun $generated@@157 () Bool)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () Bool)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Bool)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 42) (let (($generated@@170 true))
(let (($generated@@171 true))
(let (($generated@@172  (=> (= (ControlFlow 0 4) (- 0 3)) (not $generated@@152))))
(let (($generated@@173  (=> (= $generated@@153  (and (<= ($generated@@34 0) ($generated@@34 72)) (< 72 10))) (=> (and (= $generated@@152 $generated@@153) (= (ControlFlow 0 34) 4)) $generated@@172))))
(let (($generated@@174  (=> (and (not (and (<= ($generated@@34 0) $generated@@154) (< $generated@@154 10))) (= (ControlFlow 0 36) 34)) $generated@@173)))
(let (($generated@@175  (=> (and (and (<= ($generated@@34 0) $generated@@154) (< $generated@@154 10)) (= (ControlFlow 0 35) 34)) $generated@@173)))
(let (($generated@@176  (=> (< $generated@@154 ($generated@@34 0)) (and (=> (= (ControlFlow 0 38) 35) $generated@@175) (=> (= (ControlFlow 0 38) 36) $generated@@174)))))
(let (($generated@@177  (=> (<= ($generated@@34 0) $generated@@154) (and (=> (= (ControlFlow 0 37) 35) $generated@@175) (=> (= (ControlFlow 0 37) 36) $generated@@174)))))
(let (($generated@@178  (and (=> (= (ControlFlow 0 39) 37) $generated@@177) (=> (= (ControlFlow 0 39) 38) $generated@@176))))
(let (($generated@@179  (and (=> (= (ControlFlow 0 40) 39) $generated@@178) (=> (= (ControlFlow 0 40) 33) $generated@@170))))
(let (($generated@@180  (=> (= $generated@@155  (and (<= ($generated@@34 0) ($generated@@34 (- 0 8))) ($generated@@8 ($generated@@21 $generated@@4 ($generated@@7 (< (- 0 8) 10)))))) (=> (and (= $generated@@152 $generated@@155) (= (ControlFlow 0 27) 4)) $generated@@172))))
(let (($generated@@181  (=> (and (<= 10 $generated@@156) (= (ControlFlow 0 30) 27)) $generated@@180)))
(let (($generated@@182  (=> (and (< $generated@@156 10) (= (ControlFlow 0 29) 27)) $generated@@180)))
(let (($generated@@183  (=> (<= ($generated@@34 0) $generated@@156) (and (=> (= (ControlFlow 0 31) 29) $generated@@182) (=> (= (ControlFlow 0 31) 30) $generated@@181)))))
(let (($generated@@184  (=> (and (< $generated@@156 ($generated@@34 0)) (= (ControlFlow 0 28) 27)) $generated@@180)))
(let (($generated@@185  (and (=> (= (ControlFlow 0 32) 31) $generated@@183) (=> (= (ControlFlow 0 32) 28) $generated@@184))))
(let (($generated@@186  (=> (and (and (forall (($generated@@187 Int) ) (!  (=> (and (<= ($generated@@34 0) $generated@@187) (< $generated@@187 10)) ($generated@@49 $generated@@187))
 :pattern ( ($generated@@48 $generated@@187))
)) (= $generated@@157 (exists (($generated@@188 Int) ) (!  (and (and (and (<= ($generated@@34 0) $generated@@188) (< $generated@@188 10)) ($generated@@48 $generated@@188)) (= ($generated@@39 $generated@@5 ($generated@@9 ($generated@@34 6))) ($generated@@39 $generated@@5 ($generated@@9 (+ $generated@@188 1)))))
 :pattern ( ($generated@@48 $generated@@188))
)))) (and (= $generated@@152 $generated@@157) (= (ControlFlow 0 18) 4))) $generated@@172)))
(let (($generated@@189  (=> (and (not (and (and (<= ($generated@@34 0) $generated@@158) (< $generated@@158 10)) ($generated@@48 $generated@@158))) (= (ControlFlow 0 20) 18)) $generated@@186)))
(let (($generated@@190  (=> (and (and (and (<= ($generated@@34 0) $generated@@158) (< $generated@@158 10)) ($generated@@48 $generated@@158)) (= (ControlFlow 0 19) 18)) $generated@@186)))
(let (($generated@@191  (=> (not (and (<= ($generated@@34 0) $generated@@158) (< $generated@@158 10))) (and (=> (= (ControlFlow 0 22) 19) $generated@@190) (=> (= (ControlFlow 0 22) 20) $generated@@189)))))
(let (($generated@@192  (=> (and (and (<= ($generated@@34 0) $generated@@158) (< $generated@@158 10)) (and ($generated@@43 $generated@@5 ($generated@@9 $generated@@158) $generated $generated@@159) ($generated@@49 $generated@@158))) (and (=> (= (ControlFlow 0 21) 19) $generated@@190) (=> (= (ControlFlow 0 21) 20) $generated@@189)))))
(let (($generated@@193  (=> (< $generated@@158 ($generated@@34 0)) (and (=> (= (ControlFlow 0 24) 21) $generated@@192) (=> (= (ControlFlow 0 24) 22) $generated@@191)))))
(let (($generated@@194  (=> (<= ($generated@@34 0) $generated@@158) (and (=> (= (ControlFlow 0 23) 21) $generated@@192) (=> (= (ControlFlow 0 23) 22) $generated@@191)))))
(let (($generated@@195  (and (=> (= (ControlFlow 0 25) 23) $generated@@194) (=> (= (ControlFlow 0 25) 24) $generated@@193))))
(let (($generated@@196  (and (=> (= (ControlFlow 0 26) 25) $generated@@195) (=> (= (ControlFlow 0 26) 17) $generated@@171))))
(let (($generated@@197  (=> (= $generated@@160  (not (and ($generated@@24 $generated@@161 $generated@@162) ($generated@@28 $generated@@163 $generated@@161)))) (=> (and (= $generated@@152 $generated@@160) (= (ControlFlow 0 11) 4)) $generated@@172))))
(let (($generated@@198  (=> (and (not ($generated@@28 $generated@@163 $generated@@164)) (= (ControlFlow 0 14) 11)) $generated@@197)))
(let (($generated@@199  (=> (and ($generated@@28 $generated@@163 $generated@@164) (= (ControlFlow 0 13) 11)) $generated@@197)))
(let (($generated@@200  (=> (and ($generated@@24 $generated@@164 $generated@@162) ($generated@@42 $generated@@164 $generated@@162 $generated@@159)) (and (=> (= (ControlFlow 0 15) 13) $generated@@199) (=> (= (ControlFlow 0 15) 14) $generated@@198)))))
(let (($generated@@201  (=> (and (not (and ($generated@@24 $generated@@164 $generated@@162) ($generated@@42 $generated@@164 $generated@@162 $generated@@159))) (= (ControlFlow 0 12) 11)) $generated@@197)))
(let (($generated@@202  (and (=> (= (ControlFlow 0 16) 15) $generated@@200) (=> (= (ControlFlow 0 16) 12) $generated@@201))))
(let (($generated@@203  (=> (and (and (forall (($generated@@204 T@U) )  (=> ($generated@@24 $generated@@204 $generated@@162) (=> ($generated@@28 $generated@@163 $generated@@204) ($generated@@23 $generated@@162 $generated@@204)))) (= $generated@@165  (not (exists (($generated@@205 T@U) )  (and (and ($generated@@24 $generated@@205 $generated@@162) ($generated@@28 $generated@@163 $generated@@205)) (= $generated@@161 ($generated@@20 $generated@@162 $generated@@205))))))) (and (= $generated@@152 $generated@@165) (= (ControlFlow 0 5) 4))) $generated@@172)))
(let (($generated@@206  (=> (and (not ($generated@@28 $generated@@163 $generated@@166)) (= (ControlFlow 0 8) 5)) $generated@@203)))
(let (($generated@@207  (=> (and (and ($generated@@28 $generated@@163 $generated@@166) ($generated@@42 $generated@@166 $generated@@162 $generated@@159)) (and ($generated@@23 $generated@@162 $generated@@166) (= (ControlFlow 0 7) 5))) $generated@@203)))
(let (($generated@@208  (=> (and ($generated@@24 $generated@@166 $generated@@162) ($generated@@42 $generated@@166 $generated@@162 $generated@@159)) (and (=> (= (ControlFlow 0 9) 7) $generated@@207) (=> (= (ControlFlow 0 9) 8) $generated@@206)))))
(let (($generated@@209  (=> (and (not (and ($generated@@24 $generated@@166 $generated@@162) ($generated@@42 $generated@@166 $generated@@162 $generated@@159))) (= (ControlFlow 0 6) 5)) $generated@@203)))
(let (($generated@@210  (and (=> (= (ControlFlow 0 10) 9) $generated@@208) (=> (= (ControlFlow 0 10) 6) $generated@@209))))
(let (($generated@@211  (=> (and (and (and (and (and (not ($generated@@8 ($generated@@21 $generated@@4 ($generated@@7 true)))) (not ($generated@@8 ($generated@@21 $generated@@4 ($generated@@7 true))))) (not ($generated@@8 ($generated@@21 $generated@@4 ($generated@@7 true))))) (not ($generated@@8 ($generated@@21 $generated@@4 ($generated@@7 true))))) (not ($generated@@8 ($generated@@21 $generated@@4 ($generated@@7 true))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@212  (=> (= $generated@@167 ($generated@@77 $generated@@168 $generated@@159 $generated@@2 false)) (and (and (and (and (and (=> (= (ControlFlow 0 41) 40) $generated@@179) (=> (= (ControlFlow 0 41) 32) $generated@@185)) (=> (= (ControlFlow 0 41) 26) $generated@@196)) (=> (= (ControlFlow 0 41) 16) $generated@@202)) (=> (= (ControlFlow 0 41) 10) $generated@@210)) (=> (= (ControlFlow 0 41) 2) $generated@@211)))))
(let (($generated@@213  (=> (and ($generated@@138 $generated@@159) ($generated@@169 $generated@@159)) (=> (and (and (and ($generated@@24 $generated@@161 $generated@@162) ($generated@@42 $generated@@161 $generated@@162 $generated@@159)) (and ($generated@@57 $generated@@63 $generated@@163 ($generated@@64 $generated@@162)) ($generated@@43 $generated@@63 $generated@@163 ($generated@@64 $generated@@162) $generated@@159))) (and (and (= 1 $generated@@19) (<= ($generated@@34 10) ($generated@@31 $generated@@163))) (and (= ($generated@@52 $generated@@163 ($generated@@34 4)) $generated@@161) (= (ControlFlow 0 42) 41)))) $generated@@212))))
$generated@@213)))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
