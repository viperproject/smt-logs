(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 () Int)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@U Int) T@U)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) Bool)
(declare-fun $generated@@103 (T@U T@U) Bool)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U T@U T@U Int Int T@U) T@U)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@2) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@30 $generated@@2) $generated@@3))
(assert  (and (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@36) 3) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@42 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@42 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@42 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@12 $generated@@43) 4)) (= ($generated@@12 $generated@@44) 5)) (= ($generated@@12 $generated@@45) 6)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@12 ($generated@@46 $generated@@66 $generated@@67)) 7))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@46 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@46 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@46 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@46 $generated@@70 $generated@@71))
))) (= ($generated@@12 $generated@@50) 8)))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (or ($generated@@33 $generated@@72 $generated@@73) (and (< 1 $generated@@31) (and (and ($generated@@34 $generated@@72) (and ($generated@@35 $generated@@36 $generated@@73 ($generated@@37 $generated@@38)) ($generated@@39 $generated@@36 $generated@@73 ($generated@@37 $generated@@38) $generated@@72))) (and (> ($generated@@40 $generated@@73) 0) (> ($generated@@19 ($generated@@41 $generated@@14 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@45 ($generated@@46 $generated@@43 $generated@@44) $generated@@72 ($generated@@41 $generated@@45 ($generated@@47 $generated@@73 ($generated@@48 0)))) $generated@@49))) 0))))) ($generated@@35 $generated@@50 ($generated@@32 $generated@@72 $generated@@73) $generated@@51))
 :pattern ( ($generated@@32 $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@76 T@U) ) (!  (not ($generated@@74 $generated@@75 $generated@@76))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76))
)))
(assert (= ($generated@@40 $generated@@75) 0))
(assert (= ($generated@@77 $generated@@78) $generated@@4))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@35 $generated@@45 $generated@@82 $generated@@79)  (or (= $generated@@82 $generated@@80) (= ($generated@@81 $generated@@82) $generated@@79)))
 :pattern ( ($generated@@35 $generated@@45 $generated@@82 $generated@@79))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@39 $generated@@45 $generated@@83 $generated@@38 $generated@@84) ($generated@@39 $generated@@45 $generated@@83 $generated@@79 $generated@@84))
 :pattern ( ($generated@@39 $generated@@45 $generated@@83 $generated@@38 $generated@@84))
 :pattern ( ($generated@@39 $generated@@45 $generated@@83 $generated@@79 $generated@@84))
)))
(assert ($generated@@35 $generated@@50 $generated@@78 $generated@@51))
(assert (= ($generated@@28 $generated@@49) 0))
(assert (= ($generated@@85 $generated@@8 $generated@@11) $generated@@49))
(assert  (not ($generated@@86 $generated@@49)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@39 $generated@@45 $generated@@87 $generated@@79 $generated@@88)  (or (= $generated@@87 $generated@@80) ($generated@@17 ($generated@@41 $generated@@13 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@45 ($generated@@46 $generated@@43 $generated@@44) $generated@@88 $generated@@87) $generated@@2)))))
 :pattern ( ($generated@@39 $generated@@45 $generated@@87 $generated@@79 $generated@@88))
)))
(assert (forall (($generated@@89 Int) ) (! (= ($generated@@48 $generated@@89) $generated@@89)
 :pattern ( ($generated@@48 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 $generated@@91) $generated@@91)
 :pattern ( ($generated@@90 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@93 $generated@@95 ($generated@@41 $generated@@95 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@41 $generated@@95 $generated@@94))
)))
(assert ($generated@@86 $generated@@2))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (and (and ($generated@@34 $generated@@96) (and (or (not (= $generated@@97 $generated@@80)) (not true)) (= ($generated@@81 $generated@@97) $generated@@79))) ($generated@@17 ($generated@@41 $generated@@13 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@45 ($generated@@46 $generated@@43 $generated@@44) $generated@@96 $generated@@97) $generated@@2)))) ($generated@@39 $generated@@14 ($generated@@41 $generated@@14 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@45 ($generated@@46 $generated@@43 $generated@@44) $generated@@96 $generated@@97) $generated@@49)) $generated $generated@@96))
 :pattern ( ($generated@@41 $generated@@14 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@45 ($generated@@46 $generated@@43 $generated@@44) $generated@@96 $generated@@97) $generated@@49)))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@98 ($generated@@93 $generated@@102 $generated@@99) $generated@@100 $generated@@101) ($generated@@39 $generated@@102 $generated@@99 $generated@@100 $generated@@101))
 :pattern ( ($generated@@98 ($generated@@93 $generated@@102 $generated@@99) $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@103 $generated@@104 $generated@@51) (and (= ($generated@@93 $generated@@50 ($generated@@41 $generated@@50 $generated@@104)) $generated@@104) ($generated@@35 $generated@@50 ($generated@@41 $generated@@50 $generated@@104) $generated@@51)))
 :pattern ( ($generated@@103 $generated@@104 $generated@@51))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@103 $generated@@105 $generated@@38) (and (= ($generated@@93 $generated@@45 ($generated@@41 $generated@@45 $generated@@105)) $generated@@105) ($generated@@35 $generated@@45 ($generated@@41 $generated@@45 $generated@@105) $generated@@38)))
 :pattern ( ($generated@@103 $generated@@105 $generated@@38))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@103 $generated@@106 $generated@@79) (and (= ($generated@@93 $generated@@45 ($generated@@41 $generated@@45 $generated@@106)) $generated@@106) ($generated@@35 $generated@@45 ($generated@@41 $generated@@45 $generated@@106) $generated@@79)))
 :pattern ( ($generated@@103 $generated@@106 $generated@@79))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@35 $generated@@45 $generated@@107 $generated@@38)  (and ($generated@@35 $generated@@45 $generated@@107 $generated@@79) (or (not (= $generated@@107 $generated@@80)) (not true))))
 :pattern ( ($generated@@35 $generated@@45 $generated@@107 $generated@@38))
 :pattern ( ($generated@@35 $generated@@45 $generated@@107 $generated@@79))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@74 $generated@@108 $generated@@109) (exists (($generated@@110 Int) ) (!  (and (and (<= 0 $generated@@110) (< $generated@@110 ($generated@@40 $generated@@108))) (= ($generated@@47 $generated@@108 $generated@@110) $generated@@109))
 :pattern ( ($generated@@47 $generated@@108 $generated@@110))
)))
 :pattern ( ($generated@@74 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (and (= ($generated@@111 ($generated@@85 $generated@@112 $generated@@113)) $generated@@112) (= ($generated@@30 ($generated@@85 $generated@@112 $generated@@113)) $generated@@113))
 :pattern ( ($generated@@85 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@103 $generated@@114 $generated) (and (= ($generated@@93 $generated@@14 ($generated@@41 $generated@@14 $generated@@114)) $generated@@114) ($generated@@35 $generated@@14 ($generated@@41 $generated@@14 $generated@@114) $generated)))
 :pattern ( ($generated@@103 $generated@@114 $generated))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@103 ($generated@@93 $generated@@117 $generated@@115) $generated@@116) ($generated@@35 $generated@@117 $generated@@115 $generated@@116))
 :pattern ( ($generated@@103 ($generated@@93 $generated@@117 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (<= 0 ($generated@@40 $generated@@118))
 :pattern ( ($generated@@40 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@39 $generated@@36 $generated@@119 ($generated@@37 $generated@@120) $generated@@121) (forall (($generated@@122 Int) ) (!  (=> (and (<= 0 $generated@@122) (< $generated@@122 ($generated@@40 $generated@@119))) ($generated@@98 ($generated@@47 $generated@@119 $generated@@122) $generated@@120 $generated@@121))
 :pattern ( ($generated@@47 $generated@@119 $generated@@122))
)))
 :pattern ( ($generated@@39 $generated@@36 $generated@@119 ($generated@@37 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@37 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@37 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@29 ($generated@@37 $generated@@125)) $generated@@1)
 :pattern ( ($generated@@37 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@41 $generated@@127 ($generated@@93 $generated@@127 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@93 $generated@@127 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and ($generated@@34 $generated@@128) (and (or (not (= $generated@@129 $generated@@80)) (not true)) (= ($generated@@81 $generated@@129) $generated@@79))) ($generated@@35 $generated@@14 ($generated@@41 $generated@@14 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@45 ($generated@@46 $generated@@43 $generated@@44) $generated@@128 $generated@@129) $generated@@49)) $generated))
 :pattern ( ($generated@@41 $generated@@14 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@45 ($generated@@46 $generated@@43 $generated@@44) $generated@@128 $generated@@129) $generated@@49)))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> ($generated@@103 $generated@@130 ($generated@@37 $generated@@131)) (and (= ($generated@@93 $generated@@36 ($generated@@41 $generated@@36 $generated@@130)) $generated@@130) ($generated@@35 $generated@@36 ($generated@@41 $generated@@36 $generated@@130) ($generated@@37 $generated@@131))))
 :pattern ( ($generated@@103 $generated@@130 ($generated@@37 $generated@@131)))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and ($generated@@34 $generated@@133) ($generated@@35 $generated@@50 $generated@@132 $generated@@51)) ($generated@@39 $generated@@50 $generated@@132 $generated@@51 $generated@@133))
 :pattern ( ($generated@@39 $generated@@50 $generated@@132 $generated@@51 $generated@@133))
)))
(assert (= ($generated@@29 $generated@@51) $generated@@5))
(assert (= ($generated@@134 $generated@@51) $generated@@9))
(assert (= ($generated@@29 $generated@@38) $generated@@6))
(assert (= ($generated@@134 $generated@@38) $generated@@10))
(assert (= ($generated@@29 $generated@@79) $generated@@7))
(assert (= ($generated@@134 $generated@@79) $generated@@10))
(assert (= $generated@@78 ($generated@@90 $generated@@50 $generated@@78)))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (or ($generated@@33 $generated@@135 $generated@@136) (and (< 1 $generated@@31) (and (and ($generated@@34 $generated@@135) ($generated@@35 $generated@@36 $generated@@136 ($generated@@37 $generated@@38))) (and (> ($generated@@40 $generated@@136) 0) (> ($generated@@19 ($generated@@41 $generated@@14 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@45 ($generated@@46 $generated@@43 $generated@@44) $generated@@135 ($generated@@41 $generated@@45 ($generated@@47 $generated@@136 ($generated@@48 0)))) $generated@@49))) 0))))) (= ($generated@@32 $generated@@135 $generated@@136) ($generated@@90 $generated@@50 $generated@@78)))
 :pattern ( ($generated@@32 $generated@@135 $generated@@136) ($generated@@34 $generated@@135))
))))
(assert (forall (($generated@@137 Int) ) (! (= ($generated@@93 $generated@@14 ($generated@@18 ($generated@@48 $generated@@137))) ($generated@@90 $generated@@44 ($generated@@93 $generated@@14 ($generated@@18 $generated@@137))))
 :pattern ( ($generated@@93 $generated@@14 ($generated@@18 ($generated@@48 $generated@@137))))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@93 $generated@@139 ($generated@@90 $generated@@139 $generated@@138)) ($generated@@90 $generated@@44 ($generated@@93 $generated@@139 $generated@@138)))
 :pattern ( ($generated@@93 $generated@@139 ($generated@@90 $generated@@139 $generated@@138)))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= ($generated@@40 $generated@@140) 0) (= $generated@@140 $generated@@75))
 :pattern ( ($generated@@40 $generated@@140))
)))
(assert  (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@141 $generated@@144 $generated@@145 $generated@@146 ($generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@141 $generated@@151 $generated@@152 $generated@@153 ($generated@@143 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@141 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@141 $generated@@160 $generated@@161 $generated@@162 ($generated@@143 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@141 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Int) ($generated@@173 Int) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@17 ($generated@@141 $generated@@45 $generated@@43 $generated@@13 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@169)) (not true)) ($generated@@17 ($generated@@41 $generated@@13 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@45 ($generated@@46 $generated@@43 $generated@@44) $generated@@170 $generated@@175) $generated@@171)))) (exists (($generated@@177 Int) )  (and (and (<= $generated@@172 $generated@@177) (< $generated@@177 $generated@@173)) (= ($generated@@47 $generated@@174 $generated@@177) ($generated@@93 $generated@@45 $generated@@175))))))
 :pattern ( ($generated@@141 $generated@@45 $generated@@43 $generated@@13 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! ($generated@@39 $generated@@14 $generated@@179 $generated $generated@@178)
 :pattern ( ($generated@@39 $generated@@14 $generated@@179 $generated $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@180 ($generated@@37 $generated@@181)) (forall (($generated@@182 Int) ) (!  (=> (and (<= 0 $generated@@182) (< $generated@@182 ($generated@@40 $generated@@180))) ($generated@@103 ($generated@@47 $generated@@180 $generated@@182) $generated@@181))
 :pattern ( ($generated@@47 $generated@@180 $generated@@182))
)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@180 ($generated@@37 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ) (! ($generated@@35 $generated@@14 $generated@@183 $generated)
 :pattern ( ($generated@@35 $generated@@14 $generated@@183 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@190 true))
(let (($generated@@191 true))
(let (($generated@@192  (=> (not ($generated@@74 $generated@@184 ($generated@@93 $generated@@45 $generated@@185))) (and (=> (= (ControlFlow 0 5) 1) $generated@@191) (=> (= (ControlFlow 0 5) 2) $generated@@190)))))
(let (($generated@@193  (=> ($generated@@74 $generated@@184 ($generated@@93 $generated@@45 $generated@@185)) (and (=> (= (ControlFlow 0 4) 1) $generated@@191) (=> (= (ControlFlow 0 4) 2) $generated@@190)))))
(let (($generated@@194  (=> (and ($generated@@35 $generated@@45 $generated@@185 $generated@@79) ($generated@@39 $generated@@45 $generated@@185 $generated@@79 $generated@@186)) (and (=> (= (ControlFlow 0 6) 4) $generated@@193) (=> (= (ControlFlow 0 6) 5) $generated@@192)))))
(let (($generated@@195  (=> (not (and ($generated@@35 $generated@@45 $generated@@185 $generated@@79) ($generated@@39 $generated@@45 $generated@@185 $generated@@79 $generated@@186))) (and (=> (= (ControlFlow 0 3) 1) $generated@@191) (=> (= (ControlFlow 0 3) 2) $generated@@190)))))
(let (($generated@@196  (=> (and (= $generated@@187 ($generated@@142 $generated@@80 $generated@@186 $generated@@2 0 ($generated@@40 $generated@@184) $generated@@184)) (> ($generated@@40 $generated@@184) 0)) (and (=> (= (ControlFlow 0 7) (- 0 10)) (and (<= 0 ($generated@@48 0)) (< ($generated@@48 0) ($generated@@40 $generated@@184)))) (=> (and (<= 0 ($generated@@48 0)) (< ($generated@@48 0) ($generated@@40 $generated@@184))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (not (= ($generated@@41 $generated@@45 ($generated@@47 $generated@@184 ($generated@@48 0))) $generated@@80)) (not true))) (=> (or (not (= ($generated@@41 $generated@@45 ($generated@@47 $generated@@184 ($generated@@48 0))) $generated@@80)) (not true)) (=> (and (= $generated@@188 ($generated@@17 ($generated@@141 $generated@@45 $generated@@43 $generated@@13 $generated@@187 ($generated@@41 $generated@@45 ($generated@@47 $generated@@184 ($generated@@48 0))) $generated@@49))) (> ($generated@@19 ($generated@@41 $generated@@14 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@45 ($generated@@46 $generated@@43 $generated@@44) $generated@@186 ($generated@@41 $generated@@45 ($generated@@47 $generated@@184 ($generated@@48 0)))) $generated@@49))) 0)) (and (=> (= (ControlFlow 0 7) (- 0 8)) $generated@@188) (=> $generated@@188 (and (=> (= (ControlFlow 0 7) 6) $generated@@194) (=> (= (ControlFlow 0 7) 3) $generated@@195))))))))))))
(let (($generated@@197  (=> (and (and (and ($generated@@34 $generated@@186) ($generated@@189 $generated@@186)) ($generated@@35 $generated@@36 $generated@@184 ($generated@@37 $generated@@38))) (and (= 1 $generated@@31) (= (ControlFlow 0 11) 7))) $generated@@196)))
$generated@@197)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
