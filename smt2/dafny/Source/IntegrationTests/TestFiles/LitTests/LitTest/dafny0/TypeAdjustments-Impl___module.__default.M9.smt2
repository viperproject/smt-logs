(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@67 (Int) Int)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U T@U) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (T@T T@U T@U) Bool)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27)
 :pattern ( ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27))
)))
(assert (= ($generated@@7 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@24 $generated@@28 $generated@@32 ($generated@@29 $generated@@31) $generated@@33) ($generated@@24 $generated@@28 $generated@@32 ($generated@@30 $generated@@31) $generated@@33))
 :pattern ( ($generated@@24 $generated@@28 $generated@@32 ($generated@@29 $generated@@31) $generated@@33))
 :pattern ( ($generated@@24 $generated@@28 $generated@@32 ($generated@@30 $generated@@31) $generated@@33))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@36 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@36 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@36 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@7 $generated@@37) 4)) (= ($generated@@7 $generated@@38) 5)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@7 ($generated@@39 $generated@@54 $generated@@55)) 6))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@39 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@39 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@39 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@24 $generated@@28 $generated@@61 ($generated@@30 $generated@@60) $generated@@62)  (or (= $generated@@61 $generated@@34) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@62 $generated@@61) $generated@@1)))))
 :pattern ( ($generated@@24 $generated@@28 $generated@@61 ($generated@@30 $generated@@60) $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@63 $generated@@64 $generated@@65) (forall (($generated@@66 T@U) ) (!  (=> ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@64 $generated@@66) $generated@@1))) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@65 $generated@@66) $generated@@1))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@65 $generated@@66) $generated@@1))
)))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@68 Int) ) (! (= ($generated@@67 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 $generated@@70) $generated@@70)
 :pattern ( ($generated@@69 $generated@@71 $generated@@70))
)))
(assert  (=> (< 0 $generated@@72) (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (and (or (not (= $generated@@77 $generated@@34)) (not true)) (= ($generated@@74 $generated@@77) ($generated@@30 $generated@@76))) ($generated@@75 ($generated@@73 $generated@@76 $generated@@77) $generated@@76))
 :pattern ( ($generated@@73 $generated@@76 $generated@@77))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 ($generated@@35 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@35 $generated@@80 $generated@@79))
)))
(assert  (=> (< 0 $generated@@72) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (and ($generated@@81 $generated@@84) (and (or (not (= $generated@@85 $generated@@34)) (not true)) (= ($generated@@74 $generated@@85) ($generated@@30 $generated@@83)))) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@84 $generated@@85) $generated@@1)))) ($generated@@82 ($generated@@73 $generated@@83 $generated@@85) $generated@@83 $generated@@84))
 :pattern ( ($generated@@73 $generated@@83 $generated@@85) ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@84 $generated@@85) $generated@@1)))
))))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 $generated@@9 $generated@@87 $generated@@25) (<= ($generated@@67 0) ($generated@@14 $generated@@87)))
 :pattern ( ($generated@@86 $generated@@9 $generated@@87 $generated@@25))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@86 $generated@@28 $generated@@89 ($generated@@29 $generated@@88))  (and ($generated@@86 $generated@@28 $generated@@89 ($generated@@30 $generated@@88)) (or (not (= $generated@@89 $generated@@34)) (not true))))
 :pattern ( ($generated@@86 $generated@@28 $generated@@89 ($generated@@29 $generated@@88)))
 :pattern ( ($generated@@86 $generated@@28 $generated@@89 ($generated@@30 $generated@@88)))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@93 $generated@@90) $generated@@91 $generated@@92) ($generated@@24 $generated@@93 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@82 ($generated@@78 $generated@@93 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@63 $generated@@94 $generated@@95) (=> ($generated@@82 $generated@@96 $generated@@97 $generated@@94) ($generated@@82 $generated@@96 $generated@@97 $generated@@95)))
 :pattern ( ($generated@@63 $generated@@94 $generated@@95) ($generated@@82 $generated@@96 $generated@@97 $generated@@94))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (!  (=> ($generated@@63 $generated@@98 $generated@@99) (=> ($generated@@24 $generated@@102 $generated@@100 $generated@@101 $generated@@98) ($generated@@24 $generated@@102 $generated@@100 $generated@@101 $generated@@99)))
 :pattern ( ($generated@@63 $generated@@98 $generated@@99) ($generated@@24 $generated@@102 $generated@@100 $generated@@101 $generated@@98))
)))
(assert (forall (($generated@@104 T@U) ) (!  (and (= ($generated@@23 ($generated@@29 $generated@@104)) $generated@@3) (= ($generated@@103 ($generated@@29 $generated@@104)) $generated@@6))
 :pattern ( ($generated@@29 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@23 ($generated@@30 $generated@@105)) $generated@@4) (= ($generated@@103 ($generated@@30 $generated@@105)) $generated@@6))
 :pattern ( ($generated@@30 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@75 $generated@@106 $generated@@25) (and (= ($generated@@78 $generated@@9 ($generated@@35 $generated@@9 $generated@@106)) $generated@@106) ($generated@@86 $generated@@9 ($generated@@35 $generated@@9 $generated@@106) $generated@@25)))
 :pattern ( ($generated@@75 $generated@@106 $generated@@25))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@86 $generated@@28 $generated@@108 ($generated@@30 $generated@@107))  (or (= $generated@@108 $generated@@34) (= ($generated@@74 $generated@@108) ($generated@@30 $generated@@107))))
 :pattern ( ($generated@@86 $generated@@28 $generated@@108 ($generated@@30 $generated@@107)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or (not (= $generated@@109 $generated@@111)) (not true)) (=> (and ($generated@@63 $generated@@109 $generated@@110) ($generated@@63 $generated@@110 $generated@@111)) ($generated@@63 $generated@@109 $generated@@111)))
 :pattern ( ($generated@@63 $generated@@109 $generated@@110) ($generated@@63 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@75 $generated@@112 $generated) (and (= ($generated@@78 $generated@@9 ($generated@@35 $generated@@9 $generated@@112)) $generated@@112) ($generated@@86 $generated@@9 ($generated@@35 $generated@@9 $generated@@112) $generated)))
 :pattern ( ($generated@@75 $generated@@112 $generated))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@75 ($generated@@78 $generated@@115 $generated@@113) $generated@@114) ($generated@@86 $generated@@115 $generated@@113 $generated@@114))
 :pattern ( ($generated@@75 ($generated@@78 $generated@@115 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@29 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@29 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@30 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@30 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@35 $generated@@121 ($generated@@78 $generated@@121 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@78 $generated@@121 $generated@@120))
)))
(assert  (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@122 $generated@@125 $generated@@126 $generated@@127 ($generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@130 $generated@@131) $generated@@128)
 :weight 0
)) (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@122 $generated@@132 $generated@@133 $generated@@134 ($generated@@124 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@122 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@122 $generated@@141 $generated@@142 $generated@@143 ($generated@@124 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@122 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@12 ($generated@@122 $generated@@28 $generated@@37 $generated@@8 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (or (not (= $generated@@154 $generated@@150)) (not true)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@151 $generated@@154) $generated@@152)))) $generated@@153))
 :pattern ( ($generated@@122 $generated@@28 $generated@@37 $generated@@8 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@75 $generated@@157 ($generated@@29 $generated@@156)) (and (= ($generated@@78 $generated@@28 ($generated@@35 $generated@@28 $generated@@157)) $generated@@157) ($generated@@86 $generated@@28 ($generated@@35 $generated@@28 $generated@@157) ($generated@@29 $generated@@156))))
 :pattern ( ($generated@@75 $generated@@157 ($generated@@29 $generated@@156)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> ($generated@@75 $generated@@159 ($generated@@30 $generated@@158)) (and (= ($generated@@78 $generated@@28 ($generated@@35 $generated@@28 $generated@@159)) $generated@@159) ($generated@@86 $generated@@28 ($generated@@35 $generated@@28 $generated@@159) ($generated@@30 $generated@@158))))
 :pattern ( ($generated@@75 $generated@@159 ($generated@@30 $generated@@158)))
)))
(assert (= ($generated@@23 $generated@@25) $generated@@2))
(assert (= ($generated@@103 $generated@@25) $generated@@5))
(assert (forall (($generated@@160 Int) ) (! (= ($generated@@78 $generated@@9 ($generated@@13 ($generated@@67 $generated@@160))) ($generated@@69 $generated@@38 ($generated@@78 $generated@@9 ($generated@@13 $generated@@160))))
 :pattern ( ($generated@@78 $generated@@9 ($generated@@13 ($generated@@67 $generated@@160))))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@78 $generated@@162 ($generated@@69 $generated@@162 $generated@@161)) ($generated@@69 $generated@@38 ($generated@@78 $generated@@162 $generated@@161)))
 :pattern ( ($generated@@78 $generated@@162 ($generated@@69 $generated@@162 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! ($generated@@24 $generated@@9 $generated@@164 $generated $generated@@163)
 :pattern ( ($generated@@24 $generated@@9 $generated@@164 $generated $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! ($generated@@86 $generated@@9 $generated@@165 $generated)
 :pattern ( ($generated@@86 $generated@@9 $generated@@165 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@166 () Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Bool)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () Bool)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () Bool)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () Bool)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Bool)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () Bool)
(declare-fun $generated@@213 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@214  (=> (and (and (and (and (and (not ($generated@@12 ($generated@@69 $generated@@8 ($generated@@11 true)))) (not ($generated@@12 ($generated@@69 $generated@@8 ($generated@@11 true))))) (not ($generated@@12 ($generated@@69 $generated@@8 ($generated@@11 true))))) (not ($generated@@12 ($generated@@69 $generated@@8 ($generated@@11 true))))) (not ($generated@@12 ($generated@@69 $generated@@8 ($generated@@11 true))))) (= (ControlFlow 0 20) (- 0 19))) false)))
(let (($generated@@215  (=> (=> $generated@@166 (and ($generated@@86 $generated@@28 $generated@@167 ($generated@@29 $generated)) ($generated@@24 $generated@@28 $generated@@167 ($generated@@29 $generated) $generated@@168))) (=> (and (or (not (= $generated@@169 $generated@@34)) (not true)) (and ($generated@@86 $generated@@28 $generated@@169 ($generated@@29 $generated@@170)) ($generated@@24 $generated@@28 $generated@@169 ($generated@@29 $generated@@170) $generated@@168))) (=> (and (and (= $generated@@171 $generated@@25) (= $generated@@172 ($generated@@78 $generated@@9 ($generated@@13 $generated@@173)))) (and ($generated@@81 $generated@@174) ($generated@@175 $generated@@174))) (=> (and (and (and (or (not (= $generated@@176 $generated@@34)) (not true)) (and ($generated@@86 $generated@@28 $generated@@176 ($generated@@29 $generated@@171)) ($generated@@24 $generated@@28 $generated@@176 ($generated@@29 $generated@@171) $generated@@174))) (not ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@176) $generated@@1))))) (and (forall (($generated@@216 T@U) ) (!  (=> (and (or (not (= $generated@@216 $generated@@34)) (not true)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@216) $generated@@1)))) (= ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@174 $generated@@216) ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@216)))
 :pattern ( ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@174 $generated@@216))
)) ($generated@@63 $generated@@168 $generated@@174))) (and (=> (= (ControlFlow 0 17) (- 0 18)) true) (=> (= (ControlFlow 0 17) (- 0 16)) ($generated@@86 $generated@@28 $generated@@176 ($generated@@29 $generated))))))))))
(let (($generated@@217  (=> (=> $generated@@177 (and ($generated@@86 $generated@@28 $generated@@178 ($generated@@29 $generated@@25)) ($generated@@24 $generated@@28 $generated@@178 ($generated@@29 $generated@@25) $generated@@168))) (=> (and (and (and (and (or (not (= $generated@@179 $generated@@34)) (not true)) (and ($generated@@86 $generated@@28 $generated@@179 ($generated@@29 $generated@@180)) ($generated@@24 $generated@@28 $generated@@179 ($generated@@29 $generated@@180) $generated@@168))) (= $generated@@181 ($generated@@78 $generated@@9 ($generated@@13 $generated@@173)))) (and ($generated@@81 $generated@@182) ($generated@@175 $generated@@182))) (and (and (and (or (not (= $generated@@183 $generated@@34)) (not true)) (and ($generated@@86 $generated@@28 $generated@@183 ($generated@@29 $generated)) ($generated@@24 $generated@@28 $generated@@183 ($generated@@29 $generated) $generated@@182))) (not ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@183) $generated@@1))))) (and (forall (($generated@@218 T@U) ) (!  (=> (and (or (not (= $generated@@218 $generated@@34)) (not true)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@218) $generated@@1)))) (= ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@182 $generated@@218) ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@218)))
 :pattern ( ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@182 $generated@@218))
)) ($generated@@63 $generated@@168 $generated@@182)))) (and (=> (= (ControlFlow 0 14) (- 0 15)) true) (=> (= (ControlFlow 0 14) (- 0 13)) ($generated@@86 $generated@@28 $generated@@183 ($generated@@29 $generated@@25))))))))
(let (($generated@@219  (=> (and (and (and (and (or (not (= $generated@@184 $generated@@34)) (not true)) (and ($generated@@86 $generated@@28 $generated@@184 ($generated@@29 $generated@@185)) ($generated@@24 $generated@@28 $generated@@184 ($generated@@29 $generated@@185) $generated@@168))) (= $generated@@186 ($generated@@78 $generated@@9 ($generated@@13 $generated@@173)))) (and ($generated@@81 $generated@@187) ($generated@@175 $generated@@187))) (and (and (and (or (not (= $generated@@188 $generated@@34)) (not true)) (and ($generated@@86 $generated@@28 $generated@@188 ($generated@@29 $generated)) ($generated@@24 $generated@@28 $generated@@188 ($generated@@29 $generated) $generated@@187))) (not ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@188) $generated@@1))))) (and (forall (($generated@@220 T@U) ) (!  (=> (and (or (not (= $generated@@220 $generated@@34)) (not true)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@220) $generated@@1)))) (= ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@187 $generated@@220) ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@220)))
 :pattern ( ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@187 $generated@@220))
)) ($generated@@63 $generated@@168 $generated@@187)))) (and (=> (= (ControlFlow 0 10) (- 0 12)) true) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (not (= $generated@@188 $generated@@34)) (not true))) (=> (= (ControlFlow 0 10) (- 0 9)) (<= ($generated@@67 0) ($generated@@14 ($generated@@35 $generated@@9 ($generated@@73 $generated $generated@@188))))))))))
(let (($generated@@221  (=> (and (or (not (= $generated@@189 $generated@@34)) (not true)) (and ($generated@@86 $generated@@28 $generated@@189 ($generated@@29 $generated@@190)) ($generated@@24 $generated@@28 $generated@@189 ($generated@@29 $generated@@190) $generated@@168))) (=> (and (and (= $generated@@191 $generated@@25) (= $generated@@192 ($generated@@78 $generated@@9 ($generated@@13 $generated@@173)))) (and ($generated@@81 $generated@@193) ($generated@@175 $generated@@193))) (=> (and (and (and (or (not (= $generated@@194 $generated@@34)) (not true)) (and ($generated@@86 $generated@@28 $generated@@194 ($generated@@29 $generated@@191)) ($generated@@24 $generated@@28 $generated@@194 ($generated@@29 $generated@@191) $generated@@193))) (not ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@194) $generated@@1))))) (and (forall (($generated@@222 T@U) ) (!  (=> (and (or (not (= $generated@@222 $generated@@34)) (not true)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@222) $generated@@1)))) (= ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@193 $generated@@222) ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@222)))
 :pattern ( ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@193 $generated@@222))
)) ($generated@@63 $generated@@168 $generated@@193))) (and (=> (= (ControlFlow 0 6) (- 0 8)) true) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (not (= $generated@@194 $generated@@34)) (not true))) (=> (= (ControlFlow 0 6) (- 0 5)) (<= ($generated@@67 0) ($generated@@14 ($generated@@35 $generated@@9 ($generated@@73 $generated@@25 $generated@@194))))))))))))
(let (($generated@@223  (=> (and (or (not (= $generated@@195 $generated@@34)) (not true)) (and ($generated@@86 $generated@@28 $generated@@195 ($generated@@29 $generated@@196)) ($generated@@24 $generated@@28 $generated@@195 ($generated@@29 $generated@@196) $generated@@168))) (=> (and (and (= $generated@@197 $generated@@25) (= $generated@@198 ($generated@@78 $generated@@9 ($generated@@13 $generated@@173)))) (and ($generated@@81 $generated@@199) ($generated@@175 $generated@@199))) (=> (and (and (and (or (not (= $generated@@200 $generated@@34)) (not true)) (and ($generated@@86 $generated@@28 $generated@@200 ($generated@@29 $generated@@197)) ($generated@@24 $generated@@28 $generated@@200 ($generated@@29 $generated@@197) $generated@@199))) (not ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@200) $generated@@1))))) (and (forall (($generated@@224 T@U) ) (!  (=> (and (or (not (= $generated@@224 $generated@@34)) (not true)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@224) $generated@@1)))) (= ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@199 $generated@@224) ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@168 $generated@@224)))
 :pattern ( ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@199 $generated@@224))
)) ($generated@@63 $generated@@168 $generated@@199))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@200 $generated@@34)) (not true))) (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@67 0) ($generated@@14 ($generated@@35 $generated@@9 ($generated@@73 $generated@@25 $generated@@200))))))))))))
(let (($generated@@225  (=> (= $generated@@201 ($generated@@123 $generated@@34 $generated@@168 $generated@@1 false)) (and (and (and (and (and (=> (= (ControlFlow 0 21) 2) $generated@@223) (=> (= (ControlFlow 0 21) 6) $generated@@221)) (=> (= (ControlFlow 0 21) 10) $generated@@219)) (=> (= (ControlFlow 0 21) 14) $generated@@217)) (=> (= (ControlFlow 0 21) 17) $generated@@215)) (=> (= (ControlFlow 0 21) 20) $generated@@214)))))
(let (($generated@@226  (=> (and (and ($generated@@81 $generated@@168) ($generated@@175 $generated@@168)) (<= ($generated@@67 0) $generated@@173)) (=> (and (and (and (and (=> $generated@@166 (and ($generated@@86 $generated@@28 $generated@@202 ($generated@@29 $generated)) ($generated@@24 $generated@@28 $generated@@202 ($generated@@29 $generated) $generated@@168))) true) (and (=> $generated@@203 (and ($generated@@86 $generated@@28 $generated@@204 ($generated@@29 $generated@@25)) ($generated@@24 $generated@@28 $generated@@204 ($generated@@29 $generated@@25) $generated@@168))) true)) (and (and (=> $generated@@177 (and ($generated@@86 $generated@@28 $generated@@205 ($generated@@29 $generated@@25)) ($generated@@24 $generated@@28 $generated@@205 ($generated@@29 $generated@@25) $generated@@168))) true) (and (=> $generated@@206 (and ($generated@@86 $generated@@28 $generated@@207 ($generated@@29 $generated)) ($generated@@24 $generated@@28 $generated@@207 ($generated@@29 $generated) $generated@@168))) true))) (and (and (and (=> $generated@@208 (and ($generated@@86 $generated@@28 $generated@@209 ($generated@@29 $generated)) ($generated@@24 $generated@@28 $generated@@209 ($generated@@29 $generated) $generated@@168))) true) (and (=> $generated@@210 (and ($generated@@86 $generated@@28 $generated@@211 ($generated@@29 $generated@@25)) ($generated@@24 $generated@@28 $generated@@211 ($generated@@29 $generated@@25) $generated@@168))) true)) (and (and (=> $generated@@212 (and ($generated@@86 $generated@@28 $generated@@213 ($generated@@29 $generated@@25)) ($generated@@24 $generated@@28 $generated@@213 ($generated@@29 $generated@@25) $generated@@168))) true) (and (= 2 $generated@@72) (= (ControlFlow 0 22) 21))))) $generated@@225))))
$generated@@226)))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 17) (- 16))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 14) (- 13))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 10) (- 9))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
