(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U T@U) Bool)
(declare-fun $generated@@0 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@1 () T@T)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 (T@T T@T) T@T)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (T@T T@U) T@U)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@17 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@18 (T@T) T@T)
(declare-fun $generated@@19 (T@T) T@T)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@59 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@8) 0) (= ($generated@@9 $generated@@10) 1)) (= ($generated@@9 $generated@@11) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@6 ($generated@@12 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@12 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@12 ($generated@@6 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@6 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@13 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@14 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@15 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@16 $generated@@25))
))) (forall (($generated@@26 T@T) ($generated@@27 T@T) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@0 $generated@@26 $generated@@27 ($generated@@17 $generated@@26 $generated@@27 $generated@@29 $generated@@30 $generated@@28) $generated@@30) $generated@@28)
 :weight 0
))) (forall (($generated@@31 T@T) ($generated@@32 T@T) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (or (= $generated@@35 $generated@@36) (= ($generated@@0 $generated@@31 $generated@@32 ($generated@@17 $generated@@31 $generated@@32 $generated@@34 $generated@@35 $generated@@33) $generated@@36) ($generated@@0 $generated@@31 $generated@@32 $generated@@34 $generated@@36)))
 :weight 0
))) (= ($generated@@9 $generated@@1) 3)) (= ($generated@@9 $generated@@2) 4)) (= ($generated@@9 $generated@@3) 5)) (forall (($generated@@37 T@T) ($generated@@38 T@T) ) (= ($generated@@9 ($generated@@4 $generated@@37 $generated@@38)) 6))) (forall (($generated@@39 T@T) ($generated@@40 T@T) ) (! (= ($generated@@18 ($generated@@4 $generated@@39 $generated@@40)) $generated@@39)
 :pattern ( ($generated@@4 $generated@@39 $generated@@40))
))) (forall (($generated@@41 T@T) ($generated@@42 T@T) ) (! (= ($generated@@19 ($generated@@4 $generated@@41 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@4 $generated@@41 $generated@@42))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated $generated@@43 $generated@@44) (forall (($generated@@45 T@U) ) (!  (=> ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@43 $generated@@45) $generated@@5))) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@44 $generated@@45) $generated@@5))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@44 $generated@@45) $generated@@5))
)))
 :pattern ( ($generated $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@46 $generated@@48 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 ($generated@@7 $generated@@51 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@7 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (or (not (= $generated@@52 $generated@@54)) (not true)) (=> (and ($generated $generated@@52 $generated@@53) ($generated $generated@@53 $generated@@54)) ($generated $generated@@52 $generated@@54)))
 :pattern ( ($generated $generated@@52 $generated@@53) ($generated $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@7 $generated@@56 ($generated@@49 $generated@@56 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@49 $generated@@56 $generated@@55))
)))
(assert  (and (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@57 $generated@@60 $generated@@61 $generated@@62 ($generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@66 $generated@@63) $generated@@65 $generated@@66) $generated@@63)
 :weight 0
)) (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (or (= $generated@@72 $generated@@74) (= ($generated@@57 $generated@@67 $generated@@68 $generated@@69 ($generated@@59 $generated@@67 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@73 $generated@@70) $generated@@74 $generated@@75) ($generated@@57 $generated@@67 $generated@@68 $generated@@69 $generated@@71 $generated@@74 $generated@@75)))
 :weight 0
)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (or (= $generated@@82 $generated@@84) (= ($generated@@57 $generated@@76 $generated@@77 $generated@@78 ($generated@@59 $generated@@76 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@82 $generated@@79) $generated@@83 $generated@@84) ($generated@@57 $generated@@76 $generated@@77 $generated@@78 $generated@@80 $generated@@83 $generated@@84)))
 :weight 0
)))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 Bool) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@6 ($generated@@57 $generated@@3 $generated@@1 $generated@@8 ($generated@@58 $generated@@85 $generated@@86 $generated@@87 $generated@@88) $generated@@89 $generated@@90))  (=> (and (or (not (= $generated@@89 $generated@@85)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@86 $generated@@89) $generated@@87)))) $generated@@88))
 :pattern ( ($generated@@57 $generated@@3 $generated@@1 $generated@@8 ($generated@@58 $generated@@85 $generated@@86 $generated@@87 $generated@@88) $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@49 $generated@@92 ($generated@@46 $generated@@92 $generated@@91)) ($generated@@46 $generated@@2 ($generated@@49 $generated@@92 $generated@@91)))
 :pattern ( ($generated@@49 $generated@@92 ($generated@@46 $generated@@92 $generated@@91)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@93 () Int)
(declare-fun $generated@@94 () Int)
(declare-fun $generated@@95 () Int)
(declare-fun $generated@@96 () Int)
(declare-fun $generated@@97 () Bool)
(declare-fun $generated@@98 () T@U)
(declare-fun $generated@@99 () T@U)
(declare-fun $generated@@100 () T@U)
(declare-fun $generated@@101 () Int)
(declare-fun $generated@@102 () Bool)
(declare-fun $generated@@103 () Int)
(declare-fun $generated@@104 () Int)
(declare-fun $generated@@105 () Bool)
(declare-fun $generated@@106 () Int)
(declare-fun $generated@@107 () Int)
(declare-fun $generated@@108 () Int)
(declare-fun $generated@@109 () Int)
(declare-fun $generated@@110 () Bool)
(declare-fun $generated@@111 () Int)
(declare-fun $generated@@112 () Int)
(declare-fun $generated@@113 () Int)
(declare-fun $generated@@114 () Int)
(declare-fun $generated@@115 () Bool)
(declare-fun $generated@@116 () Int)
(declare-fun $generated@@117 () Int)
(declare-fun $generated@@118 () Int)
(declare-fun $generated@@119 () Int)
(declare-fun $generated@@120 () Bool)
(declare-fun $generated@@121 () Int)
(declare-fun $generated@@122 () Int)
(declare-fun $generated@@123 (T@U) Bool)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@125 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 75) (let (($generated@@126  (=> (and (or (not (= $generated@@93 (+ $generated@@94 768))) (not true)) (= $generated@@95 (+ $generated@@93 1))) (and (=> (= (ControlFlow 0 65) (- 0 67)) (or (<= 0 $generated@@96) (= (- (+ $generated@@94 1000) $generated@@95) $generated@@96))) (=> (or (<= 0 $generated@@96) (= (- (+ $generated@@94 1000) $generated@@95) $generated@@96)) (and (=> (= (ControlFlow 0 65) (- 0 66)) (< (- (+ $generated@@94 1000) $generated@@95) $generated@@96)) (=> (< (- (+ $generated@@94 1000) $generated@@95) $generated@@96) (=> (= (ControlFlow 0 65) (- 0 64)) (=> $generated@@97 (<= $generated@@95 (+ $generated@@94 768)))))))))))
(let (($generated@@127 true))
(let (($generated@@128  (=> (and ($generated@@6 ($generated@@46 $generated@@8 ($generated@@12 true))) (= $generated@@96 (- (+ $generated@@94 1000) $generated@@93))) (and (=> (= (ControlFlow 0 68) 63) $generated@@127) (=> (= (ControlFlow 0 68) 65) $generated@@126)))))
(let (($generated@@129 true))
(let (($generated@@130  (=> $generated@@97 (and (=> (= (ControlFlow 0 69) 62) $generated@@129) (=> (= (ControlFlow 0 69) 68) $generated@@128)))))
(let (($generated@@131 true))
(let (($generated@@132  (and (=> (= (ControlFlow 0 70) 61) $generated@@131) (=> (= (ControlFlow 0 70) 69) $generated@@130))))
(let (($generated@@133 true))
(let (($generated@@134  (=> (not false) (=> (and (<= $generated@@94 $generated@@93) (=> $generated@@97 (<= $generated@@93 (+ $generated@@94 768)))) (=> (and (and (forall (($generated@@135 T@U) ) (!  (=> (and (or (not (= $generated@@135 $generated@@99)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@135) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@135) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@135)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@135))
)) ($generated $generated@@98 $generated@@98)) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (or (not (= $generated@@136 $generated@@99)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@136) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@136) $generated@@137) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@136) $generated@@137)) ($generated@@6 ($generated@@57 $generated@@3 $generated@@1 $generated@@8 $generated@@100 $generated@@136 $generated@@137))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@136) $generated@@137))
)) (<= (- (+ $generated@@94 1000) $generated@@93) $generated@@101))) (and (=> (= (ControlFlow 0 71) 60) $generated@@133) (=> (= (ControlFlow 0 71) 70) $generated@@132)))))))
(let (($generated@@138  (=> (and $generated@@102 (= $generated@@101 (- (+ $generated@@94 1000) $generated@@94))) (and (=> (= (ControlFlow 0 72) (- 0 73)) (=> $generated@@97 (<= $generated@@94 (+ $generated@@94 768)))) (=> (=> $generated@@97 (<= $generated@@94 (+ $generated@@94 768))) (=> (= (ControlFlow 0 72) 71) $generated@@134))))))
(let (($generated@@139  (=> (or (not (= $generated@@103 (- $generated@@94 768))) (not true)) (and (=> (= (ControlFlow 0 50) (- 0 52)) (or (<= 0 $generated@@104) (= (+ (- $generated@@103 $generated@@94) 1000) $generated@@104))) (=> (or (<= 0 $generated@@104) (= (+ (- $generated@@103 $generated@@94) 1000) $generated@@104)) (and (=> (= (ControlFlow 0 50) (- 0 51)) (< (+ (- $generated@@103 $generated@@94) 1000) $generated@@104)) (=> (< (+ (- $generated@@103 $generated@@94) 1000) $generated@@104) (=> (= (ControlFlow 0 50) (- 0 49)) (=> $generated@@105 (<= (- $generated@@94 768) $generated@@103))))))))))
(let (($generated@@140 true))
(let (($generated@@141  (=> ($generated@@6 ($generated@@46 $generated@@8 ($generated@@12 true))) (=> (and (= $generated@@104 (+ (- $generated@@106 $generated@@94) 1000)) (= $generated@@103 (- $generated@@106 1))) (and (=> (= (ControlFlow 0 53) 48) $generated@@140) (=> (= (ControlFlow 0 53) 50) $generated@@139))))))
(let (($generated@@142 true))
(let (($generated@@143  (=> $generated@@105 (and (=> (= (ControlFlow 0 54) 47) $generated@@142) (=> (= (ControlFlow 0 54) 53) $generated@@141)))))
(let (($generated@@144 true))
(let (($generated@@145  (and (=> (= (ControlFlow 0 55) 46) $generated@@144) (=> (= (ControlFlow 0 55) 54) $generated@@143))))
(let (($generated@@146 true))
(let (($generated@@147  (=> (not false) (=> (and (<= $generated@@106 $generated@@94) (=> $generated@@105 (<= (- $generated@@94 768) $generated@@106))) (=> (and (and (forall (($generated@@148 T@U) ) (!  (=> (and (or (not (= $generated@@148 $generated@@99)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@148) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@148) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@148)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@148))
)) ($generated $generated@@98 $generated@@98)) (and (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (or (not (= $generated@@149 $generated@@99)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@149) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@149) $generated@@150) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@149) $generated@@150)) ($generated@@6 ($generated@@57 $generated@@3 $generated@@1 $generated@@8 $generated@@100 $generated@@149 $generated@@150))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@149) $generated@@150))
)) (<= (+ (- $generated@@106 $generated@@94) 1000) $generated@@107))) (and (=> (= (ControlFlow 0 56) 45) $generated@@146) (=> (= (ControlFlow 0 56) 55) $generated@@145)))))))
(let (($generated@@151  (=> (= $generated@@107 (+ (- $generated@@94 $generated@@94) 1000)) (and (=> (= (ControlFlow 0 57) (- 0 58)) (=> $generated@@105 (<= (- $generated@@94 768) $generated@@94))) (=> (=> $generated@@105 (<= (- $generated@@94 768) $generated@@94)) (=> (= (ControlFlow 0 57) 56) $generated@@147))))))
(let (($generated@@152  (=> (or (not (= $generated@@108 (- $generated@@94 768))) (not true)) (and (=> (= (ControlFlow 0 35) (- 0 37)) (or (<= 0 $generated@@109) (= (+ (- $generated@@108 $generated@@94) 766) $generated@@109))) (=> (or (<= 0 $generated@@109) (= (+ (- $generated@@108 $generated@@94) 766) $generated@@109)) (and (=> (= (ControlFlow 0 35) (- 0 36)) (< (+ (- $generated@@108 $generated@@94) 766) $generated@@109)) (=> (< (+ (- $generated@@108 $generated@@94) 766) $generated@@109) (=> (= (ControlFlow 0 35) (- 0 34)) (=> $generated@@110 (< (- $generated@@94 768) $generated@@108))))))))))
(let (($generated@@153 true))
(let (($generated@@154  (=> ($generated@@6 ($generated@@46 $generated@@8 ($generated@@12 true))) (=> (and (= $generated@@109 (+ (- $generated@@111 $generated@@94) 766)) (= $generated@@108 (- $generated@@111 1))) (and (=> (= (ControlFlow 0 38) 33) $generated@@153) (=> (= (ControlFlow 0 38) 35) $generated@@152))))))
(let (($generated@@155 true))
(let (($generated@@156  (=> $generated@@110 (and (=> (= (ControlFlow 0 39) 32) $generated@@155) (=> (= (ControlFlow 0 39) 38) $generated@@154)))))
(let (($generated@@157 true))
(let (($generated@@158  (and (=> (= (ControlFlow 0 40) 31) $generated@@157) (=> (= (ControlFlow 0 40) 39) $generated@@156))))
(let (($generated@@159 true))
(let (($generated@@160  (=> (not false) (=> (and (<= $generated@@111 $generated@@94) (=> $generated@@110 (< (- $generated@@94 768) $generated@@111))) (=> (and (and (forall (($generated@@161 T@U) ) (!  (=> (and (or (not (= $generated@@161 $generated@@99)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@161) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@161) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@161)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@161))
)) ($generated $generated@@98 $generated@@98)) (and (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (or (not (= $generated@@162 $generated@@99)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@162) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@162) $generated@@163) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@162) $generated@@163)) ($generated@@6 ($generated@@57 $generated@@3 $generated@@1 $generated@@8 $generated@@100 $generated@@162 $generated@@163))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@162) $generated@@163))
)) (<= (+ (- $generated@@111 $generated@@94) 766) $generated@@112))) (and (=> (= (ControlFlow 0 41) 30) $generated@@159) (=> (= (ControlFlow 0 41) 40) $generated@@158)))))))
(let (($generated@@164  (=> (= $generated@@112 (+ (- $generated@@94 $generated@@94) 766)) (and (=> (= (ControlFlow 0 42) (- 0 43)) (=> $generated@@110 (< (- $generated@@94 768) $generated@@94))) (=> (=> $generated@@110 (< (- $generated@@94 768) $generated@@94)) (=> (= (ControlFlow 0 42) 41) $generated@@160))))))
(let (($generated@@165  (=> (or (not (= $generated@@113 (- $generated@@94 768))) (not true)) (and (=> (= (ControlFlow 0 20) (- 0 22)) (or (<= 0 $generated@@114) (= (+ (- $generated@@113 $generated@@94) 765) $generated@@114))) (=> (or (<= 0 $generated@@114) (= (+ (- $generated@@113 $generated@@94) 765) $generated@@114)) (and (=> (= (ControlFlow 0 20) (- 0 21)) (< (+ (- $generated@@113 $generated@@94) 765) $generated@@114)) (=> (< (+ (- $generated@@113 $generated@@94) 765) $generated@@114) (=> (= (ControlFlow 0 20) (- 0 19)) (=> $generated@@115 (< (- $generated@@94 768) $generated@@113))))))))))
(let (($generated@@166 true))
(let (($generated@@167  (=> ($generated@@6 ($generated@@46 $generated@@8 ($generated@@12 true))) (=> (and (= $generated@@114 (+ (- $generated@@116 $generated@@94) 765)) (= $generated@@113 (- $generated@@116 1))) (and (=> (= (ControlFlow 0 23) 18) $generated@@166) (=> (= (ControlFlow 0 23) 20) $generated@@165))))))
(let (($generated@@168 true))
(let (($generated@@169  (=> $generated@@115 (and (=> (= (ControlFlow 0 24) 17) $generated@@168) (=> (= (ControlFlow 0 24) 23) $generated@@167)))))
(let (($generated@@170 true))
(let (($generated@@171  (and (=> (= (ControlFlow 0 25) 16) $generated@@170) (=> (= (ControlFlow 0 25) 24) $generated@@169))))
(let (($generated@@172 true))
(let (($generated@@173  (=> (not false) (=> (and (<= $generated@@116 $generated@@94) (=> $generated@@115 (< (- $generated@@94 768) $generated@@116))) (=> (and (and (forall (($generated@@174 T@U) ) (!  (=> (and (or (not (= $generated@@174 $generated@@99)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@174) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@174) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@174)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@174))
)) ($generated $generated@@98 $generated@@98)) (and (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (or (not (= $generated@@175 $generated@@99)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@175) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@175) $generated@@176) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@175) $generated@@176)) ($generated@@6 ($generated@@57 $generated@@3 $generated@@1 $generated@@8 $generated@@100 $generated@@175 $generated@@176))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@175) $generated@@176))
)) (<= (+ (- $generated@@116 $generated@@94) 765) $generated@@117))) (and (=> (= (ControlFlow 0 26) 15) $generated@@172) (=> (= (ControlFlow 0 26) 25) $generated@@171)))))))
(let (($generated@@177  (=> (= $generated@@117 (+ (- $generated@@94 $generated@@94) 765)) (and (=> (= (ControlFlow 0 27) (- 0 28)) (=> $generated@@115 (< (- $generated@@94 768) $generated@@94))) (=> (=> $generated@@115 (< (- $generated@@94 768) $generated@@94)) (=> (= (ControlFlow 0 27) 26) $generated@@173))))))
(let (($generated@@178  (=> (or (not (= $generated@@118 (- $generated@@94 768))) (not true)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (<= 0 $generated@@119) (= (+ $generated@@118 1000) $generated@@119))) (=> (or (<= 0 $generated@@119) (= (+ $generated@@118 1000) $generated@@119)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (< (+ $generated@@118 1000) $generated@@119)) (=> (< (+ $generated@@118 1000) $generated@@119) (=> (= (ControlFlow 0 6) (- 0 5)) (=> $generated@@120 (< (- $generated@@94 768) $generated@@118))))))))))
(let (($generated@@179 true))
(let (($generated@@180  (=> ($generated@@6 ($generated@@46 $generated@@8 ($generated@@12 true))) (=> (and (= $generated@@119 (+ $generated@@121 1000)) (= $generated@@118 (- $generated@@121 1))) (and (=> (= (ControlFlow 0 9) 4) $generated@@179) (=> (= (ControlFlow 0 9) 6) $generated@@178))))))
(let (($generated@@181 true))
(let (($generated@@182  (=> $generated@@120 (and (=> (= (ControlFlow 0 10) 3) $generated@@181) (=> (= (ControlFlow 0 10) 9) $generated@@180)))))
(let (($generated@@183 true))
(let (($generated@@184  (and (=> (= (ControlFlow 0 11) 2) $generated@@183) (=> (= (ControlFlow 0 11) 10) $generated@@182))))
(let (($generated@@185 true))
(let (($generated@@186  (=> (not false) (=> (and (<= $generated@@121 $generated@@94) (=> $generated@@120 (< (- $generated@@94 768) $generated@@121))) (=> (and (and (forall (($generated@@187 T@U) ) (!  (=> (and (or (not (= $generated@@187 $generated@@99)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@187) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@187) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@187)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@187))
)) ($generated $generated@@98 $generated@@98)) (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (or (not (= $generated@@188 $generated@@99)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@188) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@188) $generated@@189) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@188) $generated@@189)) ($generated@@6 ($generated@@57 $generated@@3 $generated@@1 $generated@@8 $generated@@100 $generated@@188 $generated@@189))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@188) $generated@@189))
)) (<= (+ $generated@@121 1000) $generated@@122))) (and (=> (= (ControlFlow 0 12) 1) $generated@@185) (=> (= (ControlFlow 0 12) 11) $generated@@184)))))))
(let (($generated@@190  (=> (= $generated@@122 (+ $generated@@94 1000)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (=> $generated@@120 (< (- $generated@@94 768) $generated@@94))) (=> (=> $generated@@120 (< (- $generated@@94 768) $generated@@94)) (=> (= (ControlFlow 0 13) 12) $generated@@186))))))
(let (($generated@@191  (and (=> (= (ControlFlow 0 29) 27) $generated@@177) (=> (= (ControlFlow 0 29) 13) $generated@@190))))
(let (($generated@@192  (and (=> (= (ControlFlow 0 44) 42) $generated@@164) (=> (= (ControlFlow 0 44) 29) $generated@@191))))
(let (($generated@@193  (=> (not $generated@@102) (and (=> (= (ControlFlow 0 59) 57) $generated@@151) (=> (= (ControlFlow 0 59) 44) $generated@@192)))))
(let (($generated@@194  (=> (= $generated@@100 ($generated@@58 $generated@@99 $generated@@98 $generated@@5 false)) (and (=> (= (ControlFlow 0 74) 72) $generated@@138) (=> (= (ControlFlow 0 74) 59) $generated@@193)))))
(let (($generated@@195  (=> (and (and ($generated@@123 $generated@@98) ($generated@@124 $generated@@98)) (and (= 0 $generated@@125) (= (ControlFlow 0 75) 74))) $generated@@194)))
$generated@@195))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 50) (- 49))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 20) (- 22))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 8))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
