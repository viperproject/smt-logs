(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (Int T@U T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@59 (T@U) Int)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@89 () T@U)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@108 (T@T T@U) T@U)
(declare-fun $generated@@115 (T@U T@U) Bool)
(declare-fun $generated@@120 (T@U T@U) Bool)
(declare-fun $generated@@124 (T@U T@U T@U) Bool)
(declare-fun $generated@@125 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@164 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@24) 3))
(assert (forall (($generated@@27 Int) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26)  (and (and ($generated@@23 $generated@@9 ($generated@@13 $generated@@27) $generated) ($generated@@23 $generated@@24 $generated@@28 $generated@@26)) ($generated@@23 $generated@@24 $generated@@29 $generated@@26)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26))
)))
(assert (= ($generated@@7 $generated@@33) 4))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@32 $generated@@36) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@36 $generated@@26))) ($generated@@23 $generated@@33 ($generated@@31 $generated@@35 $generated@@36) ($generated@@34 $generated)))
 :pattern ( ($generated@@31 $generated@@35 $generated@@36))
))))
(assert (= ($generated@@37 $generated) $generated@@0))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! ($generated@@39 ($generated@@38 $generated@@40 $generated@@41) $generated@@41)
 :pattern ( ($generated@@38 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated@@39 $generated@@42 $generated@@44) ($generated@@39 ($generated@@38 $generated@@42 $generated@@43) $generated@@44))
 :pattern ( ($generated@@38 $generated@@42 $generated@@43) ($generated@@39 $generated@@42 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> ($generated@@39 $generated@@46 $generated@@48) ($generated@@39 ($generated@@45 $generated@@46 $generated@@47) $generated@@48))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47) ($generated@@39 $generated@@46 $generated@@48))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> ($generated@@39 $generated@@50 $generated@@51) ($generated@@39 ($generated@@45 $generated@@49 $generated@@50) $generated@@51))
 :pattern ( ($generated@@45 $generated@@49 $generated@@50) ($generated@@39 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@39 ($generated@@38 $generated@@52 $generated@@53) $generated@@54)  (or (= $generated@@54 $generated@@53) ($generated@@39 $generated@@52 $generated@@54)))
 :pattern ( ($generated@@39 ($generated@@38 $generated@@52 $generated@@53) $generated@@54))
)))
(assert (forall (($generated@@56 Int) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@55 ($generated@@25 $generated@@56 $generated@@57 $generated@@58)) $generated@@5)
 :pattern ( ($generated@@25 $generated@@56 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 Int) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@59 ($generated@@25 $generated@@60 $generated@@61 $generated@@62)) $generated@@60)
 :pattern ( ($generated@@25 $generated@@60 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 Int) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@63 ($generated@@25 $generated@@64 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@25 $generated@@64 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 Int) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@67 ($generated@@25 $generated@@68 $generated@@69 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@25 $generated@@68 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> ($generated@@39 $generated@@73 $generated@@74) (not ($generated@@39 ($generated@@71 $generated@@72 $generated@@73) $generated@@74)))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73) ($generated@@39 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (not ($generated@@39 $generated@@75 $generated@@76))
 :pattern ( ($generated@@39 $generated@@75 $generated@@76))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@32 ($generated@@78 $generated@@24 $generated@@83)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@83 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@78 $generated@@8 ($generated@@11 ($generated@@79 ($generated@@78 $generated@@24 $generated@@83)))))) (let (($generated@@84 ($generated@@78 $generated@@24 ($generated@@67 ($generated@@78 $generated@@24 $generated@@83)))))
(let (($generated@@85 ($generated@@78 $generated@@24 ($generated@@63 ($generated@@78 $generated@@24 $generated@@83)))))
 (and ($generated@@32 $generated@@85) ($generated@@32 $generated@@84))))) (= ($generated@@31 ($generated@@77 $generated@@82) ($generated@@78 $generated@@24 $generated@@83)) (ite ($generated@@79 ($generated@@78 $generated@@24 $generated@@83)) $generated@@75 (let (($generated@@86 ($generated@@78 $generated@@24 ($generated@@67 ($generated@@78 $generated@@24 $generated@@83)))))
(let (($generated@@87 ($generated@@78 $generated@@24 ($generated@@63 ($generated@@78 $generated@@24 $generated@@83)))))
(let (($generated@@88 ($generated@@80 ($generated@@59 ($generated@@78 $generated@@24 $generated@@83)))))
($generated@@45 ($generated@@45 ($generated@@38 $generated@@75 ($generated@@81 $generated@@9 ($generated@@13 $generated@@88))) ($generated@@31 ($generated@@77 $generated@@82) $generated@@87)) ($generated@@31 ($generated@@77 $generated@@82) $generated@@86)))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@77 $generated@@82) ($generated@@78 $generated@@24 $generated@@83)))
))))
(assert (= ($generated@@55 $generated@@89) $generated@@4))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@45 ($generated@@45 $generated@@90 $generated@@91) $generated@@91) ($generated@@45 $generated@@90 $generated@@91))
 :pattern ( ($generated@@45 ($generated@@45 $generated@@90 $generated@@91) $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@39 ($generated@@71 $generated@@92 $generated@@93) $generated@@94)  (and ($generated@@39 $generated@@92 $generated@@94) (not ($generated@@39 $generated@@93 $generated@@94))))
 :pattern ( ($generated@@39 ($generated@@71 $generated@@92 $generated@@93) $generated@@94))
)))
(assert ($generated@@23 $generated@@24 $generated@@89 $generated@@26))
(assert (forall (($generated@@95 Int) ) (! (= ($generated@@80 $generated@@95) $generated@@95)
 :pattern ( ($generated@@80 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@78 $generated@@97 $generated@@96) $generated@@96)
 :pattern ( ($generated@@78 $generated@@97 $generated@@96))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (or ($generated@@32 $generated@@99) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@99 $generated@@26))) (and (=> (not ($generated@@79 $generated@@99)) (let (($generated@@100 ($generated@@67 $generated@@99)))
(let (($generated@@101 ($generated@@63 $generated@@99)))
 (and ($generated@@32 $generated@@101) ($generated@@32 $generated@@100))))) (= ($generated@@31 ($generated@@77 $generated@@98) $generated@@99) (ite ($generated@@79 $generated@@99) $generated@@75 (let (($generated@@102 ($generated@@67 $generated@@99)))
(let (($generated@@103 ($generated@@63 $generated@@99)))
(let (($generated@@104 ($generated@@59 $generated@@99)))
($generated@@45 ($generated@@45 ($generated@@38 $generated@@75 ($generated@@81 $generated@@9 ($generated@@13 $generated@@104))) ($generated@@31 $generated@@98 $generated@@103)) ($generated@@31 $generated@@98 $generated@@102)))))))))
 :pattern ( ($generated@@31 ($generated@@77 $generated@@98) $generated@@99))
))))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@79 $generated@@105) (= ($generated@@55 $generated@@105) $generated@@4))
 :pattern ( ($generated@@79 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 $generated@@107) (= ($generated@@55 $generated@@107) $generated@@5))
 :pattern ( ($generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@81 $generated@@110 ($generated@@108 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@108 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@106 $generated@@111) (exists (($generated@@112 Int) ($generated@@113 T@U) ($generated@@114 T@U) ) (= $generated@@111 ($generated@@25 $generated@@112 $generated@@113 $generated@@114))))
 :pattern ( ($generated@@106 $generated@@111))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@115 $generated@@116 $generated@@117) (forall (($generated@@118 T@U) ) (!  (or (not ($generated@@39 $generated@@116 $generated@@118)) (not ($generated@@39 $generated@@117 $generated@@118)))
 :pattern ( ($generated@@39 $generated@@116 $generated@@118))
 :pattern ( ($generated@@39 $generated@@117 $generated@@118))
)))
 :pattern ( ($generated@@115 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@79 $generated@@119) (= $generated@@119 $generated@@89))
 :pattern ( ($generated@@79 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@23 $generated@@33 $generated@@121 ($generated@@34 $generated@@122)) (forall (($generated@@123 T@U) ) (!  (=> ($generated@@39 $generated@@121 $generated@@123) ($generated@@120 $generated@@123 $generated@@122))
 :pattern ( ($generated@@39 $generated@@121 $generated@@123))
)))
 :pattern ( ($generated@@23 $generated@@33 $generated@@121 ($generated@@34 $generated@@122)))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@124 ($generated@@81 $generated@@129 $generated@@126) $generated@@127 $generated@@128) ($generated@@125 $generated@@129 $generated@@126 $generated@@127 $generated@@128))
 :pattern ( ($generated@@124 ($generated@@81 $generated@@129 $generated@@126) $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@120 $generated@@130 $generated@@26) (and (= ($generated@@81 $generated@@24 ($generated@@108 $generated@@24 $generated@@130)) $generated@@130) ($generated@@23 $generated@@24 ($generated@@108 $generated@@24 $generated@@130) $generated@@26)))
 :pattern ( ($generated@@120 $generated@@130 $generated@@26))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@39 ($generated@@45 $generated@@131 $generated@@132) $generated@@133)  (or ($generated@@39 $generated@@131 $generated@@133) ($generated@@39 $generated@@132 $generated@@133)))
 :pattern ( ($generated@@39 ($generated@@45 $generated@@131 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@115 $generated@@134 $generated@@135) (and (= ($generated@@71 ($generated@@45 $generated@@134 $generated@@135) $generated@@134) $generated@@135) (= ($generated@@71 ($generated@@45 $generated@@134 $generated@@135) $generated@@135) $generated@@134)))
 :pattern ( ($generated@@45 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@136 $generated@@26) (or ($generated@@79 $generated@@136) ($generated@@106 $generated@@136)))
 :pattern ( ($generated@@106 $generated@@136) ($generated@@23 $generated@@24 $generated@@136 $generated@@26))
 :pattern ( ($generated@@79 $generated@@136) ($generated@@23 $generated@@24 $generated@@136 $generated@@26))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@120 $generated@@137 $generated) (and (= ($generated@@81 $generated@@9 ($generated@@108 $generated@@9 $generated@@137)) $generated@@137) ($generated@@23 $generated@@9 ($generated@@108 $generated@@9 $generated@@137) $generated)))
 :pattern ( ($generated@@120 $generated@@137 $generated))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@T) ) (! (= ($generated@@120 ($generated@@81 $generated@@140 $generated@@138) $generated@@139) ($generated@@23 $generated@@140 $generated@@138 $generated@@139))
 :pattern ( ($generated@@120 ($generated@@81 $generated@@140 $generated@@138) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@125 $generated@@33 $generated@@141 ($generated@@34 $generated@@142) $generated@@143) (forall (($generated@@144 T@U) ) (!  (=> ($generated@@39 $generated@@141 $generated@@144) ($generated@@124 $generated@@144 $generated@@142 $generated@@143))
 :pattern ( ($generated@@39 $generated@@141 $generated@@144))
)))
 :pattern ( ($generated@@125 $generated@@33 $generated@@141 ($generated@@34 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@145 Int) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@25 ($generated@@80 $generated@@145) ($generated@@78 $generated@@24 $generated@@146) ($generated@@78 $generated@@24 $generated@@147)) ($generated@@78 $generated@@24 ($generated@@25 $generated@@145 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@25 ($generated@@80 $generated@@145) ($generated@@78 $generated@@24 $generated@@146) ($generated@@78 $generated@@24 $generated@@147)))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@34 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@34 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@37 ($generated@@34 $generated@@150)) $generated@@1)
 :pattern ( ($generated@@34 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@108 $generated@@152 ($generated@@81 $generated@@152 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@81 $generated@@152 $generated@@151))
)))
(assert (forall (($generated@@154 Int) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (< ($generated@@153 $generated@@155) ($generated@@153 ($generated@@25 $generated@@154 $generated@@155 $generated@@156)))
 :pattern ( ($generated@@25 $generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 Int) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (< ($generated@@153 $generated@@159) ($generated@@153 ($generated@@25 $generated@@157 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@25 $generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@31 ($generated@@77 $generated@@160) $generated@@161) ($generated@@31 $generated@@160 $generated@@161))
 :pattern ( ($generated@@31 ($generated@@77 $generated@@160) $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@45 $generated@@162 ($generated@@45 $generated@@162 $generated@@163)) ($generated@@45 $generated@@162 $generated@@163))
 :pattern ( ($generated@@45 $generated@@162 ($generated@@45 $generated@@162 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@164 $generated@@175 $generated@@176 $generated@@177 ($generated@@171 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@180 $generated@@181) $generated@@178)
 :weight 0
)) (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@164 $generated@@182 $generated@@183 $generated@@184 ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@164 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@164 $generated@@191 $generated@@192 $generated@@193 ($generated@@171 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@164 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (= ($generated@@7 $generated@@165) 5)) (= ($generated@@7 $generated@@166) 6)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@168 $generated@@200 $generated@@201 ($generated@@172 $generated@@200 $generated@@201 $generated@@203 $generated@@204 $generated@@202) $generated@@204) $generated@@202)
 :weight 0
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@209 $generated@@210) (= ($generated@@168 $generated@@205 $generated@@206 ($generated@@172 $generated@@205 $generated@@206 $generated@@208 $generated@@209 $generated@@207) $generated@@210) ($generated@@168 $generated@@205 $generated@@206 $generated@@208 $generated@@210)))
 :weight 0
))) (= ($generated@@7 $generated@@169) 7)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@7 ($generated@@170 $generated@@211 $generated@@212)) 8))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@173 ($generated@@170 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@170 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@174 ($generated@@170 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@170 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@12 ($generated@@164 $generated@@165 $generated@@166 $generated@@8 ($generated@@167 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (or (not (= $generated@@221 $generated@@217)) (not true)) ($generated@@12 ($generated@@108 $generated@@8 ($generated@@168 $generated@@166 $generated@@169 ($generated@@168 $generated@@165 ($generated@@170 $generated@@166 $generated@@169) $generated@@218 $generated@@221) $generated@@219)))) $generated@@220))
 :pattern ( ($generated@@164 $generated@@165 $generated@@166 $generated@@8 ($generated@@167 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and ($generated@@223 $generated@@225) (and ($generated@@106 $generated@@224) ($generated@@125 $generated@@24 $generated@@224 $generated@@26 $generated@@225))) ($generated@@125 $generated@@9 ($generated@@13 ($generated@@59 $generated@@224)) $generated $generated@@225))
 :pattern ( ($generated@@125 $generated@@9 ($generated@@13 ($generated@@59 $generated@@224)) $generated $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> ($generated@@120 $generated@@226 ($generated@@34 $generated@@227)) (and (= ($generated@@81 $generated@@33 ($generated@@108 $generated@@33 $generated@@226)) $generated@@226) ($generated@@23 $generated@@33 ($generated@@108 $generated@@33 $generated@@226) ($generated@@34 $generated@@227))))
 :pattern ( ($generated@@120 $generated@@226 ($generated@@34 $generated@@227)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and ($generated@@223 $generated@@229) ($generated@@23 $generated@@24 $generated@@228 $generated@@26)) ($generated@@125 $generated@@24 $generated@@228 $generated@@26 $generated@@229))
 :pattern ( ($generated@@125 $generated@@24 $generated@@228 $generated@@26 $generated@@229))
)))
(assert (= ($generated@@37 $generated@@26) $generated@@3))
(assert (= ($generated@@230 $generated@@26) $generated@@6))
(assert (= $generated@@89 ($generated@@78 $generated@@24 $generated@@89)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and ($generated@@223 $generated@@232) (and ($generated@@106 $generated@@231) ($generated@@125 $generated@@24 $generated@@231 $generated@@26 $generated@@232))) ($generated@@125 $generated@@24 ($generated@@63 $generated@@231) $generated@@26 $generated@@232))
 :pattern ( ($generated@@125 $generated@@24 ($generated@@63 $generated@@231) $generated@@26 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and ($generated@@223 $generated@@234) (and ($generated@@106 $generated@@233) ($generated@@125 $generated@@24 $generated@@233 $generated@@26 $generated@@234))) ($generated@@125 $generated@@24 ($generated@@67 $generated@@233) $generated@@26 $generated@@234))
 :pattern ( ($generated@@125 $generated@@24 ($generated@@67 $generated@@233) $generated@@26 $generated@@234))
)))
(assert (forall (($generated@@235 Int) ) (! (= ($generated@@81 $generated@@9 ($generated@@13 ($generated@@80 $generated@@235))) ($generated@@78 $generated@@169 ($generated@@81 $generated@@9 ($generated@@13 $generated@@235))))
 :pattern ( ($generated@@81 $generated@@9 ($generated@@13 ($generated@@80 $generated@@235))))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@T) ) (! (= ($generated@@81 $generated@@237 ($generated@@78 $generated@@237 $generated@@236)) ($generated@@78 $generated@@169 ($generated@@81 $generated@@237 $generated@@236)))
 :pattern ( ($generated@@81 $generated@@237 ($generated@@78 $generated@@237 $generated@@236)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! ($generated@@125 $generated@@9 $generated@@239 $generated $generated@@238)
 :pattern ( ($generated@@125 $generated@@9 $generated@@239 $generated $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! ($generated@@23 $generated@@9 $generated@@240 $generated)
 :pattern ( ($generated@@23 $generated@@9 $generated@@240 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () Int)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 () Int)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@255 true))
(let (($generated@@256  (=> (= $generated@@241 ($generated@@25 $generated@@242 $generated@@243 $generated@@244)) (=> (and (and ($generated@@23 $generated@@24 $generated@@243 $generated@@26) ($generated@@23 $generated@@24 $generated@@244 $generated@@26)) (and (= $generated@@245 $generated@@244) ($generated@@23 $generated@@24 $generated@@245 $generated@@26))) (=> (and (and (and (= $generated@@246 $generated@@245) (= $generated@@247 $generated@@243)) (and ($generated@@23 $generated@@24 $generated@@247 $generated@@26) (= $generated@@248 $generated@@247))) (and (and (= $generated@@249 $generated@@242) ($generated@@23 $generated@@9 ($generated@@13 $generated@@249) $generated)) (and (= $generated@@250 $generated@@249) ($generated@@124 ($generated@@81 $generated@@24 $generated@@248) $generated@@26 $generated@@251)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< ($generated@@153 $generated@@248) ($generated@@153 $generated@@241))) (=> (< ($generated@@153 $generated@@248) ($generated@@153 $generated@@241)) (=> ($generated@@32 $generated@@248) (=> (and ($generated@@124 ($generated@@81 $generated@@24 $generated@@246) $generated@@26 $generated@@251) (= (ControlFlow 0 4) (- 0 3))) (< ($generated@@153 $generated@@246) ($generated@@153 $generated@@241)))))))))))
(let (($generated@@257  (=> (or (not (= $generated@@241 $generated@@89)) (not true)) (and (=> (= (ControlFlow 0 7) 4) $generated@@256) (=> (= (ControlFlow 0 7) 6) $generated@@255)))))
(let (($generated@@258 true))
(let (($generated@@259 true))
(let (($generated@@260  (=> (= $generated@@252 ($generated@@167 $generated@@253 $generated@@251 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@259) (=> (= (ControlFlow 0 8) 2) $generated@@258)) (=> (= (ControlFlow 0 8) 7) $generated@@257)))))
(let (($generated@@261  (=> (and ($generated@@223 $generated@@251) ($generated@@254 $generated@@251)) (=> (and (and ($generated@@23 $generated@@24 $generated@@241 $generated@@26) ($generated@@125 $generated@@24 $generated@@241 $generated@@26 $generated@@251)) (and (= 1 $generated@@30) (= (ControlFlow 0 9) 8))) $generated@@260))))
$generated@@261))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
