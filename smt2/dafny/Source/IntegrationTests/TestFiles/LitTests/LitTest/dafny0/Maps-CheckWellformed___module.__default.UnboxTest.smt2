(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U T@U T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 () Int)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U Int) T@U)
(declare-fun $generated@@44 (Int) Int)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@U Int Int T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@U T@U) T@U)
(declare-fun $generated@@54 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U) Int)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) Int)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@150 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@153 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@154 (T@T T@T) T@T)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@U) Int)
(declare-fun $generated@@244 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@27 $generated@@28 $generated@@29)) $generated@@27)
 :pattern ( ($generated@@25 ($generated@@26 $generated@@27 $generated@@28 $generated@@29)))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@30 ($generated@@26 $generated@@31 $generated@@32 $generated@@33)) $generated@@32)
 :pattern ( ($generated@@30 ($generated@@26 $generated@@31 $generated@@32 $generated@@33)))
)))
(assert (= ($generated@@34 $generated@@35) 0))
(assert (= ($generated@@8 $generated@@40) 3))
(assert  (=> (<= 0 $generated@@36) (forall (($generated@@50 T@U) ) (!  (=> (or ($generated@@38 $generated@@50) (and (< 0 $generated@@36) ($generated@@39 $generated@@40 $generated@@50 ($generated@@41 ($generated@@41 $generated))))) (and (forall (($generated@@51 Int) ) (!  (=> (and (<= ($generated@@44 0) $generated@@51) (< $generated@@51 ($generated@@34 $generated@@50))) (and (and (<= ($generated@@44 0) ($generated@@45 ($generated@@42 $generated@@40 ($generated@@43 $generated@@50 $generated@@51)))) (< ($generated@@45 ($generated@@42 $generated@@40 ($generated@@43 $generated@@50 $generated@@51))) ($generated@@34 $generated@@50))) (= ($generated@@42 $generated@@40 ($generated@@43 $generated@@50 $generated@@51)) ($generated@@42 $generated@@40 ($generated@@43 $generated@@50 ($generated@@45 ($generated@@42 $generated@@40 ($generated@@43 $generated@@50 $generated@@51))))))))
 :pattern ( ($generated@@42 $generated@@40 ($generated@@43 $generated@@50 $generated@@51)))
)) (= ($generated@@37 $generated@@50) ($generated@@26 ($generated@@46 ($generated@@47 ($generated@@41 $generated) ($generated@@44 0) ($generated@@34 $generated@@50) $generated@@50)) ($generated@@48 $generated@@50) ($generated@@49 ($generated@@41 $generated) ($generated@@41 $generated))))))
 :pattern ( ($generated@@37 $generated@@50))
))))
(assert (= ($generated@@8 $generated@@52) 4))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@39 $generated@@52 ($generated@@53 $generated@@58 $generated@@59) ($generated@@54 $generated@@56 $generated@@57))  (and ($generated@@55 $generated@@58 $generated@@56) ($generated@@55 $generated@@59 $generated@@57)))
 :pattern ( ($generated@@39 $generated@@52 ($generated@@53 $generated@@58 $generated@@59) ($generated@@54 $generated@@56 $generated@@57)))
)))
(assert  (=> (<= 0 $generated@@36) (forall (($generated@@63 T@U) ) (!  (=> (or ($generated@@38 ($generated@@60 $generated@@40 $generated@@63)) (and (< 0 $generated@@36) ($generated@@39 $generated@@40 $generated@@63 ($generated@@41 ($generated@@41 $generated))))) (and (forall (($generated@@64 Int) ) (!  (=> (and (<= ($generated@@44 0) $generated@@64) (< $generated@@64 ($generated@@34 ($generated@@60 $generated@@40 $generated@@63)))) (and (and (<= ($generated@@44 0) ($generated@@61 ($generated@@42 $generated@@40 ($generated@@43 ($generated@@60 $generated@@40 $generated@@63) $generated@@64)))) (< ($generated@@61 ($generated@@42 $generated@@40 ($generated@@43 ($generated@@60 $generated@@40 $generated@@63) $generated@@64))) ($generated@@34 ($generated@@60 $generated@@40 $generated@@63)))) (= ($generated@@42 $generated@@40 ($generated@@43 ($generated@@60 $generated@@40 $generated@@63) $generated@@64)) ($generated@@42 $generated@@40 ($generated@@43 ($generated@@60 $generated@@40 $generated@@63) ($generated@@61 ($generated@@42 $generated@@40 ($generated@@43 ($generated@@60 $generated@@40 $generated@@63) $generated@@64))))))))
 :pattern ( ($generated@@42 $generated@@40 ($generated@@43 $generated@@63 $generated@@64)))
)) (= ($generated@@37 ($generated@@60 $generated@@40 $generated@@63)) ($generated@@26 ($generated@@46 ($generated@@47 ($generated@@41 $generated) ($generated@@44 0) ($generated@@34 ($generated@@60 $generated@@40 $generated@@63)) ($generated@@60 $generated@@40 $generated@@63))) ($generated@@62 ($generated@@60 $generated@@40 $generated@@63)) ($generated@@49 ($generated@@41 $generated) ($generated@@41 $generated))))))
 :weight 3
 :pattern ( ($generated@@37 ($generated@@60 $generated@@40 $generated@@63)))
))))
(assert (= ($generated@@8 $generated@@65) 5))
(assert  (=> (<= 0 $generated@@36) (forall (($generated@@66 T@U) ) (!  (=> (or ($generated@@38 $generated@@66) (and (< 0 $generated@@36) ($generated@@39 $generated@@40 $generated@@66 ($generated@@41 ($generated@@41 $generated))))) ($generated@@39 $generated@@65 ($generated@@37 $generated@@66) ($generated@@49 ($generated@@41 $generated) ($generated@@41 $generated))))
 :pattern ( ($generated@@37 $generated@@66))
))))
(assert (forall (($generated@@67 Int) ) (! (= ($generated@@44 $generated@@67) $generated@@67)
 :pattern ( ($generated@@44 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@60 $generated@@69 $generated@@68) $generated@@68)
 :pattern ( ($generated@@60 $generated@@69 $generated@@68))
)))
(assert  (and (and (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@71 $generated@@74 $generated@@75 ($generated@@73 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@76) $generated@@78) $generated@@76)
 :weight 0
)) (forall (($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (or (= $generated@@83 $generated@@84) (= ($generated@@71 $generated@@79 $generated@@80 ($generated@@73 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@81) $generated@@84) ($generated@@71 $generated@@79 $generated@@80 $generated@@82 $generated@@84)))
 :weight 0
))) (= ($generated@@8 $generated@@72) 6)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (forall (($generated@@89 T@U) )  (=> ($generated@@70 $generated@@85 $generated@@89) (and ($generated@@55 $generated@@89 $generated@@87) ($generated@@55 ($generated@@71 $generated@@72 $generated@@72 $generated@@86 $generated@@89) $generated@@88)))) ($generated@@39 $generated@@65 ($generated@@26 $generated@@85 $generated@@86 ($generated@@49 $generated@@87 $generated@@88)) ($generated@@49 $generated@@87 $generated@@88)))
 :pattern ( ($generated@@26 $generated@@85 $generated@@86 ($generated@@49 $generated@@87 $generated@@88)))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 ($generated@@42 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@42 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@70 ($generated@@46 $generated@@93) $generated@@94) ($generated@@13 ($generated@@71 $generated@@72 $generated@@9 $generated@@93 $generated@@94)))
 :pattern ( ($generated@@70 ($generated@@46 $generated@@93) $generated@@94))
)))
(assert (= ($generated@@8 $generated@@95) 7))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@39 $generated@@95 $generated@@97 ($generated@@96 $generated@@98)) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@70 $generated@@97 $generated@@99) ($generated@@55 $generated@@99 $generated@@98))
 :pattern ( ($generated@@70 $generated@@97 $generated@@99))
)))
 :pattern ( ($generated@@39 $generated@@95 $generated@@97 ($generated@@96 $generated@@98)))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@55 $generated@@100 $generated) (and (= ($generated@@90 $generated@@10 ($generated@@42 $generated@@10 $generated@@100)) $generated@@100) ($generated@@39 $generated@@10 ($generated@@42 $generated@@10 $generated@@100) $generated)))
 :pattern ( ($generated@@55 $generated@@100 $generated))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@55 ($generated@@90 $generated@@103 $generated@@101) $generated@@102) ($generated@@39 $generated@@103 $generated@@101 $generated@@102))
 :pattern ( ($generated@@55 ($generated@@90 $generated@@103 $generated@@101) $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (<= 0 ($generated@@34 $generated@@104))
 :pattern ( ($generated@@34 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@105 ($generated@@49 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@49 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@108 ($generated@@49 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@49 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@24 ($generated@@49 $generated@@111 $generated@@112)) $generated@@3)
 :pattern ( ($generated@@49 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@113 ($generated@@53 $generated@@114 $generated@@115)) $generated@@5)
 :pattern ( ($generated@@53 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@116 ($generated@@54 $generated@@117 $generated@@118)) $generated@@117)
 :pattern ( ($generated@@54 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@119 ($generated@@54 $generated@@120 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@54 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@122 ($generated@@53 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@53 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@125 ($generated@@53 $generated@@126 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@53 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@96 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@96 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@24 ($generated@@96 $generated@@130)) $generated@@1)
 :pattern ( ($generated@@96 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@41 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@41 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@24 ($generated@@41 $generated@@133)) $generated@@2)
 :pattern ( ($generated@@41 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@42 $generated@@135 ($generated@@90 $generated@@135 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@90 $generated@@135 $generated@@134))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (< ($generated@@136 $generated@@138) ($generated@@137 ($generated@@53 $generated@@138 $generated@@139)))
 :pattern ( ($generated@@53 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (< ($generated@@136 $generated@@141) ($generated@@137 ($generated@@53 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@53 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (!  (not ($generated@@70 ($generated@@25 $generated@@142) $generated@@143))
 :pattern ( ($generated@@70 ($generated@@25 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> ($generated@@55 $generated@@144 ($generated@@49 $generated@@145 $generated@@146)) (and (= ($generated@@90 $generated@@65 ($generated@@42 $generated@@65 $generated@@144)) $generated@@144) ($generated@@39 $generated@@65 ($generated@@42 $generated@@65 $generated@@144) ($generated@@49 $generated@@145 $generated@@146))))
 :pattern ( ($generated@@55 $generated@@144 ($generated@@49 $generated@@145 $generated@@146)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> ($generated@@55 $generated@@149 ($generated@@54 $generated@@147 $generated@@148)) (and (= ($generated@@90 $generated@@52 ($generated@@42 $generated@@52 $generated@@149)) $generated@@149) ($generated@@39 $generated@@52 ($generated@@42 $generated@@52 $generated@@149) ($generated@@54 $generated@@147 $generated@@148))))
 :pattern ( ($generated@@55 $generated@@149 ($generated@@54 $generated@@147 $generated@@148)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@150 $generated@@158 $generated@@159 $generated@@160 ($generated@@155 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@163 $generated@@164) $generated@@161)
 :weight 0
)) (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@150 $generated@@165 $generated@@166 $generated@@167 ($generated@@155 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@150 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@150 $generated@@174 $generated@@175 $generated@@176 ($generated@@155 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@150 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))) (= ($generated@@8 $generated@@151) 8)) (= ($generated@@8 $generated@@152) 9)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@8 ($generated@@154 $generated@@183 $generated@@184)) 10))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@156 ($generated@@154 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@154 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@157 ($generated@@154 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@154 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Bool) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@13 ($generated@@150 $generated@@151 $generated@@152 $generated@@9 ($generated@@153 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))  (=> (and (or (not (= $generated@@193 $generated@@189)) (not true)) ($generated@@13 ($generated@@42 $generated@@9 ($generated@@71 $generated@@152 $generated@@72 ($generated@@71 $generated@@151 ($generated@@154 $generated@@152 $generated@@72) $generated@@190 $generated@@193) $generated@@191)))) $generated@@192))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152 $generated@@9 ($generated@@153 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (and (= ($generated@@24 ($generated@@54 $generated@@196 $generated@@197)) $generated@@6) (= ($generated@@195 ($generated@@54 $generated@@196 $generated@@197)) $generated@@7))
 :pattern ( ($generated@@54 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ) (!  (or (= $generated@@198 $generated@@142) (exists (($generated@@199 T@U) ) ($generated@@70 ($generated@@25 $generated@@198) $generated@@199)))
 :pattern ( ($generated@@25 $generated@@198))
)))
(assert (forall (($generated@@201 T@U) ) (!  (or (= $generated@@201 $generated@@142) (exists (($generated@@202 T@U) ) ($generated@@70 ($generated@@200 $generated@@201) $generated@@202)))
 :pattern ( ($generated@@200 $generated@@201))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@70 ($generated@@203 $generated@@204) $generated@@205)  (and ($generated@@70 ($generated@@25 $generated@@204) ($generated@@122 ($generated@@42 $generated@@52 $generated@@205))) (= ($generated@@71 $generated@@72 $generated@@72 ($generated@@30 $generated@@204) ($generated@@122 ($generated@@42 $generated@@52 $generated@@205))) ($generated@@125 ($generated@@42 $generated@@52 $generated@@205)))))
 :pattern ( ($generated@@70 ($generated@@203 $generated@@204) $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@70 ($generated@@200 $generated@@206) $generated@@207) (exists (($generated@@208 T@U) ) (!  (and ($generated@@70 ($generated@@25 $generated@@206) $generated@@208) (= $generated@@207 ($generated@@71 $generated@@72 $generated@@72 ($generated@@30 $generated@@206) $generated@@208)))
 :pattern ( ($generated@@70 ($generated@@25 $generated@@206) $generated@@208))
 :pattern ( ($generated@@71 $generated@@72 $generated@@72 ($generated@@30 $generated@@206) $generated@@208))
)))
 :pattern ( ($generated@@70 ($generated@@200 $generated@@206) $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ) (! (= ($generated@@136 ($generated@@90 $generated@@52 $generated@@209)) ($generated@@137 $generated@@209))
 :pattern ( ($generated@@136 ($generated@@90 $generated@@52 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@55 $generated@@210 ($generated@@96 $generated@@211)) (and (= ($generated@@90 $generated@@95 ($generated@@42 $generated@@95 $generated@@210)) $generated@@210) ($generated@@39 $generated@@95 ($generated@@42 $generated@@95 $generated@@210) ($generated@@96 $generated@@211))))
 :pattern ( ($generated@@55 $generated@@210 ($generated@@96 $generated@@211)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> ($generated@@55 $generated@@212 ($generated@@41 $generated@@213)) (and (= ($generated@@90 $generated@@40 ($generated@@42 $generated@@40 $generated@@212)) $generated@@212) ($generated@@39 $generated@@40 ($generated@@42 $generated@@40 $generated@@212) ($generated@@41 $generated@@213))))
 :pattern ( ($generated@@55 $generated@@212 ($generated@@41 $generated@@213)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (= ($generated@@39 $generated@@65 $generated@@214 ($generated@@49 $generated@@215 $generated@@216)) (forall (($generated@@217 T@U) ) (!  (=> ($generated@@70 ($generated@@25 $generated@@214) $generated@@217) (and ($generated@@55 ($generated@@71 $generated@@72 $generated@@72 ($generated@@30 $generated@@214) $generated@@217) $generated@@216) ($generated@@55 $generated@@217 $generated@@215)))
 :pattern ( ($generated@@71 $generated@@72 $generated@@72 ($generated@@30 $generated@@214) $generated@@217))
 :pattern ( ($generated@@70 ($generated@@25 $generated@@214) $generated@@217))
)))
 :pattern ( ($generated@@39 $generated@@65 $generated@@214 ($generated@@49 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= ($generated@@71 $generated@@72 $generated@@72 ($generated@@48 $generated@@218) $generated@@219) ($generated@@43 $generated@@218 ($generated@@45 ($generated@@42 $generated@@40 $generated@@219))))
 :pattern ( ($generated@@71 $generated@@72 $generated@@72 ($generated@@48 $generated@@218) $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@71 $generated@@72 $generated@@72 ($generated@@62 $generated@@220) $generated@@221) ($generated@@43 $generated@@220 ($generated@@61 ($generated@@42 $generated@@40 $generated@@221))))
 :pattern ( ($generated@@71 $generated@@72 $generated@@72 ($generated@@62 $generated@@220) $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@71 $generated@@72 $generated@@72 ($generated@@222 $generated@@224) $generated@@225) ($generated@@43 $generated@@224 ($generated@@223 ($generated@@42 $generated@@40 $generated@@225))))
 :pattern ( ($generated@@71 $generated@@72 $generated@@72 ($generated@@222 $generated@@224) $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 Int) ($generated@@228 Int) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (= ($generated@@13 ($generated@@71 $generated@@72 $generated@@9 ($generated@@47 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230))  (and ($generated@@55 $generated@@230 $generated@@226) (exists (($generated@@231 Int) )  (and (and (<= $generated@@227 $generated@@231) (< $generated@@231 $generated@@228)) (= ($generated@@42 $generated@@40 $generated@@230) ($generated@@42 $generated@@40 ($generated@@43 $generated@@229 $generated@@231)))))))
 :pattern ( ($generated@@71 $generated@@72 $generated@@9 ($generated@@47 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= ($generated@@53 ($generated@@60 $generated@@72 $generated@@232) ($generated@@60 $generated@@72 $generated@@233)) ($generated@@60 $generated@@52 ($generated@@53 $generated@@232 $generated@@233)))
 :pattern ( ($generated@@53 ($generated@@60 $generated@@72 $generated@@232) ($generated@@60 $generated@@72 $generated@@233)))
)))
(assert (forall (($generated@@234 Int) ) (! (= ($generated@@90 $generated@@10 ($generated@@14 ($generated@@44 $generated@@234))) ($generated@@60 $generated@@72 ($generated@@90 $generated@@10 ($generated@@14 $generated@@234))))
 :pattern ( ($generated@@90 $generated@@10 ($generated@@14 ($generated@@44 $generated@@234))))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@T) ) (! (= ($generated@@90 $generated@@236 ($generated@@60 $generated@@236 $generated@@235)) ($generated@@60 $generated@@72 ($generated@@90 $generated@@236 $generated@@235)))
 :pattern ( ($generated@@90 $generated@@236 ($generated@@60 $generated@@236 $generated@@235)))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (= ($generated@@34 $generated@@237) 0) (= $generated@@237 $generated@@35))
 :pattern ( ($generated@@34 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@238 ($generated@@41 $generated@@239)) (forall (($generated@@240 Int) ) (!  (=> (and (<= 0 $generated@@240) (< $generated@@240 ($generated@@34 $generated@@238))) ($generated@@55 ($generated@@43 $generated@@238 $generated@@240) $generated@@239))
 :pattern ( ($generated@@43 $generated@@238 $generated@@240))
)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@238 ($generated@@41 $generated@@239)))
)))
(assert (forall (($generated@@241 T@U) ) (!  (or (= $generated@@241 $generated@@142) (exists (($generated@@242 T@U) ($generated@@243 T@U) ) ($generated@@70 ($generated@@203 $generated@@241) ($generated@@90 $generated@@52 ($generated@@53 $generated@@242 $generated@@243)))))
 :pattern ( ($generated@@203 $generated@@241))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 Int) ) (!  (=> (and (<= 0 $generated@@246) (< $generated@@246 ($generated@@34 $generated@@245))) (< ($generated@@137 ($generated@@42 $generated@@52 ($generated@@43 $generated@@245 $generated@@246))) ($generated@@244 $generated@@245)))
 :pattern ( ($generated@@137 ($generated@@42 $generated@@52 ($generated@@43 $generated@@245 $generated@@246))))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> ($generated@@39 $generated@@65 $generated@@247 ($generated@@49 $generated@@248 $generated@@249)) (and (and ($generated@@39 $generated@@95 ($generated@@25 $generated@@247) ($generated@@96 $generated@@248)) ($generated@@39 $generated@@95 ($generated@@200 $generated@@247) ($generated@@96 $generated@@249))) ($generated@@39 $generated@@95 ($generated@@203 $generated@@247) ($generated@@96 ($generated@@54 $generated@@248 $generated@@249)))))
 :pattern ( ($generated@@39 $generated@@65 $generated@@247 ($generated@@49 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@250 T@U) ) (! ($generated@@39 $generated@@10 $generated@@250 $generated)
 :pattern ( ($generated@@39 $generated@@10 $generated@@250 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@251 () Int)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () Int)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@259 true))
(let (($generated@@260  (=> (and (not (and (and (<= ($generated@@44 0) $generated@@251) (< $generated@@251 ($generated@@34 $generated@@252))) (and (<= ($generated@@44 0) $generated@@253) (< $generated@@253 ($generated@@34 $generated@@252))))) (= (ControlFlow 0 6) 3)) $generated@@259)))
(let (($generated@@261  (=> (and (and (<= ($generated@@44 0) $generated@@251) (< $generated@@251 ($generated@@34 $generated@@252))) (and (<= ($generated@@44 0) $generated@@253) (< $generated@@253 ($generated@@34 $generated@@252)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (or (not (= ($generated@@42 $generated@@40 ($generated@@43 $generated@@252 $generated@@251)) ($generated@@42 $generated@@40 ($generated@@43 $generated@@252 $generated@@253)))) (not true)) (= ($generated@@42 $generated@@40 ($generated@@43 $generated@@252 $generated@@251)) ($generated@@42 $generated@@40 ($generated@@43 $generated@@252 $generated@@253))))) (=> (or (or (not (= ($generated@@42 $generated@@40 ($generated@@43 $generated@@252 $generated@@251)) ($generated@@42 $generated@@40 ($generated@@43 $generated@@252 $generated@@253)))) (not true)) (= ($generated@@42 $generated@@40 ($generated@@43 $generated@@252 $generated@@251)) ($generated@@42 $generated@@40 ($generated@@43 $generated@@252 $generated@@253)))) (=> (= (ControlFlow 0 4) 3) $generated@@259))))))
(let (($generated@@262  (=> (not (and (<= ($generated@@44 0) $generated@@251) (< $generated@@251 ($generated@@34 $generated@@252)))) (and (=> (= (ControlFlow 0 9) 4) $generated@@261) (=> (= (ControlFlow 0 9) 6) $generated@@260)))))
(let (($generated@@263  (=> (and (<= ($generated@@44 0) $generated@@251) (< $generated@@251 ($generated@@34 $generated@@252))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 $generated@@251) (< $generated@@251 ($generated@@34 $generated@@252)))) (=> (and (<= 0 $generated@@251) (< $generated@@251 ($generated@@34 $generated@@252))) (and (=> (= (ControlFlow 0 7) 4) $generated@@261) (=> (= (ControlFlow 0 7) 6) $generated@@260)))))))
(let (($generated@@264  (=> (not (and (<= ($generated@@44 0) $generated@@251) (< $generated@@251 ($generated@@34 $generated@@252)))) (and (=> (= (ControlFlow 0 12) 7) $generated@@263) (=> (= (ControlFlow 0 12) 9) $generated@@262)))))
(let (($generated@@265  (=> (and (<= ($generated@@44 0) $generated@@251) (< $generated@@251 ($generated@@34 $generated@@252))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 $generated@@251) (< $generated@@251 ($generated@@34 $generated@@252)))) (=> (and (<= 0 $generated@@251) (< $generated@@251 ($generated@@34 $generated@@252))) (and (=> (= (ControlFlow 0 10) 7) $generated@@263) (=> (= (ControlFlow 0 10) 9) $generated@@262)))))))
(let (($generated@@266  (=> (< $generated@@251 ($generated@@44 0)) (and (=> (= (ControlFlow 0 14) 10) $generated@@265) (=> (= (ControlFlow 0 14) 12) $generated@@264)))))
(let (($generated@@267  (=> (<= ($generated@@44 0) $generated@@251) (and (=> (= (ControlFlow 0 13) 10) $generated@@265) (=> (= (ControlFlow 0 13) 12) $generated@@264)))))
(let (($generated@@268  (and (=> (= (ControlFlow 0 15) 13) $generated@@267) (=> (= (ControlFlow 0 15) 14) $generated@@266))))
(let (($generated@@269 true))
(let (($generated@@270 true))
(let (($generated@@271  (=> (= $generated@@254 ($generated@@153 $generated@@255 $generated@@256 $generated@@4 false)) (and (and (=> (= (ControlFlow 0 16) 1) $generated@@270) (=> (= (ControlFlow 0 16) 15) $generated@@268)) (=> (= (ControlFlow 0 16) 2) $generated@@269)))))
(let (($generated@@272  (=> (and (and (and ($generated@@257 $generated@@256) ($generated@@258 $generated@@256)) ($generated@@39 $generated@@40 $generated@@252 ($generated@@41 ($generated@@41 $generated)))) (and (= 0 $generated@@36) (= (ControlFlow 0 17) 16))) $generated@@271)))
$generated@@272)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
