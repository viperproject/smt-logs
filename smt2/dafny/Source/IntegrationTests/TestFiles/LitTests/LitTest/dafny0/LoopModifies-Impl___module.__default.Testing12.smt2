(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@53 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 (T@U T@U) T@U)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@91 (Int) Int)
(declare-fun $generated@@93 (T@T T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@109 (T@U) Bool)
(declare-fun $generated@@112 (T@U T@U T@U) Bool)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@202 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated@@2) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@27 $generated@@2) $generated@@3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (! ($generated@@29 ($generated@@28 $generated@@30 $generated@@31) $generated@@31)
 :pattern ( ($generated@@28 $generated@@30 $generated@@31))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@29 $generated@@32 $generated@@34) ($generated@@29 ($generated@@28 $generated@@32 $generated@@33) $generated@@34))
 :pattern ( ($generated@@28 $generated@@32 $generated@@33) ($generated@@29 $generated@@32 $generated@@34))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@29 ($generated@@28 $generated@@35 $generated@@36) $generated@@37)  (or (= $generated@@37 $generated@@36) ($generated@@29 $generated@@35 $generated@@37)))
 :pattern ( ($generated@@29 ($generated@@28 $generated@@35 $generated@@36) $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@29 $generated@@40 $generated@@41) (not ($generated@@29 ($generated@@38 $generated@@39 $generated@@40) $generated@@41)))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40) ($generated@@29 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ) (!  (not ($generated@@29 $generated@@42 $generated@@43))
 :pattern ( ($generated@@29 $generated@@42 $generated@@43))
)))
(assert (= ($generated@@9 $generated@@45) 3))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@49 $generated@@46)  (or (= $generated@@49 $generated@@47) (= ($generated@@48 $generated@@49) $generated@@46)))
 :pattern ( ($generated@@44 $generated@@45 $generated@@49 $generated@@46))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@29 ($generated@@38 $generated@@50 $generated@@51) $generated@@52)  (and ($generated@@29 $generated@@50 $generated@@52) (not ($generated@@29 $generated@@51 $generated@@52))))
 :pattern ( ($generated@@29 ($generated@@38 $generated@@50 $generated@@51) $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@53 $generated@@45 $generated@@55 $generated@@54 $generated@@56) ($generated@@53 $generated@@45 $generated@@55 $generated@@46 $generated@@56))
 :pattern ( ($generated@@53 $generated@@45 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@53 $generated@@45 $generated@@55 $generated@@46 $generated@@56))
)))
(assert (= ($generated@@25 $generated@@57) 0))
(assert (= ($generated@@58 $generated@@5 $generated@@8) $generated@@57))
(assert  (not ($generated@@59 $generated@@57)))
(assert  (and (and (and (and (and (and (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@61 $generated@@68 $generated@@69 ($generated@@65 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@72) $generated@@70)
 :weight 0
)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@61 $generated@@73 $generated@@74 ($generated@@65 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@61 $generated@@73 $generated@@74 $generated@@76 $generated@@78)))
 :weight 0
))) (= ($generated@@9 $generated@@62) 4)) (= ($generated@@9 $generated@@63) 5)) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (= ($generated@@9 ($generated@@64 $generated@@79 $generated@@80)) 6))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@66 ($generated@@64 $generated@@81 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@64 $generated@@81 $generated@@82))
))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@83 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@64 $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@53 $generated@@45 $generated@@85 $generated@@46 $generated@@86)  (or (= $generated@@85 $generated@@47) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@86 $generated@@85) $generated@@2)))))
 :pattern ( ($generated@@53 $generated@@45 $generated@@85 $generated@@46 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@87 $generated@@88 $generated@@89) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@14 ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@88 $generated@@90) $generated@@2))) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@89 $generated@@90) $generated@@2))))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@89 $generated@@90) $generated@@2))
)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 Int) ) (! (= ($generated@@91 $generated@@92) $generated@@92)
 :pattern ( ($generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@93 $generated@@95 $generated@@94) $generated@@94)
 :pattern ( ($generated@@93 $generated@@95 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@96 $generated@@97 $generated@@98) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@29 $generated@@97 $generated@@99) ($generated@@29 $generated@@98 $generated@@99))
 :pattern ( ($generated@@29 $generated@@97 $generated@@99))
 :pattern ( ($generated@@29 $generated@@98 $generated@@99))
)))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@100 $generated@@102 ($generated@@60 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@60 $generated@@102 $generated@@101))
)))
(assert (= ($generated@@9 $generated@@103) 7))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@44 $generated@@103 $generated@@106 ($generated@@104 $generated@@107)) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@29 $generated@@106 $generated@@108) ($generated@@105 $generated@@108 $generated@@107))
 :pattern ( ($generated@@29 $generated@@106 $generated@@108))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@106 ($generated@@104 $generated@@107)))
)))
(assert ($generated@@59 $generated@@2))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (and (and ($generated@@109 $generated@@110) (and (or (not (= $generated@@111 $generated@@47)) (not true)) (= ($generated@@48 $generated@@111) $generated@@46))) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@110 $generated@@111) $generated@@2)))) ($generated@@53 $generated@@11 ($generated@@60 $generated@@11 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@110 $generated@@111) $generated@@57)) $generated $generated@@110))
 :pattern ( ($generated@@60 $generated@@11 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@110 $generated@@111) $generated@@57)))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@112 ($generated@@100 $generated@@116 $generated@@113) $generated@@114 $generated@@115) ($generated@@53 $generated@@116 $generated@@113 $generated@@114 $generated@@115))
 :pattern ( ($generated@@112 ($generated@@100 $generated@@116 $generated@@113) $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@87 $generated@@117 $generated@@118) (=> ($generated@@112 $generated@@119 $generated@@120 $generated@@117) ($generated@@112 $generated@@119 $generated@@120 $generated@@118)))
 :pattern ( ($generated@@87 $generated@@117 $generated@@118) ($generated@@112 $generated@@119 $generated@@120 $generated@@117))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (!  (=> ($generated@@87 $generated@@121 $generated@@122) (=> ($generated@@53 $generated@@125 $generated@@123 $generated@@124 $generated@@121) ($generated@@53 $generated@@125 $generated@@123 $generated@@124 $generated@@122)))
 :pattern ( ($generated@@87 $generated@@121 $generated@@122) ($generated@@53 $generated@@125 $generated@@123 $generated@@124 $generated@@121))
)))
(assert  (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@126 $generated@@129 $generated@@130 $generated@@131 ($generated@@128 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@134 $generated@@135) $generated@@132)
 :weight 0
)) (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@126 $generated@@136 $generated@@137 $generated@@138 ($generated@@128 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@126 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@126 $generated@@145 $generated@@146 $generated@@147 ($generated@@128 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@126 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@14 ($generated@@126 $generated@@45 $generated@@62 $generated@@10 ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@154)) (not true)) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@155 $generated@@160) $generated@@156)))) (or (or (= $generated@@160 $generated@@157) (= $generated@@160 $generated@@158)) (= $generated@@160 $generated@@159))))
 :pattern ( ($generated@@126 $generated@@45 $generated@@62 $generated@@10 ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> ($generated@@105 $generated@@162 $generated@@54) (and (= ($generated@@100 $generated@@45 ($generated@@60 $generated@@45 $generated@@162)) $generated@@162) ($generated@@44 $generated@@45 ($generated@@60 $generated@@45 $generated@@162) $generated@@54)))
 :pattern ( ($generated@@105 $generated@@162 $generated@@54))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> ($generated@@105 $generated@@163 $generated@@46) (and (= ($generated@@100 $generated@@45 ($generated@@60 $generated@@45 $generated@@163)) $generated@@163) ($generated@@44 $generated@@45 ($generated@@60 $generated@@45 $generated@@163) $generated@@46)))
 :pattern ( ($generated@@105 $generated@@163 $generated@@46))
)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@164 $generated@@54)  (and ($generated@@44 $generated@@45 $generated@@164 $generated@@46) (or (not (= $generated@@164 $generated@@47)) (not true))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@164 $generated@@54))
 :pattern ( ($generated@@44 $generated@@45 $generated@@164 $generated@@46))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> ($generated@@165 $generated@@166 $generated@@167) (= $generated@@166 $generated@@167))
 :pattern ( ($generated@@165 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (or (not (= $generated@@168 $generated@@170)) (not true)) (=> (and ($generated@@87 $generated@@168 $generated@@169) ($generated@@87 $generated@@169 $generated@@170)) ($generated@@87 $generated@@168 $generated@@170)))
 :pattern ( ($generated@@87 $generated@@168 $generated@@169) ($generated@@87 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (and (= ($generated@@171 ($generated@@58 $generated@@172 $generated@@173)) $generated@@172) (= ($generated@@27 ($generated@@58 $generated@@172 $generated@@173)) $generated@@173))
 :pattern ( ($generated@@58 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> ($generated@@105 $generated@@174 $generated) (and (= ($generated@@100 $generated@@11 ($generated@@60 $generated@@11 $generated@@174)) $generated@@174) ($generated@@44 $generated@@11 ($generated@@60 $generated@@11 $generated@@174) $generated)))
 :pattern ( ($generated@@105 $generated@@174 $generated))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@T) ) (! (= ($generated@@105 ($generated@@100 $generated@@177 $generated@@175) $generated@@176) ($generated@@44 $generated@@177 $generated@@175 $generated@@176))
 :pattern ( ($generated@@105 ($generated@@100 $generated@@177 $generated@@175) $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@53 $generated@@103 $generated@@178 ($generated@@104 $generated@@179) $generated@@180) (forall (($generated@@181 T@U) ) (!  (=> ($generated@@29 $generated@@178 $generated@@181) ($generated@@112 $generated@@181 $generated@@179 $generated@@180))
 :pattern ( ($generated@@29 $generated@@178 $generated@@181))
)))
 :pattern ( ($generated@@53 $generated@@103 $generated@@178 ($generated@@104 $generated@@179) $generated@@180))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@182 ($generated@@104 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@104 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@26 ($generated@@104 $generated@@184)) $generated@@1)
 :pattern ( ($generated@@104 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@T) ) (! (= ($generated@@60 $generated@@186 ($generated@@100 $generated@@186 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@100 $generated@@186 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@109 $generated@@187) (and (or (not (= $generated@@188 $generated@@47)) (not true)) (= ($generated@@48 $generated@@188) $generated@@46))) ($generated@@44 $generated@@11 ($generated@@60 $generated@@11 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@187 $generated@@188) $generated@@57)) $generated))
 :pattern ( ($generated@@60 $generated@@11 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@187 $generated@@188) $generated@@57)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@105 $generated@@189 ($generated@@104 $generated@@190)) (and (= ($generated@@100 $generated@@103 ($generated@@60 $generated@@103 $generated@@189)) $generated@@189) ($generated@@44 $generated@@103 ($generated@@60 $generated@@103 $generated@@189) ($generated@@104 $generated@@190))))
 :pattern ( ($generated@@105 $generated@@189 ($generated@@104 $generated@@190)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> ($generated@@109 ($generated@@65 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@191 $generated@@192 ($generated@@65 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@191 $generated@@192) $generated@@193 $generated@@194))) ($generated@@87 $generated@@191 ($generated@@65 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@191 $generated@@192 ($generated@@65 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@191 $generated@@192) $generated@@193 $generated@@194))))
 :pattern ( ($generated@@65 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@191 $generated@@192 ($generated@@65 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@191 $generated@@192) $generated@@193 $generated@@194)))
)))
(assert (= ($generated@@26 $generated@@54) $generated@@4))
(assert (= ($generated@@195 $generated@@54) $generated@@7))
(assert (= ($generated@@26 $generated@@46) $generated@@6))
(assert (= ($generated@@195 $generated@@46) $generated@@7))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@165 $generated@@196 $generated@@197) (forall (($generated@@198 T@U) ) (! (= ($generated@@29 $generated@@196 $generated@@198) ($generated@@29 $generated@@197 $generated@@198))
 :pattern ( ($generated@@29 $generated@@196 $generated@@198))
 :pattern ( ($generated@@29 $generated@@197 $generated@@198))
)))
 :pattern ( ($generated@@165 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@199 Int) ) (! (= ($generated@@100 $generated@@11 ($generated@@15 ($generated@@91 $generated@@199))) ($generated@@93 $generated@@63 ($generated@@100 $generated@@11 ($generated@@15 $generated@@199))))
 :pattern ( ($generated@@100 $generated@@11 ($generated@@15 ($generated@@91 $generated@@199))))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@T) ) (! (= ($generated@@100 $generated@@201 ($generated@@93 $generated@@201 $generated@@200)) ($generated@@93 $generated@@63 ($generated@@100 $generated@@201 $generated@@200)))
 :pattern ( ($generated@@100 $generated@@201 ($generated@@93 $generated@@201 $generated@@200)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@14 ($generated@@126 $generated@@45 $generated@@62 $generated@@10 ($generated@@202 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@207 $generated@@208))  (=> (and (or (not (= $generated@@207 $generated@@203)) (not true)) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@204 $generated@@207) $generated@@205)))) ($generated@@29 $generated@@206 ($generated@@100 $generated@@45 $generated@@207))))
 :pattern ( ($generated@@126 $generated@@45 $generated@@62 $generated@@10 ($generated@@202 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! ($generated@@53 $generated@@11 $generated@@210 $generated $generated@@209)
 :pattern ( ($generated@@53 $generated@@11 $generated@@210 $generated $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ) (! ($generated@@44 $generated@@11 $generated@@211 $generated)
 :pattern ( ($generated@@44 $generated@@11 $generated@@211 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () Int)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () Bool)
(declare-fun $generated@@227 () Bool)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 (T@U) Bool)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () Bool)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@238  (and (=> (= (ControlFlow 0 5) (- 0 13)) (or (and ($generated@@44 $generated@@45 $generated@@47 $generated@@54) ($generated@@29 $generated@@212 ($generated@@100 $generated@@45 $generated@@47))) (exists (($generated@@239 T@U) )  (and ($generated@@44 $generated@@45 $generated@@239 $generated@@54) ($generated@@29 $generated@@212 ($generated@@100 $generated@@45 $generated@@239)))))) (=> (or (and ($generated@@44 $generated@@45 $generated@@47 $generated@@54) ($generated@@29 $generated@@212 ($generated@@100 $generated@@45 $generated@@47))) (exists (($generated@@240 T@U) )  (and ($generated@@44 $generated@@45 $generated@@240 $generated@@54) ($generated@@29 $generated@@212 ($generated@@100 $generated@@45 $generated@@240))))) (=> (and (=> true (and ($generated@@44 $generated@@45 $generated@@213 $generated@@54) ($generated@@53 $generated@@45 $generated@@213 $generated@@54 $generated@@214))) ($generated@@29 $generated@@212 ($generated@@100 $generated@@45 $generated@@213))) (and (=> (= (ControlFlow 0 5) (- 0 12)) (or (not (= $generated@@215 $generated@@47)) (not true))) (=> (or (not (= $generated@@215 $generated@@47)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 11)) ($generated@@14 ($generated@@126 $generated@@45 $generated@@62 $generated@@10 $generated@@216 $generated@@215 $generated@@57))) (=> ($generated@@14 ($generated@@126 $generated@@45 $generated@@62 $generated@@10 $generated@@216 $generated@@215 $generated@@57)) (=> (and (= $generated@@217 ($generated@@65 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@214 $generated@@215 ($generated@@65 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@214 $generated@@215) $generated@@57 ($generated@@100 $generated@@11 ($generated@@15 $generated@@218))))) ($generated@@109 $generated@@217)) (and (=> (= (ControlFlow 0 5) (- 0 10)) (or (not (= $generated@@219 $generated@@47)) (not true))) (=> (or (not (= $generated@@219 $generated@@47)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@14 ($generated@@126 $generated@@45 $generated@@62 $generated@@10 $generated@@216 $generated@@219 $generated@@57))) (=> ($generated@@14 ($generated@@126 $generated@@45 $generated@@62 $generated@@10 $generated@@216 $generated@@219 $generated@@57)) (=> (and (= $generated@@220 ($generated@@65 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@217 $generated@@219 ($generated@@65 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@217 $generated@@219) $generated@@57 ($generated@@100 $generated@@11 ($generated@@15 $generated@@218))))) ($generated@@109 $generated@@220)) (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (not (= $generated@@221 $generated@@47)) (not true))) (=> (or (not (= $generated@@221 $generated@@47)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@14 ($generated@@126 $generated@@45 $generated@@62 $generated@@10 $generated@@216 $generated@@221 $generated@@57))) (=> ($generated@@14 ($generated@@126 $generated@@45 $generated@@62 $generated@@10 $generated@@216 $generated@@221 $generated@@57)) (=> (and (= $generated@@222 ($generated@@65 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@220 $generated@@221 ($generated@@65 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@220 $generated@@221) $generated@@57 ($generated@@100 $generated@@11 ($generated@@15 $generated@@218))))) ($generated@@109 $generated@@222)) (and (=> (= (ControlFlow 0 5) (- 0 6)) true) (=> (= $generated@@223 ($generated@@38 $generated@@212 ($generated@@28 $generated@@42 ($generated@@100 $generated@@45 $generated@@213)))) (=> (and (= $generated@@224 (+ $generated@@218 1)) (= (ControlFlow 0 5) (- 0 4))) (and ($generated@@96 $generated@@223 $generated@@212) (not ($generated@@96 $generated@@212 $generated@@223))))))))))))))))))))))))))
(let (($generated@@241  (=> (and (not (and ($generated@@44 $generated@@45 $generated@@225 $generated@@54) ($generated@@53 $generated@@45 $generated@@225 $generated@@54 $generated@@214))) (= (ControlFlow 0 15) 5)) $generated@@238)))
(let (($generated@@242  (=> (and (and ($generated@@44 $generated@@45 $generated@@225 $generated@@54) ($generated@@53 $generated@@45 $generated@@225 $generated@@54 $generated@@214)) (= (ControlFlow 0 14) 5)) $generated@@238)))
(let (($generated@@243  (=> (not ($generated@@165 $generated@@212 $generated@@42)) (and (=> (= (ControlFlow 0 16) 14) $generated@@242) (=> (= (ControlFlow 0 16) 15) $generated@@241)))))
(let (($generated@@244 true))
(let (($generated@@245  (=> $generated@@226 (and (=> (= (ControlFlow 0 17) 3) $generated@@244) (=> (= (ControlFlow 0 17) 16) $generated@@243)))))
(let (($generated@@246 true))
(let (($generated@@247  (and (=> (= (ControlFlow 0 18) 2) $generated@@246) (=> (= (ControlFlow 0 18) 17) $generated@@245))))
(let (($generated@@248 true))
(let (($generated@@249  (=> (=> $generated@@227 (and ($generated@@44 $generated@@45 $generated@@228 $generated@@54) ($generated@@53 $generated@@45 $generated@@228 $generated@@54 $generated@@214))) (=> (and ($generated@@109 $generated@@214) ($generated@@229 $generated@@214)) (=> (and (and (and ($generated@@44 $generated@@103 $generated@@212 ($generated@@104 $generated@@54)) ($generated@@53 $generated@@103 $generated@@212 ($generated@@104 $generated@@54) $generated@@214)) (and (not false) (<= 0 $generated@@218))) (and (and (forall (($generated@@250 T@U) ) (!  (=> (and (or (not (= $generated@@250 $generated@@47)) (not true)) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@230 $generated@@250) $generated@@2)))) (or (= ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@214 $generated@@250) ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@230 $generated@@250)) (or (or (= $generated@@250 $generated@@215) (= $generated@@250 $generated@@219)) (= $generated@@250 $generated@@221))))
 :pattern ( ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@214 $generated@@250))
)) ($generated@@87 $generated@@230 $generated@@214)) (and (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (or (not (= $generated@@251 $generated@@47)) (not true)) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@230 $generated@@251) $generated@@2)))) (or (= ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@214 $generated@@251) $generated@@252) ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@230 $generated@@251) $generated@@252)) ($generated@@14 ($generated@@126 $generated@@45 $generated@@62 $generated@@10 $generated@@216 $generated@@251 $generated@@252))))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@214 $generated@@251) $generated@@252))
)) ($generated@@96 $generated@@212 $generated@@231)))) (and (=> (= (ControlFlow 0 19) 1) $generated@@248) (=> (= (ControlFlow 0 19) 18) $generated@@247)))))))
(let (($generated@@253  (=> (= $generated@@232 ($generated@@127 $generated@@47 $generated@@230 $generated@@2 $generated@@215 $generated@@219 $generated@@221)) (=> (and (= $generated@@233 ($generated@@91 0)) (= $generated@@231 ($generated@@28 ($generated@@28 ($generated@@28 $generated@@42 ($generated@@100 $generated@@45 $generated@@215)) ($generated@@100 $generated@@45 $generated@@219)) ($generated@@100 $generated@@45 $generated@@221)))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (forall (($generated@@254 T@U) ($generated@@255 T@U) )  (=> (and (and (or (not (= $generated@@254 $generated@@47)) (not true)) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@230 $generated@@254) $generated@@2)))) ($generated@@29 $generated@@231 ($generated@@100 $generated@@45 $generated@@254))) ($generated@@14 ($generated@@126 $generated@@45 $generated@@62 $generated@@10 $generated@@232 $generated@@254 $generated@@255))))) (=> (forall (($generated@@256 T@U) ($generated@@257 T@U) )  (=> (and (and (or (not (= $generated@@256 $generated@@47)) (not true)) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@45 ($generated@@64 $generated@@62 $generated@@63) $generated@@230 $generated@@256) $generated@@2)))) ($generated@@29 $generated@@231 ($generated@@100 $generated@@45 $generated@@256))) ($generated@@14 ($generated@@126 $generated@@45 $generated@@62 $generated@@10 $generated@@232 $generated@@256 $generated@@257)))) (=> (and (= $generated@@216 ($generated@@202 $generated@@47 $generated@@230 $generated@@2 $generated@@231)) (= (ControlFlow 0 20) 19)) $generated@@249)))))))
(let (($generated@@258  (=> (and (and ($generated@@109 $generated@@230) ($generated@@229 $generated@@230)) (and ($generated@@44 $generated@@45 $generated@@215 $generated@@54) ($generated@@53 $generated@@45 $generated@@215 $generated@@54 $generated@@230))) (=> (and (and (and (and ($generated@@44 $generated@@45 $generated@@219 $generated@@54) ($generated@@53 $generated@@45 $generated@@219 $generated@@54 $generated@@230)) (and ($generated@@44 $generated@@45 $generated@@221 $generated@@54) ($generated@@53 $generated@@45 $generated@@221 $generated@@54 $generated@@230))) (and (and ($generated@@44 $generated@@103 $generated@@234 ($generated@@104 $generated@@54)) ($generated@@53 $generated@@103 $generated@@234 ($generated@@104 $generated@@54) $generated@@230)) true)) (and (and (and (=> $generated@@235 (and ($generated@@44 $generated@@45 $generated@@236 $generated@@54) ($generated@@53 $generated@@45 $generated@@236 $generated@@54 $generated@@230))) true) (= 1 $generated@@237)) (and (and (or (not (= $generated@@215 $generated@@219)) (not true)) (or (not (= $generated@@219 $generated@@221)) (not true))) (and (or (not (= $generated@@221 $generated@@215)) (not true)) (= (ControlFlow 0 22) 20))))) $generated@@253))))
$generated@@258)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
