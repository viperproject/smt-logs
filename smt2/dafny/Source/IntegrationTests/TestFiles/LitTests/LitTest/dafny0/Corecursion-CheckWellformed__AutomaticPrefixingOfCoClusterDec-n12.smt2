(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@34 (Int) Int)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@39 () Int)
(declare-fun $generated@@40 (T@U Int) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (Int) Bool)
(declare-fun $generated@@43 (Int) Bool)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U Int) T@U)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@U T@U T@U) Bool)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@104 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@T T@T) T@T)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27)
 :pattern ( ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27))
)))
(assert (= ($generated@@7 $generated@@30) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@33 ($generated@@31 $generated@@32)) ($generated@@28 $generated@@33))
 :pattern ( ($generated@@28 $generated@@33) ($generated@@29 $generated@@30 $generated@@33 ($generated@@31 $generated@@32)))
)))
(assert (forall (($generated@@35 Int) ) (! (= ($generated@@34 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@T) ) (! (= ($generated@@36 $generated@@38 $generated@@37) $generated@@37)
 :pattern ( ($generated@@36 $generated@@38 $generated@@37))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@47 T@U) ($generated@@48 Int) ) (!  (=> (or ($generated@@42 $generated@@48) (and (< 1 $generated@@39) (<= ($generated@@34 0) $generated@@48))) (and (and (=> (< $generated@@48 100) ($generated@@43 (+ $generated@@48 102))) (=> (<= 100 $generated@@48) ($generated@@42 (- $generated@@48 1)))) (= ($generated@@40 ($generated@@41 $generated@@47) $generated@@48) (ite (< $generated@@48 100) ($generated@@44 ($generated@@45 $generated@@9 ($generated@@13 $generated@@48)) ($generated@@46 $generated@@47 (+ $generated@@48 102))) ($generated@@40 $generated@@47 (- $generated@@48 1))))))
 :pattern ( ($generated@@40 ($generated@@41 $generated@@47) $generated@@48))
))))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@44 $generated@@51 $generated@@52) ($generated@@31 $generated@@50))  (and ($generated@@49 $generated@@51 $generated@@50) ($generated@@29 $generated@@30 $generated@@52 ($generated@@31 $generated@@50))))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@44 $generated@@51 $generated@@52) ($generated@@31 $generated@@50)))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@28 $generated@@54) (= ($generated@@53 $generated@@54) $generated@@4))
 :pattern ( ($generated@@28 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@45 $generated@@57 ($generated@@55 $generated@@57 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@55 $generated@@57 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (!  (=> ($generated@@28 $generated@@58) (exists (($generated@@59 T@U) ($generated@@60 T@U) ) (= $generated@@58 ($generated@@44 $generated@@59 $generated@@60))))
 :pattern ( ($generated@@28 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@29 $generated@@9 $generated@@61 $generated@@25) (<= ($generated@@34 0) ($generated@@14 $generated@@61)))
 :pattern ( ($generated@@29 $generated@@9 $generated@@61 $generated@@25))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@62 ($generated@@45 $generated@@66 $generated@@63) $generated@@64 $generated@@65) ($generated@@24 $generated@@66 $generated@@63 $generated@@64 $generated@@65))
 :pattern ( ($generated@@62 ($generated@@45 $generated@@66 $generated@@63) $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ) (!  (and (= ($generated@@23 ($generated@@31 $generated@@68)) $generated@@3) (= ($generated@@67 ($generated@@31 $generated@@68)) $generated@@6))
 :pattern ( ($generated@@31 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@49 $generated@@69 $generated@@25) (and (= ($generated@@45 $generated@@9 ($generated@@55 $generated@@9 $generated@@69)) $generated@@69) ($generated@@29 $generated@@9 ($generated@@55 $generated@@9 $generated@@69) $generated@@25)))
 :pattern ( ($generated@@49 $generated@@69 $generated@@25))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@70 T@U) ($generated@@71 Int) ) (!  (=> (or ($generated@@43 $generated@@71) (and (< 1 $generated@@39) (<= ($generated@@34 0) $generated@@71))) ($generated@@29 $generated@@30 ($generated@@46 $generated@@70 $generated@@71) ($generated@@31 $generated)))
 :pattern ( ($generated@@46 $generated@@70 $generated@@71))
))))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@72 T@U) ($generated@@73 Int) ) (!  (=> (or ($generated@@42 $generated@@73) (and (< 1 $generated@@39) (<= ($generated@@34 0) $generated@@73))) ($generated@@29 $generated@@30 ($generated@@40 $generated@@72 $generated@@73) ($generated@@31 $generated)))
 :pattern ( ($generated@@40 $generated@@72 $generated@@73))
))))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@74 T@U) ($generated@@75 Int) ) (!  (=> (or ($generated@@43 $generated@@75) (and (< 1 $generated@@39) (<= ($generated@@34 0) $generated@@75))) (and (and (=> (< $generated@@75 100) ($generated@@42 $generated@@75)) (=> (<= 100 $generated@@75) ($generated@@43 (- $generated@@75 1)))) (= ($generated@@46 ($generated@@41 $generated@@74) $generated@@75) (ite (< $generated@@75 100) ($generated@@40 $generated@@74 $generated@@75) ($generated@@46 $generated@@74 (- $generated@@75 1))))))
 :pattern ( ($generated@@46 ($generated@@41 $generated@@74) $generated@@75))
))))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@49 $generated@@76 $generated) (and (= ($generated@@45 $generated@@9 ($generated@@55 $generated@@9 $generated@@76)) $generated@@76) ($generated@@29 $generated@@9 ($generated@@55 $generated@@9 $generated@@76) $generated)))
 :pattern ( ($generated@@49 $generated@@76 $generated))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@49 ($generated@@45 $generated@@79 $generated@@77) $generated@@78) ($generated@@29 $generated@@79 $generated@@77 $generated@@78))
 :pattern ( ($generated@@49 ($generated@@45 $generated@@79 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@53 ($generated@@44 $generated@@80 $generated@@81)) $generated@@4)
 :pattern ( ($generated@@44 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@82 ($generated@@44 $generated@@83 $generated@@84)) $generated@@83)
 :pattern ( ($generated@@44 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@85 ($generated@@44 $generated@@86 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@44 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 ($generated@@31 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@31 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@55 $generated@@91 ($generated@@45 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@45 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 Int) ) (! (= ($generated@@46 ($generated@@41 $generated@@92) $generated@@93) ($generated@@46 $generated@@92 $generated@@93))
 :pattern ( ($generated@@46 ($generated@@41 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 Int) ) (! (= ($generated@@40 ($generated@@41 $generated@@94) $generated@@95) ($generated@@40 $generated@@94 $generated@@95))
 :pattern ( ($generated@@40 ($generated@@41 $generated@@94) $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and ($generated@@96 $generated@@99) (and ($generated@@28 $generated@@97) ($generated@@24 $generated@@30 $generated@@97 ($generated@@31 $generated@@98) $generated@@99))) ($generated@@62 ($generated@@82 $generated@@97) $generated@@98 $generated@@99))
 :pattern ( ($generated@@62 ($generated@@82 $generated@@97) $generated@@98 $generated@@99))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@100 $generated@@111 $generated@@112 $generated@@113 ($generated@@107 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@100 $generated@@118 $generated@@119 $generated@@120 ($generated@@107 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@100 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@100 $generated@@127 $generated@@128 $generated@@129 ($generated@@107 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))) (= ($generated@@7 $generated@@101) 4)) (= ($generated@@7 $generated@@102) 5)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@104 $generated@@136 $generated@@137 ($generated@@108 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@138) $generated@@140) $generated@@138)
 :weight 0
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@145 $generated@@146) (= ($generated@@104 $generated@@141 $generated@@142 ($generated@@108 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@104 $generated@@141 $generated@@142 $generated@@144 $generated@@146)))
 :weight 0
))) (= ($generated@@7 $generated@@105) 6)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (= ($generated@@7 ($generated@@106 $generated@@147 $generated@@148)) 7))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@109 ($generated@@106 $generated@@149 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@106 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@110 ($generated@@106 $generated@@151 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@106 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Bool) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@12 ($generated@@100 $generated@@101 $generated@@102 $generated@@8 ($generated@@103 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))  (=> (and (or (not (= $generated@@157 $generated@@153)) (not true)) ($generated@@12 ($generated@@55 $generated@@8 ($generated@@104 $generated@@102 $generated@@105 ($generated@@104 $generated@@101 ($generated@@106 $generated@@102 $generated@@105) $generated@@154 $generated@@157) $generated@@155)))) $generated@@156))
 :pattern ( ($generated@@100 $generated@@101 $generated@@102 $generated@@8 ($generated@@103 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@49 $generated@@160 ($generated@@31 $generated@@159)) (and (= ($generated@@45 $generated@@30 ($generated@@55 $generated@@30 $generated@@160)) $generated@@160) ($generated@@29 $generated@@30 ($generated@@55 $generated@@30 $generated@@160) ($generated@@31 $generated@@159))))
 :pattern ( ($generated@@49 $generated@@160 ($generated@@31 $generated@@159)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@96 $generated@@163) (and ($generated@@28 $generated@@161) ($generated@@24 $generated@@30 $generated@@161 ($generated@@31 $generated@@162) $generated@@163))) ($generated@@24 $generated@@30 ($generated@@85 $generated@@161) ($generated@@31 $generated@@162) $generated@@163))
 :pattern ( ($generated@@24 $generated@@30 ($generated@@85 $generated@@161) ($generated@@31 $generated@@162) $generated@@163))
)))
(assert (= ($generated@@23 $generated@@25) $generated@@2))
(assert (= ($generated@@67 $generated@@25) $generated@@5))
(assert (forall (($generated@@164 Int) ) (! (= ($generated@@45 $generated@@9 ($generated@@13 ($generated@@34 $generated@@164))) ($generated@@36 $generated@@105 ($generated@@45 $generated@@9 ($generated@@13 $generated@@164))))
 :pattern ( ($generated@@45 $generated@@9 ($generated@@13 ($generated@@34 $generated@@164))))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@45 $generated@@166 ($generated@@36 $generated@@166 $generated@@165)) ($generated@@36 $generated@@105 ($generated@@45 $generated@@166 $generated@@165)))
 :pattern ( ($generated@@45 $generated@@166 ($generated@@36 $generated@@166 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! ($generated@@24 $generated@@9 $generated@@168 $generated $generated@@167)
 :pattern ( ($generated@@24 $generated@@9 $generated@@168 $generated $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@96 $generated@@172) (= ($generated@@24 $generated@@30 ($generated@@44 $generated@@170 $generated@@171) ($generated@@31 $generated@@169) $generated@@172)  (and ($generated@@62 $generated@@170 $generated@@169 $generated@@172) ($generated@@24 $generated@@30 $generated@@171 ($generated@@31 $generated@@169) $generated@@172))))
 :pattern ( ($generated@@24 $generated@@30 ($generated@@44 $generated@@170 $generated@@171) ($generated@@31 $generated@@169) $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! ($generated@@29 $generated@@9 $generated@@173 $generated)
 :pattern ( ($generated@@29 $generated@@9 $generated@@173 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@180  (=> (<= 100 $generated@@174) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@29 $generated@@9 ($generated@@13 (- $generated@@174 1)) $generated@@25)) (=> ($generated@@29 $generated@@9 ($generated@@13 (- $generated@@174 1)) $generated@@25) (=> (and (= $generated@@175 (- $generated@@174 1)) ($generated@@24 $generated@@9 ($generated@@13 $generated@@175) $generated@@25 $generated@@176)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (<= 0 ($generated@@34 0)) (= ($generated@@34 0) ($generated@@34 0)))) (=> (or (<= 0 ($generated@@34 0)) (= ($generated@@34 0) ($generated@@34 0))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (or (<= 0 $generated@@174) (< ($generated@@34 0) ($generated@@34 0))) (= $generated@@175 $generated@@174))) (=> (or (or (<= 0 $generated@@174) (< ($generated@@34 0) ($generated@@34 0))) (= $generated@@175 $generated@@174)) (=> (= (ControlFlow 0 5) (- 0 4)) (or (< ($generated@@34 0) ($generated@@34 0)) (and (= ($generated@@34 0) ($generated@@34 0)) (< $generated@@175 $generated@@174))))))))))))))
(let (($generated@@181  (=> (and (< $generated@@174 100) (= (ControlFlow 0 3) (- 0 2))) ($generated@@29 $generated@@9 ($generated@@13 (+ $generated@@174 102)) $generated@@25))))
(let (($generated@@182 true))
(let (($generated@@183  (=> (= $generated@@177 ($generated@@103 $generated@@178 $generated@@176 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@182) (=> (= (ControlFlow 0 9) 3) $generated@@181)) (=> (= (ControlFlow 0 9) 5) $generated@@180)))))
(let (($generated@@184  (=> (and (and (and ($generated@@96 $generated@@176) ($generated@@179 $generated@@176)) (<= ($generated@@34 0) $generated@@174)) (and (= 1 $generated@@39) (= (ControlFlow 0 10) 9))) $generated@@183)))
$generated@@184))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
