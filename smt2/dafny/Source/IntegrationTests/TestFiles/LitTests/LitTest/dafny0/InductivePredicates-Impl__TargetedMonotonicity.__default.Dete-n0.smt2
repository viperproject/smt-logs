(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U T@U Int Int Int) Bool)
(declare-fun $generated@@0 (T@U) T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (Int) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@32 () Int)
(declare-fun $generated@@33 (T@U Int Int Int) Bool)
(declare-fun $generated@@34 (Int) Int)
(declare-fun $generated@@35 (Int) Bool)
(declare-fun $generated@@36 (Int) Int)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@86 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@90 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (forall (($generated@@17 T@U) ($generated@@18 T@U) ($generated@@19 Int) ($generated@@20 Int) ($generated@@21 Int) ) (! (= ($generated ($generated@@0 $generated@@17) $generated@@18 $generated@@19 $generated@@20 $generated@@21) ($generated $generated@@17 $generated@@18 $generated@@19 $generated@@20 $generated@@21))
 :pattern ( ($generated ($generated@@0 $generated@@17) $generated@@18 $generated@@19 $generated@@20 $generated@@21))
)))
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ($generated@@25 T@U) ) (!  (=> (and ($generated@@22 $generated@@23 $generated@@24) ($generated@@22 $generated@@24 $generated@@25)) ($generated@@22 $generated@@23 $generated@@25))
 :pattern ( ($generated@@22 $generated@@23 $generated@@24) ($generated@@22 $generated@@24 $generated@@25))
 :pattern ( ($generated@@22 $generated@@23 $generated@@24) ($generated@@22 $generated@@23 $generated@@25))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 Int) ($generated@@31 Int) ) (!  (=> (and (and (<= 0 $generated@@30) (<= 0 $generated@@31)) (<= (+ $generated@@30 $generated@@31) ($generated@@28 $generated@@29))) (= ($generated@@26 ($generated@@26 $generated@@29 ($generated@@27 $generated@@30)) ($generated@@27 $generated@@31)) ($generated@@26 $generated@@29 ($generated@@27 (+ $generated@@30 $generated@@31)))))
 :pattern ( ($generated@@26 ($generated@@26 $generated@@29 ($generated@@27 $generated@@30)) ($generated@@27 $generated@@31)))
)))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 Int) ($generated@@41 Int) ($generated@@42 Int) ) (!  (=> (or ($generated@@33 $generated@@39 $generated@@40 $generated@@41 $generated@@42) (< 2 $generated@@32)) (and (and (=> (< 0 ($generated@@28 $generated@@39)) (=> (not (and (= $generated@@40 ($generated@@34 0)) (= $generated@@41 $generated@@42))) (=> (or (not (= $generated@@40 0)) (not true)) (and ($generated@@35 $generated@@40) ($generated@@33 ($generated@@26 $generated@@39 ($generated@@27 1)) ($generated@@36 $generated@@40) $generated@@41 $generated@@42))))) (=> (=> (< 0 ($generated@@28 $generated@@39)) (or (and (= $generated@@40 ($generated@@34 0)) (= $generated@@41 $generated@@42)) (and (or (not (= $generated@@40 0)) (not true)) ($generated $generated@@38 ($generated@@26 $generated@@39 ($generated@@27 1)) ($generated@@36 $generated@@40) $generated@@41 $generated@@42)))) (=> (= ($generated@@34 0) ($generated@@28 $generated@@39)) (forall (($generated@@43 T@U) ) (!  (=> ($generated@@37 $generated@@43 $generated@@39) ($generated@@33 $generated@@43 $generated@@40 $generated@@41 $generated@@42))
 :pattern ( ($generated $generated@@38 $generated@@43 $generated@@40 $generated@@41 $generated@@42))
))))) (= ($generated ($generated@@0 $generated@@38) $generated@@39 $generated@@40 $generated@@41 $generated@@42)  (and (=> (< 0 ($generated@@28 $generated@@39)) (or (and (= $generated@@40 ($generated@@34 0)) (= $generated@@41 $generated@@42)) (and (or (not (= $generated@@40 0)) (not true)) ($generated $generated@@38 ($generated@@26 $generated@@39 ($generated@@27 1)) ($generated@@36 $generated@@40) $generated@@41 $generated@@42)))) (=> (= ($generated@@34 0) ($generated@@28 $generated@@39)) (exists (($generated@@44 T@U) ) (!  (and ($generated@@37 $generated@@44 $generated@@39) ($generated $generated@@38 $generated@@44 $generated@@40 $generated@@41 $generated@@42))
 :pattern ( ($generated $generated@@38 $generated@@44 $generated@@40 $generated@@41 $generated@@42))
)))))))
 :pattern ( ($generated ($generated@@0 $generated@@38) $generated@@39 $generated@@40 $generated@@41 $generated@@42))
))))
(assert (forall (($generated@@45 Int) ) (! (= ($generated@@34 $generated@@45) $generated@@45)
 :pattern ( ($generated@@34 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@46 $generated@@48 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 ($generated@@49 $generated@@52 $generated@@51)) $generated@@51)
 :pattern ( ($generated@@49 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (and ($generated@@53 $generated@@55) (<= ($generated@@28 $generated@@55) ($generated@@28 $generated@@54))) (and (= ($generated@@53 ($generated@@26 $generated@@54 $generated@@55)) ($generated@@53 $generated@@54)) (= ($generated@@28 ($generated@@26 $generated@@54 $generated@@55)) (- ($generated@@28 $generated@@54) ($generated@@28 $generated@@55)))))
 :pattern ( ($generated@@26 $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@56 Int) ) (!  (=> (<= 0 $generated@@56) (and ($generated@@53 ($generated@@27 $generated@@56)) (= ($generated@@28 ($generated@@27 $generated@@56)) $generated@@56)))
 :pattern ( ($generated@@27 $generated@@56))
)))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@57 T@U) ($generated@@58 Int) ($generated@@59 Int) ($generated@@60 Int) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> ($generated@@22 $generated@@61 $generated@@62) (=> ($generated $generated@@57 $generated@@61 $generated@@58 $generated@@59 $generated@@60) ($generated $generated@@57 $generated@@62 $generated@@58 $generated@@59 $generated@@60)))
 :pattern ( ($generated $generated@@57 $generated@@61 $generated@@58 $generated@@59 $generated@@60) ($generated@@37 $generated@@61 $generated@@63) ($generated@@37 $generated@@62 $generated@@63))
))))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@64 T@U) ($generated@@65 Int) ($generated@@66 Int) ($generated@@67 Int) ($generated@@68 T@U) ) (!  (=> (= $generated@@68 ($generated@@27 0)) (not ($generated $generated@@64 $generated@@68 $generated@@65 $generated@@66 $generated@@67)))
 :pattern ( ($generated $generated@@64 $generated@@68 $generated@@65 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (or ($generated@@22 $generated@@69 $generated@@70) (= $generated@@69 $generated@@70)) ($generated@@22 $generated@@70 $generated@@69))
 :pattern ( ($generated@@22 $generated@@69 $generated@@70) ($generated@@22 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@37 $generated@@71 $generated@@72) ($generated@@22 $generated@@71 $generated@@72))
 :pattern ( ($generated@@37 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ) (! (<= 0 ($generated@@28 $generated@@73))
 :pattern ( ($generated@@28 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@49 $generated@@75 ($generated@@50 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@50 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (and (and (and (=> ($generated@@22 $generated@@76 $generated@@77) (or (not (= $generated@@76 $generated@@77)) (not true))) (=> (and ($generated@@53 $generated@@76) (not ($generated@@53 $generated@@77))) ($generated@@22 $generated@@76 $generated@@77))) (=> (and ($generated@@53 $generated@@76) ($generated@@53 $generated@@77)) (= ($generated@@22 $generated@@76 $generated@@77) (< ($generated@@28 $generated@@76) ($generated@@28 $generated@@77))))) (=> (and ($generated@@22 $generated@@76 $generated@@77) ($generated@@53 $generated@@77)) ($generated@@53 $generated@@76)))
 :pattern ( ($generated@@22 $generated@@76 $generated@@77))
)))
(assert (= ($generated@@1 $generated@@78) 3))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 Int) ($generated@@82 Int) ($generated@@83 Int) ) (!  (=> (or ($generated@@33 ($generated@@46 $generated@@78 $generated@@80) $generated@@81 $generated@@82 $generated@@83) (< 2 $generated@@32)) (and (and (=> (< 0 ($generated@@28 $generated@@80)) (=> (not (and (= $generated@@81 ($generated@@34 0)) (= $generated@@82 $generated@@83))) (=> (or (not (= $generated@@81 0)) (not true)) (and ($generated@@35 $generated@@81) ($generated@@33 ($generated@@26 $generated@@80 ($generated@@27 1)) ($generated@@36 $generated@@81) $generated@@82 $generated@@83))))) (=> (=> (< 0 ($generated@@28 $generated@@80)) (or (and (= $generated@@81 ($generated@@34 0)) (= $generated@@82 $generated@@83)) (and (or (not (= $generated@@81 0)) (not true)) ($generated ($generated@@0 $generated@@79) ($generated@@26 $generated@@80 ($generated@@27 1)) ($generated@@36 $generated@@81) $generated@@82 $generated@@83)))) (=> (= ($generated@@34 0) ($generated@@28 $generated@@80)) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@37 $generated@@84 $generated@@80) ($generated@@33 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated ($generated@@0 $generated@@79) $generated@@84 $generated@@81 $generated@@82 $generated@@83))
))))) (= ($generated ($generated@@0 $generated@@79) ($generated@@46 $generated@@78 $generated@@80) $generated@@81 $generated@@82 $generated@@83)  (and (=> (< 0 ($generated@@28 $generated@@80)) (or (and (= $generated@@81 ($generated@@34 0)) (= $generated@@82 $generated@@83)) (and (or (not (= $generated@@81 0)) (not true)) ($generated ($generated@@0 $generated@@79) ($generated@@26 $generated@@80 ($generated@@27 1)) ($generated@@36 $generated@@81) $generated@@82 $generated@@83)))) (=> (= ($generated@@34 0) ($generated@@28 $generated@@80)) (exists (($generated@@85 T@U) ) (!  (and ($generated@@37 $generated@@85 $generated@@80) ($generated ($generated@@0 $generated@@79) $generated@@85 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated ($generated@@0 $generated@@79) $generated@@85 $generated@@81 $generated@@82 $generated@@83))
)))))))
 :weight 3
 :pattern ( ($generated ($generated@@0 $generated@@79) ($generated@@46 $generated@@78 $generated@@80) $generated@@81 $generated@@82 $generated@@83))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@86 $generated@@96 $generated@@97 $generated@@98 ($generated@@92 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@102 $generated@@99) $generated@@101 $generated@@102) $generated@@99)
 :weight 0
)) (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@108 $generated@@110) (= ($generated@@86 $generated@@103 $generated@@104 $generated@@105 ($generated@@92 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@86 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@86 $generated@@112 $generated@@113 $generated@@114 ($generated@@92 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@86 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 4)) (= ($generated@@1 $generated@@88) 5)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@90 $generated@@121 $generated@@122 ($generated@@93 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@123) $generated@@125) $generated@@123)
 :weight 0
))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 $generated@@126 $generated@@127 ($generated@@93 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@126 $generated@@127 $generated@@129 $generated@@131)))
 :weight 0
))) (forall (($generated@@132 T@T) ($generated@@133 T@T) ) (= ($generated@@1 ($generated@@91 $generated@@132 $generated@@133)) 6))) (forall (($generated@@134 T@T) ($generated@@135 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@134 $generated@@135)) $generated@@134)
 :pattern ( ($generated@@91 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@T) ($generated@@137 T@T) ) (! (= ($generated@@95 ($generated@@91 $generated@@136 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@91 $generated@@136 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 Bool) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@6 ($generated@@86 $generated@@87 $generated@@88 $generated@@2 ($generated@@89 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@142 $generated@@143))  (=> (and (or (not (= $generated@@142 $generated@@138)) (not true)) ($generated@@6 ($generated@@49 $generated@@2 ($generated@@90 $generated@@88 $generated@@78 ($generated@@90 $generated@@87 ($generated@@91 $generated@@88 $generated@@78) $generated@@139 $generated@@142) $generated@@140)))) $generated@@141))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88 $generated@@2 ($generated@@89 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> ($generated@@53 $generated@@144) (= $generated@@144 ($generated@@27 ($generated@@28 $generated@@144))))
 :pattern ( ($generated@@28 $generated@@144))
 :pattern ( ($generated@@53 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and ($generated@@53 $generated@@146) (<= ($generated@@28 $generated@@146) ($generated@@28 $generated@@145))) (or (and (= $generated@@146 ($generated@@27 0)) (= ($generated@@26 $generated@@145 $generated@@146) $generated@@145)) (and (or (not (= $generated@@146 ($generated@@27 0))) (not true)) ($generated@@22 ($generated@@26 $generated@@145 $generated@@146) $generated@@145))))
 :pattern ( ($generated@@26 $generated@@145 $generated@@146))
)))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ($generated@@151 Int) ) (!  (=> (or ($generated@@33 ($generated@@46 $generated@@78 $generated@@148) ($generated@@34 $generated@@149) ($generated@@34 $generated@@150) ($generated@@34 $generated@@151)) (< 2 $generated@@32)) (and (and (=> (< 0 ($generated@@28 $generated@@148)) (=> (not (and (= ($generated@@34 $generated@@149) ($generated@@34 0)) (= ($generated@@34 $generated@@150) ($generated@@34 $generated@@151)))) (=> ($generated@@6 ($generated@@46 $generated@@2 ($generated@@5  (or (not (= $generated@@149 0)) (not true))))) (and ($generated@@35 ($generated@@34 $generated@@149)) ($generated@@33 ($generated@@26 $generated@@148 ($generated@@27 1)) ($generated@@36 ($generated@@34 $generated@@149)) ($generated@@34 $generated@@150) ($generated@@34 $generated@@151)))))) (=> (=> (< 0 ($generated@@28 $generated@@148)) (or (and (= ($generated@@34 $generated@@149) ($generated@@34 0)) (= ($generated@@34 $generated@@150) ($generated@@34 $generated@@151))) (and (or (not (= $generated@@149 0)) (not true)) ($generated ($generated@@0 $generated@@147) ($generated@@26 $generated@@148 ($generated@@27 1)) ($generated@@36 ($generated@@34 $generated@@149)) ($generated@@34 $generated@@150) ($generated@@34 $generated@@151))))) (=> (= ($generated@@34 0) ($generated@@28 $generated@@148)) (forall (($generated@@152 T@U) ) (!  (=> ($generated@@37 $generated@@152 $generated@@148) ($generated@@33 $generated@@152 $generated@@149 $generated@@150 $generated@@151))
 :pattern ( ($generated ($generated@@0 $generated@@147) $generated@@152 $generated@@149 $generated@@150 $generated@@151))
))))) (= ($generated ($generated@@0 $generated@@147) ($generated@@46 $generated@@78 $generated@@148) ($generated@@34 $generated@@149) ($generated@@34 $generated@@150) ($generated@@34 $generated@@151))  (and (=> (< 0 ($generated@@28 $generated@@148)) (or (and (= ($generated@@34 $generated@@149) ($generated@@34 0)) (= ($generated@@34 $generated@@150) ($generated@@34 $generated@@151))) (and (or (not (= $generated@@149 0)) (not true)) ($generated ($generated@@0 $generated@@147) ($generated@@26 $generated@@148 ($generated@@27 1)) ($generated@@36 ($generated@@34 $generated@@149)) ($generated@@34 $generated@@150) ($generated@@34 $generated@@151))))) (=> (= ($generated@@34 0) ($generated@@28 $generated@@148)) (exists (($generated@@153 T@U) ) (!  (and ($generated@@37 $generated@@153 $generated@@148) ($generated ($generated@@0 $generated@@147) $generated@@153 $generated@@149 $generated@@150 $generated@@151))
 :pattern ( ($generated ($generated@@0 $generated@@147) $generated@@153 $generated@@149 $generated@@150 $generated@@151))
)))))))
 :weight 3
 :pattern ( ($generated ($generated@@0 $generated@@147) ($generated@@46 $generated@@78 $generated@@148) ($generated@@34 $generated@@149) ($generated@@34 $generated@@150) ($generated@@34 $generated@@151)))
))))
(assert (forall (($generated@@154 Int) ) (! (= ($generated@@50 $generated@@3 ($generated@@7 ($generated@@34 $generated@@154))) ($generated@@46 $generated@@78 ($generated@@50 $generated@@3 ($generated@@7 $generated@@154))))
 :pattern ( ($generated@@50 $generated@@3 ($generated@@7 ($generated@@34 $generated@@154))))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@50 $generated@@156 ($generated@@46 $generated@@156 $generated@@155)) ($generated@@46 $generated@@78 ($generated@@50 $generated@@156 $generated@@155)))
 :pattern ( ($generated@@50 $generated@@156 ($generated@@46 $generated@@156 $generated@@155)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@171  (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@157 $generated@@158))))
(let (($generated@@172  (=> (<= ($generated@@28 $generated@@159) 0) (=> (and (and (and ($generated@@160 $generated@@161) ($generated@@162 $generated@@161)) (= $generated@@163 $generated@@161)) (and (forall (($generated@@173 T@U) ($generated@@174 Int) ($generated@@175 Int) ($generated@@176 Int) ($generated@@177 Int) ) (!  (=> (and ($generated@@22 $generated@@173 $generated@@159) (and ($generated ($generated@@0 $generated@@164) $generated@@173 $generated@@174 $generated@@175 $generated@@176) ($generated ($generated@@0 $generated@@164) $generated@@173 $generated@@174 $generated@@175 $generated@@177))) (= $generated@@176 $generated@@177))
 :pattern ( ($generated ($generated@@0 $generated@@164) $generated@@173 $generated@@174 $generated@@175 $generated@@177) ($generated ($generated@@0 $generated@@164) $generated@@173 $generated@@174 $generated@@175 $generated@@176))
)) (= (ControlFlow 0 4) 2))) $generated@@171))))
(let (($generated@@178  (=> (and (< 0 ($generated@@28 $generated@@159)) (= (ControlFlow 0 3) 2)) $generated@@171)))
(let (($generated@@179  (=> (= $generated@@165 ($generated@@89 $generated@@166 $generated@@167 $generated@@168 false)) (=> (and (and ($generated@@160 $generated@@163) ($generated@@162 $generated@@163)) (and (= $generated@@167 $generated@@163) (forall (($generated@@180 T@U) ($generated@@181 Int) ($generated@@182 Int) ($generated@@183 Int) ($generated@@184 Int) ) (!  (=> (and (and ($generated ($generated@@0 $generated@@164) $generated@@180 $generated@@181 $generated@@182 $generated@@183) ($generated ($generated@@0 $generated@@164) $generated@@180 $generated@@181 $generated@@182 $generated@@184)) (or ($generated@@22 $generated@@180 $generated@@159) (and (= $generated@@180 $generated@@159) (or (and (<= 0 $generated@@181) (< $generated@@181 $generated@@169)) (and (= $generated@@181 $generated@@169) (or (and (<= 0 $generated@@182) (< $generated@@182 $generated@@170)) (and (= $generated@@182 $generated@@170) (or (and (<= 0 $generated@@183) (< $generated@@183 $generated@@157)) (and (= $generated@@183 $generated@@157) (and (<= 0 $generated@@184) (< $generated@@184 $generated@@158))))))))))) (= $generated@@183 $generated@@184))
 :pattern ( ($generated ($generated@@0 $generated@@164) $generated@@180 $generated@@181 $generated@@182 $generated@@184) ($generated ($generated@@0 $generated@@164) $generated@@180 $generated@@181 $generated@@182 $generated@@183))
)))) (and (=> (= (ControlFlow 0 5) 3) $generated@@178) (=> (= (ControlFlow 0 5) 4) $generated@@172))))))
(let (($generated@@185  (=> (and (and (and (and ($generated@@160 $generated@@167) ($generated@@162 $generated@@167)) (= 3 $generated@@32)) (and ($generated@@33 $generated@@159 $generated@@169 $generated@@170 $generated@@157) (and ($generated ($generated@@0 $generated@@164) $generated@@159 $generated@@169 $generated@@170 $generated@@157) (and (=> (< 0 ($generated@@28 $generated@@159)) (or (and (= $generated@@169 ($generated@@34 0)) (= $generated@@170 $generated@@157)) (and (or (not (= $generated@@169 0)) (not true)) ($generated ($generated@@0 $generated@@164) ($generated@@26 $generated@@159 ($generated@@27 1)) ($generated@@36 $generated@@169) $generated@@170 $generated@@157)))) (=> (= ($generated@@34 0) ($generated@@28 $generated@@159)) (exists (($generated@@186 T@U) ) (!  (and ($generated@@37 $generated@@186 $generated@@159) ($generated ($generated@@0 $generated@@164) $generated@@186 $generated@@169 $generated@@170 $generated@@157))
 :pattern ( ($generated ($generated@@0 $generated@@164) $generated@@186 $generated@@169 $generated@@170 $generated@@157))
))))))) (and (and ($generated@@33 $generated@@159 $generated@@169 $generated@@170 $generated@@158) (and ($generated ($generated@@0 $generated@@164) $generated@@159 $generated@@169 $generated@@170 $generated@@158) (and (=> (< 0 ($generated@@28 $generated@@159)) (or (and (= $generated@@169 ($generated@@34 0)) (= $generated@@170 $generated@@158)) (and (or (not (= $generated@@169 0)) (not true)) ($generated ($generated@@0 $generated@@164) ($generated@@26 $generated@@159 ($generated@@27 1)) ($generated@@36 $generated@@169) $generated@@170 $generated@@158)))) (=> (= ($generated@@34 0) ($generated@@28 $generated@@159)) (exists (($generated@@187 T@U) ) (!  (and ($generated@@37 $generated@@187 $generated@@159) ($generated ($generated@@0 $generated@@164) $generated@@187 $generated@@169 $generated@@170 $generated@@158))
 :pattern ( ($generated ($generated@@0 $generated@@164) $generated@@187 $generated@@169 $generated@@170 $generated@@158))
)))))) (= (ControlFlow 0 6) 5))) $generated@@179)))
$generated@@185))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
