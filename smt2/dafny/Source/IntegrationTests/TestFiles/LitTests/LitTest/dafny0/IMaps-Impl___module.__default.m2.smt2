(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@66 (Int) Int)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@73 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 () T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 (T@U T@U) T@U)
(declare-fun $generated@@120 () T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Int)
(declare-fun $generated@@162 (T@U) Int)
(declare-fun $generated@@174 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@210 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@1))
(assert (= ($generated@@25 $generated@@0) $generated@@2))
(assert (= ($generated@@9 $generated@@28) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@30 $generated@@31)) ($generated@@26 $generated@@32))
 :pattern ( ($generated@@26 $generated@@32) ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@30 $generated@@31)))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@33 $generated@@37 $generated@@38) ($generated@@29 $generated@@35 $generated@@36))  (and ($generated@@34 $generated@@37 $generated@@35) ($generated@@34 $generated@@38 $generated@@36)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@33 $generated@@37 $generated@@38) ($generated@@29 $generated@@35 $generated@@36)))
)))
(assert  (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@42 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@42 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@42 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@9 ($generated@@39 $generated@@57 $generated@@58)) 4))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@39 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@39 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@39 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@39 $generated@@61 $generated@@62))
))) (= ($generated@@9 $generated@@40) 5)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@27 ($generated@@39 $generated@@40 $generated@@10) $generated@@63 ($generated@@41 $generated@@64)) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 $generated@@63 $generated@@65)) ($generated@@34 $generated@@65 $generated@@64))
 :pattern ( ($generated@@42 $generated@@40 $generated@@10 $generated@@63 $generated@@65))
)))
 :pattern ( ($generated@@27 ($generated@@39 $generated@@40 $generated@@10) $generated@@63 ($generated@@41 $generated@@64)))
)))
(assert (forall (($generated@@67 Int) ) (! (= ($generated@@66 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 $generated@@69) $generated@@69)
 :pattern ( ($generated@@68 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@72 $generated@@78) (= ($generated@@71 $generated@@28 ($generated@@33 $generated@@76 $generated@@77) ($generated@@29 $generated@@74 $generated@@75) $generated@@78)  (and ($generated@@73 $generated@@76 $generated@@74 $generated@@78) ($generated@@73 $generated@@77 $generated@@75 $generated@@78))))
 :pattern ( ($generated@@71 $generated@@28 ($generated@@33 $generated@@76 $generated@@77) ($generated@@29 $generated@@74 $generated@@75) $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@26 $generated@@80) (= ($generated@@79 $generated@@80) $generated@@6))
 :pattern ( ($generated@@26 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@81 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@81 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@26 $generated@@85) (exists (($generated@@86 T@U) ($generated@@87 T@U) ) (= $generated@@85 ($generated@@33 $generated@@86 $generated@@87))))
 :pattern ( ($generated@@26 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@73 ($generated@@82 $generated@@91 $generated@@88) $generated@@89 $generated@@90) ($generated@@71 $generated@@91 $generated@@88 $generated@@89 $generated@@90))
 :pattern ( ($generated@@73 ($generated@@82 $generated@@91 $generated@@88) $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@94 T@U) ) (!  (not ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@93) $generated@@94)))
 :pattern ( ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (!  (or (= $generated@@95 $generated@@93) (exists (($generated@@96 T@U) ) ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@95) $generated@@96))))
 :pattern ( ($generated@@92 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ) (!  (or (= $generated@@98 $generated@@93) (exists (($generated@@99 T@U) ) ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 ($generated@@97 $generated@@98) $generated@@99))))
 :pattern ( ($generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@71 ($generated@@39 $generated@@40 $generated@@10) $generated@@100 ($generated@@41 $generated@@101) $generated@@102) (forall (($generated@@103 T@U) ) (!  (=> ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 $generated@@100 $generated@@103)) ($generated@@73 $generated@@103 $generated@@101 $generated@@102))
 :pattern ( ($generated@@42 $generated@@40 $generated@@10 $generated@@100 $generated@@103))
)))
 :pattern ( ($generated@@71 ($generated@@39 $generated@@40 $generated@@10) $generated@@100 ($generated@@41 $generated@@101) $generated@@102))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 ($generated@@104 $generated@@108) $generated@@109))  (and ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@108) ($generated@@105 ($generated@@81 $generated@@28 $generated@@109)))) (= ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@108) ($generated@@105 ($generated@@81 $generated@@28 $generated@@109))) ($generated@@107 ($generated@@81 $generated@@28 $generated@@109)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@10 ($generated@@104 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 ($generated@@97 $generated@@110) $generated@@111)) (exists (($generated@@112 T@U) ) (!  (and ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@110) $generated@@112)) (= $generated@@111 ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@110) $generated@@112)))
 :pattern ( ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@110) $generated@@112))
 :pattern ( ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@110) $generated@@112))
)))
 :pattern ( ($generated@@42 $generated@@40 $generated@@10 ($generated@@97 $generated@@110) $generated@@111))
)))
(assert (= ($generated@@9 $generated@@113) 6))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@71 $generated@@113 $generated@@115 ($generated@@114 $generated@@116 $generated@@117) $generated@@118) (forall (($generated@@119 T@U) ) (!  (=> ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@115) $generated@@119)) (and ($generated@@73 ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@115) $generated@@119) $generated@@117 $generated@@118) ($generated@@73 $generated@@119 $generated@@116 $generated@@118)))
 :pattern ( ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@115) $generated@@119))
 :pattern ( ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@115) $generated@@119))
)))
 :pattern ( ($generated@@71 $generated@@113 $generated@@115 ($generated@@114 $generated@@116 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ) (! (= (= $generated@@121 $generated@@93) (= ($generated@@92 $generated@@121) $generated@@120))
 :pattern ( ($generated@@92 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (! (= (= $generated@@122 $generated@@93) (= ($generated@@97 $generated@@122) $generated@@120))
 :pattern ( ($generated@@97 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (! (= (= $generated@@123 $generated@@93) (= ($generated@@104 $generated@@123) $generated@@120))
 :pattern ( ($generated@@104 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (!  (or (= $generated@@124 $generated@@93) (exists (($generated@@125 T@U) ($generated@@126 T@U) ) ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 ($generated@@104 $generated@@124) ($generated@@82 $generated@@28 ($generated@@33 $generated@@125 $generated@@126))))))
 :pattern ( ($generated@@104 $generated@@124))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@34 $generated@@127 $generated@@0) (and (= ($generated@@82 $generated@@11 ($generated@@81 $generated@@11 $generated@@127)) $generated@@127) ($generated@@27 $generated@@11 ($generated@@81 $generated@@11 $generated@@127) $generated@@0)))
 :pattern ( ($generated@@34 $generated@@127 $generated@@0))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@34 $generated@@128 $generated) (and (= ($generated@@82 $generated@@10 ($generated@@81 $generated@@10 $generated@@128)) $generated@@128) ($generated@@27 $generated@@10 ($generated@@81 $generated@@10 $generated@@128) $generated)))
 :pattern ( ($generated@@34 $generated@@128 $generated))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@34 ($generated@@82 $generated@@131 $generated@@129) $generated@@130) ($generated@@27 $generated@@131 $generated@@129 $generated@@130))
 :pattern ( ($generated@@34 ($generated@@82 $generated@@131 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@132 ($generated@@114 $generated@@133 $generated@@134)) $generated@@133)
 :pattern ( ($generated@@114 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@135 ($generated@@114 $generated@@136 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@114 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@25 ($generated@@114 $generated@@138 $generated@@139)) $generated@@4)
 :pattern ( ($generated@@114 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@79 ($generated@@33 $generated@@140 $generated@@141)) $generated@@6)
 :pattern ( ($generated@@33 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@142 ($generated@@29 $generated@@143 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@29 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@145 ($generated@@29 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@29 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@105 ($generated@@33 $generated@@148 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@33 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@107 ($generated@@33 $generated@@150 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@33 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@152 ($generated@@41 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@41 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@25 ($generated@@41 $generated@@154)) $generated@@3)
 :pattern ( ($generated@@41 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@81 $generated@@156 ($generated@@82 $generated@@156 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@82 $generated@@156 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@27 $generated@@113 $generated@@157 ($generated@@114 $generated@@158 $generated@@159)) (forall (($generated@@160 T@U) ) (!  (=> ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@157) $generated@@160)) (and ($generated@@34 ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@157) $generated@@160) $generated@@159) ($generated@@34 $generated@@160 $generated@@158)))
 :pattern ( ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@157) $generated@@160))
 :pattern ( ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@157) $generated@@160))
)))
 :pattern ( ($generated@@27 $generated@@113 $generated@@157 ($generated@@114 $generated@@158 $generated@@159)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (< ($generated@@161 $generated@@163) ($generated@@162 ($generated@@33 $generated@@163 $generated@@164)))
 :pattern ( ($generated@@33 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (< ($generated@@161 $generated@@166) ($generated@@162 ($generated@@33 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@33 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@34 $generated@@167 ($generated@@114 $generated@@168 $generated@@169)) (and (= ($generated@@82 $generated@@113 ($generated@@81 $generated@@113 $generated@@167)) $generated@@167) ($generated@@27 $generated@@113 ($generated@@81 $generated@@113 $generated@@167) ($generated@@114 $generated@@168 $generated@@169))))
 :pattern ( ($generated@@34 $generated@@167 ($generated@@114 $generated@@168 $generated@@169)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@34 $generated@@172 ($generated@@29 $generated@@170 $generated@@171)) (and (= ($generated@@82 $generated@@28 ($generated@@81 $generated@@28 $generated@@172)) $generated@@172) ($generated@@27 $generated@@28 ($generated@@81 $generated@@28 $generated@@172) ($generated@@29 $generated@@170 $generated@@171))))
 :pattern ( ($generated@@34 $generated@@172 ($generated@@29 $generated@@170 $generated@@171)))
)))
(assert (forall (($generated@@173 T@U) ) (!  (not ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 $generated@@120 $generated@@173)))
 :pattern ( ($generated@@42 $generated@@40 $generated@@10 $generated@@120 $generated@@173))
)))
(assert  (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@174 $generated@@179 $generated@@180 $generated@@181 ($generated@@178 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@184 $generated@@185) $generated@@182)
 :weight 0
)) (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@174 $generated@@186 $generated@@187 $generated@@188 ($generated@@178 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@174 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@174 $generated@@195 $generated@@196 $generated@@197 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@174 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (= ($generated@@9 $generated@@175) 7)) (= ($generated@@9 $generated@@176) 8)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@14 ($generated@@174 $generated@@175 $generated@@176 $generated@@10 ($generated@@177 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (or (not (= $generated@@208 $generated@@204)) (not true)) ($generated@@14 ($generated@@81 $generated@@10 ($generated@@42 $generated@@176 $generated@@40 ($generated@@42 $generated@@175 ($generated@@39 $generated@@176 $generated@@40) $generated@@205 $generated@@208) $generated@@206)))) $generated@@207))
 :pattern ( ($generated@@174 $generated@@175 $generated@@176 $generated@@10 ($generated@@177 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (and (= ($generated@@25 ($generated@@29 $generated@@211 $generated@@212)) $generated@@7) (= ($generated@@210 ($generated@@29 $generated@@211 $generated@@212)) $generated@@8))
 :pattern ( ($generated@@29 $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ) (! (= ($generated@@161 ($generated@@82 $generated@@28 $generated@@213)) ($generated@@162 $generated@@213))
 :pattern ( ($generated@@161 ($generated@@82 $generated@@28 $generated@@213)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> ($generated@@34 $generated@@214 ($generated@@41 $generated@@215)) (and (= ($generated@@82 ($generated@@39 $generated@@40 $generated@@10) ($generated@@81 ($generated@@39 $generated@@40 $generated@@10) $generated@@214)) $generated@@214) ($generated@@27 ($generated@@39 $generated@@40 $generated@@10) ($generated@@81 ($generated@@39 $generated@@40 $generated@@10) $generated@@214) ($generated@@41 $generated@@215))))
 :pattern ( ($generated@@34 $generated@@214 ($generated@@41 $generated@@215)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and ($generated@@72 $generated@@218) (and ($generated@@26 $generated@@216) (exists (($generated@@219 T@U) ) (! ($generated@@71 $generated@@28 $generated@@216 ($generated@@29 $generated@@217 $generated@@219) $generated@@218)
 :pattern ( ($generated@@71 $generated@@28 $generated@@216 ($generated@@29 $generated@@217 $generated@@219) $generated@@218))
)))) ($generated@@73 ($generated@@105 $generated@@216) $generated@@217 $generated@@218))
 :pattern ( ($generated@@73 ($generated@@105 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and ($generated@@72 $generated@@222) (and ($generated@@26 $generated@@220) (exists (($generated@@223 T@U) ) (! ($generated@@71 $generated@@28 $generated@@220 ($generated@@29 $generated@@223 $generated@@221) $generated@@222)
 :pattern ( ($generated@@71 $generated@@28 $generated@@220 ($generated@@29 $generated@@223 $generated@@221) $generated@@222))
)))) ($generated@@73 ($generated@@107 $generated@@220) $generated@@221 $generated@@222))
 :pattern ( ($generated@@73 ($generated@@107 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@33 ($generated@@68 $generated@@40 $generated@@224) ($generated@@68 $generated@@40 $generated@@225)) ($generated@@68 $generated@@28 ($generated@@33 $generated@@224 $generated@@225)))
 :pattern ( ($generated@@33 ($generated@@68 $generated@@40 $generated@@224) ($generated@@68 $generated@@40 $generated@@225)))
)))
(assert (forall (($generated@@226 Int) ) (! (= ($generated@@82 $generated@@11 ($generated@@15 ($generated@@66 $generated@@226))) ($generated@@68 $generated@@40 ($generated@@82 $generated@@11 ($generated@@15 $generated@@226))))
 :pattern ( ($generated@@82 $generated@@11 ($generated@@15 ($generated@@66 $generated@@226))))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@T) ) (! (= ($generated@@82 $generated@@228 ($generated@@68 $generated@@228 $generated@@227)) ($generated@@68 $generated@@40 ($generated@@82 $generated@@228 $generated@@227)))
 :pattern ( ($generated@@82 $generated@@228 ($generated@@68 $generated@@228 $generated@@227)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! ($generated@@71 $generated@@11 $generated@@230 $generated@@0 $generated@@229)
 :pattern ( ($generated@@71 $generated@@11 $generated@@230 $generated@@0 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! ($generated@@71 $generated@@10 $generated@@232 $generated $generated@@231)
 :pattern ( ($generated@@71 $generated@@10 $generated@@232 $generated $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> ($generated@@27 $generated@@113 $generated@@233 ($generated@@114 $generated@@234 $generated@@235)) (and (and ($generated@@27 ($generated@@39 $generated@@40 $generated@@10) ($generated@@92 $generated@@233) ($generated@@41 $generated@@234)) ($generated@@27 ($generated@@39 $generated@@40 $generated@@10) ($generated@@97 $generated@@233) ($generated@@41 $generated@@235))) ($generated@@27 ($generated@@39 $generated@@40 $generated@@10) ($generated@@104 $generated@@233) ($generated@@41 ($generated@@29 $generated@@234 $generated@@235)))))
 :pattern ( ($generated@@27 $generated@@113 $generated@@233 ($generated@@114 $generated@@234 $generated@@235)))
)))
(assert (forall (($generated@@236 T@U) ) (! ($generated@@27 $generated@@11 $generated@@236 $generated@@0)
 :pattern ( ($generated@@27 $generated@@11 $generated@@236 $generated@@0))
)))
(assert (forall (($generated@@237 T@U) ) (! ($generated@@27 $generated@@10 $generated@@237 $generated)
 :pattern ( ($generated@@27 $generated@@10 $generated@@237 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@246  (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@247 Int) ) (!  (=> (and (<= ($generated@@66 0) $generated@@247) (< $generated@@247 100)) (or ($generated@@14 ($generated@@81 $generated@@10 ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@239) ($generated@@82 $generated@@11 ($generated@@15 $generated@@247))))) ($generated@@14 ($generated@@81 $generated@@10 ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@238) ($generated@@82 $generated@@11 ($generated@@15 $generated@@247)))))))
 :pattern ( ($generated@@81 $generated@@10 ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@238) ($generated@@82 $generated@@11 ($generated@@15 $generated@@247)))))
 :pattern ( ($generated@@81 $generated@@10 ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@239) ($generated@@82 $generated@@11 ($generated@@15 $generated@@247)))))
)))))
(let (($generated@@248  (=> (and ($generated@@14 ($generated@@81 $generated@@10 ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@239) ($generated@@82 $generated@@11 ($generated@@15 $generated@@240))))) (= (ControlFlow 0 7) 3)) $generated@@246)))
(let (($generated@@249  (=> (not ($generated@@14 ($generated@@81 $generated@@10 ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@239) ($generated@@82 $generated@@11 ($generated@@15 $generated@@240)))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@238) ($generated@@82 $generated@@11 ($generated@@15 $generated@@240))))) (=> (= (ControlFlow 0 5) 3) $generated@@246)))))
(let (($generated@@250  (=> (and (<= ($generated@@66 0) $generated@@240) (< $generated@@240 100)) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@239) ($generated@@82 $generated@@11 ($generated@@15 $generated@@240))))) (and (=> (= (ControlFlow 0 8) 5) $generated@@249) (=> (= (ControlFlow 0 8) 7) $generated@@248))))))
(let (($generated@@251  (=> (and (not (and (<= ($generated@@66 0) $generated@@240) (< $generated@@240 100))) (= (ControlFlow 0 4) 3)) $generated@@246)))
(let (($generated@@252  (=> (< $generated@@240 ($generated@@66 0)) (and (=> (= (ControlFlow 0 11) 8) $generated@@250) (=> (= (ControlFlow 0 11) 4) $generated@@251)))))
(let (($generated@@253  (=> (<= ($generated@@66 0) $generated@@240) (and (=> (= (ControlFlow 0 10) 8) $generated@@250) (=> (= (ControlFlow 0 10) 4) $generated@@251)))))
(let (($generated@@254  (and (=> (= (ControlFlow 0 12) 10) $generated@@253) (=> (= (ControlFlow 0 12) 11) $generated@@252))))
(let (($generated@@255 true))
(let (($generated@@256  (=> (= $generated@@241 ($generated@@177 $generated@@242 $generated@@243 $generated@@5 false)) (and (=> (= (ControlFlow 0 13) 12) $generated@@254) (=> (= (ControlFlow 0 13) 1) $generated@@255)))))
(let (($generated@@257  (=> (and (and ($generated@@72 $generated@@243) ($generated@@244 $generated@@243)) (and ($generated@@27 $generated@@113 $generated@@239 ($generated@@114 $generated@@0 $generated)) ($generated@@71 $generated@@113 $generated@@239 ($generated@@114 $generated@@0 $generated) $generated@@243))) (=> (and (and (and ($generated@@27 $generated@@113 $generated@@238 ($generated@@114 $generated@@0 $generated)) ($generated@@71 $generated@@113 $generated@@238 ($generated@@114 $generated@@0 $generated) $generated@@243)) (= 0 $generated@@245)) (and (forall (($generated@@258 T@U) ) (!  (=> (and (<= ($generated@@66 0) ($generated@@16 $generated@@258)) (< ($generated@@16 $generated@@258) 100)) (and (and ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@239) ($generated@@82 $generated@@11 $generated@@258))) ($generated@@14 ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@238) ($generated@@82 $generated@@11 $generated@@258)))) (= ($generated@@14 ($generated@@81 $generated@@10 ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@239) ($generated@@82 $generated@@11 $generated@@258))))  (not ($generated@@14 ($generated@@81 $generated@@10 ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@238) ($generated@@82 $generated@@11 $generated@@258))))))))
 :pattern ( ($generated@@81 $generated@@10 ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@238) ($generated@@82 $generated@@11 $generated@@258))))
 :pattern ( ($generated@@81 $generated@@10 ($generated@@42 $generated@@40 $generated@@40 ($generated@@106 $generated@@239) ($generated@@82 $generated@@11 $generated@@258))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@238) ($generated@@82 $generated@@11 $generated@@258)))
 :pattern ( ($generated@@42 $generated@@40 $generated@@10 ($generated@@92 $generated@@239) ($generated@@82 $generated@@11 $generated@@258)))
)) (= (ControlFlow 0 14) 13))) $generated@@256))))
$generated@@257))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
