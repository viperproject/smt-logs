(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@43 (T@U T@U T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 (T@U Int) T@U)
(declare-fun $generated@@60 (T@U T@U) Bool)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T T@T) T@T)
(declare-fun $generated@@69 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@99 (Int) Int)
(declare-fun $generated@@101 (T@T T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@106 (T@T T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Int)
(declare-fun $generated@@162 (T@U) Int)
(declare-fun $generated@@168 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated) $generated@@0))
(assert ($generated@@31 $generated@@32))
(assert (= ($generated@@14 $generated@@35) 3))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@34 $generated@@35 $generated@@38 ($generated@@36 $generated@@37)) ($generated@@33 $generated@@38))
 :pattern ( ($generated@@33 $generated@@38) ($generated@@34 $generated@@35 $generated@@38 ($generated@@36 $generated@@37)))
)))
(assert (= ($generated@@14 $generated@@39) 4))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@34 $generated@@39 $generated@@42 $generated@@32)  (or (= $generated@@42 $generated@@40) (= ($generated@@41 $generated@@42) $generated@@32)))
 :pattern ( ($generated@@34 $generated@@39 $generated@@42 $generated@@32))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (and ($generated@@43 $generated@@46 $generated@@32 $generated@@47) ($generated@@44 $generated@@47)) ($generated@@43 $generated@@46 $generated@@45 $generated@@47))
 :pattern ( ($generated@@43 $generated@@46 $generated@@32 $generated@@47))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@48 $generated@@39 $generated@@51 $generated@@49 $generated@@52) ($generated@@48 $generated@@39 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@48 $generated@@39 $generated@@51 $generated@@49 $generated@@52))
 :pattern ( ($generated@@48 $generated@@39 $generated@@51 $generated@@50 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@48 $generated@@39 $generated@@54 $generated@@53 $generated@@55) ($generated@@48 $generated@@39 $generated@@54 $generated@@45 $generated@@55))
 :pattern ( ($generated@@48 $generated@@39 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@48 $generated@@39 $generated@@54 $generated@@45 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@48 $generated@@39 $generated@@57 $generated@@56 $generated@@58) ($generated@@48 $generated@@39 $generated@@57 $generated@@32 $generated@@58))
 :pattern ( ($generated@@48 $generated@@39 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@48 $generated@@39 $generated@@57 $generated@@32 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 Int) ) (! (= ($generated@@34 $generated@@35 ($generated@@59 $generated@@62 $generated@@63) ($generated@@36 $generated@@61))  (and ($generated@@60 $generated@@62 $generated@@61) ($generated@@34 $generated@@16 ($generated@@20 $generated@@63) $generated)))
 :pattern ( ($generated@@34 $generated@@35 ($generated@@59 $generated@@62 $generated@@63) ($generated@@36 $generated@@61)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@65 $generated@@72 $generated@@73 ($generated@@69 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@76) $generated@@74)
 :weight 0
)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@65 $generated@@77 $generated@@78 ($generated@@69 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@65 $generated@@77 $generated@@78 $generated@@80 $generated@@82)))
 :weight 0
))) (= ($generated@@14 $generated@@66) 5)) (= ($generated@@14 $generated@@67) 6)) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (= ($generated@@14 ($generated@@68 $generated@@83 $generated@@84)) 7))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@70 ($generated@@68 $generated@@85 $generated@@86)) $generated@@85)
 :pattern ( ($generated@@68 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@71 ($generated@@68 $generated@@87 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@68 $generated@@87 $generated@@88))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@48 $generated@@39 $generated@@89 $generated@@50 $generated@@90)  (or (= $generated@@89 $generated@@40) ($generated@@19 ($generated@@64 $generated@@15 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@90 $generated@@89) $generated@@1)))))
 :pattern ( ($generated@@48 $generated@@39 $generated@@89 $generated@@50 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@48 $generated@@39 $generated@@91 $generated@@45 $generated@@92)  (or (= $generated@@91 $generated@@40) ($generated@@19 ($generated@@64 $generated@@15 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@92 $generated@@91) $generated@@1)))))
 :pattern ( ($generated@@48 $generated@@39 $generated@@91 $generated@@45 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@48 $generated@@39 $generated@@93 $generated@@32 $generated@@94)  (or (= $generated@@93 $generated@@40) ($generated@@19 ($generated@@64 $generated@@15 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@94 $generated@@93) $generated@@1)))))
 :pattern ( ($generated@@48 $generated@@39 $generated@@93 $generated@@32 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@95 $generated@@96 $generated@@97) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@19 ($generated@@64 $generated@@15 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@96 $generated@@98) $generated@@1))) ($generated@@19 ($generated@@64 $generated@@15 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@97 $generated@@98) $generated@@1))))
 :pattern ( ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@97 $generated@@98) $generated@@1))
)))
 :pattern ( ($generated@@95 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@100 Int) ) (! (= ($generated@@99 $generated@@100) $generated@@100)
 :pattern ( ($generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@101 $generated@@103 $generated@@102) $generated@@102)
 :pattern ( ($generated@@101 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@33 $generated@@105) (= ($generated@@104 $generated@@105) $generated@@9))
 :pattern ( ($generated@@33 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@106 $generated@@108 ($generated@@64 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@64 $generated@@108 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@33 $generated@@109) (exists (($generated@@110 T@U) ($generated@@111 Int) ) (= $generated@@109 ($generated@@59 $generated@@110 $generated@@111))))
 :pattern ( ($generated@@33 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@43 ($generated@@106 $generated@@115 $generated@@112) $generated@@113 $generated@@114) ($generated@@48 $generated@@115 $generated@@112 $generated@@113 $generated@@114))
 :pattern ( ($generated@@43 ($generated@@106 $generated@@115 $generated@@112) $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> ($generated@@95 $generated@@116 $generated@@117) (=> ($generated@@43 $generated@@118 $generated@@119 $generated@@116) ($generated@@43 $generated@@118 $generated@@119 $generated@@117)))
 :pattern ( ($generated@@95 $generated@@116 $generated@@117) ($generated@@43 $generated@@118 $generated@@119 $generated@@116))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (!  (=> ($generated@@95 $generated@@120 $generated@@121) (=> ($generated@@48 $generated@@124 $generated@@122 $generated@@123 $generated@@120) ($generated@@48 $generated@@124 $generated@@122 $generated@@123 $generated@@121)))
 :pattern ( ($generated@@95 $generated@@120 $generated@@121) ($generated@@48 $generated@@124 $generated@@122 $generated@@123 $generated@@120))
)))
(assert (forall (($generated@@126 T@U) ) (!  (and (= ($generated@@30 ($generated@@36 $generated@@126)) $generated@@6) (= ($generated@@125 ($generated@@36 $generated@@126)) $generated@@12))
 :pattern ( ($generated@@36 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@60 $generated@@127 $generated@@50) (and (= ($generated@@106 $generated@@39 ($generated@@64 $generated@@39 $generated@@127)) $generated@@127) ($generated@@34 $generated@@39 ($generated@@64 $generated@@39 $generated@@127) $generated@@50)))
 :pattern ( ($generated@@60 $generated@@127 $generated@@50))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@60 $generated@@128 $generated@@49) (and (= ($generated@@106 $generated@@39 ($generated@@64 $generated@@39 $generated@@128)) $generated@@128) ($generated@@34 $generated@@39 ($generated@@64 $generated@@39 $generated@@128) $generated@@49)))
 :pattern ( ($generated@@60 $generated@@128 $generated@@49))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@60 $generated@@129 $generated@@56) (and (= ($generated@@106 $generated@@39 ($generated@@64 $generated@@39 $generated@@129)) $generated@@129) ($generated@@34 $generated@@39 ($generated@@64 $generated@@39 $generated@@129) $generated@@56)))
 :pattern ( ($generated@@60 $generated@@129 $generated@@56))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@60 $generated@@130 $generated@@32) (and (= ($generated@@106 $generated@@39 ($generated@@64 $generated@@39 $generated@@130)) $generated@@130) ($generated@@34 $generated@@39 ($generated@@64 $generated@@39 $generated@@130) $generated@@32)))
 :pattern ( ($generated@@60 $generated@@130 $generated@@32))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@60 $generated@@131 $generated@@53) (and (= ($generated@@106 $generated@@39 ($generated@@64 $generated@@39 $generated@@131)) $generated@@131) ($generated@@34 $generated@@39 ($generated@@64 $generated@@39 $generated@@131) $generated@@53)))
 :pattern ( ($generated@@60 $generated@@131 $generated@@53))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@60 $generated@@132 $generated@@45) (and (= ($generated@@106 $generated@@39 ($generated@@64 $generated@@39 $generated@@132)) $generated@@132) ($generated@@34 $generated@@39 ($generated@@64 $generated@@39 $generated@@132) $generated@@45)))
 :pattern ( ($generated@@60 $generated@@132 $generated@@45))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@34 $generated@@39 $generated@@133 $generated@@49)  (and ($generated@@34 $generated@@39 $generated@@133 $generated@@50) (or (not (= $generated@@133 $generated@@40)) (not true))))
 :pattern ( ($generated@@34 $generated@@39 $generated@@133 $generated@@49))
 :pattern ( ($generated@@34 $generated@@39 $generated@@133 $generated@@50))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@34 $generated@@39 $generated@@134 $generated@@53)  (and ($generated@@34 $generated@@39 $generated@@134 $generated@@45) (or (not (= $generated@@134 $generated@@40)) (not true))))
 :pattern ( ($generated@@34 $generated@@39 $generated@@134 $generated@@53))
 :pattern ( ($generated@@34 $generated@@39 $generated@@134 $generated@@45))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@34 $generated@@39 $generated@@135 $generated@@56)  (and ($generated@@34 $generated@@39 $generated@@135 $generated@@32) (or (not (= $generated@@135 $generated@@40)) (not true))))
 :pattern ( ($generated@@34 $generated@@39 $generated@@135 $generated@@56))
 :pattern ( ($generated@@34 $generated@@39 $generated@@135 $generated@@32))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and ($generated@@44 $generated@@138) (and ($generated@@33 $generated@@137) (exists (($generated@@139 T@U) ) (! ($generated@@48 $generated@@35 $generated@@137 ($generated@@36 $generated@@139) $generated@@138)
 :pattern ( ($generated@@48 $generated@@35 $generated@@137 ($generated@@36 $generated@@139) $generated@@138))
)))) ($generated@@48 $generated@@16 ($generated@@20 ($generated@@136 $generated@@137)) $generated $generated@@138))
 :pattern ( ($generated@@48 $generated@@16 ($generated@@20 ($generated@@136 $generated@@137)) $generated $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> ($generated@@48 $generated@@39 $generated@@140 $generated@@32 $generated@@141) ($generated@@48 $generated@@39 $generated@@140 $generated@@45 $generated@@141))
 :pattern ( ($generated@@48 $generated@@39 $generated@@140 $generated@@32 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (or (not (= $generated@@142 $generated@@144)) (not true)) (=> (and ($generated@@95 $generated@@142 $generated@@143) ($generated@@95 $generated@@143 $generated@@144)) ($generated@@95 $generated@@142 $generated@@144)))
 :pattern ( ($generated@@95 $generated@@142 $generated@@143) ($generated@@95 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@60 $generated@@145 $generated) (and (= ($generated@@106 $generated@@16 ($generated@@64 $generated@@16 $generated@@145)) $generated@@145) ($generated@@34 $generated@@16 ($generated@@64 $generated@@16 $generated@@145) $generated)))
 :pattern ( ($generated@@60 $generated@@145 $generated))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@60 ($generated@@106 $generated@@148 $generated@@146) $generated@@147) ($generated@@34 $generated@@148 $generated@@146 $generated@@147))
 :pattern ( ($generated@@60 ($generated@@106 $generated@@148 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 Int) ) (! (= ($generated@@104 ($generated@@59 $generated@@149 $generated@@150)) $generated@@9)
 :pattern ( ($generated@@59 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 Int) ) (! (= ($generated@@151 ($generated@@59 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@59 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 Int) ) (! (= ($generated@@136 ($generated@@59 $generated@@154 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@59 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! ($generated@@34 $generated@@39 $generated@@156 $generated@@50)
 :pattern ( ($generated@@34 $generated@@39 $generated@@156 $generated@@50))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@36 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@36 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@64 $generated@@160 ($generated@@106 $generated@@160 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@106 $generated@@160 $generated@@159))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 Int) ) (! (< ($generated@@161 $generated@@163) ($generated@@162 ($generated@@59 $generated@@163 $generated@@164)))
 :pattern ( ($generated@@59 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@44 $generated@@167) (and ($generated@@33 $generated@@165) ($generated@@48 $generated@@35 $generated@@165 ($generated@@36 $generated@@166) $generated@@167))) ($generated@@43 ($generated@@151 $generated@@165) $generated@@166 $generated@@167))
 :pattern ( ($generated@@43 ($generated@@151 $generated@@165) $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@168 $generated@@171 $generated@@172 $generated@@173 ($generated@@170 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@176 $generated@@177) $generated@@174)
 :weight 0
)) (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@183 $generated@@185) (= ($generated@@168 $generated@@178 $generated@@179 $generated@@180 ($generated@@170 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@168 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@168 $generated@@187 $generated@@188 $generated@@189 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@168 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 Bool) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@19 ($generated@@168 $generated@@39 $generated@@66 $generated@@15 ($generated@@169 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))  (=> (and (or (not (= $generated@@200 $generated@@196)) (not true)) ($generated@@19 ($generated@@64 $generated@@15 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@197 $generated@@200) $generated@@198)))) $generated@@199))
 :pattern ( ($generated@@168 $generated@@39 $generated@@66 $generated@@15 ($generated@@169 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ) (! (= ($generated@@161 ($generated@@106 $generated@@35 $generated@@202)) ($generated@@162 $generated@@202))
 :pattern ( ($generated@@161 ($generated@@106 $generated@@35 $generated@@202)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> ($generated@@60 $generated@@204 ($generated@@36 $generated@@203)) (and (= ($generated@@106 $generated@@35 ($generated@@64 $generated@@35 $generated@@204)) $generated@@204) ($generated@@34 $generated@@35 ($generated@@64 $generated@@35 $generated@@204) ($generated@@36 $generated@@203))))
 :pattern ( ($generated@@60 $generated@@204 ($generated@@36 $generated@@203)))
)))
(assert (forall (($generated@@205 T@U) ) (!  (=> ($generated@@34 $generated@@39 $generated@@205 $generated@@32) ($generated@@34 $generated@@39 $generated@@205 $generated@@45))
 :pattern ( ($generated@@34 $generated@@39 $generated@@205 $generated@@32))
)))
(assert (forall (($generated@@206 T@U) ) (!  (=> ($generated@@60 $generated@@206 $generated@@32) ($generated@@60 $generated@@206 $generated@@45))
 :pattern ( ($generated@@60 $generated@@206 $generated@@32))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@44 ($generated@@69 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@207 $generated@@208 ($generated@@69 $generated@@66 $generated@@67 ($generated@@65 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@207 $generated@@208) $generated@@209 $generated@@210))) ($generated@@95 $generated@@207 ($generated@@69 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@207 $generated@@208 ($generated@@69 $generated@@66 $generated@@67 ($generated@@65 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@207 $generated@@208) $generated@@209 $generated@@210))))
 :pattern ( ($generated@@69 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@207 $generated@@208 ($generated@@69 $generated@@66 $generated@@67 ($generated@@65 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@207 $generated@@208) $generated@@209 $generated@@210)))
)))
(assert (= ($generated@@30 $generated@@50) $generated@@2))
(assert (= ($generated@@125 $generated@@50) $generated@@10))
(assert (= ($generated@@30 $generated@@49) $generated@@3))
(assert (= ($generated@@125 $generated@@49) $generated@@10))
(assert (= ($generated@@30 $generated@@56) $generated@@4))
(assert (= ($generated@@125 $generated@@56) $generated@@11))
(assert (= ($generated@@30 $generated@@32) $generated@@5))
(assert (= ($generated@@125 $generated@@32) $generated@@11))
(assert (= ($generated@@30 $generated@@53) $generated@@7))
(assert (= ($generated@@125 $generated@@53) $generated@@13))
(assert (= ($generated@@30 $generated@@45) $generated@@8))
(assert (= ($generated@@125 $generated@@45) $generated@@13))
(assert (forall (($generated@@211 T@U) ) (! (= ($generated@@34 $generated@@39 $generated@@211 $generated@@45)  (or (= $generated@@211 $generated@@40) ($generated@@31 ($generated@@41 $generated@@211))))
 :pattern ( ($generated@@34 $generated@@39 $generated@@211 $generated@@45))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Int) ($generated@@215 T@U) ) (!  (=> ($generated@@44 $generated@@215) (= ($generated@@48 $generated@@35 ($generated@@59 $generated@@213 $generated@@214) ($generated@@36 $generated@@212) $generated@@215)  (and ($generated@@43 $generated@@213 $generated@@212 $generated@@215) ($generated@@48 $generated@@16 ($generated@@20 $generated@@214) $generated $generated@@215))))
 :pattern ( ($generated@@48 $generated@@35 ($generated@@59 $generated@@213 $generated@@214) ($generated@@36 $generated@@212) $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 Int) ) (! (= ($generated@@59 ($generated@@101 $generated@@67 $generated@@216) ($generated@@99 $generated@@217)) ($generated@@101 $generated@@35 ($generated@@59 $generated@@216 $generated@@217)))
 :pattern ( ($generated@@59 ($generated@@101 $generated@@67 $generated@@216) ($generated@@99 $generated@@217)))
)))
(assert (forall (($generated@@218 Int) ) (! (= ($generated@@106 $generated@@16 ($generated@@20 ($generated@@99 $generated@@218))) ($generated@@101 $generated@@67 ($generated@@106 $generated@@16 ($generated@@20 $generated@@218))))
 :pattern ( ($generated@@106 $generated@@16 ($generated@@20 ($generated@@99 $generated@@218))))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@T) ) (! (= ($generated@@106 $generated@@220 ($generated@@101 $generated@@220 $generated@@219)) ($generated@@101 $generated@@67 ($generated@@106 $generated@@220 $generated@@219)))
 :pattern ( ($generated@@106 $generated@@220 ($generated@@101 $generated@@220 $generated@@219)))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! ($generated@@48 $generated@@16 $generated@@222 $generated $generated@@221)
 :pattern ( ($generated@@48 $generated@@16 $generated@@222 $generated $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ) (! ($generated@@34 $generated@@16 $generated@@223 $generated)
 :pattern ( ($generated@@34 $generated@@16 $generated@@223 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 (T@U) Bool)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () Bool)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () Bool)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@238  (=> (= $generated@@224 ($generated@@169 $generated@@40 $generated@@225 $generated@@1 false)) (=> (and (or (not (= $generated@@226 $generated@@40)) (not true)) ($generated@@34 $generated@@39 $generated@@226 $generated@@32)) (=> (and (and (not ($generated@@19 ($generated@@64 $generated@@15 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@225 $generated@@226) $generated@@1)))) (= $generated@@227 ($generated@@69 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@225 $generated@@226 ($generated@@69 $generated@@66 $generated@@67 ($generated@@65 $generated@@39 ($generated@@68 $generated@@66 $generated@@67) $generated@@225 $generated@@226) $generated@@1 ($generated@@106 $generated@@15 ($generated@@18 true)))))) (and ($generated@@44 $generated@@227) ($generated@@228 $generated@@227))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (=> (and (= $generated@@229 ($generated@@59 ($generated@@106 $generated@@39 $generated@@226) ($generated@@99 10))) (=> $generated@@230 (and ($generated@@34 $generated@@35 $generated@@231 ($generated@@36 $generated@@49)) ($generated@@48 $generated@@35 $generated@@231 ($generated@@36 $generated@@49) $generated@@227)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true))))))))))
(let (($generated@@239  (=> (and ($generated@@44 $generated@@225) ($generated@@228 $generated@@225)) (=> (and (and (and (=> $generated@@232 (and ($generated@@34 $generated@@39 $generated@@233 $generated@@56) ($generated@@48 $generated@@39 $generated@@233 $generated@@56 $generated@@225))) true) (and (=> $generated@@234 (and ($generated@@34 $generated@@35 $generated@@235 ($generated@@36 $generated@@56)) ($generated@@48 $generated@@35 $generated@@235 ($generated@@36 $generated@@56) $generated@@225))) true)) (and (and (=> $generated@@230 (and ($generated@@34 $generated@@35 $generated@@236 ($generated@@36 $generated@@49)) ($generated@@48 $generated@@35 $generated@@236 ($generated@@36 $generated@@49) $generated@@225))) true) (and (= 1 $generated@@237) (= (ControlFlow 0 6) 2)))) $generated@@238))))
$generated@@239)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
