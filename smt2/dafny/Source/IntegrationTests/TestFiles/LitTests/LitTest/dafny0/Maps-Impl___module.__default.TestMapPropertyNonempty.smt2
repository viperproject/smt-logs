(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 (Int) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 ((_ BitVec 3)) T@U)
(declare-fun $generated@@30 (T@U) (_ BitVec 3))
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) Int)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T T@T) T@T)
(declare-fun $generated@@69 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@103 (T@T T@U) T@U)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@121 (T@U T@U) Bool)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@128 (T@U) Int)
(declare-fun $generated@@129 () T@U)
(declare-fun $generated@@131 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Int)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U) Int)
(declare-fun $generated@@183 (T@U) Int)
(declare-fun $generated@@195 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@10 $generated@@26 ($generated@@25 0) $generated@@27)
 :pattern ( ($generated@@24 $generated@@10 $generated@@26 ($generated@@25 0) $generated@@27))
)))
(assert  (and (and (= ($generated@@8 $generated@@28) 3) (forall (($generated@@31 (_ BitVec 3)) ) (! (= ($generated@@30 ($generated@@29 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@29 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@29 ($generated@@30 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@30 $generated@@32))
))))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! ($generated@@24 $generated@@28 $generated@@33 ($generated@@25 3) $generated@@34)
 :pattern ( ($generated@@24 $generated@@28 $generated@@33 ($generated@@25 3) $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ) (! ($generated@@35 $generated@@10 $generated@@36 ($generated@@25 0))
 :pattern ( ($generated@@35 $generated@@10 $generated@@36 ($generated@@25 0)))
)))
(assert (forall (($generated@@37 T@U) ) (! ($generated@@35 $generated@@28 $generated@@37 ($generated@@25 3))
 :pattern ( ($generated@@35 $generated@@28 $generated@@37 ($generated@@25 3)))
)))
(assert (= ($generated@@8 $generated@@39) 4))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@35 $generated@@39 $generated@@43 ($generated@@40 $generated@@41 $generated@@42)) ($generated@@38 $generated@@43))
 :pattern ( ($generated@@38 $generated@@43) ($generated@@35 $generated@@39 $generated@@43 ($generated@@40 $generated@@41 $generated@@42)))
)))
(assert (forall (($generated@@46 T@U) ) (!  (not ($generated@@44 $generated@@45 $generated@@46))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46))
)))
(assert (= ($generated@@8 $generated@@47) 5))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@35 $generated@@47 $generated@@51 $generated@@48)  (or (= $generated@@51 $generated@@49) (= ($generated@@50 $generated@@51) $generated@@48)))
 :pattern ( ($generated@@35 $generated@@47 $generated@@51 $generated@@48))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@24 $generated@@47 $generated@@53 $generated@@52 $generated@@54) ($generated@@24 $generated@@47 $generated@@53 $generated@@48 $generated@@54))
 :pattern ( ($generated@@24 $generated@@47 $generated@@53 $generated@@52 $generated@@54))
 :pattern ( ($generated@@24 $generated@@47 $generated@@53 $generated@@48 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@35 $generated@@39 ($generated@@55 $generated@@59 $generated@@60) ($generated@@40 $generated@@57 $generated@@58))  (and ($generated@@56 $generated@@59 $generated@@57) ($generated@@56 $generated@@60 $generated@@58)))
 :pattern ( ($generated@@35 $generated@@39 ($generated@@55 $generated@@59 $generated@@60) ($generated@@40 $generated@@57 $generated@@58)))
)))
(assert (forall (($generated@@62 T@U) ) (!  (and (= (= ($generated@@61 $generated@@62) 0) (= $generated@@62 $generated@@45)) (=> (or (not (= ($generated@@61 $generated@@62) 0)) (not true)) (exists (($generated@@63 T@U) ) (! ($generated@@44 $generated@@62 $generated@@63)
 :pattern ( ($generated@@44 $generated@@62 $generated@@63))
))))
 :pattern ( ($generated@@61 $generated@@62))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@65 $generated@@72 $generated@@73 ($generated@@69 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@76) $generated@@74)
 :weight 0
)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@65 $generated@@77 $generated@@78 ($generated@@69 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@65 $generated@@77 $generated@@78 $generated@@80 $generated@@82)))
 :weight 0
))) (= ($generated@@8 $generated@@66) 6)) (= ($generated@@8 $generated@@67) 7)) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (= ($generated@@8 ($generated@@68 $generated@@83 $generated@@84)) 8))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@70 ($generated@@68 $generated@@85 $generated@@86)) $generated@@85)
 :pattern ( ($generated@@68 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@71 ($generated@@68 $generated@@87 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@68 $generated@@87 $generated@@88))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@24 $generated@@47 $generated@@89 $generated@@48 $generated@@90)  (or (= $generated@@89 $generated@@49) ($generated@@13 ($generated@@64 $generated@@9 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@47 ($generated@@68 $generated@@66 $generated@@67) $generated@@90 $generated@@89) $generated@@1)))))
 :pattern ( ($generated@@24 $generated@@47 $generated@@89 $generated@@48 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 $generated@@92) $generated@@92)
 :pattern ( ($generated@@91 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@94 $generated@@100) (= ($generated@@24 $generated@@39 ($generated@@55 $generated@@98 $generated@@99) ($generated@@40 $generated@@96 $generated@@97) $generated@@100)  (and ($generated@@95 $generated@@98 $generated@@96 $generated@@100) ($generated@@95 $generated@@99 $generated@@97 $generated@@100))))
 :pattern ( ($generated@@24 $generated@@39 ($generated@@55 $generated@@98 $generated@@99) ($generated@@40 $generated@@96 $generated@@97) $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@38 $generated@@102) (= ($generated@@101 $generated@@102) $generated@@2))
 :pattern ( ($generated@@38 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@103 $generated@@105 ($generated@@64 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@64 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@38 $generated@@106) (exists (($generated@@107 T@U) ($generated@@108 T@U) ) (= $generated@@106 ($generated@@55 $generated@@107 $generated@@108))))
 :pattern ( ($generated@@38 $generated@@106))
)))
(assert (= ($generated@@8 $generated@@109) 9))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@35 $generated@@109 $generated@@111 ($generated@@110 $generated@@112)) (forall (($generated@@113 T@U) ) (!  (=> ($generated@@44 $generated@@111 $generated@@113) ($generated@@56 $generated@@113 $generated@@112))
 :pattern ( ($generated@@44 $generated@@111 $generated@@113))
)))
 :pattern ( ($generated@@35 $generated@@109 $generated@@111 ($generated@@110 $generated@@112)))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@95 ($generated@@103 $generated@@117 $generated@@114) $generated@@115 $generated@@116) ($generated@@24 $generated@@117 $generated@@114 $generated@@115 $generated@@116))
 :pattern ( ($generated@@95 ($generated@@103 $generated@@117 $generated@@114) $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@56 $generated@@118 $generated@@52) (and (= ($generated@@103 $generated@@47 ($generated@@64 $generated@@47 $generated@@118)) $generated@@118) ($generated@@35 $generated@@47 ($generated@@64 $generated@@47 $generated@@118) $generated@@52)))
 :pattern ( ($generated@@56 $generated@@118 $generated@@52))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@56 $generated@@119 $generated@@48) (and (= ($generated@@103 $generated@@47 ($generated@@64 $generated@@47 $generated@@119)) $generated@@119) ($generated@@35 $generated@@47 ($generated@@64 $generated@@47 $generated@@119) $generated@@48)))
 :pattern ( ($generated@@56 $generated@@119 $generated@@48))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@35 $generated@@47 $generated@@120 $generated@@52)  (and ($generated@@35 $generated@@47 $generated@@120 $generated@@48) (or (not (= $generated@@120 $generated@@49)) (not true))))
 :pattern ( ($generated@@35 $generated@@47 $generated@@120 $generated@@52))
 :pattern ( ($generated@@35 $generated@@47 $generated@@120 $generated@@48))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@121 $generated@@124 $generated@@125)  (and (forall (($generated@@126 T@U) ) (= ($generated@@44 ($generated@@122 $generated@@124) $generated@@126) ($generated@@44 ($generated@@122 $generated@@125) $generated@@126))) (forall (($generated@@127 T@U) )  (=> ($generated@@44 ($generated@@122 $generated@@124) $generated@@127) (= ($generated@@65 $generated@@67 $generated@@67 ($generated@@123 $generated@@124) $generated@@127) ($generated@@65 $generated@@67 $generated@@67 ($generated@@123 $generated@@125) $generated@@127))))))
 :pattern ( ($generated@@121 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@130 T@U) ) (! (= (= ($generated@@128 $generated@@130) 0) (= $generated@@130 $generated@@129))
 :pattern ( ($generated@@128 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@131 $generated@@132 $generated@@133) (= $generated@@132 $generated@@133))
 :pattern ( ($generated@@131 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@121 $generated@@134 $generated@@135) (= $generated@@134 $generated@@135))
 :pattern ( ($generated@@121 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@56 ($generated@@103 $generated@@138 $generated@@136) $generated@@137) ($generated@@35 $generated@@138 $generated@@136 $generated@@137))
 :pattern ( ($generated@@56 ($generated@@103 $generated@@138 $generated@@136) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (! (<= 0 ($generated@@61 $generated@@139))
 :pattern ( ($generated@@61 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (<= 0 ($generated@@128 $generated@@140))
 :pattern ( ($generated@@128 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@24 $generated@@109 $generated@@141 ($generated@@110 $generated@@142) $generated@@143) (forall (($generated@@144 T@U) ) (!  (=> ($generated@@44 $generated@@141 $generated@@144) ($generated@@95 $generated@@144 $generated@@142 $generated@@143))
 :pattern ( ($generated@@44 $generated@@141 $generated@@144))
)))
 :pattern ( ($generated@@24 $generated@@109 $generated@@141 ($generated@@110 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@146 ($generated@@145 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@149 ($generated@@145 $generated@@150 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@145 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@152 ($generated@@145 $generated@@153 $generated@@154)) $generated@@0)
 :pattern ( ($generated@@145 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@101 ($generated@@55 $generated@@155 $generated@@156)) $generated@@2)
 :pattern ( ($generated@@55 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@157 ($generated@@40 $generated@@158 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@40 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@160 ($generated@@40 $generated@@161 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@40 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@163 ($generated@@55 $generated@@164 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@55 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@166 ($generated@@55 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@55 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 Int) ) (! (= ($generated@@169 ($generated@@25 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@25 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@171 ($generated@@110 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@110 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@152 ($generated@@110 $generated@@173)) $generated)
 :pattern ( ($generated@@110 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@64 $generated@@175 ($generated@@103 $generated@@175 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@103 $generated@@175 $generated@@174))
)))
(assert (= ($generated@@8 $generated@@176) 10))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@24 $generated@@176 $generated@@177 ($generated@@145 $generated@@178 $generated@@179) $generated@@180) (forall (($generated@@181 T@U) ) (!  (=> ($generated@@44 ($generated@@122 $generated@@177) $generated@@181) (and ($generated@@95 ($generated@@65 $generated@@67 $generated@@67 ($generated@@123 $generated@@177) $generated@@181) $generated@@179 $generated@@180) ($generated@@95 $generated@@181 $generated@@178 $generated@@180)))
 :pattern ( ($generated@@65 $generated@@67 $generated@@67 ($generated@@123 $generated@@177) $generated@@181))
 :pattern ( ($generated@@44 ($generated@@122 $generated@@177) $generated@@181))
)))
 :pattern ( ($generated@@24 $generated@@176 $generated@@177 ($generated@@145 $generated@@178 $generated@@179) $generated@@180))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (< ($generated@@182 $generated@@184) ($generated@@183 ($generated@@55 $generated@@184 $generated@@185)))
 :pattern ( ($generated@@55 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (< ($generated@@182 $generated@@187) ($generated@@183 ($generated@@55 $generated@@186 $generated@@187)))
 :pattern ( ($generated@@55 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ) (!  (not ($generated@@44 ($generated@@122 $generated@@129) $generated@@188))
 :pattern ( ($generated@@44 ($generated@@122 $generated@@129) $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@56 $generated@@189 ($generated@@145 $generated@@190 $generated@@191)) (and (= ($generated@@103 $generated@@176 ($generated@@64 $generated@@176 $generated@@189)) $generated@@189) ($generated@@35 $generated@@176 ($generated@@64 $generated@@176 $generated@@189) ($generated@@145 $generated@@190 $generated@@191))))
 :pattern ( ($generated@@56 $generated@@189 ($generated@@145 $generated@@190 $generated@@191)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> ($generated@@56 $generated@@194 ($generated@@40 $generated@@192 $generated@@193)) (and (= ($generated@@103 $generated@@39 ($generated@@64 $generated@@39 $generated@@194)) $generated@@194) ($generated@@35 $generated@@39 ($generated@@64 $generated@@39 $generated@@194) ($generated@@40 $generated@@192 $generated@@193))))
 :pattern ( ($generated@@56 $generated@@194 ($generated@@40 $generated@@192 $generated@@193)))
)))
(assert  (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@T) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@195 $generated@@198 $generated@@199 $generated@@200 ($generated@@197 $generated@@198 $generated@@199 $generated@@200 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@203 $generated@@204) $generated@@201)
 :weight 0
)) (and (forall (($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@195 $generated@@205 $generated@@206 $generated@@207 ($generated@@197 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@195 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ($generated@@216 T@T) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@195 $generated@@214 $generated@@215 $generated@@216 ($generated@@197 $generated@@214 $generated@@215 $generated@@216 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@195 $generated@@214 $generated@@215 $generated@@216 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@13 ($generated@@195 $generated@@47 $generated@@66 $generated@@9 ($generated@@196 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (or (not (= $generated@@227 $generated@@223)) (not true)) ($generated@@13 ($generated@@64 $generated@@9 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@47 ($generated@@68 $generated@@66 $generated@@67) $generated@@224 $generated@@227) $generated@@225)))) $generated@@226))
 :pattern ( ($generated@@195 $generated@@47 $generated@@66 $generated@@9 ($generated@@196 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (and (= ($generated@@152 ($generated@@40 $generated@@230 $generated@@231)) $generated@@3) (= ($generated@@229 ($generated@@40 $generated@@230 $generated@@231)) $generated@@6))
 :pattern ( ($generated@@40 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ) (!  (or (= $generated@@232 $generated@@129) (exists (($generated@@233 T@U) ) ($generated@@44 ($generated@@122 $generated@@232) $generated@@233)))
 :pattern ( ($generated@@122 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ) (!  (or (= $generated@@235 $generated@@129) (exists (($generated@@236 T@U) ) ($generated@@44 ($generated@@234 $generated@@235) $generated@@236)))
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= ($generated@@44 ($generated@@237 $generated@@238) $generated@@239)  (and ($generated@@44 ($generated@@122 $generated@@238) ($generated@@163 ($generated@@64 $generated@@39 $generated@@239))) (= ($generated@@65 $generated@@67 $generated@@67 ($generated@@123 $generated@@238) ($generated@@163 ($generated@@64 $generated@@39 $generated@@239))) ($generated@@166 ($generated@@64 $generated@@39 $generated@@239)))))
 :pattern ( ($generated@@44 ($generated@@237 $generated@@238) $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= ($generated@@44 ($generated@@234 $generated@@240) $generated@@241) (exists (($generated@@242 T@U) ) (!  (and ($generated@@44 ($generated@@122 $generated@@240) $generated@@242) (= $generated@@241 ($generated@@65 $generated@@67 $generated@@67 ($generated@@123 $generated@@240) $generated@@242)))
 :pattern ( ($generated@@44 ($generated@@122 $generated@@240) $generated@@242))
 :pattern ( ($generated@@65 $generated@@67 $generated@@67 ($generated@@123 $generated@@240) $generated@@242))
)))
 :pattern ( ($generated@@44 ($generated@@234 $generated@@240) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= ($generated@@182 ($generated@@103 $generated@@39 $generated@@243)) ($generated@@183 $generated@@243))
 :pattern ( ($generated@@182 ($generated@@103 $generated@@39 $generated@@243)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@61 ($generated@@122 $generated@@244)) ($generated@@128 $generated@@244))
 :pattern ( ($generated@@61 ($generated@@122 $generated@@244)))
 :pattern ( ($generated@@128 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@61 ($generated@@237 $generated@@245)) ($generated@@128 $generated@@245))
 :pattern ( ($generated@@61 ($generated@@237 $generated@@245)))
 :pattern ( ($generated@@128 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (! (<= ($generated@@61 ($generated@@234 $generated@@246)) ($generated@@128 $generated@@246))
 :pattern ( ($generated@@61 ($generated@@234 $generated@@246)))
 :pattern ( ($generated@@128 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> ($generated@@56 $generated@@247 ($generated@@25 0)) (and (= ($generated@@103 $generated@@10 ($generated@@64 $generated@@10 $generated@@247)) $generated@@247) ($generated@@35 $generated@@10 ($generated@@64 $generated@@10 $generated@@247) ($generated@@25 0))))
 :pattern ( ($generated@@56 $generated@@247 ($generated@@25 0)))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> ($generated@@56 $generated@@248 ($generated@@110 $generated@@249)) (and (= ($generated@@103 $generated@@109 ($generated@@64 $generated@@109 $generated@@248)) $generated@@248) ($generated@@35 $generated@@109 ($generated@@64 $generated@@109 $generated@@248) ($generated@@110 $generated@@249))))
 :pattern ( ($generated@@56 $generated@@248 ($generated@@110 $generated@@249)))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> ($generated@@56 $generated@@250 ($generated@@25 3)) (and (= ($generated@@103 $generated@@28 ($generated@@64 $generated@@28 $generated@@250)) $generated@@250) ($generated@@35 $generated@@28 ($generated@@64 $generated@@28 $generated@@250) ($generated@@25 3))))
 :pattern ( ($generated@@56 $generated@@250 ($generated@@25 3)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (= ($generated@@35 $generated@@176 $generated@@251 ($generated@@145 $generated@@252 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> ($generated@@44 ($generated@@122 $generated@@251) $generated@@254) (and ($generated@@56 ($generated@@65 $generated@@67 $generated@@67 ($generated@@123 $generated@@251) $generated@@254) $generated@@253) ($generated@@56 $generated@@254 $generated@@252)))
 :pattern ( ($generated@@65 $generated@@67 $generated@@67 ($generated@@123 $generated@@251) $generated@@254))
 :pattern ( ($generated@@44 ($generated@@122 $generated@@251) $generated@@254))
)))
 :pattern ( ($generated@@35 $generated@@176 $generated@@251 ($generated@@145 $generated@@252 $generated@@253)))
)))
(assert (= ($generated@@152 $generated@@52) $generated@@4))
(assert (= ($generated@@229 $generated@@52) $generated@@7))
(assert (= ($generated@@152 $generated@@48) $generated@@5))
(assert (= ($generated@@229 $generated@@48) $generated@@7))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (= ($generated@@131 $generated@@255 $generated@@256) (forall (($generated@@257 T@U) ) (! (= ($generated@@44 $generated@@255 $generated@@257) ($generated@@44 $generated@@256 $generated@@257))
 :pattern ( ($generated@@44 $generated@@255 $generated@@257))
 :pattern ( ($generated@@44 $generated@@256 $generated@@257))
)))
 :pattern ( ($generated@@131 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and ($generated@@94 $generated@@260) (and ($generated@@38 $generated@@258) (exists (($generated@@261 T@U) ) (! ($generated@@24 $generated@@39 $generated@@258 ($generated@@40 $generated@@259 $generated@@261) $generated@@260)
 :pattern ( ($generated@@24 $generated@@39 $generated@@258 ($generated@@40 $generated@@259 $generated@@261) $generated@@260))
)))) ($generated@@95 ($generated@@163 $generated@@258) $generated@@259 $generated@@260))
 :pattern ( ($generated@@95 ($generated@@163 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and ($generated@@94 $generated@@264) (and ($generated@@38 $generated@@262) (exists (($generated@@265 T@U) ) (! ($generated@@24 $generated@@39 $generated@@262 ($generated@@40 $generated@@265 $generated@@263) $generated@@264)
 :pattern ( ($generated@@24 $generated@@39 $generated@@262 ($generated@@40 $generated@@265 $generated@@263) $generated@@264))
)))) ($generated@@95 ($generated@@166 $generated@@262) $generated@@263 $generated@@264))
 :pattern ( ($generated@@95 ($generated@@166 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= ($generated@@55 ($generated@@91 $generated@@67 $generated@@266) ($generated@@91 $generated@@67 $generated@@267)) ($generated@@91 $generated@@39 ($generated@@55 $generated@@266 $generated@@267)))
 :pattern ( ($generated@@55 ($generated@@91 $generated@@67 $generated@@266) ($generated@@91 $generated@@67 $generated@@267)))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@T) ) (! (= ($generated@@103 $generated@@269 ($generated@@91 $generated@@269 $generated@@268)) ($generated@@91 $generated@@67 ($generated@@103 $generated@@269 $generated@@268)))
 :pattern ( ($generated@@103 $generated@@269 ($generated@@91 $generated@@269 $generated@@268)))
)))
(assert (forall (($generated@@270 T@U) ) (!  (or (= $generated@@270 $generated@@129) (exists (($generated@@271 T@U) ($generated@@272 T@U) ) ($generated@@44 ($generated@@237 $generated@@270) ($generated@@103 $generated@@39 ($generated@@55 $generated@@271 $generated@@272)))))
 :pattern ( ($generated@@237 $generated@@270))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> ($generated@@35 $generated@@176 $generated@@273 ($generated@@145 $generated@@274 $generated@@275)) (and (and ($generated@@35 $generated@@109 ($generated@@122 $generated@@273) ($generated@@110 $generated@@274)) ($generated@@35 $generated@@109 ($generated@@234 $generated@@273) ($generated@@110 $generated@@275))) ($generated@@35 $generated@@109 ($generated@@237 $generated@@273) ($generated@@110 ($generated@@40 $generated@@274 $generated@@275)))))
 :pattern ( ($generated@@35 $generated@@176 $generated@@273 ($generated@@145 $generated@@274 $generated@@275)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@280 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@281  (=> (and (and (and (and (not ($generated@@13 ($generated@@91 $generated@@9 ($generated@@12 true)))) (not ($generated@@13 ($generated@@91 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@91 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@91 $generated@@9 ($generated@@12 true))))) (= (ControlFlow 0 10) (- 0 9))) false)))
(let (($generated@@282  (=> (= (ControlFlow 0 8) (- 0 7)) (not ($generated@@131 ($generated@@237 $generated@@276) $generated@@45)))))
(let (($generated@@283  (=> (= (ControlFlow 0 6) (- 0 5)) (not ($generated@@131 ($generated@@234 $generated@@276) $generated@@45)))))
(let (($generated@@284  (=> (= (ControlFlow 0 4) (- 0 3)) (not ($generated@@131 ($generated@@122 $generated@@276) $generated@@45)))))
(let (($generated@@285  (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= ($generated@@128 $generated@@276) 0)) (not true)))))
(let (($generated@@286  (=> (= $generated@@277 ($generated@@196 $generated@@49 $generated@@278 $generated@@1 false)) (and (and (and (and (=> (= (ControlFlow 0 11) 2) $generated@@285) (=> (= (ControlFlow 0 11) 4) $generated@@284)) (=> (= (ControlFlow 0 11) 6) $generated@@283)) (=> (= (ControlFlow 0 11) 8) $generated@@282)) (=> (= (ControlFlow 0 11) 10) $generated@@281)))))
(let (($generated@@287  (=> (and ($generated@@94 $generated@@278) ($generated@@279 $generated@@278)) (=> (and (and (and ($generated@@35 $generated@@176 $generated@@276 ($generated@@145 $generated@@52 ($generated@@25 3))) ($generated@@24 $generated@@176 $generated@@276 ($generated@@145 $generated@@52 ($generated@@25 3)) $generated@@278)) (= 1 $generated@@280)) (and (not ($generated@@121 $generated@@276 $generated@@129)) (= (ControlFlow 0 12) 11))) $generated@@286))))
$generated@@287))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
