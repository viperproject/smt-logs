(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@T T@T) T@T)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@63 (Int) Int)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@74 (Int) T@U)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@99 (T@U) Int)
(declare-fun $generated@@102 (T@U) Int)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (= ($generated@@8 $generated@@27) 3))
(assert (forall (($generated@@29 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@29 $generated@@28) ($generated@@25 $generated@@29))
 :pattern ( ($generated@@25 $generated@@29) ($generated@@26 $generated@@27 $generated@@29 $generated@@28))
)))
(assert (forall (($generated@@32 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@32 $generated@@31) ($generated@@30 $generated@@32))
 :pattern ( ($generated@@30 $generated@@32) ($generated@@26 $generated@@27 $generated@@32 $generated@@31))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@34 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@34 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@34 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@8 $generated@@35) 4)) (= ($generated@@8 $generated@@36) 5)) (= ($generated@@8 $generated@@37) 6)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@8 ($generated@@38 $generated@@54 $generated@@55)) 7))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@38 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@38 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@38 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@38 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@33 $generated@@60 $generated@@61) (forall (($generated@@62 T@U) ) (!  (=> ($generated@@13 ($generated@@39 $generated@@9 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@60 $generated@@62) $generated@@1))) ($generated@@13 ($generated@@39 $generated@@9 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@61 $generated@@62) $generated@@1))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@61 $generated@@62) $generated@@1))
)))
 :pattern ( ($generated@@33 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@64 Int) ) (! (= ($generated@@63 $generated@@64) $generated@@64)
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 $generated@@66) $generated@@66)
 :pattern ( ($generated@@65 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@25 $generated@@69) (= ($generated@@68 $generated@@69) $generated@@4))
 :pattern ( ($generated@@25 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@30 $generated@@70) (= ($generated@@68 $generated@@70) $generated@@5))
 :pattern ( ($generated@@30 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 ($generated@@39 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@39 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@25 $generated@@75) (exists (($generated@@76 Int) ) (= $generated@@75 ($generated@@74 $generated@@76))))
 :pattern ( ($generated@@25 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@30 $generated@@78) (exists (($generated@@79 Int) ) (= $generated@@78 ($generated@@77 $generated@@79))))
 :pattern ( ($generated@@30 $generated@@78))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@80 ($generated@@71 $generated@@85 $generated@@82) $generated@@83 $generated@@84) ($generated@@81 $generated@@85 $generated@@82 $generated@@83 $generated@@84))
 :pattern ( ($generated@@80 ($generated@@71 $generated@@85 $generated@@82) $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@33 $generated@@86 $generated@@87) (=> ($generated@@80 $generated@@88 $generated@@89 $generated@@86) ($generated@@80 $generated@@88 $generated@@89 $generated@@87)))
 :pattern ( ($generated@@33 $generated@@86 $generated@@87) ($generated@@80 $generated@@88 $generated@@89 $generated@@86))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (!  (=> ($generated@@33 $generated@@90 $generated@@91) (=> ($generated@@81 $generated@@94 $generated@@92 $generated@@93 $generated@@90) ($generated@@81 $generated@@94 $generated@@92 $generated@@93 $generated@@91)))
 :pattern ( ($generated@@33 $generated@@90 $generated@@91) ($generated@@81 $generated@@94 $generated@@92 $generated@@93 $generated@@90))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or (not (= $generated@@95 $generated@@97)) (not true)) (=> (and ($generated@@33 $generated@@95 $generated@@96) ($generated@@33 $generated@@96 $generated@@97)) ($generated@@33 $generated@@95 $generated@@97)))
 :pattern ( ($generated@@33 $generated@@95 $generated@@96) ($generated@@33 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@98 Int) ) (! (= ($generated@@68 ($generated@@74 $generated@@98)) $generated@@4)
 :pattern ( ($generated@@74 $generated@@98))
)))
(assert (forall (($generated@@100 Int) ) (! (= ($generated@@99 ($generated@@74 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@74 $generated@@100))
)))
(assert (forall (($generated@@101 Int) ) (! (= ($generated@@68 ($generated@@77 $generated@@101)) $generated@@5)
 :pattern ( ($generated@@77 $generated@@101))
)))
(assert (forall (($generated@@103 Int) ) (! (= ($generated@@102 ($generated@@77 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@77 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@39 $generated@@105 ($generated@@71 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@71 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@106 Int) ) (! (= ($generated@@26 $generated@@27 ($generated@@74 $generated@@106) $generated@@28) ($generated@@26 $generated@@10 ($generated@@14 $generated@@106) $generated))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@74 $generated@@106) $generated@@28))
)))
(assert (forall (($generated@@107 Int) ) (! (= ($generated@@26 $generated@@27 ($generated@@77 $generated@@107) $generated@@31) ($generated@@26 $generated@@10 ($generated@@14 $generated@@107) $generated))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@77 $generated@@107) $generated@@31))
)))
(assert  (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@108 $generated@@111 $generated@@112 $generated@@113 ($generated@@110 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@108 $generated@@118 $generated@@119 $generated@@120 ($generated@@110 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@108 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@108 $generated@@127 $generated@@128 $generated@@129 ($generated@@110 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@108 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 Bool) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@13 ($generated@@108 $generated@@37 $generated@@35 $generated@@9 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))  (=> (and (or (not (= $generated@@140 $generated@@136)) (not true)) ($generated@@13 ($generated@@39 $generated@@9 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@137 $generated@@140) $generated@@138)))) $generated@@139))
 :pattern ( ($generated@@108 $generated@@37 $generated@@35 $generated@@9 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and ($generated@@142 $generated@@144) (and ($generated@@25 $generated@@143) ($generated@@81 $generated@@27 $generated@@143 $generated@@28 $generated@@144))) ($generated@@81 $generated@@10 ($generated@@14 ($generated@@99 $generated@@143)) $generated $generated@@144))
 :pattern ( ($generated@@81 $generated@@10 ($generated@@14 ($generated@@99 $generated@@143)) $generated $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and ($generated@@142 $generated@@146) (and ($generated@@30 $generated@@145) ($generated@@81 $generated@@27 $generated@@145 $generated@@31 $generated@@146))) ($generated@@81 $generated@@10 ($generated@@14 ($generated@@102 $generated@@145)) $generated $generated@@146))
 :pattern ( ($generated@@81 $generated@@10 ($generated@@14 ($generated@@102 $generated@@145)) $generated $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and ($generated@@142 $generated@@148) ($generated@@26 $generated@@27 $generated@@147 $generated@@28)) ($generated@@81 $generated@@27 $generated@@147 $generated@@28 $generated@@148))
 :pattern ( ($generated@@81 $generated@@27 $generated@@147 $generated@@28 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and ($generated@@142 $generated@@150) ($generated@@26 $generated@@27 $generated@@149 $generated@@31)) ($generated@@81 $generated@@27 $generated@@149 $generated@@31 $generated@@150))
 :pattern ( ($generated@@81 $generated@@27 $generated@@149 $generated@@31 $generated@@150))
)))
(assert (= ($generated@@24 $generated@@28) $generated@@2))
(assert (= ($generated@@151 $generated@@28) $generated@@6))
(assert (= ($generated@@24 $generated@@31) $generated@@3))
(assert (= ($generated@@151 $generated@@31) $generated@@7))
(assert (forall (($generated@@152 Int) ) (! (= ($generated@@71 $generated@@10 ($generated@@14 ($generated@@63 $generated@@152))) ($generated@@65 $generated@@36 ($generated@@71 $generated@@10 ($generated@@14 $generated@@152))))
 :pattern ( ($generated@@71 $generated@@10 ($generated@@14 ($generated@@63 $generated@@152))))
)))
(assert (forall (($generated@@153 Int) ) (! (= ($generated@@74 ($generated@@63 $generated@@153)) ($generated@@65 $generated@@27 ($generated@@74 $generated@@153)))
 :pattern ( ($generated@@74 ($generated@@63 $generated@@153)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@71 $generated@@155 ($generated@@65 $generated@@155 $generated@@154)) ($generated@@65 $generated@@36 ($generated@@71 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@71 $generated@@155 ($generated@@65 $generated@@155 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! ($generated@@81 $generated@@10 $generated@@157 $generated $generated@@156)
 :pattern ( ($generated@@81 $generated@@10 $generated@@157 $generated $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! ($generated@@26 $generated@@10 $generated@@158 $generated)
 :pattern ( ($generated@@26 $generated@@10 $generated@@158 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@175  (=> (and (= $generated@@159 ($generated@@109 $generated@@160 $generated@@161 $generated@@1 false)) (= $generated@@162 ($generated@@65 $generated@@27 ($generated@@74 ($generated@@63 15))))) (=> (and (and ($generated@@142 $generated@@163) ($generated@@164 $generated@@163)) (and (forall (($generated@@176 T@U) ) (!  (=> (and (or (not (= $generated@@176 $generated@@160)) (not true)) ($generated@@13 ($generated@@39 $generated@@9 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@161 $generated@@176) $generated@@1)))) (= ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@163 $generated@@176) ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@161 $generated@@176)))
 :pattern ( ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@163 $generated@@176))
)) ($generated@@33 $generated@@161 $generated@@163))) (=> (and (and (and (and (and ($generated@@142 $generated@@165) ($generated@@164 $generated@@165)) (forall (($generated@@177 T@U) ) (!  (=> (and (or (not (= $generated@@177 $generated@@160)) (not true)) ($generated@@13 ($generated@@39 $generated@@9 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@163 $generated@@177) $generated@@1)))) (= ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@165 $generated@@177) ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@163 $generated@@177)))
 :pattern ( ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@165 $generated@@177))
))) (and ($generated@@33 $generated@@163 $generated@@165) (= $generated@@166 ($generated@@65 $generated@@27 ($generated@@77 ($generated@@63 15)))))) (and (and ($generated@@142 $generated@@167) ($generated@@164 $generated@@167)) (and (forall (($generated@@178 T@U) ) (!  (=> (and (or (not (= $generated@@178 $generated@@160)) (not true)) ($generated@@13 ($generated@@39 $generated@@9 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@165 $generated@@178) $generated@@1)))) (= ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@167 $generated@@178) ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@165 $generated@@178)))
 :pattern ( ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@167 $generated@@178))
)) ($generated@@33 $generated@@165 $generated@@167)))) (and (and (and (and ($generated@@142 $generated@@168) ($generated@@164 $generated@@168)) (forall (($generated@@179 T@U) ) (!  (=> (and (or (not (= $generated@@179 $generated@@160)) (not true)) ($generated@@13 ($generated@@39 $generated@@9 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@167 $generated@@179) $generated@@1)))) (= ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@168 $generated@@179) ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@167 $generated@@179)))
 :pattern ( ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@168 $generated@@179))
))) (and ($generated@@33 $generated@@167 $generated@@168) ($generated@@80 ($generated@@71 $generated@@27 $generated@@166) $generated@@31 $generated@@168))) (and (and ($generated@@169 $generated@@166) ($generated@@169 $generated@@166)) (and (= $generated@@170 ($generated@@63 3)) (= (ControlFlow 0 2) (- 0 1)))))) (and (<= ($generated@@63 (- 0 18)) $generated@@170) (< $generated@@170 20)))))))
(let (($generated@@180  (=> (and ($generated@@142 $generated@@161) ($generated@@164 $generated@@161)) (=> (and (and (and (and ($generated@@26 $generated@@27 $generated@@171 $generated@@28) ($generated@@81 $generated@@27 $generated@@171 $generated@@28 $generated@@161)) true) (and (and ($generated@@26 $generated@@27 $generated@@172 $generated@@31) ($generated@@81 $generated@@27 $generated@@172 $generated@@31 $generated@@161)) true)) (and (and (and (<= ($generated@@63 (- 0 18)) $generated@@173) (< $generated@@173 20)) true) (and (= 1 $generated@@174) (= (ControlFlow 0 3) 2)))) $generated@@175))))
$generated@@180)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
