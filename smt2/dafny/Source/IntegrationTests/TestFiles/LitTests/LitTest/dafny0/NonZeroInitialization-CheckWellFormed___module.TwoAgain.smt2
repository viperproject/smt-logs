(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U T@U T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@68 () Int)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@96 () T@U)
(declare-fun $generated@@107 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@121 () T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@133 (T@U) Int)
(declare-fun $generated@@134 (T@U) Int)
(declare-fun $generated@@145 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@149 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@155 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@27 $generated@@29 ($generated@@28 $generated@@30) $generated@@31) ($generated@@27 $generated@@29 $generated@@30 $generated@@31))
 :pattern ( ($generated@@27 $generated@@29 ($generated@@28 $generated@@30) $generated@@31))
)))
(assert (= ($generated@@32 $generated@@33) $generated@@4))
(assert (= ($generated@@11 $generated@@35) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> ($generated@@37 $generated@@39) ($generated@@34 $generated@@35 $generated@@33 ($generated@@36 $generated@@38) $generated@@39))
 :pattern ( ($generated@@34 $generated@@35 $generated@@33 ($generated@@36 $generated@@38) $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@43 ($generated@@40 $generated@@42) $generated@@44) ($generated@@34 $generated@@35 $generated@@43 ($generated@@36 ($generated@@41 $generated@@42)) $generated@@44))
 :pattern ( ($generated@@34 $generated@@35 $generated@@43 ($generated@@40 $generated@@42) $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (! ($generated@@45 $generated@@35 $generated@@33 ($generated@@36 $generated@@46))
 :pattern ( ($generated@@45 $generated@@35 $generated@@33 ($generated@@36 $generated@@46)))
)))
(assert (forall (($generated@@48 Int) ) (! (= ($generated@@47 $generated@@48) $generated@@48)
 :pattern ( ($generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@45 $generated@@35 ($generated@@52 $generated@@55 $generated@@56) ($generated@@36 $generated@@54))  (and ($generated@@53 $generated@@55 $generated@@54) ($generated@@45 $generated@@35 $generated@@56 ($generated@@36 $generated@@54))))
 :pattern ( ($generated@@45 $generated@@35 ($generated@@52 $generated@@55 $generated@@56) ($generated@@36 $generated@@54)))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@57 $generated@@58) (= ($generated@@32 $generated@@58) $generated@@4))
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@59 $generated@@60) (= ($generated@@32 $generated@@60) $generated@@5))
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 ($generated@@61 $generated@@64 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@61 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@59 $generated@@65) (exists (($generated@@66 T@U) ($generated@@67 T@U) ) (= $generated@@65 ($generated@@52 $generated@@66 $generated@@67))))
 :pattern ( ($generated@@59 $generated@@65))
)))
(assert  (=> (<= 1 $generated@@68) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (or ($generated@@69 $generated@@71 $generated@@73) (and (< 1 $generated@@68) ($generated@@45 $generated@@35 $generated@@73 ($generated@@36 $generated@@71)))) (and (=> (not ($generated@@57 $generated@@73)) (let (($generated@@74 ($generated@@70 $generated@@73)))
($generated@@69 $generated@@71 $generated@@74))) (= ($generated@@27 $generated@@71 ($generated@@28 $generated@@72) $generated@@73) (ite ($generated@@57 $generated@@73) 0 (let (($generated@@75 ($generated@@70 $generated@@73)))
(+ ($generated@@27 $generated@@71 $generated@@72 $generated@@75) 1))))))
 :pattern ( ($generated@@27 $generated@@71 ($generated@@28 $generated@@72) $generated@@73))
))))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@57 $generated@@76) (= $generated@@76 $generated@@33))
 :pattern ( ($generated@@57 $generated@@76))
)))
(assert (= ($generated@@11 $generated@@77) 4))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@45 $generated@@77 $generated@@79 ($generated@@41 $generated@@80)) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@78 $generated@@79 $generated@@81) ($generated@@53 $generated@@81 $generated@@80))
 :pattern ( ($generated@@78 $generated@@79 $generated@@81))
)))
 :pattern ( ($generated@@45 $generated@@77 $generated@@79 ($generated@@41 $generated@@80)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@82 ($generated@@62 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@34 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@82 ($generated@@62 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@68) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (or ($generated@@69 $generated@@87 ($generated@@49 $generated@@35 $generated@@89)) (and (< 1 $generated@@68) ($generated@@45 $generated@@35 $generated@@89 ($generated@@36 $generated@@87)))) (and (=> (not ($generated@@16 ($generated@@49 $generated@@12 ($generated@@15 ($generated@@57 ($generated@@49 $generated@@35 $generated@@89)))))) (let (($generated@@90 ($generated@@49 $generated@@35 ($generated@@70 ($generated@@49 $generated@@35 $generated@@89)))))
($generated@@69 $generated@@87 $generated@@90))) (= ($generated@@27 $generated@@87 ($generated@@28 $generated@@88) ($generated@@49 $generated@@35 $generated@@89)) (ite ($generated@@57 ($generated@@49 $generated@@35 $generated@@89)) 0 (let (($generated@@91 ($generated@@49 $generated@@35 ($generated@@70 ($generated@@49 $generated@@35 $generated@@89)))))
($generated@@47 (+ ($generated@@27 $generated@@87 ($generated@@28 $generated@@88) $generated@@91) 1)))))))
 :weight 3
 :pattern ( ($generated@@27 $generated@@87 ($generated@@28 $generated@@88) ($generated@@49 $generated@@35 $generated@@89)))
))))
(assert (forall (($generated@@94 T@U) ) (!  (and (= ($generated@@92 ($generated@@36 $generated@@94)) $generated@@3) (= ($generated@@93 ($generated@@36 $generated@@94)) $generated@@9))
 :pattern ( ($generated@@36 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (!  (and (= ($generated@@92 ($generated@@40 $generated@@95)) $generated@@6) (= ($generated@@93 ($generated@@40 $generated@@95)) $generated@@10))
 :pattern ( ($generated@@40 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@53 $generated@@97 $generated@@96) (and (= ($generated@@62 $generated@@35 ($generated@@61 $generated@@35 $generated@@97)) $generated@@97) ($generated@@45 $generated@@35 ($generated@@61 $generated@@35 $generated@@97) $generated@@96)))
 :pattern ( ($generated@@53 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@45 $generated@@35 $generated@@99 ($generated@@36 $generated@@98)) (or ($generated@@57 $generated@@99) ($generated@@59 $generated@@99)))
 :pattern ( ($generated@@59 $generated@@99) ($generated@@45 $generated@@35 $generated@@99 ($generated@@36 $generated@@98)))
 :pattern ( ($generated@@57 $generated@@99) ($generated@@45 $generated@@35 $generated@@99 ($generated@@36 $generated@@98)))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@53 ($generated@@62 $generated@@102 $generated@@100) $generated@@101) ($generated@@45 $generated@@102 $generated@@100 $generated@@101))
 :pattern ( ($generated@@53 ($generated@@62 $generated@@102 $generated@@100) $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@34 $generated@@77 $generated@@103 ($generated@@41 $generated@@104) $generated@@105) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@78 $generated@@103 $generated@@106) ($generated@@82 $generated@@106 $generated@@104 $generated@@105))
 :pattern ( ($generated@@78 $generated@@103 $generated@@106))
)))
 :pattern ( ($generated@@34 $generated@@77 $generated@@103 ($generated@@41 $generated@@104) $generated@@105))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@108 ($generated@@107 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@107 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@111 ($generated@@107 $generated@@112 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@107 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@32 ($generated@@52 $generated@@114 $generated@@115)) $generated@@5)
 :pattern ( ($generated@@52 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@116 ($generated@@52 $generated@@117 $generated@@118)) $generated@@117)
 :pattern ( ($generated@@52 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@70 ($generated@@52 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@52 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@45 $generated@@35 $generated@@123 ($generated@@40 $generated@@122))  (and ($generated@@45 $generated@@35 $generated@@123 ($generated@@36 ($generated@@41 $generated@@122))) (<= ($generated@@47 2) ($generated@@27 ($generated@@41 $generated@@122) ($generated@@28 $generated@@121) $generated@@123))))
 :pattern ( ($generated@@45 $generated@@35 $generated@@123 ($generated@@40 $generated@@122)))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@124 ($generated@@41 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@41 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@92 ($generated@@41 $generated@@126)) $generated)
 :pattern ( ($generated@@41 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@36 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@36 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@129 ($generated@@40 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@40 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@61 $generated@@132 ($generated@@62 $generated@@132 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@62 $generated@@132 $generated@@131))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (< ($generated@@133 $generated@@135) ($generated@@134 ($generated@@52 $generated@@135 $generated@@136)))
 :pattern ( ($generated@@52 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (< ($generated@@134 $generated@@138) ($generated@@134 ($generated@@52 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@52 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> ($generated@@53 $generated@@141 ($generated@@107 $generated@@139 $generated@@140)) (and (= ($generated@@62 $generated@@35 ($generated@@61 $generated@@35 $generated@@141)) $generated@@141) ($generated@@45 $generated@@35 ($generated@@61 $generated@@35 $generated@@141) ($generated@@107 $generated@@139 $generated@@140))))
 :pattern ( ($generated@@53 $generated@@141 ($generated@@107 $generated@@139 $generated@@140)))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and ($generated@@37 $generated@@144) (and ($generated@@59 $generated@@142) ($generated@@34 $generated@@35 $generated@@142 ($generated@@36 $generated@@143) $generated@@144))) ($generated@@82 ($generated@@116 $generated@@142) $generated@@143 $generated@@144))
 :pattern ( ($generated@@82 ($generated@@116 $generated@@142) $generated@@143 $generated@@144))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@145 $generated@@156 $generated@@157 $generated@@158 ($generated@@152 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@161 $generated@@162) $generated@@159)
 :weight 0
)) (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@145 $generated@@163 $generated@@164 $generated@@165 ($generated@@152 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@145 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@145 $generated@@172 $generated@@173 $generated@@174 ($generated@@152 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@145 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))) (= ($generated@@11 $generated@@146) 5)) (= ($generated@@11 $generated@@147) 6)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@149 $generated@@181 $generated@@182 ($generated@@153 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@183) $generated@@185) $generated@@183)
 :weight 0
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@190 $generated@@191) (= ($generated@@149 $generated@@186 $generated@@187 ($generated@@153 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@188) $generated@@191) ($generated@@149 $generated@@186 $generated@@187 $generated@@189 $generated@@191)))
 :weight 0
))) (= ($generated@@11 $generated@@150) 7)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@11 ($generated@@151 $generated@@192 $generated@@193)) 8))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@154 ($generated@@151 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@151 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@155 ($generated@@151 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@151 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@16 ($generated@@145 $generated@@146 $generated@@147 $generated@@12 ($generated@@148 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (or (not (= $generated@@202 $generated@@198)) (not true)) ($generated@@16 ($generated@@61 $generated@@12 ($generated@@149 $generated@@147 $generated@@150 ($generated@@149 $generated@@146 ($generated@@151 $generated@@147 $generated@@150) $generated@@199 $generated@@202) $generated@@200)))) $generated@@201))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147 $generated@@12 ($generated@@148 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (and (= ($generated@@92 ($generated@@107 $generated@@204 $generated@@205)) $generated@@1) (= ($generated@@93 ($generated@@107 $generated@@204 $generated@@205)) $generated@@7))
 :pattern ( ($generated@@107 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@133 ($generated@@62 $generated@@35 $generated@@206)) ($generated@@134 $generated@@206))
 :pattern ( ($generated@@133 ($generated@@62 $generated@@35 $generated@@206)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@53 $generated@@207 ($generated@@41 $generated@@208)) (and (= ($generated@@62 $generated@@77 ($generated@@61 $generated@@77 $generated@@207)) $generated@@207) ($generated@@45 $generated@@77 ($generated@@61 $generated@@77 $generated@@207) ($generated@@41 $generated@@208))))
 :pattern ( ($generated@@53 $generated@@207 ($generated@@41 $generated@@208)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@53 $generated@@210 ($generated@@36 $generated@@209)) (and (= ($generated@@62 $generated@@35 ($generated@@61 $generated@@35 $generated@@210)) $generated@@210) ($generated@@45 $generated@@35 ($generated@@61 $generated@@35 $generated@@210) ($generated@@36 $generated@@209))))
 :pattern ( ($generated@@53 $generated@@210 ($generated@@36 $generated@@209)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> ($generated@@53 $generated@@212 ($generated@@40 $generated@@211)) (and (= ($generated@@62 $generated@@35 ($generated@@61 $generated@@35 $generated@@212)) $generated@@212) ($generated@@45 $generated@@35 ($generated@@61 $generated@@35 $generated@@212) ($generated@@40 $generated@@211))))
 :pattern ( ($generated@@53 $generated@@212 ($generated@@40 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and ($generated@@37 $generated@@215) (and ($generated@@59 $generated@@213) ($generated@@34 $generated@@35 $generated@@213 ($generated@@36 $generated@@214) $generated@@215))) ($generated@@34 $generated@@35 ($generated@@70 $generated@@213) ($generated@@36 $generated@@214) $generated@@215))
 :pattern ( ($generated@@34 $generated@@35 ($generated@@70 $generated@@213) ($generated@@36 $generated@@214) $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and ($generated@@37 $generated@@217) ($generated@@45 $generated@@35 $generated@@216 $generated@@96)) ($generated@@34 $generated@@35 $generated@@216 $generated@@96 $generated@@217))
 :pattern ( ($generated@@34 $generated@@35 $generated@@216 $generated@@96 $generated@@217))
)))
(assert (= ($generated@@92 $generated@@96) $generated@@2))
(assert (= ($generated@@93 $generated@@96) $generated@@8))
(assert (= $generated@@33 ($generated@@49 $generated@@35 $generated@@33)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= ($generated@@52 ($generated@@49 $generated@@150 $generated@@218) ($generated@@49 $generated@@35 $generated@@219)) ($generated@@49 $generated@@35 ($generated@@52 $generated@@218 $generated@@219)))
 :pattern ( ($generated@@52 ($generated@@49 $generated@@150 $generated@@218) ($generated@@49 $generated@@35 $generated@@219)))
)))
(assert (forall (($generated@@220 Int) ) (! (= ($generated@@62 $generated@@13 ($generated@@17 ($generated@@47 $generated@@220))) ($generated@@49 $generated@@150 ($generated@@62 $generated@@13 ($generated@@17 $generated@@220))))
 :pattern ( ($generated@@62 $generated@@13 ($generated@@17 ($generated@@47 $generated@@220))))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@T) ) (! (= ($generated@@62 $generated@@222 ($generated@@49 $generated@@222 $generated@@221)) ($generated@@49 $generated@@150 ($generated@@62 $generated@@222 $generated@@221)))
 :pattern ( ($generated@@62 $generated@@222 ($generated@@49 $generated@@222 $generated@@221)))
)))
(assert  (=> (<= 1 $generated@@68) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (or ($generated@@69 $generated@@223 $generated@@225) (and (< 1 $generated@@68) ($generated@@45 $generated@@35 $generated@@225 ($generated@@36 $generated@@223)))) (<= ($generated@@47 0) ($generated@@27 $generated@@223 $generated@@224 $generated@@225)))
 :pattern ( ($generated@@27 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> ($generated@@37 $generated@@229) (= ($generated@@34 $generated@@35 ($generated@@52 $generated@@227 $generated@@228) ($generated@@36 $generated@@226) $generated@@229)  (and ($generated@@82 $generated@@227 $generated@@226 $generated@@229) ($generated@@34 $generated@@35 $generated@@228 ($generated@@36 $generated@@226) $generated@@229))))
 :pattern ( ($generated@@34 $generated@@35 ($generated@@52 $generated@@227 $generated@@228) ($generated@@36 $generated@@226) $generated@@229))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@234  (=> (= (ControlFlow 0 3) (- 0 2)) false)))
(let (($generated@@235 true))
(let (($generated@@236  (=> (= $generated@@230 ($generated@@148 $generated@@231 $generated@@232 $generated@@0 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@235) (=> (= (ControlFlow 0 4) 3) $generated@@234)))))
(let (($generated@@237  (=> (and (and ($generated@@37 $generated@@232) ($generated@@233 $generated@@232)) (and (= 3 $generated@@68) (= (ControlFlow 0 5) 4))) $generated@@236)))
$generated@@237)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
