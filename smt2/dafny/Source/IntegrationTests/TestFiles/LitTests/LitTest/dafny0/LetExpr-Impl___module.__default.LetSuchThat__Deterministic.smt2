(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@24 () Bool)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 () Bool)
(declare-fun $generated@@27 () Int)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@47 (T@U) Int)
(declare-fun $generated@@48 (T@U) Int)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@57 (Int) Int)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@69 (T@T T@U T@U) Bool)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@109 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 (T@T T@T) T@T)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@T) T@T)
(declare-fun $generated@@115 (T@T) T@T)
(declare-fun $generated@@164 (Int Int) Int)
(declare-fun $generated@@177 () Bool)
(declare-fun $generated@@178 () Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ) (! ($generated@@21 ($generated@@20 $generated@@22 $generated@@23) $generated@@23)
 :pattern ( ($generated@@20 $generated@@22 $generated@@23))
)))
(assert  (=> $generated@@24 (< $generated@@25 0)))
(assert  (=> $generated@@26 (< $generated@@27 0)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@21 $generated@@28 $generated@@30) ($generated@@21 ($generated@@20 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@20 $generated@@28 $generated@@29) ($generated@@21 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@21 $generated@@32 $generated@@34) ($generated@@21 ($generated@@31 $generated@@32 $generated@@33) $generated@@34))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33) ($generated@@21 $generated@@32 $generated@@34))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@21 $generated@@36 $generated@@37) ($generated@@21 ($generated@@31 $generated@@35 $generated@@36) $generated@@37))
 :pattern ( ($generated@@31 $generated@@35 $generated@@36) ($generated@@21 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@21 ($generated@@20 $generated@@38 $generated@@39) $generated@@40)  (or (= $generated@@40 $generated@@39) ($generated@@21 $generated@@38 $generated@@40)))
 :pattern ( ($generated@@21 ($generated@@20 $generated@@38 $generated@@39) $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated@@21 $generated@@43 $generated@@44) (not ($generated@@21 ($generated@@41 $generated@@42 $generated@@43) $generated@@44)))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43) ($generated@@21 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (!  (not ($generated@@21 $generated@@45 $generated@@46))
 :pattern ( ($generated@@21 $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@51 T@U) ) (!  (=> ($generated@@49 $generated@@51) (and (and ($generated@@21 $generated@@51 ($generated@@50 $generated@@5 ($generated@@9 ($generated@@48 $generated@@51)))) ($generated@@21 $generated@@51 ($generated@@50 $generated@@5 ($generated@@9 ($generated@@47 $generated@@51))))) (or (not (= ($generated@@48 $generated@@51) ($generated@@47 $generated@@51))) (not true))))
 :pattern ( ($generated@@47 $generated@@51))
 :pattern ( ($generated@@48 $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@31 ($generated@@31 $generated@@52 $generated@@53) $generated@@53) ($generated@@31 $generated@@52 $generated@@53))
 :pattern ( ($generated@@31 ($generated@@31 $generated@@52 $generated@@53) $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@21 ($generated@@41 $generated@@54 $generated@@55) $generated@@56)  (and ($generated@@21 $generated@@54 $generated@@56) (not ($generated@@21 $generated@@55 $generated@@56))))
 :pattern ( ($generated@@21 ($generated@@41 $generated@@54 $generated@@55) $generated@@56))
)))
(assert (forall (($generated@@58 Int) ) (! (= ($generated@@57 $generated@@58) $generated@@58)
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@50 $generated@@64 ($generated@@62 $generated@@64 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@62 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@65 $generated@@66 $generated@@67) (forall (($generated@@68 T@U) ) (!  (or (not ($generated@@21 $generated@@66 $generated@@68)) (not ($generated@@21 $generated@@67 $generated@@68)))
 :pattern ( ($generated@@21 $generated@@66 $generated@@68))
 :pattern ( ($generated@@21 $generated@@67 $generated@@68))
)))
 :pattern ( ($generated@@65 $generated@@66 $generated@@67))
)))
(assert (= ($generated@@3 $generated@@70) 3))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@69 $generated@@70 $generated@@73 ($generated@@71 $generated@@74)) (forall (($generated@@75 T@U) ) (!  (=> ($generated@@21 $generated@@73 $generated@@75) ($generated@@72 $generated@@75 $generated@@74))
 :pattern ( ($generated@@21 $generated@@73 $generated@@75))
)))
 :pattern ( ($generated@@69 $generated@@70 $generated@@73 ($generated@@71 $generated@@74)))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@76 ($generated@@50 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@77 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@76 ($generated@@50 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@21 ($generated@@31 $generated@@82 $generated@@83) $generated@@84)  (or ($generated@@21 $generated@@82 $generated@@84) ($generated@@21 $generated@@83 $generated@@84)))
 :pattern ( ($generated@@21 ($generated@@31 $generated@@82 $generated@@83) $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> ($generated@@65 $generated@@85 $generated@@86) (and (= ($generated@@41 ($generated@@31 $generated@@85 $generated@@86) $generated@@85) $generated@@86) (= ($generated@@41 ($generated@@31 $generated@@85 $generated@@86) $generated@@86) $generated@@85)))
 :pattern ( ($generated@@31 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@87 $generated@@88 $generated@@89) (= $generated@@88 $generated@@89))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@72 $generated@@90 $generated) (and (= ($generated@@50 $generated@@5 ($generated@@62 $generated@@5 $generated@@90)) $generated@@90) ($generated@@69 $generated@@5 ($generated@@62 $generated@@5 $generated@@90) $generated)))
 :pattern ( ($generated@@72 $generated@@90 $generated))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@72 ($generated@@50 $generated@@93 $generated@@91) $generated@@92) ($generated@@69 $generated@@93 $generated@@91 $generated@@92))
 :pattern ( ($generated@@72 ($generated@@50 $generated@@93 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@77 $generated@@70 $generated@@94 ($generated@@71 $generated@@95) $generated@@96) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@21 $generated@@94 $generated@@97) ($generated@@76 $generated@@97 $generated@@95 $generated@@96))
 :pattern ( ($generated@@21 $generated@@94 $generated@@97))
)))
 :pattern ( ($generated@@77 $generated@@70 $generated@@94 ($generated@@71 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@98 ($generated@@71 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@71 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@19 ($generated@@71 $generated@@100)) $generated@@1)
 :pattern ( ($generated@@71 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@62 $generated@@102 ($generated@@50 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@50 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@31 $generated@@103 ($generated@@31 $generated@@103 $generated@@104)) ($generated@@31 $generated@@103 $generated@@104))
 :pattern ( ($generated@@31 $generated@@103 ($generated@@31 $generated@@103 $generated@@104)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@105 $generated@@116 $generated@@117 $generated@@118 ($generated@@112 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@121 $generated@@122) $generated@@119)
 :weight 0
)) (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@105 $generated@@123 $generated@@124 $generated@@125 ($generated@@112 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@105 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@105 $generated@@132 $generated@@133 $generated@@134 ($generated@@112 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@105 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)))) (= ($generated@@3 $generated@@106) 4)) (= ($generated@@3 $generated@@107) 5)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@109 $generated@@141 $generated@@142 ($generated@@113 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@143) $generated@@145) $generated@@143)
 :weight 0
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@150 $generated@@151) (= ($generated@@109 $generated@@146 $generated@@147 ($generated@@113 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@109 $generated@@146 $generated@@147 $generated@@149 $generated@@151)))
 :weight 0
))) (= ($generated@@3 $generated@@110) 6)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (= ($generated@@3 ($generated@@111 $generated@@152 $generated@@153)) 7))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@114 ($generated@@111 $generated@@154 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@111 $generated@@154 $generated@@155))
))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (! (= ($generated@@115 ($generated@@111 $generated@@156 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@111 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 Bool) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@8 ($generated@@105 $generated@@106 $generated@@107 $generated@@4 ($generated@@108 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))  (=> (and (or (not (= $generated@@162 $generated@@158)) (not true)) ($generated@@8 ($generated@@62 $generated@@4 ($generated@@109 $generated@@107 $generated@@110 ($generated@@109 $generated@@106 ($generated@@111 $generated@@107 $generated@@110) $generated@@159 $generated@@162) $generated@@160)))) $generated@@161))
 :pattern ( ($generated@@105 $generated@@106 $generated@@107 $generated@@4 ($generated@@108 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 Int) ($generated@@166 Int) ) (! (= ($generated@@164 $generated@@165 $generated@@166) (* $generated@@165 $generated@@166))
 :pattern ( ($generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@72 $generated@@167 ($generated@@71 $generated@@168)) (and (= ($generated@@50 $generated@@70 ($generated@@62 $generated@@70 $generated@@167)) $generated@@167) ($generated@@69 $generated@@70 ($generated@@62 $generated@@70 $generated@@167) ($generated@@71 $generated@@168))))
 :pattern ( ($generated@@72 $generated@@167 ($generated@@71 $generated@@168)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@87 $generated@@169 $generated@@170) (forall (($generated@@171 T@U) ) (! (= ($generated@@21 $generated@@169 $generated@@171) ($generated@@21 $generated@@170 $generated@@171))
 :pattern ( ($generated@@21 $generated@@169 $generated@@171))
 :pattern ( ($generated@@21 $generated@@170 $generated@@171))
)))
 :pattern ( ($generated@@87 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 Int) ) (! (= ($generated@@50 $generated@@5 ($generated@@9 ($generated@@57 $generated@@172))) ($generated@@59 $generated@@110 ($generated@@50 $generated@@5 ($generated@@9 $generated@@172))))
 :pattern ( ($generated@@50 $generated@@5 ($generated@@9 ($generated@@57 $generated@@172))))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@50 $generated@@174 ($generated@@59 $generated@@174 $generated@@173)) ($generated@@59 $generated@@110 ($generated@@50 $generated@@174 $generated@@173)))
 :pattern ( ($generated@@50 $generated@@174 ($generated@@59 $generated@@174 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! ($generated@@77 $generated@@5 $generated@@176 $generated $generated@@175)
 :pattern ( ($generated@@77 $generated@@5 $generated@@176 $generated $generated@@175))
)))
(assert  (=> $generated@@177 (= $generated@@178 ($generated@@164 ($generated@@57 2) $generated@@178))))
(assert (forall (($generated@@179 T@U) ) (! ($generated@@69 $generated@@5 $generated@@179 $generated)
 :pattern ( ($generated@@69 $generated@@5 $generated@@179 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@203 true))
(let (($generated@@204 true))
(let (($generated@@205  (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (and (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 0)) $generated) ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 0)) $generated)) (and (and ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 ($generated@@57 0)))) ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 ($generated@@57 0))))) (or (not (= 0 0)) (not true)))) (or (exists (($generated@@206 T@U) )  (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 0)) $generated) (and (and ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 $generated@@206)) ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 ($generated@@57 0))))) (or (not (= ($generated@@10 $generated@@206) 0)) (not true))))) (or (exists (($generated@@207 T@U) )  (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 0)) $generated) (and (and ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 ($generated@@57 0)))) ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 $generated@@207))) (or (not (= 0 ($generated@@10 $generated@@207))) (not true))))) (exists (($generated@@208 T@U) ($generated@@209 T@U) )  (and (and ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 $generated@@208)) ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 $generated@@209))) (or (not (= ($generated@@10 $generated@@208) ($generated@@10 $generated@@209))) (not true)))))))) (=> (or (and (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 0)) $generated) ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 0)) $generated)) (and (and ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 ($generated@@57 0)))) ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 ($generated@@57 0))))) (or (not (= 0 0)) (not true)))) (or (exists (($generated@@210 Int) )  (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 0)) $generated) (and (and ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 $generated@@210))) ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 ($generated@@57 0))))) (or (not (= $generated@@210 0)) (not true))))) (or (exists (($generated@@211 Int) )  (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 0)) $generated) (and (and ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 ($generated@@57 0)))) ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 $generated@@211)))) (or (not (= 0 $generated@@211)) (not true))))) (exists (($generated@@212 Int) ($generated@@213 Int) )  (and (and ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 $generated@@212))) ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 $generated@@213)))) (or (not (= $generated@@212 $generated@@213)) (not true))))))) (=> (and (and (and ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 $generated@@181))) ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 $generated@@182)))) (or (not (= $generated@@181 $generated@@182)) (not true))) (and (and ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 $generated@@183))) ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 $generated@@184)))) (or (not (= $generated@@183 $generated@@184)) (not true)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@87 ($generated@@31 ($generated@@20 $generated@@45 ($generated@@50 $generated@@5 ($generated@@9 $generated@@181))) ($generated@@20 $generated@@45 ($generated@@50 $generated@@5 ($generated@@9 $generated@@182)))) ($generated@@31 ($generated@@20 $generated@@45 ($generated@@50 $generated@@5 ($generated@@9 $generated@@183))) ($generated@@20 $generated@@45 ($generated@@50 $generated@@5 ($generated@@9 $generated@@184)))))) (=> ($generated@@87 ($generated@@31 ($generated@@20 $generated@@45 ($generated@@50 $generated@@5 ($generated@@9 $generated@@181))) ($generated@@20 $generated@@45 ($generated@@50 $generated@@5 ($generated@@9 $generated@@182)))) ($generated@@31 ($generated@@20 $generated@@45 ($generated@@50 $generated@@5 ($generated@@9 $generated@@183))) ($generated@@20 $generated@@45 ($generated@@50 $generated@@5 ($generated@@9 $generated@@184))))) (=> (and (and ($generated@@49 $generated@@180) ($generated@@49 $generated@@180)) (and (= $generated@@185 (let (($generated@@214 ($generated@@47 $generated@@180)))
(let (($generated@@215 ($generated@@48 $generated@@180)))
($generated@@31 ($generated@@20 $generated@@45 ($generated@@50 $generated@@5 ($generated@@9 $generated@@215))) ($generated@@20 $generated@@45 ($generated@@50 $generated@@5 ($generated@@9 $generated@@214))))))) (= (ControlFlow 0 6) (- 0 5)))) ($generated@@87 $generated@@185 $generated@@180)))))))))
(let (($generated@@216  (=> (and (not (and ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 $generated@@181))) ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 $generated@@182))))) (= (ControlFlow 0 10) 6)) $generated@@205)))
(let (($generated@@217  (=> (and (and ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 $generated@@181))) ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 $generated@@182)))) (= (ControlFlow 0 9) 6)) $generated@@205)))
(let (($generated@@218  (=> (not ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 $generated@@181)))) (and (=> (= (ControlFlow 0 12) 9) $generated@@217) (=> (= (ControlFlow 0 12) 10) $generated@@216)))))
(let (($generated@@219  (=> ($generated@@21 $generated@@180 ($generated@@50 $generated@@5 ($generated@@9 $generated@@181))) (and (=> (= (ControlFlow 0 11) 9) $generated@@217) (=> (= (ControlFlow 0 11) 10) $generated@@216)))))
(let (($generated@@220  (and (=> (= (ControlFlow 0 13) 11) $generated@@219) (=> (= (ControlFlow 0 13) 12) $generated@@218))))
(let (($generated@@221 true))
(let (($generated@@222  (=> (= $generated@@180 ($generated@@59 $generated@@70 ($generated@@20 ($generated@@20 $generated@@45 ($generated@@50 $generated@@5 ($generated@@9 ($generated@@57 3)))) ($generated@@50 $generated@@5 ($generated@@9 ($generated@@57 5)))))) (and (=> (= (ControlFlow 0 14) 13) $generated@@220) (=> (= (ControlFlow 0 14) 4) $generated@@221)))))
(let (($generated@@223  (and (=> (= (ControlFlow 0 24) (- 0 26)) (or (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 (- 0 1))) $generated) ($generated@@8 ($generated@@59 $generated@@4 ($generated@@7 (< (- 0 1) 0))))) (or (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 0)) $generated) ($generated@@8 ($generated@@59 $generated@@4 ($generated@@7 (< 0 0))))) (exists (($generated@@224 Int) ) (< $generated@@224 0))))) (=> (or (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 (- 0 1))) $generated) ($generated@@8 ($generated@@59 $generated@@4 ($generated@@7 (< (- 0 1) 0))))) (or (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 0)) $generated) ($generated@@8 ($generated@@59 $generated@@4 ($generated@@7 (< 0 0))))) (exists (($generated@@225 Int) ) (< $generated@@225 0)))) (=> (and (< $generated@@186 0) (< $generated@@187 0)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (= $generated@@186 $generated@@187)) (=> (= $generated@@186 $generated@@187) (=> (and (and $generated@@26 $generated@@26) (and (= $generated@@188 (let (($generated@@226 $generated@@27))
$generated@@226)) (= (ControlFlow 0 24) 14))) $generated@@222))))))))
(let (($generated@@227  (and (=> (= (ControlFlow 0 28) 24) $generated@@223) (=> (= (ControlFlow 0 28) 27) $generated@@203))))
(let (($generated@@228  (and (=> (= (ControlFlow 0 19) (- 0 21)) (or (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 (- 0 1))) $generated) ($generated@@8 ($generated@@59 $generated@@4 ($generated@@7 (< (- 0 1) 0))))) (or (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 0)) $generated) ($generated@@8 ($generated@@59 $generated@@4 ($generated@@7 (< 0 0))))) (exists (($generated@@229 Int) ) (< $generated@@229 0))))) (=> (or (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 (- 0 1))) $generated) ($generated@@8 ($generated@@59 $generated@@4 ($generated@@7 (< (- 0 1) 0))))) (or (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 0)) $generated) ($generated@@8 ($generated@@59 $generated@@4 ($generated@@7 (< 0 0))))) (exists (($generated@@230 Int) ) (< $generated@@230 0)))) (=> (and (< $generated@@189 0) (< $generated@@190 0)) (and (=> (= (ControlFlow 0 19) (- 0 20)) (= ($generated@@164 $generated@@189 ($generated@@57 0)) ($generated@@164 $generated@@190 ($generated@@57 0)))) (=> (= ($generated@@164 $generated@@189 ($generated@@57 0)) ($generated@@164 $generated@@190 ($generated@@57 0))) (=> (and (and $generated@@24 $generated@@24) (and (= $generated@@191 (let (($generated@@231 $generated@@25))
($generated@@164 $generated@@231 ($generated@@57 0)))) (= (ControlFlow 0 19) 14))) $generated@@222))))))))
(let (($generated@@232  (and (=> (= (ControlFlow 0 23) 19) $generated@@228) (=> (= (ControlFlow 0 23) 22) $generated@@204))))
(let (($generated@@233  (and (=> (= (ControlFlow 0 15) (- 0 17)) (or (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 0)) $generated) (= ($generated@@57 0) ($generated@@57 ($generated@@164 ($generated@@57 2) ($generated@@57 0))))) (exists (($generated@@234 Int) ) (= $generated@@234 ($generated@@164 ($generated@@57 2) $generated@@234))))) (=> (or (and ($generated@@69 $generated@@5 ($generated@@9 ($generated@@57 0)) $generated) (= ($generated@@57 0) ($generated@@57 ($generated@@164 ($generated@@57 2) ($generated@@57 0))))) (exists (($generated@@235 Int) ) (= $generated@@235 ($generated@@164 ($generated@@57 2) $generated@@235)))) (=> (and (= $generated@@192 ($generated@@164 ($generated@@57 2) $generated@@192)) (= $generated@@193 ($generated@@164 ($generated@@57 2) $generated@@193))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (= $generated@@192 $generated@@193)) (=> (= $generated@@192 $generated@@193) (=> (and (and $generated@@177 $generated@@177) (and (= $generated@@194 (let (($generated@@236 $generated@@178))
$generated@@236)) (= (ControlFlow 0 15) 14))) $generated@@222))))))))
(let (($generated@@237 true))
(let (($generated@@238  (and (=> (= (ControlFlow 0 18) 15) $generated@@233) (=> (= (ControlFlow 0 18) 3) $generated@@237))))
(let (($generated@@239  (=> (and (and (and (not ($generated@@8 ($generated@@59 $generated@@4 ($generated@@7 true)))) (not ($generated@@8 ($generated@@59 $generated@@4 ($generated@@7 true))))) (not ($generated@@8 ($generated@@59 $generated@@4 ($generated@@7 true))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@240  (=> (= $generated@@195 ($generated@@108 $generated@@196 $generated@@197 $generated@@2 false)) (and (and (and (=> (= (ControlFlow 0 29) 28) $generated@@227) (=> (= (ControlFlow 0 29) 23) $generated@@232)) (=> (= (ControlFlow 0 29) 18) $generated@@238)) (=> (= (ControlFlow 0 29) 2) $generated@@239)))))
(let (($generated@@241  (=> (and ($generated@@198 $generated@@197) ($generated@@199 $generated@@197)) (=> (and (and ($generated@@69 $generated@@70 $generated@@200 ($generated@@71 $generated)) ($generated@@77 $generated@@70 $generated@@200 ($generated@@71 $generated) $generated@@197)) true) (=> (and (and (and ($generated@@69 $generated@@70 $generated@@201 ($generated@@71 $generated)) ($generated@@77 $generated@@70 $generated@@201 ($generated@@71 $generated) $generated@@197)) true) (and (= 0 $generated@@202) (= (ControlFlow 0 30) 29))) $generated@@240)))))
$generated@@241)))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 24) (- 25))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
