(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@72 (Int) Int)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@103 (T@U) Bool)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and (or (not (= $generated@@30 $generated@@26)) (not true)) (= ($generated@@27 $generated@@30) ($generated@@25 $generated@@29))) ($generated@@28 $generated@@9 ($generated@@13 ($generated@@24 $generated@@30)) $generated))
 :pattern ( ($generated@@24 $generated@@30) ($generated@@25 $generated@@29))
)))
(assert (= ($generated@@7 $generated@@32) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@35 ($generated@@33 $generated@@34) $generated@@36) ($generated@@31 $generated@@32 $generated@@35 ($generated@@25 $generated@@34) $generated@@36))
 :pattern ( ($generated@@31 $generated@@32 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
 :pattern ( ($generated@@31 $generated@@32 $generated@@35 ($generated@@25 $generated@@34) $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@38 $generated@@37 $generated@@39) ($generated@@31 $generated@@32 $generated@@38 ($generated@@33 $generated) $generated@@39))
 :pattern ( ($generated@@31 $generated@@32 $generated@@38 $generated@@37 $generated@@39))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@41 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@41 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@41 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@7 $generated@@42) 4)) (= ($generated@@7 $generated@@43) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@7 ($generated@@44 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@44 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@44 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@44 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@66 ($generated@@25 $generated@@65) $generated@@67)  (or (= $generated@@66 $generated@@26) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@67 $generated@@66) $generated@@1)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@66 ($generated@@25 $generated@@65) $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@68 $generated@@69 $generated@@70) (forall (($generated@@71 T@U) ) (!  (=> ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@69 $generated@@71) $generated@@1))) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@70 $generated@@71) $generated@@1))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@70 $generated@@71) $generated@@1))
)))
 :pattern ( ($generated@@68 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@73 Int) ) (! (= ($generated@@72 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 $generated@@75) $generated@@75)
 :pattern ( ($generated@@74 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 ($generated@@40 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@40 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@28 $generated@@32 $generated@@81 ($generated@@33 $generated@@80))  (and ($generated@@28 $generated@@32 $generated@@81 ($generated@@25 $generated@@80)) (or (not (= $generated@@81 $generated@@26)) (not true))))
 :pattern ( ($generated@@28 $generated@@32 $generated@@81 ($generated@@33 $generated@@80)))
 :pattern ( ($generated@@28 $generated@@32 $generated@@81 ($generated@@25 $generated@@80)))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (!  (=> ($generated@@68 $generated@@82 $generated@@83) (=> ($generated@@31 $generated@@86 $generated@@84 $generated@@85 $generated@@82) ($generated@@31 $generated@@86 $generated@@84 $generated@@85 $generated@@83)))
 :pattern ( ($generated@@68 $generated@@82 $generated@@83) ($generated@@31 $generated@@86 $generated@@84 $generated@@85 $generated@@82))
)))
(assert (forall (($generated@@88 T@U) ) (!  (and (= ($generated@@23 ($generated@@25 $generated@@88)) $generated@@2) (= ($generated@@87 ($generated@@25 $generated@@88)) $generated@@5))
 :pattern ( ($generated@@25 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ) (!  (and (= ($generated@@23 ($generated@@33 $generated@@89)) $generated@@3) (= ($generated@@87 ($generated@@33 $generated@@89)) $generated@@5))
 :pattern ( ($generated@@33 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@28 $generated@@32 $generated@@91 ($generated@@25 $generated@@90))  (or (= $generated@@91 $generated@@26) (= ($generated@@27 $generated@@91) ($generated@@25 $generated@@90))))
 :pattern ( ($generated@@28 $generated@@32 $generated@@91 ($generated@@25 $generated@@90)))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@28 $generated@@32 $generated@@92 $generated@@37)  (and ($generated@@28 $generated@@32 $generated@@92 ($generated@@33 $generated)) (= ($generated@@24 $generated@@92) ($generated@@72 10))))
 :pattern ( ($generated@@28 $generated@@32 $generated@@92 $generated@@37))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or (not (= $generated@@93 $generated@@95)) (not true)) (=> (and ($generated@@68 $generated@@93 $generated@@94) ($generated@@68 $generated@@94 $generated@@95)) ($generated@@68 $generated@@93 $generated@@95)))
 :pattern ( ($generated@@68 $generated@@93 $generated@@94) ($generated@@68 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (! (<= 0 ($generated@@24 $generated@@96))
 :pattern ( ($generated@@24 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@97 ($generated@@25 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@25 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@99 ($generated@@33 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@33 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@40 $generated@@102 ($generated@@77 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@77 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and (and ($generated@@103 $generated@@105) (and (or (not (= $generated@@106 $generated@@26)) (not true)) (= ($generated@@27 $generated@@106) ($generated@@25 $generated@@104)))) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@105 $generated@@106) $generated@@1)))) ($generated@@31 $generated@@9 ($generated@@13 ($generated@@24 $generated@@106)) $generated $generated@@105))
 :pattern ( ($generated@@24 $generated@@106) ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@105 $generated@@106) $generated@@1)) ($generated@@25 $generated@@104))
)))
(assert  (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@107 $generated@@110 $generated@@111 $generated@@112 ($generated@@109 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@115 $generated@@116) $generated@@113)
 :weight 0
)) (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@107 $generated@@117 $generated@@118 $generated@@119 ($generated@@109 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@107 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@107 $generated@@126 $generated@@127 $generated@@128 ($generated@@109 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@107 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Bool) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@12 ($generated@@107 $generated@@32 $generated@@42 $generated@@8 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))  (=> (and (or (not (= $generated@@139 $generated@@135)) (not true)) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@136 $generated@@139) $generated@@137)))) $generated@@138))
 :pattern ( ($generated@@107 $generated@@32 $generated@@42 $generated@@8 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@103 ($generated@@45 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@141 $generated@@142 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@141 $generated@@142) $generated@@143 $generated@@144))) ($generated@@68 $generated@@141 ($generated@@45 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@141 $generated@@142 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@141 $generated@@142) $generated@@143 $generated@@144))))
 :pattern ( ($generated@@45 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@141 $generated@@142 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@141 $generated@@142) $generated@@143 $generated@@144)))
)))
(assert (= ($generated@@23 $generated@@37) $generated@@4))
(assert (= ($generated@@87 $generated@@37) $generated@@6))
(assert (forall (($generated@@145 Int) ) (! (= ($generated@@77 $generated@@9 ($generated@@13 ($generated@@72 $generated@@145))) ($generated@@74 $generated@@43 ($generated@@77 $generated@@9 ($generated@@13 $generated@@145))))
 :pattern ( ($generated@@77 $generated@@9 ($generated@@13 ($generated@@72 $generated@@145))))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@77 $generated@@147 ($generated@@74 $generated@@147 $generated@@146)) ($generated@@74 $generated@@43 ($generated@@77 $generated@@147 $generated@@146)))
 :pattern ( ($generated@@77 $generated@@147 ($generated@@74 $generated@@147 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! ($generated@@31 $generated@@9 $generated@@149 $generated $generated@@148)
 :pattern ( ($generated@@31 $generated@@9 $generated@@149 $generated $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (! ($generated@@28 $generated@@9 $generated@@150 $generated)
 :pattern ( ($generated@@28 $generated@@9 $generated@@150 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@164  (=> (and (and (and (and (and (not ($generated@@12 ($generated@@74 $generated@@8 ($generated@@11 true)))) (not ($generated@@12 ($generated@@74 $generated@@8 ($generated@@11 true))))) (not ($generated@@12 ($generated@@74 $generated@@8 ($generated@@11 true))))) (not ($generated@@12 ($generated@@74 $generated@@8 ($generated@@11 true))))) (not ($generated@@12 ($generated@@74 $generated@@8 ($generated@@11 true))))) (= (ControlFlow 0 12) (- 0 11))) false)))
(let (($generated@@165  (=> (= (ControlFlow 0 10) (- 0 9)) ($generated@@28 $generated@@32 $generated@@26 $generated@@37))))
(let (($generated@@166  (=> (= (ControlFlow 0 8) (- 0 7)) ($generated@@28 $generated@@32 $generated@@151 $generated@@37))))
(let (($generated@@167  (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@28 $generated@@32 $generated@@152 $generated@@37))))
(let (($generated@@168  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@28 $generated@@32 $generated@@151 $generated@@37))))
(let (($generated@@169  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@28 $generated@@32 $generated@@152 $generated@@37))))
(let (($generated@@170  (=> (= $generated@@153 ($generated@@108 $generated@@26 $generated@@154 $generated@@1 false)) (and (=> (= (ControlFlow 0 13) (- 0 15)) (<= 0 ($generated@@72 8))) (=> (<= 0 ($generated@@72 8)) (=> (and (and (and (or (not (= $generated@@152 $generated@@26)) (not true)) ($generated@@28 $generated@@32 $generated@@152 ($generated@@25 $generated))) (not ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@154 $generated@@152) $generated@@1))))) (and (and (= ($generated@@24 $generated@@152) ($generated@@72 8)) (= $generated@@155 ($generated@@45 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@154 $generated@@152 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@154 $generated@@152) $generated@@1 ($generated@@77 $generated@@8 ($generated@@11 true)))))) (and ($generated@@103 $generated@@155) ($generated@@156 $generated@@155)))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (<= 0 ($generated@@72 10))) (=> (<= 0 ($generated@@72 10)) (=> (and (and (and (or (not (= $generated@@151 $generated@@26)) (not true)) ($generated@@28 $generated@@32 $generated@@151 ($generated@@25 $generated))) (not ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@155 $generated@@151) $generated@@1))))) (and (and (= ($generated@@24 $generated@@151) ($generated@@72 10)) (= $generated@@157 ($generated@@45 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@155 $generated@@151 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@155 $generated@@151) $generated@@1 ($generated@@77 $generated@@8 ($generated@@11 true)))))) (and ($generated@@103 $generated@@157) ($generated@@156 $generated@@157)))) (and (and (and (and (and (=> (= (ControlFlow 0 13) 2) $generated@@169) (=> (= (ControlFlow 0 13) 4) $generated@@168)) (=> (= (ControlFlow 0 13) 6) $generated@@167)) (=> (= (ControlFlow 0 13) 8) $generated@@166)) (=> (= (ControlFlow 0 13) 10) $generated@@165)) (=> (= (ControlFlow 0 13) 12) $generated@@164)))))))))))
(let (($generated@@171  (=> (and ($generated@@103 $generated@@154) ($generated@@156 $generated@@154)) (=> (and (and (and ($generated@@28 $generated@@32 $generated@@158 ($generated@@33 $generated)) ($generated@@31 $generated@@32 $generated@@158 ($generated@@33 $generated) $generated@@154)) true) (and (and ($generated@@28 $generated@@32 $generated@@159 ($generated@@33 $generated)) ($generated@@31 $generated@@32 $generated@@159 ($generated@@33 $generated) $generated@@154)) true)) (=> (and (and (and (and ($generated@@28 $generated@@32 $generated@@160 ($generated@@25 $generated)) ($generated@@31 $generated@@32 $generated@@160 ($generated@@25 $generated) $generated@@154)) true) (and (and ($generated@@28 $generated@@32 $generated@@161 ($generated@@25 $generated)) ($generated@@31 $generated@@32 $generated@@161 ($generated@@25 $generated) $generated@@154)) true)) (and (and (and ($generated@@28 $generated@@32 $generated@@162 ($generated@@25 $generated)) ($generated@@31 $generated@@32 $generated@@162 ($generated@@25 $generated) $generated@@154)) true) (and (= 1 $generated@@163) (= (ControlFlow 0 16) 13)))) $generated@@170)))))
$generated@@171)))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 10) (- 9))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
