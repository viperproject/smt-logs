(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 (T@U T@U) T@U)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@85 (Int) Int)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated@@1) 0))
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (= ($generated@@29 $generated@@1) $generated@@2))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and (or (not (= $generated@@36 $generated@@32)) (not true)) (= ($generated@@33 $generated@@36) ($generated@@31 $generated@@35))) ($generated@@34 $generated@@13 ($generated@@17 ($generated@@30 $generated@@36)) $generated))
 :pattern ( ($generated@@30 $generated@@36) ($generated@@31 $generated@@35))
)))
(assert (= ($generated@@11 $generated@@38) 3))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@41 ($generated@@39 $generated@@40) $generated@@42) ($generated@@37 $generated@@38 $generated@@41 ($generated@@31 $generated@@40) $generated@@42))
 :pattern ( ($generated@@37 $generated@@38 $generated@@41 ($generated@@39 $generated@@40) $generated@@42))
 :pattern ( ($generated@@37 $generated@@38 $generated@@41 ($generated@@31 $generated@@40) $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@34 $generated@@38 $generated@@44 $generated@@43)  (or (= $generated@@44 $generated@@32) (= ($generated@@33 $generated@@44) $generated@@43)))
 :pattern ( ($generated@@34 $generated@@38 $generated@@44 $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@46 $generated@@45 $generated@@47) ($generated@@37 $generated@@38 $generated@@46 $generated@@43 $generated@@47))
 :pattern ( ($generated@@37 $generated@@38 $generated@@46 $generated@@45 $generated@@47))
 :pattern ( ($generated@@37 $generated@@38 $generated@@46 $generated@@43 $generated@@47))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@49 $generated@@56 $generated@@57 ($generated@@53 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@60) $generated@@58)
 :weight 0
)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (= $generated@@65 $generated@@66) (= ($generated@@49 $generated@@61 $generated@@62 ($generated@@53 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@66) ($generated@@49 $generated@@61 $generated@@62 $generated@@64 $generated@@66)))
 :weight 0
))) (= ($generated@@11 $generated@@50) 4)) (= ($generated@@11 $generated@@51) 5)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (= ($generated@@11 ($generated@@52 $generated@@67 $generated@@68)) 6))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@54 ($generated@@52 $generated@@69 $generated@@70)) $generated@@69)
 :pattern ( ($generated@@52 $generated@@69 $generated@@70))
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@52 $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@74 ($generated@@31 $generated@@73) $generated@@75)  (or (= $generated@@74 $generated@@32) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@75 $generated@@74) $generated@@1)))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@74 ($generated@@31 $generated@@73) $generated@@75))
)))
(assert (= ($generated@@27 $generated@@76) 0))
(assert (= ($generated@@77 $generated@@5 $generated@@10) $generated@@76))
(assert  (not ($generated@@78 $generated@@76)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@79 $generated@@43 $generated@@80)  (or (= $generated@@79 $generated@@32) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@80 $generated@@79) $generated@@1)))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@79 $generated@@43 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@81 $generated@@82 $generated@@83) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@82 $generated@@84) $generated@@1))) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@83 $generated@@84) $generated@@1))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@83 $generated@@84) $generated@@1))
)))
 :pattern ( ($generated@@81 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 Int) ) (! (= ($generated@@85 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 $generated@@88) $generated@@88)
 :pattern ( ($generated@@87 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 ($generated@@48 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@48 $generated@@92 $generated@@91))
)))
(assert ($generated@@78 $generated@@1))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@34 $generated@@38 $generated@@94 ($generated@@39 $generated@@93))  (and ($generated@@34 $generated@@38 $generated@@94 ($generated@@31 $generated@@93)) (or (not (= $generated@@94 $generated@@32)) (not true))))
 :pattern ( ($generated@@34 $generated@@38 $generated@@94 ($generated@@39 $generated@@93)))
 :pattern ( ($generated@@34 $generated@@38 $generated@@94 ($generated@@31 $generated@@93)))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (!  (=> ($generated@@81 $generated@@95 $generated@@96) (=> ($generated@@37 $generated@@99 $generated@@97 $generated@@98 $generated@@95) ($generated@@37 $generated@@99 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@81 $generated@@95 $generated@@96) ($generated@@37 $generated@@99 $generated@@97 $generated@@98 $generated@@95))
)))
(assert  (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@100 $generated@@103 $generated@@104 $generated@@105 ($generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@100 $generated@@110 $generated@@111 $generated@@112 ($generated@@102 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@100 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@100 $generated@@119 $generated@@120 $generated@@121 ($generated@@102 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@100 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@16 ($generated@@100 $generated@@38 $generated@@50 $generated@@12 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))  (=> (and (or (not (= $generated@@134 $generated@@128)) (not true)) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@129 $generated@@134) $generated@@130)))) (or (or (= $generated@@134 $generated@@131) (= $generated@@134 $generated@@132)) (= $generated@@134 $generated@@133))))
 :pattern ( ($generated@@100 $generated@@38 $generated@@50 $generated@@12 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (and (= ($generated@@28 ($generated@@31 $generated@@137)) $generated@@3) (= ($generated@@136 ($generated@@31 $generated@@137)) $generated@@8))
 :pattern ( ($generated@@31 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (!  (and (= ($generated@@28 ($generated@@39 $generated@@138)) $generated@@4) (= ($generated@@136 ($generated@@39 $generated@@138)) $generated@@8))
 :pattern ( ($generated@@39 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and ($generated@@139 $generated@@140) (and (or (not (= $generated@@141 $generated@@32)) (not true)) (= ($generated@@33 $generated@@141) $generated@@43))) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@140 $generated@@141) $generated@@1)))) ($generated@@37 $generated@@38 ($generated@@48 $generated@@38 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@140 $generated@@141) $generated@@76)) ($generated@@39 $generated) $generated@@140))
 :pattern ( ($generated@@48 $generated@@38 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@140 $generated@@141) $generated@@76)))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@34 $generated@@38 $generated@@143 ($generated@@31 $generated@@142))  (or (= $generated@@143 $generated@@32) (= ($generated@@33 $generated@@143) ($generated@@31 $generated@@142))))
 :pattern ( ($generated@@34 $generated@@38 $generated@@143 ($generated@@31 $generated@@142)))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@34 $generated@@38 $generated@@144 $generated@@45)  (and ($generated@@34 $generated@@38 $generated@@144 $generated@@43) (or (not (= $generated@@144 $generated@@32)) (not true))))
 :pattern ( ($generated@@34 $generated@@38 $generated@@144 $generated@@45))
 :pattern ( ($generated@@34 $generated@@38 $generated@@144 $generated@@43))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (or (not (= $generated@@145 $generated@@147)) (not true)) (=> (and ($generated@@81 $generated@@145 $generated@@146) ($generated@@81 $generated@@146 $generated@@147)) ($generated@@81 $generated@@145 $generated@@147)))
 :pattern ( ($generated@@81 $generated@@145 $generated@@146) ($generated@@81 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (and (= ($generated@@148 ($generated@@77 $generated@@149 $generated@@150)) $generated@@149) (= ($generated@@29 ($generated@@77 $generated@@149 $generated@@150)) $generated@@150))
 :pattern ( ($generated@@77 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (! (<= 0 ($generated@@30 $generated@@151))
 :pattern ( ($generated@@30 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@152 ($generated@@31 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@31 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@154 ($generated@@39 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@39 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@48 $generated@@157 ($generated@@90 $generated@@157 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@90 $generated@@157 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and ($generated@@139 $generated@@159) (and (or (not (= $generated@@160 $generated@@32)) (not true)) (= ($generated@@33 $generated@@160) ($generated@@31 $generated@@158)))) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@159 $generated@@160) $generated@@1)))) ($generated@@37 $generated@@13 ($generated@@17 ($generated@@30 $generated@@160)) $generated $generated@@159))
 :pattern ( ($generated@@30 $generated@@160) ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@159 $generated@@160) $generated@@1)) ($generated@@31 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and ($generated@@139 $generated@@161) (and (or (not (= $generated@@162 $generated@@32)) (not true)) (= ($generated@@33 $generated@@162) $generated@@43))) ($generated@@34 $generated@@38 ($generated@@48 $generated@@38 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@161 $generated@@162) $generated@@76)) ($generated@@39 $generated)))
 :pattern ( ($generated@@48 $generated@@38 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@161 $generated@@162) $generated@@76)))
)))
(assert (= ($generated@@28 $generated@@43) $generated@@6))
(assert (= ($generated@@136 $generated@@43) $generated@@9))
(assert (= ($generated@@28 $generated@@45) $generated@@7))
(assert (= ($generated@@136 $generated@@45) $generated@@9))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@90 $generated@@13 ($generated@@17 ($generated@@85 $generated@@163))) ($generated@@87 $generated@@51 ($generated@@90 $generated@@13 ($generated@@17 $generated@@163))))
 :pattern ( ($generated@@90 $generated@@13 ($generated@@17 ($generated@@85 $generated@@163))))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@90 $generated@@165 ($generated@@87 $generated@@165 $generated@@164)) ($generated@@87 $generated@@51 ($generated@@90 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@90 $generated@@165 ($generated@@87 $generated@@165 $generated@@164)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! ($generated@@37 $generated@@13 $generated@@167 $generated $generated@@166)
 :pattern ( ($generated@@37 $generated@@13 $generated@@167 $generated $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! ($generated@@34 $generated@@13 $generated@@168 $generated)
 :pattern ( ($generated@@34 $generated@@13 $generated@@168 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@175  (=> (= $generated@@169 ($generated@@101 $generated@@32 $generated@@170 $generated@@1 $generated@@171 ($generated@@48 $generated@@38 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@170 $generated@@171) $generated@@76)) $generated@@172)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@172 $generated@@32)) (not true))) (=> (or (not (= $generated@@172 $generated@@32)) (not true)) (=> (and (<= ($generated@@85 10) ($generated@@30 $generated@@172)) (= (ControlFlow 0 2) (- 0 1))) (or (not (= ($generated@@48 $generated@@38 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@170 $generated@@171) $generated@@76)) $generated@@32)) (not true))))))))
(let (($generated@@176  (=> (and (and (and ($generated@@139 $generated@@170) ($generated@@173 $generated@@170)) (and (or (not (= $generated@@171 $generated@@32)) (not true)) (and ($generated@@34 $generated@@38 $generated@@171 $generated@@45) ($generated@@37 $generated@@38 $generated@@171 $generated@@45 $generated@@170)))) (and (and ($generated@@34 $generated@@38 $generated@@172 ($generated@@39 $generated)) ($generated@@37 $generated@@38 $generated@@172 ($generated@@39 $generated) $generated@@170)) (and (= 0 $generated@@174) (= (ControlFlow 0 4) 2)))) $generated@@175)))
$generated@@176)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
