(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T T@T) T@T)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@84 (Int) Int)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated@@1) 0))
(assert (= ($generated@@30 $generated) $generated@@0))
(assert (= ($generated@@31 $generated@@1) $generated@@2))
(assert (= ($generated@@13 $generated@@33) 3))
(assert (forall (($generated@@37 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@37 $generated@@34)  (or (= $generated@@37 $generated@@35) (= ($generated@@36 $generated@@37) $generated@@34)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@37 $generated@@34))
)))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@39 $generated@@38)  (or (= $generated@@39 $generated@@35) (= ($generated@@36 $generated@@39) $generated@@38)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@39 $generated@@38))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 $generated@@33 $generated@@42 $generated@@41 $generated@@43) ($generated@@40 $generated@@33 $generated@@42 $generated@@34 $generated@@43))
 :pattern ( ($generated@@40 $generated@@33 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@40 $generated@@33 $generated@@42 $generated@@34 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@40 $generated@@33 $generated@@45 $generated@@44 $generated@@46) ($generated@@40 $generated@@33 $generated@@45 $generated@@38 $generated@@46))
 :pattern ( ($generated@@40 $generated@@33 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@40 $generated@@33 $generated@@45 $generated@@38 $generated@@46))
)))
(assert (= ($generated@@29 $generated@@47) 0))
(assert (= ($generated@@48 $generated@@7 $generated@@11) $generated@@47))
(assert  (not ($generated@@49 $generated@@47)))
(assert (= ($generated@@29 $generated@@50) 0))
(assert (= ($generated@@48 $generated@@6 $generated@@12) $generated@@50))
(assert  (not ($generated@@49 $generated@@50)))
(assert  (and (and (and (and (and (and (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@52 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@52 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@52 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@13 $generated@@53) 4)) (= ($generated@@13 $generated@@54) 5)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@13 ($generated@@55 $generated@@70 $generated@@71)) 6))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@55 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@55 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@55 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@55 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@40 $generated@@33 $generated@@76 $generated@@34 $generated@@77)  (or (= $generated@@76 $generated@@35) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@77 $generated@@76) $generated@@1)))))
 :pattern ( ($generated@@40 $generated@@33 $generated@@76 $generated@@34 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@40 $generated@@33 $generated@@78 $generated@@38 $generated@@79)  (or (= $generated@@78 $generated@@35) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@79 $generated@@78) $generated@@1)))))
 :pattern ( ($generated@@40 $generated@@33 $generated@@78 $generated@@38 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> ($generated@@80 $generated@@81 $generated@@82) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@81 $generated@@83) $generated@@1))) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@82 $generated@@83) $generated@@1))))
 :pattern ( ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@82 $generated@@83) $generated@@1))
)))
 :pattern ( ($generated@@80 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@84 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@86 $generated@@88 $generated@@87) $generated@@87)
 :pattern ( ($generated@@86 $generated@@88 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@51 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@51 $generated@@91 $generated@@90))
)))
(assert ($generated@@49 $generated@@1))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (and (and ($generated@@92 $generated@@93) (and (or (not (= $generated@@94 $generated@@35)) (not true)) (= ($generated@@36 $generated@@94) $generated@@34))) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@93 $generated@@94) $generated@@1)))) ($generated@@40 $generated@@15 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@93 $generated@@94) $generated@@50)) $generated $generated@@93))
 :pattern ( ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@93 $generated@@94) $generated@@50)))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (!  (=> ($generated@@80 $generated@@95 $generated@@96) (=> ($generated@@40 $generated@@99 $generated@@97 $generated@@98 $generated@@95) ($generated@@40 $generated@@99 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@80 $generated@@95 $generated@@96) ($generated@@40 $generated@@99 $generated@@97 $generated@@98 $generated@@95))
)))
(assert  (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@100 $generated@@103 $generated@@104 $generated@@105 ($generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@100 $generated@@110 $generated@@111 $generated@@112 ($generated@@102 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@100 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@100 $generated@@119 $generated@@120 $generated@@121 ($generated@@102 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@100 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@18 ($generated@@100 $generated@@33 $generated@@53 $generated@@14 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))  (=> (and (or (not (= $generated@@132 $generated@@128)) (not true)) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@129 $generated@@132) $generated@@130)))) (= $generated@@132 $generated@@131)))
 :pattern ( ($generated@@100 $generated@@33 $generated@@53 $generated@@14 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and ($generated@@92 $generated@@134) (and (or (not (= $generated@@135 $generated@@35)) (not true)) (= ($generated@@36 $generated@@135) $generated@@38))) ($generated@@32 $generated@@33 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@134 $generated@@135) $generated@@47)) $generated@@41))
 :pattern ( ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@134 $generated@@135) $generated@@47)))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@18 ($generated@@100 $generated@@33 $generated@@53 $generated@@14 ($generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@142 $generated@@143))  (=> (and (or (not (= $generated@@142 $generated@@137)) (not true)) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@138 $generated@@142) $generated@@139)))) (and (= $generated@@142 $generated@@140) (= $generated@@143 $generated@@141))))
 :pattern ( ($generated@@100 $generated@@33 $generated@@53 $generated@@14 ($generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@144 $generated@@41)  (and ($generated@@32 $generated@@33 $generated@@144 $generated@@34) (or (not (= $generated@@144 $generated@@35)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@144 $generated@@41))
 :pattern ( ($generated@@32 $generated@@33 $generated@@144 $generated@@34))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@145 $generated@@44)  (and ($generated@@32 $generated@@33 $generated@@145 $generated@@38) (or (not (= $generated@@145 $generated@@35)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@145 $generated@@44))
 :pattern ( ($generated@@32 $generated@@33 $generated@@145 $generated@@38))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and ($generated@@92 $generated@@146) (and (or (not (= $generated@@147 $generated@@35)) (not true)) (= ($generated@@36 $generated@@147) $generated@@38))) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@146 $generated@@147) $generated@@1)))) ($generated@@40 $generated@@33 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@146 $generated@@147) $generated@@47)) $generated@@41 $generated@@146))
 :pattern ( ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@146 $generated@@147) $generated@@47)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (or (not (= $generated@@148 $generated@@150)) (not true)) (=> (and ($generated@@80 $generated@@148 $generated@@149) ($generated@@80 $generated@@149 $generated@@150)) ($generated@@80 $generated@@148 $generated@@150)))
 :pattern ( ($generated@@80 $generated@@148 $generated@@149) ($generated@@80 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (and (= ($generated@@151 ($generated@@48 $generated@@152 $generated@@153)) $generated@@152) (= ($generated@@31 ($generated@@48 $generated@@152 $generated@@153)) $generated@@153))
 :pattern ( ($generated@@48 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@51 $generated@@155 ($generated@@89 $generated@@155 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@89 $generated@@155 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and ($generated@@92 $generated@@156) (and (or (not (= $generated@@157 $generated@@35)) (not true)) (= ($generated@@36 $generated@@157) $generated@@34))) ($generated@@32 $generated@@15 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@156 $generated@@157) $generated@@50)) $generated))
 :pattern ( ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@156 $generated@@157) $generated@@50)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> ($generated@@92 ($generated@@56 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@160 $generated@@161))) ($generated@@80 $generated@@158 ($generated@@56 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@160 $generated@@161))))
 :pattern ( ($generated@@56 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@160 $generated@@161)))
)))
(assert (= ($generated@@30 $generated@@41) $generated@@3))
(assert (= ($generated@@162 $generated@@41) $generated@@9))
(assert (= ($generated@@30 $generated@@44) $generated@@4))
(assert (= ($generated@@162 $generated@@44) $generated@@10))
(assert (= ($generated@@30 $generated@@34) $generated@@5))
(assert (= ($generated@@162 $generated@@34) $generated@@9))
(assert (= ($generated@@30 $generated@@38) $generated@@8))
(assert (= ($generated@@162 $generated@@38) $generated@@10))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@89 $generated@@15 ($generated@@19 ($generated@@84 $generated@@163))) ($generated@@86 $generated@@54 ($generated@@89 $generated@@15 ($generated@@19 $generated@@163))))
 :pattern ( ($generated@@89 $generated@@15 ($generated@@19 ($generated@@84 $generated@@163))))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@89 $generated@@165 ($generated@@86 $generated@@165 $generated@@164)) ($generated@@86 $generated@@54 ($generated@@89 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@89 $generated@@165 ($generated@@86 $generated@@165 $generated@@164)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! ($generated@@40 $generated@@15 $generated@@167 $generated $generated@@166)
 :pattern ( ($generated@@40 $generated@@15 $generated@@167 $generated $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! ($generated@@32 $generated@@15 $generated@@168 $generated)
 :pattern ( ($generated@@32 $generated@@15 $generated@@168 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Bool)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@182  (=> (= $generated@@169 ($generated@@101 $generated@@35 $generated@@170 $generated@@1 $generated@@171)) (and (=> (= (ControlFlow 0 2) (- 0 11)) (or (not (= $generated@@171 $generated@@35)) (not true))) (=> (or (not (= $generated@@171 $generated@@35)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (forall (($generated@@183 T@U) ($generated@@184 T@U) )  (=> (and (and (or (not (= $generated@@183 $generated@@35)) (not true)) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@170 $generated@@183) $generated@@1)))) (and (= $generated@@183 $generated@@171) (= $generated@@184 $generated@@47))) ($generated@@18 ($generated@@100 $generated@@33 $generated@@53 $generated@@14 $generated@@169 $generated@@183 $generated@@184))))) (=> (forall (($generated@@185 T@U) ($generated@@186 T@U) )  (=> (and (and (or (not (= $generated@@185 $generated@@35)) (not true)) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@170 $generated@@185) $generated@@1)))) (and (= $generated@@185 $generated@@171) (= $generated@@186 $generated@@47))) ($generated@@18 ($generated@@100 $generated@@33 $generated@@53 $generated@@14 $generated@@169 $generated@@185 $generated@@186)))) (=> (= $generated@@172 ($generated@@136 $generated@@35 $generated@@170 $generated@@1 $generated@@171 $generated@@47)) (=> (and (or (not (= $generated@@173 $generated@@35)) (not true)) ($generated@@32 $generated@@33 $generated@@173 $generated@@34)) (=> (and (and (not ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@170 $generated@@173) $generated@@1)))) (= $generated@@174 ($generated@@56 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@170 $generated@@173 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@170 $generated@@173) $generated@@1 ($generated@@89 $generated@@14 ($generated@@17 true)))))) (and ($generated@@92 $generated@@174) ($generated@@175 $generated@@174))) (and (=> (= (ControlFlow 0 2) (- 0 9)) true) (and (=> (= (ControlFlow 0 2) (- 0 8)) (or (not (= $generated@@173 $generated@@35)) (not true))) (=> (or (not (= $generated@@173 $generated@@35)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@18 ($generated@@100 $generated@@33 $generated@@53 $generated@@14 $generated@@172 $generated@@173 $generated@@50))) (=> ($generated@@18 ($generated@@100 $generated@@33 $generated@@53 $generated@@14 $generated@@172 $generated@@173 $generated@@50)) (=> (= $generated@@176 ($generated@@84 15)) (=> (and (= $generated@@177 ($generated@@56 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@174 $generated@@173 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@174 $generated@@173) $generated@@50 ($generated@@89 $generated@@15 ($generated@@19 $generated@@176))))) ($generated@@92 $generated@@177)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (not (= $generated@@171 $generated@@35)) (not true))) (=> (or (not (= $generated@@171 $generated@@35)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@18 ($generated@@100 $generated@@33 $generated@@53 $generated@@14 $generated@@172 $generated@@171 $generated@@47))) (=> ($generated@@18 ($generated@@100 $generated@@33 $generated@@53 $generated@@14 $generated@@172 $generated@@171 $generated@@47)) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (=> (and (= $generated@@178 ($generated@@56 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@177 $generated@@171 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@177 $generated@@171) $generated@@47 ($generated@@89 $generated@@33 $generated@@173)))) ($generated@@92 $generated@@178)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (or (not (= $generated@@173 $generated@@35)) (not true)) (not ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@170 $generated@@173) $generated@@1)))))) (=> (and (or (not (= $generated@@173 $generated@@35)) (not true)) (not ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@170 $generated@@173) $generated@@1))))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@18 ($generated@@86 $generated@@14 ($generated@@17 false)))))))))))))))))))))))))))))
(let (($generated@@187  (=> (and (and (and ($generated@@92 $generated@@170) ($generated@@175 $generated@@170)) (and ($generated@@32 $generated@@33 $generated@@171 $generated@@44) ($generated@@40 $generated@@33 $generated@@171 $generated@@44 $generated@@170))) (and (and (=> $generated@@179 (and ($generated@@32 $generated@@33 $generated@@180 $generated@@41) ($generated@@40 $generated@@33 $generated@@180 $generated@@41 $generated@@170))) true) (and (= 1 $generated@@181) (= (ControlFlow 0 12) 2)))) $generated@@182)))
$generated@@187)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
