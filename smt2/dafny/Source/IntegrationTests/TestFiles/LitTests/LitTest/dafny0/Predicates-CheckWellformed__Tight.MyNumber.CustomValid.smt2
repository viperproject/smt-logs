(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@81 (Int) Int)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@U) Bool)
(declare-fun $generated@@134 (T@U T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@172 (Int Int) Int)
(declare-fun $generated@@179 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert (= ($generated@@31 $generated@@4) 0))
(assert (= ($generated@@32 $generated) $generated@@1))
(assert (= ($generated@@32 $generated@@0) $generated@@2))
(assert (= ($generated@@33 $generated@@4) $generated@@5))
(assert (= ($generated@@15 $generated@@35) 3))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@39 $generated@@36)  (or (= $generated@@39 $generated@@37) (= ($generated@@38 $generated@@39) $generated@@36)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@39 $generated@@36))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@43 $generated@@41 $generated@@44) ($generated@@40 $generated@@35 $generated@@43 $generated@@42 $generated@@44))
 :pattern ( ($generated@@40 $generated@@35 $generated@@43 $generated@@41 $generated@@44))
 :pattern ( ($generated@@40 $generated@@35 $generated@@43 $generated@@42 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@46 $generated@@45 $generated@@47) ($generated@@40 $generated@@35 $generated@@46 $generated@@36 $generated@@47))
 :pattern ( ($generated@@40 $generated@@35 $generated@@46 $generated@@45 $generated@@47))
 :pattern ( ($generated@@40 $generated@@35 $generated@@46 $generated@@36 $generated@@47))
)))
(assert (= ($generated@@31 $generated@@48) 0))
(assert (= ($generated@@49 $generated@@8 $generated@@13) $generated@@48))
(assert ($generated@@50 $generated@@48))
(assert (= ($generated@@31 $generated@@51) 0))
(assert (= ($generated@@49 $generated@@8 $generated@@14) $generated@@51))
(assert  (not ($generated@@50 $generated@@51)))
(assert  (and (and (and (and (and (and (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@53 $generated@@60 $generated@@61 ($generated@@57 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@53 $generated@@65 $generated@@66 ($generated@@57 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@53 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (= ($generated@@15 $generated@@54) 4)) (= ($generated@@15 $generated@@55) 5)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@15 ($generated@@56 $generated@@71 $generated@@72)) 6))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@58 ($generated@@56 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@56 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@59 ($generated@@56 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@56 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@77 $generated@@42 $generated@@78)  (or (= $generated@@77 $generated@@37) ($generated@@20 ($generated@@52 $generated@@16 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@78 $generated@@77) $generated@@4)))))
 :pattern ( ($generated@@40 $generated@@35 $generated@@77 $generated@@42 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@79 $generated@@36 $generated@@80)  (or (= $generated@@79 $generated@@37) ($generated@@20 ($generated@@52 $generated@@16 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@80 $generated@@79) $generated@@4)))))
 :pattern ( ($generated@@40 $generated@@35 $generated@@79 $generated@@36 $generated@@80))
)))
(assert (forall (($generated@@82 Int) ) (! (= ($generated@@81 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@86 $generated@@88 ($generated@@52 $generated@@88 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@52 $generated@@88 $generated@@87))
)))
(assert (= ($generated@@15 $generated@@89) 7))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@34 $generated@@89 $generated@@93 ($generated@@90 $generated@@94)) (forall (($generated@@95 T@U) ) (!  (=> ($generated@@91 $generated@@93 $generated@@95) ($generated@@92 $generated@@95 $generated@@94))
 :pattern ( ($generated@@91 $generated@@93 $generated@@95))
)))
 :pattern ( ($generated@@34 $generated@@89 $generated@@93 ($generated@@90 $generated@@94)))
)))
(assert  (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@96 $generated@@99 $generated@@100 $generated@@101 ($generated@@98 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102) $generated@@104 $generated@@105) $generated@@102)
 :weight 0
)) (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@111 $generated@@113) (= ($generated@@96 $generated@@106 $generated@@107 $generated@@108 ($generated@@98 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@113 $generated@@114) ($generated@@96 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@113 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@96 $generated@@115 $generated@@116 $generated@@117 ($generated@@98 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@122 $generated@@123) ($generated@@96 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@122 $generated@@123)))
 :weight 0
)))))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@20 ($generated@@96 $generated@@35 $generated@@54 $generated@@16 ($generated@@97 $generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))  (=> (and (or (not (= $generated@@129 $generated@@124)) (not true)) ($generated@@20 ($generated@@52 $generated@@16 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@125 $generated@@129) $generated@@126)))) (or (= $generated@@129 $generated@@127) ($generated@@91 $generated@@128 ($generated@@86 $generated@@35 $generated@@129)))))
 :pattern ( ($generated@@96 $generated@@35 $generated@@54 $generated@@16 ($generated@@97 $generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))
)))
(assert ($generated@@50 $generated@@4))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (and ($generated@@131 $generated@@132) (and (or (not (= $generated@@133 $generated@@37)) (not true)) (= ($generated@@38 $generated@@133) $generated@@36))) ($generated@@20 ($generated@@52 $generated@@16 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@132 $generated@@133) $generated@@4)))) ($generated@@40 $generated@@17 ($generated@@52 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@132 $generated@@133) $generated@@51)) $generated@@0 $generated@@132))
 :pattern ( ($generated@@52 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@132 $generated@@133) $generated@@51)))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@134 ($generated@@86 $generated@@138 $generated@@135) $generated@@136 $generated@@137) ($generated@@40 $generated@@138 $generated@@135 $generated@@136 $generated@@137))
 :pattern ( ($generated@@134 ($generated@@86 $generated@@138 $generated@@135) $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@92 $generated@@139 $generated@@42) (and (= ($generated@@86 $generated@@35 ($generated@@52 $generated@@35 $generated@@139)) $generated@@139) ($generated@@34 $generated@@35 ($generated@@52 $generated@@35 $generated@@139) $generated@@42)))
 :pattern ( ($generated@@92 $generated@@139 $generated@@42))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> ($generated@@92 $generated@@140 $generated@@41) (and (= ($generated@@86 $generated@@35 ($generated@@52 $generated@@35 $generated@@140)) $generated@@140) ($generated@@34 $generated@@35 ($generated@@52 $generated@@35 $generated@@140) $generated@@41)))
 :pattern ( ($generated@@92 $generated@@140 $generated@@41))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> ($generated@@92 $generated@@141 $generated@@36) (and (= ($generated@@86 $generated@@35 ($generated@@52 $generated@@35 $generated@@141)) $generated@@141) ($generated@@34 $generated@@35 ($generated@@52 $generated@@35 $generated@@141) $generated@@36)))
 :pattern ( ($generated@@92 $generated@@141 $generated@@36))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> ($generated@@92 $generated@@142 $generated@@45) (and (= ($generated@@86 $generated@@35 ($generated@@52 $generated@@35 $generated@@142)) $generated@@142) ($generated@@34 $generated@@35 ($generated@@52 $generated@@35 $generated@@142) $generated@@45)))
 :pattern ( ($generated@@92 $generated@@142 $generated@@45))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@143 $generated@@41)  (and ($generated@@34 $generated@@35 $generated@@143 $generated@@42) (or (not (= $generated@@143 $generated@@37)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@143 $generated@@41))
 :pattern ( ($generated@@34 $generated@@35 $generated@@143 $generated@@42))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@144 $generated@@45)  (and ($generated@@34 $generated@@35 $generated@@144 $generated@@36) (or (not (= $generated@@144 $generated@@37)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@144 $generated@@45))
 :pattern ( ($generated@@34 $generated@@35 $generated@@144 $generated@@36))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and ($generated@@131 $generated@@145) (and (or (not (= $generated@@146 $generated@@37)) (not true)) (= ($generated@@38 $generated@@146) $generated@@36))) ($generated@@34 $generated@@89 ($generated@@52 $generated@@89 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@145 $generated@@146) $generated@@48)) ($generated@@90 $generated@@41)))
 :pattern ( ($generated@@52 $generated@@89 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@145 $generated@@146) $generated@@48)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and ($generated@@131 $generated@@147) (and (or (not (= $generated@@148 $generated@@37)) (not true)) (= ($generated@@38 $generated@@148) $generated@@36))) ($generated@@20 ($generated@@52 $generated@@16 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@4)))) ($generated@@40 $generated@@89 ($generated@@52 $generated@@89 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@48)) ($generated@@90 $generated@@41) $generated@@147))
 :pattern ( ($generated@@52 $generated@@89 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@48)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (and (= ($generated@@149 ($generated@@49 $generated@@150 $generated@@151)) $generated@@150) (= ($generated@@33 ($generated@@49 $generated@@150 $generated@@151)) $generated@@151))
 :pattern ( ($generated@@49 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@92 $generated@@152 $generated@@0) (and (= ($generated@@86 $generated@@17 ($generated@@52 $generated@@17 $generated@@152)) $generated@@152) ($generated@@34 $generated@@17 ($generated@@52 $generated@@17 $generated@@152) $generated@@0)))
 :pattern ( ($generated@@92 $generated@@152 $generated@@0))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@92 $generated@@153 $generated) (and (= ($generated@@86 $generated@@16 ($generated@@52 $generated@@16 $generated@@153)) $generated@@153) ($generated@@34 $generated@@16 ($generated@@52 $generated@@16 $generated@@153) $generated)))
 :pattern ( ($generated@@92 $generated@@153 $generated))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@92 ($generated@@86 $generated@@156 $generated@@154) $generated@@155) ($generated@@34 $generated@@156 $generated@@154 $generated@@155))
 :pattern ( ($generated@@92 ($generated@@86 $generated@@156 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@40 $generated@@89 $generated@@157 ($generated@@90 $generated@@158) $generated@@159) (forall (($generated@@160 T@U) ) (!  (=> ($generated@@91 $generated@@157 $generated@@160) ($generated@@134 $generated@@160 $generated@@158 $generated@@159))
 :pattern ( ($generated@@91 $generated@@157 $generated@@160))
)))
 :pattern ( ($generated@@40 $generated@@89 $generated@@157 ($generated@@90 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! ($generated@@34 $generated@@35 $generated@@161 $generated@@42)
 :pattern ( ($generated@@34 $generated@@35 $generated@@161 $generated@@42))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@162 ($generated@@90 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@90 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@32 ($generated@@90 $generated@@164)) $generated@@3)
 :pattern ( ($generated@@90 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@52 $generated@@166 ($generated@@86 $generated@@166 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@86 $generated@@166 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and ($generated@@131 $generated@@167) (and (or (not (= $generated@@168 $generated@@37)) (not true)) (= ($generated@@38 $generated@@168) $generated@@36))) ($generated@@34 $generated@@17 ($generated@@52 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@167 $generated@@168) $generated@@51)) $generated@@0))
 :pattern ( ($generated@@52 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@167 $generated@@168) $generated@@51)))
)))
(assert  (=> (<= 0 $generated@@169) (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (or ($generated@@171 $generated@@173 $generated@@174) (and (< 0 $generated@@169) (and ($generated@@131 $generated@@173) (and (or (not (= $generated@@174 $generated@@37)) (not true)) (and ($generated@@34 $generated@@35 $generated@@174 $generated@@45) ($generated@@40 $generated@@35 $generated@@174 $generated@@45 $generated@@173)))))) (= ($generated@@170 $generated@@173 $generated@@174) (= ($generated@@172 ($generated@@22 ($generated@@52 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@173 $generated@@174) $generated@@51))) ($generated@@81 2)) ($generated@@81 0))))
 :pattern ( ($generated@@170 $generated@@173 $generated@@174) ($generated@@131 $generated@@173))
))))
(assert (forall (($generated@@175 Int) ($generated@@176 Int) ) (! (= ($generated@@172 $generated@@175 $generated@@176) (mod $generated@@175 $generated@@176))
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@92 $generated@@177 ($generated@@90 $generated@@178)) (and (= ($generated@@86 $generated@@89 ($generated@@52 $generated@@89 $generated@@177)) $generated@@177) ($generated@@34 $generated@@89 ($generated@@52 $generated@@89 $generated@@177) ($generated@@90 $generated@@178))))
 :pattern ( ($generated@@92 $generated@@177 ($generated@@90 $generated@@178)))
)))
(assert (= ($generated@@32 $generated@@42) $generated@@6))
(assert (= ($generated@@179 $generated@@42) $generated@@11))
(assert (= ($generated@@32 $generated@@41) $generated@@7))
(assert (= ($generated@@179 $generated@@41) $generated@@11))
(assert (= ($generated@@32 $generated@@36) $generated@@9))
(assert (= ($generated@@179 $generated@@36) $generated@@12))
(assert (= ($generated@@32 $generated@@45) $generated@@10))
(assert (= ($generated@@179 $generated@@45) $generated@@12))
(assert (forall (($generated@@180 Int) ) (! (= ($generated@@86 $generated@@17 ($generated@@21 ($generated@@81 $generated@@180))) ($generated@@83 $generated@@55 ($generated@@86 $generated@@17 ($generated@@21 $generated@@180))))
 :pattern ( ($generated@@86 $generated@@17 ($generated@@21 ($generated@@81 $generated@@180))))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@T) ) (! (= ($generated@@86 $generated@@182 ($generated@@83 $generated@@182 $generated@@181)) ($generated@@83 $generated@@55 ($generated@@86 $generated@@182 $generated@@181)))
 :pattern ( ($generated@@86 $generated@@182 ($generated@@83 $generated@@182 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! ($generated@@40 $generated@@17 $generated@@184 $generated@@0 $generated@@183)
 :pattern ( ($generated@@40 $generated@@17 $generated@@184 $generated@@0 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! ($generated@@40 $generated@@16 $generated@@186 $generated $generated@@185)
 :pattern ( ($generated@@40 $generated@@16 $generated@@186 $generated $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! ($generated@@34 $generated@@17 $generated@@187 $generated@@0)
 :pattern ( ($generated@@34 $generated@@17 $generated@@187 $generated@@0))
)))
(assert (forall (($generated@@188 T@U) ) (! ($generated@@34 $generated@@16 $generated@@188 $generated)
 :pattern ( ($generated@@34 $generated@@16 $generated@@188 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Bool)
(declare-fun $generated@@194 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@195  (=> (= $generated@@189 ($generated@@20 ($generated@@96 $generated@@35 $generated@@54 $generated@@16 $generated@@190 $generated@@191 $generated@@51))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= ($generated@@81 2) 0)) (not true))) (=> (or (not (= ($generated@@81 2) 0)) (not true)) (=> (= ($generated@@170 $generated@@192 $generated@@191) (= ($generated@@172 ($generated@@22 ($generated@@52 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@192 $generated@@191) $generated@@51))) ($generated@@81 2)) ($generated@@81 0))) (=> (and ($generated@@34 $generated@@16 ($generated@@19 ($generated@@170 $generated@@192 $generated@@191)) $generated) (= (ControlFlow 0 3) (- 0 2))) $generated@@189)))))))
(let (($generated@@196 true))
(let (($generated@@197  (=> (= $generated@@190 ($generated@@97 $generated@@37 $generated@@192 $generated@@4 $generated@@191 ($generated@@52 $generated@@89 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@35 ($generated@@56 $generated@@54 $generated@@55) $generated@@192 $generated@@191) $generated@@48)))) (=> (and (= $generated@@193 ($generated@@20 ($generated@@96 $generated@@35 $generated@@54 $generated@@16 $generated@@190 $generated@@191 $generated@@48))) $generated@@193) (and (=> (= (ControlFlow 0 5) 1) $generated@@196) (=> (= (ControlFlow 0 5) 3) $generated@@195))))))
(let (($generated@@198  (=> (and ($generated@@131 $generated@@192) ($generated@@194 $generated@@192)) (=> (and (and (or (not (= $generated@@191 $generated@@37)) (not true)) (and ($generated@@34 $generated@@35 $generated@@191 $generated@@45) ($generated@@40 $generated@@35 $generated@@191 $generated@@45 $generated@@192))) (and (= 0 $generated@@169) (= (ControlFlow 0 6) 5))) $generated@@197))))
$generated@@198)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
