(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 (T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@62 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@66 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@121 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated) $generated@@0))
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@21 $generated@@6 $generated@@23 $generated@@22 $generated@@24)
 :pattern ( ($generated@@21 $generated@@6 $generated@@23 $generated@@22 $generated@@24))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (or ($generated@@27 $generated@@29 $generated@@30 $generated@@31) (and (< 0 $generated@@25) (and ($generated@@28 $generated@@30 $generated@@29) ($generated@@28 $generated@@31 $generated@@29)))) (= ($generated@@26 $generated@@29 $generated@@30 $generated@@31) $generated@@31))
 :pattern ( ($generated@@26 $generated@@29 $generated@@30 $generated@@31))
))))
(assert (forall (($generated@@33 Int) ) (! (= ($generated@@32 $generated@@33) $generated@@33)
 :pattern ( ($generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@T) ) (! (= ($generated@@34 $generated@@36 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@36 $generated@@35))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@38 $generated@@40 ($generated@@37 $generated@@40 $generated@@39)) $generated@@39)
 :pattern ( ($generated@@37 $generated@@40 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@41 $generated@@6 $generated@@42 $generated@@22) (<= ($generated@@32 0) ($generated@@11 $generated@@42)))
 :pattern ( ($generated@@41 $generated@@6 $generated@@42 $generated@@22))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@T) ) (! (= ($generated@@43 ($generated@@38 $generated@@47 $generated@@44) $generated@@45 $generated@@46) ($generated@@21 $generated@@47 $generated@@44 $generated@@45 $generated@@46))
 :pattern ( ($generated@@43 ($generated@@38 $generated@@47 $generated@@44) $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ) (!  (=> ($generated@@28 $generated@@48 $generated@@22) (and (= ($generated@@38 $generated@@6 ($generated@@37 $generated@@6 $generated@@48)) $generated@@48) ($generated@@41 $generated@@6 ($generated@@37 $generated@@6 $generated@@48) $generated@@22)))
 :pattern ( ($generated@@28 $generated@@48 $generated@@22))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (or ($generated@@27 $generated@@49 $generated@@50 $generated@@51) (and (< 0 $generated@@25) (and ($generated@@28 $generated@@50 $generated@@49) ($generated@@28 $generated@@51 $generated@@49)))) ($generated@@28 ($generated@@26 $generated@@49 $generated@@50 $generated@@51) $generated@@49))
 :pattern ( ($generated@@26 $generated@@49 $generated@@50 $generated@@51))
))))
(assert (forall (($generated@@52 T@U) ) (!  (=> ($generated@@28 $generated@@52 $generated) (and (= ($generated@@38 $generated@@6 ($generated@@37 $generated@@6 $generated@@52)) $generated@@52) ($generated@@41 $generated@@6 ($generated@@37 $generated@@6 $generated@@52) $generated)))
 :pattern ( ($generated@@28 $generated@@52 $generated))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@28 ($generated@@38 $generated@@55 $generated@@53) $generated@@54) ($generated@@41 $generated@@55 $generated@@53 $generated@@54))
 :pattern ( ($generated@@28 ($generated@@38 $generated@@55 $generated@@53) $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@37 $generated@@57 ($generated@@38 $generated@@57 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@38 $generated@@57 $generated@@56))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@58 $generated@@69 $generated@@70 $generated@@71 ($generated@@65 $generated@@69 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@75 $generated@@72) $generated@@74 $generated@@75) $generated@@72)
 :weight 0
)) (and (forall (($generated@@76 T@T) ($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (or (= $generated@@81 $generated@@83) (= ($generated@@58 $generated@@76 $generated@@77 $generated@@78 ($generated@@65 $generated@@76 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@82 $generated@@79) $generated@@83 $generated@@84) ($generated@@58 $generated@@76 $generated@@77 $generated@@78 $generated@@80 $generated@@83 $generated@@84)))
 :weight 0
)) (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (or (= $generated@@91 $generated@@93) (= ($generated@@58 $generated@@85 $generated@@86 $generated@@87 ($generated@@65 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@90 $generated@@91 $generated@@88) $generated@@92 $generated@@93) ($generated@@58 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@92 $generated@@93)))
 :weight 0
)))) (= ($generated@@4 $generated@@59) 3)) (= ($generated@@4 $generated@@60) 4)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@62 $generated@@94 $generated@@95 ($generated@@66 $generated@@94 $generated@@95 $generated@@97 $generated@@98 $generated@@96) $generated@@98) $generated@@96)
 :weight 0
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (or (= $generated@@103 $generated@@104) (= ($generated@@62 $generated@@99 $generated@@100 ($generated@@66 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@101) $generated@@104) ($generated@@62 $generated@@99 $generated@@100 $generated@@102 $generated@@104)))
 :weight 0
))) (= ($generated@@4 $generated@@63) 5)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (= ($generated@@4 ($generated@@64 $generated@@105 $generated@@106)) 6))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@64 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@68 ($generated@@64 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@64 $generated@@109 $generated@@110))
))))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 Bool) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@9 ($generated@@58 $generated@@59 $generated@@60 $generated@@5 ($generated@@61 $generated@@111 $generated@@112 $generated@@113 $generated@@114) $generated@@115 $generated@@116))  (=> (and (or (not (= $generated@@115 $generated@@111)) (not true)) ($generated@@9 ($generated@@37 $generated@@5 ($generated@@62 $generated@@60 $generated@@63 ($generated@@62 $generated@@59 ($generated@@64 $generated@@60 $generated@@63) $generated@@112 $generated@@115) $generated@@113)))) $generated@@114))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 $generated@@5 ($generated@@61 $generated@@111 $generated@@112 $generated@@113 $generated@@114) $generated@@115 $generated@@116))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (or ($generated@@27 $generated@@117 ($generated@@34 $generated@@63 $generated@@118) ($generated@@34 $generated@@63 $generated@@119)) (and (< 0 $generated@@25) (and ($generated@@28 $generated@@118 $generated@@117) ($generated@@28 $generated@@119 $generated@@117)))) (= ($generated@@26 $generated@@117 ($generated@@34 $generated@@63 $generated@@118) ($generated@@34 $generated@@63 $generated@@119)) ($generated@@34 $generated@@63 $generated@@119)))
 :weight 3
 :pattern ( ($generated@@26 $generated@@117 ($generated@@34 $generated@@63 $generated@@118) ($generated@@34 $generated@@63 $generated@@119)))
))))
(assert (= ($generated@@20 $generated@@22) $generated@@2))
(assert (= ($generated@@120 $generated@@22) $generated@@3))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (and (or ($generated@@27 $generated@@123 $generated@@124 $generated@@125) (and (< 0 $generated@@25) (and (and ($generated@@28 $generated@@124 $generated@@123) ($generated@@43 $generated@@124 $generated@@123 $generated@@122)) (and ($generated@@28 $generated@@125 $generated@@123) ($generated@@43 $generated@@125 $generated@@123 $generated@@122))))) ($generated@@121 $generated@@122)) ($generated@@43 ($generated@@26 $generated@@123 $generated@@124 $generated@@125) $generated@@123 $generated@@122))
 :pattern ( ($generated@@43 ($generated@@26 $generated@@123 $generated@@124 $generated@@125) $generated@@123 $generated@@122))
))))
(assert (forall (($generated@@126 Int) ) (! (= ($generated@@38 $generated@@6 ($generated@@10 ($generated@@32 $generated@@126))) ($generated@@34 $generated@@63 ($generated@@38 $generated@@6 ($generated@@10 $generated@@126))))
 :pattern ( ($generated@@38 $generated@@6 ($generated@@10 ($generated@@32 $generated@@126))))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@38 $generated@@128 ($generated@@34 $generated@@128 $generated@@127)) ($generated@@34 $generated@@63 ($generated@@38 $generated@@128 $generated@@127)))
 :pattern ( ($generated@@38 $generated@@128 ($generated@@34 $generated@@128 $generated@@127)))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! ($generated@@21 $generated@@6 $generated@@130 $generated $generated@@129)
 :pattern ( ($generated@@21 $generated@@6 $generated@@130 $generated $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! ($generated@@41 $generated@@6 $generated@@131 $generated)
 :pattern ( ($generated@@41 $generated@@6 $generated@@131 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 () T@U)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 () Int)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 () Int)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 () Int)
(declare-fun $generated@@141 () Int)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@154  (=> (and (and (and (and (not ($generated@@9 ($generated@@34 $generated@@5 ($generated@@8 true)))) (not ($generated@@9 ($generated@@34 $generated@@5 ($generated@@8 true))))) (not ($generated@@9 ($generated@@34 $generated@@5 ($generated@@8 true))))) (not ($generated@@9 ($generated@@34 $generated@@5 ($generated@@8 true))))) (= (ControlFlow 0 5) (- 0 4))) false)))
(let (($generated@@155  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@156  (=> (= (ControlFlow 0 6) 2) $generated@@155)))
(let (($generated@@157  (=> (and ($generated@@21 $generated@@6 ($generated@@10 $generated@@132) $generated $generated@@133) (= $generated@@134 ($generated@@32 (- 0 4)))) (=> (and (and ($generated@@21 $generated@@6 ($generated@@10 $generated@@134) $generated $generated@@133) ($generated@@27 $generated ($generated@@38 $generated@@6 ($generated@@10 $generated@@132)) ($generated@@38 $generated@@6 ($generated@@10 ($generated@@32 (- 0 4)))))) (and ($generated@@27 $generated ($generated@@38 $generated@@6 ($generated@@10 $generated@@132)) ($generated@@38 $generated@@6 ($generated@@10 ($generated@@32 (- 0 4))))) (= $generated@@135 ($generated@@11 ($generated@@37 $generated@@6 ($generated@@26 $generated ($generated@@38 $generated@@6 ($generated@@10 $generated@@132)) ($generated@@38 $generated@@6 ($generated@@10 ($generated@@32 (- 0 4)))))))))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (<= ($generated@@32 0) $generated@@135)) (=> (<= ($generated@@32 0) $generated@@135) (=> (= (ControlFlow 0 15) 6) $generated@@156)))))))
(let (($generated@@158  (=> (and ($generated@@21 $generated@@6 ($generated@@10 $generated@@132) $generated $generated@@133) (= $generated@@136 ($generated@@32 (- 0 4)))) (=> (and (and ($generated@@21 $generated@@6 ($generated@@10 $generated@@136) $generated $generated@@133) ($generated@@27 $generated ($generated@@38 $generated@@6 ($generated@@10 $generated@@132)) ($generated@@38 $generated@@6 ($generated@@10 ($generated@@32 (- 0 4)))))) (and ($generated@@27 $generated ($generated@@38 $generated@@6 ($generated@@10 $generated@@132)) ($generated@@38 $generated@@6 ($generated@@10 ($generated@@32 (- 0 4))))) (= $generated@@137 ($generated@@11 ($generated@@37 $generated@@6 ($generated@@26 $generated ($generated@@38 $generated@@6 ($generated@@10 $generated@@132)) ($generated@@38 $generated@@6 ($generated@@10 ($generated@@32 (- 0 4)))))))))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (<= ($generated@@32 0) $generated@@137)) (=> (<= ($generated@@32 0) $generated@@137) (=> (= (ControlFlow 0 13) 6) $generated@@156)))))))
(let (($generated@@159  (=> ($generated@@21 $generated@@6 ($generated@@10 $generated@@132) $generated@@22 $generated@@133) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@41 $generated@@6 ($generated@@10 ($generated@@32 4)) $generated@@22)) (=> ($generated@@41 $generated@@6 ($generated@@10 ($generated@@32 4)) $generated@@22) (=> (= $generated@@138 ($generated@@32 4)) (=> (and (and ($generated@@21 $generated@@6 ($generated@@10 $generated@@138) $generated@@22 $generated@@133) ($generated@@27 $generated@@22 ($generated@@38 $generated@@6 ($generated@@10 $generated@@132)) ($generated@@38 $generated@@6 ($generated@@10 ($generated@@32 4))))) (and ($generated@@27 $generated@@22 ($generated@@38 $generated@@6 ($generated@@10 $generated@@132)) ($generated@@38 $generated@@6 ($generated@@10 ($generated@@32 4)))) (= $generated@@139 ($generated@@11 ($generated@@37 $generated@@6 ($generated@@26 $generated@@22 ($generated@@38 $generated@@6 ($generated@@10 $generated@@132)) ($generated@@38 $generated@@6 ($generated@@10 ($generated@@32 4))))))))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (<= ($generated@@32 0) $generated@@139)) (=> (<= ($generated@@32 0) $generated@@139) (=> (= (ControlFlow 0 10) 6) $generated@@156))))))))))
(let (($generated@@160  (=> ($generated@@21 $generated@@6 ($generated@@10 $generated@@132) $generated@@22 $generated@@133) (and (=> (= (ControlFlow 0 7) (- 0 9)) ($generated@@41 $generated@@6 ($generated@@10 ($generated@@32 (- 0 4))) $generated@@22)) (=> ($generated@@41 $generated@@6 ($generated@@10 ($generated@@32 (- 0 4))) $generated@@22) (=> (= $generated@@140 ($generated@@32 (- 0 4))) (=> (and (and ($generated@@21 $generated@@6 ($generated@@10 $generated@@140) $generated@@22 $generated@@133) ($generated@@27 $generated@@22 ($generated@@38 $generated@@6 ($generated@@10 $generated@@132)) ($generated@@38 $generated@@6 ($generated@@10 ($generated@@32 (- 0 4)))))) (and ($generated@@27 $generated@@22 ($generated@@38 $generated@@6 ($generated@@10 $generated@@132)) ($generated@@38 $generated@@6 ($generated@@10 ($generated@@32 (- 0 4))))) (= $generated@@141 ($generated@@11 ($generated@@37 $generated@@6 ($generated@@26 $generated@@22 ($generated@@38 $generated@@6 ($generated@@10 $generated@@132)) ($generated@@38 $generated@@6 ($generated@@10 ($generated@@32 (- 0 4)))))))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (<= ($generated@@32 0) $generated@@141)) (=> (<= ($generated@@32 0) $generated@@141) (=> (= (ControlFlow 0 7) 6) $generated@@156))))))))))
(let (($generated@@161  (=> (< 0 $generated@@142) (and (=> (= (ControlFlow 0 17) (- 0 18)) ($generated@@41 $generated@@6 ($generated@@10 ($generated@@32 5)) $generated@@22)) (=> ($generated@@41 $generated@@6 ($generated@@10 ($generated@@32 5)) $generated@@22) (=> (= $generated@@132 ($generated@@32 5)) (and (and (and (and (=> (= (ControlFlow 0 17) 7) $generated@@160) (=> (= (ControlFlow 0 17) 10) $generated@@159)) (=> (= (ControlFlow 0 17) 13) $generated@@158)) (=> (= (ControlFlow 0 17) 15) $generated@@157)) (=> (= (ControlFlow 0 17) 5) $generated@@154))))))))
(let (($generated@@162  (=> (and (<= $generated@@142 0) (= (ControlFlow 0 3) 2)) $generated@@155)))
(let (($generated@@163  (=> (= $generated@@143 ($generated@@61 $generated@@144 $generated@@133 $generated@@1 false)) (and (=> (= (ControlFlow 0 19) 17) $generated@@161) (=> (= (ControlFlow 0 19) 3) $generated@@162)))))
(let (($generated@@164  (=> (and (and (and (and ($generated@@121 $generated@@133) ($generated@@145 $generated@@133)) (and ($generated@@28 $generated@@146 $generated@@147) ($generated@@43 $generated@@146 $generated@@147 $generated@@133))) (and (and ($generated@@28 $generated@@148 $generated@@147) ($generated@@43 $generated@@148 $generated@@147 $generated@@133)) (=> $generated@@149 (and ($generated@@28 $generated@@150 $generated@@147) ($generated@@43 $generated@@150 $generated@@147 $generated@@133))))) (and (and (and (<= ($generated@@32 0) $generated@@151) true) (and (<= ($generated@@32 0) $generated@@152) true)) (and (and (<= ($generated@@32 0) $generated@@153) true) (and (= 1 $generated@@25) (= (ControlFlow 0 20) 19))))) $generated@@163)))
$generated@@164))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 7) (- 9))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 13) (- 14))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 15) (- 16))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
