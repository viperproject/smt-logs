(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U T@U T@U) Bool)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@35 (Int) T@U)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@U) Bool)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@94 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@98 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@T T@T) T@T)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@T) T@T)
(declare-fun $generated@@104 (T@T) T@T)
(declare-fun $generated@@155 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ($generated@@25 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@23) $generated@@24 $generated@@25) (= $generated@@24 $generated@@25))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@23) $generated@@24 $generated@@25))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and ($generated@@26 $generated@@27 $generated@@28) ($generated@@26 $generated@@28 $generated@@29)) ($generated@@26 $generated@@27 $generated@@29))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28) ($generated@@26 $generated@@28 $generated@@29))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28) ($generated@@26 $generated@@27 $generated@@29))
)))
(assert (= ($generated@@30 $generated@@31) $generated@@1))
(assert (= ($generated@@30 $generated@@32) $generated@@2))
(assert (= ($generated@@30 $generated@@33) $generated@@3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (forall (($generated@@39 Int) ) (!  (=> (<= 0 $generated@@39) ($generated@@34 ($generated@@35 $generated@@39) ($generated@@22 $generated@@36) $generated@@37 $generated@@38))
 :pattern ( ($generated@@34 ($generated@@35 $generated@@39) ($generated@@22 $generated@@36) $generated@@37 $generated@@38))
)) ($generated@@21 ($generated@@22 $generated@@36) $generated@@37 $generated@@38))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@36) $generated@@37 $generated@@38))
)))
(assert (= ($generated@@5 $generated@@41) 3))
(assert ($generated@@40 $generated@@41 $generated@@31 $generated@@42))
(assert ($generated@@40 $generated@@41 $generated@@32 $generated@@42))
(assert ($generated@@40 $generated@@41 $generated@@33 $generated@@42))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (and ($generated@@26 $generated@@43 $generated@@47) ($generated@@34 $generated@@47 ($generated@@22 $generated@@44) $generated@@45 $generated@@46)) ($generated@@34 $generated@@43 ($generated@@22 $generated@@44) $generated@@45 $generated@@46))
 :pattern ( ($generated@@34 $generated@@43 ($generated@@22 $generated@@44) $generated@@45 $generated@@46) ($generated@@34 $generated@@47 ($generated@@22 $generated@@44) $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (and ($generated@@40 $generated@@41 $generated@@55 $generated@@42) ($generated@@40 $generated@@41 $generated@@56 $generated@@42)) (= ($generated@@21 ($generated@@22 $generated@@54) $generated@@55 $generated@@56)  (or (or (and ($generated@@51 $generated@@55) ($generated@@51 $generated@@56)) (and ($generated@@52 $generated@@55) ($generated@@52 $generated@@56))) (and ($generated@@53 $generated@@55) ($generated@@53 $generated@@56)))))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@54) $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@51 $generated@@57) (= ($generated@@30 $generated@@57) $generated@@1))
 :pattern ( ($generated@@51 $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@52 $generated@@58) (= ($generated@@30 $generated@@58) $generated@@2))
 :pattern ( ($generated@@52 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@53 $generated@@59) (= ($generated@@30 $generated@@59) $generated@@3))
 :pattern ( ($generated@@53 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 ($generated@@60 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@60 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@51 $generated@@64) (= $generated@@64 $generated@@31))
 :pattern ( ($generated@@51 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@52 $generated@@65) (= $generated@@65 $generated@@32))
 :pattern ( ($generated@@52 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@53 $generated@@66) (= $generated@@66 $generated@@33))
 :pattern ( ($generated@@53 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (or (not (= $generated@@67 ($generated@@35 0))) (not true)) (= ($generated@@34 $generated@@67 ($generated@@22 $generated@@68) $generated@@69 $generated@@70) ($generated@@34 $generated@@67 $generated@@68 $generated@@69 $generated@@70)))
 :pattern ( ($generated@@34 $generated@@67 ($generated@@22 $generated@@68) $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@71) $generated@@72 $generated@@73) ($generated@@21 $generated@@71 $generated@@72 $generated@@73))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@71) $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 Int) ) (!  (=> (<= 0 $generated@@76) (and ($generated@@74 ($generated@@35 $generated@@76)) (= ($generated@@75 ($generated@@35 $generated@@76)) $generated@@76)))
 :pattern ( ($generated@@35 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@77) $generated@@78 $generated@@79) (forall (($generated@@80 T@U) ) (! ($generated@@34 $generated@@80 ($generated@@22 $generated@@77) $generated@@78 $generated@@79)
 :pattern ( ($generated@@34 $generated@@80 ($generated@@22 $generated@@77) $generated@@78 $generated@@79))
)))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@77) $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (or ($generated@@26 $generated@@81 $generated@@82) (= $generated@@81 $generated@@82)) ($generated@@26 $generated@@82 $generated@@81))
 :pattern ( ($generated@@26 $generated@@81 $generated@@82) ($generated@@26 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and ($generated@@40 $generated@@41 $generated@@85 $generated@@42) ($generated@@40 $generated@@41 $generated@@86 $generated@@42)) (= ($generated@@34 $generated@@83 ($generated@@22 $generated@@84) $generated@@85 $generated@@86)  (and (=> (< 0 ($generated@@75 $generated@@83)) (or (or (and ($generated@@51 $generated@@85) ($generated@@51 $generated@@86)) (and ($generated@@52 $generated@@85) ($generated@@52 $generated@@86))) (and ($generated@@53 $generated@@85) ($generated@@53 $generated@@86)))) (=> (and (or (not (= $generated@@83 ($generated@@35 0))) (not true)) (= ($generated@@75 $generated@@83) 0)) ($generated@@21 $generated@@84 $generated@@85 $generated@@86)))))
 :pattern ( ($generated@@34 $generated@@83 ($generated@@22 $generated@@84) $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (! (<= 0 ($generated@@75 $generated@@87))
 :pattern ( ($generated@@75 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@60 $generated@@89 ($generated@@61 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@61 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (and (and (and (=> ($generated@@26 $generated@@90 $generated@@91) (or (not (= $generated@@90 $generated@@91)) (not true))) (=> (and ($generated@@74 $generated@@90) (not ($generated@@74 $generated@@91))) ($generated@@26 $generated@@90 $generated@@91))) (=> (and ($generated@@74 $generated@@90) ($generated@@74 $generated@@91)) (= ($generated@@26 $generated@@90 $generated@@91) (< ($generated@@75 $generated@@90) ($generated@@75 $generated@@91))))) (=> (and ($generated@@26 $generated@@90 $generated@@91) ($generated@@74 $generated@@91)) ($generated@@74 $generated@@90)))
 :pattern ( ($generated@@26 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@92 $generated@@93) (or (or ($generated@@51 $generated@@93) ($generated@@52 $generated@@93)) ($generated@@53 $generated@@93)))
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@94 $generated@@105 $generated@@106 $generated@@107 ($generated@@101 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@110 $generated@@111) $generated@@108)
 :weight 0
)) (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@94 $generated@@112 $generated@@113 $generated@@114 ($generated@@101 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@94 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@94 $generated@@121 $generated@@122 $generated@@123 ($generated@@101 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@94 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)))) (= ($generated@@5 $generated@@95) 4)) (= ($generated@@5 $generated@@96) 5)) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@98 $generated@@130 $generated@@131 ($generated@@102 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@132) $generated@@134) $generated@@132)
 :weight 0
))) (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@98 $generated@@135 $generated@@136 ($generated@@102 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@98 $generated@@135 $generated@@136 $generated@@138 $generated@@140)))
 :weight 0
))) (= ($generated@@5 $generated@@99) 6)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (= ($generated@@5 ($generated@@100 $generated@@141 $generated@@142)) 7))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (! (= ($generated@@103 ($generated@@100 $generated@@143 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@100 $generated@@143 $generated@@144))
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@104 ($generated@@100 $generated@@145 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@100 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 Bool) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@10 ($generated@@94 $generated@@95 $generated@@96 $generated@@6 ($generated@@97 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))  (=> (and (or (not (= $generated@@151 $generated@@147)) (not true)) ($generated@@10 ($generated@@60 $generated@@6 ($generated@@98 $generated@@96 $generated@@99 ($generated@@98 $generated@@95 ($generated@@100 $generated@@96 $generated@@99) $generated@@148 $generated@@151) $generated@@149)))) $generated@@150))
 :pattern ( ($generated@@94 $generated@@95 $generated@@96 $generated@@6 ($generated@@97 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@40 $generated@@41 $generated@@153 $generated@@42) (or (or ($generated@@51 $generated@@153) ($generated@@52 $generated@@153)) ($generated@@53 $generated@@153)))
 :pattern ( ($generated@@53 $generated@@153) ($generated@@40 $generated@@41 $generated@@153 $generated@@42))
 :pattern ( ($generated@@52 $generated@@153) ($generated@@40 $generated@@41 $generated@@153 $generated@@42))
 :pattern ( ($generated@@51 $generated@@153) ($generated@@40 $generated@@41 $generated@@153 $generated@@42))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> ($generated@@74 $generated@@154) (= $generated@@154 ($generated@@35 ($generated@@75 $generated@@154))))
 :pattern ( ($generated@@75 $generated@@154))
 :pattern ( ($generated@@74 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and ($generated@@156 $generated@@158) ($generated@@40 $generated@@41 $generated@@157 $generated@@42)) ($generated@@155 $generated@@41 $generated@@157 $generated@@42 $generated@@158))
 :pattern ( ($generated@@155 $generated@@41 $generated@@157 $generated@@42 $generated@@158))
)))
(assert (= ($generated@@159 $generated@@42) $generated@@0))
(assert (= ($generated@@160 $generated@@42) $generated@@4))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@61 $generated@@162 ($generated@@48 $generated@@162 $generated@@161)) ($generated@@48 $generated@@99 ($generated@@61 $generated@@162 $generated@@161)))
 :pattern ( ($generated@@61 $generated@@162 ($generated@@48 $generated@@162 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (= $generated@@165 $generated@@166) ($generated@@34 $generated@@163 ($generated@@22 $generated@@164) $generated@@165 $generated@@166))
 :pattern ( ($generated@@34 $generated@@163 ($generated@@22 $generated@@164) $generated@@165 $generated@@166))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@175  (=> (= (ControlFlow 0 2) (- 0 1)) (or (and ($generated@@40 $generated@@41 ($generated@@48 $generated@@41 $generated@@33) $generated@@42) (and (not ($generated@@21 ($generated@@22 ($generated@@22 $generated@@167)) $generated@@33 $generated@@31)) (not ($generated@@21 ($generated@@22 ($generated@@22 $generated@@167)) $generated@@33 $generated@@33)))) (or (and ($generated@@40 $generated@@41 ($generated@@48 $generated@@41 $generated@@32) $generated@@42) (and (not ($generated@@21 ($generated@@22 ($generated@@22 $generated@@167)) $generated@@32 $generated@@31)) (not ($generated@@21 ($generated@@22 ($generated@@22 $generated@@167)) $generated@@32 $generated@@33)))) (or (and ($generated@@40 $generated@@41 ($generated@@48 $generated@@41 $generated@@31) $generated@@42) (and (not ($generated@@21 ($generated@@22 ($generated@@22 $generated@@167)) $generated@@31 $generated@@31)) (not ($generated@@21 ($generated@@22 ($generated@@22 $generated@@167)) $generated@@31 $generated@@33)))) (exists (($generated@@176 T@U) )  (and ($generated@@40 $generated@@41 $generated@@176 $generated@@42) (and (not ($generated@@21 ($generated@@22 ($generated@@22 $generated@@167)) $generated@@176 $generated@@31)) (not ($generated@@21 ($generated@@22 ($generated@@22 $generated@@167)) $generated@@176 $generated@@33)))))))))))
(let (($generated@@177  (=> (and (and ($generated@@92 $generated@@168) (=> (not ($generated@@21 ($generated@@22 ($generated@@22 $generated@@167)) $generated@@168 $generated@@31)) ($generated@@92 $generated@@168))) (= (ControlFlow 0 4) 2)) $generated@@175)))
(let (($generated@@178  (=> (and ($generated@@21 ($generated@@22 ($generated@@22 $generated@@167)) $generated@@168 $generated@@31) (= (ControlFlow 0 6) 4)) $generated@@177)))
(let (($generated@@179  (=> (and (not ($generated@@21 ($generated@@22 ($generated@@22 $generated@@167)) $generated@@168 $generated@@31)) (= (ControlFlow 0 5) 4)) $generated@@177)))
(let (($generated@@180  (=> (and ($generated@@40 $generated@@41 $generated@@168 $generated@@42) ($generated@@155 $generated@@41 $generated@@168 $generated@@42 $generated@@169)) (and (=> (= (ControlFlow 0 7) 5) $generated@@179) (=> (= (ControlFlow 0 7) 6) $generated@@178)))))
(let (($generated@@181  (=> (and (not (and ($generated@@40 $generated@@41 $generated@@168 $generated@@42) ($generated@@155 $generated@@41 $generated@@168 $generated@@42 $generated@@169))) (= (ControlFlow 0 3) 2)) $generated@@175)))
(let (($generated@@182  (=> (= $generated@@170 ($generated@@97 $generated@@171 $generated@@169 $generated false)) (and (=> (= (ControlFlow 0 8) 7) $generated@@180) (=> (= (ControlFlow 0 8) 3) $generated@@181)))))
(let (($generated@@183  (=> (and ($generated@@156 $generated@@169) ($generated@@172 $generated@@169)) (=> (and (and ($generated@@40 $generated@@41 $generated@@173 $generated@@42) ($generated@@155 $generated@@41 $generated@@173 $generated@@42 $generated@@169)) (and (= 1 $generated@@174) (= (ControlFlow 0 9) 8))) $generated@@182))))
$generated@@183)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
