(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@T T@T) T@T)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@38 (T@T) T@T)
(declare-fun $generated@@39 (T@T) T@T)
(declare-fun $generated@@60 (Int) Int)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@125 (Int Int) Int)
(declare-fun $generated@@128 (T@U) Bool)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated@@23) $generated@@1))
(assert (= ($generated@@22 $generated@@24) $generated@@2))
(assert (= ($generated@@22 $generated@@25) $generated@@3))
(assert (= ($generated@@22 $generated@@26) $generated@@4))
(assert (= ($generated@@6 $generated@@28) 3))
(assert ($generated@@27 $generated@@28 $generated@@23 $generated@@29))
(assert ($generated@@27 $generated@@28 $generated@@24 $generated@@29))
(assert ($generated@@27 $generated@@28 $generated@@25 $generated@@29))
(assert ($generated@@27 $generated@@28 $generated@@26 $generated@@29))
(assert  (and (and (and (and (and (and (and (forall (($generated@@40 T@T) ($generated@@41 T@T) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@31 $generated@@40 $generated@@41 ($generated@@37 $generated@@40 $generated@@41 $generated@@43 $generated@@44 $generated@@42) $generated@@44) $generated@@42)
 :weight 0
)) (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (or (= $generated@@49 $generated@@50) (= ($generated@@31 $generated@@45 $generated@@46 ($generated@@37 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@50) ($generated@@31 $generated@@45 $generated@@46 $generated@@48 $generated@@50)))
 :weight 0
))) (= ($generated@@6 $generated@@32) 4)) (= ($generated@@6 $generated@@33) 5)) (= ($generated@@6 $generated@@34) 6)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (= ($generated@@6 ($generated@@35 $generated@@51 $generated@@52)) 7))) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (! (= ($generated@@38 ($generated@@35 $generated@@53 $generated@@54)) $generated@@53)
 :pattern ( ($generated@@35 $generated@@53 $generated@@54))
))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@39 ($generated@@35 $generated@@55 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@35 $generated@@55 $generated@@56))
))))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> ($generated@@30 $generated@@57 $generated@@58) (forall (($generated@@59 T@U) ) (!  (=> ($generated@@11 ($generated@@36 $generated@@7 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@57 $generated@@59) $generated))) ($generated@@11 ($generated@@36 $generated@@7 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@58 $generated@@59) $generated))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@58 $generated@@59) $generated))
)))
 :pattern ( ($generated@@30 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@61 Int) ) (! (= ($generated@@60 $generated@@61) $generated@@61)
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 $generated@@66) (= ($generated@@22 $generated@@66) $generated@@1))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 $generated@@68) (= ($generated@@22 $generated@@68) $generated@@2))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 $generated@@70) (= ($generated@@22 $generated@@70) $generated@@3))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 $generated@@72) (= ($generated@@22 $generated@@72) $generated@@4))
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@36 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@36 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@65 $generated@@76) (= $generated@@76 $generated@@23))
 :pattern ( ($generated@@65 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@67 $generated@@77) (= $generated@@77 $generated@@24))
 :pattern ( ($generated@@67 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@69 $generated@@78) (= $generated@@78 $generated@@25))
 :pattern ( ($generated@@69 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@71 $generated@@79) (= $generated@@79 $generated@@26))
 :pattern ( ($generated@@71 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (!  (=> ($generated@@30 $generated@@81 $generated@@82) (=> ($generated@@80 $generated@@85 $generated@@83 $generated@@84 $generated@@81) ($generated@@80 $generated@@85 $generated@@83 $generated@@84 $generated@@82)))
 :pattern ( ($generated@@30 $generated@@81 $generated@@82) ($generated@@80 $generated@@85 $generated@@83 $generated@@84 $generated@@81))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (or (not (= $generated@@86 $generated@@88)) (not true)) (=> (and ($generated@@30 $generated@@86 $generated@@87) ($generated@@30 $generated@@87 $generated@@88)) ($generated@@30 $generated@@86 $generated@@88)))
 :pattern ( ($generated@@30 $generated@@86 $generated@@87) ($generated@@30 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@36 $generated@@90 ($generated@@73 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@73 $generated@@90 $generated@@89))
)))
(assert  (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@91 $generated@@94 $generated@@95 $generated@@96 ($generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@99 $generated@@100 $generated@@97) $generated@@99 $generated@@100) $generated@@97)
 :weight 0
)) (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@106 $generated@@108) (= ($generated@@91 $generated@@101 $generated@@102 $generated@@103 ($generated@@93 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@108 $generated@@109) ($generated@@91 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@108 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@116 $generated@@118) (= ($generated@@91 $generated@@110 $generated@@111 $generated@@112 ($generated@@93 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@91 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)))))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 Bool) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@11 ($generated@@91 $generated@@34 $generated@@32 $generated@@7 ($generated@@92 $generated@@119 $generated@@120 $generated@@121 $generated@@122) $generated@@123 $generated@@124))  (=> (and (or (not (= $generated@@123 $generated@@119)) (not true)) ($generated@@11 ($generated@@36 $generated@@7 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@120 $generated@@123) $generated@@121)))) $generated@@122))
 :pattern ( ($generated@@91 $generated@@34 $generated@@32 $generated@@7 ($generated@@92 $generated@@119 $generated@@120 $generated@@121 $generated@@122) $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 Int) ($generated@@127 Int) ) (! (= ($generated@@125 $generated@@126 $generated@@127) (mod $generated@@126 $generated@@127))
 :pattern ( ($generated@@125 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and ($generated@@128 $generated@@130) ($generated@@27 $generated@@28 $generated@@129 $generated@@29)) ($generated@@80 $generated@@28 $generated@@129 $generated@@29 $generated@@130))
 :pattern ( ($generated@@80 $generated@@28 $generated@@129 $generated@@29 $generated@@130))
)))
(assert (= ($generated@@131 $generated@@29) $generated@@0))
(assert (= ($generated@@132 $generated@@29) $generated@@5))
(assert (= $generated@@23 ($generated@@62 $generated@@28 $generated@@23)))
(assert (= $generated@@24 ($generated@@62 $generated@@28 $generated@@24)))
(assert (= $generated@@25 ($generated@@62 $generated@@28 $generated@@25)))
(assert (= $generated@@26 ($generated@@62 $generated@@28 $generated@@26)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@133 $generated@@134) (or (or (or ($generated@@65 $generated@@134) ($generated@@67 $generated@@134)) ($generated@@69 $generated@@134)) ($generated@@71 $generated@@134)))
 :pattern ( ($generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 Int) ) (! (= ($generated@@73 $generated@@8 ($generated@@12 ($generated@@60 $generated@@135))) ($generated@@62 $generated@@33 ($generated@@73 $generated@@8 ($generated@@12 $generated@@135))))
 :pattern ( ($generated@@73 $generated@@8 ($generated@@12 ($generated@@60 $generated@@135))))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@73 $generated@@137 ($generated@@62 $generated@@137 $generated@@136)) ($generated@@62 $generated@@33 ($generated@@73 $generated@@137 $generated@@136)))
 :pattern ( ($generated@@73 $generated@@137 ($generated@@62 $generated@@137 $generated@@136)))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@138 $generated@@29) (or (or (or ($generated@@65 $generated@@138) ($generated@@67 $generated@@138)) ($generated@@69 $generated@@138)) ($generated@@71 $generated@@138)))
 :pattern ( ($generated@@71 $generated@@138) ($generated@@27 $generated@@28 $generated@@138 $generated@@29))
 :pattern ( ($generated@@69 $generated@@138) ($generated@@27 $generated@@28 $generated@@138 $generated@@29))
 :pattern ( ($generated@@67 $generated@@138) ($generated@@27 $generated@@28 $generated@@138 $generated@@29))
 :pattern ( ($generated@@65 $generated@@138) ($generated@@27 $generated@@28 $generated@@138 $generated@@29))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 () Int)
(declare-fun $generated@@141 () Int)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 () Int)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 () Bool)
(declare-fun $generated@@147 () Bool)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 38) (let (($generated@@158  (=> (and (or (not (= ($generated@@125 $generated@@139 (+ $generated@@140 1)) ($generated@@60 0))) (not true)) (= $generated@@141 (+ $generated@@139 1))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (or (<= 0 $generated@@142) (= (- 3000 $generated@@141) $generated@@142))) (=> (or (<= 0 $generated@@142) (= (- 3000 $generated@@141) $generated@@142)) (=> (= (ControlFlow 0 20) (- 0 19)) (< (- 3000 $generated@@141) $generated@@142)))))))
(let (($generated@@159 true))
(let (($generated@@160  (=> (or (not (= ($generated@@125 $generated@@139 $generated@@140) ($generated@@60 0))) (not true)) (and (=> (= (ControlFlow 0 22) (- 0 23)) (or (not (= (+ $generated@@140 1) 0)) (not true))) (=> (or (not (= (+ $generated@@140 1) 0)) (not true)) (and (=> (= (ControlFlow 0 22) 18) $generated@@159) (=> (= (ControlFlow 0 22) 20) $generated@@158)))))))
(let (($generated@@161 true))
(let (($generated@@162 true))
(let (($generated@@163  (=> (= $generated@@143 (+ $generated@@144 1)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (<= 0 $generated@@145) (= (- $generated@@140 $generated@@143) $generated@@145))) (=> (or (<= 0 $generated@@145) (= (- $generated@@140 $generated@@143) $generated@@145)) (=> (= (ControlFlow 0 7) (- 0 6)) (< (- $generated@@140 $generated@@143) $generated@@145)))))))
(let (($generated@@164  (=> (and (= ($generated@@125 $generated@@139 $generated@@140) ($generated@@60 0)) (= (ControlFlow 0 17) 7)) $generated@@163)))
(let (($generated@@165  (=> (and (< $generated@@139 3000) (= $generated@@142 (- 3000 $generated@@139))) (and (=> (= (ControlFlow 0 24) (- 0 25)) (or (not (= $generated@@140 0)) (not true))) (=> (or (not (= $generated@@140 0)) (not true)) (and (=> (= (ControlFlow 0 24) 17) $generated@@164) (=> (= (ControlFlow 0 24) 22) $generated@@160)))))))
(let (($generated@@166  (=> (and (<= 3000 $generated@@139) (= (ControlFlow 0 16) 7)) $generated@@163)))
(let (($generated@@167  (=> $generated@@146 (and (=> (= (ControlFlow 0 26) 16) $generated@@166) (=> (= (ControlFlow 0 26) 24) $generated@@165)))))
(let (($generated@@168  (and (=> (= (ControlFlow 0 27) 15) $generated@@161) (=> (= (ControlFlow 0 27) 26) $generated@@167))))
(let (($generated@@169  (=> (and (and (and (and (and (not false) (<= 0 $generated@@144)) $generated@@147) (and (<= 63 $generated@@139) (< $generated@@139 3001))) (= $generated@@148 2937)) (and (and (forall (($generated@@170 T@U) ) (!  (=> (and (or (not (= $generated@@170 $generated@@150)) (not true)) ($generated@@11 ($generated@@36 $generated@@7 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@170) $generated)))) (= ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@170) ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@170)))
 :pattern ( ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@170))
)) ($generated@@30 $generated@@149 $generated@@149)) (and (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (or (not (= $generated@@171 $generated@@150)) (not true)) ($generated@@11 ($generated@@36 $generated@@7 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@171) $generated)))) (or (= ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@171) $generated@@172) ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@171) $generated@@172)) ($generated@@11 ($generated@@91 $generated@@34 $generated@@32 $generated@@7 $generated@@151 $generated@@171 $generated@@172))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@171) $generated@@172))
)) (<= (- 3000 $generated@@139) $generated@@148)))) (and (=> (= (ControlFlow 0 28) 14) $generated@@162) (=> (= (ControlFlow 0 28) 27) $generated@@168)))))
(let (($generated@@173  (=> (and (and (= $generated@@152 $generated@@24) (= $generated@@153 ($generated@@60 63))) (and (= $generated@@148 (- 3000 $generated@@153)) (= (ControlFlow 0 29) 28))) $generated@@169)))
(let (($generated@@174  (=> (and (= $generated@@152 $generated@@26) (= (ControlFlow 0 11) 7)) $generated@@163)))
(let (($generated@@175  (=> (and (= $generated@@152 $generated@@25) (= (ControlFlow 0 10) 7)) $generated@@163)))
(let (($generated@@176  (=> (and (= $generated@@152 $generated@@23) (= (ControlFlow 0 9) 7)) $generated@@163)))
(let (($generated@@177 true))
(let (($generated@@178  (=> (or (not (= $generated@@152 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 12) 11) $generated@@174) (=> (= (ControlFlow 0 12) 5) $generated@@177)))))
(let (($generated@@179  (=> (or (not (= $generated@@152 $generated@@24)) (not true)) (and (=> (= (ControlFlow 0 13) 10) $generated@@175) (=> (= (ControlFlow 0 13) 12) $generated@@178)))))
(let (($generated@@180  (=> (or (not (= $generated@@152 $generated@@23)) (not true)) (and (=> (= (ControlFlow 0 30) 29) $generated@@173) (=> (= (ControlFlow 0 30) 13) $generated@@179)))))
(let (($generated@@181  (=> (or (not (= ($generated@@125 $generated@@144 ($generated@@60 7)) ($generated@@60 3))) (not true)) (and (=> (= (ControlFlow 0 31) 9) $generated@@176) (=> (= (ControlFlow 0 31) 30) $generated@@180)))))
(let (($generated@@182 true))
(let (($generated@@183  (=> (and (< $generated@@144 $generated@@140) (= $generated@@145 (- $generated@@140 $generated@@144))) (and (=> (= (ControlFlow 0 32) (- 0 33)) (or (not (= ($generated@@60 7) 0)) (not true))) (=> (or (not (= ($generated@@60 7) 0)) (not true)) (and (=> (= (ControlFlow 0 32) 4) $generated@@182) (=> (= (ControlFlow 0 32) 31) $generated@@181)))))))
(let (($generated@@184 true))
(let (($generated@@185  (=> $generated@@147 (and (=> (= (ControlFlow 0 34) 3) $generated@@184) (=> (= (ControlFlow 0 34) 32) $generated@@183)))))
(let (($generated@@186 true))
(let (($generated@@187  (and (=> (= (ControlFlow 0 35) 2) $generated@@186) (=> (= (ControlFlow 0 35) 34) $generated@@185))))
(let (($generated@@188 true))
(let (($generated@@189  (=> (and (not false) (<= 0 $generated@@144)) (=> (and (and (forall (($generated@@190 T@U) ) (!  (=> (and (or (not (= $generated@@190 $generated@@150)) (not true)) ($generated@@11 ($generated@@36 $generated@@7 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@190) $generated)))) (= ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@190) ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@190)))
 :pattern ( ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@190))
)) ($generated@@30 $generated@@149 $generated@@149)) (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (or (not (= $generated@@191 $generated@@150)) (not true)) ($generated@@11 ($generated@@36 $generated@@7 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@191) $generated)))) (or (= ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@191) $generated@@192) ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@191) $generated@@192)) ($generated@@11 ($generated@@91 $generated@@34 $generated@@32 $generated@@7 $generated@@151 $generated@@191 $generated@@192))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@191) $generated@@192))
)) (<= (- $generated@@140 $generated@@144) $generated@@154))) (and (=> (= (ControlFlow 0 36) 1) $generated@@188) (=> (= (ControlFlow 0 36) 35) $generated@@187))))))
(let (($generated@@193  (=> (and (and (= $generated@@151 ($generated@@92 $generated@@150 $generated@@149 $generated false)) (= $generated@@155 ($generated@@60 0))) (and (= $generated@@154 (- $generated@@140 $generated@@155)) (= (ControlFlow 0 37) 36))) $generated@@189)))
(let (($generated@@194  (=> (and ($generated@@128 $generated@@149) ($generated@@156 $generated@@149)) (=> (and (and (and (and ($generated@@27 $generated@@28 $generated@@152 $generated@@29) ($generated@@80 $generated@@28 $generated@@152 $generated@@29 $generated@@149)) ($generated@@133 $generated@@152)) (<= ($generated@@60 0) $generated@@140)) (and (= 1 $generated@@157) (= (ControlFlow 0 38) 37))) $generated@@193))))
$generated@@194))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
