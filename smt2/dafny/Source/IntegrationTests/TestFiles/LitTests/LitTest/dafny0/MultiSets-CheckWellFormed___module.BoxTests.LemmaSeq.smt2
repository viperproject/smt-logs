(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@T T@T) T@T)
(declare-fun $generated@@38 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@39 (T@T) T@T)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@65 (Int) Int)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@74 (T@T T@U T@U) Bool)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@113 (T@U Int) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@6 $generated@@24) 3))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@23 $generated@@24 $generated@@28 ($generated@@25 $generated@@27) $generated@@29) ($generated@@23 $generated@@24 $generated@@28 ($generated@@26 $generated@@27) $generated@@29))
 :pattern ( ($generated@@23 $generated@@24 $generated@@28 ($generated@@25 $generated@@27) $generated@@29))
 :pattern ( ($generated@@23 $generated@@24 $generated@@28 ($generated@@26 $generated@@27) $generated@@29))
)))
(assert (= ($generated@@30 $generated@@31) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@41 T@T) ($generated@@42 T@T) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@34 $generated@@41 $generated@@42 ($generated@@38 $generated@@41 $generated@@42 $generated@@44 $generated@@45 $generated@@43) $generated@@45) $generated@@43)
 :weight 0
)) (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (or (= $generated@@50 $generated@@51) (= ($generated@@34 $generated@@46 $generated@@47 ($generated@@38 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@51) ($generated@@34 $generated@@46 $generated@@47 $generated@@49 $generated@@51)))
 :weight 0
))) (= ($generated@@6 $generated@@35) 4)) (= ($generated@@6 $generated@@36) 5)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ) (= ($generated@@6 ($generated@@37 $generated@@52 $generated@@53)) 6))) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (! (= ($generated@@39 ($generated@@37 $generated@@54 $generated@@55)) $generated@@54)
 :pattern ( ($generated@@37 $generated@@54 $generated@@55))
))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@40 ($generated@@37 $generated@@56 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@37 $generated@@56 $generated@@57))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@23 $generated@@24 $generated@@59 ($generated@@26 $generated@@58) $generated@@60)  (or (= $generated@@59 $generated@@32) ($generated@@11 ($generated@@33 $generated@@7 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@24 ($generated@@37 $generated@@35 $generated@@36) $generated@@60 $generated@@59) $generated@@2)))))
 :pattern ( ($generated@@23 $generated@@24 $generated@@59 ($generated@@26 $generated@@58) $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> ($generated@@61 $generated@@62 $generated@@63) (forall (($generated@@64 T@U) ) (!  (=> ($generated@@11 ($generated@@33 $generated@@7 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@24 ($generated@@37 $generated@@35 $generated@@36) $generated@@62 $generated@@64) $generated@@2))) ($generated@@11 ($generated@@33 $generated@@7 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@24 ($generated@@37 $generated@@35 $generated@@36) $generated@@63 $generated@@64) $generated@@2))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@24 ($generated@@37 $generated@@35 $generated@@36) $generated@@63 $generated@@64) $generated@@2))
)))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@65 $generated@@66) $generated@@66)
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@33 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@33 $generated@@72 $generated@@71))
)))
(assert ($generated@@73 $generated@@2))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@74 $generated@@24 $generated@@76 ($generated@@25 $generated@@75))  (and ($generated@@74 $generated@@24 $generated@@76 ($generated@@26 $generated@@75)) (or (not (= $generated@@76 $generated@@32)) (not true))))
 :pattern ( ($generated@@74 $generated@@24 $generated@@76 ($generated@@25 $generated@@75)))
 :pattern ( ($generated@@74 $generated@@24 $generated@@76 ($generated@@26 $generated@@75)))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@70 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@23 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@77 ($generated@@70 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@61 $generated@@82 $generated@@83) (=> ($generated@@77 $generated@@84 $generated@@85 $generated@@82) ($generated@@77 $generated@@84 $generated@@85 $generated@@83)))
 :pattern ( ($generated@@61 $generated@@82 $generated@@83) ($generated@@77 $generated@@84 $generated@@85 $generated@@82))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (!  (=> ($generated@@61 $generated@@86 $generated@@87) (=> ($generated@@23 $generated@@90 $generated@@88 $generated@@89 $generated@@86) ($generated@@23 $generated@@90 $generated@@88 $generated@@89 $generated@@87)))
 :pattern ( ($generated@@61 $generated@@86 $generated@@87) ($generated@@23 $generated@@90 $generated@@88 $generated@@89 $generated@@86))
)))
(assert (forall (($generated@@92 T@U) ) (!  (and (= ($generated@@22 ($generated@@26 $generated@@92)) $generated@@3) (= ($generated@@91 ($generated@@26 $generated@@92)) $generated@@5))
 :pattern ( ($generated@@26 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (!  (and (= ($generated@@22 ($generated@@25 $generated@@93)) $generated@@4) (= ($generated@@91 ($generated@@25 $generated@@93)) $generated@@5))
 :pattern ( ($generated@@25 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@94 $generated@@95 $generated@@96) (and ($generated@@61 $generated@@95 $generated@@96) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (not ($generated@@73 $generated@@98)) (= ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@24 ($generated@@37 $generated@@35 $generated@@36) $generated@@95 $generated@@97) $generated@@98) ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@24 ($generated@@37 $generated@@35 $generated@@36) $generated@@96 $generated@@97) $generated@@98)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@24 ($generated@@37 $generated@@35 $generated@@36) $generated@@96 $generated@@97) $generated@@98))
))))
 :pattern ( ($generated@@94 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@74 $generated@@24 $generated@@101 ($generated@@26 $generated@@100))  (or (= $generated@@101 $generated@@32) (= ($generated@@99 $generated@@101) ($generated@@26 $generated@@100))))
 :pattern ( ($generated@@74 $generated@@24 $generated@@101 ($generated@@26 $generated@@100)))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or (not (= $generated@@102 $generated@@104)) (not true)) (=> (and ($generated@@61 $generated@@102 $generated@@103) ($generated@@61 $generated@@103 $generated@@104)) ($generated@@61 $generated@@102 $generated@@104)))
 :pattern ( ($generated@@61 $generated@@102 $generated@@103) ($generated@@61 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@105 $generated@@106 $generated) (and (= ($generated@@70 $generated@@8 ($generated@@33 $generated@@8 $generated@@106)) $generated@@106) ($generated@@74 $generated@@8 ($generated@@33 $generated@@8 $generated@@106) $generated)))
 :pattern ( ($generated@@105 $generated@@106 $generated))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@105 ($generated@@70 $generated@@109 $generated@@107) $generated@@108) ($generated@@74 $generated@@109 $generated@@107 $generated@@108))
 :pattern ( ($generated@@105 ($generated@@70 $generated@@109 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! (<= 0 ($generated@@30 $generated@@110))
 :pattern ( ($generated@@30 $generated@@110))
)))
(assert (= ($generated@@6 $generated@@111) 7))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@23 $generated@@111 $generated@@114 ($generated@@112 $generated@@115) $generated@@116) (forall (($generated@@117 Int) ) (!  (=> (and (<= 0 $generated@@117) (< $generated@@117 ($generated@@30 $generated@@114))) ($generated@@77 ($generated@@113 $generated@@114 $generated@@117) $generated@@115 $generated@@116))
 :pattern ( ($generated@@113 $generated@@114 $generated@@117))
)))
 :pattern ( ($generated@@23 $generated@@111 $generated@@114 ($generated@@112 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@112 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@112 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@22 ($generated@@112 $generated@@120)) $generated@@1)
 :pattern ( ($generated@@112 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@121 ($generated@@26 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@26 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@25 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@25 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@33 $generated@@126 ($generated@@70 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@70 $generated@@126 $generated@@125))
)))
(assert  (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@127 $generated@@130 $generated@@131 $generated@@132 ($generated@@129 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@135 $generated@@136) $generated@@133)
 :weight 0
)) (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@127 $generated@@137 $generated@@138 $generated@@139 ($generated@@129 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@127 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@127 $generated@@146 $generated@@147 $generated@@148 ($generated@@129 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@127 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@11 ($generated@@127 $generated@@24 $generated@@35 $generated@@7 ($generated@@128 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (or (not (= $generated@@159 $generated@@155)) (not true)) ($generated@@11 ($generated@@33 $generated@@7 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@24 ($generated@@37 $generated@@35 $generated@@36) $generated@@156 $generated@@159) $generated@@157)))) $generated@@158))
 :pattern ( ($generated@@127 $generated@@24 $generated@@35 $generated@@7 ($generated@@128 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@105 $generated@@161 ($generated@@112 $generated@@162)) (and (= ($generated@@70 $generated@@111 ($generated@@33 $generated@@111 $generated@@161)) $generated@@161) ($generated@@74 $generated@@111 ($generated@@33 $generated@@111 $generated@@161) ($generated@@112 $generated@@162))))
 :pattern ( ($generated@@105 $generated@@161 ($generated@@112 $generated@@162)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@105 $generated@@164 ($generated@@26 $generated@@163)) (and (= ($generated@@70 $generated@@24 ($generated@@33 $generated@@24 $generated@@164)) $generated@@164) ($generated@@74 $generated@@24 ($generated@@33 $generated@@24 $generated@@164) ($generated@@26 $generated@@163))))
 :pattern ( ($generated@@105 $generated@@164 ($generated@@26 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@105 $generated@@166 ($generated@@25 $generated@@165)) (and (= ($generated@@70 $generated@@24 ($generated@@33 $generated@@24 $generated@@166)) $generated@@166) ($generated@@74 $generated@@24 ($generated@@33 $generated@@24 $generated@@166) ($generated@@25 $generated@@165))))
 :pattern ( ($generated@@105 $generated@@166 ($generated@@25 $generated@@165)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 Int) ) (! (= ($generated@@167 $generated@@168 $generated@@169 $generated@@170) (forall (($generated@@171 Int) ) (!  (=> (and (<= 0 $generated@@171) (< $generated@@171 $generated@@170)) (= ($generated@@113 $generated@@168 $generated@@171) ($generated@@113 $generated@@169 $generated@@171)))
 :pattern ( ($generated@@113 $generated@@168 $generated@@171))
 :pattern ( ($generated@@113 $generated@@169 $generated@@171))
)))
 :pattern ( ($generated@@167 $generated@@168 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 Int) ) (! (= ($generated@@70 $generated@@8 ($generated@@12 ($generated@@65 $generated@@172))) ($generated@@67 $generated@@36 ($generated@@70 $generated@@8 ($generated@@12 $generated@@172))))
 :pattern ( ($generated@@70 $generated@@8 ($generated@@12 ($generated@@65 $generated@@172))))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@70 $generated@@174 ($generated@@67 $generated@@174 $generated@@173)) ($generated@@67 $generated@@36 ($generated@@70 $generated@@174 $generated@@173)))
 :pattern ( ($generated@@70 $generated@@174 ($generated@@67 $generated@@174 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> (= ($generated@@30 $generated@@175) 0) (= $generated@@175 $generated@@31))
 :pattern ( ($generated@@30 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! ($generated@@23 $generated@@8 $generated@@177 $generated $generated@@176)
 :pattern ( ($generated@@23 $generated@@8 $generated@@177 $generated $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@74 $generated@@111 $generated@@178 ($generated@@112 $generated@@179)) (forall (($generated@@180 Int) ) (!  (=> (and (<= 0 $generated@@180) (< $generated@@180 ($generated@@30 $generated@@178))) ($generated@@105 ($generated@@113 $generated@@178 $generated@@180) $generated@@179))
 :pattern ( ($generated@@113 $generated@@178 $generated@@180))
)))
 :pattern ( ($generated@@74 $generated@@111 $generated@@178 ($generated@@112 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ) (! ($generated@@74 $generated@@8 $generated@@181 $generated)
 :pattern ( ($generated@@74 $generated@@8 $generated@@181 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@192 true))
(let (($generated@@193  (=> (and (<= ($generated@@65 0) $generated@@182) (< $generated@@182 ($generated@@30 $generated@@183))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (and (<= 0 $generated@@182) (< $generated@@182 ($generated@@30 $generated@@183)))) (=> (and (<= 0 $generated@@182) (< $generated@@182 ($generated@@30 $generated@@183))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 $generated@@182) (< $generated@@182 ($generated@@30 $generated@@184)))) (=> (and (<= 0 $generated@@182) (< $generated@@182 ($generated@@30 $generated@@184))) (=> (and (= ($generated@@13 ($generated@@33 $generated@@8 ($generated@@113 $generated@@183 $generated@@182))) ($generated@@13 ($generated@@33 $generated@@8 ($generated@@113 $generated@@184 $generated@@182)))) (= (ControlFlow 0 3) 1)) $generated@@192))))))))
(let (($generated@@194  (=> (and (< $generated@@182 ($generated@@65 0)) (= (ControlFlow 0 7) 3)) $generated@@193)))
(let (($generated@@195  (=> (and (<= ($generated@@65 0) $generated@@182) (= (ControlFlow 0 6) 3)) $generated@@193)))
(let (($generated@@196  (=> (and (=> (and (<= ($generated@@65 0) $generated@@182) (< $generated@@182 ($generated@@30 $generated@@183))) (= ($generated@@13 ($generated@@33 $generated@@8 ($generated@@113 $generated@@183 $generated@@182))) ($generated@@13 ($generated@@33 $generated@@8 ($generated@@113 $generated@@184 $generated@@182))))) (= (ControlFlow 0 2) 1)) $generated@@192)))
(let (($generated@@197  (=> (and (= $generated@@185 ($generated@@128 $generated@@32 $generated@@186 $generated@@2 false)) (<= ($generated@@30 $generated@@183) ($generated@@30 $generated@@184))) (and (and (=> (= (ControlFlow 0 8) 2) $generated@@196) (=> (= (ControlFlow 0 8) 6) $generated@@195)) (=> (= (ControlFlow 0 8) 7) $generated@@194)))))
(let (($generated@@198  (=> (and ($generated@@187 $generated@@186) ($generated@@188 $generated@@186)) (=> (and (and (and (or (not (= $generated@@189 $generated@@32)) (not true)) (and ($generated@@74 $generated@@24 $generated@@189 ($generated@@25 $generated@@190)) ($generated@@23 $generated@@24 $generated@@189 ($generated@@25 $generated@@190) $generated@@186))) (and ($generated@@74 $generated@@111 $generated@@183 ($generated@@112 $generated)) ($generated@@23 $generated@@111 $generated@@183 ($generated@@112 $generated) $generated@@186))) (and (and ($generated@@74 $generated@@111 $generated@@184 ($generated@@112 $generated)) ($generated@@23 $generated@@111 $generated@@184 ($generated@@112 $generated) $generated@@186)) (and (= 0 $generated@@191) (= (ControlFlow 0 9) 8)))) $generated@@197))))
$generated@@198))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
