(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@T T@T) T@T)
(declare-fun $generated@@39 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@61 (Int) Int)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (Int) Int)
(declare-fun $generated@@70 (Int) Int)
(declare-fun $generated@@71 (Int) Bool)
(declare-fun $generated@@73 () Int)
(declare-fun $generated@@74 (T@U Int) Bool)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@76 (T@U Int) Bool)
(declare-fun $generated@@94 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@1))
(assert (= ($generated@@23 $generated@@0) $generated@@2))
(assert (= ($generated@@7 $generated@@25) 3))
(assert (forall (($generated@@29 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@29 $generated@@26)  (or (= $generated@@29 $generated@@27) (= ($generated@@28 $generated@@29) $generated@@26)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@29 $generated@@26))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@30 $generated@@25 $generated@@32 $generated@@31 $generated@@33) ($generated@@30 $generated@@25 $generated@@32 $generated@@26 $generated@@33))
 :pattern ( ($generated@@30 $generated@@25 $generated@@32 $generated@@31 $generated@@33))
 :pattern ( ($generated@@30 $generated@@25 $generated@@32 $generated@@26 $generated@@33))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@42 T@T) ($generated@@43 T@T) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@35 $generated@@42 $generated@@43 ($generated@@39 $generated@@42 $generated@@43 $generated@@45 $generated@@46 $generated@@44) $generated@@46) $generated@@44)
 :weight 0
)) (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (or (= $generated@@51 $generated@@52) (= ($generated@@35 $generated@@47 $generated@@48 ($generated@@39 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@52) ($generated@@35 $generated@@47 $generated@@48 $generated@@50 $generated@@52)))
 :weight 0
))) (= ($generated@@7 $generated@@36) 4)) (= ($generated@@7 $generated@@37) 5)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (= ($generated@@7 ($generated@@38 $generated@@53 $generated@@54)) 6))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@40 ($generated@@38 $generated@@55 $generated@@56)) $generated@@55)
 :pattern ( ($generated@@38 $generated@@55 $generated@@56))
))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@41 ($generated@@38 $generated@@57 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@38 $generated@@57 $generated@@58))
))))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@30 $generated@@25 $generated@@59 $generated@@26 $generated@@60)  (or (= $generated@@59 $generated@@27) ($generated@@12 ($generated@@34 $generated@@8 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@25 ($generated@@38 $generated@@36 $generated@@37) $generated@@60 $generated@@59) $generated@@3)))))
 :pattern ( ($generated@@30 $generated@@25 $generated@@59 $generated@@26 $generated@@60))
)))
(assert (forall (($generated@@62 Int) ) (! (= ($generated@@61 $generated@@62) $generated@@62)
 :pattern ( ($generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@63 $generated@@65 $generated@@64) $generated@@64)
 :pattern ( ($generated@@63 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 ($generated@@34 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@34 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@72 Int) ) (!  (=> ($generated@@71 $generated@@72) (and (<= ($generated@@69 $generated@@72) ($generated@@70 $generated@@72)) (< ($generated@@70 $generated@@72) $generated@@72)))
 :pattern ( ($generated@@69 $generated@@72))
 :pattern ( ($generated@@70 $generated@@72))
)))
(assert  (=> (<= 0 $generated@@73) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 Int) ) (!  (=> (or ($generated@@76 $generated@@78 $generated@@79) (and (< 0 $generated@@73) (and ($generated@@75 $generated@@77) (and (or (not (= $generated@@78 $generated@@27)) (not true)) (and ($generated@@24 $generated@@25 $generated@@78 $generated@@31) ($generated@@30 $generated@@25 $generated@@78 $generated@@31 $generated@@77)))))) (and (forall (($generated@@80 Int) )  (=> (< 0 $generated@@80) (=> (< $generated@@80 $generated@@79) ($generated@@71 $generated@@80)))) (= ($generated@@74 $generated@@78 $generated@@79) (forall (($generated@@81 Int) )  (=> (and (< 0 $generated@@81) (< $generated@@81 $generated@@79)) (let (($generated@@82 ($generated@@69 $generated@@81)))
(let (($generated@@83 ($generated@@70 $generated@@81)))
 (and (<= $generated@@82 $generated@@83) (< $generated@@83 $generated@@81)))))))))
 :pattern ( ($generated@@74 $generated@@78 $generated@@79) ($generated@@75 $generated@@77))
))))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@84 $generated@@31)  (and ($generated@@24 $generated@@25 $generated@@84 $generated@@26) (or (not (= $generated@@84 $generated@@27)) (not true))))
 :pattern ( ($generated@@24 $generated@@25 $generated@@84 $generated@@31))
 :pattern ( ($generated@@24 $generated@@25 $generated@@84 $generated@@26))
)))
(assert  (=> (<= 0 $generated@@73) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 Int) ) (!  (=> (or ($generated@@76 $generated@@86 ($generated@@61 $generated@@87)) (and (< 0 $generated@@73) (and ($generated@@75 $generated@@85) (and (or (not (= $generated@@86 $generated@@27)) (not true)) (and ($generated@@24 $generated@@25 $generated@@86 $generated@@31) ($generated@@30 $generated@@25 $generated@@86 $generated@@31 $generated@@85)))))) (and (forall (($generated@@88 Int) )  (=> (< 0 $generated@@88) (=> (< $generated@@88 $generated@@87) ($generated@@71 $generated@@88)))) (= ($generated@@74 $generated@@86 ($generated@@61 $generated@@87)) (forall (($generated@@89 Int) )  (=> (and (< 0 $generated@@89) (< $generated@@89 $generated@@87)) (let (($generated@@90 ($generated@@69 $generated@@89)))
(let (($generated@@91 ($generated@@70 $generated@@89)))
 (and (<= $generated@@90 $generated@@91) (< $generated@@91 $generated@@89)))))))))
 :weight 3
 :pattern ( ($generated@@74 $generated@@86 ($generated@@61 $generated@@87)) ($generated@@75 $generated@@85))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@34 $generated@@93 ($generated@@66 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@66 $generated@@93 $generated@@92))
)))
(assert  (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@94 $generated@@97 $generated@@98 $generated@@99 ($generated@@96 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103 $generated@@100) $generated@@102 $generated@@103) $generated@@100)
 :weight 0
)) (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@94 $generated@@104 $generated@@105 $generated@@106 ($generated@@96 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@111 $generated@@112) ($generated@@94 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@111 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@94 $generated@@113 $generated@@114 $generated@@115 ($generated@@96 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@94 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)))))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 Bool) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@12 ($generated@@94 $generated@@25 $generated@@36 $generated@@8 ($generated@@95 $generated@@122 $generated@@123 $generated@@124 $generated@@125) $generated@@126 $generated@@127))  (=> (and (or (not (= $generated@@126 $generated@@122)) (not true)) ($generated@@12 ($generated@@34 $generated@@8 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@25 ($generated@@38 $generated@@36 $generated@@37) $generated@@123 $generated@@126) $generated@@124)))) $generated@@125))
 :pattern ( ($generated@@94 $generated@@25 $generated@@36 $generated@@8 ($generated@@95 $generated@@122 $generated@@123 $generated@@124 $generated@@125) $generated@@126 $generated@@127))
)))
(assert (= ($generated@@23 $generated@@26) $generated@@4))
(assert (= ($generated@@128 $generated@@26) $generated@@6))
(assert (= ($generated@@23 $generated@@31) $generated@@5))
(assert (= ($generated@@128 $generated@@31) $generated@@6))
(assert (forall (($generated@@129 Int) ) (! (= ($generated@@66 $generated@@9 ($generated@@13 ($generated@@61 $generated@@129))) ($generated@@63 $generated@@37 ($generated@@66 $generated@@9 ($generated@@13 $generated@@129))))
 :pattern ( ($generated@@66 $generated@@9 ($generated@@13 ($generated@@61 $generated@@129))))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@66 $generated@@131 ($generated@@63 $generated@@131 $generated@@130)) ($generated@@63 $generated@@37 ($generated@@66 $generated@@131 $generated@@130)))
 :pattern ( ($generated@@66 $generated@@131 ($generated@@63 $generated@@131 $generated@@130)))
)))
(assert  (=> (<= 0 $generated@@73) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 Int) ) (!  (=> (or ($generated@@76 ($generated@@63 $generated@@25 $generated@@133) ($generated@@61 $generated@@134)) (and (< 0 $generated@@73) (and ($generated@@75 $generated@@132) (and (or (not (= $generated@@133 $generated@@27)) (not true)) (and ($generated@@24 $generated@@25 $generated@@133 $generated@@31) ($generated@@30 $generated@@25 $generated@@133 $generated@@31 $generated@@132)))))) (and (forall (($generated@@135 Int) )  (=> (< 0 $generated@@135) (=> (< $generated@@135 $generated@@134) ($generated@@71 $generated@@135)))) (= ($generated@@74 ($generated@@63 $generated@@25 $generated@@133) ($generated@@61 $generated@@134)) (forall (($generated@@136 Int) )  (=> (and (< 0 $generated@@136) (< $generated@@136 $generated@@134)) (let (($generated@@137 ($generated@@69 $generated@@136)))
(let (($generated@@138 ($generated@@70 $generated@@136)))
 (and (<= $generated@@137 $generated@@138) (< $generated@@138 $generated@@136)))))))))
 :weight 3
 :pattern ( ($generated@@74 ($generated@@63 $generated@@25 $generated@@133) ($generated@@61 $generated@@134)) ($generated@@75 $generated@@132))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! ($generated@@30 $generated@@9 $generated@@140 $generated@@0 $generated@@139)
 :pattern ( ($generated@@30 $generated@@9 $generated@@140 $generated@@0 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! ($generated@@30 $generated@@8 $generated@@142 $generated $generated@@141)
 :pattern ( ($generated@@30 $generated@@8 $generated@@142 $generated $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! ($generated@@24 $generated@@9 $generated@@143 $generated@@0)
 :pattern ( ($generated@@24 $generated@@9 $generated@@143 $generated@@0))
)))
(assert (forall (($generated@@144 T@U) ) (! ($generated@@24 $generated@@8 $generated@@144 $generated)
 :pattern ( ($generated@@24 $generated@@8 $generated@@144 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@153 true))
(let (($generated@@154 true))
(let (($generated@@155  (=> (and ($generated@@71 $generated@@145) (= (ControlFlow 0 6) 3)) $generated@@154)))
(let (($generated@@156  (=> (and (< $generated@@146 $generated@@147) (= (ControlFlow 0 8) 6)) $generated@@155)))
(let (($generated@@157  (=> (and (<= $generated@@147 $generated@@146) (= (ControlFlow 0 7) 6)) $generated@@155)))
(let (($generated@@158  (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (and (and ($generated@@24 $generated@@9 ($generated@@13 (- $generated@@145 1)) $generated@@0) ($generated@@24 $generated@@9 ($generated@@13 (- (+ (- $generated@@145 1) 1) 1)) $generated@@0)) (and (<= (- (+ (- $generated@@145 1) 1) 1) (- $generated@@145 1)) (< (- $generated@@145 1) $generated@@145))) (or (and (and ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0) ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 (- (+ 0 1) 1))) $generated@@0)) (and (<= ($generated@@61 (- (+ 0 1) 1)) ($generated@@61 0)) (< 0 $generated@@145))) (or (exists (($generated@@159 Int) )  (and ($generated@@24 $generated@@9 ($generated@@13 (- (+ $generated@@159 1) 1)) $generated@@0) (and (<= (- (+ $generated@@159 1) 1) $generated@@159) (< $generated@@159 $generated@@145)))) (or (and (and ($generated@@24 $generated@@9 ($generated@@13 (- $generated@@145 1)) $generated@@0) ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0)) (and (<= ($generated@@61 0) (- $generated@@145 1)) (< (- $generated@@145 1) $generated@@145))) (or (and (and ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0) ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0)) (and (<= ($generated@@61 0) ($generated@@61 0)) (< 0 $generated@@145))) (or (and (and ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0) ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0)) (and (<= ($generated@@61 0) ($generated@@61 0)) (< 0 $generated@@145))) (or (exists (($generated@@160 Int) )  (and ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0) (and (<= ($generated@@61 0) $generated@@160) (< $generated@@160 $generated@@145)))) (or (exists (($generated@@161 Int) )  (and ($generated@@24 $generated@@9 ($generated@@13 (- $generated@@145 1)) $generated@@0) (and (<= $generated@@161 (- $generated@@145 1)) (< (- $generated@@145 1) $generated@@145)))) (or (exists (($generated@@162 T@U) )  (and ($generated@@24 $generated@@9 $generated@@162 $generated@@0) (and (<= ($generated@@14 $generated@@162) ($generated@@14 $generated@@162)) (< ($generated@@14 $generated@@162) $generated@@145)))) (or (exists (($generated@@163 Int) )  (and ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0) (and (<= $generated@@163 ($generated@@61 0)) (< 0 $generated@@145)))) (exists (($generated@@164 Int) ($generated@@165 Int) )  (and (<= $generated@@165 $generated@@164) (< $generated@@164 $generated@@145)))))))))))))) (=> (or (and (and ($generated@@24 $generated@@9 ($generated@@13 (- $generated@@145 1)) $generated@@0) ($generated@@24 $generated@@9 ($generated@@13 (- (+ (- $generated@@145 1) 1) 1)) $generated@@0)) (and (<= (- (+ (- $generated@@145 1) 1) 1) (- $generated@@145 1)) (< (- $generated@@145 1) $generated@@145))) (or (and (and ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0) ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 (- (+ 0 1) 1))) $generated@@0)) (and (<= ($generated@@61 (- (+ 0 1) 1)) ($generated@@61 0)) (< 0 $generated@@145))) (or (exists (($generated@@166 Int) )  (and ($generated@@24 $generated@@9 ($generated@@13 (- (+ $generated@@166 1) 1)) $generated@@0) (and (<= (- (+ $generated@@166 1) 1) $generated@@166) (< $generated@@166 $generated@@145)))) (or (and (and ($generated@@24 $generated@@9 ($generated@@13 (- $generated@@145 1)) $generated@@0) ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0)) (and (<= ($generated@@61 0) (- $generated@@145 1)) (< (- $generated@@145 1) $generated@@145))) (or (and (and ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0) ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0)) (and (<= ($generated@@61 0) ($generated@@61 0)) (< 0 $generated@@145))) (or (and (and ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0) ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0)) (and (<= ($generated@@61 0) ($generated@@61 0)) (< 0 $generated@@145))) (or (exists (($generated@@167 Int) )  (and ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0) (and (<= ($generated@@61 0) $generated@@167) (< $generated@@167 $generated@@145)))) (or (exists (($generated@@168 Int) )  (and ($generated@@24 $generated@@9 ($generated@@13 (- $generated@@145 1)) $generated@@0) (and (<= $generated@@168 (- $generated@@145 1)) (< (- $generated@@145 1) $generated@@145)))) (or (exists (($generated@@169 Int) )  (and ($generated@@24 $generated@@9 ($generated@@13 $generated@@169) $generated@@0) (and (<= $generated@@169 $generated@@169) (< $generated@@169 $generated@@145)))) (or (exists (($generated@@170 Int) )  (and ($generated@@24 $generated@@9 ($generated@@13 ($generated@@61 0)) $generated@@0) (and (<= $generated@@170 ($generated@@61 0)) (< 0 $generated@@145)))) (exists (($generated@@171 Int) ($generated@@172 Int) )  (and (<= $generated@@172 $generated@@171) (< $generated@@171 $generated@@145))))))))))))) (=> (and (<= $generated@@147 $generated@@146) (< $generated@@146 $generated@@145)) (and (=> (= (ControlFlow 0 9) 7) $generated@@157) (=> (= (ControlFlow 0 9) 8) $generated@@156)))))))
(let (($generated@@173  (=> (and (< $generated@@146 $generated@@147) (= (ControlFlow 0 12) 9)) $generated@@158)))
(let (($generated@@174  (=> (and (<= $generated@@147 $generated@@146) (= (ControlFlow 0 11) 9)) $generated@@158)))
(let (($generated@@175  (and (=> (= (ControlFlow 0 13) 11) $generated@@174) (=> (= (ControlFlow 0 13) 12) $generated@@173))))
(let (($generated@@176  (=> (and (< 0 $generated@@145) (< $generated@@145 $generated@@148)) (and (=> (= (ControlFlow 0 14) 13) $generated@@175) (=> (= (ControlFlow 0 14) 5) $generated@@153)))))
(let (($generated@@177  (=> (and (not (and (< 0 $generated@@145) (< $generated@@145 $generated@@148))) (= (ControlFlow 0 4) 3)) $generated@@154)))
(let (($generated@@178  (=> (<= $generated@@145 0) (and (=> (= (ControlFlow 0 16) 14) $generated@@176) (=> (= (ControlFlow 0 16) 4) $generated@@177)))))
(let (($generated@@179  (=> (< 0 $generated@@145) (and (=> (= (ControlFlow 0 15) 14) $generated@@176) (=> (= (ControlFlow 0 15) 4) $generated@@177)))))
(let (($generated@@180  (and (=> (= (ControlFlow 0 17) 15) $generated@@179) (=> (= (ControlFlow 0 17) 16) $generated@@178))))
(let (($generated@@181 true))
(let (($generated@@182 true))
(let (($generated@@183  (=> (= $generated@@149 ($generated@@95 $generated@@27 $generated@@150 $generated@@3 false)) (and (and (=> (= (ControlFlow 0 18) 1) $generated@@182) (=> (= (ControlFlow 0 18) 17) $generated@@180)) (=> (= (ControlFlow 0 18) 2) $generated@@181)))))
(let (($generated@@184  (=> (and ($generated@@75 $generated@@150) ($generated@@151 $generated@@150)) (=> (and (and (or (not (= $generated@@152 $generated@@27)) (not true)) (and ($generated@@24 $generated@@25 $generated@@152 $generated@@31) ($generated@@30 $generated@@25 $generated@@152 $generated@@31 $generated@@150))) (and (= 0 $generated@@73) (= (ControlFlow 0 19) 18))) $generated@@183))))
$generated@@184)))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
