(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (Int) Bool)
(declare-fun $generated@@24 (Int) Int)
(declare-fun $generated@@25 (Int) Bool)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@U T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@U Int) T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@68 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@72 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T T@T) T@T)
(declare-fun $generated@@75 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@76 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@1))
(assert (= ($generated@@21 $generated@@0) $generated@@2))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@26 Int) ) (!  (=> (or ($generated@@25 ($generated@@24 $generated@@26)) (< 0 $generated@@22)) (= ($generated@@23 ($generated@@24 $generated@@26))  (and (<= ($generated@@24 0) ($generated@@24 $generated@@26)) (< $generated@@26 256))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@24 $generated@@26)))
))))
(assert (= ($generated@@27 $generated@@28) 0))
(assert (forall (($generated@@29 Int) ) (! (= ($generated@@24 $generated@@29) $generated@@29)
 :pattern ( ($generated@@24 $generated@@29))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@T) ) (! (= ($generated@@30 $generated@@32 $generated@@31) $generated@@31)
 :pattern ( ($generated@@30 $generated@@32 $generated@@31))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@T) ) (! (= ($generated@@34 $generated@@36 ($generated@@33 $generated@@36 $generated@@35)) $generated@@35)
 :pattern ( ($generated@@33 $generated@@36 $generated@@35))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@37 ($generated@@34 $generated@@42 $generated@@39) $generated@@40 $generated@@41) ($generated@@38 $generated@@42 $generated@@39 $generated@@40 $generated@@41))
 :pattern ( ($generated@@37 ($generated@@34 $generated@@42 $generated@@39) $generated@@40 $generated@@41))
)))
(assert (= ($generated@@5 $generated@@46) 3))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@49 T@U) ) (!  (=> (or ($generated@@44 $generated@@49) (and (< 1 $generated@@22) ($generated@@45 $generated@@46 $generated@@49 ($generated@@47 $generated@@0)))) (and (forall (($generated@@50 Int) ) (!  (=> (<= ($generated@@24 0) $generated@@50) (=> (< $generated@@50 ($generated@@27 $generated@@49)) ($generated@@25 ($generated@@12 ($generated@@33 $generated@@7 ($generated@@48 $generated@@49 $generated@@50))))))
 :pattern ( ($generated@@33 $generated@@7 ($generated@@48 $generated@@49 $generated@@50)))
)) (= ($generated@@43 $generated@@49) (forall (($generated@@51 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@51) (< $generated@@51 ($generated@@27 $generated@@49))) ($generated@@23 ($generated@@12 ($generated@@33 $generated@@7 ($generated@@48 $generated@@49 $generated@@51)))))
 :pattern ( ($generated@@33 $generated@@7 ($generated@@48 $generated@@49 $generated@@51)))
)))))
 :pattern ( ($generated@@43 $generated@@49))
))))
(assert (forall (($generated@@53 T@U) ) (!  (=> ($generated@@52 $generated@@53 $generated@@0) (and (= ($generated@@34 $generated@@7 ($generated@@33 $generated@@7 $generated@@53)) $generated@@53) ($generated@@45 $generated@@7 ($generated@@33 $generated@@7 $generated@@53) $generated@@0)))
 :pattern ( ($generated@@52 $generated@@53 $generated@@0))
)))
(assert (forall (($generated@@54 T@U) ) (!  (=> ($generated@@52 $generated@@54 $generated) (and (= ($generated@@34 $generated@@6 ($generated@@33 $generated@@6 $generated@@54)) $generated@@54) ($generated@@45 $generated@@6 ($generated@@33 $generated@@6 $generated@@54) $generated)))
 :pattern ( ($generated@@52 $generated@@54 $generated))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@52 ($generated@@34 $generated@@57 $generated@@55) $generated@@56) ($generated@@45 $generated@@57 $generated@@55 $generated@@56))
 :pattern ( ($generated@@52 ($generated@@34 $generated@@57 $generated@@55) $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (! (<= 0 ($generated@@27 $generated@@58))
 :pattern ( ($generated@@27 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@38 $generated@@46 $generated@@59 ($generated@@47 $generated@@60) $generated@@61) (forall (($generated@@62 Int) ) (!  (=> (and (<= 0 $generated@@62) (< $generated@@62 ($generated@@27 $generated@@59))) ($generated@@37 ($generated@@48 $generated@@59 $generated@@62) $generated@@60 $generated@@61))
 :pattern ( ($generated@@48 $generated@@59 $generated@@62))
)))
 :pattern ( ($generated@@38 $generated@@46 $generated@@59 ($generated@@47 $generated@@60) $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 ($generated@@47 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@21 ($generated@@47 $generated@@65)) $generated@@3)
 :pattern ( ($generated@@47 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@33 $generated@@67 ($generated@@34 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@34 $generated@@67 $generated@@66))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@68 $generated@@79 $generated@@80 $generated@@81 ($generated@@75 $generated@@79 $generated@@80 $generated@@81 $generated@@83 $generated@@84 $generated@@85 $generated@@82) $generated@@84 $generated@@85) $generated@@82)
 :weight 0
)) (and (forall (($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (or (= $generated@@91 $generated@@93) (= ($generated@@68 $generated@@86 $generated@@87 $generated@@88 ($generated@@75 $generated@@86 $generated@@87 $generated@@88 $generated@@90 $generated@@91 $generated@@92 $generated@@89) $generated@@93 $generated@@94) ($generated@@68 $generated@@86 $generated@@87 $generated@@88 $generated@@90 $generated@@93 $generated@@94)))
 :weight 0
)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (or (= $generated@@101 $generated@@103) (= ($generated@@68 $generated@@95 $generated@@96 $generated@@97 ($generated@@75 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@100 $generated@@101 $generated@@98) $generated@@102 $generated@@103) ($generated@@68 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@102 $generated@@103)))
 :weight 0
)))) (= ($generated@@5 $generated@@69) 4)) (= ($generated@@5 $generated@@70) 5)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@72 $generated@@104 $generated@@105 ($generated@@76 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@106) $generated@@108) $generated@@106)
 :weight 0
))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@72 $generated@@109 $generated@@110 ($generated@@76 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@72 $generated@@109 $generated@@110 $generated@@112 $generated@@114)))
 :weight 0
))) (= ($generated@@5 $generated@@73) 6)) (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (= ($generated@@5 ($generated@@74 $generated@@115 $generated@@116)) 7))) (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (! (= ($generated@@77 ($generated@@74 $generated@@117 $generated@@118)) $generated@@117)
 :pattern ( ($generated@@74 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (! (= ($generated@@78 ($generated@@74 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@74 $generated@@119 $generated@@120))
))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 Bool) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@10 ($generated@@68 $generated@@69 $generated@@70 $generated@@6 ($generated@@71 $generated@@121 $generated@@122 $generated@@123 $generated@@124) $generated@@125 $generated@@126))  (=> (and (or (not (= $generated@@125 $generated@@121)) (not true)) ($generated@@10 ($generated@@33 $generated@@6 ($generated@@72 $generated@@70 $generated@@73 ($generated@@72 $generated@@69 ($generated@@74 $generated@@70 $generated@@73) $generated@@122 $generated@@125) $generated@@123)))) $generated@@124))
 :pattern ( ($generated@@68 $generated@@69 $generated@@70 $generated@@6 ($generated@@71 $generated@@121 $generated@@122 $generated@@123 $generated@@124) $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> ($generated@@52 $generated@@127 ($generated@@47 $generated@@128)) (and (= ($generated@@34 $generated@@46 ($generated@@33 $generated@@46 $generated@@127)) $generated@@127) ($generated@@45 $generated@@46 ($generated@@33 $generated@@46 $generated@@127) ($generated@@47 $generated@@128))))
 :pattern ( ($generated@@52 $generated@@127 ($generated@@47 $generated@@128)))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@129 Int) ) (!  (=> (or ($generated@@25 $generated@@129) (< 0 $generated@@22)) (= ($generated@@23 $generated@@129)  (and (<= ($generated@@24 0) $generated@@129) (< $generated@@129 256))))
 :pattern ( ($generated@@23 $generated@@129))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@130 T@U) ) (!  (=> (or ($generated@@44 ($generated@@30 $generated@@46 $generated@@130)) (and (< 1 $generated@@22) ($generated@@45 $generated@@46 $generated@@130 ($generated@@47 $generated@@0)))) (and (forall (($generated@@131 Int) ) (!  (=> (<= ($generated@@24 0) $generated@@131) (=> (< $generated@@131 ($generated@@27 ($generated@@30 $generated@@46 $generated@@130))) ($generated@@25 ($generated@@12 ($generated@@33 $generated@@7 ($generated@@48 ($generated@@30 $generated@@46 $generated@@130) $generated@@131))))))
 :pattern ( ($generated@@33 $generated@@7 ($generated@@48 $generated@@130 $generated@@131)))
)) (= ($generated@@43 ($generated@@30 $generated@@46 $generated@@130)) (forall (($generated@@132 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@132) (< $generated@@132 ($generated@@27 ($generated@@30 $generated@@46 $generated@@130)))) ($generated@@23 ($generated@@12 ($generated@@33 $generated@@7 ($generated@@48 ($generated@@30 $generated@@46 $generated@@130) $generated@@132)))))
 :pattern ( ($generated@@33 $generated@@7 ($generated@@48 $generated@@130 $generated@@132)))
)))))
 :weight 3
 :pattern ( ($generated@@43 ($generated@@30 $generated@@46 $generated@@130)))
))))
(assert (forall (($generated@@133 Int) ) (! (= ($generated@@34 $generated@@7 ($generated@@11 ($generated@@24 $generated@@133))) ($generated@@30 $generated@@73 ($generated@@34 $generated@@7 ($generated@@11 $generated@@133))))
 :pattern ( ($generated@@34 $generated@@7 ($generated@@11 ($generated@@24 $generated@@133))))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@34 $generated@@135 ($generated@@30 $generated@@135 $generated@@134)) ($generated@@30 $generated@@73 ($generated@@34 $generated@@135 $generated@@134)))
 :pattern ( ($generated@@34 $generated@@135 ($generated@@30 $generated@@135 $generated@@134)))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= ($generated@@27 $generated@@136) 0) (= $generated@@136 $generated@@28))
 :pattern ( ($generated@@27 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! ($generated@@38 $generated@@7 $generated@@138 $generated@@0 $generated@@137)
 :pattern ( ($generated@@38 $generated@@7 $generated@@138 $generated@@0 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! ($generated@@38 $generated@@6 $generated@@140 $generated $generated@@139)
 :pattern ( ($generated@@38 $generated@@6 $generated@@140 $generated $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@141 ($generated@@47 $generated@@142)) (forall (($generated@@143 Int) ) (!  (=> (and (<= 0 $generated@@143) (< $generated@@143 ($generated@@27 $generated@@141))) ($generated@@52 ($generated@@48 $generated@@141 $generated@@143) $generated@@142))
 :pattern ( ($generated@@48 $generated@@141 $generated@@143))
)))
 :pattern ( ($generated@@45 $generated@@46 $generated@@141 ($generated@@47 $generated@@142)))
)))
(assert (forall (($generated@@144 T@U) ) (! ($generated@@45 $generated@@7 $generated@@144 $generated@@0)
 :pattern ( ($generated@@45 $generated@@7 $generated@@144 $generated@@0))
)))
(assert (forall (($generated@@145 T@U) ) (! ($generated@@45 $generated@@6 $generated@@145 $generated)
 :pattern ( ($generated@@45 $generated@@6 $generated@@145 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@154 true))
(let (($generated@@155  (=> (and (not (and (<= ($generated@@24 0) $generated@@146) (< $generated@@146 ($generated@@27 $generated@@147)))) (= (ControlFlow 0 6) 3)) $generated@@154)))
(let (($generated@@156  (=> (and (<= ($generated@@24 0) $generated@@146) (< $generated@@146 ($generated@@27 $generated@@147))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@27 $generated@@147)))) (=> (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@27 $generated@@147))) (=> (and (and (= $generated@@148 ($generated@@12 ($generated@@33 $generated@@7 ($generated@@48 $generated@@147 $generated@@146)))) ($generated@@38 $generated@@7 ($generated@@11 $generated@@148) $generated@@0 $generated@@149)) (and ($generated@@25 ($generated@@12 ($generated@@33 $generated@@7 ($generated@@48 $generated@@147 $generated@@146)))) (= (ControlFlow 0 4) 3))) $generated@@154))))))
(let (($generated@@157  (=> (< $generated@@146 ($generated@@24 0)) (and (=> (= (ControlFlow 0 8) 4) $generated@@156) (=> (= (ControlFlow 0 8) 6) $generated@@155)))))
(let (($generated@@158  (=> (<= ($generated@@24 0) $generated@@146) (and (=> (= (ControlFlow 0 7) 4) $generated@@156) (=> (= (ControlFlow 0 7) 6) $generated@@155)))))
(let (($generated@@159  (and (=> (= (ControlFlow 0 9) 7) $generated@@158) (=> (= (ControlFlow 0 9) 8) $generated@@157))))
(let (($generated@@160 true))
(let (($generated@@161 true))
(let (($generated@@162  (=> (= $generated@@150 ($generated@@71 $generated@@151 $generated@@149 $generated@@4 false)) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@161) (=> (= (ControlFlow 0 10) 9) $generated@@159)) (=> (= (ControlFlow 0 10) 2) $generated@@160)))))
(let (($generated@@163  (=> (and (and (and ($generated@@152 $generated@@149) ($generated@@153 $generated@@149)) ($generated@@45 $generated@@46 $generated@@147 ($generated@@47 $generated@@0))) (and (= 1 $generated@@22) (= (ControlFlow 0 11) 10))) $generated@@162)))
$generated@@163)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
