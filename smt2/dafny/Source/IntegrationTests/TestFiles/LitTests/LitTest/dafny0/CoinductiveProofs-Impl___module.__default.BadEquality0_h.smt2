(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 (Int) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@61 () Int)
(declare-fun $generated@@62 (T@U Int) T@U)
(declare-fun $generated@@63 (Int) Bool)
(declare-fun $generated@@66 (T@U Int) T@U)
(declare-fun $generated@@67 (Int) Bool)
(declare-fun $generated@@75 (Int) Int)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@T T@T) T@T)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@193 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (= ($generated@@5 $generated@@25) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (and ($generated@@24 $generated@@25 $generated@@38 ($generated@@26 $generated@@34)) ($generated@@24 $generated@@25 $generated@@39 ($generated@@26 $generated@@35))) (= ($generated@@22 $generated@@34 $generated@@35 $generated@@36 ($generated@@23 $generated@@37) $generated@@38 $generated@@39)  (and (=> (< 0 ($generated@@27 $generated@@36)) (and (and ($generated@@28 $generated@@38) ($generated@@28 $generated@@39)) (=> (and ($generated@@28 $generated@@38) ($generated@@28 $generated@@39)) (and (= ($generated@@29 $generated@@38) ($generated@@29 $generated@@39)) ($generated@@22 $generated@@34 $generated@@35 ($generated@@30 $generated@@36 ($generated@@31 1)) $generated@@37 ($generated@@32 $generated@@38) ($generated@@32 $generated@@39)))))) (=> (and (or (not (= $generated@@36 ($generated@@31 0))) (not true)) (= ($generated@@27 $generated@@36) 0)) ($generated@@33 $generated@@34 $generated@@35 $generated@@37 $generated@@38 $generated@@39)))))
 :pattern ( ($generated@@22 $generated@@34 $generated@@35 $generated@@36 ($generated@@23 $generated@@37) $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (or (not (= $generated@@42 ($generated@@31 0))) (not true)) (= ($generated@@22 $generated@@40 $generated@@41 $generated@@42 ($generated@@23 $generated@@43) $generated@@44 $generated@@45) ($generated@@22 $generated@@40 $generated@@41 $generated@@42 $generated@@43 $generated@@44 $generated@@45)))
 :pattern ( ($generated@@22 $generated@@40 $generated@@41 $generated@@42 ($generated@@23 $generated@@43) $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (and ($generated@@46 $generated@@47 $generated@@48) ($generated@@46 $generated@@48 $generated@@49)) ($generated@@46 $generated@@47 $generated@@49))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48) ($generated@@46 $generated@@48 $generated@@49))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48) ($generated@@46 $generated@@47 $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 Int) ($generated@@52 Int) ) (!  (=> (and (and (<= 0 $generated@@51) (<= 0 $generated@@52)) (<= (+ $generated@@51 $generated@@52) ($generated@@27 $generated@@50))) (= ($generated@@30 ($generated@@30 $generated@@50 ($generated@@31 $generated@@51)) ($generated@@31 $generated@@52)) ($generated@@30 $generated@@50 ($generated@@31 (+ $generated@@51 $generated@@52)))))
 :pattern ( ($generated@@30 ($generated@@30 $generated@@50 ($generated@@31 $generated@@51)) ($generated@@31 $generated@@52)))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@54 ($generated@@26 $generated@@53)) ($generated@@28 $generated@@54))
 :pattern ( ($generated@@28 $generated@@54) ($generated@@24 $generated@@25 $generated@@54 ($generated@@26 $generated@@53)))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (= $generated@@59 $generated@@60) ($generated@@22 $generated@@55 $generated@@56 $generated@@57 ($generated@@23 $generated@@58) $generated@@59 $generated@@60))
 :pattern ( ($generated@@22 $generated@@55 $generated@@56 $generated@@57 ($generated@@23 $generated@@58) $generated@@59 $generated@@60))
)))
(assert  (=> (<= 1 $generated@@61) (forall (($generated@@64 T@U) ($generated@@65 Int) ) (!  (=> (or ($generated@@63 $generated@@65) (< 1 $generated@@61)) ($generated@@24 $generated@@25 ($generated@@62 $generated@@64 $generated@@65) ($generated@@26 $generated)))
 :pattern ( ($generated@@62 $generated@@64 $generated@@65))
))))
(assert  (=> (<= 1 $generated@@61) (forall (($generated@@68 T@U) ($generated@@69 Int) ) (!  (=> (or ($generated@@67 $generated@@69) (< 1 $generated@@61)) ($generated@@24 $generated@@25 ($generated@@66 $generated@@68 $generated@@69) ($generated@@26 $generated)))
 :pattern ( ($generated@@66 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@33 $generated@@70 $generated@@71 ($generated@@23 $generated@@72) $generated@@73 $generated@@74) (= $generated@@73 $generated@@74))
 :pattern ( ($generated@@33 $generated@@70 $generated@@71 ($generated@@23 $generated@@72) $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@75 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@80 $generated@@83 $generated@@84) ($generated@@26 $generated@@82))  (and ($generated@@81 $generated@@83 $generated@@82) ($generated@@24 $generated@@25 $generated@@84 ($generated@@26 $generated@@82))))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@80 $generated@@83 $generated@@84) ($generated@@26 $generated@@82)))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@28 $generated@@86) (= ($generated@@85 $generated@@86) $generated@@3))
 :pattern ( ($generated@@28 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 ($generated@@87 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@87 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@28 $generated@@91) (exists (($generated@@92 T@U) ($generated@@93 T@U) ) (= $generated@@91 ($generated@@80 $generated@@92 $generated@@93))))
 :pattern ( ($generated@@28 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and ($generated@@24 $generated@@25 $generated@@97 ($generated@@26 $generated@@94)) ($generated@@24 $generated@@25 $generated@@98 ($generated@@26 $generated@@95))) (= ($generated@@33 $generated@@94 $generated@@95 ($generated@@23 $generated@@96) $generated@@97 $generated@@98)  (and (and ($generated@@28 $generated@@97) ($generated@@28 $generated@@98)) (=> (and ($generated@@28 $generated@@97) ($generated@@28 $generated@@98)) (and (= ($generated@@29 $generated@@97) ($generated@@29 $generated@@98)) ($generated@@33 $generated@@94 $generated@@95 $generated@@96 ($generated@@32 $generated@@97) ($generated@@32 $generated@@98)))))))
 :pattern ( ($generated@@33 $generated@@94 $generated@@95 ($generated@@23 $generated@@96) $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (!  (and (= ($generated@@21 ($generated@@26 $generated@@100)) $generated@@2) (= ($generated@@99 ($generated@@26 $generated@@100)) $generated@@4))
 :pattern ( ($generated@@26 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@101 $generated@@103) (<= ($generated@@27 $generated@@103) ($generated@@27 $generated@@102))) (and (= ($generated@@101 ($generated@@30 $generated@@102 $generated@@103)) ($generated@@101 $generated@@102)) (= ($generated@@27 ($generated@@30 $generated@@102 $generated@@103)) (- ($generated@@27 $generated@@102) ($generated@@27 $generated@@103)))))
 :pattern ( ($generated@@30 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 Int) ) (!  (=> (<= 0 $generated@@104) (and ($generated@@101 ($generated@@31 $generated@@104)) (= ($generated@@27 ($generated@@31 $generated@@104)) $generated@@104)))
 :pattern ( ($generated@@31 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (or ($generated@@46 $generated@@105 $generated@@106) (= $generated@@105 $generated@@106)) ($generated@@46 $generated@@106 $generated@@105))
 :pattern ( ($generated@@46 $generated@@105 $generated@@106) ($generated@@46 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@81 $generated@@107 $generated) (and (= ($generated@@88 $generated@@7 ($generated@@87 $generated@@7 $generated@@107)) $generated@@107) ($generated@@24 $generated@@7 ($generated@@87 $generated@@7 $generated@@107) $generated)))
 :pattern ( ($generated@@81 $generated@@107 $generated))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@81 ($generated@@88 $generated@@110 $generated@@108) $generated@@109) ($generated@@24 $generated@@110 $generated@@108 $generated@@109))
 :pattern ( ($generated@@81 ($generated@@88 $generated@@110 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (<= 0 ($generated@@27 $generated@@111))
 :pattern ( ($generated@@27 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@85 ($generated@@80 $generated@@112 $generated@@113)) $generated@@3)
 :pattern ( ($generated@@80 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@29 ($generated@@80 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@80 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@32 ($generated@@80 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@80 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@26 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@26 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@87 $generated@@121 ($generated@@88 $generated@@121 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@88 $generated@@121 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (and (and (and (=> ($generated@@46 $generated@@122 $generated@@123) (or (not (= $generated@@122 $generated@@123)) (not true))) (=> (and ($generated@@101 $generated@@122) (not ($generated@@101 $generated@@123))) ($generated@@46 $generated@@122 $generated@@123))) (=> (and ($generated@@101 $generated@@122) ($generated@@101 $generated@@123)) (= ($generated@@46 $generated@@122 $generated@@123) (< ($generated@@27 $generated@@122) ($generated@@27 $generated@@123))))) (=> (and ($generated@@46 $generated@@122 $generated@@123) ($generated@@101 $generated@@123)) ($generated@@101 $generated@@122)))
 :pattern ( ($generated@@46 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 Int) ) (! (= ($generated@@62 ($generated@@23 $generated@@124) $generated@@125) ($generated@@62 $generated@@124 $generated@@125))
 :pattern ( ($generated@@62 ($generated@@23 $generated@@124) $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 Int) ) (! (= ($generated@@66 ($generated@@23 $generated@@126) $generated@@127) ($generated@@66 $generated@@126 $generated@@127))
 :pattern ( ($generated@@66 ($generated@@23 $generated@@126) $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@33 $generated@@128 $generated@@129 ($generated@@23 $generated@@130) $generated@@131 $generated@@132) (forall (($generated@@133 T@U) ) (! ($generated@@22 $generated@@128 $generated@@129 $generated@@133 ($generated@@23 $generated@@130) $generated@@131 $generated@@132)
 :pattern ( ($generated@@22 $generated@@128 $generated@@129 $generated@@133 ($generated@@23 $generated@@130) $generated@@131 $generated@@132))
)))
 :pattern ( ($generated@@33 $generated@@128 $generated@@129 ($generated@@23 $generated@@130) $generated@@131 $generated@@132))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@134 $generated@@145 $generated@@146 $generated@@147 ($generated@@141 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@150 $generated@@151) $generated@@148)
 :weight 0
)) (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@134 $generated@@152 $generated@@153 $generated@@154 ($generated@@141 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@134 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@134 $generated@@161 $generated@@162 $generated@@163 ($generated@@141 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)))) (= ($generated@@5 $generated@@135) 4)) (= ($generated@@5 $generated@@136) 5)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@138 $generated@@170 $generated@@171 ($generated@@142 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@172) $generated@@174) $generated@@172)
 :weight 0
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@179 $generated@@180) (= ($generated@@138 $generated@@175 $generated@@176 ($generated@@142 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@177) $generated@@180) ($generated@@138 $generated@@175 $generated@@176 $generated@@178 $generated@@180)))
 :weight 0
))) (= ($generated@@5 $generated@@139) 6)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@5 ($generated@@140 $generated@@181 $generated@@182)) 7))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@143 ($generated@@140 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@140 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@144 ($generated@@140 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@140 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@10 ($generated@@134 $generated@@135 $generated@@136 $generated@@6 ($generated@@137 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@10 ($generated@@87 $generated@@6 ($generated@@138 $generated@@136 $generated@@139 ($generated@@138 $generated@@135 ($generated@@140 $generated@@136 $generated@@139) $generated@@188 $generated@@191) $generated@@189)))) $generated@@190))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136 $generated@@6 ($generated@@137 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 Int) ($generated@@195 Int) ) (! (= ($generated@@193 $generated@@194 $generated@@195) (* $generated@@194 $generated@@195))
 :pattern ( ($generated@@193 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@81 $generated@@197 ($generated@@26 $generated@@196)) (and (= ($generated@@88 $generated@@25 ($generated@@87 $generated@@25 $generated@@197)) $generated@@197) ($generated@@24 $generated@@25 ($generated@@87 $generated@@25 $generated@@197) ($generated@@26 $generated@@196))))
 :pattern ( ($generated@@81 $generated@@197 ($generated@@26 $generated@@196)))
)))
(assert  (=> (<= 1 $generated@@61) (forall (($generated@@198 T@U) ($generated@@199 Int) ) (!  (=> (or ($generated@@67 $generated@@199) (< 1 $generated@@61)) (and ($generated@@67 (+ $generated@@199 2)) (= ($generated@@66 ($generated@@23 $generated@@198) $generated@@199) ($generated@@80 ($generated@@88 $generated@@7 ($generated@@11 $generated@@199)) ($generated@@66 $generated@@198 (+ $generated@@199 2))))))
 :pattern ( ($generated@@66 ($generated@@23 $generated@@198) $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ) (!  (=> ($generated@@101 $generated@@200) (= $generated@@200 ($generated@@31 ($generated@@27 $generated@@200))))
 :pattern ( ($generated@@27 $generated@@200))
 :pattern ( ($generated@@101 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and ($generated@@101 $generated@@202) (<= ($generated@@27 $generated@@202) ($generated@@27 $generated@@201))) (or (and (= $generated@@202 ($generated@@31 0)) (= ($generated@@30 $generated@@201 $generated@@202) $generated@@201)) (and (or (not (= $generated@@202 ($generated@@31 0))) (not true)) ($generated@@46 ($generated@@30 $generated@@201 $generated@@202) $generated@@201))))
 :pattern ( ($generated@@30 $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and ($generated@@46 $generated@@205 $generated@@209) ($generated@@22 $generated@@203 $generated@@204 $generated@@209 ($generated@@23 $generated@@206) $generated@@207 $generated@@208)) ($generated@@22 $generated@@203 $generated@@204 $generated@@205 ($generated@@23 $generated@@206) $generated@@207 $generated@@208))
 :pattern ( ($generated@@22 $generated@@203 $generated@@204 $generated@@205 ($generated@@23 $generated@@206) $generated@@207 $generated@@208) ($generated@@22 $generated@@203 $generated@@204 $generated@@209 ($generated@@23 $generated@@206) $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@33 $generated@@210 $generated@@211 ($generated@@23 $generated@@212) $generated@@213 $generated@@214) ($generated@@33 $generated@@210 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
 :pattern ( ($generated@@33 $generated@@210 $generated@@211 ($generated@@23 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 Int) ) (! (= ($generated@@88 $generated@@7 ($generated@@11 ($generated@@75 $generated@@215))) ($generated@@77 $generated@@139 ($generated@@88 $generated@@7 ($generated@@11 $generated@@215))))
 :pattern ( ($generated@@88 $generated@@7 ($generated@@11 ($generated@@75 $generated@@215))))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@T) ) (! (= ($generated@@88 $generated@@217 ($generated@@77 $generated@@217 $generated@@216)) ($generated@@77 $generated@@139 ($generated@@88 $generated@@217 $generated@@216)))
 :pattern ( ($generated@@88 $generated@@217 ($generated@@77 $generated@@217 $generated@@216)))
)))
(assert  (=> (<= 1 $generated@@61) (forall (($generated@@218 T@U) ($generated@@219 Int) ) (!  (=> (or ($generated@@63 $generated@@219) (< 1 $generated@@61)) (and ($generated@@63 (+ $generated@@219 1)) (= ($generated@@62 ($generated@@23 $generated@@218) $generated@@219) ($generated@@80 ($generated@@88 $generated@@7 ($generated@@11 ($generated@@193 ($generated@@75 2) $generated@@219))) ($generated@@62 $generated@@218 (+ $generated@@219 1))))))
 :pattern ( ($generated@@62 ($generated@@23 $generated@@218) $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (forall (($generated@@225 Int) ) (!  (=> (<= 0 $generated@@225) ($generated@@22 $generated@@220 $generated@@221 ($generated@@31 $generated@@225) ($generated@@23 $generated@@222) $generated@@223 $generated@@224))
 :pattern ( ($generated@@22 $generated@@220 $generated@@221 ($generated@@31 $generated@@225) ($generated@@23 $generated@@222) $generated@@223 $generated@@224))
)) ($generated@@33 $generated@@220 $generated@@221 ($generated@@23 $generated@@222) $generated@@223 $generated@@224))
 :pattern ( ($generated@@33 $generated@@220 $generated@@221 ($generated@@23 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! ($generated@@24 $generated@@7 $generated@@226 $generated)
 :pattern ( ($generated@@24 $generated@@7 $generated@@226 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@239  (and (=> (= (ControlFlow 0 2) (- 0 3)) (or ($generated@@22 $generated $generated $generated@@227 ($generated@@23 ($generated@@23 $generated@@228)) ($generated@@62 ($generated@@23 $generated@@228) $generated@@229) ($generated@@66 ($generated@@23 $generated@@228) $generated@@229)) (=> (< 0 ($generated@@27 $generated@@227)) (=> ($generated@@28 ($generated@@62 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229)) (and ($generated@@28 ($generated@@66 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229)) (and (= ($generated@@12 ($generated@@87 $generated@@7 ($generated@@29 ($generated@@62 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229)))) ($generated@@12 ($generated@@87 $generated@@7 ($generated@@29 ($generated@@66 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229))))) ($generated@@22 $generated $generated ($generated@@30 $generated@@227 ($generated@@31 1)) ($generated@@23 ($generated@@23 $generated@@228)) ($generated@@32 ($generated@@62 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229)) ($generated@@32 ($generated@@66 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229))))))))) (=> (or ($generated@@22 $generated $generated $generated@@227 ($generated@@23 ($generated@@23 $generated@@228)) ($generated@@62 ($generated@@23 $generated@@228) $generated@@229) ($generated@@66 ($generated@@23 $generated@@228) $generated@@229)) (=> (< 0 ($generated@@27 $generated@@227)) (=> ($generated@@28 ($generated@@62 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229)) (and ($generated@@28 ($generated@@66 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229)) (and (= ($generated@@12 ($generated@@87 $generated@@7 ($generated@@29 ($generated@@62 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229)))) ($generated@@12 ($generated@@87 $generated@@7 ($generated@@29 ($generated@@66 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229))))) ($generated@@22 $generated $generated ($generated@@30 $generated@@227 ($generated@@31 1)) ($generated@@23 ($generated@@23 $generated@@228)) ($generated@@32 ($generated@@62 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229)) ($generated@@32 ($generated@@66 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229)))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (or ($generated@@22 $generated $generated $generated@@227 ($generated@@23 ($generated@@23 $generated@@228)) ($generated@@62 ($generated@@23 $generated@@228) $generated@@229) ($generated@@66 ($generated@@23 $generated@@228) $generated@@229)) (or (=> (< 0 ($generated@@27 $generated@@227)) (=> ($generated@@28 ($generated@@62 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229)) (and ($generated@@28 ($generated@@66 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229)) (and (= ($generated@@12 ($generated@@87 $generated@@7 ($generated@@29 ($generated@@62 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229)))) ($generated@@12 ($generated@@87 $generated@@7 ($generated@@29 ($generated@@66 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229))))) ($generated@@22 $generated $generated ($generated@@30 $generated@@227 ($generated@@31 1)) ($generated@@23 ($generated@@23 $generated@@228)) ($generated@@32 ($generated@@62 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229)) ($generated@@32 ($generated@@66 ($generated@@23 ($generated@@23 $generated@@228)) $generated@@229))))))) (=> (and (or (not (= $generated@@227 ($generated@@31 0))) (not true)) (= ($generated@@27 $generated@@227) 0)) ($generated@@33 $generated $generated ($generated@@23 ($generated@@23 $generated@@228)) ($generated@@62 ($generated@@23 $generated@@228) $generated@@229) ($generated@@66 ($generated@@23 $generated@@228) $generated@@229))))))))))
(let (($generated@@240  (=> (<= ($generated@@27 $generated@@227) 0) (=> (and (and (and ($generated@@230 $generated@@231) ($generated@@232 $generated@@231)) (= $generated@@233 $generated@@231)) (and (forall (($generated@@241 T@U) ($generated@@242 Int) ) (!  (=> ($generated@@46 $generated@@241 $generated@@227) ($generated@@22 $generated $generated $generated@@241 ($generated@@23 ($generated@@23 $generated@@228)) ($generated@@62 ($generated@@23 $generated@@228) $generated@@242) ($generated@@66 ($generated@@23 $generated@@228) $generated@@242)))
 :pattern ( ($generated@@66 ($generated@@23 $generated@@228) $generated@@242) ($generated@@46 $generated@@241 $generated@@227))
 :pattern ( ($generated@@62 ($generated@@23 $generated@@228) $generated@@242) ($generated@@46 $generated@@241 $generated@@227))
)) (= (ControlFlow 0 7) 2))) $generated@@239))))
(let (($generated@@243  (=> (< 0 ($generated@@27 $generated@@227)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@101 ($generated@@77 $generated@@139 ($generated@@31 1)))) (=> ($generated@@101 ($generated@@77 $generated@@139 ($generated@@31 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@27 ($generated@@77 $generated@@139 ($generated@@31 1))) ($generated@@27 $generated@@227))) (=> (<= ($generated@@27 ($generated@@77 $generated@@139 ($generated@@31 1))) ($generated@@27 $generated@@227)) (=> (and (and (= $generated@@234 ($generated@@30 $generated@@227 ($generated@@31 1))) (= $generated@@235 (+ $generated@@229 1))) (and ($generated@@230 $generated@@236) ($generated@@232 $generated@@236))) (=> (and (and (and ($generated@@63 $generated@@235) ($generated@@67 $generated@@235)) ($generated@@22 $generated $generated $generated@@234 ($generated@@23 ($generated@@23 $generated@@228)) ($generated@@62 ($generated@@23 $generated@@228) $generated@@235) ($generated@@66 ($generated@@23 $generated@@228) $generated@@235))) (and (= $generated@@233 $generated@@236) (= (ControlFlow 0 4) 2))) $generated@@239)))))))))
(let (($generated@@244  (=> (= $generated@@237 ($generated@@137 $generated@@238 $generated@@233 $generated@@1 false)) (and (=> (= (ControlFlow 0 8) 4) $generated@@243) (=> (= (ControlFlow 0 8) 7) $generated@@240)))))
(let (($generated@@245  (=> (and (and ($generated@@230 $generated@@233) ($generated@@232 $generated@@233)) (and (= 3 $generated@@61) (= (ControlFlow 0 9) 8))) $generated@@244)))
$generated@@245))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
