(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (Int) T@U)
(declare-fun $generated@@24 (Int) Bool)
(declare-fun $generated@@25 (Int) Int)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@U) Int)
(declare-fun $generated@@47 (T@T T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (Int T@U Int) T@U)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@86 (Int Int T@U Int) T@U)
(declare-fun $generated@@87 (Int Int) Int)
(declare-fun $generated@@98 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U Int) T@U)
(declare-fun $generated@@108 (Int T@U Int Int) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@146 (T@T T@T) T@T)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@T) T@T)
(declare-fun $generated@@149 (T@T) T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@197 (Int T@U) T@U)
(declare-fun $generated@@212 (Int T@U Int Int) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@6 $generated@@27) 3))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@31 Int) ) (!  (=> (or ($generated@@24 $generated@@31) (and (< 0 $generated@@22) (and (<= ($generated@@25 0) $generated@@31) (< $generated@@31 3)))) (= ($generated@@23 $generated@@31) ($generated@@26 $generated@@27 ($generated@@28 ($generated@@28 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@8 ($generated@@12 ($generated@@25 (- 0 5))))) ($generated@@30 $generated@@8 ($generated@@12 ($generated@@25 4)))) ($generated@@30 $generated@@8 ($generated@@12 ($generated@@25 0)))) ($generated@@30 $generated@@8 ($generated@@12 ($generated@@25 (- 0 12))))))))
 :pattern ( ($generated@@23 $generated@@31))
))))
(assert (= ($generated@@32 $generated) $generated@@0))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! ($generated@@33 $generated@@8 $generated@@35 $generated@@34 $generated@@36)
 :pattern ( ($generated@@33 $generated@@8 $generated@@35 $generated@@34 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@37 ($generated@@28 $generated@@38 $generated@@39) $generated@@40)  (or (= $generated@@39 $generated@@40) ($generated@@37 $generated@@38 $generated@@40)))
 :pattern ( ($generated@@37 ($generated@@28 $generated@@38 $generated@@39) $generated@@40))
)))
(assert (forall (($generated@@41 T@U) ) (!  (not ($generated@@37 $generated@@29 $generated@@41))
 :pattern ( ($generated@@37 $generated@@29 $generated@@41))
)))
(assert (= ($generated@@42 $generated@@29) 0))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@43 Int) ) (!  (=> (or ($generated@@24 ($generated@@25 $generated@@43)) (and (< 0 $generated@@22) (and (<= ($generated@@25 0) $generated@@43) ($generated@@11 ($generated@@26 $generated@@7 ($generated@@10 (< $generated@@43 3))))))) (= ($generated@@23 ($generated@@25 $generated@@43)) ($generated@@26 $generated@@27 ($generated@@28 ($generated@@28 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@8 ($generated@@12 ($generated@@25 (- 0 5))))) ($generated@@30 $generated@@8 ($generated@@12 ($generated@@25 4)))) ($generated@@30 $generated@@8 ($generated@@12 ($generated@@25 0)))) ($generated@@30 $generated@@8 ($generated@@12 ($generated@@25 (- 0 12))))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@25 $generated@@43)))
))))
(assert (forall (($generated@@44 Int) ) (! (= ($generated@@25 $generated@@44) $generated@@44)
 :pattern ( ($generated@@25 $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@26 $generated@@46 $generated@@45) $generated@@45)
 :pattern ( ($generated@@26 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (and ($generated@@47 $generated@@27 $generated@@50 ($generated@@48 $generated@@52)) ($generated@@49 $generated@@51 $generated@@52)) ($generated@@47 $generated@@27 ($generated@@28 $generated@@50 $generated@@51) ($generated@@48 $generated@@52)))
 :pattern ( ($generated@@47 $generated@@27 ($generated@@28 $generated@@50 $generated@@51) ($generated@@48 $generated@@52)))
)))
(assert  (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@53 $generated@@57 $generated@@58 ($generated@@56 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@61) $generated@@59)
 :weight 0
)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (or (= $generated@@66 $generated@@67) (= ($generated@@53 $generated@@62 $generated@@63 ($generated@@56 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@67) ($generated@@53 $generated@@62 $generated@@63 $generated@@65 $generated@@67)))
 :weight 0
))) (= ($generated@@6 $generated@@54) 4)))
(assert (forall (($generated@@68 Int) ($generated@@69 T@U) ($generated@@70 Int) ($generated@@71 T@U) ) (! (= ($generated@@11 ($generated@@53 $generated@@54 $generated@@7 ($generated@@55 $generated@@68 $generated@@69 $generated@@70) $generated@@71)) (exists (($generated@@72 Int) ($generated@@73 Int) ) (!  (and (and (<= $generated@@68 $generated@@72) (and (and ($generated@@37 $generated@@69 ($generated@@30 $generated@@8 ($generated@@12 $generated@@72))) (< $generated@@72 $generated@@70)) ($generated@@37 ($generated@@23 $generated@@72) ($generated@@30 $generated@@8 ($generated@@12 $generated@@73))))) (= $generated@@71 ($generated@@30 $generated@@8 ($generated@@12 $generated@@73))))
 :pattern ( ($generated@@37 ($generated@@23 $generated@@72) ($generated@@30 $generated@@8 ($generated@@12 $generated@@73))))
)))
 :pattern ( ($generated@@53 $generated@@54 $generated@@7 ($generated@@55 $generated@@68 $generated@@69 $generated@@70) $generated@@71))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@30 $generated@@76 ($generated@@74 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@74 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@77 ($generated@@78 $generated@@79) $generated@@80) ($generated@@11 ($generated@@53 $generated@@54 $generated@@7 $generated@@79 $generated@@80)))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@79) $generated@@80))
)))
(assert (= ($generated@@6 $generated@@81) 5))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@47 $generated@@81 $generated@@83 ($generated@@82 $generated@@84)) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@77 $generated@@83 $generated@@85) ($generated@@49 $generated@@85 $generated@@84))
 :pattern ( ($generated@@77 $generated@@83 $generated@@85))
)))
 :pattern ( ($generated@@47 $generated@@81 $generated@@83 ($generated@@82 $generated@@84)))
)))
(assert (forall (($generated@@88 Int) ($generated@@89 Int) ($generated@@90 T@U) ($generated@@91 Int) ($generated@@92 T@U) ) (! (= ($generated@@11 ($generated@@53 $generated@@54 $generated@@7 ($generated@@86 $generated@@88 $generated@@89 $generated@@90 $generated@@91) $generated@@92)) (exists (($generated@@93 Int) ($generated@@94 Int) )  (and (and (and (<= $generated@@88 $generated@@93) (<= $generated@@89 $generated@@94)) (and ($generated@@37 $generated@@90 ($generated@@30 $generated@@8 ($generated@@12 $generated@@93))) (= $generated@@94 ($generated@@87 $generated@@91 $generated@@93)))) (= $generated@@92 ($generated@@30 $generated@@8 ($generated@@12 $generated@@94))))))
 :pattern ( ($generated@@53 $generated@@54 $generated@@7 ($generated@@86 $generated@@88 $generated@@89 $generated@@90 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@47 $generated@@8 $generated@@95 $generated@@34) (<= ($generated@@25 0) ($generated@@13 $generated@@95)))
 :pattern ( ($generated@@47 $generated@@8 $generated@@95 $generated@@34))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@42 ($generated@@28 $generated@@96 $generated@@97)) (+ 1 ($generated@@42 $generated@@96)))
 :pattern ( ($generated@@28 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@98 ($generated@@30 $generated@@102 $generated@@99) $generated@@100 $generated@@101) ($generated@@33 $generated@@102 $generated@@99 $generated@@100 $generated@@101))
 :pattern ( ($generated@@98 ($generated@@30 $generated@@102 $generated@@99) $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@49 $generated@@103 $generated@@34) (and (= ($generated@@30 $generated@@8 ($generated@@74 $generated@@8 $generated@@103)) $generated@@103) ($generated@@47 $generated@@8 ($generated@@74 $generated@@8 $generated@@103) $generated@@34)))
 :pattern ( ($generated@@49 $generated@@103 $generated@@34))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 Int) ($generated@@107 T@U) ) (!  (and (=> (= $generated@@106 ($generated@@42 $generated@@105)) (= ($generated@@104 ($generated@@28 $generated@@105 $generated@@107) $generated@@106) $generated@@107)) (=> (or (not (= $generated@@106 ($generated@@42 $generated@@105))) (not true)) (= ($generated@@104 ($generated@@28 $generated@@105 $generated@@107) $generated@@106) ($generated@@104 $generated@@105 $generated@@106))))
 :pattern ( ($generated@@104 ($generated@@28 $generated@@105 $generated@@107) $generated@@106))
)))
(assert (forall (($generated@@109 Int) ($generated@@110 T@U) ($generated@@111 Int) ($generated@@112 Int) ($generated@@113 T@U) ) (! (= ($generated@@11 ($generated@@53 $generated@@54 $generated@@7 ($generated@@108 $generated@@109 $generated@@110 $generated@@111 $generated@@112) $generated@@113)) (exists (($generated@@114 Int) ($generated@@115 Int) ) (!  (and (and (<= $generated@@109 $generated@@114) (and (and (and ($generated@@37 $generated@@110 ($generated@@30 $generated@@8 ($generated@@12 $generated@@114))) (< $generated@@114 $generated@@111)) ($generated@@37 ($generated@@23 $generated@@114) ($generated@@30 $generated@@8 ($generated@@12 $generated@@115)))) (<= $generated@@112 $generated@@115))) (= $generated@@113 ($generated@@30 $generated@@8 ($generated@@12 $generated@@115))))
 :pattern ( ($generated@@37 ($generated@@23 $generated@@114) ($generated@@30 $generated@@8 ($generated@@12 $generated@@115))))
)))
 :pattern ( ($generated@@53 $generated@@54 $generated@@7 ($generated@@108 $generated@@109 $generated@@110 $generated@@111 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@37 $generated@@116 $generated@@117) (exists (($generated@@118 Int) ) (!  (and (and (<= 0 $generated@@118) (< $generated@@118 ($generated@@42 $generated@@116))) (= ($generated@@104 $generated@@116 $generated@@118) $generated@@117))
 :pattern ( ($generated@@104 $generated@@116 $generated@@118))
)))
 :pattern ( ($generated@@37 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 Int) ($generated@@120 Int) ) (! (= ($generated@@87 $generated@@119 $generated@@120) (div $generated@@119 $generated@@120))
 :pattern ( ($generated@@87 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@49 $generated@@121 $generated) (and (= ($generated@@30 $generated@@8 ($generated@@74 $generated@@8 $generated@@121)) $generated@@121) ($generated@@47 $generated@@8 ($generated@@74 $generated@@8 $generated@@121) $generated)))
 :pattern ( ($generated@@49 $generated@@121 $generated))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@49 ($generated@@30 $generated@@124 $generated@@122) $generated@@123) ($generated@@47 $generated@@124 $generated@@122 $generated@@123))
 :pattern ( ($generated@@49 ($generated@@30 $generated@@124 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (! (<= 0 ($generated@@42 $generated@@125))
 :pattern ( ($generated@@42 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@33 $generated@@81 $generated@@126 ($generated@@82 $generated@@127) $generated@@128) (forall (($generated@@129 T@U) ) (!  (=> ($generated@@77 $generated@@126 $generated@@129) ($generated@@98 $generated@@129 $generated@@127 $generated@@128))
 :pattern ( ($generated@@77 $generated@@126 $generated@@129))
)))
 :pattern ( ($generated@@33 $generated@@81 $generated@@126 ($generated@@82 $generated@@127) $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@33 $generated@@27 $generated@@130 ($generated@@48 $generated@@131) $generated@@132) (forall (($generated@@133 Int) ) (!  (=> (and (<= 0 $generated@@133) (< $generated@@133 ($generated@@42 $generated@@130))) ($generated@@98 ($generated@@104 $generated@@130 $generated@@133) $generated@@131 $generated@@132))
 :pattern ( ($generated@@104 $generated@@130 $generated@@133))
)))
 :pattern ( ($generated@@33 $generated@@27 $generated@@130 ($generated@@48 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@134 ($generated@@82 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@82 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@32 ($generated@@82 $generated@@136)) $generated@@1)
 :pattern ( ($generated@@82 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@137 ($generated@@48 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@48 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@32 ($generated@@48 $generated@@139)) $generated@@2)
 :pattern ( ($generated@@48 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@74 $generated@@141 ($generated@@30 $generated@@141 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@30 $generated@@141 $generated@@140))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@142 $generated@@150 $generated@@151 $generated@@152 ($generated@@147 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@155 $generated@@156) $generated@@153)
 :weight 0
)) (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@142 $generated@@157 $generated@@158 $generated@@159 ($generated@@147 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@142 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@142 $generated@@166 $generated@@167 $generated@@168 ($generated@@147 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@142 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)))) (= ($generated@@6 $generated@@143) 6)) (= ($generated@@6 $generated@@144) 7)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@6 ($generated@@146 $generated@@175 $generated@@176)) 8))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@148 ($generated@@146 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@146 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@149 ($generated@@146 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@146 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@11 ($generated@@142 $generated@@143 $generated@@144 $generated@@7 ($generated@@145 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (or (not (= $generated@@185 $generated@@181)) (not true)) ($generated@@11 ($generated@@74 $generated@@7 ($generated@@53 $generated@@144 $generated@@54 ($generated@@53 $generated@@143 ($generated@@146 $generated@@144 $generated@@54) $generated@@182 $generated@@185) $generated@@183)))) $generated@@184))
 :pattern ( ($generated@@142 $generated@@143 $generated@@144 $generated@@7 ($generated@@145 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (and (= ($generated@@187 ($generated@@28 $generated@@189 $generated@@190)) $generated@@189) (= ($generated@@188 ($generated@@28 $generated@@189 $generated@@190)) $generated@@190))
 :pattern ( ($generated@@28 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@49 $generated@@191 ($generated@@82 $generated@@192)) (and (= ($generated@@30 $generated@@81 ($generated@@74 $generated@@81 $generated@@191)) $generated@@191) ($generated@@47 $generated@@81 ($generated@@74 $generated@@81 $generated@@191) ($generated@@82 $generated@@192))))
 :pattern ( ($generated@@49 $generated@@191 ($generated@@82 $generated@@192)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> ($generated@@49 $generated@@193 ($generated@@48 $generated@@194)) (and (= ($generated@@30 $generated@@27 ($generated@@74 $generated@@27 $generated@@193)) $generated@@193) ($generated@@47 $generated@@27 ($generated@@74 $generated@@27 $generated@@193) ($generated@@48 $generated@@194))))
 :pattern ( ($generated@@49 $generated@@193 ($generated@@48 $generated@@194)))
)))
(assert (= ($generated@@32 $generated@@34) $generated@@4))
(assert (= ($generated@@195 $generated@@34) $generated@@5))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@196 Int) ) (!  (=> (or ($generated@@24 $generated@@196) (and (< 0 $generated@@22) (and (<= ($generated@@25 0) $generated@@196) (< $generated@@196 3)))) ($generated@@47 $generated@@27 ($generated@@23 $generated@@196) ($generated@@48 $generated)))
 :pattern ( ($generated@@23 $generated@@196))
))))
(assert (forall (($generated@@198 Int) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@11 ($generated@@53 $generated@@54 $generated@@7 ($generated@@197 $generated@@198 $generated@@199) $generated@@200)) (exists (($generated@@201 Int) ($generated@@202 Int) ) (!  (and (and (<= $generated@@198 $generated@@201) (and ($generated@@37 $generated@@199 ($generated@@30 $generated@@8 ($generated@@12 $generated@@201))) ($generated@@37 ($generated@@23 $generated@@201) ($generated@@30 $generated@@8 ($generated@@12 $generated@@202))))) (= $generated@@200 ($generated@@30 $generated@@8 ($generated@@12 $generated@@202))))
 :pattern ( ($generated@@37 ($generated@@23 $generated@@201) ($generated@@30 $generated@@8 ($generated@@12 $generated@@202))))
)))
 :pattern ( ($generated@@53 $generated@@54 $generated@@7 ($generated@@197 $generated@@198 $generated@@199) $generated@@200))
)))
(assert (forall (($generated@@203 Int) ) (! (= ($generated@@30 $generated@@8 ($generated@@12 ($generated@@25 $generated@@203))) ($generated@@26 $generated@@54 ($generated@@30 $generated@@8 ($generated@@12 $generated@@203))))
 :pattern ( ($generated@@30 $generated@@8 ($generated@@12 ($generated@@25 $generated@@203))))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@T) ) (! (= ($generated@@30 $generated@@205 ($generated@@26 $generated@@205 $generated@@204)) ($generated@@26 $generated@@54 ($generated@@30 $generated@@205 $generated@@204)))
 :pattern ( ($generated@@30 $generated@@205 ($generated@@26 $generated@@205 $generated@@204)))
)))
(assert (forall (($generated@@206 T@U) ) (!  (=> (= ($generated@@42 $generated@@206) 0) (= $generated@@206 $generated@@29))
 :pattern ( ($generated@@42 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! ($generated@@33 $generated@@8 $generated@@208 $generated $generated@@207)
 :pattern ( ($generated@@33 $generated@@8 $generated@@208 $generated $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@47 $generated@@27 $generated@@209 ($generated@@48 $generated@@210)) (forall (($generated@@211 Int) ) (!  (=> (and (<= 0 $generated@@211) (< $generated@@211 ($generated@@42 $generated@@209))) ($generated@@49 ($generated@@104 $generated@@209 $generated@@211) $generated@@210))
 :pattern ( ($generated@@104 $generated@@209 $generated@@211))
)))
 :pattern ( ($generated@@47 $generated@@27 $generated@@209 ($generated@@48 $generated@@210)))
)))
(assert (forall (($generated@@213 Int) ($generated@@214 T@U) ($generated@@215 Int) ($generated@@216 Int) ($generated@@217 T@U) ) (! (= ($generated@@11 ($generated@@53 $generated@@54 $generated@@7 ($generated@@212 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217)) (exists (($generated@@218 Int) ($generated@@219 Int) )  (and (and (<= $generated@@213 $generated@@218) (and (and ($generated@@37 $generated@@214 ($generated@@30 $generated@@8 ($generated@@12 $generated@@218))) (< $generated@@215 $generated@@218)) (= $generated@@219 ($generated@@87 $generated@@216 $generated@@218)))) (= $generated@@217 ($generated@@30 $generated@@8 ($generated@@12 $generated@@219))))))
 :pattern ( ($generated@@53 $generated@@54 $generated@@7 ($generated@@212 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ) (! ($generated@@47 $generated@@8 $generated@@220 $generated)
 :pattern ( ($generated@@47 $generated@@8 $generated@@220 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () Int)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () Int)
(declare-fun $generated@@227 () Int)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () Int)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () Int)
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 70) (let (($generated@@253 true))
(let (($generated@@254  (=> (and (not (and (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@222))) (< $generated@@222 3)) ($generated@@37 ($generated@@23 $generated@@222) ($generated@@30 $generated@@8 ($generated@@12 $generated@@223)))) (<= ($generated@@25 0) $generated@@223))) (= (ControlFlow 0 6) 1)) $generated@@253)))
(let (($generated@@255  (=> (and (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@222))) (< $generated@@222 3)) ($generated@@37 ($generated@@23 $generated@@222) ($generated@@30 $generated@@8 ($generated@@12 $generated@@223)))) (<= ($generated@@25 0) $generated@@223)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= ($generated@@25 0) $generated@@223)) (=> (<= ($generated@@25 0) $generated@@223) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@25 0) $generated@@223)) (=> (<= ($generated@@25 0) $generated@@223) (=> (= (ControlFlow 0 3) 1) $generated@@253))))))))
(let (($generated@@256  (=> (not (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@222))) (< $generated@@222 3)) ($generated@@37 ($generated@@23 $generated@@222) ($generated@@30 $generated@@8 ($generated@@12 $generated@@223))))) (and (=> (= (ControlFlow 0 8) 3) $generated@@255) (=> (= (ControlFlow 0 8) 6) $generated@@254)))))
(let (($generated@@257  (=> (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@222))) (< $generated@@222 3)) ($generated@@37 ($generated@@23 $generated@@222) ($generated@@30 $generated@@8 ($generated@@12 $generated@@223)))) (and (=> (= (ControlFlow 0 7) 3) $generated@@255) (=> (= (ControlFlow 0 7) 6) $generated@@254)))))
(let (($generated@@258  (=> (not (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@222))) (< $generated@@222 3))) (and (=> (= (ControlFlow 0 11) 7) $generated@@257) (=> (= (ControlFlow 0 11) 8) $generated@@256)))))
(let (($generated@@259  (=> (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@222))) (< $generated@@222 3)) ($generated@@33 $generated@@8 ($generated@@12 $generated@@222) $generated@@34 $generated@@224)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (< $generated@@222 3)) (=> (and (< $generated@@222 3) ($generated@@24 $generated@@222)) (and (=> (= (ControlFlow 0 9) 7) $generated@@257) (=> (= (ControlFlow 0 9) 8) $generated@@256)))))))
(let (($generated@@260  (=> (not ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@222)))) (and (=> (= (ControlFlow 0 13) 9) $generated@@259) (=> (= (ControlFlow 0 13) 11) $generated@@258)))))
(let (($generated@@261  (=> ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@222))) (and (=> (= (ControlFlow 0 12) 9) $generated@@259) (=> (= (ControlFlow 0 12) 11) $generated@@258)))))
(let (($generated@@262  (=> (<= ($generated@@25 0) $generated@@222) (and (=> (= (ControlFlow 0 14) 12) $generated@@261) (=> (= (ControlFlow 0 14) 13) $generated@@260)))))
(let (($generated@@263  (=> (and (< $generated@@222 ($generated@@25 0)) (= (ControlFlow 0 2) 1)) $generated@@253)))
(let (($generated@@264  (=> (and (forall (($generated@@265 Int) ($generated@@266 T@U) ) (!  (=> (<= ($generated@@25 0) $generated@@265) (=> ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@265))) (=> (< $generated@@265 3) ($generated@@24 $generated@@265))))
 :pattern ( ($generated@@37 ($generated@@23 $generated@@265) ($generated@@30 $generated@@8 $generated@@266)))
)) (= $generated@@225 ($generated@@78 ($generated@@55 ($generated@@25 0) $generated@@221 3)))) (and (=> (= (ControlFlow 0 15) 14) $generated@@262) (=> (= (ControlFlow 0 15) 2) $generated@@263)))))
(let (($generated@@267  (=> (and (not (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@226))) (< $generated@@226 3)) ($generated@@37 ($generated@@23 $generated@@226) ($generated@@30 $generated@@8 ($generated@@12 $generated@@227))))) (= (ControlFlow 0 20) 15)) $generated@@264)))
(let (($generated@@268  (=> (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@226))) (< $generated@@226 3)) ($generated@@37 ($generated@@23 $generated@@226) ($generated@@30 $generated@@8 ($generated@@12 $generated@@227)))) (and (=> (= (ControlFlow 0 17) (- 0 19)) (<= ($generated@@25 0) $generated@@227)) (=> (<= ($generated@@25 0) $generated@@227) (and (=> (= (ControlFlow 0 17) (- 0 18)) (<= ($generated@@25 0) $generated@@227)) (=> (<= ($generated@@25 0) $generated@@227) (=> (= (ControlFlow 0 17) 15) $generated@@264))))))))
(let (($generated@@269  (=> (not (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@226))) (< $generated@@226 3))) (and (=> (= (ControlFlow 0 23) 17) $generated@@268) (=> (= (ControlFlow 0 23) 20) $generated@@267)))))
(let (($generated@@270  (=> (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@226))) (< $generated@@226 3)) ($generated@@33 $generated@@8 ($generated@@12 $generated@@226) $generated@@34 $generated@@224)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (< $generated@@226 3)) (=> (and (< $generated@@226 3) ($generated@@24 $generated@@226)) (and (=> (= (ControlFlow 0 21) 17) $generated@@268) (=> (= (ControlFlow 0 21) 20) $generated@@267)))))))
(let (($generated@@271  (=> (not ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@226)))) (and (=> (= (ControlFlow 0 25) 21) $generated@@270) (=> (= (ControlFlow 0 25) 23) $generated@@269)))))
(let (($generated@@272  (=> ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@226))) (and (=> (= (ControlFlow 0 24) 21) $generated@@270) (=> (= (ControlFlow 0 24) 23) $generated@@269)))))
(let (($generated@@273  (=> (<= ($generated@@25 0) $generated@@226) (and (=> (= (ControlFlow 0 26) 24) $generated@@272) (=> (= (ControlFlow 0 26) 25) $generated@@271)))))
(let (($generated@@274  (=> (and (< $generated@@226 ($generated@@25 0)) (= (ControlFlow 0 16) 15)) $generated@@264)))
(let (($generated@@275  (=> (and (forall (($generated@@276 Int) ($generated@@277 T@U) ) (!  (=> (<= ($generated@@25 0) $generated@@276) (=> ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@276))) (=> (< $generated@@276 3) ($generated@@24 $generated@@276))))
 :pattern ( ($generated@@37 ($generated@@23 $generated@@276) ($generated@@30 $generated@@8 $generated@@277)))
)) (= $generated@@228 ($generated@@78 ($generated@@55 ($generated@@25 0) $generated@@221 3)))) (and (=> (= (ControlFlow 0 27) 26) $generated@@273) (=> (= (ControlFlow 0 27) 16) $generated@@274)))))
(let (($generated@@278  (=> (and (not (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@229))) (< $generated@@229 3)) ($generated@@37 ($generated@@23 $generated@@229) ($generated@@30 $generated@@8 ($generated@@12 $generated@@230))))) (= (ControlFlow 0 30) 27)) $generated@@275)))
(let (($generated@@279  (=> (and (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@229))) (< $generated@@229 3)) ($generated@@37 ($generated@@23 $generated@@229) ($generated@@30 $generated@@8 ($generated@@12 $generated@@230)))) (= (ControlFlow 0 29) 27)) $generated@@275)))
(let (($generated@@280  (=> (not (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@229))) (< $generated@@229 3))) (and (=> (= (ControlFlow 0 33) 29) $generated@@279) (=> (= (ControlFlow 0 33) 30) $generated@@278)))))
(let (($generated@@281  (=> (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@229))) (< $generated@@229 3)) ($generated@@33 $generated@@8 ($generated@@12 $generated@@229) $generated@@34 $generated@@224)) (and (=> (= (ControlFlow 0 31) (- 0 32)) (< $generated@@229 3)) (=> (and (< $generated@@229 3) ($generated@@24 $generated@@229)) (and (=> (= (ControlFlow 0 31) 29) $generated@@279) (=> (= (ControlFlow 0 31) 30) $generated@@278)))))))
(let (($generated@@282  (=> (not ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@229)))) (and (=> (= (ControlFlow 0 35) 31) $generated@@281) (=> (= (ControlFlow 0 35) 33) $generated@@280)))))
(let (($generated@@283  (=> ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@229))) (and (=> (= (ControlFlow 0 34) 31) $generated@@281) (=> (= (ControlFlow 0 34) 33) $generated@@280)))))
(let (($generated@@284  (=> (<= ($generated@@25 0) $generated@@229) (and (=> (= (ControlFlow 0 36) 34) $generated@@283) (=> (= (ControlFlow 0 36) 35) $generated@@282)))))
(let (($generated@@285  (=> (and (< $generated@@229 ($generated@@25 0)) (= (ControlFlow 0 28) 27)) $generated@@275)))
(let (($generated@@286  (=> (and (forall (($generated@@287 Int) ($generated@@288 T@U) ) (!  (=> (<= ($generated@@25 0) $generated@@287) (=> ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@287))) ($generated@@24 $generated@@287)))
 :pattern ( ($generated@@37 ($generated@@23 $generated@@287) ($generated@@30 $generated@@8 $generated@@288)))
)) (= $generated@@231 ($generated@@78 ($generated@@197 ($generated@@25 0) $generated@@221)))) (and (=> (= (ControlFlow 0 37) 36) $generated@@284) (=> (= (ControlFlow 0 37) 28) $generated@@285)))))
(let (($generated@@289  (=> (and (not (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@232))) ($generated@@37 ($generated@@23 $generated@@232) ($generated@@30 $generated@@8 ($generated@@12 $generated@@233))))) (= (ControlFlow 0 40) 37)) $generated@@286)))
(let (($generated@@290  (=> (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@232))) ($generated@@37 ($generated@@23 $generated@@232) ($generated@@30 $generated@@8 ($generated@@12 $generated@@233)))) (= (ControlFlow 0 39) 37)) $generated@@286)))
(let (($generated@@291  (=> (not ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@232)))) (and (=> (= (ControlFlow 0 43) 39) $generated@@290) (=> (= (ControlFlow 0 43) 40) $generated@@289)))))
(let (($generated@@292  (=> (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@232))) ($generated@@33 $generated@@8 ($generated@@12 $generated@@232) $generated@@34 $generated@@224)) (and (=> (= (ControlFlow 0 41) (- 0 42)) (< $generated@@232 3)) (=> (and (< $generated@@232 3) ($generated@@24 $generated@@232)) (and (=> (= (ControlFlow 0 41) 39) $generated@@290) (=> (= (ControlFlow 0 41) 40) $generated@@289)))))))
(let (($generated@@293  (=> (<= ($generated@@25 0) $generated@@232) (and (=> (= (ControlFlow 0 44) 41) $generated@@292) (=> (= (ControlFlow 0 44) 43) $generated@@291)))))
(let (($generated@@294  (=> (and (< $generated@@232 ($generated@@25 0)) (= (ControlFlow 0 38) 37)) $generated@@286)))
(let (($generated@@295  (=> (= $generated@@234 ($generated@@78 ($generated@@212 ($generated@@25 0) $generated@@221 0 6))) (and (=> (= (ControlFlow 0 45) 44) $generated@@293) (=> (= (ControlFlow 0 45) 38) $generated@@294)))))
(let (($generated@@296  (=> (and (not (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@235))) (< 0 $generated@@235)) (= $generated@@236 ($generated@@87 6 $generated@@235)))) (= (ControlFlow 0 48) 45)) $generated@@295)))
(let (($generated@@297  (=> (and (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@235))) (< 0 $generated@@235)) (= $generated@@236 ($generated@@87 6 $generated@@235))) (= (ControlFlow 0 47) 45)) $generated@@295)))
(let (($generated@@298  (=> (not (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@235))) (< 0 $generated@@235))) (and (=> (= (ControlFlow 0 52) 47) $generated@@297) (=> (= (ControlFlow 0 52) 48) $generated@@296)))))
(let (($generated@@299  (=> (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@235))) (< 0 $generated@@235)) (and (=> (= (ControlFlow 0 49) (- 0 51)) (or (not (= $generated@@235 0)) (not true))) (=> (or (not (= $generated@@235 0)) (not true)) (=> (= $generated@@237 ($generated@@87 6 $generated@@235)) (and (=> (= (ControlFlow 0 49) (- 0 50)) (<= ($generated@@25 0) $generated@@237)) (=> (<= ($generated@@25 0) $generated@@237) (and (=> (= (ControlFlow 0 49) 47) $generated@@297) (=> (= (ControlFlow 0 49) 48) $generated@@296))))))))))
(let (($generated@@300  (=> (not ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@235)))) (and (=> (= (ControlFlow 0 54) 49) $generated@@299) (=> (= (ControlFlow 0 54) 52) $generated@@298)))))
(let (($generated@@301  (=> ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@235))) (and (=> (= (ControlFlow 0 53) 49) $generated@@299) (=> (= (ControlFlow 0 53) 52) $generated@@298)))))
(let (($generated@@302  (=> (<= ($generated@@25 0) $generated@@235) (and (=> (= (ControlFlow 0 55) 53) $generated@@301) (=> (= (ControlFlow 0 55) 54) $generated@@300)))))
(let (($generated@@303  (=> (and (< $generated@@235 ($generated@@25 0)) (= (ControlFlow 0 46) 45)) $generated@@295)))
(let (($generated@@304  (=> (= $generated@@238 ($generated@@78 ($generated@@86 ($generated@@25 0) ($generated@@25 0) $generated@@221 6))) (and (=> (= (ControlFlow 0 56) 55) $generated@@302) (=> (= (ControlFlow 0 56) 46) $generated@@303)))))
(let (($generated@@305  (=> (and (not (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@239))) (= $generated@@240 ($generated@@87 6 $generated@@239)))) (= (ControlFlow 0 59) 56)) $generated@@304)))
(let (($generated@@306  (=> (and (and ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@239))) (= $generated@@240 ($generated@@87 6 $generated@@239))) (= (ControlFlow 0 58) 56)) $generated@@304)))
(let (($generated@@307  (=> (not ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@239)))) (and (=> (= (ControlFlow 0 63) 58) $generated@@306) (=> (= (ControlFlow 0 63) 59) $generated@@305)))))
(let (($generated@@308  (=> ($generated@@37 $generated@@221 ($generated@@30 $generated@@8 ($generated@@12 $generated@@239))) (and (=> (= (ControlFlow 0 60) (- 0 62)) (or (not (= $generated@@239 0)) (not true))) (=> (or (not (= $generated@@239 0)) (not true)) (=> (= $generated@@241 ($generated@@87 6 $generated@@239)) (and (=> (= (ControlFlow 0 60) (- 0 61)) (<= ($generated@@25 0) $generated@@241)) (=> (<= ($generated@@25 0) $generated@@241) (and (=> (= (ControlFlow 0 60) 58) $generated@@306) (=> (= (ControlFlow 0 60) 59) $generated@@305))))))))))
(let (($generated@@309  (=> (and (<= ($generated@@25 0) $generated@@239) (<= ($generated@@25 0) $generated@@240)) (and (=> (= (ControlFlow 0 64) 60) $generated@@308) (=> (= (ControlFlow 0 64) 63) $generated@@307)))))
(let (($generated@@310  (=> (and (not (and (<= ($generated@@25 0) $generated@@239) (<= ($generated@@25 0) $generated@@240))) (= (ControlFlow 0 57) 56)) $generated@@304)))
(let (($generated@@311  (=> (= $generated@@242 ($generated@@145 $generated@@243 $generated@@224 $generated@@3 false)) (and (=> (= (ControlFlow 0 65) (- 0 69)) ($generated@@47 $generated@@8 ($generated@@12 ($generated@@25 0)) $generated@@34)) (=> ($generated@@47 $generated@@8 ($generated@@12 ($generated@@25 0)) $generated@@34) (and (=> (= (ControlFlow 0 65) (- 0 68)) ($generated@@47 $generated@@8 ($generated@@12 ($generated@@25 1)) $generated@@34)) (=> ($generated@@47 $generated@@8 ($generated@@12 ($generated@@25 1)) $generated@@34) (and (=> (= (ControlFlow 0 65) (- 0 67)) ($generated@@47 $generated@@8 ($generated@@12 ($generated@@25 2)) $generated@@34)) (=> ($generated@@47 $generated@@8 ($generated@@12 ($generated@@25 2)) $generated@@34) (and (=> (= (ControlFlow 0 65) (- 0 66)) ($generated@@47 $generated@@8 ($generated@@12 ($generated@@25 3)) $generated@@34)) (=> ($generated@@47 $generated@@8 ($generated@@12 ($generated@@25 3)) $generated@@34) (=> (= $generated@@221 ($generated@@26 $generated@@27 ($generated@@28 ($generated@@28 ($generated@@28 ($generated@@28 $generated@@29 ($generated@@30 $generated@@8 ($generated@@12 ($generated@@25 0)))) ($generated@@30 $generated@@8 ($generated@@12 ($generated@@25 1)))) ($generated@@30 $generated@@8 ($generated@@12 ($generated@@25 2)))) ($generated@@30 $generated@@8 ($generated@@12 ($generated@@25 3)))))) (and (=> (= (ControlFlow 0 65) 64) $generated@@309) (=> (= (ControlFlow 0 65) 57) $generated@@310))))))))))))))
(let (($generated@@312  (=> (and ($generated@@244 $generated@@224) ($generated@@245 $generated@@224)) (=> (and (and (and (and (and ($generated@@47 $generated@@27 $generated@@246 ($generated@@48 $generated@@34)) ($generated@@33 $generated@@27 $generated@@246 ($generated@@48 $generated@@34) $generated@@224)) true) (and (and ($generated@@47 $generated@@81 $generated@@247 ($generated@@82 $generated@@34)) ($generated@@33 $generated@@81 $generated@@247 ($generated@@82 $generated@@34) $generated@@224)) true)) (and (and (and ($generated@@47 $generated@@81 $generated@@248 ($generated@@82 $generated)) ($generated@@33 $generated@@81 $generated@@248 ($generated@@82 $generated) $generated@@224)) true) (and (and ($generated@@47 $generated@@81 $generated@@249 ($generated@@82 $generated)) ($generated@@33 $generated@@81 $generated@@249 ($generated@@82 $generated) $generated@@224)) true))) (and (and (and (and ($generated@@47 $generated@@81 $generated@@250 ($generated@@82 $generated)) ($generated@@33 $generated@@81 $generated@@250 ($generated@@82 $generated) $generated@@224)) true) (and (and ($generated@@47 $generated@@81 $generated@@251 ($generated@@82 $generated@@34)) ($generated@@33 $generated@@81 $generated@@251 ($generated@@82 $generated@@34) $generated@@224)) true)) (and (and (and ($generated@@47 $generated@@81 $generated@@252 ($generated@@82 $generated@@34)) ($generated@@33 $generated@@81 $generated@@252 ($generated@@82 $generated@@34) $generated@@224)) true) (and (= 1 $generated@@22) (= (ControlFlow 0 70) 65))))) $generated@@311))))
$generated@@312)))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 41) (- 42))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 17) (- 19))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 60) (- 62))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
