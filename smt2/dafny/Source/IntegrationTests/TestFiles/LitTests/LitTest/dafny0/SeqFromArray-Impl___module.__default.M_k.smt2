(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U Int) T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@71 (T@U Int) T@U)
(declare-fun $generated@@72 (T@U T@U) T@U)
(declare-fun $generated@@73 (Int) T@U)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U Int) T@U)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@U T@U) Bool)
(declare-fun $generated@@101 (T@T T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@130 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Int)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@153 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and (or (not (= $generated@@29 $generated@@25)) (not true)) (= ($generated@@26 $generated@@29) ($generated@@24 $generated@@28))) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@23 $generated@@29)) $generated))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@24 $generated@@28))
)))
(assert (= ($generated@@5 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35) ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
)))
(assert (= ($generated@@36 $generated@@37) 0))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (and (<= 0 $generated@@42) (<= $generated@@42 ($generated@@36 $generated@@40))) (= ($generated@@38 ($generated@@39 $generated@@40 $generated@@41) $generated@@42) ($generated@@39 ($generated@@38 $generated@@40 $generated@@42) $generated@@41)))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@40 $generated@@41) $generated@@42))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@5 $generated@@45) 4)) (= ($generated@@5 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@5 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@69 ($generated@@24 $generated@@68) $generated@@70)  (or (= $generated@@69 $generated@@25) ($generated@@10 ($generated@@43 $generated@@6 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@70 $generated@@69) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@69 ($generated@@24 $generated@@68) $generated@@70))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 Int) ($generated@@77 Int) ) (!  (=> (and (and (= (+ $generated@@76 1) $generated@@77) (<= 0 $generated@@76)) (<= $generated@@77 ($generated@@23 $generated@@75))) (= ($generated@@71 ($generated@@72 $generated@@74 $generated@@75) $generated@@77) ($generated@@39 ($generated@@71 ($generated@@72 $generated@@74 $generated@@75) $generated@@76) ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@74 $generated@@75) ($generated@@73 $generated@@76)))))
 :pattern ( ($generated@@71 ($generated@@72 $generated@@74 $generated@@75) $generated@@76) ($generated@@71 ($generated@@72 $generated@@74 $generated@@75) $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 Int) ) (!  (=> (= $generated@@79 0) (= ($generated@@38 $generated@@78 $generated@@79) $generated@@78))
 :pattern ( ($generated@@38 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@80 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 Int) ($generated@@88 Int) ) (!  (=> (and (and (<= 0 $generated@@88) (< $generated@@88 $generated@@87)) (< $generated@@88 ($generated@@36 $generated@@86))) (= ($generated@@85 ($generated@@71 $generated@@86 $generated@@87) $generated@@88) ($generated@@85 $generated@@86 $generated@@88)))
 :weight 25
 :pattern ( ($generated@@85 ($generated@@71 $generated@@86 $generated@@87) $generated@@88))
 :pattern ( ($generated@@85 $generated@@86 $generated@@88) ($generated@@71 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 Int) ) (!  (=> (and (<= 0 $generated@@90) (<= $generated@@90 ($generated@@36 $generated@@89))) (= ($generated@@36 ($generated@@38 $generated@@89 $generated@@90)) (- ($generated@@36 $generated@@89) $generated@@90)))
 :pattern ( ($generated@@36 ($generated@@38 $generated@@89 $generated@@90)))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 Int) ) (!  (=> (and (and (and ($generated@@91 $generated@@94) (and (or (not (= $generated@@95 $generated@@25)) (not true)) (= ($generated@@26 $generated@@95) ($generated@@24 $generated@@93)))) (and (<= 0 $generated@@96) (< $generated@@96 ($generated@@23 $generated@@95)))) ($generated@@10 ($generated@@43 $generated@@6 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@94 $generated@@95) $generated@@1)))) ($generated@@92 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@94 $generated@@95) ($generated@@73 $generated@@96)) $generated@@93 $generated@@94))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@94 $generated@@95) ($generated@@73 $generated@@96)) ($generated@@24 $generated@@93))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@97 $generated@@98 $generated@@99)  (and (= ($generated@@36 $generated@@98) ($generated@@36 $generated@@99)) (forall (($generated@@100 Int) ) (!  (=> (and (<= 0 $generated@@100) (< $generated@@100 ($generated@@36 $generated@@98))) (= ($generated@@85 $generated@@98 $generated@@100) ($generated@@85 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@85 $generated@@98 $generated@@100))
 :pattern ( ($generated@@85 $generated@@99 $generated@@100))
))))
 :pattern ( ($generated@@97 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@101 $generated@@103 ($generated@@43 $generated@@103 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@43 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@36 ($generated@@39 $generated@@104 $generated@@105)) (+ 1 ($generated@@36 $generated@@104)))
 :pattern ( ($generated@@39 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@107 ($generated@@32 $generated@@106))  (and ($generated@@27 $generated@@31 $generated@@107 ($generated@@24 $generated@@106)) (or (not (= $generated@@107 $generated@@25)) (not true))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@107 ($generated@@32 $generated@@106)))
 :pattern ( ($generated@@27 $generated@@31 $generated@@107 ($generated@@24 $generated@@106)))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@92 ($generated@@101 $generated@@111 $generated@@108) $generated@@109 $generated@@110) ($generated@@30 $generated@@111 $generated@@108 $generated@@109 $generated@@110))
 :pattern ( ($generated@@92 ($generated@@101 $generated@@111 $generated@@108) $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 Int) ($generated@@114 Int) ) (!  (=> (and (and (<= 0 $generated@@113) (<= 0 $generated@@114)) (< $generated@@114 (- ($generated@@36 $generated@@112) $generated@@113))) (= ($generated@@85 ($generated@@38 $generated@@112 $generated@@113) $generated@@114) ($generated@@85 $generated@@112 (+ $generated@@114 $generated@@113))))
 :weight 25
 :pattern ( ($generated@@85 ($generated@@38 $generated@@112 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ) (!  (and (= ($generated@@22 ($generated@@24 $generated@@116)) $generated@@2) (= ($generated@@115 ($generated@@24 $generated@@116)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (!  (and (= ($generated@@22 ($generated@@32 $generated@@117)) $generated@@3) (= ($generated@@115 ($generated@@32 $generated@@117)) $generated@@4))
 :pattern ( ($generated@@32 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@119 ($generated@@24 $generated@@118))  (or (= $generated@@119 $generated@@25) (= ($generated@@26 $generated@@119) ($generated@@24 $generated@@118))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@119 ($generated@@24 $generated@@118)))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 Int) ($generated@@122 T@U) ) (!  (and (=> (= $generated@@121 ($generated@@36 $generated@@120)) (= ($generated@@85 ($generated@@39 $generated@@120 $generated@@122) $generated@@121) $generated@@122)) (=> (or (not (= $generated@@121 ($generated@@36 $generated@@120))) (not true)) (= ($generated@@85 ($generated@@39 $generated@@120 $generated@@122) $generated@@121) ($generated@@85 $generated@@120 $generated@@121))))
 :pattern ( ($generated@@85 ($generated@@39 $generated@@120 $generated@@122) $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (forall (($generated@@125 Int) ) (!  (=> (and (<= 0 $generated@@125) (< $generated@@125 ($generated@@36 ($generated@@72 $generated@@123 $generated@@124)))) (= ($generated@@85 ($generated@@72 $generated@@123 $generated@@124) $generated@@125) ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@123 $generated@@124) ($generated@@73 $generated@@125))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@123 $generated@@124) ($generated@@73 $generated@@125)))
 :pattern ( ($generated@@85 ($generated@@72 $generated@@123 $generated@@124) $generated@@125))
))
 :pattern ( ($generated@@72 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@97 $generated@@126 $generated@@127) (= $generated@@126 $generated@@127))
 :pattern ( ($generated@@97 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 Int) ) (!  (=> (and (<= 0 $generated@@129) (<= $generated@@129 ($generated@@36 $generated@@128))) (= ($generated@@36 ($generated@@71 $generated@@128 $generated@@129)) $generated@@129))
 :pattern ( ($generated@@36 ($generated@@71 $generated@@128 $generated@@129)))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@130 $generated@@131 $generated) (and (= ($generated@@101 $generated@@7 ($generated@@43 $generated@@7 $generated@@131)) $generated@@131) ($generated@@27 $generated@@7 ($generated@@43 $generated@@7 $generated@@131) $generated)))
 :pattern ( ($generated@@130 $generated@@131 $generated))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@130 ($generated@@101 $generated@@134 $generated@@132) $generated@@133) ($generated@@27 $generated@@134 $generated@@132 $generated@@133))
 :pattern ( ($generated@@130 ($generated@@101 $generated@@134 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (! (<= 0 ($generated@@23 $generated@@135))
 :pattern ( ($generated@@23 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (! (<= 0 ($generated@@36 $generated@@136))
 :pattern ( ($generated@@36 $generated@@136))
)))
(assert (forall (($generated@@137 Int) ) (! (= ($generated@@21 ($generated@@73 $generated@@137)) 1)
 :pattern ( ($generated@@73 $generated@@137))
)))
(assert (forall (($generated@@139 Int) ) (! (= ($generated@@138 ($generated@@73 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@73 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@140 ($generated@@24 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@24 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@32 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@32 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@43 $generated@@145 ($generated@@101 $generated@@145 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@101 $generated@@145 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and ($generated@@91 $generated@@147) (and (or (not (= $generated@@148 $generated@@25)) (not true)) (= ($generated@@26 $generated@@148) ($generated@@24 $generated@@146)))) ($generated@@10 ($generated@@43 $generated@@6 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@147 $generated@@148) $generated@@1)))) ($generated@@30 $generated@@7 ($generated@@11 ($generated@@23 $generated@@148)) $generated $generated@@147))
 :pattern ( ($generated@@23 $generated@@148) ($generated@@43 $generated@@6 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@147 $generated@@148) $generated@@1)) ($generated@@24 $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (and ($generated@@91 $generated@@150) (and (or (not (= $generated@@151 $generated@@25)) (not true)) (= ($generated@@26 $generated@@151) ($generated@@24 $generated@@149)))) (and (<= 0 $generated@@152) (< $generated@@152 ($generated@@23 $generated@@151)))) ($generated@@130 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@150 $generated@@151) ($generated@@73 $generated@@152)) $generated@@149))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@150 $generated@@151) ($generated@@73 $generated@@152)) ($generated@@24 $generated@@149))
)))
(assert  (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@153 $generated@@156 $generated@@157 $generated@@158 ($generated@@155 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@161 $generated@@162) $generated@@159)
 :weight 0
)) (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@153 $generated@@163 $generated@@164 $generated@@165 ($generated@@155 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@153 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@153 $generated@@172 $generated@@173 $generated@@174 ($generated@@155 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@153 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@10 ($generated@@153 $generated@@31 $generated@@45 $generated@@6 ($generated@@154 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (or (not (= $generated@@185 $generated@@181)) (not true)) ($generated@@10 ($generated@@43 $generated@@6 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@182 $generated@@185) $generated@@183)))) $generated@@184))
 :pattern ( ($generated@@153 $generated@@31 $generated@@45 $generated@@6 ($generated@@154 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@36 ($generated@@72 $generated@@187 $generated@@188)) ($generated@@23 $generated@@188))
 :pattern ( ($generated@@36 ($generated@@72 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (and (= ($generated@@189 ($generated@@39 $generated@@191 $generated@@192)) $generated@@191) (= ($generated@@190 ($generated@@39 $generated@@191 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@39 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> ($generated@@130 $generated@@194 ($generated@@24 $generated@@193)) (and (= ($generated@@101 $generated@@31 ($generated@@43 $generated@@31 $generated@@194)) $generated@@194) ($generated@@27 $generated@@31 ($generated@@43 $generated@@31 $generated@@194) ($generated@@24 $generated@@193))))
 :pattern ( ($generated@@130 $generated@@194 ($generated@@24 $generated@@193)))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> ($generated@@130 $generated@@196 ($generated@@32 $generated@@195)) (and (= ($generated@@101 $generated@@31 ($generated@@43 $generated@@31 $generated@@196)) $generated@@196) ($generated@@27 $generated@@31 ($generated@@43 $generated@@31 $generated@@196) ($generated@@32 $generated@@195))))
 :pattern ( ($generated@@130 $generated@@196 ($generated@@32 $generated@@195)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 Int) ($generated@@199 Int) ) (!  (=> (and (and (<= 0 $generated@@198) (<= $generated@@198 $generated@@199)) (< $generated@@199 ($generated@@36 $generated@@197))) (= ($generated@@85 ($generated@@38 $generated@@197 $generated@@198) (- $generated@@199 $generated@@198)) ($generated@@85 $generated@@197 $generated@@199)))
 :weight 25
 :pattern ( ($generated@@85 $generated@@197 $generated@@199) ($generated@@38 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 Int) ($generated@@202 Int) ) (!  (=> (and (and (<= 0 $generated@@201) (<= 0 $generated@@202)) (<= (+ $generated@@201 $generated@@202) ($generated@@36 $generated@@200))) (= ($generated@@38 ($generated@@38 $generated@@200 $generated@@201) $generated@@202) ($generated@@38 $generated@@200 (+ $generated@@201 $generated@@202))))
 :pattern ( ($generated@@38 ($generated@@38 $generated@@200 $generated@@201) $generated@@202))
)))
(assert (forall (($generated@@203 Int) ) (! (= ($generated@@101 $generated@@7 ($generated@@11 ($generated@@80 $generated@@203))) ($generated@@82 $generated@@46 ($generated@@101 $generated@@7 ($generated@@11 $generated@@203))))
 :pattern ( ($generated@@101 $generated@@7 ($generated@@11 ($generated@@80 $generated@@203))))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@T) ) (! (= ($generated@@101 $generated@@205 ($generated@@82 $generated@@205 $generated@@204)) ($generated@@82 $generated@@46 ($generated@@101 $generated@@205 $generated@@204)))
 :pattern ( ($generated@@101 $generated@@205 ($generated@@82 $generated@@205 $generated@@204)))
)))
(assert (forall (($generated@@206 T@U) ) (!  (=> (= ($generated@@36 $generated@@206) 0) (= $generated@@206 $generated@@37))
 :pattern ( ($generated@@36 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 Int) ) (!  (=> (= $generated@@208 0) (= ($generated@@71 $generated@@207 $generated@@208) $generated@@37))
 :pattern ( ($generated@@71 $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! ($generated@@30 $generated@@7 $generated@@210 $generated $generated@@209)
 :pattern ( ($generated@@30 $generated@@7 $generated@@210 $generated $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ) (! ($generated@@27 $generated@@7 $generated@@211 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@211 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () Int)
(declare-fun $generated@@220 () Int)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 (T@U) Bool)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 72) (let (($generated@@225 true))
(let (($generated@@226  (=> (and (<= (+ $generated@@212 $generated@@213) ($generated@@23 $generated@@214)) (forall (($generated@@227 Int) ) (!  (=> (and (<= ($generated@@80 0) $generated@@227) (< $generated@@227 $generated@@213)) (= ($generated@@12 ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@216) ($generated@@73 $generated@@227)))) ($generated@@12 ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@214) ($generated@@73 (+ $generated@@212 $generated@@227)))))))
 :pattern ( ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@216) ($generated@@73 $generated@@227))))
))) (and (=> (= (ControlFlow 0 51) (- 0 56)) (or (not (= $generated@@216 $generated@@25)) (not true))) (=> (or (not (= $generated@@216 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 51) (- 0 55)) (and (<= 0 $generated@@213) (<= $generated@@213 ($generated@@23 $generated@@216)))) (and (=> (= (ControlFlow 0 51) (- 0 54)) (or (not (= $generated@@214 $generated@@25)) (not true))) (=> (or (not (= $generated@@214 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 51) (- 0 53)) (and (<= 0 $generated@@212) (<= $generated@@212 ($generated@@23 $generated@@214)))) (and (=> (= (ControlFlow 0 51) (- 0 52)) (and (<= $generated@@212 (+ $generated@@212 $generated@@213)) (<= (+ $generated@@212 $generated@@213) ($generated@@23 $generated@@214)))) (=> (= (ControlFlow 0 51) (- 0 50)) ($generated@@97 ($generated@@71 ($generated@@72 $generated@@215 $generated@@216) $generated@@213) ($generated@@38 ($generated@@71 ($generated@@72 $generated@@215 $generated@@214) (+ $generated@@212 $generated@@213)) $generated@@212)))))))))))))
(let (($generated@@228  (=> (and (not (and (<= ($generated@@80 0) $generated@@217) (< $generated@@217 $generated@@213))) (= (ControlFlow 0 64) 51)) $generated@@226)))
(let (($generated@@229  (=> (and (<= ($generated@@80 0) $generated@@217) (< $generated@@217 $generated@@213)) (and (=> (= (ControlFlow 0 59) (- 0 63)) (or (not (= $generated@@216 $generated@@25)) (not true))) (=> (or (not (= $generated@@216 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 59) (- 0 62)) (and (<= 0 $generated@@217) (< $generated@@217 ($generated@@23 $generated@@216)))) (=> (and (<= 0 $generated@@217) (< $generated@@217 ($generated@@23 $generated@@216))) (and (=> (= (ControlFlow 0 59) (- 0 61)) (or (not (= $generated@@214 $generated@@25)) (not true))) (=> (or (not (= $generated@@214 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 59) (- 0 60)) (and (<= 0 (+ $generated@@212 $generated@@217)) (< (+ $generated@@212 $generated@@217) ($generated@@23 $generated@@214)))) (=> (and (<= 0 (+ $generated@@212 $generated@@217)) (< (+ $generated@@212 $generated@@217) ($generated@@23 $generated@@214))) (=> (= (ControlFlow 0 59) 51) $generated@@226))))))))))))
(let (($generated@@230  (=> (< $generated@@217 ($generated@@80 0)) (and (=> (= (ControlFlow 0 66) 59) $generated@@229) (=> (= (ControlFlow 0 66) 64) $generated@@228)))))
(let (($generated@@231  (=> (<= ($generated@@80 0) $generated@@217) (and (=> (= (ControlFlow 0 65) 59) $generated@@229) (=> (= (ControlFlow 0 65) 64) $generated@@228)))))
(let (($generated@@232  (and (=> (= (ControlFlow 0 67) 65) $generated@@231) (=> (= (ControlFlow 0 67) 66) $generated@@230))))
(let (($generated@@233  (=> (<= (+ $generated@@212 $generated@@213) ($generated@@23 $generated@@214)) (and (=> (= (ControlFlow 0 68) 67) $generated@@232) (=> (= (ControlFlow 0 68) 58) $generated@@225)))))
(let (($generated@@234  (=> (and (< ($generated@@23 $generated@@214) (+ $generated@@212 $generated@@213)) (= (ControlFlow 0 57) 51)) $generated@@226)))
(let (($generated@@235  (and (=> (= (ControlFlow 0 69) (- 0 70)) (or (not (= $generated@@214 $generated@@25)) (not true))) (=> (or (not (= $generated@@214 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 69) 68) $generated@@233) (=> (= (ControlFlow 0 69) 57) $generated@@234))))))
(let (($generated@@236 true))
(let (($generated@@237  (=> (and (<= (+ $generated@@212 ($generated@@23 $generated@@216)) ($generated@@23 $generated@@214)) (forall (($generated@@238 Int) ) (!  (=> (and (<= $generated@@218 $generated@@238) (< $generated@@238 ($generated@@23 $generated@@216))) (= ($generated@@12 ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@216) ($generated@@73 $generated@@238)))) ($generated@@12 ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@214) ($generated@@73 (+ $generated@@212 $generated@@238)))))))
 :pattern ( ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@216) ($generated@@73 $generated@@238))))
))) (and (=> (= (ControlFlow 0 27) (- 0 33)) (or (not (= $generated@@216 $generated@@25)) (not true))) (=> (or (not (= $generated@@216 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 27) (- 0 32)) (and (<= 0 $generated@@218) (<= $generated@@218 ($generated@@23 $generated@@216)))) (and (=> (= (ControlFlow 0 27) (- 0 31)) (or (not (= $generated@@214 $generated@@25)) (not true))) (=> (or (not (= $generated@@214 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 27) (- 0 30)) (and (<= 0 (+ $generated@@212 $generated@@218)) (<= (+ $generated@@212 $generated@@218) ($generated@@23 $generated@@214)))) (and (=> (= (ControlFlow 0 27) (- 0 29)) (or (not (= $generated@@216 $generated@@25)) (not true))) (and (=> (= (ControlFlow 0 27) (- 0 28)) (and (<= (+ $generated@@212 $generated@@218) (+ $generated@@212 ($generated@@23 $generated@@216))) (<= (+ $generated@@212 ($generated@@23 $generated@@216)) ($generated@@23 $generated@@214)))) (=> (= (ControlFlow 0 27) (- 0 26)) ($generated@@97 ($generated@@38 ($generated@@72 $generated@@215 $generated@@216) $generated@@218) ($generated@@38 ($generated@@71 ($generated@@72 $generated@@215 $generated@@214) (+ $generated@@212 ($generated@@23 $generated@@216))) (+ $generated@@212 $generated@@218)))))))))))))))
(let (($generated@@239  (=> (and (not (and (<= $generated@@218 $generated@@219) (< $generated@@219 ($generated@@23 $generated@@216)))) (= (ControlFlow 0 41) 27)) $generated@@237)))
(let (($generated@@240  (=> (and (<= $generated@@218 $generated@@219) (< $generated@@219 ($generated@@23 $generated@@216))) (and (=> (= (ControlFlow 0 36) (- 0 40)) (or (not (= $generated@@216 $generated@@25)) (not true))) (=> (or (not (= $generated@@216 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 36) (- 0 39)) (and (<= 0 $generated@@219) (< $generated@@219 ($generated@@23 $generated@@216)))) (=> (and (<= 0 $generated@@219) (< $generated@@219 ($generated@@23 $generated@@216))) (and (=> (= (ControlFlow 0 36) (- 0 38)) (or (not (= $generated@@214 $generated@@25)) (not true))) (=> (or (not (= $generated@@214 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 36) (- 0 37)) (and (<= 0 (+ $generated@@212 $generated@@219)) (< (+ $generated@@212 $generated@@219) ($generated@@23 $generated@@214)))) (=> (and (<= 0 (+ $generated@@212 $generated@@219)) (< (+ $generated@@212 $generated@@219) ($generated@@23 $generated@@214))) (=> (= (ControlFlow 0 36) 27) $generated@@237))))))))))))
(let (($generated@@241  (=> (< $generated@@219 $generated@@218) (and (=> (= (ControlFlow 0 44) 36) $generated@@240) (=> (= (ControlFlow 0 44) 41) $generated@@239)))))
(let (($generated@@242  (=> (<= $generated@@218 $generated@@219) (and (=> (= (ControlFlow 0 42) (- 0 43)) (or (not (= $generated@@216 $generated@@25)) (not true))) (=> (or (not (= $generated@@216 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 42) 36) $generated@@240) (=> (= (ControlFlow 0 42) 41) $generated@@239)))))))
(let (($generated@@243  (and (=> (= (ControlFlow 0 45) 42) $generated@@242) (=> (= (ControlFlow 0 45) 44) $generated@@241))))
(let (($generated@@244  (=> (<= (+ $generated@@212 ($generated@@23 $generated@@216)) ($generated@@23 $generated@@214)) (and (=> (= (ControlFlow 0 46) 45) $generated@@243) (=> (= (ControlFlow 0 46) 35) $generated@@236)))))
(let (($generated@@245  (=> (and (< ($generated@@23 $generated@@214) (+ $generated@@212 ($generated@@23 $generated@@216))) (= (ControlFlow 0 34) 27)) $generated@@237)))
(let (($generated@@246  (and (=> (= (ControlFlow 0 47) (- 0 49)) (or (not (= $generated@@216 $generated@@25)) (not true))) (=> (or (not (= $generated@@216 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 47) (- 0 48)) (or (not (= $generated@@214 $generated@@25)) (not true))) (=> (or (not (= $generated@@214 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 47) 46) $generated@@244) (=> (= (ControlFlow 0 47) 34) $generated@@245))))))))
(let (($generated@@247 true))
(let (($generated@@248  (=> (and (<= (+ (+ $generated@@212 $generated@@218) $generated@@213) ($generated@@23 $generated@@214)) (forall (($generated@@249 Int) ) (!  (=> (and (<= $generated@@218 $generated@@249) (< $generated@@249 (+ $generated@@218 $generated@@213))) (= ($generated@@12 ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@216) ($generated@@73 $generated@@249)))) ($generated@@12 ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@214) ($generated@@73 (+ $generated@@212 $generated@@249)))))))
 :pattern ( ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@216) ($generated@@73 $generated@@249))))
))) (and (=> (= (ControlFlow 0 5) (- 0 11)) (or (not (= $generated@@216 $generated@@25)) (not true))) (=> (or (not (= $generated@@216 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 10)) (and (<= 0 $generated@@218) (<= $generated@@218 ($generated@@23 $generated@@216)))) (and (=> (= (ControlFlow 0 5) (- 0 9)) (and (<= $generated@@218 (+ $generated@@218 $generated@@213)) (<= (+ $generated@@218 $generated@@213) ($generated@@23 $generated@@216)))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (not (= $generated@@214 $generated@@25)) (not true))) (=> (or (not (= $generated@@214 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 (+ $generated@@212 $generated@@218)) (<= (+ $generated@@212 $generated@@218) ($generated@@23 $generated@@214)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= (+ $generated@@212 $generated@@218) (+ (+ $generated@@212 $generated@@218) $generated@@213)) (<= (+ (+ $generated@@212 $generated@@218) $generated@@213) ($generated@@23 $generated@@214)))) (=> (= (ControlFlow 0 5) (- 0 4)) ($generated@@97 ($generated@@38 ($generated@@71 ($generated@@72 $generated@@215 $generated@@216) (+ $generated@@218 $generated@@213)) $generated@@218) ($generated@@38 ($generated@@71 ($generated@@72 $generated@@215 $generated@@214) (+ (+ $generated@@212 $generated@@218) $generated@@213)) (+ $generated@@212 $generated@@218)))))))))))))))
(let (($generated@@250  (=> (and (not (and (<= $generated@@218 $generated@@220) (< $generated@@220 (+ $generated@@218 $generated@@213)))) (= (ControlFlow 0 19) 5)) $generated@@248)))
(let (($generated@@251  (=> (and (<= $generated@@218 $generated@@220) (< $generated@@220 (+ $generated@@218 $generated@@213))) (and (=> (= (ControlFlow 0 14) (- 0 18)) (or (not (= $generated@@216 $generated@@25)) (not true))) (=> (or (not (= $generated@@216 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 14) (- 0 17)) (and (<= 0 $generated@@220) (< $generated@@220 ($generated@@23 $generated@@216)))) (=> (and (<= 0 $generated@@220) (< $generated@@220 ($generated@@23 $generated@@216))) (and (=> (= (ControlFlow 0 14) (- 0 16)) (or (not (= $generated@@214 $generated@@25)) (not true))) (=> (or (not (= $generated@@214 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 14) (- 0 15)) (and (<= 0 (+ $generated@@212 $generated@@220)) (< (+ $generated@@212 $generated@@220) ($generated@@23 $generated@@214)))) (=> (and (<= 0 (+ $generated@@212 $generated@@220)) (< (+ $generated@@212 $generated@@220) ($generated@@23 $generated@@214))) (=> (= (ControlFlow 0 14) 5) $generated@@248))))))))))))
(let (($generated@@252  (=> (< $generated@@220 $generated@@218) (and (=> (= (ControlFlow 0 21) 14) $generated@@251) (=> (= (ControlFlow 0 21) 19) $generated@@250)))))
(let (($generated@@253  (=> (<= $generated@@218 $generated@@220) (and (=> (= (ControlFlow 0 20) 14) $generated@@251) (=> (= (ControlFlow 0 20) 19) $generated@@250)))))
(let (($generated@@254  (and (=> (= (ControlFlow 0 22) 20) $generated@@253) (=> (= (ControlFlow 0 22) 21) $generated@@252))))
(let (($generated@@255  (=> (<= (+ (+ $generated@@212 $generated@@218) $generated@@213) ($generated@@23 $generated@@214)) (and (=> (= (ControlFlow 0 23) 22) $generated@@254) (=> (= (ControlFlow 0 23) 13) $generated@@247)))))
(let (($generated@@256  (=> (and (< ($generated@@23 $generated@@214) (+ (+ $generated@@212 $generated@@218) $generated@@213)) (= (ControlFlow 0 12) 5)) $generated@@248)))
(let (($generated@@257  (and (=> (= (ControlFlow 0 24) (- 0 25)) (or (not (= $generated@@214 $generated@@25)) (not true))) (=> (or (not (= $generated@@214 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 24) 23) $generated@@255) (=> (= (ControlFlow 0 24) 12) $generated@@256))))))
(let (($generated@@258  (=> (and (and (and (and (not (and (<= (+ $generated@@212 $generated@@213) ($generated@@23 $generated@@214)) (forall (($generated@@259 Int) ) (!  (=> (and (<= ($generated@@80 0) $generated@@259) (< $generated@@259 $generated@@213)) (= ($generated@@12 ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@216) ($generated@@73 $generated@@259)))) ($generated@@12 ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@214) ($generated@@73 (+ $generated@@212 $generated@@259)))))))
 :pattern ( ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@216) ($generated@@73 $generated@@259))))
)))) (not (and (<= (+ $generated@@212 ($generated@@23 $generated@@216)) ($generated@@23 $generated@@214)) (forall (($generated@@260 Int) ) (!  (=> (and (<= $generated@@218 $generated@@260) (< $generated@@260 ($generated@@23 $generated@@216))) (= ($generated@@12 ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@216) ($generated@@73 $generated@@260)))) ($generated@@12 ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@214) ($generated@@73 (+ $generated@@212 $generated@@260)))))))
 :pattern ( ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@216) ($generated@@73 $generated@@260))))
))))) (not (and (<= (+ (+ $generated@@212 $generated@@218) $generated@@213) ($generated@@23 $generated@@214)) (forall (($generated@@261 Int) ) (!  (=> (and (<= $generated@@218 $generated@@261) (< $generated@@261 (+ $generated@@218 $generated@@213))) (= ($generated@@12 ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@216) ($generated@@73 $generated@@261)))) ($generated@@12 ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@214) ($generated@@73 (+ $generated@@212 $generated@@261)))))))
 :pattern ( ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@215 $generated@@216) ($generated@@73 $generated@@261))))
))))) (not ($generated@@10 ($generated@@82 $generated@@6 ($generated@@9 true))))) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@262 true))
(let (($generated@@263  (=> (= $generated@@221 ($generated@@154 $generated@@25 $generated@@215 $generated@@1 false)) (and (and (and (and (=> (= (ControlFlow 0 71) 69) $generated@@235) (=> (= (ControlFlow 0 71) 47) $generated@@246)) (=> (= (ControlFlow 0 71) 24) $generated@@257)) (=> (= (ControlFlow 0 71) 1) $generated@@262)) (=> (= (ControlFlow 0 71) 3) $generated@@258)))))
(let (($generated@@264  (=> (and ($generated@@91 $generated@@215) ($generated@@222 $generated@@215)) (=> (and (and ($generated@@27 $generated@@31 $generated@@216 ($generated@@32 $generated)) ($generated@@30 $generated@@31 $generated@@216 ($generated@@32 $generated) $generated@@215)) (and ($generated@@27 $generated@@31 $generated@@214 ($generated@@32 $generated)) ($generated@@30 $generated@@31 $generated@@214 ($generated@@32 $generated) $generated@@215))) (=> (and (and (and (<= ($generated@@80 0) $generated@@213) (<= ($generated@@80 0) $generated@@223)) (and (<= ($generated@@80 0) $generated@@218) (<= ($generated@@80 0) $generated@@212))) (and (and (= 0 $generated@@224) (<= (+ $generated@@218 $generated@@213) ($generated@@23 $generated@@216))) (and (<= (+ $generated@@212 $generated@@223) ($generated@@23 $generated@@214)) (= (ControlFlow 0 72) 71)))) $generated@@263)))))
$generated@@264)))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
