(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 (T@U Int) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (Int) Bool)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@96 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@T T@T) T@T)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27)
 :pattern ( ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27))
)))
(assert (= ($generated@@7 $generated@@30) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@33 ($generated@@31 $generated@@32)) ($generated@@28 $generated@@33))
 :pattern ( ($generated@@28 $generated@@33) ($generated@@29 $generated@@30 $generated@@33 ($generated@@31 $generated@@32)))
)))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (or ($generated@@37 $generated@@42) (and (< 1 $generated@@34) (<= ($generated@@38 0) $generated@@42))) (and ($generated@@37 (+ $generated@@42 1)) (= ($generated@@35 ($generated@@36 $generated@@41) $generated@@42) ($generated@@39 ($generated@@40 $generated@@9 ($generated@@13 $generated@@42)) ($generated@@35 $generated@@41 (+ $generated@@42 1))))))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@41) $generated@@42))
))))
(assert (forall (($generated@@43 Int) ) (! (= ($generated@@38 $generated@@43) $generated@@43)
 :pattern ( ($generated@@38 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@39 $generated@@49 $generated@@50) ($generated@@31 $generated@@48))  (and ($generated@@47 $generated@@49 $generated@@48) ($generated@@29 $generated@@30 $generated@@50 ($generated@@31 $generated@@48))))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@39 $generated@@49 $generated@@50) ($generated@@31 $generated@@48)))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@28 $generated@@52) (= ($generated@@51 $generated@@52) $generated@@4))
 :pattern ( ($generated@@28 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@40 $generated@@55 ($generated@@53 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@53 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@28 $generated@@56) (exists (($generated@@57 T@U) ($generated@@58 T@U) ) (= $generated@@56 ($generated@@39 $generated@@57 $generated@@58))))
 :pattern ( ($generated@@28 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@29 $generated@@9 $generated@@59 $generated@@25) (<= ($generated@@38 0) ($generated@@14 $generated@@59)))
 :pattern ( ($generated@@29 $generated@@9 $generated@@59 $generated@@25))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@60 ($generated@@40 $generated@@64 $generated@@61) $generated@@62 $generated@@63) ($generated@@24 $generated@@64 $generated@@61 $generated@@62 $generated@@63))
 :pattern ( ($generated@@60 ($generated@@40 $generated@@64 $generated@@61) $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ) (!  (and (= ($generated@@23 ($generated@@31 $generated@@66)) $generated@@3) (= ($generated@@65 ($generated@@31 $generated@@66)) $generated@@6))
 :pattern ( ($generated@@31 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@47 $generated@@67 $generated@@25) (and (= ($generated@@40 $generated@@9 ($generated@@53 $generated@@9 $generated@@67)) $generated@@67) ($generated@@29 $generated@@9 ($generated@@53 $generated@@9 $generated@@67) $generated@@25)))
 :pattern ( ($generated@@47 $generated@@67 $generated@@25))
)))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@68 T@U) ($generated@@69 Int) ) (!  (=> (or ($generated@@37 $generated@@69) (and (< 1 $generated@@34) (<= ($generated@@38 0) $generated@@69))) (and ($generated@@12 ($generated@@44 $generated@@8 ($generated@@11 false))) ($generated@@29 $generated@@30 ($generated@@35 $generated@@68 $generated@@69) ($generated@@31 $generated))))
 :pattern ( ($generated@@35 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@47 $generated@@70 $generated) (and (= ($generated@@40 $generated@@9 ($generated@@53 $generated@@9 $generated@@70)) $generated@@70) ($generated@@29 $generated@@9 ($generated@@53 $generated@@9 $generated@@70) $generated)))
 :pattern ( ($generated@@47 $generated@@70 $generated))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@47 ($generated@@40 $generated@@73 $generated@@71) $generated@@72) ($generated@@29 $generated@@73 $generated@@71 $generated@@72))
 :pattern ( ($generated@@47 ($generated@@40 $generated@@73 $generated@@71) $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@51 ($generated@@39 $generated@@74 $generated@@75)) $generated@@4)
 :pattern ( ($generated@@39 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@76 ($generated@@39 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@39 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@79 ($generated@@39 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@39 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 ($generated@@31 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@31 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@53 $generated@@85 ($generated@@40 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@40 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 Int) ) (! (= ($generated@@35 ($generated@@36 $generated@@86) $generated@@87) ($generated@@35 $generated@@86 $generated@@87))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@86) $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and ($generated@@88 $generated@@91) (and ($generated@@28 $generated@@89) ($generated@@24 $generated@@30 $generated@@89 ($generated@@31 $generated@@90) $generated@@91))) ($generated@@60 ($generated@@76 $generated@@89) $generated@@90 $generated@@91))
 :pattern ( ($generated@@60 ($generated@@76 $generated@@89) $generated@@90 $generated@@91))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@92 $generated@@103 $generated@@104 $generated@@105 ($generated@@99 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@92 $generated@@110 $generated@@111 $generated@@112 ($generated@@99 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@92 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@92 $generated@@119 $generated@@120 $generated@@121 ($generated@@99 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@92 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))) (= ($generated@@7 $generated@@93) 4)) (= ($generated@@7 $generated@@94) 5)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@96 $generated@@128 $generated@@129 ($generated@@100 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@130) $generated@@132) $generated@@130)
 :weight 0
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@96 $generated@@133 $generated@@134 ($generated@@100 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@96 $generated@@133 $generated@@134 $generated@@136 $generated@@138)))
 :weight 0
))) (= ($generated@@7 $generated@@97) 6)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (= ($generated@@7 ($generated@@98 $generated@@139 $generated@@140)) 7))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@101 ($generated@@98 $generated@@141 $generated@@142)) $generated@@141)
 :pattern ( ($generated@@98 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (! (= ($generated@@102 ($generated@@98 $generated@@143 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@98 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Bool) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@12 ($generated@@92 $generated@@93 $generated@@94 $generated@@8 ($generated@@95 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))  (=> (and (or (not (= $generated@@149 $generated@@145)) (not true)) ($generated@@12 ($generated@@53 $generated@@8 ($generated@@96 $generated@@94 $generated@@97 ($generated@@96 $generated@@93 ($generated@@98 $generated@@94 $generated@@97) $generated@@146 $generated@@149) $generated@@147)))) $generated@@148))
 :pattern ( ($generated@@92 $generated@@93 $generated@@94 $generated@@8 ($generated@@95 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))
)))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (or ($generated@@37 ($generated@@38 $generated@@152)) (and (< 1 $generated@@34) (<= ($generated@@38 0) $generated@@152))) (and ($generated@@37 ($generated@@38 (+ $generated@@152 1))) (= ($generated@@35 ($generated@@36 $generated@@151) ($generated@@38 $generated@@152)) ($generated@@44 $generated@@30 ($generated@@39 ($generated@@40 $generated@@9 ($generated@@13 ($generated@@38 $generated@@152))) ($generated@@44 $generated@@30 ($generated@@35 ($generated@@36 $generated@@151) ($generated@@38 (+ $generated@@152 1)))))))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@36 $generated@@151) ($generated@@38 $generated@@152)))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> ($generated@@47 $generated@@154 ($generated@@31 $generated@@153)) (and (= ($generated@@40 $generated@@30 ($generated@@53 $generated@@30 $generated@@154)) $generated@@154) ($generated@@29 $generated@@30 ($generated@@53 $generated@@30 $generated@@154) ($generated@@31 $generated@@153))))
 :pattern ( ($generated@@47 $generated@@154 ($generated@@31 $generated@@153)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and ($generated@@88 $generated@@157) (and ($generated@@28 $generated@@155) ($generated@@24 $generated@@30 $generated@@155 ($generated@@31 $generated@@156) $generated@@157))) ($generated@@24 $generated@@30 ($generated@@79 $generated@@155) ($generated@@31 $generated@@156) $generated@@157))
 :pattern ( ($generated@@24 $generated@@30 ($generated@@79 $generated@@155) ($generated@@31 $generated@@156) $generated@@157))
)))
(assert (= ($generated@@23 $generated@@25) $generated@@2))
(assert (= ($generated@@65 $generated@@25) $generated@@5))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@40 $generated@@9 ($generated@@13 ($generated@@38 $generated@@158))) ($generated@@44 $generated@@97 ($generated@@40 $generated@@9 ($generated@@13 $generated@@158))))
 :pattern ( ($generated@@40 $generated@@9 ($generated@@13 ($generated@@38 $generated@@158))))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@40 $generated@@160 ($generated@@44 $generated@@160 $generated@@159)) ($generated@@44 $generated@@97 ($generated@@40 $generated@@160 $generated@@159)))
 :pattern ( ($generated@@40 $generated@@160 ($generated@@44 $generated@@160 $generated@@159)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! ($generated@@24 $generated@@9 $generated@@162 $generated $generated@@161)
 :pattern ( ($generated@@24 $generated@@9 $generated@@162 $generated $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@88 $generated@@166) (= ($generated@@24 $generated@@30 ($generated@@39 $generated@@164 $generated@@165) ($generated@@31 $generated@@163) $generated@@166)  (and ($generated@@60 $generated@@164 $generated@@163 $generated@@166) ($generated@@24 $generated@@30 $generated@@165 ($generated@@31 $generated@@163) $generated@@166))))
 :pattern ( ($generated@@24 $generated@@30 ($generated@@39 $generated@@164 $generated@@165) ($generated@@31 $generated@@163) $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (! ($generated@@29 $generated@@9 $generated@@167 $generated)
 :pattern ( ($generated@@29 $generated@@9 $generated@@167 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@175  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@12 ($generated@@44 $generated@@8 ($generated@@11 false))))))
(let (($generated@@176  (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@29 $generated@@9 ($generated@@13 (+ $generated@@168 1)) $generated@@25)) (=> ($generated@@29 $generated@@9 ($generated@@13 (+ $generated@@168 1)) $generated@@25) (=> (and (= $generated@@169 (+ $generated@@168 1)) ($generated@@24 $generated@@9 ($generated@@13 $generated@@169) $generated@@25 $generated@@170)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@168) (= $generated@@169 $generated@@168))) (=> (or (<= 0 $generated@@168) (= $generated@@169 $generated@@168)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< $generated@@169 $generated@@168)) (=> (< $generated@@169 $generated@@168) (=> (and ($generated@@37 (+ $generated@@168 1)) ($generated@@28 ($generated@@35 ($generated@@36 $generated@@171) (+ $generated@@168 1)))) (=> (and (and (= ($generated@@35 ($generated@@36 $generated@@171) $generated@@168) ($generated@@39 ($generated@@40 $generated@@9 ($generated@@13 $generated@@168)) ($generated@@35 ($generated@@36 $generated@@171) (+ $generated@@168 1)))) ($generated@@37 (+ $generated@@168 1))) (and ($generated@@29 $generated@@30 ($generated@@35 ($generated@@36 $generated@@171) $generated@@168) ($generated@@31 $generated)) (= (ControlFlow 0 4) 3))) $generated@@175)))))))))))
(let (($generated@@177 true))
(let (($generated@@178  (=> (= $generated@@172 ($generated@@95 $generated@@173 $generated@@170 $generated@@1 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@177) (=> (= (ControlFlow 0 8) 4) $generated@@176)))))
(let (($generated@@179  (=> (and (and (and ($generated@@88 $generated@@170) ($generated@@174 $generated@@170)) (<= ($generated@@38 0) $generated@@168)) (and (= 1 $generated@@34) (= (ControlFlow 0 9) 8))) $generated@@178)))
$generated@@179))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
