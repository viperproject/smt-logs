(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@53 (T@U) Int)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@92 (T@U) Int)
(declare-fun $generated@@93 (T@U) Int)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@111 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 (T@T T@T) T@T)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@116 (T@T) T@T)
(declare-fun $generated@@117 (T@T) T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@1))
(assert (= ($generated@@25 $generated@@0) $generated@@2))
(assert (forall (($generated@@28 T@U) ) (!  (not ($generated@@26 $generated@@27 $generated@@28))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28))
)))
(assert (= ($generated@@9 $generated@@30) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@31 $generated@@36 $generated@@37) ($generated@@32 $generated@@34 $generated@@35))  (and ($generated@@33 $generated@@36 $generated@@34) ($generated@@33 $generated@@37 $generated@@35)))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@31 $generated@@36 $generated@@37) ($generated@@32 $generated@@34 $generated@@35)))
)))
(assert (forall (($generated@@39 T@U) ) (!  (and (= (= ($generated@@38 $generated@@39) 0) (= $generated@@39 $generated@@27)) (=> (or (not (= ($generated@@38 $generated@@39) 0)) (not true)) (exists (($generated@@40 T@U) ) (! ($generated@@26 $generated@@39 $generated@@40)
 :pattern ( ($generated@@26 $generated@@39 $generated@@40))
))))
 :pattern ( ($generated@@38 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@T) ) (! (= ($generated@@45 $generated@@47 ($generated@@44 $generated@@47 $generated@@46)) $generated@@46)
 :pattern ( ($generated@@44 $generated@@47 $generated@@46))
)))
(assert (= ($generated@@9 $generated@@48) 4))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@29 $generated@@48 $generated@@50 ($generated@@49 $generated@@51)) (forall (($generated@@52 T@U) ) (!  (=> ($generated@@26 $generated@@50 $generated@@52) ($generated@@33 $generated@@52 $generated@@51))
 :pattern ( ($generated@@26 $generated@@50 $generated@@52))
)))
 :pattern ( ($generated@@29 $generated@@48 $generated@@50 ($generated@@49 $generated@@51)))
)))
(assert (forall (($generated@@55 T@U) ) (! (= (= ($generated@@53 $generated@@55) 0) (= $generated@@55 $generated@@54))
 :pattern ( ($generated@@53 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@33 $generated@@56 $generated@@0) (and (= ($generated@@45 $generated@@11 ($generated@@44 $generated@@11 $generated@@56)) $generated@@56) ($generated@@29 $generated@@11 ($generated@@44 $generated@@11 $generated@@56) $generated@@0)))
 :pattern ( ($generated@@33 $generated@@56 $generated@@0))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@33 $generated@@57 $generated) (and (= ($generated@@45 $generated@@10 ($generated@@44 $generated@@10 $generated@@57)) $generated@@57) ($generated@@29 $generated@@10 ($generated@@44 $generated@@10 $generated@@57) $generated)))
 :pattern ( ($generated@@33 $generated@@57 $generated))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@33 ($generated@@45 $generated@@60 $generated@@58) $generated@@59) ($generated@@29 $generated@@60 $generated@@58 $generated@@59))
 :pattern ( ($generated@@33 ($generated@@45 $generated@@60 $generated@@58) $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (! (<= 0 ($generated@@38 $generated@@61))
 :pattern ( ($generated@@38 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ) (! (<= 0 ($generated@@53 $generated@@62))
 :pattern ( ($generated@@53 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@64 ($generated@@63 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@63 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@67 ($generated@@63 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@63 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@25 ($generated@@63 $generated@@70 $generated@@71)) $generated@@4)
 :pattern ( ($generated@@63 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@72 ($generated@@31 $generated@@73 $generated@@74)) $generated@@6)
 :pattern ( ($generated@@31 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@75 ($generated@@32 $generated@@76 $generated@@77)) $generated@@76)
 :pattern ( ($generated@@32 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@78 ($generated@@32 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@32 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@81 ($generated@@31 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@31 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@84 ($generated@@31 $generated@@85 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@31 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@87 ($generated@@49 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@49 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@25 ($generated@@49 $generated@@89)) $generated@@3)
 :pattern ( ($generated@@49 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@44 $generated@@91 ($generated@@45 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@45 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (< ($generated@@92 $generated@@94) ($generated@@93 ($generated@@31 $generated@@94 $generated@@95)))
 :pattern ( ($generated@@31 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (< ($generated@@92 $generated@@97) ($generated@@93 ($generated@@31 $generated@@96 $generated@@97)))
 :pattern ( ($generated@@31 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (!  (not ($generated@@26 ($generated@@98 $generated@@54) $generated@@99))
 :pattern ( ($generated@@26 ($generated@@98 $generated@@54) $generated@@99))
)))
(assert (= ($generated@@9 $generated@@100) 5))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@33 $generated@@101 ($generated@@63 $generated@@102 $generated@@103)) (and (= ($generated@@45 $generated@@100 ($generated@@44 $generated@@100 $generated@@101)) $generated@@101) ($generated@@29 $generated@@100 ($generated@@44 $generated@@100 $generated@@101) ($generated@@63 $generated@@102 $generated@@103))))
 :pattern ( ($generated@@33 $generated@@101 ($generated@@63 $generated@@102 $generated@@103)))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@33 $generated@@106 ($generated@@32 $generated@@104 $generated@@105)) (and (= ($generated@@45 $generated@@30 ($generated@@44 $generated@@30 $generated@@106)) $generated@@106) ($generated@@29 $generated@@30 ($generated@@44 $generated@@30 $generated@@106) ($generated@@32 $generated@@104 $generated@@105))))
 :pattern ( ($generated@@33 $generated@@106 ($generated@@32 $generated@@104 $generated@@105)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@107 $generated@@118 $generated@@119 $generated@@120 ($generated@@114 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@123 $generated@@124) $generated@@121)
 :weight 0
)) (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@107 $generated@@125 $generated@@126 $generated@@127 ($generated@@114 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@107 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@107 $generated@@134 $generated@@135 $generated@@136 ($generated@@114 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)))) (= ($generated@@9 $generated@@108) 6)) (= ($generated@@9 $generated@@109) 7)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@111 $generated@@143 $generated@@144 ($generated@@115 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@145) $generated@@147) $generated@@145)
 :weight 0
))) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@111 $generated@@148 $generated@@149 ($generated@@115 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@111 $generated@@148 $generated@@149 $generated@@151 $generated@@153)))
 :weight 0
))) (= ($generated@@9 $generated@@112) 8)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (= ($generated@@9 ($generated@@113 $generated@@154 $generated@@155)) 9))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (! (= ($generated@@116 ($generated@@113 $generated@@156 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@113 $generated@@156 $generated@@157))
))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (! (= ($generated@@117 ($generated@@113 $generated@@158 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@113 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Bool) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@14 ($generated@@107 $generated@@108 $generated@@109 $generated@@10 ($generated@@110 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))  (=> (and (or (not (= $generated@@164 $generated@@160)) (not true)) ($generated@@14 ($generated@@44 $generated@@10 ($generated@@111 $generated@@109 $generated@@112 ($generated@@111 $generated@@108 ($generated@@113 $generated@@109 $generated@@112) $generated@@161 $generated@@164) $generated@@162)))) $generated@@163))
 :pattern ( ($generated@@107 $generated@@108 $generated@@109 $generated@@10 ($generated@@110 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (and (= ($generated@@25 ($generated@@32 $generated@@167 $generated@@168)) $generated@@7) (= ($generated@@166 ($generated@@32 $generated@@167 $generated@@168)) $generated@@8))
 :pattern ( ($generated@@32 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ) (!  (or (= $generated@@169 $generated@@54) (exists (($generated@@170 T@U) ) ($generated@@26 ($generated@@98 $generated@@169) $generated@@170)))
 :pattern ( ($generated@@98 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (!  (or (= $generated@@172 $generated@@54) (exists (($generated@@173 T@U) ) ($generated@@26 ($generated@@171 $generated@@172) $generated@@173)))
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@26 ($generated@@174 $generated@@176) $generated@@177)  (and ($generated@@26 ($generated@@98 $generated@@176) ($generated@@81 ($generated@@44 $generated@@30 $generated@@177))) (= ($generated@@111 $generated@@112 $generated@@112 ($generated@@175 $generated@@176) ($generated@@81 ($generated@@44 $generated@@30 $generated@@177))) ($generated@@84 ($generated@@44 $generated@@30 $generated@@177)))))
 :pattern ( ($generated@@26 ($generated@@174 $generated@@176) $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@26 ($generated@@171 $generated@@178) $generated@@179) (exists (($generated@@180 T@U) ) (!  (and ($generated@@26 ($generated@@98 $generated@@178) $generated@@180) (= $generated@@179 ($generated@@111 $generated@@112 $generated@@112 ($generated@@175 $generated@@178) $generated@@180)))
 :pattern ( ($generated@@26 ($generated@@98 $generated@@178) $generated@@180))
 :pattern ( ($generated@@111 $generated@@112 $generated@@112 ($generated@@175 $generated@@178) $generated@@180))
)))
 :pattern ( ($generated@@26 ($generated@@171 $generated@@178) $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@92 ($generated@@45 $generated@@30 $generated@@181)) ($generated@@93 $generated@@181))
 :pattern ( ($generated@@92 ($generated@@45 $generated@@30 $generated@@181)))
)))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@38 ($generated@@98 $generated@@182)) ($generated@@53 $generated@@182))
 :pattern ( ($generated@@38 ($generated@@98 $generated@@182)))
 :pattern ( ($generated@@53 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@38 ($generated@@174 $generated@@183)) ($generated@@53 $generated@@183))
 :pattern ( ($generated@@38 ($generated@@174 $generated@@183)))
 :pattern ( ($generated@@53 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (! (<= ($generated@@38 ($generated@@171 $generated@@184)) ($generated@@53 $generated@@184))
 :pattern ( ($generated@@38 ($generated@@171 $generated@@184)))
 :pattern ( ($generated@@53 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> ($generated@@33 $generated@@185 ($generated@@49 $generated@@186)) (and (= ($generated@@45 $generated@@48 ($generated@@44 $generated@@48 $generated@@185)) $generated@@185) ($generated@@29 $generated@@48 ($generated@@44 $generated@@48 $generated@@185) ($generated@@49 $generated@@186))))
 :pattern ( ($generated@@33 $generated@@185 ($generated@@49 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@29 $generated@@100 $generated@@187 ($generated@@63 $generated@@188 $generated@@189)) (forall (($generated@@190 T@U) ) (!  (=> ($generated@@26 ($generated@@98 $generated@@187) $generated@@190) (and ($generated@@33 ($generated@@111 $generated@@112 $generated@@112 ($generated@@175 $generated@@187) $generated@@190) $generated@@189) ($generated@@33 $generated@@190 $generated@@188)))
 :pattern ( ($generated@@111 $generated@@112 $generated@@112 ($generated@@175 $generated@@187) $generated@@190))
 :pattern ( ($generated@@26 ($generated@@98 $generated@@187) $generated@@190))
)))
 :pattern ( ($generated@@29 $generated@@100 $generated@@187 ($generated@@63 $generated@@188 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@31 ($generated@@41 $generated@@112 $generated@@191) ($generated@@41 $generated@@112 $generated@@192)) ($generated@@41 $generated@@30 ($generated@@31 $generated@@191 $generated@@192)))
 :pattern ( ($generated@@31 ($generated@@41 $generated@@112 $generated@@191) ($generated@@41 $generated@@112 $generated@@192)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@T) ) (! (= ($generated@@45 $generated@@194 ($generated@@41 $generated@@194 $generated@@193)) ($generated@@41 $generated@@112 ($generated@@45 $generated@@194 $generated@@193)))
 :pattern ( ($generated@@45 $generated@@194 ($generated@@41 $generated@@194 $generated@@193)))
)))
(assert (forall (($generated@@195 T@U) ) (!  (or (= $generated@@195 $generated@@54) (exists (($generated@@196 T@U) ($generated@@197 T@U) ) ($generated@@26 ($generated@@174 $generated@@195) ($generated@@45 $generated@@30 ($generated@@31 $generated@@196 $generated@@197)))))
 :pattern ( ($generated@@174 $generated@@195))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@29 $generated@@100 $generated@@198 ($generated@@63 $generated@@199 $generated@@200)) (and (and ($generated@@29 $generated@@48 ($generated@@98 $generated@@198) ($generated@@49 $generated@@199)) ($generated@@29 $generated@@48 ($generated@@171 $generated@@198) ($generated@@49 $generated@@200))) ($generated@@29 $generated@@48 ($generated@@174 $generated@@198) ($generated@@49 ($generated@@32 $generated@@199 $generated@@200)))))
 :pattern ( ($generated@@29 $generated@@100 $generated@@198 ($generated@@63 $generated@@199 $generated@@200)))
)))
(assert (forall (($generated@@201 T@U) ) (! ($generated@@29 $generated@@11 $generated@@201 $generated@@0)
 :pattern ( ($generated@@29 $generated@@11 $generated@@201 $generated@@0))
)))
(assert (forall (($generated@@202 T@U) ) (! ($generated@@29 $generated@@10 $generated@@202 $generated)
 :pattern ( ($generated@@29 $generated@@10 $generated@@202 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 (T@U) Bool)
(declare-fun $generated@@211 (T@U) Bool)
(declare-fun $generated@@212 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@213 true))
(let (($generated@@214  (=> (not (let (($generated@@215 ($generated@@41 $generated@@100 $generated@@54)))
(> ($generated@@53 $generated@@215) 0))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@14 ($generated@@41 $generated@@10 ($generated@@13 true)))) (=> ($generated@@14 ($generated@@41 $generated@@10 ($generated@@13 true))) (=> (= (ControlFlow 0 5) 2) $generated@@213))))))
(let (($generated@@216  (=> (let (($generated@@217 ($generated@@41 $generated@@100 $generated@@54)))
(> ($generated@@53 $generated@@217) 0)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@14 ($generated@@41 $generated@@10 ($generated@@13 true)))) (=> ($generated@@14 ($generated@@41 $generated@@10 ($generated@@13 true))) (=> (= (ControlFlow 0 3) 2) $generated@@213))))))
(let (($generated@@218  (=> (= $generated@@203 ($generated@@41 $generated@@100 $generated@@54)) (=> (and ($generated@@29 $generated@@100 $generated@@203 ($generated@@63 $generated@@204 $generated@@205)) (= $generated@@206 $generated@@203)) (and (=> (= (ControlFlow 0 7) 3) $generated@@216) (=> (= (ControlFlow 0 7) 5) $generated@@214))))))
(let (($generated@@219 true))
(let (($generated@@220  (=> (= $generated@@207 ($generated@@110 $generated@@208 $generated@@209 $generated@@5 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@219) (=> (= (ControlFlow 0 8) 7) $generated@@218)))))
(let (($generated@@221  (=> (and (and ($generated@@210 $generated@@209) ($generated@@211 $generated@@209)) (and (= 0 $generated@@212) (= (ControlFlow 0 9) 8))) $generated@@220)))
$generated@@221))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
