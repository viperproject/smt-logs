(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (Int) Bool)
(declare-fun $generated@@24 (Int) Int)
(declare-fun $generated@@25 (Int) Bool)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U Int) T@U)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@85 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@89 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@1))
(assert (= ($generated@@21 $generated@@0) $generated@@2))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@26 Int) ) (!  (=> (or ($generated@@25 ($generated@@24 $generated@@26)) (< 0 $generated@@22)) (= ($generated@@23 ($generated@@24 $generated@@26))  (and (<= ($generated@@24 0) ($generated@@24 $generated@@26)) (< $generated@@26 256))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@24 $generated@@26)))
))))
(assert (= ($generated@@5 $generated@@29) 3))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@39 T@U) ) (!  (=> (or ($generated@@30 ($generated@@28 $generated@@29 $generated@@39)) (and (< 3 $generated@@22) (and ($generated@@31 $generated@@29 $generated@@39 ($generated@@32 $generated@@0)) (and ($generated@@10 ($generated@@28 $generated@@6 ($generated@@9 ($generated@@33 ($generated@@28 $generated@@29 $generated@@39))))) ($generated@@10 ($generated@@28 $generated@@6 ($generated@@9  (=> ($generated@@34 ($generated@@28 $generated@@29 $generated@@39)) ($generated@@35 ($generated@@28 $generated@@29 $generated@@39)))))))))) (and (and ($generated@@36 ($generated@@28 $generated@@29 $generated@@39)) (=> ($generated@@10 ($generated@@28 $generated@@6 ($generated@@9 ($generated@@34 ($generated@@28 $generated@@29 $generated@@39))))) ($generated@@37 ($generated@@28 $generated@@29 $generated@@39)))) (= ($generated@@27 ($generated@@28 $generated@@29 $generated@@39)) ($generated@@10 ($generated@@28 $generated@@6 ($generated@@9  (and ($generated@@34 ($generated@@28 $generated@@29 $generated@@39)) ($generated@@38 ($generated@@28 $generated@@29 $generated@@39)))))))))
 :weight 3
 :pattern ( ($generated@@27 ($generated@@28 $generated@@29 $generated@@39)))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@41 T@U) ) (!  (=> (or ($generated@@36 $generated@@41) (and (< 2 $generated@@22) (and ($generated@@31 $generated@@29 $generated@@41 ($generated@@32 $generated@@0)) ($generated@@33 $generated@@41)))) (= ($generated@@34 $generated@@41) (> ($generated@@40 $generated@@41) 2)))
 :pattern ( ($generated@@34 $generated@@41))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@42 T@U) ) (!  (=> (or ($generated@@37 $generated@@42) (and (< 2 $generated@@22) (and ($generated@@31 $generated@@29 $generated@@42 ($generated@@32 $generated@@0)) ($generated@@35 $generated@@42)))) (= ($generated@@38 $generated@@42) (> ($generated@@40 $generated@@42) 2)))
 :pattern ( ($generated@@38 $generated@@42))
))))
(assert (= ($generated@@40 $generated@@43) 0))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@44 T@U) ) (!  (=> (or ($generated@@30 $generated@@44) (and (< 3 $generated@@22) (and ($generated@@31 $generated@@29 $generated@@44 ($generated@@32 $generated@@0)) (and ($generated@@33 $generated@@44) (=> ($generated@@34 $generated@@44) ($generated@@35 $generated@@44)))))) (and (and ($generated@@36 $generated@@44) (=> ($generated@@34 $generated@@44) ($generated@@37 $generated@@44))) (= ($generated@@27 $generated@@44)  (and ($generated@@34 $generated@@44) ($generated@@38 $generated@@44)))))
 :pattern ( ($generated@@27 $generated@@44))
))))
(assert (forall (($generated@@45 Int) ) (! (= ($generated@@24 $generated@@45) $generated@@45)
 :pattern ( ($generated@@24 $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@T) ) (! (= ($generated@@28 $generated@@47 $generated@@46) $generated@@46)
 :pattern ( ($generated@@28 $generated@@47 $generated@@46))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 ($generated@@48 $generated@@51 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@48 $generated@@51 $generated@@50))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@52 T@U) ) (!  (=> (or ($generated@@36 ($generated@@28 $generated@@29 $generated@@52)) (and (< 2 $generated@@22) (and ($generated@@31 $generated@@29 $generated@@52 ($generated@@32 $generated@@0)) ($generated@@10 ($generated@@28 $generated@@6 ($generated@@9 ($generated@@33 ($generated@@28 $generated@@29 $generated@@52)))))))) (= ($generated@@34 ($generated@@28 $generated@@29 $generated@@52)) (> ($generated@@40 ($generated@@28 $generated@@29 $generated@@52)) 2)))
 :weight 3
 :pattern ( ($generated@@34 ($generated@@28 $generated@@29 $generated@@52)))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@53 T@U) ) (!  (=> (or ($generated@@37 ($generated@@28 $generated@@29 $generated@@53)) (and (< 2 $generated@@22) (and ($generated@@31 $generated@@29 $generated@@53 ($generated@@32 $generated@@0)) ($generated@@10 ($generated@@28 $generated@@6 ($generated@@9 ($generated@@35 ($generated@@28 $generated@@29 $generated@@53)))))))) (= ($generated@@38 ($generated@@28 $generated@@29 $generated@@53)) (> ($generated@@40 ($generated@@28 $generated@@29 $generated@@53)) 2)))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@28 $generated@@29 $generated@@53)))
))))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@54 ($generated@@49 $generated@@59 $generated@@56) $generated@@57 $generated@@58) ($generated@@55 $generated@@59 $generated@@56 $generated@@57 $generated@@58))
 :pattern ( ($generated@@54 ($generated@@49 $generated@@59 $generated@@56) $generated@@57 $generated@@58))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@62 T@U) ) (!  (=> (or ($generated@@60 $generated@@62) (and (< 1 $generated@@22) ($generated@@31 $generated@@29 $generated@@62 ($generated@@32 $generated@@0)))) (and (forall (($generated@@63 Int) ) (!  (=> (<= ($generated@@24 0) $generated@@63) (=> (< $generated@@63 ($generated@@40 $generated@@62)) ($generated@@25 ($generated@@12 ($generated@@48 $generated@@7 ($generated@@61 $generated@@62 $generated@@63))))))
 :pattern ( ($generated@@48 $generated@@7 ($generated@@61 $generated@@62 $generated@@63)))
)) (= ($generated@@33 $generated@@62) (forall (($generated@@64 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@64) (< $generated@@64 ($generated@@40 $generated@@62))) ($generated@@23 ($generated@@12 ($generated@@48 $generated@@7 ($generated@@61 $generated@@62 $generated@@64)))))
 :pattern ( ($generated@@48 $generated@@7 ($generated@@61 $generated@@62 $generated@@64)))
)))))
 :pattern ( ($generated@@33 $generated@@62))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@66 T@U) ) (!  (=> (or ($generated@@65 $generated@@66) (and (< 1 $generated@@22) ($generated@@31 $generated@@29 $generated@@66 ($generated@@32 $generated@@0)))) (and (forall (($generated@@67 Int) ) (!  (=> (<= ($generated@@24 0) $generated@@67) (=> (< $generated@@67 ($generated@@40 $generated@@66)) ($generated@@25 ($generated@@12 ($generated@@48 $generated@@7 ($generated@@61 $generated@@66 $generated@@67))))))
 :pattern ( ($generated@@48 $generated@@7 ($generated@@61 $generated@@66 $generated@@67)))
)) (= ($generated@@35 $generated@@66) (exists (($generated@@68 Int) ) (!  (and (and (<= ($generated@@24 0) $generated@@68) (< $generated@@68 ($generated@@40 $generated@@66))) ($generated@@23 ($generated@@12 ($generated@@48 $generated@@7 ($generated@@61 $generated@@66 $generated@@68)))))
 :pattern ( ($generated@@48 $generated@@7 ($generated@@61 $generated@@66 $generated@@68)))
)))))
 :pattern ( ($generated@@35 $generated@@66))
))))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@69 $generated@@70 $generated@@0) (and (= ($generated@@49 $generated@@7 ($generated@@48 $generated@@7 $generated@@70)) $generated@@70) ($generated@@31 $generated@@7 ($generated@@48 $generated@@7 $generated@@70) $generated@@0)))
 :pattern ( ($generated@@69 $generated@@70 $generated@@0))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@69 $generated@@71 $generated) (and (= ($generated@@49 $generated@@6 ($generated@@48 $generated@@6 $generated@@71)) $generated@@71) ($generated@@31 $generated@@6 ($generated@@48 $generated@@6 $generated@@71) $generated)))
 :pattern ( ($generated@@69 $generated@@71 $generated))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@69 ($generated@@49 $generated@@74 $generated@@72) $generated@@73) ($generated@@31 $generated@@74 $generated@@72 $generated@@73))
 :pattern ( ($generated@@69 ($generated@@49 $generated@@74 $generated@@72) $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (! (<= 0 ($generated@@40 $generated@@75))
 :pattern ( ($generated@@40 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@55 $generated@@29 $generated@@76 ($generated@@32 $generated@@77) $generated@@78) (forall (($generated@@79 Int) ) (!  (=> (and (<= 0 $generated@@79) (< $generated@@79 ($generated@@40 $generated@@76))) ($generated@@54 ($generated@@61 $generated@@76 $generated@@79) $generated@@77 $generated@@78))
 :pattern ( ($generated@@61 $generated@@76 $generated@@79))
)))
 :pattern ( ($generated@@55 $generated@@29 $generated@@76 ($generated@@32 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@80 ($generated@@32 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@32 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@21 ($generated@@32 $generated@@82)) $generated@@3)
 :pattern ( ($generated@@32 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@48 $generated@@84 ($generated@@49 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@49 $generated@@84 $generated@@83))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@85 $generated@@96 $generated@@97 $generated@@98 ($generated@@92 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@102 $generated@@99) $generated@@101 $generated@@102) $generated@@99)
 :weight 0
)) (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@108 $generated@@110) (= ($generated@@85 $generated@@103 $generated@@104 $generated@@105 ($generated@@92 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@85 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@85 $generated@@112 $generated@@113 $generated@@114 ($generated@@92 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@85 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)))) (= ($generated@@5 $generated@@86) 4)) (= ($generated@@5 $generated@@87) 5)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@89 $generated@@121 $generated@@122 ($generated@@93 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@123) $generated@@125) $generated@@123)
 :weight 0
))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@89 $generated@@126 $generated@@127 ($generated@@93 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@89 $generated@@126 $generated@@127 $generated@@129 $generated@@131)))
 :weight 0
))) (= ($generated@@5 $generated@@90) 6)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ) (= ($generated@@5 ($generated@@91 $generated@@132 $generated@@133)) 7))) (forall (($generated@@134 T@T) ($generated@@135 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@134 $generated@@135)) $generated@@134)
 :pattern ( ($generated@@91 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@T) ($generated@@137 T@T) ) (! (= ($generated@@95 ($generated@@91 $generated@@136 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@91 $generated@@136 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 Bool) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@10 ($generated@@85 $generated@@86 $generated@@87 $generated@@6 ($generated@@88 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@142 $generated@@143))  (=> (and (or (not (= $generated@@142 $generated@@138)) (not true)) ($generated@@10 ($generated@@48 $generated@@6 ($generated@@89 $generated@@87 $generated@@90 ($generated@@89 $generated@@86 ($generated@@91 $generated@@87 $generated@@90) $generated@@139 $generated@@142) $generated@@140)))) $generated@@141))
 :pattern ( ($generated@@85 $generated@@86 $generated@@87 $generated@@6 ($generated@@88 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> ($generated@@69 $generated@@144 ($generated@@32 $generated@@145)) (and (= ($generated@@49 $generated@@29 ($generated@@48 $generated@@29 $generated@@144)) $generated@@144) ($generated@@31 $generated@@29 ($generated@@48 $generated@@29 $generated@@144) ($generated@@32 $generated@@145))))
 :pattern ( ($generated@@69 $generated@@144 ($generated@@32 $generated@@145)))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@146 Int) ) (!  (=> (or ($generated@@25 $generated@@146) (< 0 $generated@@22)) (= ($generated@@23 $generated@@146)  (and (<= ($generated@@24 0) $generated@@146) (< $generated@@146 256))))
 :pattern ( ($generated@@23 $generated@@146))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@147 T@U) ) (!  (=> (or ($generated@@60 ($generated@@28 $generated@@29 $generated@@147)) (and (< 1 $generated@@22) ($generated@@31 $generated@@29 $generated@@147 ($generated@@32 $generated@@0)))) (and (forall (($generated@@148 Int) ) (!  (=> (<= ($generated@@24 0) $generated@@148) (=> (< $generated@@148 ($generated@@40 ($generated@@28 $generated@@29 $generated@@147))) ($generated@@25 ($generated@@12 ($generated@@48 $generated@@7 ($generated@@61 ($generated@@28 $generated@@29 $generated@@147) $generated@@148))))))
 :pattern ( ($generated@@48 $generated@@7 ($generated@@61 $generated@@147 $generated@@148)))
)) (= ($generated@@33 ($generated@@28 $generated@@29 $generated@@147)) (forall (($generated@@149 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@149) (< $generated@@149 ($generated@@40 ($generated@@28 $generated@@29 $generated@@147)))) ($generated@@23 ($generated@@12 ($generated@@48 $generated@@7 ($generated@@61 ($generated@@28 $generated@@29 $generated@@147) $generated@@149)))))
 :pattern ( ($generated@@48 $generated@@7 ($generated@@61 $generated@@147 $generated@@149)))
)))))
 :weight 3
 :pattern ( ($generated@@33 ($generated@@28 $generated@@29 $generated@@147)))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@150 T@U) ) (!  (=> (or ($generated@@65 ($generated@@28 $generated@@29 $generated@@150)) (and (< 1 $generated@@22) ($generated@@31 $generated@@29 $generated@@150 ($generated@@32 $generated@@0)))) (and (forall (($generated@@151 Int) ) (!  (=> (<= ($generated@@24 0) $generated@@151) (=> (< $generated@@151 ($generated@@40 ($generated@@28 $generated@@29 $generated@@150))) ($generated@@25 ($generated@@12 ($generated@@48 $generated@@7 ($generated@@61 ($generated@@28 $generated@@29 $generated@@150) $generated@@151))))))
 :pattern ( ($generated@@48 $generated@@7 ($generated@@61 $generated@@150 $generated@@151)))
)) (= ($generated@@35 ($generated@@28 $generated@@29 $generated@@150)) (exists (($generated@@152 Int) ) (!  (and (and (<= ($generated@@24 0) $generated@@152) (< $generated@@152 ($generated@@40 ($generated@@28 $generated@@29 $generated@@150)))) ($generated@@23 ($generated@@12 ($generated@@48 $generated@@7 ($generated@@61 ($generated@@28 $generated@@29 $generated@@150) $generated@@152)))))
 :pattern ( ($generated@@48 $generated@@7 ($generated@@61 $generated@@150 $generated@@152)))
)))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@28 $generated@@29 $generated@@150)))
))))
(assert (forall (($generated@@153 Int) ) (! (= ($generated@@49 $generated@@7 ($generated@@11 ($generated@@24 $generated@@153))) ($generated@@28 $generated@@90 ($generated@@49 $generated@@7 ($generated@@11 $generated@@153))))
 :pattern ( ($generated@@49 $generated@@7 ($generated@@11 ($generated@@24 $generated@@153))))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@49 $generated@@155 ($generated@@28 $generated@@155 $generated@@154)) ($generated@@28 $generated@@90 ($generated@@49 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@49 $generated@@155 ($generated@@28 $generated@@155 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= ($generated@@40 $generated@@156) 0) (= $generated@@156 $generated@@43))
 :pattern ( ($generated@@40 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! ($generated@@55 $generated@@7 $generated@@158 $generated@@0 $generated@@157)
 :pattern ( ($generated@@55 $generated@@7 $generated@@158 $generated@@0 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! ($generated@@55 $generated@@6 $generated@@160 $generated $generated@@159)
 :pattern ( ($generated@@55 $generated@@6 $generated@@160 $generated $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@31 $generated@@29 $generated@@161 ($generated@@32 $generated@@162)) (forall (($generated@@163 Int) ) (!  (=> (and (<= 0 $generated@@163) (< $generated@@163 ($generated@@40 $generated@@161))) ($generated@@69 ($generated@@61 $generated@@161 $generated@@163) $generated@@162))
 :pattern ( ($generated@@61 $generated@@161 $generated@@163))
)))
 :pattern ( ($generated@@31 $generated@@29 $generated@@161 ($generated@@32 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ) (! ($generated@@31 $generated@@7 $generated@@164 $generated@@0)
 :pattern ( ($generated@@31 $generated@@7 $generated@@164 $generated@@0))
)))
(assert (forall (($generated@@165 T@U) ) (! ($generated@@31 $generated@@6 $generated@@165 $generated)
 :pattern ( ($generated@@31 $generated@@6 $generated@@165 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@172 true))
(let (($generated@@173  (=> (and (not ($generated@@34 $generated@@166)) (= (ControlFlow 0 5) 2)) $generated@@172)))
(let (($generated@@174  (=> (and ($generated@@34 $generated@@166) ($generated@@55 $generated@@29 $generated@@166 ($generated@@32 $generated@@0) $generated@@167)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@65 $generated@@166) (or ($generated@@35 $generated@@166) (exists (($generated@@175 Int) ) (!  (and (and (<= ($generated@@24 0) $generated@@175) (< $generated@@175 ($generated@@40 $generated@@166))) ($generated@@23 ($generated@@12 ($generated@@48 $generated@@7 ($generated@@61 $generated@@166 $generated@@175)))))
 :pattern ( ($generated@@48 $generated@@7 ($generated@@61 $generated@@166 $generated@@175)))
))))) (=> ($generated@@35 $generated@@166) (=> (and ($generated@@37 $generated@@166) (= (ControlFlow 0 3) 2)) $generated@@172))))))
(let (($generated@@176  (=> ($generated@@55 $generated@@29 $generated@@166 ($generated@@32 $generated@@0) $generated@@167) (and (=> (= (ControlFlow 0 6) (- 0 7)) (=> ($generated@@60 $generated@@166) (or ($generated@@33 $generated@@166) (forall (($generated@@177 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@177) (< $generated@@177 ($generated@@40 $generated@@166))) ($generated@@23 ($generated@@12 ($generated@@48 $generated@@7 ($generated@@61 $generated@@166 $generated@@177)))))
 :pattern ( ($generated@@48 $generated@@7 ($generated@@61 $generated@@166 $generated@@177)))
))))) (=> (and ($generated@@33 $generated@@166) ($generated@@36 $generated@@166)) (and (=> (= (ControlFlow 0 6) 3) $generated@@174) (=> (= (ControlFlow 0 6) 5) $generated@@173)))))))
(let (($generated@@178 true))
(let (($generated@@179  (=> (=> ($generated@@34 $generated@@166) ($generated@@35 $generated@@166)) (and (=> (= (ControlFlow 0 8) 1) $generated@@178) (=> (= (ControlFlow 0 8) 6) $generated@@176)))))
(let (($generated@@180  (=> (and (not ($generated@@34 $generated@@166)) (= (ControlFlow 0 10) 8)) $generated@@179)))
(let (($generated@@181  (=> (and (and ($generated@@34 $generated@@166) ($generated@@55 $generated@@29 $generated@@166 ($generated@@32 $generated@@0) $generated@@167)) (and ($generated@@65 $generated@@166) (= (ControlFlow 0 9) 8))) $generated@@179)))
(let (($generated@@182  (=> (= $generated@@168 ($generated@@88 $generated@@169 $generated@@167 $generated@@4 false)) (=> (and (and ($generated@@55 $generated@@29 $generated@@166 ($generated@@32 $generated@@0) $generated@@167) ($generated@@60 $generated@@166)) (and ($generated@@33 $generated@@166) ($generated@@55 $generated@@29 $generated@@166 ($generated@@32 $generated@@0) $generated@@167))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (=> ($generated@@60 $generated@@166) (or ($generated@@33 $generated@@166) (forall (($generated@@183 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@183) (< $generated@@183 ($generated@@40 $generated@@166))) ($generated@@23 ($generated@@12 ($generated@@48 $generated@@7 ($generated@@61 $generated@@166 $generated@@183)))))
 :pattern ( ($generated@@48 $generated@@7 ($generated@@61 $generated@@166 $generated@@183)))
))))) (=> (and ($generated@@33 $generated@@166) ($generated@@36 $generated@@166)) (and (=> (= (ControlFlow 0 11) 9) $generated@@181) (=> (= (ControlFlow 0 11) 10) $generated@@180))))))))
(let (($generated@@184  (=> (and (and (and ($generated@@170 $generated@@167) ($generated@@171 $generated@@167)) ($generated@@31 $generated@@29 $generated@@166 ($generated@@32 $generated@@0))) (and (= 3 $generated@@22) (= (ControlFlow 0 13) 11))) $generated@@182)))
$generated@@184)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
