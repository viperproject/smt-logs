(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U) Int)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@47 (Int) T@U)
(declare-fun $generated@@48 (T@U) Int)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@T T@U T@U) Bool)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 (T@U T@U) Bool)
(declare-fun $generated@@61 (Int) Int)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@104 (T@U) Bool)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@130 (T@U) Bool)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@153 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@154 (T@T T@T) T@T)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@210 (T@U) Bool)
(declare-fun $generated@@213 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@27 $generated@@30 $generated@@31) (=> ($generated@@25 $generated@@28 $generated@@30 $generated@@29) ($generated@@25 $generated@@28 $generated@@31 $generated@@29)))
 :pattern ( ($generated@@25 $generated@@28 $generated@@30 $generated@@29) ($generated@@26 $generated@@30 $generated@@32) ($generated@@26 $generated@@31 $generated@@32))
))))
(assert (= ($generated@@33 $generated) $generated@@0))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and ($generated@@27 $generated@@34 $generated@@35) ($generated@@27 $generated@@35 $generated@@36)) ($generated@@27 $generated@@34 $generated@@36))
 :pattern ( ($generated@@27 $generated@@34 $generated@@35) ($generated@@27 $generated@@35 $generated@@36))
 :pattern ( ($generated@@27 $generated@@34 $generated@@35) ($generated@@27 $generated@@34 $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! ($generated@@37 $generated@@10 $generated@@39 $generated@@38 $generated@@40)
 :pattern ( ($generated@@37 $generated@@10 $generated@@39 $generated@@38 $generated@@40))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (and ($generated@@42 $generated@@44) ($generated@@42 $generated@@45)) (= ($generated@@41 $generated@@44 $generated@@45) (= ($generated@@43 $generated@@44) ($generated@@43 $generated@@45))))
 :pattern ( ($generated@@41 $generated@@44 $generated@@45) ($generated@@42 $generated@@44))
 :pattern ( ($generated@@41 $generated@@44 $generated@@45) ($generated@@42 $generated@@45))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 Int) ($generated@@51 Int) ) (!  (=> (and (and (<= 0 $generated@@50) (<= 0 $generated@@51)) (<= (+ $generated@@50 $generated@@51) ($generated@@48 $generated@@49))) (= ($generated@@46 ($generated@@46 $generated@@49 ($generated@@47 $generated@@50)) ($generated@@47 $generated@@51)) ($generated@@46 $generated@@49 ($generated@@47 (+ $generated@@50 $generated@@51)))))
 :pattern ( ($generated@@46 ($generated@@46 $generated@@49 ($generated@@47 $generated@@50)) ($generated@@47 $generated@@51)))
)))
(assert (= ($generated@@52 $generated@@53) $generated@@5))
(assert (= ($generated@@8 $generated@@55) 3))
(assert ($generated@@54 $generated@@55 $generated@@53 $generated@@56))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@41 $generated@@57 $generated@@58) (= $generated@@57 $generated@@58))
 :pattern ( ($generated@@41 $generated@@57 $generated@@58))
)))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@60 $generated@@66 $generated@@67) (and (< 3 $generated@@24) ($generated@@54 $generated@@55 $generated@@67 $generated@@56))) (and (and (=> (< 0 ($generated@@48 $generated@@66)) (=> (not (and ($generated@@42 $generated@@67) (= ($generated@@43 $generated@@67) ($generated@@61 0)))) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@54 $generated@@55 $generated@@68 $generated@@56) (and (and (and ($generated@@63 $generated@@67) ($generated@@63 ($generated@@62 ($generated@@62 $generated@@68)))) (and ($generated@@64 $generated@@68) ($generated@@64 ($generated@@62 $generated@@68)))) (=> ($generated@@41 $generated@@67 ($generated@@62 ($generated@@62 $generated@@68))) ($generated@@60 ($generated@@46 $generated@@66 ($generated@@47 1)) $generated@@68))))
 :pattern ( ($generated@@25 $generated@@65 ($generated@@46 $generated@@66 ($generated@@47 1)) $generated@@68))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@68)))
)))) (=> (=> (< 0 ($generated@@48 $generated@@66)) (or (and ($generated@@42 $generated@@67) (= ($generated@@43 $generated@@67) ($generated@@61 0))) (exists (($generated@@69 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@69 $generated@@56) (and ($generated@@41 $generated@@67 ($generated@@62 ($generated@@62 $generated@@69))) ($generated@@25 $generated@@65 ($generated@@46 $generated@@66 ($generated@@47 1)) $generated@@69)))
 :pattern ( ($generated@@25 $generated@@65 ($generated@@46 $generated@@66 ($generated@@47 1)) $generated@@69))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@69)))
)))) (=> (= ($generated@@61 0) ($generated@@48 $generated@@66)) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@26 $generated@@70 $generated@@66) ($generated@@60 $generated@@70 $generated@@67))
 :pattern ( ($generated@@25 $generated@@65 $generated@@70 $generated@@67))
))))) (= ($generated@@25 ($generated@@59 $generated@@65) $generated@@66 $generated@@67)  (and (=> (< 0 ($generated@@48 $generated@@66)) (or (and ($generated@@42 $generated@@67) (= ($generated@@43 $generated@@67) ($generated@@61 0))) (exists (($generated@@71 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@71 $generated@@56) (and ($generated@@41 $generated@@67 ($generated@@62 ($generated@@62 $generated@@71))) ($generated@@25 $generated@@65 ($generated@@46 $generated@@66 ($generated@@47 1)) $generated@@71)))
 :pattern ( ($generated@@25 $generated@@65 ($generated@@46 $generated@@66 ($generated@@47 1)) $generated@@71))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@71)))
)))) (=> (= ($generated@@61 0) ($generated@@48 $generated@@66)) (exists (($generated@@72 T@U) ) (!  (and ($generated@@26 $generated@@72 $generated@@66) ($generated@@25 $generated@@65 $generated@@72 $generated@@67))
 :pattern ( ($generated@@25 $generated@@65 $generated@@72 $generated@@67))
)))))))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@65) $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@73 Int) ) (! (= ($generated@@61 $generated@@73) $generated@@73)
 :pattern ( ($generated@@61 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 $generated@@75) $generated@@75)
 :pattern ( ($generated@@74 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@42 $generated@@77) (= ($generated@@52 $generated@@77) $generated@@4))
 :pattern ( ($generated@@42 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@78 $generated@@79) (= ($generated@@52 $generated@@79) $generated@@5))
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@80 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@80 $generated@@83 $generated@@82))
)))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and ($generated@@54 $generated@@55 $generated@@86 $generated@@56) (exists (($generated@@87 T@U) ) (! ($generated@@25 ($generated@@59 $generated@@85) $generated@@87 $generated@@86)
 :pattern ( ($generated@@25 ($generated@@59 $generated@@85) $generated@@87 $generated@@86))
))) ($generated@@84 ($generated@@59 $generated@@85) $generated@@86))
 :pattern ( ($generated@@84 ($generated@@59 $generated@@85) $generated@@86))
))))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and ($generated@@54 $generated@@55 $generated@@89 $generated@@56) (= $generated@@90 ($generated@@47 0))) (not ($generated@@25 $generated@@88 $generated@@90 $generated@@89)))
 :pattern ( ($generated@@25 $generated@@88 $generated@@90 $generated@@89))
))))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@78 $generated@@91) (= $generated@@91 $generated@@53))
 :pattern ( ($generated@@78 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@42 $generated@@93) (exists (($generated@@94 Int) ) (= $generated@@93 ($generated@@92 $generated@@94))))
 :pattern ( ($generated@@42 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@54 $generated@@10 $generated@@95 $generated@@38) (<= ($generated@@61 0) ($generated@@15 $generated@@95)))
 :pattern ( ($generated@@54 $generated@@10 $generated@@95 $generated@@38))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@25 ($generated@@59 $generated@@96) $generated@@97 $generated@@98) ($generated@@25 $generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@96) $generated@@97 $generated@@98))
)))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and ($generated@@54 $generated@@55 $generated@@100 $generated@@56) ($generated@@84 ($generated@@59 $generated@@99) $generated@@100)) (exists (($generated@@101 T@U) ) (! ($generated@@25 ($generated@@59 $generated@@99) $generated@@101 $generated@@100)
 :pattern ( ($generated@@25 ($generated@@59 $generated@@99) $generated@@101 $generated@@100))
)))
 :pattern ( ($generated@@84 ($generated@@59 $generated@@99) $generated@@100))
))))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@102 T@U) ) (!  (=> (or ($generated@@64 $generated@@102) (and (< 1 $generated@@24) ($generated@@54 $generated@@55 $generated@@102 $generated@@56))) (= ($generated@@62 $generated@@102) (ite ($generated@@42 $generated@@102) (let (($generated@@103 ($generated@@43 $generated@@102)))
($generated@@92 (+ $generated@@103 1))) $generated@@53)))
 :pattern ( ($generated@@62 $generated@@102))
))))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and ($generated@@104 $generated@@106) (<= ($generated@@48 $generated@@106) ($generated@@48 $generated@@105))) (and (= ($generated@@104 ($generated@@46 $generated@@105 $generated@@106)) ($generated@@104 $generated@@105)) (= ($generated@@48 ($generated@@46 $generated@@105 $generated@@106)) (- ($generated@@48 $generated@@105) ($generated@@48 $generated@@106)))))
 :pattern ( ($generated@@46 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@107 Int) ) (!  (=> (<= 0 $generated@@107) (and ($generated@@104 ($generated@@47 $generated@@107)) (= ($generated@@48 ($generated@@47 $generated@@107)) $generated@@107)))
 :pattern ( ($generated@@47 $generated@@107))
)))
(assert (forall (($generated@@108 Int) ) (! (= ($generated@@54 $generated@@55 ($generated@@92 $generated@@108) $generated@@56) ($generated@@54 $generated@@10 ($generated@@14 $generated@@108) $generated@@38))
 :pattern ( ($generated@@54 $generated@@55 ($generated@@92 $generated@@108) $generated@@56))
)))
(assert (= ($generated@@8 $generated@@109) 4))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or ($generated@@60 ($generated@@74 $generated@@109 $generated@@111) $generated@@112) (and (< 3 $generated@@24) ($generated@@54 $generated@@55 $generated@@112 $generated@@56))) (and (and (=> (< 0 ($generated@@48 $generated@@111)) (=> (not (and ($generated@@42 $generated@@112) (= ($generated@@43 $generated@@112) ($generated@@61 0)))) (forall (($generated@@113 T@U) ) (!  (=> ($generated@@54 $generated@@55 $generated@@113 $generated@@56) (and (and (and ($generated@@63 $generated@@112) ($generated@@63 ($generated@@62 ($generated@@62 $generated@@113)))) (and ($generated@@64 $generated@@113) ($generated@@64 ($generated@@62 $generated@@113)))) (=> ($generated@@41 $generated@@112 ($generated@@62 ($generated@@62 $generated@@113))) ($generated@@60 ($generated@@46 $generated@@111 ($generated@@47 1)) $generated@@113))))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@110) ($generated@@46 $generated@@111 ($generated@@47 1)) $generated@@113))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@113)))
)))) (=> (=> (< 0 ($generated@@48 $generated@@111)) (or (and ($generated@@42 $generated@@112) (= ($generated@@43 $generated@@112) ($generated@@61 0))) (exists (($generated@@114 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@114 $generated@@56) (and ($generated@@41 $generated@@112 ($generated@@62 ($generated@@62 $generated@@114))) ($generated@@25 ($generated@@59 $generated@@110) ($generated@@46 $generated@@111 ($generated@@47 1)) $generated@@114)))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@110) ($generated@@46 $generated@@111 ($generated@@47 1)) $generated@@114))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@114)))
)))) (=> (= ($generated@@61 0) ($generated@@48 $generated@@111)) (forall (($generated@@115 T@U) ) (!  (=> ($generated@@26 $generated@@115 $generated@@111) ($generated@@60 $generated@@115 $generated@@112))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@110) $generated@@115 $generated@@112))
))))) (= ($generated@@25 ($generated@@59 $generated@@110) ($generated@@74 $generated@@109 $generated@@111) $generated@@112)  (and (=> (< 0 ($generated@@48 $generated@@111)) (or (and ($generated@@42 $generated@@112) (= ($generated@@43 $generated@@112) ($generated@@61 0))) (exists (($generated@@116 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@116 $generated@@56) (and ($generated@@41 $generated@@112 ($generated@@62 ($generated@@62 $generated@@116))) ($generated@@25 ($generated@@59 $generated@@110) ($generated@@46 $generated@@111 ($generated@@47 1)) $generated@@116)))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@110) ($generated@@46 $generated@@111 ($generated@@47 1)) $generated@@116))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@116)))
)))) (=> (= ($generated@@61 0) ($generated@@48 $generated@@111)) (exists (($generated@@117 T@U) ) (!  (and ($generated@@26 $generated@@117 $generated@@111) ($generated@@25 ($generated@@59 $generated@@110) $generated@@117 $generated@@112))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@110) $generated@@117 $generated@@112))
)))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@59 $generated@@110) ($generated@@74 $generated@@109 $generated@@111) $generated@@112))
))))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@63 $generated@@118) (or ($generated@@42 $generated@@118) ($generated@@78 $generated@@118)))
 :pattern ( ($generated@@63 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (or ($generated@@27 $generated@@119 $generated@@120) (= $generated@@119 $generated@@120)) ($generated@@27 $generated@@120 $generated@@119))
 :pattern ( ($generated@@27 $generated@@119 $generated@@120) ($generated@@27 $generated@@120 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@26 $generated@@121 $generated@@122) ($generated@@27 $generated@@121 $generated@@122))
 :pattern ( ($generated@@26 $generated@@121 $generated@@122))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@123 T@U) ) (!  (=> (or ($generated@@64 $generated@@123) (and (< 1 $generated@@24) ($generated@@54 $generated@@55 $generated@@123 $generated@@56))) ($generated@@54 $generated@@55 ($generated@@62 $generated@@123) $generated@@56))
 :pattern ( ($generated@@62 $generated@@123))
))))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@54 $generated@@55 $generated@@124 $generated@@56) (or ($generated@@42 $generated@@124) ($generated@@78 $generated@@124)))
 :pattern ( ($generated@@78 $generated@@124) ($generated@@54 $generated@@55 $generated@@124 $generated@@56))
 :pattern ( ($generated@@42 $generated@@124) ($generated@@54 $generated@@55 $generated@@124 $generated@@56))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@84 ($generated@@59 $generated@@125) $generated@@126) ($generated@@84 $generated@@125 $generated@@126))
 :pattern ( ($generated@@84 ($generated@@59 $generated@@125) $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (! (<= 0 ($generated@@48 $generated@@127))
 :pattern ( ($generated@@48 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and ($generated@@78 $generated@@128) ($generated@@78 $generated@@129)) ($generated@@41 $generated@@128 $generated@@129))
 :pattern ( ($generated@@41 $generated@@128 $generated@@129) ($generated@@78 $generated@@128))
 :pattern ( ($generated@@41 $generated@@128 $generated@@129) ($generated@@78 $generated@@129))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or ($generated@@130 $generated@@132) (and (< 2 $generated@@24) ($generated@@54 $generated@@55 $generated@@132 $generated@@56))) (and (=> (not (and ($generated@@42 $generated@@132) (= ($generated@@43 $generated@@132) ($generated@@61 0)))) (forall (($generated@@133 T@U) ) (!  (=> ($generated@@54 $generated@@55 $generated@@133 $generated@@56) (and (and (and ($generated@@63 $generated@@132) ($generated@@63 ($generated@@62 ($generated@@62 $generated@@133)))) (and ($generated@@64 $generated@@133) ($generated@@64 ($generated@@62 $generated@@133)))) (=> ($generated@@41 $generated@@132 ($generated@@62 ($generated@@62 $generated@@133))) ($generated@@130 $generated@@133))))
 :pattern ( ($generated@@84 $generated@@131 $generated@@133))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@133)))
))) (= ($generated@@84 ($generated@@59 $generated@@131) $generated@@132)  (or (and ($generated@@42 $generated@@132) (= ($generated@@43 $generated@@132) ($generated@@61 0))) (exists (($generated@@134 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@134 $generated@@56) (and ($generated@@41 $generated@@132 ($generated@@62 ($generated@@62 $generated@@134))) ($generated@@84 $generated@@131 $generated@@134)))
 :pattern ( ($generated@@84 $generated@@131 $generated@@134))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@134)))
))))))
 :pattern ( ($generated@@84 ($generated@@59 $generated@@131) $generated@@132))
))))
(assert (forall (($generated@@135 Int) ) (! (= ($generated@@52 ($generated@@92 $generated@@135)) $generated@@4)
 :pattern ( ($generated@@92 $generated@@135))
)))
(assert (forall (($generated@@136 Int) ) (! (= ($generated@@43 ($generated@@92 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@92 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@80 $generated@@138 ($generated@@81 $generated@@138 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@81 $generated@@138 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (and (and (and (=> ($generated@@27 $generated@@139 $generated@@140) (or (not (= $generated@@139 $generated@@140)) (not true))) (=> (and ($generated@@104 $generated@@139) (not ($generated@@104 $generated@@140))) ($generated@@27 $generated@@139 $generated@@140))) (=> (and ($generated@@104 $generated@@139) ($generated@@104 $generated@@140)) (= ($generated@@27 $generated@@139 $generated@@140) (< ($generated@@48 $generated@@139) ($generated@@48 $generated@@140))))) (=> (and ($generated@@27 $generated@@139 $generated@@140) ($generated@@104 $generated@@140)) ($generated@@104 $generated@@139)))
 :pattern ( ($generated@@27 $generated@@139 $generated@@140))
)))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (or ($generated@@60 ($generated@@74 $generated@@109 $generated@@142) ($generated@@74 $generated@@55 $generated@@143)) (and (< 3 $generated@@24) ($generated@@54 $generated@@55 $generated@@143 $generated@@56))) (and (and (=> (< 0 ($generated@@48 $generated@@142)) (=> (not (and ($generated@@42 ($generated@@74 $generated@@55 $generated@@143)) (= ($generated@@61 ($generated@@43 ($generated@@74 $generated@@55 $generated@@143))) ($generated@@61 0)))) (forall (($generated@@144 T@U) ) (!  (=> ($generated@@54 $generated@@55 $generated@@144 $generated@@56) (and (and (and ($generated@@63 ($generated@@74 $generated@@55 $generated@@143)) ($generated@@63 ($generated@@62 ($generated@@62 $generated@@144)))) (and ($generated@@64 $generated@@144) ($generated@@64 ($generated@@62 $generated@@144)))) (=> ($generated@@41 $generated@@143 ($generated@@62 ($generated@@62 $generated@@144))) ($generated@@60 ($generated@@46 $generated@@142 ($generated@@47 1)) $generated@@144))))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@141) ($generated@@46 $generated@@142 ($generated@@47 1)) $generated@@144))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@144)))
)))) (=> (=> (< 0 ($generated@@48 $generated@@142)) (or (and ($generated@@42 ($generated@@74 $generated@@55 $generated@@143)) (= ($generated@@61 ($generated@@43 ($generated@@74 $generated@@55 $generated@@143))) ($generated@@61 0))) (exists (($generated@@145 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@145 $generated@@56) (and ($generated@@41 $generated@@143 ($generated@@62 ($generated@@62 $generated@@145))) ($generated@@25 ($generated@@59 $generated@@141) ($generated@@46 $generated@@142 ($generated@@47 1)) $generated@@145)))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@141) ($generated@@46 $generated@@142 ($generated@@47 1)) $generated@@145))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@145)))
)))) (=> (= ($generated@@61 0) ($generated@@48 $generated@@142)) (forall (($generated@@146 T@U) ) (!  (=> ($generated@@26 $generated@@146 $generated@@142) ($generated@@60 $generated@@146 $generated@@143))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@141) $generated@@146 $generated@@143))
))))) (= ($generated@@25 ($generated@@59 $generated@@141) ($generated@@74 $generated@@109 $generated@@142) ($generated@@74 $generated@@55 $generated@@143))  (and (=> (< 0 ($generated@@48 $generated@@142)) (or (and ($generated@@42 ($generated@@74 $generated@@55 $generated@@143)) (= ($generated@@61 ($generated@@43 ($generated@@74 $generated@@55 $generated@@143))) ($generated@@61 0))) (exists (($generated@@147 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@147 $generated@@56) (and ($generated@@41 $generated@@143 ($generated@@62 ($generated@@62 $generated@@147))) ($generated@@25 ($generated@@59 $generated@@141) ($generated@@46 $generated@@142 ($generated@@47 1)) $generated@@147)))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@141) ($generated@@46 $generated@@142 ($generated@@47 1)) $generated@@147))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@147)))
)))) (=> (= ($generated@@61 0) ($generated@@48 $generated@@142)) (exists (($generated@@148 T@U) ) (!  (and ($generated@@26 $generated@@148 $generated@@142) ($generated@@25 ($generated@@59 $generated@@141) $generated@@148 $generated@@143))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@141) $generated@@148 $generated@@143))
)))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@59 $generated@@141) ($generated@@74 $generated@@109 $generated@@142) ($generated@@74 $generated@@55 $generated@@143)))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@149 $generated@@159 $generated@@160 $generated@@161 ($generated@@155 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@164 $generated@@165) $generated@@162)
 :weight 0
)) (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@171 $generated@@173) (= ($generated@@149 $generated@@166 $generated@@167 $generated@@168 ($generated@@155 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@149 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or (= $generated@@181 $generated@@183) (= ($generated@@149 $generated@@175 $generated@@176 $generated@@177 ($generated@@155 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@149 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))) (= ($generated@@8 $generated@@150) 5)) (= ($generated@@8 $generated@@151) 6)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@153 $generated@@184 $generated@@185 ($generated@@156 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@186) $generated@@188) $generated@@186)
 :weight 0
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@193 $generated@@194) (= ($generated@@153 $generated@@189 $generated@@190 ($generated@@156 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@191) $generated@@194) ($generated@@153 $generated@@189 $generated@@190 $generated@@192 $generated@@194)))
 :weight 0
))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@8 ($generated@@154 $generated@@195 $generated@@196)) 7))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@157 ($generated@@154 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@154 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@158 ($generated@@154 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@154 $generated@@199 $generated@@200))
))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 Bool) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@13 ($generated@@149 $generated@@150 $generated@@151 $generated@@9 ($generated@@152 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@205 $generated@@206))  (=> (and (or (not (= $generated@@205 $generated@@201)) (not true)) ($generated@@13 ($generated@@80 $generated@@9 ($generated@@153 $generated@@151 $generated@@109 ($generated@@153 $generated@@150 ($generated@@154 $generated@@151 $generated@@109) $generated@@202 $generated@@205) $generated@@203)))) $generated@@204))
 :pattern ( ($generated@@149 $generated@@150 $generated@@151 $generated@@9 ($generated@@152 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@205 $generated@@206))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@207 T@U) ) (!  (=> (or ($generated@@64 ($generated@@74 $generated@@55 $generated@@207)) (and (< 1 $generated@@24) ($generated@@54 $generated@@55 $generated@@207 $generated@@56))) (= ($generated@@62 ($generated@@74 $generated@@55 $generated@@207)) (ite ($generated@@42 ($generated@@74 $generated@@55 $generated@@207)) (let (($generated@@208 ($generated@@61 ($generated@@43 ($generated@@74 $generated@@55 $generated@@207)))))
($generated@@74 $generated@@55 ($generated@@92 ($generated@@61 (+ $generated@@208 1))))) $generated@@53)))
 :weight 3
 :pattern ( ($generated@@62 ($generated@@74 $generated@@55 $generated@@207)))
))))
(assert (forall (($generated@@209 T@U) ) (!  (=> ($generated@@104 $generated@@209) (= $generated@@209 ($generated@@47 ($generated@@48 $generated@@209))))
 :pattern ( ($generated@@48 $generated@@209))
 :pattern ( ($generated@@104 $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and ($generated@@210 $generated@@212) ($generated@@54 $generated@@55 $generated@@211 $generated@@56)) ($generated@@37 $generated@@55 $generated@@211 $generated@@56 $generated@@212))
 :pattern ( ($generated@@37 $generated@@55 $generated@@211 $generated@@56 $generated@@212))
)))
(assert (= ($generated@@33 $generated@@38) $generated@@2))
(assert (= ($generated@@213 $generated@@38) $generated@@6))
(assert (= ($generated@@33 $generated@@56) $generated@@3))
(assert (= ($generated@@213 $generated@@56) $generated@@7))
(assert (= $generated@@53 ($generated@@74 $generated@@55 $generated@@53)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and ($generated@@104 $generated@@215) (<= ($generated@@48 $generated@@215) ($generated@@48 $generated@@214))) (or (and (= $generated@@215 ($generated@@47 0)) (= ($generated@@46 $generated@@214 $generated@@215) $generated@@214)) (and (or (not (= $generated@@215 ($generated@@47 0))) (not true)) ($generated@@27 ($generated@@46 $generated@@214 $generated@@215) $generated@@214))))
 :pattern ( ($generated@@46 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and ($generated@@210 $generated@@217) (and ($generated@@42 $generated@@216) ($generated@@37 $generated@@55 $generated@@216 $generated@@56 $generated@@217))) ($generated@@37 $generated@@10 ($generated@@14 ($generated@@43 $generated@@216)) $generated@@38 $generated@@217))
 :pattern ( ($generated@@37 $generated@@10 ($generated@@14 ($generated@@43 $generated@@216)) $generated@@38 $generated@@217))
)))
(assert (forall (($generated@@218 Int) ) (! (= ($generated@@81 $generated@@10 ($generated@@14 ($generated@@61 $generated@@218))) ($generated@@74 $generated@@109 ($generated@@81 $generated@@10 ($generated@@14 $generated@@218))))
 :pattern ( ($generated@@81 $generated@@10 ($generated@@14 ($generated@@61 $generated@@218))))
)))
(assert (forall (($generated@@219 Int) ) (! (= ($generated@@92 ($generated@@61 $generated@@219)) ($generated@@74 $generated@@55 ($generated@@92 $generated@@219)))
 :pattern ( ($generated@@92 ($generated@@61 $generated@@219)))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@T) ) (! (= ($generated@@81 $generated@@221 ($generated@@74 $generated@@221 $generated@@220)) ($generated@@74 $generated@@109 ($generated@@81 $generated@@221 $generated@@220)))
 :pattern ( ($generated@@81 $generated@@221 ($generated@@74 $generated@@221 $generated@@220)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! ($generated@@37 $generated@@9 $generated@@223 $generated $generated@@222)
 :pattern ( ($generated@@37 $generated@@9 $generated@@223 $generated $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ) (! ($generated@@54 $generated@@9 $generated@@224 $generated)
 :pattern ( ($generated@@54 $generated@@9 $generated@@224 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@232 true))
(let (($generated@@233  (=> (and (not ($generated@@41 $generated@@225 ($generated@@62 ($generated@@62 $generated@@226)))) (= (ControlFlow 0 6) 2)) $generated@@232)))
(let (($generated@@234  (=> (and (and ($generated@@41 $generated@@225 ($generated@@62 ($generated@@62 $generated@@226))) ($generated@@37 $generated@@55 $generated@@226 $generated@@56 $generated@@227)) (and ($generated@@130 $generated@@226) (= (ControlFlow 0 5) 2))) $generated@@232)))
(let (($generated@@235  (=> (and (and (and ($generated@@54 $generated@@55 $generated@@226 $generated@@56) ($generated@@37 $generated@@55 $generated@@226 $generated@@56 $generated@@227)) ($generated@@37 $generated@@55 $generated@@226 $generated@@56 $generated@@227)) (and (and ($generated@@64 $generated@@226) (= $generated@@228 ($generated@@62 $generated@@226))) (and ($generated@@37 $generated@@55 $generated@@228 $generated@@56 $generated@@227) ($generated@@64 ($generated@@62 $generated@@226))))) (and (=> (= (ControlFlow 0 7) 5) $generated@@234) (=> (= (ControlFlow 0 7) 6) $generated@@233)))))
(let (($generated@@236  (=> (and (not (and ($generated@@54 $generated@@55 $generated@@226 $generated@@56) ($generated@@37 $generated@@55 $generated@@226 $generated@@56 $generated@@227))) (= (ControlFlow 0 4) 2)) $generated@@232)))
(let (($generated@@237  (=> (not (and ($generated@@42 $generated@@225) (= ($generated@@43 $generated@@225) ($generated@@61 0)))) (and (=> (= (ControlFlow 0 8) 7) $generated@@235) (=> (= (ControlFlow 0 8) 4) $generated@@236)))))
(let (($generated@@238  (=> (and (and ($generated@@42 $generated@@225) (= ($generated@@43 $generated@@225) ($generated@@61 0))) (= (ControlFlow 0 3) 2)) $generated@@232)))
(let (($generated@@239  (=> (not ($generated@@42 $generated@@225)) (and (=> (= (ControlFlow 0 11) 8) $generated@@237) (=> (= (ControlFlow 0 11) 3) $generated@@238)))))
(let (($generated@@240  (=> ($generated@@42 $generated@@225) (and (=> (= (ControlFlow 0 9) (- 0 10)) ($generated@@42 $generated@@225)) (=> ($generated@@42 $generated@@225) (and (=> (= (ControlFlow 0 9) 8) $generated@@237) (=> (= (ControlFlow 0 9) 3) $generated@@238)))))))
(let (($generated@@241 true))
(let (($generated@@242  (=> (= $generated@@229 ($generated@@152 $generated@@230 $generated@@227 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 12) 1) $generated@@241) (=> (= (ControlFlow 0 12) 9) $generated@@240)) (=> (= (ControlFlow 0 12) 11) $generated@@239)))))
(let (($generated@@243  (=> (and (and (and ($generated@@210 $generated@@227) ($generated@@231 $generated@@227)) ($generated@@54 $generated@@55 $generated@@225 $generated@@56)) (and (= 2 $generated@@24) (= (ControlFlow 0 13) 12))) $generated@@242)))
$generated@@243)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
