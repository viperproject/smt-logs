(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U T@U T@U) Bool)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@35 (Int) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@40 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@54 (Int) Int)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@65 (Int T@U) T@U)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@107 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@T T@T) T@T)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@T) T@T)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@162 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@24) $generated@@25 $generated@@26) (= $generated@@25 $generated@@26))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@24) $generated@@25 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@29 $generated@@30)) ($generated@@27 $generated@@28 $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@29 $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@33 T@U) ) (!  (=> ($generated@@31 $generated@@33) ($generated@@32 $generated@@33))
 :pattern ( ($generated@@31 $generated@@33))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 Int) ($generated@@39 Int) ) (!  (=> (and (and (<= 0 $generated@@38) (<= 0 $generated@@39)) (<= (+ $generated@@38 $generated@@39) ($generated@@36 $generated@@37))) (= ($generated@@34 ($generated@@34 $generated@@37 ($generated@@35 $generated@@38)) ($generated@@35 $generated@@39)) ($generated@@34 $generated@@37 ($generated@@35 (+ $generated@@38 $generated@@39)))))
 :pattern ( ($generated@@34 ($generated@@34 $generated@@37 ($generated@@35 $generated@@38)) ($generated@@35 $generated@@39)))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (forall (($generated@@44 Int) ) (!  (=> (<= 0 $generated@@44) ($generated@@40 ($generated@@35 $generated@@44) ($generated@@23 $generated@@41) $generated@@42 $generated@@43))
 :pattern ( ($generated@@40 ($generated@@35 $generated@@44) ($generated@@23 $generated@@41) $generated@@42 $generated@@43))
)) ($generated@@22 ($generated@@23 $generated@@41) $generated@@42 $generated@@43))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@41) $generated@@42 $generated@@43))
)))
(assert (= ($generated@@5 $generated@@46) 3))
(assert (forall (($generated@@48 T@U) ) (!  (=> ($generated@@45 $generated@@46 $generated@@48 $generated@@47) ($generated@@32 $generated@@48))
 :pattern ( ($generated@@32 $generated@@48) ($generated@@45 $generated@@46 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (and ($generated@@27 $generated@@49 $generated@@53) ($generated@@40 $generated@@53 ($generated@@23 $generated@@50) $generated@@51 $generated@@52)) ($generated@@40 $generated@@49 ($generated@@23 $generated@@50) $generated@@51 $generated@@52))
 :pattern ( ($generated@@40 $generated@@49 ($generated@@23 $generated@@50) $generated@@51 $generated@@52) ($generated@@40 $generated@@53 ($generated@@23 $generated@@50) $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@55 Int) ) (! (= ($generated@@54 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 $generated@@57) $generated@@57)
 :pattern ( ($generated@@56 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@32 $generated@@60) (= ($generated@@59 $generated@@60) $generated@@3))
 :pattern ( ($generated@@32 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 ($generated@@61 $generated@@64 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@61 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@32 $generated@@66) (exists (($generated@@67 Int) ($generated@@68 T@U) ) (= $generated@@66 ($generated@@65 $generated@@67 $generated@@68))))
 :pattern ( ($generated@@32 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or (not (= $generated@@69 ($generated@@35 0))) (not true)) (= ($generated@@40 $generated@@69 ($generated@@23 $generated@@70) $generated@@71 $generated@@72) ($generated@@40 $generated@@69 $generated@@70 $generated@@71 $generated@@72)))
 :pattern ( ($generated@@40 $generated@@69 ($generated@@23 $generated@@70) $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@73) $generated@@74 $generated@@75) ($generated@@22 $generated@@73 $generated@@74 $generated@@75))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@73) $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (and ($generated@@76 $generated@@78) (<= ($generated@@36 $generated@@78) ($generated@@36 $generated@@77))) (and (= ($generated@@76 ($generated@@34 $generated@@77 $generated@@78)) ($generated@@76 $generated@@77)) (= ($generated@@36 ($generated@@34 $generated@@77 $generated@@78)) (- ($generated@@36 $generated@@77) ($generated@@36 $generated@@78)))))
 :pattern ( ($generated@@34 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@79 Int) ) (!  (=> (<= 0 $generated@@79) (and ($generated@@76 ($generated@@35 $generated@@79)) (= ($generated@@36 ($generated@@35 $generated@@79)) $generated@@79)))
 :pattern ( ($generated@@35 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@80) $generated@@81 $generated@@82) (forall (($generated@@83 T@U) ) (! ($generated@@40 $generated@@83 ($generated@@23 $generated@@80) $generated@@81 $generated@@82)
 :pattern ( ($generated@@40 $generated@@83 ($generated@@23 $generated@@80) $generated@@81 $generated@@82))
)))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@80) $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (or (or ($generated@@27 $generated@@84 $generated@@85) (= $generated@@84 $generated@@85)) ($generated@@27 $generated@@85 $generated@@84))
 :pattern ( ($generated@@27 $generated@@84 $generated@@85) ($generated@@27 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (! (<= 0 ($generated@@36 $generated@@86))
 :pattern ( ($generated@@36 $generated@@86))
)))
(assert (forall (($generated@@87 Int) ($generated@@88 T@U) ) (! (= ($generated@@59 ($generated@@65 $generated@@87 $generated@@88)) $generated@@3)
 :pattern ( ($generated@@65 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 Int) ($generated@@91 T@U) ) (! (= ($generated@@89 ($generated@@65 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@65 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 Int) ($generated@@94 T@U) ) (! (= ($generated@@92 ($generated@@65 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@65 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@61 $generated@@96 ($generated@@62 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@62 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (and (and (and (=> ($generated@@27 $generated@@97 $generated@@98) (or (not (= $generated@@97 $generated@@98)) (not true))) (=> (and ($generated@@76 $generated@@97) (not ($generated@@76 $generated@@98))) ($generated@@27 $generated@@97 $generated@@98))) (=> (and ($generated@@76 $generated@@97) ($generated@@76 $generated@@98)) (= ($generated@@27 $generated@@97 $generated@@98) (< ($generated@@36 $generated@@97) ($generated@@36 $generated@@98))))) (=> (and ($generated@@27 $generated@@97 $generated@@98) ($generated@@76 $generated@@98)) ($generated@@76 $generated@@97)))
 :pattern ( ($generated@@27 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (and ($generated@@45 $generated@@46 $generated@@101 $generated@@47) ($generated@@45 $generated@@46 $generated@@102 $generated@@47)) (= ($generated@@40 $generated@@99 ($generated@@23 $generated@@100) $generated@@101 $generated@@102)  (and (=> (< 0 ($generated@@36 $generated@@99)) (and (and ($generated@@32 $generated@@101) ($generated@@32 $generated@@102)) (=> (and ($generated@@32 $generated@@101) ($generated@@32 $generated@@102)) (and (= ($generated@@89 $generated@@101) ($generated@@89 $generated@@102)) ($generated@@40 ($generated@@34 $generated@@99 ($generated@@35 1)) $generated@@100 ($generated@@92 $generated@@101) ($generated@@92 $generated@@102)))))) (=> (and (or (not (= $generated@@99 ($generated@@35 0))) (not true)) (= ($generated@@36 $generated@@99) 0)) ($generated@@22 $generated@@100 $generated@@101 $generated@@102)))))
 :pattern ( ($generated@@40 $generated@@99 ($generated@@23 $generated@@100) $generated@@101 $generated@@102))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@103 $generated@@114 $generated@@115 $generated@@116 ($generated@@110 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@119 $generated@@120) $generated@@117)
 :weight 0
)) (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@103 $generated@@121 $generated@@122 $generated@@123 ($generated@@110 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@103 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@103 $generated@@130 $generated@@131 $generated@@132 ($generated@@110 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)))) (= ($generated@@5 $generated@@104) 4)) (= ($generated@@5 $generated@@105) 5)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@107 $generated@@139 $generated@@140 ($generated@@111 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@141) $generated@@143) $generated@@141)
 :weight 0
))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@148 $generated@@149) (= ($generated@@107 $generated@@144 $generated@@145 ($generated@@111 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@107 $generated@@144 $generated@@145 $generated@@147 $generated@@149)))
 :weight 0
))) (= ($generated@@5 $generated@@108) 6)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (= ($generated@@5 ($generated@@109 $generated@@150 $generated@@151)) 7))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@112 ($generated@@109 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@109 $generated@@152 $generated@@153))
))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@113 ($generated@@109 $generated@@154 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@109 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Bool) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@10 ($generated@@103 $generated@@104 $generated@@105 $generated@@6 ($generated@@106 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@156)) (not true)) ($generated@@10 ($generated@@61 $generated@@6 ($generated@@107 $generated@@105 $generated@@108 ($generated@@107 $generated@@104 ($generated@@109 $generated@@105 $generated@@108) $generated@@157 $generated@@160) $generated@@158)))) $generated@@159))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105 $generated@@6 ($generated@@106 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@163 $generated@@165) (and ($generated@@32 $generated@@164) ($generated@@162 $generated@@46 $generated@@164 $generated@@47 $generated@@165))) ($generated@@162 $generated@@7 ($generated@@11 ($generated@@89 $generated@@164)) $generated $generated@@165))
 :pattern ( ($generated@@162 $generated@@7 ($generated@@11 ($generated@@89 $generated@@164)) $generated $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> ($generated@@76 $generated@@166) (= $generated@@166 ($generated@@35 ($generated@@36 $generated@@166))))
 :pattern ( ($generated@@36 $generated@@166))
 :pattern ( ($generated@@76 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and ($generated@@163 $generated@@168) ($generated@@45 $generated@@46 $generated@@167 $generated@@47)) ($generated@@162 $generated@@46 $generated@@167 $generated@@47 $generated@@168))
 :pattern ( ($generated@@162 $generated@@46 $generated@@167 $generated@@47 $generated@@168))
)))
(assert (= ($generated@@21 $generated@@47) $generated@@2))
(assert (= ($generated@@169 $generated@@47) $generated@@4))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and ($generated@@76 $generated@@171) (<= ($generated@@36 $generated@@171) ($generated@@36 $generated@@170))) (or (and (= $generated@@171 ($generated@@35 0)) (= ($generated@@34 $generated@@170 $generated@@171) $generated@@170)) (and (or (not (= $generated@@171 ($generated@@35 0))) (not true)) ($generated@@27 ($generated@@34 $generated@@170 $generated@@171) $generated@@170))))
 :pattern ( ($generated@@34 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@163 $generated@@173) (and ($generated@@32 $generated@@172) ($generated@@162 $generated@@46 $generated@@172 $generated@@47 $generated@@173))) ($generated@@162 $generated@@46 ($generated@@92 $generated@@172) $generated@@47 $generated@@173))
 :pattern ( ($generated@@162 $generated@@46 ($generated@@92 $generated@@172) $generated@@47 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@62 $generated@@7 ($generated@@11 ($generated@@54 $generated@@174))) ($generated@@56 $generated@@108 ($generated@@62 $generated@@7 ($generated@@11 $generated@@174))))
 :pattern ( ($generated@@62 $generated@@7 ($generated@@11 ($generated@@54 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@62 $generated@@176 ($generated@@56 $generated@@176 $generated@@175)) ($generated@@56 $generated@@108 ($generated@@62 $generated@@176 $generated@@175)))
 :pattern ( ($generated@@62 $generated@@176 ($generated@@56 $generated@@176 $generated@@175)))
)))
(assert (forall (($generated@@177 Int) ($generated@@178 T@U) ) (! (= ($generated@@45 $generated@@46 ($generated@@65 $generated@@177 $generated@@178) $generated@@47)  (and ($generated@@45 $generated@@7 ($generated@@11 $generated@@177) $generated) ($generated@@45 $generated@@46 $generated@@178 $generated@@47)))
 :pattern ( ($generated@@45 $generated@@46 ($generated@@65 $generated@@177 $generated@@178) $generated@@47))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! ($generated@@162 $generated@@7 $generated@@180 $generated $generated@@179)
 :pattern ( ($generated@@162 $generated@@7 $generated@@180 $generated $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and ($generated@@45 $generated@@46 $generated@@182 $generated@@47) ($generated@@45 $generated@@46 $generated@@183 $generated@@47)) (= ($generated@@22 ($generated@@23 $generated@@181) $generated@@182 $generated@@183)  (and (and ($generated@@32 $generated@@182) ($generated@@32 $generated@@183)) (=> (and ($generated@@32 $generated@@182) ($generated@@32 $generated@@183)) (and (= ($generated@@89 $generated@@182) ($generated@@89 $generated@@183)) ($generated@@22 $generated@@181 ($generated@@92 $generated@@182) ($generated@@92 $generated@@183)))))))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@181) $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (= $generated@@186 $generated@@187) ($generated@@40 $generated@@184 ($generated@@23 $generated@@185) $generated@@186 $generated@@187))
 :pattern ( ($generated@@40 $generated@@184 ($generated@@23 $generated@@185) $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ) (! ($generated@@45 $generated@@7 $generated@@188 $generated)
 :pattern ( ($generated@@45 $generated@@7 $generated@@188 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@200 true))
(let (($generated@@201  (=> (and (not ($generated@@40 ($generated@@35 $generated@@189) ($generated@@23 ($generated@@23 $generated@@190)) $generated@@191 $generated@@192)) (= (ControlFlow 0 4) 1)) $generated@@200)))
(let (($generated@@202  (=> ($generated@@40 ($generated@@35 $generated@@189) ($generated@@23 ($generated@@23 $generated@@190)) $generated@@191 $generated@@192) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= 0 $generated@@189)) (=> (<= 0 $generated@@189) (=> (= (ControlFlow 0 2) 1) $generated@@200))))))
(let (($generated@@203  (=> (= $generated@@193 ($generated@@106 $generated@@194 $generated@@195 $generated@@1 false)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (<= 0 $generated@@189)) (=> (<= 0 $generated@@189) (=> ($generated@@40 ($generated@@35 $generated@@189) ($generated@@23 ($generated@@23 $generated@@190)) $generated@@192 $generated@@196) (=> (and (and ($generated@@163 $generated@@197) ($generated@@198 $generated@@197)) (= $generated@@195 $generated@@197)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (<= 0 $generated@@189)) (=> (<= 0 $generated@@189) (and (=> (= (ControlFlow 0 5) 2) $generated@@202) (=> (= (ControlFlow 0 5) 4) $generated@@201)))))))))))
(let (($generated@@204  (=> (and ($generated@@163 $generated@@195) ($generated@@198 $generated@@195)) (=> (and (and (and ($generated@@45 $generated@@46 $generated@@192 $generated@@47) ($generated@@162 $generated@@46 $generated@@192 $generated@@47 $generated@@195)) ($generated@@31 $generated@@192)) (and (and ($generated@@45 $generated@@46 $generated@@196 $generated@@47) ($generated@@162 $generated@@46 $generated@@196 $generated@@47 $generated@@195)) ($generated@@31 $generated@@196))) (=> (and (and (and (and ($generated@@45 $generated@@46 $generated@@191 $generated@@47) ($generated@@162 $generated@@46 $generated@@191 $generated@@47 $generated@@195)) ($generated@@31 $generated@@191)) (<= ($generated@@54 0) $generated@@189)) (and (= 1 $generated@@199) (= (ControlFlow 0 8) 5))) $generated@@203)))))
$generated@@204))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
