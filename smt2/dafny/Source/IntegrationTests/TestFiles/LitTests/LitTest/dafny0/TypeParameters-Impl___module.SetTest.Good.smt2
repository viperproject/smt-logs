(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@46 (T@T T@U T@U) Bool)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@57 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@T T@T) T@T)
(declare-fun $generated@@66 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@92 (Int) Int)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) Bool)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@106 (T@U T@U) Bool)
(declare-fun $generated@@110 (T@U T@U T@U) Bool)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@153 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ) (! ($generated@@24 ($generated@@23 $generated@@25 $generated@@26) $generated@@26)
 :pattern ( ($generated@@23 $generated@@25 $generated@@26))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> ($generated@@24 $generated@@27 $generated@@29) ($generated@@24 ($generated@@23 $generated@@27 $generated@@28) $generated@@29))
 :pattern ( ($generated@@23 $generated@@27 $generated@@28) ($generated@@24 $generated@@27 $generated@@29))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@24 $generated@@31 $generated@@33) ($generated@@24 ($generated@@30 $generated@@31 $generated@@32) $generated@@33))
 :pattern ( ($generated@@30 $generated@@31 $generated@@32) ($generated@@24 $generated@@31 $generated@@33))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> ($generated@@24 $generated@@35 $generated@@36) ($generated@@24 ($generated@@30 $generated@@34 $generated@@35) $generated@@36))
 :pattern ( ($generated@@30 $generated@@34 $generated@@35) ($generated@@24 $generated@@35 $generated@@36))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@24 ($generated@@23 $generated@@37 $generated@@38) $generated@@39)  (or (= $generated@@39 $generated@@38) ($generated@@24 $generated@@37 $generated@@39)))
 :pattern ( ($generated@@24 ($generated@@23 $generated@@37 $generated@@38) $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@24 $generated@@42 $generated@@43) (not ($generated@@24 ($generated@@40 $generated@@41 $generated@@42) $generated@@43)))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42) ($generated@@24 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ) (!  (not ($generated@@24 $generated@@44 $generated@@45))
 :pattern ( ($generated@@24 $generated@@44 $generated@@45))
)))
(assert (= ($generated@@6 $generated@@47) 3))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@51 $generated@@48)  (or (= $generated@@51 $generated@@49) (= ($generated@@50 $generated@@51) $generated@@48)))
 :pattern ( ($generated@@46 $generated@@47 $generated@@51 $generated@@48))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@30 ($generated@@30 $generated@@52 $generated@@53) $generated@@53) ($generated@@30 $generated@@52 $generated@@53))
 :pattern ( ($generated@@30 ($generated@@30 $generated@@52 $generated@@53) $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@24 ($generated@@40 $generated@@54 $generated@@55) $generated@@56)  (and ($generated@@24 $generated@@54 $generated@@56) (not ($generated@@24 $generated@@55 $generated@@56))))
 :pattern ( ($generated@@24 ($generated@@40 $generated@@54 $generated@@55) $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@57 $generated@@47 $generated@@59 $generated@@58 $generated@@60) ($generated@@57 $generated@@47 $generated@@59 $generated@@48 $generated@@60))
 :pattern ( ($generated@@57 $generated@@47 $generated@@59 $generated@@58 $generated@@60))
 :pattern ( ($generated@@57 $generated@@47 $generated@@59 $generated@@48 $generated@@60))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@62 $generated@@69 $generated@@70 ($generated@@66 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@73) $generated@@71)
 :weight 0
)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (or (= $generated@@78 $generated@@79) (= ($generated@@62 $generated@@74 $generated@@75 ($generated@@66 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@76) $generated@@79) ($generated@@62 $generated@@74 $generated@@75 $generated@@77 $generated@@79)))
 :weight 0
))) (= ($generated@@6 $generated@@63) 4)) (= ($generated@@6 $generated@@64) 5)) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@6 ($generated@@65 $generated@@80 $generated@@81)) 6))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@67 ($generated@@65 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@65 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@68 ($generated@@65 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@65 $generated@@84 $generated@@85))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@57 $generated@@47 $generated@@86 $generated@@48 $generated@@87)  (or (= $generated@@86 $generated@@49) ($generated@@11 ($generated@@61 $generated@@7 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@47 ($generated@@65 $generated@@63 $generated@@64) $generated@@87 $generated@@86) $generated@@2)))))
 :pattern ( ($generated@@57 $generated@@47 $generated@@86 $generated@@48 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@88 $generated@@89 $generated@@90) (forall (($generated@@91 T@U) ) (!  (=> ($generated@@11 ($generated@@61 $generated@@7 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@47 ($generated@@65 $generated@@63 $generated@@64) $generated@@89 $generated@@91) $generated@@2))) ($generated@@11 ($generated@@61 $generated@@7 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@47 ($generated@@65 $generated@@63 $generated@@64) $generated@@90 $generated@@91) $generated@@2))))
 :pattern ( ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@47 ($generated@@65 $generated@@63 $generated@@64) $generated@@90 $generated@@91) $generated@@2))
)))
 :pattern ( ($generated@@88 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@93 Int) ) (! (= ($generated@@92 $generated@@93) $generated@@93)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 $generated@@95) $generated@@95)
 :pattern ( ($generated@@94 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 ($generated@@61 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@61 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@100 $generated@@101 $generated@@102) (forall (($generated@@103 T@U) ) (!  (or (not ($generated@@24 $generated@@101 $generated@@103)) (not ($generated@@24 $generated@@102 $generated@@103)))
 :pattern ( ($generated@@24 $generated@@101 $generated@@103))
 :pattern ( ($generated@@24 $generated@@102 $generated@@103))
)))
 :pattern ( ($generated@@100 $generated@@101 $generated@@102))
)))
(assert (= ($generated@@6 $generated@@104) 7))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@46 $generated@@104 $generated@@107 ($generated@@105 $generated@@108)) (forall (($generated@@109 T@U) ) (!  (=> ($generated@@24 $generated@@107 $generated@@109) ($generated@@106 $generated@@109 $generated@@108))
 :pattern ( ($generated@@24 $generated@@107 $generated@@109))
)))
 :pattern ( ($generated@@46 $generated@@104 $generated@@107 ($generated@@105 $generated@@108)))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@110 ($generated@@97 $generated@@114 $generated@@111) $generated@@112 $generated@@113) ($generated@@57 $generated@@114 $generated@@111 $generated@@112 $generated@@113))
 :pattern ( ($generated@@110 ($generated@@97 $generated@@114 $generated@@111) $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@88 $generated@@115 $generated@@116) (=> ($generated@@110 $generated@@117 $generated@@118 $generated@@115) ($generated@@110 $generated@@117 $generated@@118 $generated@@116)))
 :pattern ( ($generated@@88 $generated@@115 $generated@@116) ($generated@@110 $generated@@117 $generated@@118 $generated@@115))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (!  (=> ($generated@@88 $generated@@119 $generated@@120) (=> ($generated@@57 $generated@@123 $generated@@121 $generated@@122 $generated@@119) ($generated@@57 $generated@@123 $generated@@121 $generated@@122 $generated@@120)))
 :pattern ( ($generated@@88 $generated@@119 $generated@@120) ($generated@@57 $generated@@123 $generated@@121 $generated@@122 $generated@@119))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@106 $generated@@124 $generated@@48) (and (= ($generated@@97 $generated@@47 ($generated@@61 $generated@@47 $generated@@124)) $generated@@124) ($generated@@46 $generated@@47 ($generated@@61 $generated@@47 $generated@@124) $generated@@48)))
 :pattern ( ($generated@@106 $generated@@124 $generated@@48))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@106 $generated@@125 $generated@@58) (and (= ($generated@@97 $generated@@47 ($generated@@61 $generated@@47 $generated@@125)) $generated@@125) ($generated@@46 $generated@@47 ($generated@@61 $generated@@47 $generated@@125) $generated@@58)))
 :pattern ( ($generated@@106 $generated@@125 $generated@@58))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@126 $generated@@58)  (and ($generated@@46 $generated@@47 $generated@@126 $generated@@48) (or (not (= $generated@@126 $generated@@49)) (not true))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@126 $generated@@58))
 :pattern ( ($generated@@46 $generated@@47 $generated@@126 $generated@@48))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@24 ($generated@@30 $generated@@127 $generated@@128) $generated@@129)  (or ($generated@@24 $generated@@127 $generated@@129) ($generated@@24 $generated@@128 $generated@@129)))
 :pattern ( ($generated@@24 ($generated@@30 $generated@@127 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> ($generated@@100 $generated@@130 $generated@@131) (and (= ($generated@@40 ($generated@@30 $generated@@130 $generated@@131) $generated@@130) $generated@@131) (= ($generated@@40 ($generated@@30 $generated@@130 $generated@@131) $generated@@131) $generated@@130)))
 :pattern ( ($generated@@30 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> ($generated@@132 $generated@@133 $generated@@134) (= $generated@@133 $generated@@134))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (or (not (= $generated@@135 $generated@@137)) (not true)) (=> (and ($generated@@88 $generated@@135 $generated@@136) ($generated@@88 $generated@@136 $generated@@137)) ($generated@@88 $generated@@135 $generated@@137)))
 :pattern ( ($generated@@88 $generated@@135 $generated@@136) ($generated@@88 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@106 $generated@@138 $generated) (and (= ($generated@@97 $generated@@8 ($generated@@61 $generated@@8 $generated@@138)) $generated@@138) ($generated@@46 $generated@@8 ($generated@@61 $generated@@8 $generated@@138) $generated)))
 :pattern ( ($generated@@106 $generated@@138 $generated))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@106 ($generated@@97 $generated@@141 $generated@@139) $generated@@140) ($generated@@46 $generated@@141 $generated@@139 $generated@@140))
 :pattern ( ($generated@@106 ($generated@@97 $generated@@141 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@57 $generated@@104 $generated@@142 ($generated@@105 $generated@@143) $generated@@144) (forall (($generated@@145 T@U) ) (!  (=> ($generated@@24 $generated@@142 $generated@@145) ($generated@@110 $generated@@145 $generated@@143 $generated@@144))
 :pattern ( ($generated@@24 $generated@@142 $generated@@145))
)))
 :pattern ( ($generated@@57 $generated@@104 $generated@@142 ($generated@@105 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@105 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@105 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@22 ($generated@@105 $generated@@148)) $generated@@1)
 :pattern ( ($generated@@105 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@61 $generated@@150 ($generated@@97 $generated@@150 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@97 $generated@@150 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@30 $generated@@151 ($generated@@30 $generated@@151 $generated@@152)) ($generated@@30 $generated@@151 $generated@@152))
 :pattern ( ($generated@@30 $generated@@151 ($generated@@30 $generated@@151 $generated@@152)))
)))
(assert  (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@153 $generated@@156 $generated@@157 $generated@@158 ($generated@@155 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@161 $generated@@162) $generated@@159)
 :weight 0
)) (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@153 $generated@@163 $generated@@164 $generated@@165 ($generated@@155 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@153 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@153 $generated@@172 $generated@@173 $generated@@174 ($generated@@155 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@153 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@11 ($generated@@153 $generated@@47 $generated@@63 $generated@@7 ($generated@@154 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (or (not (= $generated@@185 $generated@@181)) (not true)) ($generated@@11 ($generated@@61 $generated@@7 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@47 ($generated@@65 $generated@@63 $generated@@64) $generated@@182 $generated@@185) $generated@@183)))) $generated@@184))
 :pattern ( ($generated@@153 $generated@@47 $generated@@63 $generated@@7 ($generated@@154 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@106 $generated@@187 ($generated@@105 $generated@@188)) (and (= ($generated@@97 $generated@@104 ($generated@@61 $generated@@104 $generated@@187)) $generated@@187) ($generated@@46 $generated@@104 ($generated@@61 $generated@@104 $generated@@187) ($generated@@105 $generated@@188))))
 :pattern ( ($generated@@106 $generated@@187 ($generated@@105 $generated@@188)))
)))
(assert (= ($generated@@22 $generated@@48) $generated@@3))
(assert (= ($generated@@189 $generated@@48) $generated@@5))
(assert (= ($generated@@22 $generated@@58) $generated@@4))
(assert (= ($generated@@189 $generated@@58) $generated@@5))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@132 $generated@@190 $generated@@191) (forall (($generated@@192 T@U) ) (! (= ($generated@@24 $generated@@190 $generated@@192) ($generated@@24 $generated@@191 $generated@@192))
 :pattern ( ($generated@@24 $generated@@190 $generated@@192))
 :pattern ( ($generated@@24 $generated@@191 $generated@@192))
)))
 :pattern ( ($generated@@132 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@97 $generated@@8 ($generated@@12 ($generated@@92 $generated@@193))) ($generated@@94 $generated@@64 ($generated@@97 $generated@@8 ($generated@@12 $generated@@193))))
 :pattern ( ($generated@@97 $generated@@8 ($generated@@12 ($generated@@92 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@T) ) (! (= ($generated@@97 $generated@@195 ($generated@@94 $generated@@195 $generated@@194)) ($generated@@94 $generated@@64 ($generated@@97 $generated@@195 $generated@@194)))
 :pattern ( ($generated@@97 $generated@@195 ($generated@@94 $generated@@195 $generated@@194)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! ($generated@@57 $generated@@8 $generated@@197 $generated $generated@@196)
 :pattern ( ($generated@@57 $generated@@8 $generated@@197 $generated $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ) (! ($generated@@46 $generated@@8 $generated@@198 $generated)
 :pattern ( ($generated@@46 $generated@@8 $generated@@198 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 (T@U) Bool)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@219  (=> (and (= $generated@@199 ($generated@@200 $generated@@201)) (= $generated@@202 ($generated@@200 ($generated@@200 $generated@@201)))) (=> (and (and (and (and (= ($generated@@203 $generated@@201) $generated@@201) (= $generated@@204 ($generated@@154 $generated@@49 $generated@@205 $generated@@2 false))) (and (= $generated@@206 ($generated@@94 $generated@@104 ($generated@@23 ($generated@@23 ($generated@@23 $generated@@44 ($generated@@97 $generated@@8 ($generated@@12 ($generated@@92 2)))) ($generated@@97 $generated@@8 ($generated@@12 ($generated@@92 5)))) ($generated@@97 $generated@@8 ($generated@@12 ($generated@@92 3)))))) (= $generated@@207 ($generated@@92 7)))) (and (and ($generated@@46 $generated@@104 $generated@@208 ($generated@@105 $generated@@209)) ($generated@@57 $generated@@104 $generated@@208 ($generated@@105 $generated@@209) $generated@@205)) (= $generated@@210 ($generated@@97 $generated@@8 ($generated@@12 $generated@@207))))) (and (and (and ($generated@@211 $generated@@212) ($generated@@213 $generated@@212)) (and ($generated@@46 $generated@@104 $generated@@214 ($generated@@105 $generated)) ($generated@@57 $generated@@104 $generated@@214 ($generated@@105 $generated) $generated@@212))) (and (and ($generated@@132 $generated@@214 ($generated@@30 $generated@@206 ($generated@@23 $generated@@44 $generated@@210))) (forall (($generated@@220 T@U) ) (!  (=> (and (or (not (= $generated@@220 $generated@@49)) (not true)) ($generated@@11 ($generated@@61 $generated@@7 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@47 ($generated@@65 $generated@@63 $generated@@64) $generated@@205 $generated@@220) $generated@@2)))) (= ($generated@@62 $generated@@47 ($generated@@65 $generated@@63 $generated@@64) $generated@@212 $generated@@220) ($generated@@62 $generated@@47 ($generated@@65 $generated@@63 $generated@@64) $generated@@205 $generated@@220)))
 :pattern ( ($generated@@62 $generated@@47 ($generated@@65 $generated@@63 $generated@@64) $generated@@212 $generated@@220))
))) (and ($generated@@88 $generated@@205 $generated@@212) (= (ControlFlow 0 2) (- 0 1)))))) ($generated@@132 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 $generated@@44 ($generated@@97 $generated@@8 ($generated@@12 ($generated@@92 5)))) ($generated@@97 $generated@@8 ($generated@@12 ($generated@@92 7)))) ($generated@@97 $generated@@8 ($generated@@12 ($generated@@92 2)))) ($generated@@97 $generated@@8 ($generated@@12 ($generated@@92 3)))) $generated@@214)))))
(let (($generated@@221  (=> (and (and (and (and ($generated@@211 $generated@@205) ($generated@@213 $generated@@205)) (and (or (not (= $generated@@215 $generated@@49)) (not true)) (and ($generated@@46 $generated@@47 $generated@@215 $generated@@58) ($generated@@57 $generated@@47 $generated@@215 $generated@@58 $generated@@205)))) (and (and ($generated@@46 $generated@@104 $generated@@216 ($generated@@105 $generated)) ($generated@@57 $generated@@104 $generated@@216 ($generated@@105 $generated) $generated@@205)) true)) (and (and (and ($generated@@46 $generated@@104 $generated@@217 ($generated@@105 $generated)) ($generated@@57 $generated@@104 $generated@@217 ($generated@@105 $generated) $generated@@205)) true) (and (= 1 $generated@@218) (= (ControlFlow 0 3) 2)))) $generated@@219)))
$generated@@221)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
