(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@41 (Int) Int)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@59 () Int)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@63 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@64 (Int) Bool)
(declare-fun $generated@@65 (Int) Int)
(declare-fun $generated@@73 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@T) T@T)
(declare-fun $generated@@133 (T@T) T@T)
(declare-fun $generated@@182 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@1))
(assert (= ($generated@@26 $generated@@0) $generated@@2))
(assert (forall (($generated@@29 T@U) ) (!  (not ($generated@@27 $generated@@28 $generated@@29))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29))
)))
(assert (= ($generated@@10 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@35 $generated@@36)) (forall (($generated@@39 T@U) ) (!  (=> ($generated@@33 $generated@@39 $generated@@37) ($generated@@33 $generated@@39 $generated@@35))
 :pattern ( ($generated@@33 $generated@@39 $generated@@37))
 :pattern ( ($generated@@33 $generated@@39 $generated@@35))
))) (forall (($generated@@40 T@U) ) (!  (=> ($generated@@33 $generated@@40 $generated@@36) ($generated@@33 $generated@@40 $generated@@38))
 :pattern ( ($generated@@33 $generated@@40 $generated@@36))
 :pattern ( ($generated@@33 $generated@@40 $generated@@38))
))) ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@37 $generated@@38)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@35 $generated@@36)) ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@37 $generated@@38)))
)))
(assert (forall (($generated@@42 Int) ) (! (= ($generated@@41 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 $generated@@44) $generated@@44)
 :pattern ( ($generated@@43 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (and ($generated@@48 $generated@@52) (and ($generated@@33 $generated@@54 $generated@@50) ($generated@@30 $generated@@31 $generated@@53 ($generated@@32 $generated@@50 $generated@@51)))) (= ($generated@@49 ($generated@@46 $generated@@50 $generated@@51 $generated@@47 $generated@@53 $generated@@54) $generated@@28) ($generated@@49 ($generated@@46 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54) $generated@@28)))
 :pattern ( ($generated@@46 $generated@@50 $generated@@51 $generated@@47 $generated@@53 $generated@@54) ($generated@@48 $generated@@52))
 :pattern ( ($generated@@46 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 ($generated@@55 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@55 $generated@@58 $generated@@57))
)))
(assert ($generated@@48 $generated@@47))
(assert  (=> (<= 0 $generated@@59) (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@61 ($generated@@43 $generated@@31 $generated@@67)) (and (< 0 $generated@@59) (and ($generated@@48 $generated@@66) ($generated@@30 $generated@@31 $generated@@67 ($generated@@62 $generated@@0 $generated))))) (and (forall (($generated@@68 T@U) ) (!  (=> (<= ($generated@@41 0) ($generated@@17 $generated@@68)) (=> ($generated@@15 ($generated@@55 $generated@@11 ($generated@@63 $generated@@0 $generated $generated@@66 ($generated@@43 $generated@@31 $generated@@67) ($generated@@56 $generated@@12 $generated@@68)))) ($generated@@64 ($generated@@17 $generated@@68))))
 :pattern ( ($generated@@55 $generated@@11 ($generated@@63 $generated@@0 $generated $generated@@66 $generated@@67 ($generated@@56 $generated@@12 $generated@@68))))
)) (= ($generated@@60 ($generated@@43 $generated@@31 $generated@@67)) (forall (($generated@@69 Int) ) (!  (=> (and (<= ($generated@@41 0) $generated@@69) ($generated@@15 ($generated@@55 $generated@@11 ($generated@@63 $generated@@0 $generated $generated@@66 ($generated@@43 $generated@@31 $generated@@67) ($generated@@56 $generated@@12 ($generated@@16 $generated@@69)))))) (let (($generated@@70 ($generated@@65 $generated@@69)))
(<= ($generated@@41 0) $generated@@70)))
 :pattern ( ($generated@@55 $generated@@11 ($generated@@63 $generated@@0 $generated $generated@@66 $generated@@67 ($generated@@56 $generated@@12 ($generated@@16 $generated@@69)))))
)))))
 :weight 3
 :pattern ( ($generated@@60 ($generated@@43 $generated@@31 $generated@@67)) ($generated@@48 $generated@@66))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> ($generated@@49 $generated@@71 $generated@@72) (= $generated@@71 $generated@@72))
 :pattern ( ($generated@@49 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@74 ($generated@@32 $generated@@75 $generated@@76)) (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (and (and ($generated@@48 $generated@@77) ($generated@@33 $generated@@78 $generated@@75)) ($generated@@73 $generated@@75 $generated@@76 $generated@@77 $generated@@74 $generated@@78)) ($generated@@33 ($generated@@63 $generated@@75 $generated@@76 $generated@@77 $generated@@74 $generated@@78) $generated@@76))
 :pattern ( ($generated@@63 $generated@@75 $generated@@76 $generated@@77 $generated@@74 $generated@@78))
)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@74 ($generated@@32 $generated@@75 $generated@@76)))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@33 $generated@@79 $generated@@0) (and (= ($generated@@56 $generated@@12 ($generated@@55 $generated@@12 $generated@@79)) $generated@@79) ($generated@@30 $generated@@12 ($generated@@55 $generated@@12 $generated@@79) $generated@@0)))
 :pattern ( ($generated@@33 $generated@@79 $generated@@0))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@33 $generated@@80 $generated) (and (= ($generated@@56 $generated@@11 ($generated@@55 $generated@@11 $generated@@80)) $generated@@80) ($generated@@30 $generated@@11 ($generated@@55 $generated@@11 $generated@@80) $generated)))
 :pattern ( ($generated@@33 $generated@@80 $generated))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@33 ($generated@@56 $generated@@83 $generated@@81) $generated@@82) ($generated@@30 $generated@@83 $generated@@81 $generated@@82))
 :pattern ( ($generated@@33 ($generated@@56 $generated@@83 $generated@@81) $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@84 ($generated@@32 $generated@@85 $generated@@86)) $generated@@85)
 :pattern ( ($generated@@32 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@87 ($generated@@32 $generated@@88 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@32 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@91 ($generated@@90 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@90 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@94 ($generated@@90 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@90 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@97 ($generated@@62 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@62 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@100 ($generated@@62 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@62 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@55 $generated@@104 ($generated@@56 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@56 $generated@@104 $generated@@103))
)))
(assert (forall (($generated@@105 Int) ) (!  (=> ($generated@@64 $generated@@105) (<= $generated@@105 ($generated@@65 $generated@@105)))
 :pattern ( ($generated@@65 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@108 ($generated@@62 $generated@@106 $generated@@107))  (and ($generated@@30 $generated@@31 $generated@@108 ($generated@@90 $generated@@106 $generated@@107)) (forall (($generated@@109 T@U) )  (=> ($generated@@33 $generated@@109 $generated@@106) ($generated@@73 $generated@@106 $generated@@107 $generated@@47 $generated@@108 $generated@@109)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@108 ($generated@@62 $generated@@106 $generated@@107)))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@112 ($generated@@90 $generated@@110 $generated@@111))  (and ($generated@@30 $generated@@31 $generated@@112 ($generated@@32 $generated@@110 $generated@@111)) (forall (($generated@@113 T@U) )  (=> ($generated@@33 $generated@@113 $generated@@110) ($generated@@49 ($generated@@46 $generated@@110 $generated@@111 $generated@@47 $generated@@112 $generated@@113) $generated@@28)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@112 ($generated@@90 $generated@@110 $generated@@111)))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@33 $generated@@116 ($generated@@32 $generated@@114 $generated@@115)) (and (= ($generated@@56 $generated@@31 ($generated@@55 $generated@@31 $generated@@116)) $generated@@116) ($generated@@30 $generated@@31 ($generated@@55 $generated@@31 $generated@@116) ($generated@@32 $generated@@114 $generated@@115))))
 :pattern ( ($generated@@33 $generated@@116 ($generated@@32 $generated@@114 $generated@@115)))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> ($generated@@33 $generated@@119 ($generated@@90 $generated@@117 $generated@@118)) (and (= ($generated@@56 $generated@@31 ($generated@@55 $generated@@31 $generated@@119)) $generated@@119) ($generated@@30 $generated@@31 ($generated@@55 $generated@@31 $generated@@119) ($generated@@90 $generated@@117 $generated@@118))))
 :pattern ( ($generated@@33 $generated@@119 ($generated@@90 $generated@@117 $generated@@118)))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@33 $generated@@122 ($generated@@62 $generated@@120 $generated@@121)) (and (= ($generated@@56 $generated@@31 ($generated@@55 $generated@@31 $generated@@122)) $generated@@122) ($generated@@30 $generated@@31 ($generated@@55 $generated@@31 $generated@@122) ($generated@@62 $generated@@120 $generated@@121))))
 :pattern ( ($generated@@33 $generated@@122 ($generated@@62 $generated@@120 $generated@@121)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@123 $generated@@134 $generated@@135 $generated@@136 ($generated@@130 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@139 $generated@@140) $generated@@137)
 :weight 0
)) (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@123 $generated@@141 $generated@@142 $generated@@143 ($generated@@130 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@123 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@123 $generated@@150 $generated@@151 $generated@@152 ($generated@@130 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))) (= ($generated@@10 $generated@@124) 4)) (= ($generated@@10 $generated@@125) 5)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@127 $generated@@159 $generated@@160 ($generated@@131 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@163) $generated@@161)
 :weight 0
))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@168 $generated@@169) (= ($generated@@127 $generated@@164 $generated@@165 ($generated@@131 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@166) $generated@@169) ($generated@@127 $generated@@164 $generated@@165 $generated@@167 $generated@@169)))
 :weight 0
))) (= ($generated@@10 $generated@@128) 6)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@10 ($generated@@129 $generated@@170 $generated@@171)) 7))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@132 ($generated@@129 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@129 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@133 ($generated@@129 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@129 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@15 ($generated@@123 $generated@@124 $generated@@125 $generated@@11 ($generated@@126 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (or (not (= $generated@@180 $generated@@176)) (not true)) ($generated@@15 ($generated@@55 $generated@@11 ($generated@@127 $generated@@125 $generated@@128 ($generated@@127 $generated@@124 ($generated@@129 $generated@@125 $generated@@128) $generated@@177 $generated@@180) $generated@@178)))) $generated@@179))
 :pattern ( ($generated@@123 $generated@@124 $generated@@125 $generated@@11 ($generated@@126 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (and (= ($generated@@26 ($generated@@32 $generated@@183 $generated@@184)) $generated@@4) (= ($generated@@182 ($generated@@32 $generated@@183 $generated@@184)) $generated@@7))
 :pattern ( ($generated@@32 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (and (= ($generated@@26 ($generated@@90 $generated@@185 $generated@@186)) $generated@@5) (= ($generated@@182 ($generated@@90 $generated@@185 $generated@@186)) $generated@@8))
 :pattern ( ($generated@@90 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (and (= ($generated@@26 ($generated@@62 $generated@@187 $generated@@188)) $generated@@6) (= ($generated@@182 ($generated@@62 $generated@@187 $generated@@188)) $generated@@9))
 :pattern ( ($generated@@62 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and ($generated@@48 $generated@@191) (and ($generated@@33 $generated@@193 $generated@@189) ($generated@@30 $generated@@31 $generated@@192 ($generated@@32 $generated@@189 $generated@@190)))) ($generated@@49 ($generated@@46 $generated@@189 $generated@@190 $generated@@47 $generated@@192 $generated@@193) $generated@@28)) (= ($generated@@73 $generated@@189 $generated@@190 $generated@@47 $generated@@192 $generated@@193) ($generated@@73 $generated@@189 $generated@@190 $generated@@191 $generated@@192 $generated@@193)))
 :pattern ( ($generated@@73 $generated@@189 $generated@@190 $generated@@47 $generated@@192 $generated@@193) ($generated@@48 $generated@@191))
 :pattern ( ($generated@@73 $generated@@189 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@49 $generated@@194 $generated@@195) (forall (($generated@@196 T@U) ) (! (= ($generated@@27 $generated@@194 $generated@@196) ($generated@@27 $generated@@195 $generated@@196))
 :pattern ( ($generated@@27 $generated@@194 $generated@@196))
 :pattern ( ($generated@@27 $generated@@195 $generated@@196))
)))
 :pattern ( ($generated@@49 $generated@@194 $generated@@195))
)))
(assert  (=> (<= 0 $generated@@59) (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (or ($generated@@61 $generated@@198) (and (< 0 $generated@@59) (and ($generated@@48 $generated@@197) ($generated@@30 $generated@@31 $generated@@198 ($generated@@62 $generated@@0 $generated))))) (and (forall (($generated@@199 T@U) ) (!  (=> (<= ($generated@@41 0) ($generated@@17 $generated@@199)) (=> ($generated@@15 ($generated@@55 $generated@@11 ($generated@@63 $generated@@0 $generated $generated@@197 $generated@@198 ($generated@@56 $generated@@12 $generated@@199)))) ($generated@@64 ($generated@@17 $generated@@199))))
 :pattern ( ($generated@@55 $generated@@11 ($generated@@63 $generated@@0 $generated $generated@@197 $generated@@198 ($generated@@56 $generated@@12 $generated@@199))))
)) (= ($generated@@60 $generated@@198) (forall (($generated@@200 Int) ) (!  (=> (and (<= ($generated@@41 0) $generated@@200) ($generated@@15 ($generated@@55 $generated@@11 ($generated@@63 $generated@@0 $generated $generated@@197 $generated@@198 ($generated@@56 $generated@@12 ($generated@@16 $generated@@200)))))) (let (($generated@@201 ($generated@@65 $generated@@200)))
(<= ($generated@@41 0) $generated@@201)))
 :pattern ( ($generated@@55 $generated@@11 ($generated@@63 $generated@@0 $generated $generated@@197 $generated@@198 ($generated@@56 $generated@@12 ($generated@@16 $generated@@200)))))
)))))
 :pattern ( ($generated@@60 $generated@@198) ($generated@@48 $generated@@197))
))))
(assert (forall (($generated@@202 Int) ) (! (= ($generated@@56 $generated@@12 ($generated@@16 ($generated@@41 $generated@@202))) ($generated@@43 $generated@@128 ($generated@@56 $generated@@12 ($generated@@16 $generated@@202))))
 :pattern ( ($generated@@56 $generated@@12 ($generated@@16 ($generated@@41 $generated@@202))))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@T) ) (! (= ($generated@@56 $generated@@204 ($generated@@43 $generated@@204 $generated@@203)) ($generated@@43 $generated@@128 ($generated@@56 $generated@@204 $generated@@203)))
 :pattern ( ($generated@@56 $generated@@204 ($generated@@43 $generated@@204 $generated@@203)))
)))
(assert (forall (($generated@@205 T@U) ) (! ($generated@@30 $generated@@12 $generated@@205 $generated@@0)
 :pattern ( ($generated@@30 $generated@@12 $generated@@205 $generated@@0))
)))
(assert (forall (($generated@@206 T@U) ) (! ($generated@@30 $generated@@11 $generated@@206 $generated)
 :pattern ( ($generated@@30 $generated@@11 $generated@@206 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@214 true))
(let (($generated@@215 true))
(let (($generated@@216  (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (and ($generated@@30 $generated@@12 ($generated@@16 $generated@@207) $generated@@0) (<= $generated@@207 $generated@@207)) (or (and ($generated@@30 $generated@@12 ($generated@@16 ($generated@@41 0)) $generated@@0) (<= $generated@@207 ($generated@@41 0))) (exists (($generated@@217 Int) ) (<= $generated@@207 $generated@@217))))) (=> (or (and ($generated@@30 $generated@@12 ($generated@@16 $generated@@207) $generated@@0) (<= $generated@@207 $generated@@207)) (or (and ($generated@@30 $generated@@12 ($generated@@16 ($generated@@41 0)) $generated@@0) (<= $generated@@207 ($generated@@41 0))) (exists (($generated@@218 Int) ) (<= $generated@@207 $generated@@218)))) (=> (<= $generated@@207 $generated@@208) (=> (and ($generated@@64 $generated@@207) (= (ControlFlow 0 5) 3)) $generated@@215))))))
(let (($generated@@219  (=> (and (<= ($generated@@41 0) $generated@@207) ($generated@@15 ($generated@@55 $generated@@11 ($generated@@63 $generated@@0 $generated $generated@@209 $generated@@210 ($generated@@56 $generated@@12 ($generated@@16 $generated@@207)))))) (and (=> (= (ControlFlow 0 8) 5) $generated@@216) (=> (= (ControlFlow 0 8) 7) $generated@@214)))))
(let (($generated@@220  (=> (and (not (and (<= ($generated@@41 0) $generated@@207) ($generated@@15 ($generated@@55 $generated@@11 ($generated@@63 $generated@@0 $generated $generated@@209 $generated@@210 ($generated@@56 $generated@@12 ($generated@@16 $generated@@207))))))) (= (ControlFlow 0 4) 3)) $generated@@215)))
(let (($generated@@221  (=> (< $generated@@207 ($generated@@41 0)) (and (=> (= (ControlFlow 0 10) 8) $generated@@219) (=> (= (ControlFlow 0 10) 4) $generated@@220)))))
(let (($generated@@222  (=> (<= ($generated@@41 0) $generated@@207) (and (=> (= (ControlFlow 0 9) 8) $generated@@219) (=> (= (ControlFlow 0 9) 4) $generated@@220)))))
(let (($generated@@223  (and (=> (= (ControlFlow 0 11) 9) $generated@@222) (=> (= (ControlFlow 0 11) 10) $generated@@221))))
(let (($generated@@224 true))
(let (($generated@@225 true))
(let (($generated@@226  (=> (= $generated@@211 ($generated@@126 $generated@@212 $generated@@209 $generated@@3 false)) (and (and (=> (= (ControlFlow 0 12) 1) $generated@@225) (=> (= (ControlFlow 0 12) 11) $generated@@223)) (=> (= (ControlFlow 0 12) 2) $generated@@224)))))
(let (($generated@@227  (=> (and (and (and ($generated@@48 $generated@@209) ($generated@@213 $generated@@209)) ($generated@@30 $generated@@31 $generated@@210 ($generated@@62 $generated@@0 $generated))) (and (= 0 $generated@@59) (= (ControlFlow 0 13) 12))) $generated@@226)))
$generated@@227)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
