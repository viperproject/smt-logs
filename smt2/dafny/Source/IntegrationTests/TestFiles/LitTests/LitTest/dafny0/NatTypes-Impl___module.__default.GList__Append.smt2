(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (T@U) Int)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@99 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 (T@T T@T) T@T)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@T) T@T)
(declare-fun $generated@@105 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@22 $generated@@8 $generated@@24 $generated@@23 $generated@@25)
 :pattern ( ($generated@@22 $generated@@8 $generated@@24 $generated@@23 $generated@@25))
)))
(assert (= ($generated@@26 $generated@@27) $generated@@2))
(assert (= ($generated@@6 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@30 $generated@@32) ($generated@@22 $generated@@28 $generated@@27 ($generated@@29 $generated@@31) $generated@@32))
 :pattern ( ($generated@@22 $generated@@28 $generated@@27 ($generated@@29 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ) (! ($generated@@33 $generated@@28 $generated@@27 ($generated@@29 $generated@@34))
 :pattern ( ($generated@@33 $generated@@28 $generated@@27 ($generated@@29 $generated@@34)))
)))
(assert (forall (($generated@@36 Int) ) (! (= ($generated@@35 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@37 $generated@@39 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@39 $generated@@38))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@33 $generated@@28 ($generated@@40 $generated@@43 $generated@@44) ($generated@@29 $generated@@42))  (and ($generated@@41 $generated@@43 $generated@@42) ($generated@@33 $generated@@28 $generated@@44 ($generated@@29 $generated@@42))))
 :pattern ( ($generated@@33 $generated@@28 ($generated@@40 $generated@@43 $generated@@44) ($generated@@29 $generated@@42)))
)))
(assert (forall (($generated@@46 T@U) ) (! (= ($generated@@45 $generated@@46) (= ($generated@@26 $generated@@46) $generated@@2))
 :pattern ( ($generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@47 $generated@@48) (= ($generated@@26 $generated@@48) $generated@@3))
 :pattern ( ($generated@@47 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 ($generated@@49 $generated@@52 $generated@@51)) $generated@@51)
 :pattern ( ($generated@@49 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (!  (=> ($generated@@47 $generated@@53) (exists (($generated@@54 T@U) ($generated@@55 T@U) ) (= $generated@@53 ($generated@@40 $generated@@54 $generated@@55))))
 :pattern ( ($generated@@47 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@45 $generated@@56) (= $generated@@56 $generated@@27))
 :pattern ( ($generated@@45 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@33 $generated@@8 $generated@@57 $generated@@23) (<= ($generated@@35 0) ($generated@@13 $generated@@57)))
 :pattern ( ($generated@@33 $generated@@8 $generated@@57 $generated@@23))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@58 ($generated@@50 $generated@@62 $generated@@59) $generated@@60 $generated@@61) ($generated@@22 $generated@@62 $generated@@59 $generated@@60 $generated@@61))
 :pattern ( ($generated@@58 ($generated@@50 $generated@@62 $generated@@59) $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@65 T@U) ) (!  (and (= ($generated@@63 ($generated@@29 $generated@@65)) $generated@@1) (= ($generated@@64 ($generated@@29 $generated@@65)) $generated@@5))
 :pattern ( ($generated@@29 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@41 $generated@@66 $generated@@23) (and (= ($generated@@50 $generated@@8 ($generated@@49 $generated@@8 $generated@@66)) $generated@@66) ($generated@@33 $generated@@8 ($generated@@49 $generated@@8 $generated@@66) $generated@@23)))
 :pattern ( ($generated@@41 $generated@@66 $generated@@23))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@67 $generated@@68) (or ($generated@@45 $generated@@68) ($generated@@47 $generated@@68)))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@33 $generated@@28 $generated@@70 ($generated@@29 $generated@@69)) (or ($generated@@45 $generated@@70) ($generated@@47 $generated@@70)))
 :pattern ( ($generated@@47 $generated@@70) ($generated@@33 $generated@@28 $generated@@70 ($generated@@29 $generated@@69)))
 :pattern ( ($generated@@45 $generated@@70) ($generated@@33 $generated@@28 $generated@@70 ($generated@@29 $generated@@69)))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@41 ($generated@@50 $generated@@73 $generated@@71) $generated@@72) ($generated@@33 $generated@@73 $generated@@71 $generated@@72))
 :pattern ( ($generated@@41 ($generated@@50 $generated@@73 $generated@@71) $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@26 ($generated@@40 $generated@@74 $generated@@75)) $generated@@3)
 :pattern ( ($generated@@40 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@76 ($generated@@40 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@40 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@79 ($generated@@40 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@40 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 ($generated@@29 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@29 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@49 $generated@@85 ($generated@@50 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@50 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (< ($generated@@86 $generated@@88) ($generated@@87 ($generated@@40 $generated@@88 $generated@@89)))
 :pattern ( ($generated@@40 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (< ($generated@@87 $generated@@91) ($generated@@87 ($generated@@40 $generated@@90 $generated@@91)))
 :pattern ( ($generated@@40 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (and ($generated@@30 $generated@@94) (and ($generated@@47 $generated@@92) ($generated@@22 $generated@@28 $generated@@92 ($generated@@29 $generated@@93) $generated@@94))) ($generated@@58 ($generated@@76 $generated@@92) $generated@@93 $generated@@94))
 :pattern ( ($generated@@58 ($generated@@76 $generated@@92) $generated@@93 $generated@@94))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@95 $generated@@106 $generated@@107 $generated@@108 ($generated@@102 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@111 $generated@@112) $generated@@109)
 :weight 0
)) (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@95 $generated@@113 $generated@@114 $generated@@115 ($generated@@102 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@95 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@95 $generated@@122 $generated@@123 $generated@@124 ($generated@@102 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@95 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)))) (= ($generated@@6 $generated@@96) 4)) (= ($generated@@6 $generated@@97) 5)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@99 $generated@@131 $generated@@132 ($generated@@103 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@135) $generated@@133)
 :weight 0
))) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@99 $generated@@136 $generated@@137 ($generated@@103 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@99 $generated@@136 $generated@@137 $generated@@139 $generated@@141)))
 :weight 0
))) (= ($generated@@6 $generated@@100) 6)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (= ($generated@@6 ($generated@@101 $generated@@142 $generated@@143)) 7))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@104 ($generated@@101 $generated@@144 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@101 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@105 ($generated@@101 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@101 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 Bool) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@11 ($generated@@95 $generated@@96 $generated@@97 $generated@@7 ($generated@@98 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))  (=> (and (or (not (= $generated@@152 $generated@@148)) (not true)) ($generated@@11 ($generated@@49 $generated@@7 ($generated@@99 $generated@@97 $generated@@100 ($generated@@99 $generated@@96 ($generated@@101 $generated@@97 $generated@@100) $generated@@149 $generated@@152) $generated@@150)))) $generated@@151))
 :pattern ( ($generated@@95 $generated@@96 $generated@@97 $generated@@7 ($generated@@98 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@86 ($generated@@50 $generated@@28 $generated@@154)) ($generated@@87 $generated@@154))
 :pattern ( ($generated@@86 ($generated@@50 $generated@@28 $generated@@154)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@41 $generated@@156 ($generated@@29 $generated@@155)) (and (= ($generated@@50 $generated@@28 ($generated@@49 $generated@@28 $generated@@156)) $generated@@156) ($generated@@33 $generated@@28 ($generated@@49 $generated@@28 $generated@@156) ($generated@@29 $generated@@155))))
 :pattern ( ($generated@@41 $generated@@156 ($generated@@29 $generated@@155)))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and ($generated@@30 $generated@@159) (and ($generated@@47 $generated@@157) ($generated@@22 $generated@@28 $generated@@157 ($generated@@29 $generated@@158) $generated@@159))) ($generated@@22 $generated@@28 ($generated@@79 $generated@@157) ($generated@@29 $generated@@158) $generated@@159))
 :pattern ( ($generated@@22 $generated@@28 ($generated@@79 $generated@@157) ($generated@@29 $generated@@158) $generated@@159))
)))
(assert (= ($generated@@63 $generated@@23) $generated@@0))
(assert (= ($generated@@64 $generated@@23) $generated@@4))
(assert (= $generated@@27 ($generated@@37 $generated@@28 $generated@@27)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@40 ($generated@@37 $generated@@100 $generated@@160) ($generated@@37 $generated@@28 $generated@@161)) ($generated@@37 $generated@@28 ($generated@@40 $generated@@160 $generated@@161)))
 :pattern ( ($generated@@40 ($generated@@37 $generated@@100 $generated@@160) ($generated@@37 $generated@@28 $generated@@161)))
)))
(assert (forall (($generated@@162 Int) ) (! (= ($generated@@50 $generated@@8 ($generated@@12 ($generated@@35 $generated@@162))) ($generated@@37 $generated@@100 ($generated@@50 $generated@@8 ($generated@@12 $generated@@162))))
 :pattern ( ($generated@@50 $generated@@8 ($generated@@12 ($generated@@35 $generated@@162))))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@50 $generated@@164 ($generated@@37 $generated@@164 $generated@@163)) ($generated@@37 $generated@@100 ($generated@@50 $generated@@164 $generated@@163)))
 :pattern ( ($generated@@50 $generated@@164 ($generated@@37 $generated@@164 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@30 $generated@@168) (= ($generated@@22 $generated@@28 ($generated@@40 $generated@@166 $generated@@167) ($generated@@29 $generated@@165) $generated@@168)  (and ($generated@@58 $generated@@166 $generated@@165 $generated@@168) ($generated@@22 $generated@@28 $generated@@167 ($generated@@29 $generated@@165) $generated@@168))))
 :pattern ( ($generated@@22 $generated@@28 ($generated@@40 $generated@@166 $generated@@167) ($generated@@29 $generated@@165) $generated@@168))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@177  (=> (and (< $generated@@169 ($generated@@35 100)) (= (ControlFlow 0 4) (- 0 3))) ($generated@@33 $generated@@8 ($generated@@12 $generated@@169) $generated@@23))))
(let (($generated@@178  (=> (and (<= ($generated@@35 100) $generated@@169) (= (ControlFlow 0 2) (- 0 1))) ($generated@@33 $generated@@8 ($generated@@12 $generated@@169) $generated@@23))))
(let (($generated@@179  (=> (= $generated@@170 ($generated@@98 $generated@@171 $generated@@172 $generated false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@178) (=> (= (ControlFlow 0 5) 4) $generated@@177)))))
(let (($generated@@180  (=> (and ($generated@@30 $generated@@172) ($generated@@173 $generated@@172)) (=> (and (and (and ($generated@@33 $generated@@28 $generated@@174 ($generated@@29 $generated@@23)) ($generated@@22 $generated@@28 $generated@@174 ($generated@@29 $generated@@23) $generated@@172)) ($generated@@67 $generated@@174)) (and (and ($generated@@33 $generated@@28 $generated@@175 ($generated@@29 $generated@@23)) ($generated@@22 $generated@@28 $generated@@175 ($generated@@29 $generated@@23) $generated@@172)) (and (= 1 $generated@@176) (= (ControlFlow 0 6) 5)))) $generated@@179))))
$generated@@180)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
