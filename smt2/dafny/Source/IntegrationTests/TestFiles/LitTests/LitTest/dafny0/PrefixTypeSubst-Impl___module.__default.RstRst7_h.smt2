(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () Int)
(declare-fun $generated@@0 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@1 (T@U) T@U)
(declare-fun $generated@@2 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (Int) T@U)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@34 (Int) Int)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@U T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@94 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@98 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@99 (T@T T@T) T@T)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@103 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert  (=> (<= 1 $generated) (forall (($generated@@19 T@U) ($generated@@20 T@U) ($generated@@21 T@U) ($generated@@22 T@U) ) (!  (=> ($generated@@0 $generated@@19 $generated@@20 $generated@@21 ($generated@@1 $generated@@22)) (forall (($generated@@23 T@U) ) (! ($generated@@2 $generated@@19 $generated@@20 $generated@@21 ($generated@@1 $generated@@22) $generated@@23)
 :pattern ( ($generated@@2 $generated@@19 $generated@@20 $generated@@21 ($generated@@1 $generated@@22) $generated@@23))
)))
 :pattern ( ($generated@@0 $generated@@19 $generated@@20 $generated@@21 ($generated@@1 $generated@@22)))
))))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> (and ($generated@@24 $generated@@25 $generated@@26) ($generated@@24 $generated@@26 $generated@@27)) ($generated@@24 $generated@@25 $generated@@27))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26) ($generated@@24 $generated@@26 $generated@@27))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26) ($generated@@24 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 Int) ($generated@@33 Int) ) (!  (=> (and (and (<= 0 $generated@@32) (<= 0 $generated@@33)) (<= (+ $generated@@32 $generated@@33) ($generated@@30 $generated@@31))) (= ($generated@@28 ($generated@@28 $generated@@31 ($generated@@29 $generated@@32)) ($generated@@29 $generated@@33)) ($generated@@28 $generated@@31 ($generated@@29 (+ $generated@@32 $generated@@33)))))
 :pattern ( ($generated@@28 ($generated@@28 $generated@@31 ($generated@@29 $generated@@32)) ($generated@@29 $generated@@33)))
)))
(assert (forall (($generated@@35 Int) ) (! (= ($generated@@34 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@T) ) (! (= ($generated@@36 $generated@@38 $generated@@37) $generated@@37)
 :pattern ( ($generated@@36 $generated@@38 $generated@@37))
)))
(assert  (=> (<= 0 $generated) (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@39 $generated@@40 $generated@@41 $generated@@42) (< 0 $generated)) (and ($generated@@39 $generated@@41 $generated@@40 $generated@@42) (= ($generated@@0 $generated@@40 $generated@@41 $generated@@42 ($generated@@1 $generated@@43)) ($generated@@8 ($generated@@36 $generated@@4 ($generated@@7 ($generated@@0 $generated@@41 $generated@@40 $generated@@42 $generated@@43)))))))
 :pattern ( ($generated@@0 $generated@@40 $generated@@41 $generated@@42 ($generated@@1 $generated@@43)))
))))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@T) ) (! (= ($generated@@45 $generated@@47 ($generated@@44 $generated@@47 $generated@@46)) $generated@@46)
 :pattern ( ($generated@@44 $generated@@47 $generated@@46))
)))
(assert (= ($generated@@3 $generated@@48) 3))
(assert  (=> (<= 1 $generated) (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (or ($generated@@49 $generated@@50 $generated@@51 $generated@@52 ($generated@@36 $generated@@48 $generated@@54)) (< 1 $generated)) (and (and (=> (< 0 ($generated@@30 $generated@@54)) ($generated@@49 $generated@@51 $generated@@50 $generated@@52 ($generated@@28 $generated@@54 ($generated@@29 1)))) (=> (=> (< 0 ($generated@@30 $generated@@54)) ($generated@@2 $generated@@51 $generated@@50 $generated@@52 ($generated@@1 $generated@@53) ($generated@@28 $generated@@54 ($generated@@29 1)))) (=> (= ($generated@@34 0) ($generated@@30 $generated@@54)) (forall (($generated@@55 T@U) ) (!  (=> ($generated@@24 $generated@@55 $generated@@54) ($generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@55))
 :pattern ( ($generated@@2 $generated@@50 $generated@@51 $generated@@52 ($generated@@1 $generated@@53) $generated@@55))
))))) (= ($generated@@2 $generated@@50 $generated@@51 $generated@@52 ($generated@@1 $generated@@53) ($generated@@36 $generated@@48 $generated@@54))  (and (=> (< 0 ($generated@@30 $generated@@54)) ($generated@@2 $generated@@51 $generated@@50 $generated@@52 ($generated@@1 $generated@@53) ($generated@@28 $generated@@54 ($generated@@29 1)))) (=> (= ($generated@@34 0) ($generated@@30 $generated@@54)) (forall (($generated@@56 T@U) ) (!  (=> ($generated@@24 $generated@@56 $generated@@54) ($generated@@2 $generated@@50 $generated@@51 $generated@@52 ($generated@@1 $generated@@53) $generated@@56))
 :pattern ( ($generated@@2 $generated@@50 $generated@@51 $generated@@52 ($generated@@1 $generated@@53) $generated@@56))
)))))))
 :weight 3
 :pattern ( ($generated@@2 $generated@@50 $generated@@51 $generated@@52 ($generated@@1 $generated@@53) ($generated@@36 $generated@@48 $generated@@54)))
))))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@0 $generated@@57 $generated@@58 $generated@@59 ($generated@@1 $generated@@60)) ($generated@@0 $generated@@57 $generated@@58 $generated@@59 $generated@@60))
 :pattern ( ($generated@@0 $generated@@57 $generated@@58 $generated@@59 ($generated@@1 $generated@@60)))
)))
(assert  (=> (<= 1 $generated) (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (forall (($generated@@65 T@U) ) (! ($generated@@2 $generated@@61 $generated@@62 $generated@@63 ($generated@@1 $generated@@64) $generated@@65)
 :pattern ( ($generated@@2 $generated@@61 $generated@@62 $generated@@63 ($generated@@1 $generated@@64) $generated@@65))
)) ($generated@@0 $generated@@61 $generated@@62 $generated@@63 ($generated@@1 $generated@@64)))
 :pattern ( ($generated@@0 $generated@@61 $generated@@62 $generated@@63 ($generated@@1 $generated@@64)))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> (and ($generated@@66 $generated@@68) (<= ($generated@@30 $generated@@68) ($generated@@30 $generated@@67))) (and (= ($generated@@66 ($generated@@28 $generated@@67 $generated@@68)) ($generated@@66 $generated@@67)) (= ($generated@@30 ($generated@@28 $generated@@67 $generated@@68)) (- ($generated@@30 $generated@@67) ($generated@@30 $generated@@68)))))
 :pattern ( ($generated@@28 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@69 Int) ) (!  (=> (<= 0 $generated@@69) (and ($generated@@66 ($generated@@29 $generated@@69)) (= ($generated@@30 ($generated@@29 $generated@@69)) $generated@@69)))
 :pattern ( ($generated@@29 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@2 $generated@@70 $generated@@71 $generated@@72 ($generated@@1 $generated@@73) $generated@@74) ($generated@@2 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74))
 :pattern ( ($generated@@2 $generated@@70 $generated@@71 $generated@@72 ($generated@@1 $generated@@73) $generated@@74))
)))
(assert  (=> (<= 1 $generated) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (= $generated@@79 ($generated@@29 0)) ($generated@@2 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79))
 :pattern ( ($generated@@2 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (or (or ($generated@@24 $generated@@80 $generated@@81) (= $generated@@80 $generated@@81)) ($generated@@24 $generated@@81 $generated@@80))
 :pattern ( ($generated@@24 $generated@@80 $generated@@81) ($generated@@24 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (! (<= 0 ($generated@@30 $generated@@82))
 :pattern ( ($generated@@30 $generated@@82))
)))
(assert  (=> (<= 1 $generated) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (or ($generated@@49 $generated@@83 $generated@@84 $generated@@85 $generated@@87) (< 1 $generated)) (and (and (=> (< 0 ($generated@@30 $generated@@87)) ($generated@@49 $generated@@84 $generated@@83 $generated@@85 ($generated@@28 $generated@@87 ($generated@@29 1)))) (=> (=> (< 0 ($generated@@30 $generated@@87)) ($generated@@2 $generated@@84 $generated@@83 $generated@@85 $generated@@86 ($generated@@28 $generated@@87 ($generated@@29 1)))) (=> (= ($generated@@34 0) ($generated@@30 $generated@@87)) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@24 $generated@@88 $generated@@87) ($generated@@49 $generated@@83 $generated@@84 $generated@@85 $generated@@88))
 :pattern ( ($generated@@2 $generated@@83 $generated@@84 $generated@@85 $generated@@86 $generated@@88))
))))) (= ($generated@@2 $generated@@83 $generated@@84 $generated@@85 ($generated@@1 $generated@@86) $generated@@87)  (and (=> (< 0 ($generated@@30 $generated@@87)) ($generated@@2 $generated@@84 $generated@@83 $generated@@85 $generated@@86 ($generated@@28 $generated@@87 ($generated@@29 1)))) (=> (= ($generated@@34 0) ($generated@@30 $generated@@87)) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@24 $generated@@89 $generated@@87) ($generated@@2 $generated@@83 $generated@@84 $generated@@85 $generated@@86 $generated@@89))
 :pattern ( ($generated@@2 $generated@@83 $generated@@84 $generated@@85 $generated@@86 $generated@@89))
)))))))
 :pattern ( ($generated@@2 $generated@@83 $generated@@84 $generated@@85 ($generated@@1 $generated@@86) $generated@@87))
))))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@44 $generated@@91 ($generated@@45 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@45 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (and (and (and (=> ($generated@@24 $generated@@92 $generated@@93) (or (not (= $generated@@92 $generated@@93)) (not true))) (=> (and ($generated@@66 $generated@@92) (not ($generated@@66 $generated@@93))) ($generated@@24 $generated@@92 $generated@@93))) (=> (and ($generated@@66 $generated@@92) ($generated@@66 $generated@@93)) (= ($generated@@24 $generated@@92 $generated@@93) (< ($generated@@30 $generated@@92) ($generated@@30 $generated@@93))))) (=> (and ($generated@@24 $generated@@92 $generated@@93) ($generated@@66 $generated@@93)) ($generated@@66 $generated@@92)))
 :pattern ( ($generated@@24 $generated@@92 $generated@@93))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@94 $generated@@104 $generated@@105 $generated@@106 ($generated@@100 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@109 $generated@@110) $generated@@107)
 :weight 0
)) (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@116 $generated@@118) (= ($generated@@94 $generated@@111 $generated@@112 $generated@@113 ($generated@@100 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@94 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@94 $generated@@120 $generated@@121 $generated@@122 ($generated@@100 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@94 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)))) (= ($generated@@3 $generated@@95) 4)) (= ($generated@@3 $generated@@96) 5)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@98 $generated@@129 $generated@@130 ($generated@@101 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@131) $generated@@133) $generated@@131)
 :weight 0
))) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@98 $generated@@134 $generated@@135 ($generated@@101 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@98 $generated@@134 $generated@@135 $generated@@137 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (= ($generated@@3 ($generated@@99 $generated@@140 $generated@@141)) 6))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@102 ($generated@@99 $generated@@142 $generated@@143)) $generated@@142)
 :pattern ( ($generated@@99 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@103 ($generated@@99 $generated@@144 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@99 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@8 ($generated@@94 $generated@@95 $generated@@96 $generated@@4 ($generated@@97 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))  (=> (and (or (not (= $generated@@150 $generated@@146)) (not true)) ($generated@@8 ($generated@@44 $generated@@4 ($generated@@98 $generated@@96 $generated@@48 ($generated@@98 $generated@@95 ($generated@@99 $generated@@96 $generated@@48) $generated@@147 $generated@@150) $generated@@148)))) $generated@@149))
 :pattern ( ($generated@@94 $generated@@95 $generated@@96 $generated@@4 ($generated@@97 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@66 $generated@@152) (= $generated@@152 ($generated@@29 ($generated@@30 $generated@@152))))
 :pattern ( ($generated@@30 $generated@@152))
 :pattern ( ($generated@@66 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and ($generated@@66 $generated@@154) (<= ($generated@@30 $generated@@154) ($generated@@30 $generated@@153))) (or (and (= $generated@@154 ($generated@@29 0)) (= ($generated@@28 $generated@@153 $generated@@154) $generated@@153)) (and (or (not (= $generated@@154 ($generated@@29 0))) (not true)) ($generated@@24 ($generated@@28 $generated@@153 $generated@@154) $generated@@153))))
 :pattern ( ($generated@@28 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 Int) ) (! (= ($generated@@45 $generated@@5 ($generated@@9 ($generated@@34 $generated@@155))) ($generated@@36 $generated@@48 ($generated@@45 $generated@@5 ($generated@@9 $generated@@155))))
 :pattern ( ($generated@@45 $generated@@5 ($generated@@9 ($generated@@34 $generated@@155))))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@45 $generated@@157 ($generated@@36 $generated@@157 $generated@@156)) ($generated@@36 $generated@@48 ($generated@@45 $generated@@157 $generated@@156)))
 :pattern ( ($generated@@45 $generated@@157 ($generated@@36 $generated@@157 $generated@@156)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@172  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@49 $generated@@158 $generated@@159 $generated@@160 $generated@@161) (or ($generated@@2 $generated@@158 $generated@@159 $generated@@160 ($generated@@1 $generated@@162) $generated@@161) (=> (< 0 ($generated@@30 $generated@@161)) ($generated@@2 $generated@@159 $generated@@158 $generated@@160 ($generated@@1 ($generated@@1 $generated@@162)) ($generated@@28 $generated@@161 ($generated@@29 1))))))) (=> (=> ($generated@@49 $generated@@158 $generated@@159 $generated@@160 $generated@@161) (or ($generated@@2 $generated@@158 $generated@@159 $generated@@160 ($generated@@1 $generated@@162) $generated@@161) (=> (< 0 ($generated@@30 $generated@@161)) ($generated@@2 $generated@@159 $generated@@158 $generated@@160 ($generated@@1 ($generated@@1 $generated@@162)) ($generated@@28 $generated@@161 ($generated@@29 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@49 $generated@@158 $generated@@159 $generated@@160 $generated@@161) (or ($generated@@2 $generated@@158 $generated@@159 $generated@@160 ($generated@@1 $generated@@162) $generated@@161) (=> (= ($generated@@34 0) ($generated@@30 $generated@@161)) (forall (($generated@@173 T@U) ) (!  (=> ($generated@@24 $generated@@173 $generated@@161) ($generated@@2 $generated@@158 $generated@@159 $generated@@160 ($generated@@1 ($generated@@1 $generated@@162)) $generated@@173))
 :pattern ( ($generated@@2 $generated@@158 $generated@@159 $generated@@160 ($generated@@1 ($generated@@1 $generated@@162)) $generated@@173))
))))))))))
(let (($generated@@174  (=> (and (not (and (or (not (= $generated@@161 ($generated@@29 1))) (not true)) (= ($generated@@30 $generated@@161) ($generated@@34 1)))) (= (ControlFlow 0 6) 2)) $generated@@172)))
(let (($generated@@175  (=> (and (or (not (= $generated@@161 ($generated@@29 1))) (not true)) (= ($generated@@30 $generated@@161) ($generated@@34 1))) (=> (and (and (and ($generated@@163 $generated@@164) ($generated@@165 $generated@@164)) ($generated@@39 $generated@@159 $generated@@158 $generated@@160)) (and (and ($generated@@39 $generated@@159 $generated@@158 $generated@@160) (and ($generated@@8 ($generated@@36 $generated@@4 ($generated@@7 ($generated@@0 $generated@@159 $generated@@158 $generated@@160 ($generated@@1 $generated@@162))))) ($generated@@8 ($generated@@36 $generated@@4 ($generated@@7 ($generated@@0 $generated@@158 $generated@@159 $generated@@160 ($generated@@1 $generated@@162))))))) (and (= $generated@@166 $generated@@164) (= (ControlFlow 0 5) 2)))) $generated@@172))))
(let (($generated@@176  (and (=> (= (ControlFlow 0 7) 5) $generated@@175) (=> (= (ControlFlow 0 7) 6) $generated@@174))))
(let (($generated@@177  (=> (and (= $generated@@161 ($generated@@29 1)) (= (ControlFlow 0 9) 7)) $generated@@176)))
(let (($generated@@178  (=> (and (or (not (= $generated@@161 ($generated@@29 1))) (not true)) (= (ControlFlow 0 8) 7)) $generated@@176)))
(let (($generated@@179  (=> (< 0 ($generated@@30 $generated@@161)) (and (=> (= (ControlFlow 0 10) 8) $generated@@178) (=> (= (ControlFlow 0 10) 9) $generated@@177)))))
(let (($generated@@180  (=> (<= ($generated@@30 $generated@@161) 0) (=> (and (and (and ($generated@@163 $generated@@167) ($generated@@165 $generated@@167)) (= $generated@@166 $generated@@167)) (and (forall (($generated@@181 T@U) ) (!  (=> ($generated@@24 $generated@@181 $generated@@161) ($generated@@2 $generated@@158 $generated@@159 $generated@@160 ($generated@@1 $generated@@162) $generated@@181))
 :pattern ( ($generated@@2 $generated@@158 $generated@@159 $generated@@160 ($generated@@1 $generated@@162) $generated@@181))
 :pattern ( ($generated@@24 $generated@@181 $generated@@161))
)) (= (ControlFlow 0 4) 2))) $generated@@172))))
(let (($generated@@182  (=> (= $generated@@168 ($generated@@97 $generated@@169 $generated@@170 $generated@@171 false)) (=> (and (and ($generated@@163 $generated@@166) ($generated@@165 $generated@@166)) (and (= $generated@@170 $generated@@166) (forall (($generated@@183 T@U) ) (!  (=> (and ($generated@@8 ($generated@@36 $generated@@4 ($generated@@7 true))) ($generated@@24 $generated@@183 $generated@@161)) ($generated@@2 $generated@@158 $generated@@159 $generated@@160 ($generated@@1 $generated@@162) $generated@@183))
 :pattern ( ($generated@@2 $generated@@158 $generated@@159 $generated@@160 ($generated@@1 $generated@@162) $generated@@183))
)))) (and (=> (= (ControlFlow 0 11) 10) $generated@@179) (=> (= (ControlFlow 0 11) 4) $generated@@180))))))
(let (($generated@@184  (=> (and (and ($generated@@163 $generated@@170) ($generated@@165 $generated@@170)) (and (= 4 $generated) (= (ControlFlow 0 12) 11))) $generated@@182)))
$generated@@184)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
