(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (Int) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@29 () Int)
(declare-fun $generated@@30 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@103 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@123 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 (T@T T@T) T@T)
(declare-fun $generated@@126 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@128 (T@T) T@T)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@169 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@20 T@U) ($generated@@21 T@U) ($generated@@22 T@U) ) (!  (=> (and ($generated@@19 $generated@@20 $generated@@21) ($generated@@19 $generated@@21 $generated@@22)) ($generated@@19 $generated@@20 $generated@@22))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21) ($generated@@19 $generated@@21 $generated@@22))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21) ($generated@@19 $generated@@20 $generated@@22))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 Int) ($generated@@28 Int) ) (!  (=> (and (and (<= 0 $generated@@27) (<= 0 $generated@@28)) (<= (+ $generated@@27 $generated@@28) ($generated@@25 $generated@@26))) (= ($generated@@23 ($generated@@23 $generated@@26 ($generated@@24 $generated@@27)) ($generated@@24 $generated@@28)) ($generated@@23 $generated@@26 ($generated@@24 (+ $generated@@27 $generated@@28)))))
 :pattern ( ($generated@@23 ($generated@@23 $generated@@26 ($generated@@24 $generated@@27)) ($generated@@24 $generated@@28)))
)))
(assert (= ($generated@@3 $generated@@34) 3))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (and (and (or (not (= $generated@@41 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@41 ($generated@@35 $generated@@37 $generated@@38))) (forall (($generated@@42 T@U) ) (! ($generated@@36 $generated@@37 $generated@@38 $generated@@39 ($generated@@31 $generated@@40) $generated@@41 $generated@@42)
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 $generated@@39 ($generated@@31 $generated@@40) $generated@@41 $generated@@42))
))) ($generated@@30 $generated@@37 $generated@@38 $generated@@39 ($generated@@31 $generated@@40) $generated@@41))
 :pattern ( ($generated@@30 $generated@@37 $generated@@38 $generated@@39 ($generated@@31 $generated@@40) $generated@@41))
))))
(assert (= ($generated@@3 $generated@@44) 4))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (or ($generated@@45 $generated@@47 $generated@@48 $generated@@49 $generated@@51 ($generated@@43 $generated@@44 $generated@@52)) (and (< 1 $generated@@29) (and (or (not (= $generated@@51 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@51 ($generated@@35 $generated@@47 $generated@@48))))) (and (and (=> (< 0 ($generated@@25 $generated@@52)) ($generated@@45 $generated@@47 $generated@@48 $generated@@49 $generated@@51 ($generated@@23 $generated@@52 ($generated@@24 1)))) (=> (=> (< 0 ($generated@@25 $generated@@52)) ($generated@@36 $generated@@47 $generated@@48 $generated@@49 ($generated@@31 $generated@@50) $generated@@51 ($generated@@23 $generated@@52 ($generated@@24 1)))) (=> (= ($generated@@46 0) ($generated@@25 $generated@@52)) (forall (($generated@@53 T@U) ) (!  (=> ($generated@@19 $generated@@53 $generated@@52) ($generated@@45 $generated@@47 $generated@@48 $generated@@49 $generated@@51 $generated@@53))
 :pattern ( ($generated@@36 $generated@@47 $generated@@48 $generated@@49 ($generated@@31 $generated@@50) $generated@@51 $generated@@53))
))))) (= ($generated@@36 $generated@@47 $generated@@48 $generated@@49 ($generated@@31 $generated@@50) $generated@@51 ($generated@@43 $generated@@44 $generated@@52))  (and (=> (< 0 ($generated@@25 $generated@@52)) ($generated@@36 $generated@@47 $generated@@48 $generated@@49 ($generated@@31 $generated@@50) $generated@@51 ($generated@@23 $generated@@52 ($generated@@24 1)))) (=> (= ($generated@@46 0) ($generated@@25 $generated@@52)) (forall (($generated@@54 T@U) ) (!  (=> ($generated@@19 $generated@@54 $generated@@52) ($generated@@36 $generated@@47 $generated@@48 $generated@@49 ($generated@@31 $generated@@50) $generated@@51 $generated@@54))
 :pattern ( ($generated@@36 $generated@@47 $generated@@48 $generated@@49 ($generated@@31 $generated@@50) $generated@@51 $generated@@54))
)))))))
 :weight 3
 :pattern ( ($generated@@36 $generated@@47 $generated@@48 $generated@@49 ($generated@@31 $generated@@50) $generated@@51 ($generated@@43 $generated@@44 $generated@@52)))
))))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (or ($generated@@45 $generated@@55 $generated@@56 $generated@@57 $generated@@59 $generated@@60) (and (< 1 $generated@@29) (and (or (not (= $generated@@59 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@59 ($generated@@35 $generated@@55 $generated@@56))))) (and (and (=> (< 0 ($generated@@25 $generated@@60)) ($generated@@45 $generated@@55 $generated@@56 $generated@@57 $generated@@59 ($generated@@23 $generated@@60 ($generated@@24 1)))) (=> (=> (< 0 ($generated@@25 $generated@@60)) ($generated@@36 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 ($generated@@23 $generated@@60 ($generated@@24 1)))) (=> (= ($generated@@46 0) ($generated@@25 $generated@@60)) (forall (($generated@@61 T@U) ) (!  (=> ($generated@@19 $generated@@61 $generated@@60) ($generated@@45 $generated@@55 $generated@@56 $generated@@57 $generated@@59 $generated@@61))
 :pattern ( ($generated@@36 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@61))
))))) (= ($generated@@36 $generated@@55 $generated@@56 $generated@@57 ($generated@@31 $generated@@58) $generated@@59 $generated@@60)  (and (=> (< 0 ($generated@@25 $generated@@60)) ($generated@@36 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 ($generated@@23 $generated@@60 ($generated@@24 1)))) (=> (= ($generated@@46 0) ($generated@@25 $generated@@60)) (forall (($generated@@62 T@U) ) (!  (=> ($generated@@19 $generated@@62 $generated@@60) ($generated@@36 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@62))
 :pattern ( ($generated@@36 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@62))
)))))))
 :pattern ( ($generated@@36 $generated@@55 $generated@@56 $generated@@57 ($generated@@31 $generated@@58) $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@46 $generated@@63) $generated@@63)
 :pattern ( ($generated@@46 $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@43 $generated@@65 $generated@@64) $generated@@64)
 :pattern ( ($generated@@43 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 ($generated@@66 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@66 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@73 ($generated@@35 $generated@@71 $generated@@72))  (and ($generated@@33 $generated@@34 $generated@@73 ($generated@@70 $generated@@71 $generated@@72)) (or (not (= $generated@@73 $generated@@32)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@73 ($generated@@35 $generated@@71 $generated@@72)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@73 ($generated@@70 $generated@@71 $generated@@72)))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@36 $generated@@74 $generated@@75 $generated@@76 ($generated@@31 $generated@@77) $generated@@78 $generated@@79) ($generated@@36 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79))
 :pattern ( ($generated@@36 $generated@@74 $generated@@75 $generated@@76 ($generated@@31 $generated@@77) $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@80 ($generated@@67 $generated@@85 $generated@@82) $generated@@83 $generated@@84) ($generated@@81 $generated@@85 $generated@@82 $generated@@83 $generated@@84))
 :pattern ( ($generated@@80 ($generated@@67 $generated@@85 $generated@@82) $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@89 ($generated@@70 $generated@@87 $generated@@88))  (or (= $generated@@89 $generated@@32) (= ($generated@@86 $generated@@89) ($generated@@70 $generated@@87 $generated@@88))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@89 ($generated@@70 $generated@@87 $generated@@88)))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (and ($generated@@90 $generated@@92) (<= ($generated@@25 $generated@@92) ($generated@@25 $generated@@91))) (and (= ($generated@@90 ($generated@@23 $generated@@91 $generated@@92)) ($generated@@90 $generated@@91)) (= ($generated@@25 ($generated@@23 $generated@@91 $generated@@92)) (- ($generated@@25 $generated@@91) ($generated@@25 $generated@@92)))))
 :pattern ( ($generated@@23 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 Int) ) (!  (=> (<= 0 $generated@@93) (and ($generated@@90 ($generated@@24 $generated@@93)) (= ($generated@@25 ($generated@@24 $generated@@93)) $generated@@93)))
 :pattern ( ($generated@@24 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@81 $generated@@34 $generated@@96 ($generated@@35 $generated@@94 $generated@@95) $generated@@97) ($generated@@81 $generated@@34 $generated@@96 ($generated@@70 $generated@@94 $generated@@95) $generated@@97))
 :pattern ( ($generated@@81 $generated@@34 $generated@@96 ($generated@@35 $generated@@94 $generated@@95) $generated@@97))
 :pattern ( ($generated@@81 $generated@@34 $generated@@96 ($generated@@70 $generated@@94 $generated@@95) $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@30 $generated@@98 $generated@@99 $generated@@100 ($generated@@31 $generated@@101) $generated@@102) ($generated@@30 $generated@@98 $generated@@99 $generated@@100 $generated@@101 $generated@@102))
 :pattern ( ($generated@@30 $generated@@98 $generated@@99 $generated@@100 ($generated@@31 $generated@@101) $generated@@102))
)))
(assert  (=> (<= 0 $generated@@29) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (or ($generated@@103 $generated@@104 $generated@@105 $generated@@106 $generated@@108) (and (< 0 $generated@@29) (and (or (not (= $generated@@108 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@108 ($generated@@35 $generated@@104 $generated@@105))))) (and ($generated@@103 $generated@@104 $generated@@105 $generated@@106 $generated@@108) (= ($generated@@30 $generated@@104 $generated@@105 $generated@@106 ($generated@@31 $generated@@107) $generated@@108) ($generated@@30 $generated@@104 $generated@@105 $generated@@106 $generated@@107 $generated@@108))))
 :pattern ( ($generated@@30 $generated@@104 $generated@@105 $generated@@106 ($generated@@31 $generated@@107) $generated@@108))
))))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and (and (or (not (= $generated@@113 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@113 ($generated@@35 $generated@@109 $generated@@110))) ($generated@@30 $generated@@109 $generated@@110 $generated@@111 ($generated@@31 $generated@@112) $generated@@113)) (forall (($generated@@114 T@U) ) (! ($generated@@36 $generated@@109 $generated@@110 $generated@@111 ($generated@@31 $generated@@112) $generated@@113 $generated@@114)
 :pattern ( ($generated@@36 $generated@@109 $generated@@110 $generated@@111 ($generated@@31 $generated@@112) $generated@@113 $generated@@114))
)))
 :pattern ( ($generated@@30 $generated@@109 $generated@@110 $generated@@111 ($generated@@31 $generated@@112) $generated@@113))
))))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (or ($generated@@45 $generated@@115 $generated@@116 $generated@@117 ($generated@@43 $generated@@34 $generated@@119) ($generated@@43 $generated@@44 $generated@@120)) (and (< 1 $generated@@29) (and (or (not (= $generated@@119 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@119 ($generated@@35 $generated@@115 $generated@@116))))) (and (and (=> (< 0 ($generated@@25 $generated@@120)) ($generated@@45 $generated@@115 $generated@@116 $generated@@117 ($generated@@43 $generated@@34 $generated@@119) ($generated@@23 $generated@@120 ($generated@@24 1)))) (=> (=> (< 0 ($generated@@25 $generated@@120)) ($generated@@36 $generated@@115 $generated@@116 $generated@@117 ($generated@@31 $generated@@118) ($generated@@43 $generated@@34 $generated@@119) ($generated@@23 $generated@@120 ($generated@@24 1)))) (=> (= ($generated@@46 0) ($generated@@25 $generated@@120)) (forall (($generated@@121 T@U) ) (!  (=> ($generated@@19 $generated@@121 $generated@@120) ($generated@@45 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@121))
 :pattern ( ($generated@@36 $generated@@115 $generated@@116 $generated@@117 ($generated@@31 $generated@@118) $generated@@119 $generated@@121))
))))) (= ($generated@@36 $generated@@115 $generated@@116 $generated@@117 ($generated@@31 $generated@@118) ($generated@@43 $generated@@34 $generated@@119) ($generated@@43 $generated@@44 $generated@@120))  (and (=> (< 0 ($generated@@25 $generated@@120)) ($generated@@36 $generated@@115 $generated@@116 $generated@@117 ($generated@@31 $generated@@118) ($generated@@43 $generated@@34 $generated@@119) ($generated@@23 $generated@@120 ($generated@@24 1)))) (=> (= ($generated@@46 0) ($generated@@25 $generated@@120)) (forall (($generated@@122 T@U) ) (!  (=> ($generated@@19 $generated@@122 $generated@@120) ($generated@@36 $generated@@115 $generated@@116 $generated@@117 ($generated@@31 $generated@@118) $generated@@119 $generated@@122))
 :pattern ( ($generated@@36 $generated@@115 $generated@@116 $generated@@117 ($generated@@31 $generated@@118) $generated@@119 $generated@@122))
)))))))
 :weight 3
 :pattern ( ($generated@@36 $generated@@115 $generated@@116 $generated@@117 ($generated@@31 $generated@@118) ($generated@@43 $generated@@34 $generated@@119) ($generated@@43 $generated@@44 $generated@@120)))
))))
(assert  (and (and (and (and (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@123 $generated@@129 $generated@@130 ($generated@@126 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@131) $generated@@133) $generated@@131)
 :weight 0
)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@123 $generated@@134 $generated@@135 ($generated@@126 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@123 $generated@@134 $generated@@135 $generated@@137 $generated@@139)))
 :weight 0
))) (= ($generated@@3 $generated@@124) 5)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (= ($generated@@3 ($generated@@125 $generated@@140 $generated@@141)) 6))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@127 ($generated@@125 $generated@@142 $generated@@143)) $generated@@142)
 :pattern ( ($generated@@125 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@128 ($generated@@125 $generated@@144 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@125 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@81 $generated@@34 $generated@@148 ($generated@@70 $generated@@146 $generated@@147) $generated@@149)  (or (= $generated@@148 $generated@@32) ($generated@@8 ($generated@@66 $generated@@4 ($generated@@123 $generated@@124 $generated@@44 ($generated@@123 $generated@@34 ($generated@@125 $generated@@124 $generated@@44) $generated@@149 $generated@@148) $generated)))))
 :pattern ( ($generated@@81 $generated@@34 $generated@@148 ($generated@@70 $generated@@146 $generated@@147) $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (or ($generated@@19 $generated@@150 $generated@@151) (= $generated@@150 $generated@@151)) ($generated@@19 $generated@@151 $generated@@150))
 :pattern ( ($generated@@19 $generated@@150 $generated@@151) ($generated@@19 $generated@@151 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! (<= 0 ($generated@@25 $generated@@152))
 :pattern ( ($generated@@25 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@153 ($generated@@35 $generated@@154 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@35 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@156 ($generated@@35 $generated@@157 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@35 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@159 ($generated@@70 $generated@@160 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@70 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@162 ($generated@@70 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@70 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@66 $generated@@166 ($generated@@67 $generated@@166 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@67 $generated@@166 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (and (and (and (=> ($generated@@19 $generated@@167 $generated@@168) (or (not (= $generated@@167 $generated@@168)) (not true))) (=> (and ($generated@@90 $generated@@167) (not ($generated@@90 $generated@@168))) ($generated@@19 $generated@@167 $generated@@168))) (=> (and ($generated@@90 $generated@@167) ($generated@@90 $generated@@168)) (= ($generated@@19 $generated@@167 $generated@@168) (< ($generated@@25 $generated@@167) ($generated@@25 $generated@@168))))) (=> (and ($generated@@19 $generated@@167 $generated@@168) ($generated@@90 $generated@@168)) ($generated@@90 $generated@@167)))
 :pattern ( ($generated@@19 $generated@@167 $generated@@168))
)))
(assert  (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@169 $generated@@172 $generated@@173 $generated@@174 ($generated@@171 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@177 $generated@@178) $generated@@175)
 :weight 0
)) (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@169 $generated@@179 $generated@@180 $generated@@181 ($generated@@171 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@169 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@169 $generated@@188 $generated@@189 $generated@@190 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@169 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 Bool) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@8 ($generated@@169 $generated@@34 $generated@@124 $generated@@4 ($generated@@170 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@201 $generated@@202))  (=> (and (or (not (= $generated@@201 $generated@@197)) (not true)) ($generated@@8 ($generated@@66 $generated@@4 ($generated@@123 $generated@@124 $generated@@44 ($generated@@123 $generated@@34 ($generated@@125 $generated@@124 $generated@@44) $generated@@198 $generated@@201) $generated@@199)))) $generated@@200))
 :pattern ( ($generated@@169 $generated@@34 $generated@@124 $generated@@4 ($generated@@170 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (and (= ($generated@@203 ($generated@@35 $generated@@205 $generated@@206)) $generated@@0) (= ($generated@@204 ($generated@@35 $generated@@205 $generated@@206)) $generated@@2))
 :pattern ( ($generated@@35 $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (and (= ($generated@@203 ($generated@@70 $generated@@207 $generated@@208)) $generated@@1) (= ($generated@@204 ($generated@@70 $generated@@207 $generated@@208)) $generated@@2))
 :pattern ( ($generated@@70 $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ) (!  (=> ($generated@@90 $generated@@209) (= $generated@@209 ($generated@@24 ($generated@@25 $generated@@209))))
 :pattern ( ($generated@@25 $generated@@209))
 :pattern ( ($generated@@90 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and ($generated@@90 $generated@@211) (<= ($generated@@25 $generated@@211) ($generated@@25 $generated@@210))) (or (and (= $generated@@211 ($generated@@24 0)) (= ($generated@@23 $generated@@210 $generated@@211) $generated@@210)) (and (or (not (= $generated@@211 ($generated@@24 0))) (not true)) ($generated@@19 ($generated@@23 $generated@@210 $generated@@211) $generated@@210))))
 :pattern ( ($generated@@23 $generated@@210 $generated@@211))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (and (or (not (= $generated@@216 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@216 ($generated@@35 $generated@@212 $generated@@213))) (= $generated@@217 ($generated@@24 0))) ($generated@@36 $generated@@212 $generated@@213 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
 :pattern ( ($generated@@36 $generated@@212 $generated@@213 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 Int) ) (! (= ($generated@@67 $generated@@5 ($generated@@9 ($generated@@46 $generated@@218))) ($generated@@43 $generated@@44 ($generated@@67 $generated@@5 ($generated@@9 $generated@@218))))
 :pattern ( ($generated@@67 $generated@@5 ($generated@@9 ($generated@@46 $generated@@218))))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@T) ) (! (= ($generated@@67 $generated@@220 ($generated@@43 $generated@@220 $generated@@219)) ($generated@@43 $generated@@44 ($generated@@67 $generated@@220 $generated@@219)))
 :pattern ( ($generated@@67 $generated@@220 ($generated@@43 $generated@@220 $generated@@219)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@229  (=> (= $generated@@221 ($generated@@170 $generated@@32 $generated@@222 $generated false)) (=> (and (and ($generated@@223 $generated@@224) ($generated@@225 $generated@@224)) (and (= $generated@@222 $generated@@224) (= (ControlFlow 0 2) (- 0 1)))) (or (not (= $generated@@226 $generated@@32)) (not true))))))
(let (($generated@@230  (=> (and ($generated@@223 $generated@@222) ($generated@@225 $generated@@222)) (=> (and (and ($generated@@33 $generated@@34 $generated@@226 ($generated@@35 $generated@@227 $generated@@228)) ($generated@@81 $generated@@34 $generated@@226 ($generated@@35 $generated@@227 $generated@@228) $generated@@222)) (and (= 1 $generated@@29) (= (ControlFlow 0 3) 2))) $generated@@229))))
$generated@@230)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
