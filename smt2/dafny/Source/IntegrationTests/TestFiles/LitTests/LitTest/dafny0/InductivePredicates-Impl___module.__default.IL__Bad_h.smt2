(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U T@U) Bool)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (Int) T@U)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@T T@U T@U) Bool)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@U) Int)
(declare-fun $generated@@61 (Int) T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@110 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@111 (T@T T@T) T@T)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@T) T@T)
(declare-fun $generated@@115 (T@T) T@T)
(declare-fun $generated@@164 (Int Int) Int)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@28 $generated@@29) (=> ($generated@@23 $generated@@26 $generated@@28 $generated@@27) ($generated@@23 $generated@@26 $generated@@29 $generated@@27)))
 :pattern ( ($generated@@23 $generated@@26 $generated@@28 $generated@@27) ($generated@@24 $generated@@28 $generated@@30) ($generated@@24 $generated@@29 $generated@@30))
))))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@32 $generated@@33)) ($generated@@25 $generated@@31 $generated@@33))
 :pattern ( ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@32 $generated@@33))
 :pattern ( ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@31 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! ($generated@@34 $generated@@8 $generated@@36 $generated@@35 $generated@@37)
 :pattern ( ($generated@@34 $generated@@8 $generated@@36 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 Int) ($generated@@43 Int) ) (!  (=> (and (and (<= 0 $generated@@42) (<= 0 $generated@@43)) (<= (+ $generated@@42 $generated@@43) ($generated@@40 $generated@@41))) (= ($generated@@38 ($generated@@38 $generated@@41 ($generated@@39 $generated@@42)) ($generated@@39 $generated@@43)) ($generated@@38 $generated@@41 ($generated@@39 (+ $generated@@42 $generated@@43)))))
 :pattern ( ($generated@@38 ($generated@@38 $generated@@41 ($generated@@39 $generated@@42)) ($generated@@39 $generated@@43)))
)))
(assert (= ($generated@@44 $generated@@45) $generated@@3))
(assert (= ($generated@@6 $generated@@47) 3))
(assert ($generated@@46 $generated@@47 $generated@@45 $generated@@48))
(assert (forall (($generated@@50 Int) ) (! (= ($generated@@49 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@54 $generated@@55) (= ($generated@@44 $generated@@55) $generated@@2))
 :pattern ( ($generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@56 $generated@@57) (= ($generated@@44 $generated@@57) $generated@@3))
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@59 $generated@@63 $generated@@64) (and (< 2 $generated@@22) ($generated@@46 $generated@@47 $generated@@64 $generated@@48))) (and (and (=> (< 0 ($generated@@40 $generated@@63)) (=> (not (and ($generated@@54 $generated@@64) (= ($generated@@60 $generated@@64) ($generated@@49 0)))) (=> ($generated@@54 $generated@@64) (=> (<= ($generated@@49 2) ($generated@@60 $generated@@64)) ($generated@@59 ($generated@@38 $generated@@63 ($generated@@39 1)) ($generated@@61 (- ($generated@@60 $generated@@64) 2))))))) (=> (=> (< 0 ($generated@@40 $generated@@63)) (or (and ($generated@@54 $generated@@64) (= ($generated@@60 $generated@@64) ($generated@@49 0))) (and (and ($generated@@54 $generated@@64) (<= ($generated@@49 2) ($generated@@60 $generated@@64))) ($generated@@23 $generated@@62 ($generated@@38 $generated@@63 ($generated@@39 1)) ($generated@@61 (- ($generated@@60 $generated@@64) 2)))))) (=> (= ($generated@@49 0) ($generated@@40 $generated@@63)) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@24 $generated@@65 $generated@@63) ($generated@@59 $generated@@65 $generated@@64))
 :pattern ( ($generated@@23 $generated@@62 $generated@@65 $generated@@64))
))))) (= ($generated@@23 ($generated@@58 $generated@@62) $generated@@63 $generated@@64)  (and (=> (< 0 ($generated@@40 $generated@@63)) (or (and ($generated@@54 $generated@@64) (= ($generated@@60 $generated@@64) ($generated@@49 0))) (and (and ($generated@@54 $generated@@64) (<= ($generated@@49 2) ($generated@@60 $generated@@64))) ($generated@@23 $generated@@62 ($generated@@38 $generated@@63 ($generated@@39 1)) ($generated@@61 (- ($generated@@60 $generated@@64) 2)))))) (=> (= ($generated@@49 0) ($generated@@40 $generated@@63)) (exists (($generated@@66 T@U) ) (!  (and ($generated@@24 $generated@@66 $generated@@63) ($generated@@23 $generated@@62 $generated@@66 $generated@@64))
 :pattern ( ($generated@@23 $generated@@62 $generated@@66 $generated@@64))
)))))))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@62) $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 ($generated@@67 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@67 $generated@@70 $generated@@69))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and ($generated@@46 $generated@@47 $generated@@72 $generated@@48) (= $generated@@73 ($generated@@39 0))) (not ($generated@@23 $generated@@71 $generated@@73 $generated@@72)))
 :pattern ( ($generated@@23 $generated@@71 $generated@@73 $generated@@72))
))))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@56 $generated@@74) (= $generated@@74 $generated@@45))
 :pattern ( ($generated@@56 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@54 $generated@@75) (exists (($generated@@76 Int) ) (= $generated@@75 ($generated@@61 $generated@@76))))
 :pattern ( ($generated@@54 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@46 $generated@@8 $generated@@77 $generated@@35) (<= ($generated@@49 0) ($generated@@13 $generated@@77)))
 :pattern ( ($generated@@46 $generated@@8 $generated@@77 $generated@@35))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@23 ($generated@@58 $generated@@78) $generated@@79 $generated@@80) ($generated@@23 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and ($generated@@81 $generated@@83) (<= ($generated@@40 $generated@@83) ($generated@@40 $generated@@82))) (and (= ($generated@@81 ($generated@@38 $generated@@82 $generated@@83)) ($generated@@81 $generated@@82)) (= ($generated@@40 ($generated@@38 $generated@@82 $generated@@83)) (- ($generated@@40 $generated@@82) ($generated@@40 $generated@@83)))))
 :pattern ( ($generated@@38 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 Int) ) (!  (=> (<= 0 $generated@@84) (and ($generated@@81 ($generated@@39 $generated@@84)) (= ($generated@@40 ($generated@@39 $generated@@84)) $generated@@84)))
 :pattern ( ($generated@@39 $generated@@84))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@46 $generated@@47 ($generated@@61 $generated@@85) $generated@@48) ($generated@@46 $generated@@8 ($generated@@12 $generated@@85) $generated@@35))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@61 $generated@@85) $generated@@48))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@86 $generated@@87) (or ($generated@@54 $generated@@87) ($generated@@56 $generated@@87)))
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (or (or ($generated@@25 $generated@@88 $generated@@89) (= $generated@@88 $generated@@89)) ($generated@@25 $generated@@89 $generated@@88))
 :pattern ( ($generated@@25 $generated@@88 $generated@@89) ($generated@@25 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@24 $generated@@90 $generated@@91) ($generated@@25 $generated@@90 $generated@@91))
 :pattern ( ($generated@@24 $generated@@90 $generated@@91))
)))
(assert (= ($generated@@6 $generated@@92) 4))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or ($generated@@59 ($generated@@51 $generated@@92 $generated@@94) $generated@@95) (and (< 2 $generated@@22) ($generated@@46 $generated@@47 $generated@@95 $generated@@48))) (and (and (=> (< 0 ($generated@@40 $generated@@94)) (=> (not (and ($generated@@54 $generated@@95) (= ($generated@@60 $generated@@95) ($generated@@49 0)))) (=> ($generated@@54 $generated@@95) (=> (<= ($generated@@49 2) ($generated@@60 $generated@@95)) ($generated@@59 ($generated@@38 $generated@@94 ($generated@@39 1)) ($generated@@61 (- ($generated@@60 $generated@@95) 2))))))) (=> (=> (< 0 ($generated@@40 $generated@@94)) (or (and ($generated@@54 $generated@@95) (= ($generated@@60 $generated@@95) ($generated@@49 0))) (and (and ($generated@@54 $generated@@95) (<= ($generated@@49 2) ($generated@@60 $generated@@95))) ($generated@@23 ($generated@@58 $generated@@93) ($generated@@38 $generated@@94 ($generated@@39 1)) ($generated@@61 (- ($generated@@60 $generated@@95) 2)))))) (=> (= ($generated@@49 0) ($generated@@40 $generated@@94)) (forall (($generated@@96 T@U) ) (!  (=> ($generated@@24 $generated@@96 $generated@@94) ($generated@@59 $generated@@96 $generated@@95))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@93) $generated@@96 $generated@@95))
))))) (= ($generated@@23 ($generated@@58 $generated@@93) ($generated@@51 $generated@@92 $generated@@94) $generated@@95)  (and (=> (< 0 ($generated@@40 $generated@@94)) (or (and ($generated@@54 $generated@@95) (= ($generated@@60 $generated@@95) ($generated@@49 0))) (and (and ($generated@@54 $generated@@95) (<= ($generated@@49 2) ($generated@@60 $generated@@95))) ($generated@@23 ($generated@@58 $generated@@93) ($generated@@38 $generated@@94 ($generated@@39 1)) ($generated@@61 (- ($generated@@60 $generated@@95) 2)))))) (=> (= ($generated@@49 0) ($generated@@40 $generated@@94)) (exists (($generated@@97 T@U) ) (!  (and ($generated@@24 $generated@@97 $generated@@94) ($generated@@23 ($generated@@58 $generated@@93) $generated@@97 $generated@@95))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@93) $generated@@97 $generated@@95))
)))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@58 $generated@@93) ($generated@@51 $generated@@92 $generated@@94) $generated@@95))
))))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@46 $generated@@47 $generated@@98 $generated@@48) (or ($generated@@54 $generated@@98) ($generated@@56 $generated@@98)))
 :pattern ( ($generated@@56 $generated@@98) ($generated@@46 $generated@@47 $generated@@98 $generated@@48))
 :pattern ( ($generated@@54 $generated@@98) ($generated@@46 $generated@@47 $generated@@98 $generated@@48))
)))
(assert (forall (($generated@@99 T@U) ) (! (<= 0 ($generated@@40 $generated@@99))
 :pattern ( ($generated@@40 $generated@@99))
)))
(assert (forall (($generated@@100 Int) ) (! (= ($generated@@44 ($generated@@61 $generated@@100)) $generated@@2)
 :pattern ( ($generated@@61 $generated@@100))
)))
(assert (forall (($generated@@101 Int) ) (! (= ($generated@@60 ($generated@@61 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@61 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@67 $generated@@103 ($generated@@68 $generated@@103 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@68 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@104 $generated@@105) (or (not (= $generated@@104 $generated@@105)) (not true))) (=> (and ($generated@@81 $generated@@104) (not ($generated@@81 $generated@@105))) ($generated@@25 $generated@@104 $generated@@105))) (=> (and ($generated@@81 $generated@@104) ($generated@@81 $generated@@105)) (= ($generated@@25 $generated@@104 $generated@@105) (< ($generated@@40 $generated@@104) ($generated@@40 $generated@@105))))) (=> (and ($generated@@25 $generated@@104 $generated@@105) ($generated@@81 $generated@@105)) ($generated@@81 $generated@@104)))
 :pattern ( ($generated@@25 $generated@@104 $generated@@105))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@106 $generated@@116 $generated@@117 $generated@@118 ($generated@@112 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@121 $generated@@122) $generated@@119)
 :weight 0
)) (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@106 $generated@@123 $generated@@124 $generated@@125 ($generated@@112 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@106 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@106 $generated@@132 $generated@@133 $generated@@134 ($generated@@112 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@106 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)))) (= ($generated@@6 $generated@@107) 5)) (= ($generated@@6 $generated@@108) 6)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@110 $generated@@141 $generated@@142 ($generated@@113 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@143) $generated@@145) $generated@@143)
 :weight 0
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@150 $generated@@151) (= ($generated@@110 $generated@@146 $generated@@147 ($generated@@113 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@110 $generated@@146 $generated@@147 $generated@@149 $generated@@151)))
 :weight 0
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (= ($generated@@6 ($generated@@111 $generated@@152 $generated@@153)) 7))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@114 ($generated@@111 $generated@@154 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@111 $generated@@154 $generated@@155))
))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (! (= ($generated@@115 ($generated@@111 $generated@@156 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@111 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 Bool) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@11 ($generated@@106 $generated@@107 $generated@@108 $generated@@7 ($generated@@109 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))  (=> (and (or (not (= $generated@@162 $generated@@158)) (not true)) ($generated@@11 ($generated@@67 $generated@@7 ($generated@@110 $generated@@108 $generated@@92 ($generated@@110 $generated@@107 ($generated@@111 $generated@@108 $generated@@92) $generated@@159 $generated@@162) $generated@@160)))) $generated@@161))
 :pattern ( ($generated@@106 $generated@@107 $generated@@108 $generated@@7 ($generated@@109 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 Int) ($generated@@166 Int) ) (! (= ($generated@@164 $generated@@165 $generated@@166) (mod $generated@@165 $generated@@166))
 :pattern ( ($generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> ($generated@@81 $generated@@167) (= $generated@@167 ($generated@@39 ($generated@@40 $generated@@167))))
 :pattern ( ($generated@@40 $generated@@167))
 :pattern ( ($generated@@81 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and ($generated@@168 $generated@@170) ($generated@@46 $generated@@47 $generated@@169 $generated@@48)) ($generated@@34 $generated@@47 $generated@@169 $generated@@48 $generated@@170))
 :pattern ( ($generated@@34 $generated@@47 $generated@@169 $generated@@48 $generated@@170))
)))
(assert (= ($generated@@171 $generated@@35) $generated@@0))
(assert (= ($generated@@172 $generated@@35) $generated@@4))
(assert (= ($generated@@171 $generated@@48) $generated@@1))
(assert (= ($generated@@172 $generated@@48) $generated@@5))
(assert (= $generated@@45 ($generated@@51 $generated@@47 $generated@@45)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and ($generated@@81 $generated@@174) (<= ($generated@@40 $generated@@174) ($generated@@40 $generated@@173))) (or (and (= $generated@@174 ($generated@@39 0)) (= ($generated@@38 $generated@@173 $generated@@174) $generated@@173)) (and (or (not (= $generated@@174 ($generated@@39 0))) (not true)) ($generated@@25 ($generated@@38 $generated@@173 $generated@@174) $generated@@173))))
 :pattern ( ($generated@@38 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and ($generated@@168 $generated@@176) (and ($generated@@54 $generated@@175) ($generated@@34 $generated@@47 $generated@@175 $generated@@48 $generated@@176))) ($generated@@34 $generated@@8 ($generated@@12 ($generated@@60 $generated@@175)) $generated@@35 $generated@@176))
 :pattern ( ($generated@@34 $generated@@8 ($generated@@12 ($generated@@60 $generated@@175)) $generated@@35 $generated@@176))
)))
(assert (forall (($generated@@177 Int) ) (! (= ($generated@@68 $generated@@8 ($generated@@12 ($generated@@49 $generated@@177))) ($generated@@51 $generated@@92 ($generated@@68 $generated@@8 ($generated@@12 $generated@@177))))
 :pattern ( ($generated@@68 $generated@@8 ($generated@@12 ($generated@@49 $generated@@177))))
)))
(assert (forall (($generated@@178 Int) ) (! (= ($generated@@61 ($generated@@49 $generated@@178)) ($generated@@51 $generated@@47 ($generated@@61 $generated@@178)))
 :pattern ( ($generated@@61 ($generated@@49 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@68 $generated@@180 ($generated@@51 $generated@@180 $generated@@179)) ($generated@@51 $generated@@92 ($generated@@68 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@68 $generated@@180 ($generated@@51 $generated@@180 $generated@@179)))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (or ($generated@@59 ($generated@@51 $generated@@92 $generated@@182) ($generated@@51 $generated@@47 $generated@@183)) (and (< 2 $generated@@22) ($generated@@46 $generated@@47 $generated@@183 $generated@@48))) (and (and (=> (< 0 ($generated@@40 $generated@@182)) (=> (not (and ($generated@@54 ($generated@@51 $generated@@47 $generated@@183)) (= ($generated@@49 ($generated@@60 ($generated@@51 $generated@@47 $generated@@183))) ($generated@@49 0)))) (=> ($generated@@11 ($generated@@51 $generated@@7 ($generated@@10 ($generated@@54 ($generated@@51 $generated@@47 $generated@@183))))) (=> (<= ($generated@@49 2) ($generated@@49 ($generated@@60 ($generated@@51 $generated@@47 $generated@@183)))) ($generated@@59 ($generated@@38 $generated@@182 ($generated@@39 1)) ($generated@@51 $generated@@47 ($generated@@61 ($generated@@49 (- ($generated@@60 ($generated@@51 $generated@@47 $generated@@183)) 2))))))))) (=> (=> (< 0 ($generated@@40 $generated@@182)) (or (and ($generated@@54 ($generated@@51 $generated@@47 $generated@@183)) (= ($generated@@49 ($generated@@60 ($generated@@51 $generated@@47 $generated@@183))) ($generated@@49 0))) (and (and ($generated@@54 ($generated@@51 $generated@@47 $generated@@183)) (<= ($generated@@49 2) ($generated@@49 ($generated@@60 ($generated@@51 $generated@@47 $generated@@183))))) ($generated@@23 ($generated@@58 $generated@@181) ($generated@@38 $generated@@182 ($generated@@39 1)) ($generated@@51 $generated@@47 ($generated@@61 ($generated@@49 (- ($generated@@60 ($generated@@51 $generated@@47 $generated@@183)) 2)))))))) (=> (= ($generated@@49 0) ($generated@@40 $generated@@182)) (forall (($generated@@184 T@U) ) (!  (=> ($generated@@24 $generated@@184 $generated@@182) ($generated@@59 $generated@@184 $generated@@183))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@181) $generated@@184 $generated@@183))
))))) (= ($generated@@23 ($generated@@58 $generated@@181) ($generated@@51 $generated@@92 $generated@@182) ($generated@@51 $generated@@47 $generated@@183))  (and (=> (< 0 ($generated@@40 $generated@@182)) (or (and ($generated@@54 ($generated@@51 $generated@@47 $generated@@183)) (= ($generated@@49 ($generated@@60 ($generated@@51 $generated@@47 $generated@@183))) ($generated@@49 0))) (and (and ($generated@@54 ($generated@@51 $generated@@47 $generated@@183)) (<= ($generated@@49 2) ($generated@@49 ($generated@@60 ($generated@@51 $generated@@47 $generated@@183))))) ($generated@@23 ($generated@@58 $generated@@181) ($generated@@38 $generated@@182 ($generated@@39 1)) ($generated@@51 $generated@@47 ($generated@@61 ($generated@@49 (- ($generated@@60 ($generated@@51 $generated@@47 $generated@@183)) 2)))))))) (=> (= ($generated@@49 0) ($generated@@40 $generated@@182)) (exists (($generated@@185 T@U) ) (!  (and ($generated@@24 $generated@@185 $generated@@182) ($generated@@23 ($generated@@58 $generated@@181) $generated@@185 $generated@@183))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@181) $generated@@185 $generated@@183))
)))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@58 $generated@@181) ($generated@@51 $generated@@92 $generated@@182) ($generated@@51 $generated@@47 $generated@@183)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 (T@U) Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@196  (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@54 $generated@@186)) (=> ($generated@@54 $generated@@186) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@164 ($generated@@60 $generated@@186) ($generated@@49 2)) ($generated@@49 0)))))))
(let (($generated@@197  (=> (<= ($generated@@40 $generated@@187) 0) (=> (and (and (and ($generated@@168 $generated@@188) ($generated@@189 $generated@@188)) (= $generated@@190 $generated@@188)) (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@46 $generated@@47 $generated@@199 $generated@@48) (and ($generated@@25 $generated@@198 $generated@@187) ($generated@@23 ($generated@@58 $generated@@191) $generated@@198 $generated@@199))) (and ($generated@@54 $generated@@199) (= ($generated@@164 ($generated@@60 $generated@@199) ($generated@@49 2)) ($generated@@49 0))))
 :pattern ( ($generated@@60 $generated@@199) ($generated@@25 $generated@@198 $generated@@187))
 :pattern ( ($generated@@54 $generated@@199) ($generated@@25 $generated@@198 $generated@@187))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@191) $generated@@198 $generated@@199))
)) (= (ControlFlow 0 6) 2))) $generated@@196))))
(let (($generated@@200  (=> (< 0 ($generated@@40 $generated@@187)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@10 false)))) (=> ($generated@@11 ($generated@@51 $generated@@7 ($generated@@10 false))) (=> (= (ControlFlow 0 4) 2) $generated@@196))))))
(let (($generated@@201  (=> (and (= $generated@@192 ($generated@@109 $generated@@193 $generated@@194 $generated false)) ($generated@@86 $generated@@186)) (=> (and (and ($generated@@168 $generated@@190) ($generated@@189 $generated@@190)) (and (= $generated@@194 $generated@@190) (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@47 $generated@@203 $generated@@48) ($generated@@23 ($generated@@58 $generated@@191) $generated@@202 $generated@@203)) (or ($generated@@25 $generated@@202 $generated@@187) (and (= $generated@@202 $generated@@187) (< ($generated@@195 $generated@@203) ($generated@@195 $generated@@186))))) (and ($generated@@54 $generated@@203) (= ($generated@@164 ($generated@@60 $generated@@203) ($generated@@49 2)) ($generated@@49 0))))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@191) $generated@@202 $generated@@203))
)))) (and (=> (= (ControlFlow 0 7) 4) $generated@@200) (=> (= (ControlFlow 0 7) 6) $generated@@197))))))
(let (($generated@@204  (=> (and ($generated@@168 $generated@@194) ($generated@@189 $generated@@194)) (=> (and (and (and (and ($generated@@46 $generated@@47 $generated@@186 $generated@@48) ($generated@@34 $generated@@47 $generated@@186 $generated@@48 $generated@@194)) ($generated@@86 $generated@@186)) (= 3 $generated@@22)) (and (and ($generated@@59 $generated@@187 $generated@@186) (and ($generated@@23 ($generated@@58 $generated@@191) $generated@@187 $generated@@186) (and (=> (< 0 ($generated@@40 $generated@@187)) (or (and ($generated@@54 $generated@@186) (= ($generated@@60 $generated@@186) ($generated@@49 0))) (and (and ($generated@@54 $generated@@186) (<= ($generated@@49 2) ($generated@@60 $generated@@186))) ($generated@@23 ($generated@@58 $generated@@191) ($generated@@38 $generated@@187 ($generated@@39 1)) ($generated@@61 (- ($generated@@60 $generated@@186) 2)))))) (=> (= ($generated@@49 0) ($generated@@40 $generated@@187)) (exists (($generated@@205 T@U) ) (!  (and ($generated@@24 $generated@@205 $generated@@187) ($generated@@23 ($generated@@58 $generated@@191) $generated@@205 $generated@@186))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@191) $generated@@205 $generated@@186))
)))))) (= (ControlFlow 0 8) 7))) $generated@@201))))
$generated@@204))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
