(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@T T@T) T@T)
(declare-fun $generated@@42 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@68 (T@T T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (forall (($generated@@24 T@U) ) ($generated@@22 ($generated@@23 $generated@@24) $generated@@24)))
(assert (= ($generated@@6 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@29) $generated@@31) ($generated@@25 $generated@@26 $generated@@30 ($generated@@28 $generated@@29) $generated@@31))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@29) $generated@@31))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 ($generated@@28 $generated@@29) $generated@@31))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@34 ($generated@@32 $generated@@33) $generated@@35) ($generated@@25 $generated@@26 $generated@@34 ($generated@@23 $generated@@33) $generated@@35))
 :pattern ( ($generated@@25 $generated@@26 $generated@@34 ($generated@@32 $generated@@33) $generated@@35))
 :pattern ( ($generated@@25 $generated@@26 $generated@@34 ($generated@@23 $generated@@33) $generated@@35))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@38 $generated@@45 $generated@@46 ($generated@@42 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@49) $generated@@47)
 :weight 0
)) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (or (= $generated@@54 $generated@@55) (= ($generated@@38 $generated@@50 $generated@@51 ($generated@@42 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@55) ($generated@@38 $generated@@50 $generated@@51 $generated@@53 $generated@@55)))
 :weight 0
))) (= ($generated@@6 $generated@@39) 4)) (= ($generated@@6 $generated@@40) 5)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (= ($generated@@6 ($generated@@41 $generated@@56 $generated@@57)) 6))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@43 ($generated@@41 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@41 $generated@@58 $generated@@59))
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@44 ($generated@@41 $generated@@60 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@41 $generated@@60 $generated@@61))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@63 ($generated@@28 $generated@@62) $generated@@64)  (or (= $generated@@63 $generated@@36) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@26 ($generated@@41 $generated@@39 $generated@@40) $generated@@64 $generated@@63) $generated)))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@63 ($generated@@28 $generated@@62) $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@66 ($generated@@23 $generated@@65) $generated@@67)  (or (= $generated@@66 $generated@@36) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@26 ($generated@@41 $generated@@39 $generated@@40) $generated@@67 $generated@@66) $generated)))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@66 ($generated@@23 $generated@@65) $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@68 $generated@@26 $generated@@70 ($generated@@23 $generated@@69)) ($generated@@68 $generated@@26 $generated@@70 ($generated@@28 $generated@@69)))
 :pattern ( ($generated@@68 $generated@@26 $generated@@70 ($generated@@23 $generated@@69)))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 ($generated@@37 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@37 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@68 $generated@@26 $generated@@75 ($generated@@27 $generated@@74))  (and ($generated@@68 $generated@@26 $generated@@75 ($generated@@28 $generated@@74)) (or (not (= $generated@@75 $generated@@36)) (not true))))
 :pattern ( ($generated@@68 $generated@@26 $generated@@75 ($generated@@27 $generated@@74)))
 :pattern ( ($generated@@68 $generated@@26 $generated@@75 ($generated@@28 $generated@@74)))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@68 $generated@@26 $generated@@77 ($generated@@32 $generated@@76))  (and ($generated@@68 $generated@@26 $generated@@77 ($generated@@23 $generated@@76)) (or (not (= $generated@@77 $generated@@36)) (not true))))
 :pattern ( ($generated@@68 $generated@@26 $generated@@77 ($generated@@32 $generated@@76)))
 :pattern ( ($generated@@68 $generated@@26 $generated@@77 ($generated@@23 $generated@@76)))
)))
(assert (forall (($generated@@80 T@U) ) (!  (and (= ($generated@@78 ($generated@@27 $generated@@80)) $generated@@0) (= ($generated@@79 ($generated@@27 $generated@@80)) $generated@@4))
 :pattern ( ($generated@@27 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (!  (and (= ($generated@@78 ($generated@@32 $generated@@81)) $generated@@1) (= ($generated@@79 ($generated@@32 $generated@@81)) $generated@@5))
 :pattern ( ($generated@@32 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ) (!  (and (= ($generated@@78 ($generated@@28 $generated@@82)) $generated@@2) (= ($generated@@79 ($generated@@28 $generated@@82)) $generated@@4))
 :pattern ( ($generated@@28 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ) (!  (and (= ($generated@@78 ($generated@@23 $generated@@83)) $generated@@3) (= ($generated@@79 ($generated@@23 $generated@@83)) $generated@@5))
 :pattern ( ($generated@@23 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@68 $generated@@26 $generated@@86 ($generated@@23 $generated@@85))  (or (= $generated@@86 $generated@@36) (= ($generated@@84 $generated@@86) ($generated@@23 $generated@@85))))
 :pattern ( ($generated@@68 $generated@@26 $generated@@86 ($generated@@23 $generated@@85)))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@88 ($generated@@23 $generated@@87) $generated@@89) ($generated@@25 $generated@@26 $generated@@88 ($generated@@28 $generated@@87) $generated@@89))
 :pattern ( ($generated@@25 $generated@@26 $generated@@88 ($generated@@23 $generated@@87) $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@90 ($generated@@27 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@27 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@92 ($generated@@32 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@32 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@94 ($generated@@28 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@28 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@96 ($generated@@23 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@23 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@37 $generated@@99 ($generated@@71 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@71 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@68 $generated@@26 $generated@@101 ($generated@@28 $generated@@100))  (or (= $generated@@101 $generated@@36) ($generated@@22 ($generated@@84 $generated@@101) $generated@@100)))
 :pattern ( ($generated@@68 $generated@@26 $generated@@101 ($generated@@28 $generated@@100)))
)))
(assert  (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@102 $generated@@105 $generated@@106 $generated@@107 ($generated@@104 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@110 $generated@@111) $generated@@108)
 :weight 0
)) (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@102 $generated@@112 $generated@@113 $generated@@114 ($generated@@104 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@102 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@102 $generated@@121 $generated@@122 $generated@@123 ($generated@@104 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@102 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 Bool) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@11 ($generated@@102 $generated@@26 $generated@@39 $generated@@7 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))  (=> (and (or (not (= $generated@@134 $generated@@130)) (not true)) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@26 ($generated@@41 $generated@@39 $generated@@40) $generated@@131 $generated@@134) $generated@@132)))) $generated@@133))
 :pattern ( ($generated@@102 $generated@@26 $generated@@39 $generated@@7 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@136 () Bool)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () Bool)
(declare-fun $generated@@140 () Bool)
(declare-fun $generated@@141 () Bool)
(declare-fun $generated@@142 () Bool)
(declare-fun $generated@@143 () Bool)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@149  (=> (= $generated@@136  (=> ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)) ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)))) (=> (and (= $generated@@139 (= ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)) ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)))) (= (ControlFlow 0 2) (- 0 1))) $generated@@139))))
(let (($generated@@150  (=> (and (not ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138))) (= (ControlFlow 0 4) 2)) $generated@@149)))
(let (($generated@@151  (=> (and ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)) (= (ControlFlow 0 3) 2)) $generated@@149)))
(let (($generated@@152  (=> (= $generated@@140  (=> ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)) ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)))) (and (=> (= (ControlFlow 0 5) 3) $generated@@151) (=> (= (ControlFlow 0 5) 4) $generated@@150)))))
(let (($generated@@153  (=> (and (not ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138))) (= (ControlFlow 0 7) 5)) $generated@@152)))
(let (($generated@@154  (=> (and ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)) (= (ControlFlow 0 6) 5)) $generated@@152)))
(let (($generated@@155  (=> (= $generated@@141  (or ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)) ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)))) (and (=> (= (ControlFlow 0 8) 6) $generated@@154) (=> (= (ControlFlow 0 8) 7) $generated@@153)))))
(let (($generated@@156  (=> (and ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)) (= (ControlFlow 0 10) 8)) $generated@@155)))
(let (($generated@@157  (=> (and (not ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138))) (= (ControlFlow 0 9) 8)) $generated@@155)))
(let (($generated@@158  (=> (= $generated@@142  (and ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)) ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)))) (and (=> (= (ControlFlow 0 11) 9) $generated@@157) (=> (= (ControlFlow 0 11) 10) $generated@@156)))))
(let (($generated@@159  (=> (and (not ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138))) (= (ControlFlow 0 13) 11)) $generated@@158)))
(let (($generated@@160  (=> (and ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)) (= (ControlFlow 0 12) 11)) $generated@@158)))
(let (($generated@@161  (=> (= $generated@@143 (ite ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)) true false)) (and (=> (= (ControlFlow 0 14) 12) $generated@@160) (=> (= (ControlFlow 0 14) 13) $generated@@159)))))
(let (($generated@@162  (=> (and (not ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138))) (= (ControlFlow 0 16) 14)) $generated@@161)))
(let (($generated@@163  (=> (and ($generated@@68 $generated@@26 $generated@@137 ($generated@@32 $generated@@138)) (= (ControlFlow 0 15) 14)) $generated@@161)))
(let (($generated@@164  (=> (= $generated@@144 ($generated@@103 $generated@@36 $generated@@145 $generated false)) (and (=> (= (ControlFlow 0 17) 15) $generated@@163) (=> (= (ControlFlow 0 17) 16) $generated@@162)))))
(let (($generated@@165  (=> (and ($generated@@146 $generated@@145) ($generated@@147 $generated@@145)) (=> (and (and ($generated@@68 $generated@@26 $generated@@137 ($generated@@27 $generated@@138)) ($generated@@25 $generated@@26 $generated@@137 ($generated@@27 $generated@@138) $generated@@145)) (and (= 1 $generated@@148) (= (ControlFlow 0 18) 17))) $generated@@164))))
$generated@@165))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
