(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 (T@U T@U Int) Real)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@49 (T@U) Int)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T T@U T@U) Bool)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@73 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@99 (Int) Int)
(declare-fun $generated@@101 (T@T T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@105 () T@U)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@107 (T@U T@U) Bool)
(declare-fun $generated@@113 () Int)
(declare-fun $generated@@114 (T@U T@U Int) T@U)
(declare-fun $generated@@115 (T@U T@U Int) Bool)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@123 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@130 (T@U Int) T@U)
(declare-fun $generated@@136 (T@U T@U T@U) Bool)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@191 (T@U T@U Int) Bool)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@238 (T@U T@U Int) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert (= ($generated@@31 $generated@@4) 0))
(assert (= ($generated@@32 $generated) $generated@@1))
(assert (= ($generated@@32 $generated@@0) $generated@@2))
(assert (= ($generated@@33 $generated@@4) $generated@@5))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! ($generated@@34 $generated@@17 $generated@@36 $generated@@35 $generated@@37)
 :pattern ( ($generated@@34 $generated@@17 $generated@@36 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 Int) ) (! (= ($generated@@38 $generated@@44 $generated@@43 $generated@@45) ($generated@@24 ($generated@@39 $generated@@18 ($generated@@40 $generated@@35 $generated@@0 $generated@@44 ($generated@@41 $generated@@43) ($generated@@42 $generated@@17 ($generated@@21 $generated@@45))))))
 :pattern ( ($generated@@38 $generated@@44 $generated@@43 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ) (!  (not ($generated@@46 $generated@@47 $generated@@48))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48))
)))
(assert (= ($generated@@49 $generated@@50) 0))
(assert (= ($generated@@15 $generated@@52) 3))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@51 $generated@@52 $generated@@56 $generated@@53)  (or (= $generated@@56 $generated@@54) (= ($generated@@55 $generated@@56) $generated@@53)))
 :pattern ( ($generated@@51 $generated@@52 $generated@@56 $generated@@53))
)))
(assert (= ($generated@@15 $generated@@57) 4))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and (and ($generated@@51 $generated@@57 $generated@@60 ($generated@@58 $generated@@61 $generated@@62)) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@59 $generated@@65 $generated@@63) ($generated@@59 $generated@@65 $generated@@61))
 :pattern ( ($generated@@59 $generated@@65 $generated@@63))
 :pattern ( ($generated@@59 $generated@@65 $generated@@61))
))) (forall (($generated@@66 T@U) ) (!  (=> ($generated@@59 $generated@@66 $generated@@62) ($generated@@59 $generated@@66 $generated@@64))
 :pattern ( ($generated@@59 $generated@@66 $generated@@62))
 :pattern ( ($generated@@59 $generated@@66 $generated@@64))
))) ($generated@@51 $generated@@57 $generated@@60 ($generated@@58 $generated@@63 $generated@@64)))
 :pattern ( ($generated@@51 $generated@@57 $generated@@60 ($generated@@58 $generated@@61 $generated@@62)) ($generated@@51 $generated@@57 $generated@@60 ($generated@@58 $generated@@63 $generated@@64)))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@34 $generated@@52 $generated@@68 $generated@@67 $generated@@69) ($generated@@34 $generated@@52 $generated@@68 $generated@@53 $generated@@69))
 :pattern ( ($generated@@34 $generated@@52 $generated@@68 $generated@@67 $generated@@69))
 :pattern ( ($generated@@34 $generated@@52 $generated@@68 $generated@@53 $generated@@69))
)))
(assert (= ($generated@@31 $generated@@70) 0))
(assert (= ($generated@@71 $generated@@8 $generated@@14) $generated@@70))
(assert  (not ($generated@@72 $generated@@70)))
(assert  (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@73 $generated@@80 $generated@@81 ($generated@@77 $generated@@80 $generated@@81 $generated@@83 $generated@@84 $generated@@82) $generated@@84) $generated@@82)
 :weight 0
)) (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (or (= $generated@@89 $generated@@90) (= ($generated@@73 $generated@@85 $generated@@86 ($generated@@77 $generated@@85 $generated@@86 $generated@@88 $generated@@89 $generated@@87) $generated@@90) ($generated@@73 $generated@@85 $generated@@86 $generated@@88 $generated@@90)))
 :weight 0
))) (= ($generated@@15 $generated@@74) 5)) (= ($generated@@15 $generated@@75) 6)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@15 ($generated@@76 $generated@@91 $generated@@92)) 7))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@78 ($generated@@76 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@76 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@76 $generated@@95 $generated@@96))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@34 $generated@@52 $generated@@97 $generated@@53 $generated@@98)  (or (= $generated@@97 $generated@@54) ($generated@@20 ($generated@@39 $generated@@16 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@52 ($generated@@76 $generated@@74 $generated@@75) $generated@@98 $generated@@97) $generated@@4)))))
 :pattern ( ($generated@@34 $generated@@52 $generated@@97 $generated@@53 $generated@@98))
)))
(assert (forall (($generated@@100 Int) ) (! (= ($generated@@99 $generated@@100) $generated@@100)
 :pattern ( ($generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@101 $generated@@103 $generated@@102) $generated@@102)
 :pattern ( ($generated@@101 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (and ($generated@@106 $generated@@110) (and ($generated@@59 $generated@@112 $generated@@108) ($generated@@51 $generated@@57 $generated@@111 ($generated@@58 $generated@@108 $generated@@109)))) (= ($generated@@107 ($generated@@104 $generated@@108 $generated@@109 $generated@@105 $generated@@111 $generated@@112) $generated@@47) ($generated@@107 ($generated@@104 $generated@@108 $generated@@109 $generated@@110 $generated@@111 $generated@@112) $generated@@47)))
 :pattern ( ($generated@@104 $generated@@108 $generated@@109 $generated@@105 $generated@@111 $generated@@112) ($generated@@106 $generated@@110))
 :pattern ( ($generated@@104 $generated@@108 $generated@@109 $generated@@110 $generated@@111 $generated@@112))
)))
(assert (= ($generated@@15 $generated@@116) 8))
(assert  (=> (<= 1 $generated@@113) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 Int) ) (!  (=> (or ($generated@@115 $generated@@118 $generated@@119 $generated@@120) (and (< 1 $generated@@113) (and (and ($generated@@106 $generated@@118) (and (or (not (= $generated@@119 $generated@@54)) (not true)) (and ($generated@@51 $generated@@52 $generated@@119 $generated@@67) ($generated@@34 $generated@@52 $generated@@119 $generated@@67 $generated@@118)))) (<= ($generated@@99 0) $generated@@120)))) ($generated@@51 $generated@@116 ($generated@@114 $generated@@118 $generated@@119 $generated@@120) ($generated@@117 $generated@@0)))
 :pattern ( ($generated@@114 $generated@@118 $generated@@119 $generated@@120))
))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@42 $generated@@122 ($generated@@39 $generated@@122 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@39 $generated@@122 $generated@@121))
)))
(assert  (=> (<= 1 $generated@@113) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 Int) ) (!  (=> (or ($generated@@115 $generated@@124 $generated@@125 $generated@@126) (and (< 1 $generated@@113) (and (and ($generated@@106 $generated@@124) (and (or (not (= $generated@@125 $generated@@54)) (not true)) (and ($generated@@51 $generated@@52 $generated@@125 $generated@@67) ($generated@@34 $generated@@52 $generated@@125 $generated@@67 $generated@@124)))) (<= ($generated@@99 0) $generated@@126)))) (= ($generated@@114 $generated@@124 $generated@@125 $generated@@126) ($generated@@123 $generated@@0 $generated@@124 $generated@@126 ($generated@@41 $generated@@125))))
 :pattern ( ($generated@@114 $generated@@124 $generated@@125 $generated@@126) ($generated@@106 $generated@@124))
))))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@51 $generated@@17 $generated@@127 $generated@@35) (<= ($generated@@99 0) ($generated@@22 $generated@@127)))
 :pattern ( ($generated@@51 $generated@@17 $generated@@127 $generated@@35))
)))
(assert ($generated@@72 $generated@@4))
(assert ($generated@@106 $generated@@105))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and ($generated@@106 $generated@@128) (and (or (not (= $generated@@129 $generated@@54)) (not true)) (= ($generated@@55 $generated@@129) $generated@@53))) ($generated@@20 ($generated@@39 $generated@@16 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@52 ($generated@@76 $generated@@74 $generated@@75) $generated@@128 $generated@@129) $generated@@4)))) ($generated@@34 $generated@@18 ($generated@@39 $generated@@18 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@52 ($generated@@76 $generated@@74 $generated@@75) $generated@@128 $generated@@129) $generated@@70)) $generated@@0 $generated@@128))
 :pattern ( ($generated@@39 $generated@@18 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@52 ($generated@@76 $generated@@74 $generated@@75) $generated@@128 $generated@@129) $generated@@70)))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 Int) ($generated@@134 T@U) ($generated@@135 Int) ) (!  (=> (and (and ($generated@@106 $generated@@132) (<= 0 $generated@@135)) (< $generated@@135 $generated@@133)) (= ($generated@@130 ($generated@@123 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135) ($generated@@40 $generated $generated@@131 $generated@@132 $generated@@134 ($generated@@42 $generated@@17 ($generated@@21 $generated@@135)))))
 :pattern ( ($generated@@130 ($generated@@123 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@T) ) (! (= ($generated@@136 ($generated@@42 $generated@@140 $generated@@137) $generated@@138 $generated@@139) ($generated@@34 $generated@@140 $generated@@137 $generated@@138 $generated@@139))
 :pattern ( ($generated@@136 ($generated@@42 $generated@@140 $generated@@137) $generated@@138 $generated@@139))
)))
(assert  (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@141 $generated@@144 $generated@@145 $generated@@146 ($generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@141 $generated@@151 $generated@@152 $generated@@153 ($generated@@143 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@141 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@141 $generated@@160 $generated@@161 $generated@@162 ($generated@@143 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@141 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@20 ($generated@@141 $generated@@52 $generated@@74 $generated@@16 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@20 ($generated@@39 $generated@@16 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@52 ($generated@@76 $generated@@74 $generated@@75) $generated@@170 $generated@@173) $generated@@171)))) (= $generated@@173 $generated@@172)))
 :pattern ( ($generated@@141 $generated@@52 $generated@@74 $generated@@16 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> ($generated@@59 $generated@@175 $generated@@35) (and (= ($generated@@42 $generated@@17 ($generated@@39 $generated@@17 $generated@@175)) $generated@@175) ($generated@@51 $generated@@17 ($generated@@39 $generated@@17 $generated@@175) $generated@@35)))
 :pattern ( ($generated@@59 $generated@@175 $generated@@35))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> ($generated@@59 $generated@@176 $generated@@53) (and (= ($generated@@42 $generated@@52 ($generated@@39 $generated@@52 $generated@@176)) $generated@@176) ($generated@@51 $generated@@52 ($generated@@39 $generated@@52 $generated@@176) $generated@@53)))
 :pattern ( ($generated@@59 $generated@@176 $generated@@53))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> ($generated@@59 $generated@@177 $generated@@67) (and (= ($generated@@42 $generated@@52 ($generated@@39 $generated@@52 $generated@@177)) $generated@@177) ($generated@@51 $generated@@52 ($generated@@39 $generated@@52 $generated@@177) $generated@@67)))
 :pattern ( ($generated@@59 $generated@@177 $generated@@67))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@51 $generated@@52 $generated@@178 $generated@@67)  (and ($generated@@51 $generated@@52 $generated@@178 $generated@@53) (or (not (= $generated@@178 $generated@@54)) (not true))))
 :pattern ( ($generated@@51 $generated@@52 $generated@@178 $generated@@67))
 :pattern ( ($generated@@51 $generated@@52 $generated@@178 $generated@@53))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and ($generated@@106 $generated@@183) ($generated@@34 $generated@@57 $generated@@180 ($generated@@58 $generated@@181 $generated@@182) $generated@@183)) (forall (($generated@@184 T@U) ) (!  (=> (and ($generated@@136 $generated@@184 $generated@@181 $generated@@183) ($generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180 $generated@@184)) ($generated@@136 ($generated@@40 $generated@@181 $generated@@182 $generated@@183 $generated@@180 $generated@@184) $generated@@182 $generated@@183))
 :pattern ( ($generated@@40 $generated@@181 $generated@@182 $generated@@183 $generated@@180 $generated@@184))
)))
 :pattern ( ($generated@@34 $generated@@57 $generated@@180 ($generated@@58 $generated@@181 $generated@@182) $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@46 ($generated@@104 $generated@@35 $generated@@0 $generated@@187 ($generated@@41 $generated@@186) $generated@@188) $generated@@185) (= ($generated@@39 $generated@@52 $generated@@185) $generated@@186))
 :pattern ( ($generated@@46 ($generated@@104 $generated@@35 $generated@@0 $generated@@187 ($generated@@41 $generated@@186) $generated@@188) $generated@@185))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@107 $generated@@189 $generated@@190) (= $generated@@189 $generated@@190))
 :pattern ( ($generated@@107 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 Int) ) (!  (=> (and (and ($generated@@106 $generated@@192) (and (or (not (= $generated@@193 $generated@@54)) (not true)) (and ($generated@@51 $generated@@52 $generated@@193 $generated@@67) ($generated@@34 $generated@@52 $generated@@193 $generated@@67 $generated@@192)))) (<= ($generated@@99 0) $generated@@194)) (= ($generated@@191 $generated@@192 $generated@@193 $generated@@194) true))
 :pattern ( ($generated@@191 $generated@@192 $generated@@193 $generated@@194) ($generated@@106 $generated@@192))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@51 $generated@@57 $generated@@195 ($generated@@58 $generated@@196 $generated@@197)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and ($generated@@106 $generated@@198) ($generated@@59 $generated@@199 $generated@@196)) ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@195 $generated@@199)) ($generated@@59 ($generated@@40 $generated@@196 $generated@@197 $generated@@198 $generated@@195 $generated@@199) $generated@@197))
 :pattern ( ($generated@@40 $generated@@196 $generated@@197 $generated@@198 $generated@@195 $generated@@199))
)))
 :pattern ( ($generated@@51 $generated@@57 $generated@@195 ($generated@@58 $generated@@196 $generated@@197)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (and (= ($generated@@200 ($generated@@71 $generated@@201 $generated@@202)) $generated@@201) (= ($generated@@33 ($generated@@71 $generated@@201 $generated@@202)) $generated@@202))
 :pattern ( ($generated@@71 $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@179 $generated@@35 $generated@@0 $generated@@204 ($generated@@41 $generated@@203) $generated@@205) ($generated@@191 $generated@@204 $generated@@203 ($generated@@22 ($generated@@39 $generated@@17 $generated@@205))))
 :pattern ( ($generated@@179 $generated@@35 $generated@@0 $generated@@204 ($generated@@41 $generated@@203) $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (!  (=> ($generated@@59 $generated@@206 $generated) (and (= ($generated@@42 $generated@@17 ($generated@@39 $generated@@17 $generated@@206)) $generated@@206) ($generated@@51 $generated@@17 ($generated@@39 $generated@@17 $generated@@206) $generated)))
 :pattern ( ($generated@@59 $generated@@206 $generated))
)))
(assert (forall (($generated@@207 T@U) ) (!  (=> ($generated@@59 $generated@@207 $generated@@0) (and (= ($generated@@42 $generated@@18 ($generated@@39 $generated@@18 $generated@@207)) $generated@@207) ($generated@@51 $generated@@18 ($generated@@39 $generated@@18 $generated@@207) $generated@@0)))
 :pattern ( ($generated@@59 $generated@@207 $generated@@0))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@T) ) (! (= ($generated@@59 ($generated@@42 $generated@@210 $generated@@208) $generated@@209) ($generated@@51 $generated@@210 $generated@@208 $generated@@209))
 :pattern ( ($generated@@59 ($generated@@42 $generated@@210 $generated@@208) $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ) (! (<= 0 ($generated@@49 $generated@@211))
 :pattern ( ($generated@@49 $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@212 ($generated@@58 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@58 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@215 ($generated@@58 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@58 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (= ($generated@@34 $generated@@116 $generated@@218 ($generated@@117 $generated@@219) $generated@@220) (forall (($generated@@221 Int) ) (!  (=> (and (<= 0 $generated@@221) (< $generated@@221 ($generated@@49 $generated@@218))) ($generated@@136 ($generated@@130 $generated@@218 $generated@@221) $generated@@219 $generated@@220))
 :pattern ( ($generated@@130 $generated@@218 $generated@@221))
)))
 :pattern ( ($generated@@34 $generated@@116 $generated@@218 ($generated@@117 $generated@@219) $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ) (! (= ($generated@@222 ($generated@@117 $generated@@223)) $generated@@223)
 :pattern ( ($generated@@117 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ) (! (= ($generated@@32 ($generated@@117 $generated@@224)) $generated@@3)
 :pattern ( ($generated@@117 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@T) ) (! (= ($generated@@39 $generated@@226 ($generated@@42 $generated@@226 $generated@@225)) $generated@@225)
 :pattern ( ($generated@@42 $generated@@226 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and ($generated@@106 $generated@@227) (and (or (not (= $generated@@228 $generated@@54)) (not true)) (= ($generated@@55 $generated@@228) $generated@@53))) ($generated@@51 $generated@@18 ($generated@@39 $generated@@18 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@52 ($generated@@76 $generated@@74 $generated@@75) $generated@@227 $generated@@228) $generated@@70)) $generated@@0))
 :pattern ( ($generated@@39 $generated@@18 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@52 ($generated@@76 $generated@@74 $generated@@75) $generated@@227 $generated@@228) $generated@@70)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> ($generated@@106 $generated@@232) (= ($generated@@34 $generated@@57 $generated@@229 ($generated@@58 $generated@@230 $generated@@231) $generated@@232) (forall (($generated@@233 T@U) ) (!  (=> (and (and ($generated@@59 $generated@@233 $generated@@230) ($generated@@136 $generated@@233 $generated@@230 $generated@@232)) ($generated@@179 $generated@@230 $generated@@231 $generated@@232 $generated@@229 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (or (not (= $generated@@234 $generated@@54)) (not true)) ($generated@@46 ($generated@@104 $generated@@230 $generated@@231 $generated@@232 $generated@@229 $generated@@233) ($generated@@42 $generated@@52 $generated@@234))) ($generated@@20 ($generated@@39 $generated@@16 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@52 ($generated@@76 $generated@@74 $generated@@75) $generated@@232 $generated@@234) $generated@@4))))
 :pattern ( ($generated@@46 ($generated@@104 $generated@@230 $generated@@231 $generated@@232 $generated@@229 $generated@@233) ($generated@@42 $generated@@52 $generated@@234)))
)))
 :pattern ( ($generated@@40 $generated@@230 $generated@@231 $generated@@232 $generated@@229 $generated@@233))
 :pattern ( ($generated@@104 $generated@@230 $generated@@231 $generated@@232 $generated@@229 $generated@@233))
))))
 :pattern ( ($generated@@34 $generated@@57 $generated@@229 ($generated@@58 $generated@@230 $generated@@231) $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> ($generated@@59 $generated@@237 ($generated@@58 $generated@@235 $generated@@236)) (and (= ($generated@@42 $generated@@57 ($generated@@39 $generated@@57 $generated@@237)) $generated@@237) ($generated@@51 $generated@@57 ($generated@@39 $generated@@57 $generated@@237) ($generated@@58 $generated@@235 $generated@@236))))
 :pattern ( ($generated@@59 $generated@@237 ($generated@@58 $generated@@235 $generated@@236)))
)))
(assert  (=> (<= 0 $generated@@113) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Int) ) (!  (=> (or ($generated@@238 $generated@@239 $generated@@240 $generated@@241) (and (< 0 $generated@@113) (and (and ($generated@@106 $generated@@239) (and (or (not (= $generated@@240 $generated@@54)) (not true)) (and ($generated@@51 $generated@@52 $generated@@240 $generated@@67) ($generated@@34 $generated@@52 $generated@@240 $generated@@67 $generated@@239)))) (<= ($generated@@99 0) $generated@@241)))) (= ($generated@@38 $generated@@239 $generated@@240 $generated@@241) (ite (< $generated@@241 20) 2.5 ($generated@@24 ($generated@@39 $generated@@18 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@52 ($generated@@76 $generated@@74 $generated@@75) $generated@@239 $generated@@240) $generated@@70))))))
 :pattern ( ($generated@@38 $generated@@239 $generated@@240 $generated@@241) ($generated@@106 $generated@@239))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (and (= ($generated@@32 ($generated@@58 $generated@@243 $generated@@244)) $generated@@7) (= ($generated@@242 ($generated@@58 $generated@@243 $generated@@244)) $generated@@12))
 :pattern ( ($generated@@58 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and ($generated@@106 $generated@@247) (and ($generated@@59 $generated@@249 $generated@@245) ($generated@@51 $generated@@57 $generated@@248 ($generated@@58 $generated@@245 $generated@@246)))) ($generated@@107 ($generated@@104 $generated@@245 $generated@@246 $generated@@105 $generated@@248 $generated@@249) $generated@@47)) (= ($generated@@179 $generated@@245 $generated@@246 $generated@@105 $generated@@248 $generated@@249) ($generated@@179 $generated@@245 $generated@@246 $generated@@247 $generated@@248 $generated@@249)))
 :pattern ( ($generated@@179 $generated@@245 $generated@@246 $generated@@105 $generated@@248 $generated@@249) ($generated@@106 $generated@@247))
 :pattern ( ($generated@@179 $generated@@245 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> ($generated@@59 $generated@@250 ($generated@@117 $generated@@251)) (and (= ($generated@@42 $generated@@116 ($generated@@39 $generated@@116 $generated@@250)) $generated@@250) ($generated@@51 $generated@@116 ($generated@@39 $generated@@116 $generated@@250) ($generated@@117 $generated@@251))))
 :pattern ( ($generated@@59 $generated@@250 ($generated@@117 $generated@@251)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@0 $generated@@253 ($generated@@41 $generated@@252) $generated@@254) ($generated@@42 $generated@@18 ($generated@@23 ($generated@@38 $generated@@253 $generated@@252 ($generated@@22 ($generated@@39 $generated@@17 $generated@@254))))))
 :pattern ( ($generated@@40 $generated@@35 $generated@@0 $generated@@253 ($generated@@41 $generated@@252) $generated@@254))
)))
(assert (= ($generated@@32 $generated@@35) $generated@@6))
(assert (= ($generated@@242 $generated@@35) $generated@@11))
(assert (= ($generated@@32 $generated@@53) $generated@@9))
(assert (= ($generated@@242 $generated@@53) $generated@@13))
(assert (= ($generated@@32 $generated@@67) $generated@@10))
(assert (= ($generated@@242 $generated@@67) $generated@@13))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Int) ($generated@@258 T@U) ) (!  (=> (and ($generated@@106 $generated@@256) (<= 0 $generated@@257)) (= ($generated@@49 ($generated@@123 $generated@@255 $generated@@256 $generated@@257 $generated@@258)) $generated@@257))
 :pattern ( ($generated@@49 ($generated@@123 $generated@@255 $generated@@256 $generated@@257 $generated@@258)))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (! (= ($generated@@107 $generated@@259 $generated@@260) (forall (($generated@@261 T@U) ) (! (= ($generated@@46 $generated@@259 $generated@@261) ($generated@@46 $generated@@260 $generated@@261))
 :pattern ( ($generated@@46 $generated@@259 $generated@@261))
 :pattern ( ($generated@@46 $generated@@260 $generated@@261))
)))
 :pattern ( ($generated@@107 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@42 $generated@@17 ($generated@@21 ($generated@@99 $generated@@262))) ($generated@@101 $generated@@75 ($generated@@42 $generated@@17 ($generated@@21 $generated@@262))))
 :pattern ( ($generated@@42 $generated@@17 ($generated@@21 ($generated@@99 $generated@@262))))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@T) ) (! (= ($generated@@42 $generated@@264 ($generated@@101 $generated@@264 $generated@@263)) ($generated@@101 $generated@@75 ($generated@@42 $generated@@264 $generated@@263)))
 :pattern ( ($generated@@42 $generated@@264 ($generated@@101 $generated@@264 $generated@@263)))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= ($generated@@49 $generated@@265) 0) (= $generated@@265 $generated@@50))
 :pattern ( ($generated@@49 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! ($generated@@34 $generated@@17 $generated@@267 $generated $generated@@266)
 :pattern ( ($generated@@34 $generated@@17 $generated@@267 $generated $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! ($generated@@34 $generated@@18 $generated@@269 $generated@@0 $generated@@268)
 :pattern ( ($generated@@34 $generated@@18 $generated@@269 $generated@@0 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (! (= ($generated@@51 $generated@@116 $generated@@270 ($generated@@117 $generated@@271)) (forall (($generated@@272 Int) ) (!  (=> (and (<= 0 $generated@@272) (< $generated@@272 ($generated@@49 $generated@@270))) ($generated@@59 ($generated@@130 $generated@@270 $generated@@272) $generated@@271))
 :pattern ( ($generated@@130 $generated@@270 $generated@@272))
)))
 :pattern ( ($generated@@51 $generated@@116 $generated@@270 ($generated@@117 $generated@@271)))
)))
(assert (forall (($generated@@273 T@U) ) (! ($generated@@51 $generated@@17 $generated@@273 $generated)
 :pattern ( ($generated@@51 $generated@@17 $generated@@273 $generated))
)))
(assert (forall (($generated@@274 T@U) ) (! ($generated@@51 $generated@@18 $generated@@274 $generated@@0)
 :pattern ( ($generated@@51 $generated@@18 $generated@@274 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@275 () Int)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () Bool)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@281  (and (=> (= (ControlFlow 0 3) (- 0 6)) (<= 0 $generated@@275)) (=> (<= 0 $generated@@275) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (not (= 0 $generated@@113)) (not true))) (=> (or (not (= 0 $generated@@113)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (forall (($generated@@282 Int) )  (=> (and (<= 0 $generated@@282) (< $generated@@282 $generated@@275)) ($generated@@179 $generated@@35 $generated@@0 $generated@@276 ($generated@@41 $generated@@277) ($generated@@42 $generated@@17 ($generated@@21 $generated@@282)))))) (=> (and (and (= $generated@@278 (forall (($generated@@283 Int) )  (=> (and (<= 0 $generated@@283) (< $generated@@283 $generated@@275)) (forall (($generated@@284 T@U) ($generated@@285 T@U) )  (=> (and (and (or (not (= $generated@@284 $generated@@54)) (not true)) ($generated@@20 ($generated@@39 $generated@@16 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@52 ($generated@@76 $generated@@74 $generated@@75) $generated@@276 $generated@@284) $generated@@4)))) ($generated@@46 ($generated@@104 $generated@@35 $generated@@0 $generated@@276 ($generated@@41 $generated@@277) ($generated@@42 $generated@@17 ($generated@@21 $generated@@283))) ($generated@@42 $generated@@52 $generated@@284))) ($generated@@20 ($generated@@141 $generated@@52 $generated@@74 $generated@@16 $generated@@279 $generated@@284 $generated@@285))))))) (= ($generated@@114 $generated@@276 $generated@@277 $generated@@275) ($generated@@123 $generated@@0 $generated@@276 $generated@@275 ($generated@@41 $generated@@277)))) (and ($generated@@51 $generated@@116 ($generated@@114 $generated@@276 $generated@@277 $generated@@275) ($generated@@117 $generated@@0)) (= (ControlFlow 0 3) (- 0 2)))) $generated@@278))))))))
(let (($generated@@286 true))
(let (($generated@@287  (=> (= $generated@@279 ($generated@@142 $generated@@54 $generated@@276 $generated@@4 $generated@@277)) (and (=> (= (ControlFlow 0 7) 1) $generated@@286) (=> (= (ControlFlow 0 7) 3) $generated@@281)))))
(let (($generated@@288  (=> (and ($generated@@106 $generated@@276) ($generated@@280 $generated@@276)) (=> (and (and (and (or (not (= $generated@@277 $generated@@54)) (not true)) (and ($generated@@51 $generated@@52 $generated@@277 $generated@@67) ($generated@@34 $generated@@52 $generated@@277 $generated@@67 $generated@@276))) (<= ($generated@@99 0) $generated@@275)) (and (= 1 $generated@@113) (= (ControlFlow 0 8) 7))) $generated@@287))))
$generated@@288)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
