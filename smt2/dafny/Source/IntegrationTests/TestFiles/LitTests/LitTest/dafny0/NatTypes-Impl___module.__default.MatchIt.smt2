(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (Int) Int)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 (Int T@U T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@113 (T@U) Bool)
(declare-fun $generated@@115 (T@T T@U) T@U)
(declare-fun $generated@@122 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Int)
(declare-fun $generated@@178 (T@U) Int)
(declare-fun $generated@@190 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@192 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert  (and (= ($generated@@9 $generated@@29) 3) (= ($generated@@9 $generated@@38) 4)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (or ($generated@@30 ($generated@@28 $generated@@29 $generated@@40)) (and (< 1 $generated@@25) ($generated@@31 $generated@@29 $generated@@40 ($generated@@32 $generated@@33)))) (and (=> (not ($generated@@14 ($generated@@28 $generated@@10 ($generated@@13 ($generated@@34 ($generated@@28 $generated@@29 $generated@@40)))))) (let (($generated@@41 ($generated@@28 $generated@@29 ($generated@@35 ($generated@@28 $generated@@29 $generated@@40)))))
($generated@@30 $generated@@41))) (= ($generated@@26 ($generated@@27 $generated@@39) ($generated@@28 $generated@@29 $generated@@40)) (ite ($generated@@34 ($generated@@28 $generated@@29 $generated@@40)) 0 (let (($generated@@42 ($generated@@28 $generated@@29 ($generated@@35 ($generated@@28 $generated@@29 $generated@@40)))))
(let (($generated@@43 ($generated@@36 ($generated@@37 ($generated@@28 $generated@@29 $generated@@40)))))
($generated@@36 (+ $generated@@43 ($generated@@26 ($generated@@27 $generated@@39) $generated@@42)))))))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@27 $generated@@39) ($generated@@28 $generated@@29 $generated@@40)))
))))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! ($generated@@44 $generated@@11 $generated@@46 $generated@@45 $generated@@47)
 :pattern ( ($generated@@44 $generated@@11 $generated@@46 $generated@@45 $generated@@47))
)))
(assert (forall (($generated@@50 Int) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@49 ($generated@@48 $generated@@50 $generated@@51 $generated@@52)) $generated@@5)
 :pattern ( ($generated@@48 $generated@@50 $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@53 Int) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@37 ($generated@@48 $generated@@53 $generated@@54 $generated@@55)) $generated@@53)
 :pattern ( ($generated@@48 $generated@@53 $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 Int) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@56 ($generated@@48 $generated@@57 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@48 $generated@@57 $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@60 Int) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@35 ($generated@@48 $generated@@60 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@48 $generated@@60 $generated@@61 $generated@@62))
)))
(assert (= ($generated@@49 $generated@@63) $generated@@4))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@44 $generated@@38 $generated@@65 $generated@@33 $generated@@66) ($generated@@44 $generated@@38 $generated@@65 $generated@@64 $generated@@66))
 :pattern ( ($generated@@44 $generated@@38 $generated@@65 $generated@@33 $generated@@66))
 :pattern ( ($generated@@44 $generated@@38 $generated@@65 $generated@@64 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@67 $generated@@69) ($generated@@44 $generated@@29 $generated@@63 ($generated@@32 $generated@@68) $generated@@69))
 :pattern ( ($generated@@44 $generated@@29 $generated@@63 ($generated@@32 $generated@@68) $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ) (! ($generated@@31 $generated@@29 $generated@@63 ($generated@@32 $generated@@70))
 :pattern ( ($generated@@31 $generated@@29 $generated@@63 ($generated@@32 $generated@@70)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@73 $generated@@80 $generated@@81 ($generated@@77 $generated@@80 $generated@@81 $generated@@83 $generated@@84 $generated@@82) $generated@@84) $generated@@82)
 :weight 0
)) (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (or (= $generated@@89 $generated@@90) (= ($generated@@73 $generated@@85 $generated@@86 ($generated@@77 $generated@@85 $generated@@86 $generated@@88 $generated@@89 $generated@@87) $generated@@90) ($generated@@73 $generated@@85 $generated@@86 $generated@@88 $generated@@90)))
 :weight 0
))) (= ($generated@@9 $generated@@74) 5)) (= ($generated@@9 $generated@@75) 6)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@9 ($generated@@76 $generated@@91 $generated@@92)) 7))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@78 ($generated@@76 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@76 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@76 $generated@@95 $generated@@96))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@44 $generated@@38 $generated@@97 $generated@@64 $generated@@98)  (or (= $generated@@97 $generated@@71) ($generated@@14 ($generated@@72 $generated@@10 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@98 $generated@@97) $generated)))))
 :pattern ( ($generated@@44 $generated@@38 $generated@@97 $generated@@64 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 Int) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@67 $generated@@104) (= ($generated@@44 $generated@@29 ($generated@@48 $generated@@101 $generated@@102 $generated@@103) ($generated@@32 $generated@@100) $generated@@104)  (and (and ($generated@@44 $generated@@11 ($generated@@15 $generated@@101) $generated@@45 $generated@@104) ($generated@@99 $generated@@102 $generated@@100 $generated@@104)) ($generated@@44 $generated@@29 $generated@@103 ($generated@@32 $generated@@100) $generated@@104))))
 :pattern ( ($generated@@44 $generated@@29 ($generated@@48 $generated@@101 $generated@@102 $generated@@103) ($generated@@32 $generated@@100) $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@105 $generated@@106 $generated@@107) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@14 ($generated@@72 $generated@@10 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@106 $generated@@108) $generated))) ($generated@@14 ($generated@@72 $generated@@10 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@107 $generated@@108) $generated))))
 :pattern ( ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@107 $generated@@108) $generated))
)))
 :pattern ( ($generated@@105 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 Int) ) (! (= ($generated@@36 $generated@@109) $generated@@109)
 :pattern ( ($generated@@36 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@28 $generated@@111 $generated@@110) $generated@@110)
 :pattern ( ($generated@@28 $generated@@111 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@34 $generated@@112) (= ($generated@@49 $generated@@112) $generated@@4))
 :pattern ( ($generated@@34 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 $generated@@114) (= ($generated@@49 $generated@@114) $generated@@5))
 :pattern ( ($generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@115 $generated@@117 ($generated@@72 $generated@@117 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@72 $generated@@117 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@113 $generated@@118) (exists (($generated@@119 Int) ($generated@@120 T@U) ($generated@@121 T@U) ) (= $generated@@118 ($generated@@48 $generated@@119 $generated@@120 $generated@@121))))
 :pattern ( ($generated@@113 $generated@@118))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 Int) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@31 $generated@@29 ($generated@@48 $generated@@124 $generated@@125 $generated@@126) ($generated@@32 $generated@@123))  (and (and ($generated@@31 $generated@@11 ($generated@@15 $generated@@124) $generated@@45) ($generated@@122 $generated@@125 $generated@@123)) ($generated@@31 $generated@@29 $generated@@126 ($generated@@32 $generated@@123))))
 :pattern ( ($generated@@31 $generated@@29 ($generated@@48 $generated@@124 $generated@@125 $generated@@126) ($generated@@32 $generated@@123)))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@34 $generated@@127) (= $generated@@127 $generated@@63))
 :pattern ( ($generated@@34 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@31 $generated@@11 $generated@@128 $generated@@45) (<= ($generated@@36 0) ($generated@@16 $generated@@128)))
 :pattern ( ($generated@@31 $generated@@11 $generated@@128 $generated@@45))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@99 ($generated@@115 $generated@@132 $generated@@129) $generated@@130 $generated@@131) ($generated@@44 $generated@@132 $generated@@129 $generated@@130 $generated@@131))
 :pattern ( ($generated@@99 ($generated@@115 $generated@@132 $generated@@129) $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> ($generated@@105 $generated@@133 $generated@@134) (=> ($generated@@99 $generated@@135 $generated@@136 $generated@@133) ($generated@@99 $generated@@135 $generated@@136 $generated@@134)))
 :pattern ( ($generated@@105 $generated@@133 $generated@@134) ($generated@@99 $generated@@135 $generated@@136 $generated@@133))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@T) ) (!  (=> ($generated@@105 $generated@@137 $generated@@138) (=> ($generated@@44 $generated@@141 $generated@@139 $generated@@140 $generated@@137) ($generated@@44 $generated@@141 $generated@@139 $generated@@140 $generated@@138)))
 :pattern ( ($generated@@105 $generated@@137 $generated@@138) ($generated@@44 $generated@@141 $generated@@139 $generated@@140 $generated@@137))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (or ($generated@@30 $generated@@143) (and (< 1 $generated@@25) ($generated@@31 $generated@@29 $generated@@143 ($generated@@32 $generated@@33)))) (and (=> (not ($generated@@34 $generated@@143)) (let (($generated@@144 ($generated@@35 $generated@@143)))
($generated@@30 $generated@@144))) (= ($generated@@26 ($generated@@27 $generated@@142) $generated@@143) (ite ($generated@@34 $generated@@143) 0 (let (($generated@@145 ($generated@@35 $generated@@143)))
(let (($generated@@146 ($generated@@37 $generated@@143)))
(+ $generated@@146 ($generated@@26 $generated@@142 $generated@@145))))))))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@142) $generated@@143))
))))
(assert (forall (($generated@@149 T@U) ) (!  (and (= ($generated@@147 ($generated@@32 $generated@@149)) $generated@@3) (= ($generated@@148 ($generated@@32 $generated@@149)) $generated@@8))
 :pattern ( ($generated@@32 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> ($generated@@122 $generated@@150 $generated@@45) (and (= ($generated@@115 $generated@@11 ($generated@@72 $generated@@11 $generated@@150)) $generated@@150) ($generated@@31 $generated@@11 ($generated@@72 $generated@@11 $generated@@150) $generated@@45)))
 :pattern ( ($generated@@122 $generated@@150 $generated@@45))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> ($generated@@122 $generated@@151 $generated@@64) (and (= ($generated@@115 $generated@@38 ($generated@@72 $generated@@38 $generated@@151)) $generated@@151) ($generated@@31 $generated@@38 ($generated@@72 $generated@@38 $generated@@151) $generated@@64)))
 :pattern ( ($generated@@122 $generated@@151 $generated@@64))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@122 $generated@@152 $generated@@33) (and (= ($generated@@115 $generated@@38 ($generated@@72 $generated@@38 $generated@@152)) $generated@@152) ($generated@@31 $generated@@38 ($generated@@72 $generated@@38 $generated@@152) $generated@@33)))
 :pattern ( ($generated@@122 $generated@@152 $generated@@33))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@31 $generated@@38 $generated@@153 $generated@@33)  (and ($generated@@31 $generated@@38 $generated@@153 $generated@@64) (or (not (= $generated@@153 $generated@@71)) (not true))))
 :pattern ( ($generated@@31 $generated@@38 $generated@@153 $generated@@33))
 :pattern ( ($generated@@31 $generated@@38 $generated@@153 $generated@@64))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> ($generated@@154 $generated@@155) (or ($generated@@34 $generated@@155) ($generated@@113 $generated@@155)))
 :pattern ( ($generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@31 $generated@@29 $generated@@157 ($generated@@32 $generated@@156)) (or ($generated@@34 $generated@@157) ($generated@@113 $generated@@157)))
 :pattern ( ($generated@@113 $generated@@157) ($generated@@31 $generated@@29 $generated@@157 ($generated@@32 $generated@@156)))
 :pattern ( ($generated@@34 $generated@@157) ($generated@@31 $generated@@29 $generated@@157 ($generated@@32 $generated@@156)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and ($generated@@67 $generated@@159) (and ($generated@@113 $generated@@158) (exists (($generated@@160 T@U) ) (! ($generated@@44 $generated@@29 $generated@@158 ($generated@@32 $generated@@160) $generated@@159)
 :pattern ( ($generated@@44 $generated@@29 $generated@@158 ($generated@@32 $generated@@160) $generated@@159))
)))) ($generated@@44 $generated@@11 ($generated@@15 ($generated@@37 $generated@@158)) $generated@@45 $generated@@159))
 :pattern ( ($generated@@44 $generated@@11 ($generated@@15 ($generated@@37 $generated@@158)) $generated@@45 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (or (not (= $generated@@161 $generated@@163)) (not true)) (=> (and ($generated@@105 $generated@@161 $generated@@162) ($generated@@105 $generated@@162 $generated@@163)) ($generated@@105 $generated@@161 $generated@@163)))
 :pattern ( ($generated@@105 $generated@@161 $generated@@162) ($generated@@105 $generated@@162 $generated@@163))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (or ($generated@@30 $generated@@165) (and (< 1 $generated@@25) ($generated@@31 $generated@@29 $generated@@165 ($generated@@32 $generated@@33)))) (<= ($generated@@36 0) ($generated@@26 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@26 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@T) ) (! (= ($generated@@122 ($generated@@115 $generated@@168 $generated@@166) $generated@@167) ($generated@@31 $generated@@168 $generated@@166 $generated@@167))
 :pattern ( ($generated@@122 ($generated@@115 $generated@@168 $generated@@166) $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! ($generated@@31 $generated@@38 $generated@@169 $generated@@64)
 :pattern ( ($generated@@31 $generated@@38 $generated@@169 $generated@@64))
)))
(assert (forall (($generated@@170 Int) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@48 ($generated@@36 $generated@@170) ($generated@@28 $generated@@75 $generated@@171) ($generated@@28 $generated@@29 $generated@@172)) ($generated@@28 $generated@@29 ($generated@@48 $generated@@170 $generated@@171 $generated@@172)))
 :pattern ( ($generated@@48 ($generated@@36 $generated@@170) ($generated@@28 $generated@@75 $generated@@171) ($generated@@28 $generated@@29 $generated@@172)))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@173 ($generated@@32 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@32 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@72 $generated@@176 ($generated@@115 $generated@@176 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@115 $generated@@176 $generated@@175))
)))
(assert (forall (($generated@@179 Int) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (< ($generated@@177 $generated@@180) ($generated@@178 ($generated@@48 $generated@@179 $generated@@180 $generated@@181)))
 :pattern ( ($generated@@48 $generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (< ($generated@@178 $generated@@184) ($generated@@178 ($generated@@48 $generated@@182 $generated@@183 $generated@@184)))
 :pattern ( ($generated@@48 $generated@@182 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@185) $generated@@186) ($generated@@26 $generated@@185 $generated@@186))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@185) $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and ($generated@@67 $generated@@189) (and ($generated@@113 $generated@@187) ($generated@@44 $generated@@29 $generated@@187 ($generated@@32 $generated@@188) $generated@@189))) ($generated@@99 ($generated@@56 $generated@@187) $generated@@188 $generated@@189))
 :pattern ( ($generated@@99 ($generated@@56 $generated@@187) $generated@@188 $generated@@189))
)))
(assert  (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@190 $generated@@193 $generated@@194 $generated@@195 ($generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@198 $generated@@199) $generated@@196)
 :weight 0
)) (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@190 $generated@@200 $generated@@201 $generated@@202 ($generated@@192 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@190 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@190 $generated@@209 $generated@@210 $generated@@211 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@190 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (= ($generated@@14 ($generated@@190 $generated@@38 $generated@@74 $generated@@10 ($generated@@191 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (or (not (= $generated@@222 $generated@@218)) (not true)) ($generated@@14 ($generated@@72 $generated@@10 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@219 $generated@@222) $generated@@220)))) $generated@@221))
 :pattern ( ($generated@@190 $generated@@38 $generated@@74 $generated@@10 ($generated@@191 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ) (! (= ($generated@@177 ($generated@@115 $generated@@29 $generated@@224)) ($generated@@178 $generated@@224))
 :pattern ( ($generated@@177 ($generated@@115 $generated@@29 $generated@@224)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> ($generated@@122 $generated@@226 ($generated@@32 $generated@@225)) (and (= ($generated@@115 $generated@@29 ($generated@@72 $generated@@29 $generated@@226)) $generated@@226) ($generated@@31 $generated@@29 ($generated@@72 $generated@@29 $generated@@226) ($generated@@32 $generated@@225))))
 :pattern ( ($generated@@122 $generated@@226 ($generated@@32 $generated@@225)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and ($generated@@67 $generated@@229) (and ($generated@@113 $generated@@227) ($generated@@44 $generated@@29 $generated@@227 ($generated@@32 $generated@@228) $generated@@229))) ($generated@@44 $generated@@29 ($generated@@35 $generated@@227) ($generated@@32 $generated@@228) $generated@@229))
 :pattern ( ($generated@@44 $generated@@29 ($generated@@35 $generated@@227) ($generated@@32 $generated@@228) $generated@@229))
)))
(assert (= ($generated@@147 $generated@@45) $generated@@0))
(assert (= ($generated@@148 $generated@@45) $generated@@6))
(assert (= ($generated@@147 $generated@@64) $generated@@1))
(assert (= ($generated@@148 $generated@@64) $generated@@7))
(assert (= ($generated@@147 $generated@@33) $generated@@2))
(assert (= ($generated@@148 $generated@@33) $generated@@7))
(assert (= $generated@@63 ($generated@@28 $generated@@29 $generated@@63)))
(assert (forall (($generated@@230 Int) ) (! (= ($generated@@115 $generated@@11 ($generated@@15 ($generated@@36 $generated@@230))) ($generated@@28 $generated@@75 ($generated@@115 $generated@@11 ($generated@@15 $generated@@230))))
 :pattern ( ($generated@@115 $generated@@11 ($generated@@15 ($generated@@36 $generated@@230))))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@T) ) (! (= ($generated@@115 $generated@@232 ($generated@@28 $generated@@232 $generated@@231)) ($generated@@28 $generated@@75 ($generated@@115 $generated@@232 $generated@@231)))
 :pattern ( ($generated@@115 $generated@@232 ($generated@@28 $generated@@232 $generated@@231)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () Int)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 () Int)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 () Int)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () Int)
(declare-fun $generated@@254 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@255  (=> ($generated@@44 $generated@@29 $generated@@233 ($generated@@32 $generated@@33) $generated@@234) (=> (and (and ($generated@@30 $generated@@233) ($generated@@30 $generated@@233)) (and (= $generated@@235 ($generated@@26 ($generated@@27 $generated@@236) $generated@@233)) (= (ControlFlow 0 3) (- 0 2)))) (<= ($generated@@36 0) $generated@@235)))))
(let (($generated@@256  (=> (and (= $generated@@233 ($generated@@48 $generated@@237 ($generated@@115 $generated@@38 $generated@@238) $generated@@239)) (<= ($generated@@36 0) $generated@@237)) (=> (and (and ($generated@@31 $generated@@38 $generated@@238 $generated@@33) ($generated@@44 $generated@@38 $generated@@238 $generated@@33 $generated@@240)) (and ($generated@@31 $generated@@29 $generated@@239 ($generated@@32 $generated@@33)) ($generated@@44 $generated@@29 $generated@@239 ($generated@@32 $generated@@33) $generated@@240))) (=> (and (and (and ($generated@@31 $generated@@29 $generated@@241 ($generated@@32 $generated@@33)) ($generated@@44 $generated@@29 $generated@@241 ($generated@@32 $generated@@33) $generated@@240)) (= $generated@@242 $generated@@239)) (and ($generated@@31 $generated@@29 $generated@@242 ($generated@@32 $generated@@33)) (= $generated@@241 $generated@@242))) (=> (and (and (and (and ($generated@@31 $generated@@38 $generated@@243 $generated@@33) ($generated@@44 $generated@@38 $generated@@243 $generated@@33 $generated@@240)) (= $generated@@244 $generated@@238)) (and ($generated@@31 $generated@@38 $generated@@244 $generated@@33) (= $generated@@243 $generated@@244))) (and (and (<= ($generated@@36 0) $generated@@245) (= $generated@@246 $generated@@237)) (and ($generated@@31 $generated@@11 ($generated@@15 $generated@@246) $generated@@45) (= $generated@@245 $generated@@246)))) (and (=> (= (ControlFlow 0 5) (- 0 9)) (< ($generated@@178 $generated@@241) ($generated@@178 $generated@@233))) (=> (< ($generated@@178 $generated@@241) ($generated@@178 $generated@@233)) (=> (<= ($generated@@36 0) $generated@@247) (=> (and (and (and ($generated@@67 $generated@@248) ($generated@@249 $generated@@248)) (<= ($generated@@36 0) $generated@@250)) (and (forall (($generated@@257 T@U) ) (!  (=> (and (or (not (= $generated@@257 $generated@@71)) (not true)) ($generated@@14 ($generated@@72 $generated@@10 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@240 $generated@@257) $generated)))) (= ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@248 $generated@@257) ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@240 $generated@@257)))
 :pattern ( ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@248 $generated@@257))
)) ($generated@@105 $generated@@240 $generated@@248))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (<= ($generated@@36 0) $generated@@250)) (=> (<= ($generated@@36 0) $generated@@250) (and (=> (= (ControlFlow 0 5) (- 0 7)) (<= ($generated@@36 0) $generated@@245)) (=> (<= ($generated@@36 0) $generated@@245) (and (=> (= (ControlFlow 0 5) (- 0 6)) (<= ($generated@@36 0) (- $generated@@245 10))) (=> (<= ($generated@@36 0) (- $generated@@245 10)) (=> (and (= $generated@@234 $generated@@248) (= (ControlFlow 0 5) 3)) $generated@@255)))))))))))))))))
(let (($generated@@258  (=> (= $generated@@233 $generated@@63) (=> (and (= $generated@@234 $generated@@240) (= (ControlFlow 0 4) 3)) $generated@@255))))
(let (($generated@@259 true))
(let (($generated@@260  (=> (or (not (= $generated@@233 $generated@@63)) (not true)) (and (=> (= (ControlFlow 0 10) 5) $generated@@256) (=> (= (ControlFlow 0 10) 1) $generated@@259)))))
(let (($generated@@261  (=> (= $generated@@251 ($generated@@191 $generated@@71 $generated@@240 $generated false)) (and (=> (= (ControlFlow 0 11) 4) $generated@@258) (=> (= (ControlFlow 0 11) 10) $generated@@260)))))
(let (($generated@@262  (=> (and ($generated@@67 $generated@@240) ($generated@@249 $generated@@240)) (=> (and (and (and (and (and ($generated@@31 $generated@@29 $generated@@233 ($generated@@32 $generated@@33)) ($generated@@44 $generated@@29 $generated@@233 ($generated@@32 $generated@@33) $generated@@240)) ($generated@@154 $generated@@233)) (<= ($generated@@36 0) $generated@@252)) (and (<= ($generated@@36 0) $generated@@253) true)) (and (and (<= ($generated@@36 0) $generated@@254) true) (and (= 2 $generated@@25) (= (ControlFlow 0 12) 11)))) $generated@@261))))
$generated@@262))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 5) (- 6))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
