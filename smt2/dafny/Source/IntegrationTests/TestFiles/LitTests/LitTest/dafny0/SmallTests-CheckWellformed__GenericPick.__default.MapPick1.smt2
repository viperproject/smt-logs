(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U T@U T@U) T@U)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (T@U T@U T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U T@U T@U) Bool)
(declare-fun $generated@@30 (T@U T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@45 (T@U T@U) T@U)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@U T@U T@U) Bool)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@137 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U) Int)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@223 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@5 $generated@@26) 3))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (or ($generated@@24 $generated@@31 $generated@@32 $generated@@34) (and (< 0 $generated@@21) (and (and ($generated@@23 $generated@@33) ($generated@@25 $generated@@26 $generated@@34 ($generated@@27 $generated@@31 $generated@@32))) (or (not (= ($generated@@28 $generated@@34) 0)) (not true))))) (and ($generated@@29 $generated@@31 $generated@@32 $generated@@34) (= ($generated@@22 $generated@@31 $generated@@32 $generated@@34) (let (($generated@@35 ($generated@@30 $generated@@31 $generated@@32 $generated@@34)))
$generated@@35))))
 :pattern ( ($generated@@22 $generated@@31 $generated@@32 $generated@@34) ($generated@@23 $generated@@33))
))))
(assert (= ($generated@@5 $generated@@37) 4))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@25 $generated@@37 $generated@@41 ($generated@@38 $generated@@39 $generated@@40)) ($generated@@36 $generated@@41))
 :pattern ( ($generated@@36 $generated@@41) ($generated@@25 $generated@@37 $generated@@41 ($generated@@38 $generated@@39 $generated@@40)))
)))
(assert (forall (($generated@@44 T@U) ) (!  (not ($generated@@42 $generated@@43 $generated@@44))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@25 $generated@@37 ($generated@@45 $generated@@49 $generated@@50) ($generated@@38 $generated@@47 $generated@@48))  (and ($generated@@46 $generated@@49 $generated@@47) ($generated@@46 $generated@@50 $generated@@48)))
 :pattern ( ($generated@@25 $generated@@37 ($generated@@45 $generated@@49 $generated@@50) ($generated@@38 $generated@@47 $generated@@48)))
)))
(assert (forall (($generated@@52 T@U) ) (!  (and (= (= ($generated@@51 $generated@@52) 0) (= $generated@@52 $generated@@43)) (=> (or (not (= ($generated@@51 $generated@@52) 0)) (not true)) (exists (($generated@@53 T@U) ) (! ($generated@@42 $generated@@52 $generated@@53)
 :pattern ( ($generated@@42 $generated@@52 $generated@@53))
))))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> ($generated@@23 $generated@@63) (= ($generated@@57 $generated@@37 ($generated@@45 $generated@@61 $generated@@62) ($generated@@38 $generated@@59 $generated@@60) $generated@@63)  (and ($generated@@58 $generated@@61 $generated@@59 $generated@@63) ($generated@@58 $generated@@62 $generated@@60 $generated@@63))))
 :pattern ( ($generated@@57 $generated@@37 ($generated@@45 $generated@@61 $generated@@62) ($generated@@38 $generated@@59 $generated@@60) $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@36 $generated@@65) (= ($generated@@64 $generated@@65) $generated@@2))
 :pattern ( ($generated@@36 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 ($generated@@66 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@66 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@36 $generated@@70) (exists (($generated@@71 T@U) ($generated@@72 T@U) ) (= $generated@@70 ($generated@@45 $generated@@71 $generated@@72))))
 :pattern ( ($generated@@36 $generated@@70))
)))
(assert (= ($generated@@5 $generated@@73) 5))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@25 $generated@@73 $generated@@75 ($generated@@74 $generated@@76)) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@42 $generated@@75 $generated@@77) ($generated@@46 $generated@@77 $generated@@76))
 :pattern ( ($generated@@42 $generated@@75 $generated@@77))
)))
 :pattern ( ($generated@@25 $generated@@73 $generated@@75 ($generated@@74 $generated@@76)))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@58 ($generated@@67 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@57 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@58 ($generated@@67 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (or ($generated@@24 $generated@@82 $generated@@83 ($generated@@54 $generated@@26 $generated@@85)) (and (< 0 $generated@@21) (and (and ($generated@@23 $generated@@84) ($generated@@25 $generated@@26 $generated@@85 ($generated@@27 $generated@@82 $generated@@83))) (or (not (= ($generated@@28 ($generated@@54 $generated@@26 $generated@@85)) 0)) (not true))))) (and ($generated@@29 $generated@@82 $generated@@83 ($generated@@54 $generated@@26 $generated@@85)) (= ($generated@@22 $generated@@82 $generated@@83 ($generated@@54 $generated@@26 $generated@@85)) (let (($generated@@86 ($generated@@30 $generated@@82 $generated@@83 ($generated@@54 $generated@@26 $generated@@85))))
$generated@@86))))
 :weight 3
 :pattern ( ($generated@@22 $generated@@82 $generated@@83 ($generated@@54 $generated@@26 $generated@@85)) ($generated@@23 $generated@@84))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@29 $generated@@88 $generated@@89 $generated@@90) ($generated@@42 ($generated@@87 $generated@@90) ($generated@@30 $generated@@88 $generated@@89 $generated@@90)))
 :pattern ( ($generated@@30 $generated@@88 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (! (= (= ($generated@@28 $generated@@92) 0) (= $generated@@92 $generated@@91))
 :pattern ( ($generated@@28 $generated@@92))
)))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or ($generated@@24 $generated@@93 $generated@@94 $generated@@95) (and (< 0 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@95 ($generated@@27 $generated@@93 $generated@@94)) (or (not (= ($generated@@28 $generated@@95) 0)) (not true))))) ($generated@@46 ($generated@@22 $generated@@93 $generated@@94 $generated@@95) $generated@@93))
 :pattern ( ($generated@@22 $generated@@93 $generated@@94 $generated@@95))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@46 ($generated@@67 $generated@@98 $generated@@96) $generated@@97) ($generated@@25 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@46 ($generated@@67 $generated@@98 $generated@@96) $generated@@97))
)))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (and (or ($generated@@24 $generated@@100 $generated@@101 $generated@@102) (and (< 0 $generated@@21) (and (and ($generated@@25 $generated@@26 $generated@@102 ($generated@@27 $generated@@100 $generated@@101)) ($generated@@57 $generated@@26 $generated@@102 ($generated@@27 $generated@@100 $generated@@101) $generated@@99)) (or (not (= ($generated@@28 $generated@@102) 0)) (not true))))) ($generated@@23 $generated@@99)) ($generated@@58 ($generated@@22 $generated@@100 $generated@@101 $generated@@102) $generated@@100 $generated@@99))
 :pattern ( ($generated@@58 ($generated@@22 $generated@@100 $generated@@101 $generated@@102) $generated@@100 $generated@@99))
))))
(assert (forall (($generated@@103 T@U) ) (! (<= 0 ($generated@@51 $generated@@103))
 :pattern ( ($generated@@51 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (! (<= 0 ($generated@@28 $generated@@104))
 :pattern ( ($generated@@28 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@57 $generated@@73 $generated@@105 ($generated@@74 $generated@@106) $generated@@107) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@42 $generated@@105 $generated@@108) ($generated@@58 $generated@@108 $generated@@106 $generated@@107))
 :pattern ( ($generated@@42 $generated@@105 $generated@@108))
)))
 :pattern ( ($generated@@57 $generated@@73 $generated@@105 ($generated@@74 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@109 ($generated@@27 $generated@@110 $generated@@111)) $generated@@110)
 :pattern ( ($generated@@27 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@112 ($generated@@27 $generated@@113 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@27 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@115 ($generated@@27 $generated@@116 $generated@@117)) $generated@@0)
 :pattern ( ($generated@@27 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@64 ($generated@@45 $generated@@118 $generated@@119)) $generated@@2)
 :pattern ( ($generated@@45 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@120 ($generated@@38 $generated@@121 $generated@@122)) $generated@@121)
 :pattern ( ($generated@@38 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@123 ($generated@@38 $generated@@124 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@38 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@126 ($generated@@45 $generated@@127 $generated@@128)) $generated@@127)
 :pattern ( ($generated@@45 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@129 ($generated@@45 $generated@@130 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@45 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@132 ($generated@@74 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@74 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@115 ($generated@@74 $generated@@134)) $generated)
 :pattern ( ($generated@@74 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@66 $generated@@136 ($generated@@67 $generated@@136 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@67 $generated@@136 $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@137 $generated@@141 $generated@@142 ($generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@143) $generated@@145) $generated@@143)
 :weight 0
)) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@150 $generated@@151) (= ($generated@@137 $generated@@146 $generated@@147 ($generated@@140 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@137 $generated@@146 $generated@@147 $generated@@149 $generated@@151)))
 :weight 0
))) (= ($generated@@5 $generated@@138) 6)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@57 $generated@@26 $generated@@152 ($generated@@27 $generated@@153 $generated@@154) $generated@@155) (forall (($generated@@156 T@U) ) (!  (=> ($generated@@42 ($generated@@87 $generated@@152) $generated@@156) (and ($generated@@58 ($generated@@137 $generated@@138 $generated@@138 ($generated@@139 $generated@@152) $generated@@156) $generated@@154 $generated@@155) ($generated@@58 $generated@@156 $generated@@153 $generated@@155)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@138 ($generated@@139 $generated@@152) $generated@@156))
 :pattern ( ($generated@@42 ($generated@@87 $generated@@152) $generated@@156))
)))
 :pattern ( ($generated@@57 $generated@@26 $generated@@152 ($generated@@27 $generated@@153 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (< ($generated@@157 $generated@@159) ($generated@@158 ($generated@@45 $generated@@159 $generated@@160)))
 :pattern ( ($generated@@45 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (< ($generated@@157 $generated@@162) ($generated@@158 ($generated@@45 $generated@@161 $generated@@162)))
 :pattern ( ($generated@@45 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ) (!  (not ($generated@@42 ($generated@@87 $generated@@91) $generated@@163))
 :pattern ( ($generated@@42 ($generated@@87 $generated@@91) $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@46 $generated@@164 ($generated@@27 $generated@@165 $generated@@166)) (and (= ($generated@@67 $generated@@26 ($generated@@66 $generated@@26 $generated@@164)) $generated@@164) ($generated@@25 $generated@@26 ($generated@@66 $generated@@26 $generated@@164) ($generated@@27 $generated@@165 $generated@@166))))
 :pattern ( ($generated@@46 $generated@@164 ($generated@@27 $generated@@165 $generated@@166)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@46 $generated@@169 ($generated@@38 $generated@@167 $generated@@168)) (and (= ($generated@@67 $generated@@37 ($generated@@66 $generated@@37 $generated@@169)) $generated@@169) ($generated@@25 $generated@@37 ($generated@@66 $generated@@37 $generated@@169) ($generated@@38 $generated@@167 $generated@@168))))
 :pattern ( ($generated@@46 $generated@@169 ($generated@@38 $generated@@167 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@170 $generated@@178 $generated@@179 $generated@@180 ($generated@@175 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@183 $generated@@184) $generated@@181)
 :weight 0
)) (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@170 $generated@@185 $generated@@186 $generated@@187 ($generated@@175 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@170 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@170 $generated@@194 $generated@@195 $generated@@196 ($generated@@175 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)))) (= ($generated@@5 $generated@@171) 7)) (= ($generated@@5 $generated@@172) 8)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (= ($generated@@5 ($generated@@174 $generated@@203 $generated@@204)) 9))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@205 $generated@@206)) $generated@@205)
 :pattern ( ($generated@@174 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (! (= ($generated@@177 ($generated@@174 $generated@@207 $generated@@208)) $generated@@208)
 :pattern ( ($generated@@174 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@10 ($generated@@170 $generated@@171 $generated@@172 $generated@@6 ($generated@@173 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (or (not (= $generated@@213 $generated@@209)) (not true)) ($generated@@10 ($generated@@66 $generated@@6 ($generated@@137 $generated@@172 $generated@@138 ($generated@@137 $generated@@171 ($generated@@174 $generated@@172 $generated@@138) $generated@@210 $generated@@213) $generated@@211)))) $generated@@212))
 :pattern ( ($generated@@170 $generated@@171 $generated@@172 $generated@@6 ($generated@@173 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (and (= ($generated@@115 ($generated@@38 $generated@@216 $generated@@217)) $generated@@3) (= ($generated@@215 ($generated@@38 $generated@@216 $generated@@217)) $generated@@4))
 :pattern ( ($generated@@38 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ) (!  (or (= $generated@@218 $generated@@91) (exists (($generated@@219 T@U) ) ($generated@@42 ($generated@@87 $generated@@218) $generated@@219)))
 :pattern ( ($generated@@87 $generated@@218))
)))
(assert (forall (($generated@@221 T@U) ) (!  (or (= $generated@@221 $generated@@91) (exists (($generated@@222 T@U) ) ($generated@@42 ($generated@@220 $generated@@221) $generated@@222)))
 :pattern ( ($generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@42 ($generated@@223 $generated@@224) $generated@@225)  (and ($generated@@42 ($generated@@87 $generated@@224) ($generated@@126 ($generated@@66 $generated@@37 $generated@@225))) (= ($generated@@137 $generated@@138 $generated@@138 ($generated@@139 $generated@@224) ($generated@@126 ($generated@@66 $generated@@37 $generated@@225))) ($generated@@129 ($generated@@66 $generated@@37 $generated@@225)))))
 :pattern ( ($generated@@42 ($generated@@223 $generated@@224) $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= ($generated@@42 ($generated@@220 $generated@@226) $generated@@227) (exists (($generated@@228 T@U) ) (!  (and ($generated@@42 ($generated@@87 $generated@@226) $generated@@228) (= $generated@@227 ($generated@@137 $generated@@138 $generated@@138 ($generated@@139 $generated@@226) $generated@@228)))
 :pattern ( ($generated@@42 ($generated@@87 $generated@@226) $generated@@228))
 :pattern ( ($generated@@137 $generated@@138 $generated@@138 ($generated@@139 $generated@@226) $generated@@228))
)))
 :pattern ( ($generated@@42 ($generated@@220 $generated@@226) $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (= ($generated@@157 ($generated@@67 $generated@@37 $generated@@229)) ($generated@@158 $generated@@229))
 :pattern ( ($generated@@157 ($generated@@67 $generated@@37 $generated@@229)))
)))
(assert (forall (($generated@@230 T@U) ) (! (= ($generated@@51 ($generated@@87 $generated@@230)) ($generated@@28 $generated@@230))
 :pattern ( ($generated@@51 ($generated@@87 $generated@@230)))
 :pattern ( ($generated@@28 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ) (! (= ($generated@@51 ($generated@@223 $generated@@231)) ($generated@@28 $generated@@231))
 :pattern ( ($generated@@51 ($generated@@223 $generated@@231)))
 :pattern ( ($generated@@28 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ) (! (<= ($generated@@51 ($generated@@220 $generated@@232)) ($generated@@28 $generated@@232))
 :pattern ( ($generated@@51 ($generated@@220 $generated@@232)))
 :pattern ( ($generated@@28 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> ($generated@@46 $generated@@233 ($generated@@74 $generated@@234)) (and (= ($generated@@67 $generated@@73 ($generated@@66 $generated@@73 $generated@@233)) $generated@@233) ($generated@@25 $generated@@73 ($generated@@66 $generated@@73 $generated@@233) ($generated@@74 $generated@@234))))
 :pattern ( ($generated@@46 $generated@@233 ($generated@@74 $generated@@234)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@235 ($generated@@27 $generated@@236 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> ($generated@@42 ($generated@@87 $generated@@235) $generated@@238) (and ($generated@@46 ($generated@@137 $generated@@138 $generated@@138 ($generated@@139 $generated@@235) $generated@@238) $generated@@237) ($generated@@46 $generated@@238 $generated@@236)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@138 ($generated@@139 $generated@@235) $generated@@238))
 :pattern ( ($generated@@42 ($generated@@87 $generated@@235) $generated@@238))
)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@235 ($generated@@27 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and ($generated@@23 $generated@@241) (and ($generated@@36 $generated@@239) (exists (($generated@@242 T@U) ) (! ($generated@@57 $generated@@37 $generated@@239 ($generated@@38 $generated@@240 $generated@@242) $generated@@241)
 :pattern ( ($generated@@57 $generated@@37 $generated@@239 ($generated@@38 $generated@@240 $generated@@242) $generated@@241))
)))) ($generated@@58 ($generated@@126 $generated@@239) $generated@@240 $generated@@241))
 :pattern ( ($generated@@58 ($generated@@126 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and ($generated@@23 $generated@@245) (and ($generated@@36 $generated@@243) (exists (($generated@@246 T@U) ) (! ($generated@@57 $generated@@37 $generated@@243 ($generated@@38 $generated@@246 $generated@@244) $generated@@245)
 :pattern ( ($generated@@57 $generated@@37 $generated@@243 ($generated@@38 $generated@@246 $generated@@244) $generated@@245))
)))) ($generated@@58 ($generated@@129 $generated@@243) $generated@@244 $generated@@245))
 :pattern ( ($generated@@58 ($generated@@129 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= ($generated@@45 ($generated@@54 $generated@@138 $generated@@247) ($generated@@54 $generated@@138 $generated@@248)) ($generated@@54 $generated@@37 ($generated@@45 $generated@@247 $generated@@248)))
 :pattern ( ($generated@@45 ($generated@@54 $generated@@138 $generated@@247) ($generated@@54 $generated@@138 $generated@@248)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@T) ) (! (= ($generated@@67 $generated@@250 ($generated@@54 $generated@@250 $generated@@249)) ($generated@@54 $generated@@138 ($generated@@67 $generated@@250 $generated@@249)))
 :pattern ( ($generated@@67 $generated@@250 ($generated@@54 $generated@@250 $generated@@249)))
)))
(assert (forall (($generated@@251 T@U) ) (!  (or (= $generated@@251 $generated@@91) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) ($generated@@42 ($generated@@223 $generated@@251) ($generated@@67 $generated@@37 ($generated@@45 $generated@@252 $generated@@253)))))
 :pattern ( ($generated@@223 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@254 ($generated@@27 $generated@@255 $generated@@256)) (and (and ($generated@@25 $generated@@73 ($generated@@87 $generated@@254) ($generated@@74 $generated@@255)) ($generated@@25 $generated@@73 ($generated@@220 $generated@@254) ($generated@@74 $generated@@256))) ($generated@@25 $generated@@73 ($generated@@223 $generated@@254) ($generated@@74 ($generated@@38 $generated@@255 $generated@@256)))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@254 ($generated@@27 $generated@@255 $generated@@256)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@265  (=> (= (ControlFlow 0 3) (- 0 2)) (exists (($generated@@266 T@U) )  (and ($generated@@46 $generated@@266 $generated@@257) ($generated@@42 ($generated@@87 $generated@@258) $generated@@266))))))
(let (($generated@@267  (=> (and (not (and ($generated@@46 $generated@@259 $generated@@257) ($generated@@58 $generated@@259 $generated@@257 $generated@@260))) (= (ControlFlow 0 5) 3)) $generated@@265)))
(let (($generated@@268  (=> (and (and ($generated@@46 $generated@@259 $generated@@257) ($generated@@58 $generated@@259 $generated@@257 $generated@@260)) (= (ControlFlow 0 4) 3)) $generated@@265)))
(let (($generated@@269 true))
(let (($generated@@270  (=> (and (= $generated@@261 ($generated@@173 $generated@@262 $generated@@260 $generated@@1 false)) (or (not (= ($generated@@28 $generated@@258) 0)) (not true))) (and (and (=> (= (ControlFlow 0 6) 1) $generated@@269) (=> (= (ControlFlow 0 6) 4) $generated@@268)) (=> (= (ControlFlow 0 6) 5) $generated@@267)))))
(let (($generated@@271  (=> (and (and (and ($generated@@23 $generated@@260) ($generated@@263 $generated@@260)) ($generated@@25 $generated@@26 $generated@@258 ($generated@@27 $generated@@257 $generated@@264))) (and (= 0 $generated@@21) (= (ControlFlow 0 7) 6))) $generated@@270)))
$generated@@271)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
