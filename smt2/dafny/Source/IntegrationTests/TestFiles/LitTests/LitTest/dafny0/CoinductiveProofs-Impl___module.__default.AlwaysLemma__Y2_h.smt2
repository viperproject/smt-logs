(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U T@U) Bool)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (Int) T@U)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@42 () Int)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@48 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@57 (Int) Int)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@U T@U T@U) Bool)
(declare-fun $generated@@69 (T@U T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@145 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@149 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@150 (T@T T@T) T@T)
(declare-fun $generated@@151 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ($generated@@23 T@U) ) (! (= ($generated@@19 $generated@@21 ($generated@@20 $generated@@22) $generated@@23) ($generated@@19 $generated@@21 $generated@@22 $generated@@23))
 :pattern ( ($generated@@19 $generated@@21 ($generated@@20 $generated@@22) $generated@@23))
)))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> (and ($generated@@24 $generated@@25 $generated@@26) ($generated@@24 $generated@@26 $generated@@27)) ($generated@@24 $generated@@25 $generated@@27))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26) ($generated@@24 $generated@@26 $generated@@27))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26) ($generated@@24 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@29 $generated@@30))
 :pattern ( ($generated@@28 $generated@@30))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 Int) ($generated@@36 Int) ) (!  (=> (and (and (<= 0 $generated@@35) (<= 0 $generated@@36)) (<= (+ $generated@@35 $generated@@36) ($generated@@33 $generated@@34))) (= ($generated@@31 ($generated@@31 $generated@@34 ($generated@@32 $generated@@35)) ($generated@@32 $generated@@36)) ($generated@@31 $generated@@34 ($generated@@32 (+ $generated@@35 $generated@@36)))))
 :pattern ( ($generated@@31 ($generated@@31 $generated@@34 ($generated@@32 $generated@@35)) ($generated@@32 $generated@@36)))
)))
(assert (= ($generated@@3 $generated@@38) 3))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@41 ($generated@@39 $generated@@40)) ($generated@@29 $generated@@41))
 :pattern ( ($generated@@29 $generated@@41) ($generated@@37 $generated@@38 $generated@@41 ($generated@@39 $generated@@40)))
)))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (or ($generated@@43 $generated@@45 $generated@@47) (and (< 1 $generated@@42) ($generated@@37 $generated@@38 $generated@@47 ($generated@@39 $generated@@45)))) (and (and ($generated@@29 $generated@@47) ($generated@@43 $generated@@45 ($generated@@44 $generated@@47))) (= ($generated@@19 $generated@@45 ($generated@@20 $generated@@46) $generated@@47) ($generated@@19 $generated@@45 $generated@@46 ($generated@@44 $generated@@47)))))
 :pattern ( ($generated@@19 $generated@@45 ($generated@@20 $generated@@46) $generated@@47))
))))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (and ($generated@@37 $generated@@38 $generated@@51 ($generated@@39 $generated@@49)) ($generated@@19 $generated@@49 ($generated@@20 $generated@@50) $generated@@51)) (forall (($generated@@52 T@U) ) (! ($generated@@48 $generated@@49 ($generated@@20 $generated@@50) $generated@@52 $generated@@51)
 :pattern ( ($generated@@48 $generated@@49 ($generated@@20 $generated@@50) $generated@@52 $generated@@51))
)))
 :pattern ( ($generated@@19 $generated@@49 ($generated@@20 $generated@@50) $generated@@51))
))))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (and ($generated@@37 $generated@@38 $generated@@55 ($generated@@39 $generated@@53)) (forall (($generated@@56 T@U) ) (! ($generated@@48 $generated@@53 ($generated@@20 $generated@@54) $generated@@56 $generated@@55)
 :pattern ( ($generated@@48 $generated@@53 ($generated@@20 $generated@@54) $generated@@56 $generated@@55))
))) ($generated@@19 $generated@@53 ($generated@@20 $generated@@54) $generated@@55))
 :pattern ( ($generated@@19 $generated@@53 ($generated@@20 $generated@@54) $generated@@55))
))))
(assert (forall (($generated@@58 Int) ) (! (= ($generated@@57 $generated@@58) $generated@@58)
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@61 $generated@@60))
)))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (or ($generated@@62 $generated@@63 $generated@@65 $generated@@66) (and (< 2 $generated@@42) ($generated@@37 $generated@@38 $generated@@66 ($generated@@39 $generated@@63)))) (and (and (=> (< 0 ($generated@@33 $generated@@65)) (and ($generated@@29 $generated@@66) ($generated@@62 $generated@@63 ($generated@@31 $generated@@65 ($generated@@32 1)) ($generated@@44 $generated@@66)))) (=> (=> (< 0 ($generated@@33 $generated@@65)) ($generated@@48 $generated@@63 $generated@@64 ($generated@@31 $generated@@65 ($generated@@32 1)) ($generated@@44 $generated@@66))) (=> (= ($generated@@57 0) ($generated@@33 $generated@@65)) (forall (($generated@@67 T@U) ) (!  (=> ($generated@@24 $generated@@67 $generated@@65) ($generated@@62 $generated@@63 $generated@@67 $generated@@66))
 :pattern ( ($generated@@48 $generated@@63 $generated@@64 $generated@@67 $generated@@66))
))))) (= ($generated@@48 $generated@@63 ($generated@@20 $generated@@64) $generated@@65 $generated@@66)  (and (=> (< 0 ($generated@@33 $generated@@65)) ($generated@@48 $generated@@63 $generated@@64 ($generated@@31 $generated@@65 ($generated@@32 1)) ($generated@@44 $generated@@66))) (=> (= ($generated@@57 0) ($generated@@33 $generated@@65)) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@24 $generated@@68 $generated@@65) ($generated@@48 $generated@@63 $generated@@64 $generated@@68 $generated@@66))
 :pattern ( ($generated@@48 $generated@@63 $generated@@64 $generated@@68 $generated@@66))
)))))))
 :pattern ( ($generated@@48 $generated@@63 ($generated@@20 $generated@@64) $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@37 $generated@@38 ($generated@@69 $generated@@72 $generated@@73) ($generated@@39 $generated@@71))  (and ($generated@@70 $generated@@72 $generated@@71) ($generated@@37 $generated@@38 $generated@@73 ($generated@@39 $generated@@71))))
 :pattern ( ($generated@@37 $generated@@38 ($generated@@69 $generated@@72 $generated@@73) ($generated@@39 $generated@@71)))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@29 $generated@@75) (= ($generated@@74 $generated@@75) $generated@@1))
 :pattern ( ($generated@@29 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 ($generated@@76 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@76 $generated@@79 $generated@@78))
)))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (or ($generated@@81 $generated@@83 ($generated@@59 $generated@@38 $generated@@84)) (and (< 2 $generated@@42) ($generated@@37 $generated@@38 $generated@@84 ($generated@@39 $generated@@83)))) (and ($generated@@43 $generated@@83 ($generated@@59 $generated@@38 $generated@@84)) (= ($generated@@80 $generated@@83 ($generated@@59 $generated@@38 $generated@@84)) ($generated@@8 ($generated@@59 $generated@@4 ($generated@@7 ($generated@@19 $generated@@83 ($generated@@20 $generated@@82) ($generated@@59 $generated@@38 $generated@@84))))))))
 :weight 3
 :pattern ( ($generated@@80 $generated@@83 ($generated@@59 $generated@@38 $generated@@84)))
))))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@29 $generated@@85) (exists (($generated@@86 T@U) ($generated@@87 T@U) ) (= $generated@@85 ($generated@@69 $generated@@86 $generated@@87))))
 :pattern ( ($generated@@29 $generated@@85))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@88 ($generated@@77 $generated@@93 $generated@@90) $generated@@91 $generated@@92) ($generated@@89 $generated@@93 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@88 ($generated@@77 $generated@@93 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@96 T@U) ) (!  (and (= ($generated@@94 ($generated@@39 $generated@@96)) $generated@@0) (= ($generated@@95 ($generated@@39 $generated@@96)) $generated@@2))
 :pattern ( ($generated@@39 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and ($generated@@97 $generated@@99) (<= ($generated@@33 $generated@@99) ($generated@@33 $generated@@98))) (and (= ($generated@@97 ($generated@@31 $generated@@98 $generated@@99)) ($generated@@97 $generated@@98)) (= ($generated@@33 ($generated@@31 $generated@@98 $generated@@99)) (- ($generated@@33 $generated@@98) ($generated@@33 $generated@@99)))))
 :pattern ( ($generated@@31 $generated@@98 $generated@@99))
)))
(assert (= ($generated@@3 $generated@@100) 4))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@62 $generated@@101 ($generated@@59 $generated@@100 $generated@@103) ($generated@@59 $generated@@38 $generated@@104)) (and (< 2 $generated@@42) ($generated@@37 $generated@@38 $generated@@104 ($generated@@39 $generated@@101)))) (and (and (=> (< 0 ($generated@@33 $generated@@103)) (and ($generated@@29 ($generated@@59 $generated@@38 $generated@@104)) ($generated@@62 $generated@@101 ($generated@@31 $generated@@103 ($generated@@32 1)) ($generated@@59 $generated@@38 ($generated@@44 ($generated@@59 $generated@@38 $generated@@104)))))) (=> (=> (< 0 ($generated@@33 $generated@@103)) ($generated@@48 $generated@@101 ($generated@@20 $generated@@102) ($generated@@31 $generated@@103 ($generated@@32 1)) ($generated@@59 $generated@@38 ($generated@@44 ($generated@@59 $generated@@38 $generated@@104))))) (=> (= ($generated@@57 0) ($generated@@33 $generated@@103)) (forall (($generated@@105 T@U) ) (!  (=> ($generated@@24 $generated@@105 $generated@@103) ($generated@@62 $generated@@101 $generated@@105 $generated@@104))
 :pattern ( ($generated@@48 $generated@@101 ($generated@@20 $generated@@102) $generated@@105 $generated@@104))
))))) (= ($generated@@48 $generated@@101 ($generated@@20 $generated@@102) ($generated@@59 $generated@@100 $generated@@103) ($generated@@59 $generated@@38 $generated@@104))  (and (=> (< 0 ($generated@@33 $generated@@103)) ($generated@@48 $generated@@101 ($generated@@20 $generated@@102) ($generated@@31 $generated@@103 ($generated@@32 1)) ($generated@@59 $generated@@38 ($generated@@44 ($generated@@59 $generated@@38 $generated@@104))))) (=> (= ($generated@@57 0) ($generated@@33 $generated@@103)) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@24 $generated@@106 $generated@@103) ($generated@@48 $generated@@101 ($generated@@20 $generated@@102) $generated@@106 $generated@@104))
 :pattern ( ($generated@@48 $generated@@101 ($generated@@20 $generated@@102) $generated@@106 $generated@@104))
)))))))
 :weight 3
 :pattern ( ($generated@@48 $generated@@101 ($generated@@20 $generated@@102) ($generated@@59 $generated@@100 $generated@@103) ($generated@@59 $generated@@38 $generated@@104)))
))))
(assert (forall (($generated@@107 Int) ) (!  (=> (<= 0 $generated@@107) (and ($generated@@97 ($generated@@32 $generated@@107)) (= ($generated@@33 ($generated@@32 $generated@@107)) $generated@@107)))
 :pattern ( ($generated@@32 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (or ($generated@@24 $generated@@108 $generated@@109) (= $generated@@108 $generated@@109)) ($generated@@24 $generated@@109 $generated@@108))
 :pattern ( ($generated@@24 $generated@@108 $generated@@109) ($generated@@24 $generated@@109 $generated@@108))
)))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@62 $generated@@110 ($generated@@59 $generated@@100 $generated@@112) $generated@@113) (and (< 2 $generated@@42) ($generated@@37 $generated@@38 $generated@@113 ($generated@@39 $generated@@110)))) (and (and (=> (< 0 ($generated@@33 $generated@@112)) (and ($generated@@29 $generated@@113) ($generated@@62 $generated@@110 ($generated@@31 $generated@@112 ($generated@@32 1)) ($generated@@44 $generated@@113)))) (=> (=> (< 0 ($generated@@33 $generated@@112)) ($generated@@48 $generated@@110 ($generated@@20 $generated@@111) ($generated@@31 $generated@@112 ($generated@@32 1)) ($generated@@44 $generated@@113))) (=> (= ($generated@@57 0) ($generated@@33 $generated@@112)) (forall (($generated@@114 T@U) ) (!  (=> ($generated@@24 $generated@@114 $generated@@112) ($generated@@62 $generated@@110 $generated@@114 $generated@@113))
 :pattern ( ($generated@@48 $generated@@110 ($generated@@20 $generated@@111) $generated@@114 $generated@@113))
))))) (= ($generated@@48 $generated@@110 ($generated@@20 $generated@@111) ($generated@@59 $generated@@100 $generated@@112) $generated@@113)  (and (=> (< 0 ($generated@@33 $generated@@112)) ($generated@@48 $generated@@110 ($generated@@20 $generated@@111) ($generated@@31 $generated@@112 ($generated@@32 1)) ($generated@@44 $generated@@113))) (=> (= ($generated@@57 0) ($generated@@33 $generated@@112)) (forall (($generated@@115 T@U) ) (!  (=> ($generated@@24 $generated@@115 $generated@@112) ($generated@@48 $generated@@110 ($generated@@20 $generated@@111) $generated@@115 $generated@@113))
 :pattern ( ($generated@@48 $generated@@110 ($generated@@20 $generated@@111) $generated@@115 $generated@@113))
)))))))
 :weight 3
 :pattern ( ($generated@@48 $generated@@110 ($generated@@20 $generated@@111) ($generated@@59 $generated@@100 $generated@@112) $generated@@113))
))))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@70 ($generated@@77 $generated@@118 $generated@@116) $generated@@117) ($generated@@37 $generated@@118 $generated@@116 $generated@@117))
 :pattern ( ($generated@@70 ($generated@@77 $generated@@118 $generated@@116) $generated@@117))
)))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@37 $generated@@38 $generated@@121 ($generated@@39 $generated@@119)) (= $generated@@122 ($generated@@32 0))) ($generated@@48 $generated@@119 $generated@@120 $generated@@122 $generated@@121))
 :pattern ( ($generated@@48 $generated@@119 $generated@@120 $generated@@122 $generated@@121))
))))
(assert (forall (($generated@@123 T@U) ) (! (<= 0 ($generated@@33 $generated@@123))
 :pattern ( ($generated@@33 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@74 ($generated@@69 $generated@@124 $generated@@125)) $generated@@1)
 :pattern ( ($generated@@69 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@126 ($generated@@69 $generated@@127 $generated@@128)) $generated@@127)
 :pattern ( ($generated@@69 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@44 ($generated@@69 $generated@@129 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@69 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@39 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@39 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@76 $generated@@134 ($generated@@77 $generated@@134 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@77 $generated@@134 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (and (and (and (=> ($generated@@24 $generated@@135 $generated@@136) (or (not (= $generated@@135 $generated@@136)) (not true))) (=> (and ($generated@@97 $generated@@135) (not ($generated@@97 $generated@@136))) ($generated@@24 $generated@@135 $generated@@136))) (=> (and ($generated@@97 $generated@@135) ($generated@@97 $generated@@136)) (= ($generated@@24 $generated@@135 $generated@@136) (< ($generated@@33 $generated@@135) ($generated@@33 $generated@@136))))) (=> (and ($generated@@24 $generated@@135 $generated@@136) ($generated@@97 $generated@@136)) ($generated@@97 $generated@@135)))
 :pattern ( ($generated@@24 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@48 $generated@@137 ($generated@@20 $generated@@138) $generated@@139 $generated@@140) ($generated@@48 $generated@@137 $generated@@138 $generated@@139 $generated@@140))
 :pattern ( ($generated@@48 $generated@@137 ($generated@@20 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and ($generated@@141 $generated@@144) (and ($generated@@29 $generated@@142) ($generated@@89 $generated@@38 $generated@@142 ($generated@@39 $generated@@143) $generated@@144))) ($generated@@88 ($generated@@126 $generated@@142) $generated@@143 $generated@@144))
 :pattern ( ($generated@@88 ($generated@@126 $generated@@142) $generated@@143 $generated@@144))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@145 $generated@@155 $generated@@156 $generated@@157 ($generated@@151 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@160 $generated@@161) $generated@@158)
 :weight 0
)) (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@145 $generated@@162 $generated@@163 $generated@@164 ($generated@@151 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@145 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@145 $generated@@171 $generated@@172 $generated@@173 ($generated@@151 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@145 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)))) (= ($generated@@3 $generated@@146) 5)) (= ($generated@@3 $generated@@147) 6)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@149 $generated@@180 $generated@@181 ($generated@@152 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@182) $generated@@184) $generated@@182)
 :weight 0
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@189 $generated@@190) (= ($generated@@149 $generated@@185 $generated@@186 ($generated@@152 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@187) $generated@@190) ($generated@@149 $generated@@185 $generated@@186 $generated@@188 $generated@@190)))
 :weight 0
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (= ($generated@@3 ($generated@@150 $generated@@191 $generated@@192)) 7))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@153 ($generated@@150 $generated@@193 $generated@@194)) $generated@@193)
 :pattern ( ($generated@@150 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@154 ($generated@@150 $generated@@195 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@150 $generated@@195 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 Bool) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@8 ($generated@@145 $generated@@146 $generated@@147 $generated@@4 ($generated@@148 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@201 $generated@@202))  (=> (and (or (not (= $generated@@201 $generated@@197)) (not true)) ($generated@@8 ($generated@@76 $generated@@4 ($generated@@149 $generated@@147 $generated@@100 ($generated@@149 $generated@@146 ($generated@@150 $generated@@147 $generated@@100) $generated@@198 $generated@@201) $generated@@199)))) $generated@@200))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147 $generated@@4 ($generated@@148 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> ($generated@@70 $generated@@204 ($generated@@39 $generated@@203)) (and (= ($generated@@77 $generated@@38 ($generated@@76 $generated@@38 $generated@@204)) $generated@@204) ($generated@@37 $generated@@38 ($generated@@76 $generated@@38 $generated@@204) ($generated@@39 $generated@@203))))
 :pattern ( ($generated@@70 $generated@@204 ($generated@@39 $generated@@203)))
)))
(assert (forall (($generated@@205 T@U) ) (!  (=> ($generated@@97 $generated@@205) (= $generated@@205 ($generated@@32 ($generated@@33 $generated@@205))))
 :pattern ( ($generated@@33 $generated@@205))
 :pattern ( ($generated@@97 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and ($generated@@141 $generated@@208) (and ($generated@@29 $generated@@206) ($generated@@89 $generated@@38 $generated@@206 ($generated@@39 $generated@@207) $generated@@208))) ($generated@@89 $generated@@38 ($generated@@44 $generated@@206) ($generated@@39 $generated@@207) $generated@@208))
 :pattern ( ($generated@@89 $generated@@38 ($generated@@44 $generated@@206) ($generated@@39 $generated@@207) $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and ($generated@@97 $generated@@210) (<= ($generated@@33 $generated@@210) ($generated@@33 $generated@@209))) (or (and (= $generated@@210 ($generated@@32 0)) (= ($generated@@31 $generated@@209 $generated@@210) $generated@@209)) (and (or (not (= $generated@@210 ($generated@@32 0))) (not true)) ($generated@@24 ($generated@@31 $generated@@209 $generated@@210) $generated@@209))))
 :pattern ( ($generated@@31 $generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 Int) ) (! (= ($generated@@77 $generated@@5 ($generated@@9 ($generated@@57 $generated@@211))) ($generated@@59 $generated@@100 ($generated@@77 $generated@@5 ($generated@@9 $generated@@211))))
 :pattern ( ($generated@@77 $generated@@5 ($generated@@9 ($generated@@57 $generated@@211))))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@T) ) (! (= ($generated@@77 $generated@@213 ($generated@@59 $generated@@213 $generated@@212)) ($generated@@59 $generated@@100 ($generated@@77 $generated@@213 $generated@@212)))
 :pattern ( ($generated@@77 $generated@@213 ($generated@@59 $generated@@213 $generated@@212)))
)))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (or ($generated@@81 $generated@@214 $generated@@215) (and (< 2 $generated@@42) ($generated@@37 $generated@@38 $generated@@215 ($generated@@39 $generated@@214)))) (and ($generated@@43 $generated@@214 $generated@@215) (= ($generated@@80 $generated@@214 $generated@@215) ($generated@@19 $generated@@214 ($generated@@20 $generated@@82) $generated@@215))))
 :pattern ( ($generated@@80 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> ($generated@@141 $generated@@219) (= ($generated@@89 $generated@@38 ($generated@@69 $generated@@217 $generated@@218) ($generated@@39 $generated@@216) $generated@@219)  (and ($generated@@88 $generated@@217 $generated@@216 $generated@@219) ($generated@@89 $generated@@38 $generated@@218 ($generated@@39 $generated@@216) $generated@@219))))
 :pattern ( ($generated@@89 $generated@@38 ($generated@@69 $generated@@217 $generated@@218) ($generated@@39 $generated@@216) $generated@@219))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 (T@U) Bool)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@232  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@62 $generated@@220 $generated@@221 $generated@@222) (or ($generated@@48 $generated@@220 ($generated@@20 $generated@@82) $generated@@221 $generated@@222) (=> (< 0 ($generated@@33 $generated@@221)) ($generated@@48 $generated@@220 ($generated@@20 ($generated@@20 $generated@@82)) ($generated@@31 $generated@@221 ($generated@@32 1)) ($generated@@44 $generated@@222)))))) (=> (=> ($generated@@62 $generated@@220 $generated@@221 $generated@@222) (or ($generated@@48 $generated@@220 ($generated@@20 $generated@@82) $generated@@221 $generated@@222) (=> (< 0 ($generated@@33 $generated@@221)) ($generated@@48 $generated@@220 ($generated@@20 ($generated@@20 $generated@@82)) ($generated@@31 $generated@@221 ($generated@@32 1)) ($generated@@44 $generated@@222))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@62 $generated@@220 $generated@@221 $generated@@222) (or ($generated@@48 $generated@@220 ($generated@@20 $generated@@82) $generated@@221 $generated@@222) (=> (= ($generated@@57 0) ($generated@@33 $generated@@221)) (forall (($generated@@233 T@U) ) (!  (=> ($generated@@24 $generated@@233 $generated@@221) ($generated@@48 $generated@@220 ($generated@@20 ($generated@@20 $generated@@82)) $generated@@233 $generated@@222))
 :pattern ( ($generated@@48 $generated@@220 ($generated@@20 ($generated@@20 $generated@@82)) $generated@@233 $generated@@222))
))))))))))
(let (($generated@@234  (=> (and ($generated@@29 $generated@@222) (= $generated@@223 ($generated@@44 $generated@@222))) (=> (and (and ($generated@@89 $generated@@38 $generated@@223 ($generated@@39 $generated@@220) $generated@@224) ($generated@@81 $generated@@220 ($generated@@44 $generated@@222))) (and ($generated@@29 $generated@@222) ($generated@@81 $generated@@220 ($generated@@44 $generated@@222)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> ($generated@@81 $generated@@220 ($generated@@44 $generated@@222)) (or ($generated@@80 $generated@@220 ($generated@@44 $generated@@222)) (=> ($generated@@43 $generated@@220 ($generated@@44 $generated@@222)) (or ($generated@@19 $generated@@220 ($generated@@20 $generated@@82) ($generated@@44 $generated@@222)) ($generated@@19 $generated@@220 ($generated@@20 ($generated@@20 $generated@@82)) ($generated@@44 ($generated@@44 $generated@@222)))))))) (=> (and ($generated@@80 $generated@@220 ($generated@@44 $generated@@222)) (= (ControlFlow 0 5) 2)) $generated@@232))))))
(let (($generated@@235  (=> (< 0 ($generated@@33 $generated@@221)) (and (=> (= (ControlFlow 0 7) (- 0 9)) ($generated@@97 ($generated@@59 $generated@@100 ($generated@@32 1)))) (=> ($generated@@97 ($generated@@59 $generated@@100 ($generated@@32 1))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (<= ($generated@@33 ($generated@@59 $generated@@100 ($generated@@32 1))) ($generated@@33 $generated@@221))) (=> (<= ($generated@@33 ($generated@@59 $generated@@100 ($generated@@32 1))) ($generated@@33 $generated@@221)) (=> (and (and (= $generated@@225 ($generated@@31 $generated@@221 ($generated@@32 1))) ($generated@@29 $generated@@222)) (and ($generated@@29 $generated@@222) (= $generated@@226 ($generated@@44 $generated@@222)))) (=> (and (and (and ($generated@@141 $generated@@224) ($generated@@227 $generated@@224)) ($generated@@62 $generated@@220 $generated@@225 $generated@@226)) (and (and ($generated@@62 $generated@@220 $generated@@225 $generated@@226) (and ($generated@@48 $generated@@220 ($generated@@20 $generated@@82) $generated@@225 $generated@@226) (and (=> (< 0 ($generated@@33 $generated@@225)) ($generated@@48 $generated@@220 ($generated@@20 $generated@@82) ($generated@@31 $generated@@225 ($generated@@32 1)) ($generated@@44 $generated@@226))) (=> (= ($generated@@57 0) ($generated@@33 $generated@@225)) (forall (($generated@@236 T@U) ) (!  (=> ($generated@@24 $generated@@236 $generated@@225) ($generated@@48 $generated@@220 ($generated@@20 $generated@@82) $generated@@236 $generated@@226))
 :pattern ( ($generated@@48 $generated@@220 ($generated@@20 $generated@@82) $generated@@236 $generated@@226))
)))))) (= $generated@@228 $generated@@224))) (and (=> (= (ControlFlow 0 7) 5) $generated@@234) (=> (= (ControlFlow 0 7) 2) $generated@@232)))))))))))
(let (($generated@@237  (=> (<= ($generated@@33 $generated@@221) 0) (=> (and (and (and ($generated@@141 $generated@@229) ($generated@@227 $generated@@229)) (= $generated@@228 $generated@@229)) (and (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and ($generated@@37 $generated@@38 $generated@@239 ($generated@@39 $generated@@220)) ($generated@@24 $generated@@238 $generated@@221)) ($generated@@48 $generated@@220 ($generated@@20 $generated@@82) $generated@@238 $generated@@239))
 :pattern ( ($generated@@48 $generated@@220 ($generated@@20 $generated@@82) $generated@@238 $generated@@239))
)) (= (ControlFlow 0 4) 2))) $generated@@232))))
(let (($generated@@240  (=> (= $generated@@230 ($generated@@148 $generated@@231 $generated@@228 $generated false)) (and (=> (= (ControlFlow 0 10) 7) $generated@@235) (=> (= (ControlFlow 0 10) 4) $generated@@237)))))
(let (($generated@@241  (=> (and ($generated@@141 $generated@@228) ($generated@@227 $generated@@228)) (=> (and (and (and ($generated@@37 $generated@@38 $generated@@222 ($generated@@39 $generated@@220)) ($generated@@89 $generated@@38 $generated@@222 ($generated@@39 $generated@@220) $generated@@228)) ($generated@@28 $generated@@222)) (and (= 4 $generated@@42) (= (ControlFlow 0 11) 10))) $generated@@240))))
$generated@@241)))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 5) (- 6))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
