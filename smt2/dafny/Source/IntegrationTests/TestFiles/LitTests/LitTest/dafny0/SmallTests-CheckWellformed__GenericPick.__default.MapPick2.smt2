(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Bool)
(declare-fun $generated@@22 (T@T T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 (T@U T@U T@U) Bool)
(declare-fun $generated@@36 (T@U T@U T@U) T@U)
(declare-fun $generated@@37 (T@U T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@148 (T@U) Int)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@218 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@5 $generated@@23) 3))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@22 $generated@@23 $generated@@27 ($generated@@24 $generated@@25 $generated@@26)) ($generated@@21 $generated@@27))
 :pattern ( ($generated@@21 $generated@@27) ($generated@@22 $generated@@23 $generated@@27 ($generated@@24 $generated@@25 $generated@@26)))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@22 $generated@@23 ($generated@@28 $generated@@32 $generated@@33) ($generated@@24 $generated@@30 $generated@@31))  (and ($generated@@29 $generated@@32 $generated@@30) ($generated@@29 $generated@@33 $generated@@31)))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@28 $generated@@32 $generated@@33) ($generated@@24 $generated@@30 $generated@@31)))
)))
(assert (= ($generated@@5 $generated@@38) 4))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (and (or ($generated@@37 $generated@@45 $generated@@46 $generated@@47) (and (< 0 $generated@@34) (and (and ($generated@@22 $generated@@38 $generated@@47 ($generated@@39 $generated@@45 $generated@@46)) ($generated@@40 $generated@@38 $generated@@47 ($generated@@39 $generated@@45 $generated@@46) $generated@@44)) (exists (($generated@@48 T@U) ) (!  (and ($generated@@29 $generated@@48 $generated@@45) ($generated@@41 ($generated@@42 $generated@@47) $generated@@48))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@47) $generated@@48))
))))) ($generated@@43 $generated@@44)) ($generated@@35 ($generated@@36 $generated@@45 $generated@@46 $generated@@47) $generated@@45 $generated@@44))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@45 $generated@@46 $generated@@47) $generated@@45 $generated@@44))
))))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@43 $generated@@56) (= ($generated@@40 $generated@@23 ($generated@@28 $generated@@54 $generated@@55) ($generated@@24 $generated@@52 $generated@@53) $generated@@56)  (and ($generated@@35 $generated@@54 $generated@@52 $generated@@56) ($generated@@35 $generated@@55 $generated@@53 $generated@@56))))
 :pattern ( ($generated@@40 $generated@@23 ($generated@@28 $generated@@54 $generated@@55) ($generated@@24 $generated@@52 $generated@@53) $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@21 $generated@@58) (= ($generated@@57 $generated@@58) $generated@@2))
 :pattern ( ($generated@@21 $generated@@58))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@37 $generated@@61 $generated@@62 $generated@@64) (and (< 0 $generated@@34) (and (and ($generated@@43 $generated@@63) ($generated@@22 $generated@@38 $generated@@64 ($generated@@39 $generated@@61 $generated@@62))) (exists (($generated@@65 T@U) ) (!  (and ($generated@@29 $generated@@65 $generated@@61) ($generated@@41 ($generated@@42 $generated@@64) $generated@@65))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@64) $generated@@65))
))))) (and ($generated@@59 $generated@@61 $generated@@62 $generated@@64) (= ($generated@@36 $generated@@61 $generated@@62 $generated@@64) (let (($generated@@66 ($generated@@60 $generated@@61 $generated@@62 $generated@@64)))
$generated@@66))))
 :pattern ( ($generated@@36 $generated@@61 $generated@@62 $generated@@64) ($generated@@43 $generated@@63))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 ($generated@@67 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@67 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@21 $generated@@71) (exists (($generated@@72 T@U) ($generated@@73 T@U) ) (= $generated@@71 ($generated@@28 $generated@@72 $generated@@73))))
 :pattern ( ($generated@@21 $generated@@71))
)))
(assert (= ($generated@@5 $generated@@74) 5))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@22 $generated@@74 $generated@@76 ($generated@@75 $generated@@77)) (forall (($generated@@78 T@U) ) (!  (=> ($generated@@41 $generated@@76 $generated@@78) ($generated@@29 $generated@@78 $generated@@77))
 :pattern ( ($generated@@41 $generated@@76 $generated@@78))
)))
 :pattern ( ($generated@@22 $generated@@74 $generated@@76 ($generated@@75 $generated@@77)))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@35 ($generated@@68 $generated@@82 $generated@@79) $generated@@80 $generated@@81) ($generated@@40 $generated@@82 $generated@@79 $generated@@80 $generated@@81))
 :pattern ( ($generated@@35 ($generated@@68 $generated@@82 $generated@@79) $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@59 $generated@@83 $generated@@84 $generated@@85) ($generated@@41 ($generated@@42 $generated@@85) ($generated@@60 $generated@@83 $generated@@84 $generated@@85)))
 :pattern ( ($generated@@60 $generated@@83 $generated@@84 $generated@@85))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (or ($generated@@37 $generated@@86 $generated@@87 ($generated@@49 $generated@@38 $generated@@89)) (and (< 0 $generated@@34) (and (and ($generated@@43 $generated@@88) ($generated@@22 $generated@@38 $generated@@89 ($generated@@39 $generated@@86 $generated@@87))) (exists (($generated@@90 T@U) ) (!  (and ($generated@@29 $generated@@90 $generated@@86) ($generated@@41 ($generated@@42 $generated@@89) $generated@@90))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@89) $generated@@90))
))))) (and ($generated@@59 $generated@@86 $generated@@87 ($generated@@49 $generated@@38 $generated@@89)) (= ($generated@@36 $generated@@86 $generated@@87 ($generated@@49 $generated@@38 $generated@@89)) (let (($generated@@91 ($generated@@60 $generated@@86 $generated@@87 ($generated@@49 $generated@@38 $generated@@89))))
$generated@@91))))
 :weight 3
 :pattern ( ($generated@@36 $generated@@86 $generated@@87 ($generated@@49 $generated@@38 $generated@@89)) ($generated@@43 $generated@@88))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@29 ($generated@@68 $generated@@94 $generated@@92) $generated@@93) ($generated@@22 $generated@@94 $generated@@92 $generated@@93))
 :pattern ( ($generated@@29 ($generated@@68 $generated@@94 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@40 $generated@@74 $generated@@95 ($generated@@75 $generated@@96) $generated@@97) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@41 $generated@@95 $generated@@98) ($generated@@35 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@41 $generated@@95 $generated@@98))
)))
 :pattern ( ($generated@@40 $generated@@74 $generated@@95 ($generated@@75 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@99 ($generated@@39 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@39 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@102 ($generated@@39 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@39 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@105 ($generated@@39 $generated@@106 $generated@@107)) $generated@@0)
 :pattern ( ($generated@@39 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@57 ($generated@@28 $generated@@108 $generated@@109)) $generated@@2)
 :pattern ( ($generated@@28 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@110 ($generated@@24 $generated@@111 $generated@@112)) $generated@@111)
 :pattern ( ($generated@@24 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@113 ($generated@@24 $generated@@114 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@24 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@116 ($generated@@28 $generated@@117 $generated@@118)) $generated@@117)
 :pattern ( ($generated@@28 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@119 ($generated@@28 $generated@@120 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@28 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@75 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@75 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@105 ($generated@@75 $generated@@124)) $generated)
 :pattern ( ($generated@@75 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@67 $generated@@126 ($generated@@68 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@68 $generated@@126 $generated@@125))
)))
(assert  (and (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@127 $generated@@131 $generated@@132 ($generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@135) $generated@@133)
 :weight 0
)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@127 $generated@@136 $generated@@137 ($generated@@130 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@127 $generated@@136 $generated@@137 $generated@@139 $generated@@141)))
 :weight 0
))) (= ($generated@@5 $generated@@128) 6)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@40 $generated@@38 $generated@@142 ($generated@@39 $generated@@143 $generated@@144) $generated@@145) (forall (($generated@@146 T@U) ) (!  (=> ($generated@@41 ($generated@@42 $generated@@142) $generated@@146) (and ($generated@@35 ($generated@@127 $generated@@128 $generated@@128 ($generated@@129 $generated@@142) $generated@@146) $generated@@144 $generated@@145) ($generated@@35 $generated@@146 $generated@@143 $generated@@145)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@128 ($generated@@129 $generated@@142) $generated@@146))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@142) $generated@@146))
)))
 :pattern ( ($generated@@40 $generated@@38 $generated@@142 ($generated@@39 $generated@@143 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (< ($generated@@147 $generated@@149) ($generated@@148 ($generated@@28 $generated@@149 $generated@@150)))
 :pattern ( ($generated@@28 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (< ($generated@@147 $generated@@152) ($generated@@148 ($generated@@28 $generated@@151 $generated@@152)))
 :pattern ( ($generated@@28 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (!  (not ($generated@@41 ($generated@@42 $generated@@153) $generated@@154))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@153) $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@29 $generated@@155 ($generated@@39 $generated@@156 $generated@@157)) (and (= ($generated@@68 $generated@@38 ($generated@@67 $generated@@38 $generated@@155)) $generated@@155) ($generated@@22 $generated@@38 ($generated@@67 $generated@@38 $generated@@155) ($generated@@39 $generated@@156 $generated@@157))))
 :pattern ( ($generated@@29 $generated@@155 ($generated@@39 $generated@@156 $generated@@157)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@29 $generated@@160 ($generated@@24 $generated@@158 $generated@@159)) (and (= ($generated@@68 $generated@@23 ($generated@@67 $generated@@23 $generated@@160)) $generated@@160) ($generated@@22 $generated@@23 ($generated@@67 $generated@@23 $generated@@160) ($generated@@24 $generated@@158 $generated@@159))))
 :pattern ( ($generated@@29 $generated@@160 ($generated@@24 $generated@@158 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@161 $generated@@169 $generated@@170 $generated@@171 ($generated@@166 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@174 $generated@@175) $generated@@172)
 :weight 0
)) (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (or (= $generated@@181 $generated@@183) (= ($generated@@161 $generated@@176 $generated@@177 $generated@@178 ($generated@@166 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@183 $generated@@184) ($generated@@161 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@183 $generated@@184)))
 :weight 0
)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@161 $generated@@185 $generated@@186 $generated@@187 ($generated@@166 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))) (= ($generated@@5 $generated@@162) 7)) (= ($generated@@5 $generated@@163) 8)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@5 ($generated@@165 $generated@@194 $generated@@195)) 9))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@165 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@168 ($generated@@165 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@165 $generated@@198 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@10 ($generated@@161 $generated@@162 $generated@@163 $generated@@6 ($generated@@164 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@204 $generated@@205))  (=> (and (or (not (= $generated@@204 $generated@@200)) (not true)) ($generated@@10 ($generated@@67 $generated@@6 ($generated@@127 $generated@@163 $generated@@128 ($generated@@127 $generated@@162 ($generated@@165 $generated@@163 $generated@@128) $generated@@201 $generated@@204) $generated@@202)))) $generated@@203))
 :pattern ( ($generated@@161 $generated@@162 $generated@@163 $generated@@6 ($generated@@164 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (and (= ($generated@@105 ($generated@@24 $generated@@207 $generated@@208)) $generated@@3) (= ($generated@@206 ($generated@@24 $generated@@207 $generated@@208)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@207 $generated@@208))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (or ($generated@@37 $generated@@209 $generated@@210 $generated@@211) (and (< 0 $generated@@34) (and ($generated@@22 $generated@@38 $generated@@211 ($generated@@39 $generated@@209 $generated@@210)) (exists (($generated@@212 T@U) ) (!  (and ($generated@@29 $generated@@212 $generated@@209) ($generated@@41 ($generated@@42 $generated@@211) $generated@@212))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@211) $generated@@212))
))))) ($generated@@29 ($generated@@36 $generated@@209 $generated@@210 $generated@@211) $generated@@209))
 :pattern ( ($generated@@36 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@213 T@U) ) (!  (or (= $generated@@213 $generated@@153) (exists (($generated@@214 T@U) ) ($generated@@41 ($generated@@42 $generated@@213) $generated@@214)))
 :pattern ( ($generated@@42 $generated@@213))
)))
(assert (forall (($generated@@216 T@U) ) (!  (or (= $generated@@216 $generated@@153) (exists (($generated@@217 T@U) ) ($generated@@41 ($generated@@215 $generated@@216) $generated@@217)))
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (= ($generated@@41 ($generated@@218 $generated@@219) $generated@@220)  (and ($generated@@41 ($generated@@42 $generated@@219) ($generated@@116 ($generated@@67 $generated@@23 $generated@@220))) (= ($generated@@127 $generated@@128 $generated@@128 ($generated@@129 $generated@@219) ($generated@@116 ($generated@@67 $generated@@23 $generated@@220))) ($generated@@119 ($generated@@67 $generated@@23 $generated@@220)))))
 :pattern ( ($generated@@41 ($generated@@218 $generated@@219) $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@41 ($generated@@215 $generated@@221) $generated@@222) (exists (($generated@@223 T@U) ) (!  (and ($generated@@41 ($generated@@42 $generated@@221) $generated@@223) (= $generated@@222 ($generated@@127 $generated@@128 $generated@@128 ($generated@@129 $generated@@221) $generated@@223)))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@221) $generated@@223))
 :pattern ( ($generated@@127 $generated@@128 $generated@@128 ($generated@@129 $generated@@221) $generated@@223))
)))
 :pattern ( ($generated@@41 ($generated@@215 $generated@@221) $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ) (! (= ($generated@@147 ($generated@@68 $generated@@23 $generated@@224)) ($generated@@148 $generated@@224))
 :pattern ( ($generated@@147 ($generated@@68 $generated@@23 $generated@@224)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> ($generated@@29 $generated@@225 ($generated@@75 $generated@@226)) (and (= ($generated@@68 $generated@@74 ($generated@@67 $generated@@74 $generated@@225)) $generated@@225) ($generated@@22 $generated@@74 ($generated@@67 $generated@@74 $generated@@225) ($generated@@75 $generated@@226))))
 :pattern ( ($generated@@29 $generated@@225 ($generated@@75 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (= ($generated@@22 $generated@@38 $generated@@227 ($generated@@39 $generated@@228 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> ($generated@@41 ($generated@@42 $generated@@227) $generated@@230) (and ($generated@@29 ($generated@@127 $generated@@128 $generated@@128 ($generated@@129 $generated@@227) $generated@@230) $generated@@229) ($generated@@29 $generated@@230 $generated@@228)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@128 ($generated@@129 $generated@@227) $generated@@230))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@227) $generated@@230))
)))
 :pattern ( ($generated@@22 $generated@@38 $generated@@227 ($generated@@39 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and ($generated@@43 $generated@@233) (and ($generated@@21 $generated@@231) (exists (($generated@@234 T@U) ) (! ($generated@@40 $generated@@23 $generated@@231 ($generated@@24 $generated@@232 $generated@@234) $generated@@233)
 :pattern ( ($generated@@40 $generated@@23 $generated@@231 ($generated@@24 $generated@@232 $generated@@234) $generated@@233))
)))) ($generated@@35 ($generated@@116 $generated@@231) $generated@@232 $generated@@233))
 :pattern ( ($generated@@35 ($generated@@116 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and ($generated@@43 $generated@@237) (and ($generated@@21 $generated@@235) (exists (($generated@@238 T@U) ) (! ($generated@@40 $generated@@23 $generated@@235 ($generated@@24 $generated@@238 $generated@@236) $generated@@237)
 :pattern ( ($generated@@40 $generated@@23 $generated@@235 ($generated@@24 $generated@@238 $generated@@236) $generated@@237))
)))) ($generated@@35 ($generated@@119 $generated@@235) $generated@@236 $generated@@237))
 :pattern ( ($generated@@35 ($generated@@119 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= ($generated@@28 ($generated@@49 $generated@@128 $generated@@239) ($generated@@49 $generated@@128 $generated@@240)) ($generated@@49 $generated@@23 ($generated@@28 $generated@@239 $generated@@240)))
 :pattern ( ($generated@@28 ($generated@@49 $generated@@128 $generated@@239) ($generated@@49 $generated@@128 $generated@@240)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@T) ) (! (= ($generated@@68 $generated@@242 ($generated@@49 $generated@@242 $generated@@241)) ($generated@@49 $generated@@128 ($generated@@68 $generated@@242 $generated@@241)))
 :pattern ( ($generated@@68 $generated@@242 ($generated@@49 $generated@@242 $generated@@241)))
)))
(assert (forall (($generated@@243 T@U) ) (!  (or (= $generated@@243 $generated@@153) (exists (($generated@@244 T@U) ($generated@@245 T@U) ) ($generated@@41 ($generated@@218 $generated@@243) ($generated@@68 $generated@@23 ($generated@@28 $generated@@244 $generated@@245)))))
 :pattern ( ($generated@@218 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> ($generated@@22 $generated@@38 $generated@@246 ($generated@@39 $generated@@247 $generated@@248)) (and (and ($generated@@22 $generated@@74 ($generated@@42 $generated@@246) ($generated@@75 $generated@@247)) ($generated@@22 $generated@@74 ($generated@@215 $generated@@246) ($generated@@75 $generated@@248))) ($generated@@22 $generated@@74 ($generated@@218 $generated@@246) ($generated@@75 ($generated@@24 $generated@@247 $generated@@248)))))
 :pattern ( ($generated@@22 $generated@@38 $generated@@246 ($generated@@39 $generated@@247 $generated@@248)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@258  (=> (= (ControlFlow 0 3) (- 0 2)) (exists (($generated@@259 T@U) )  (and ($generated@@29 $generated@@259 $generated@@249) ($generated@@41 ($generated@@42 $generated@@250) $generated@@259))))))
(let (($generated@@260  (=> (and (not (and ($generated@@29 $generated@@251 $generated@@249) ($generated@@35 $generated@@251 $generated@@249 $generated@@252))) (= (ControlFlow 0 5) 3)) $generated@@258)))
(let (($generated@@261  (=> (and (and ($generated@@29 $generated@@251 $generated@@249) ($generated@@35 $generated@@251 $generated@@249 $generated@@252)) (= (ControlFlow 0 4) 3)) $generated@@258)))
(let (($generated@@262 true))
(let (($generated@@263  (=> (= $generated@@253 ($generated@@164 $generated@@254 $generated@@252 $generated@@1 false)) (=> (and (and ($generated@@29 $generated@@255 $generated@@249) ($generated@@35 $generated@@255 $generated@@249 $generated@@252)) ($generated@@41 ($generated@@42 $generated@@250) $generated@@255)) (and (and (=> (= (ControlFlow 0 6) 1) $generated@@262) (=> (= (ControlFlow 0 6) 4) $generated@@261)) (=> (= (ControlFlow 0 6) 5) $generated@@260))))))
(let (($generated@@264  (=> (and (and (and ($generated@@43 $generated@@252) ($generated@@256 $generated@@252)) ($generated@@22 $generated@@38 $generated@@250 ($generated@@39 $generated@@249 $generated@@257))) (and (= 0 $generated@@34) (= (ControlFlow 0 7) 6))) $generated@@263)))
$generated@@264)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
