(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (Int) Int)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@29 () Int)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@U Int) T@U)
(declare-fun $generated@@37 (Int) Bool)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@43 (Int) Bool)
(declare-fun $generated@@45 (T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@74 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@78 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@1))
(assert (= ($generated@@21 $generated@@0) $generated@@2))
(assert (= ($generated@@22 $generated@@23) 0))
(assert (forall (($generated@@25 Int) ) (! (= ($generated@@24 $generated@@25) $generated@@25)
 :pattern ( ($generated@@24 $generated@@25))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@T) ) (! (= ($generated@@26 $generated@@28 $generated@@27) $generated@@27)
 :pattern ( ($generated@@26 $generated@@28 $generated@@27))
)))
(assert (= ($generated@@5 $generated@@33) 3))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@38 T@U) ) (!  (=> (or ($generated@@31 $generated@@38) (and (< 1 $generated@@29) (and ($generated@@32 $generated@@33 $generated@@38 ($generated@@34 $generated@@0)) (forall (($generated@@39 Int) ) (!  (and (=> (and (<= ($generated@@24 0) $generated@@39) (< $generated@@39 ($generated@@22 $generated@@38))) (and (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@38 $generated@@39)))) (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@38 $generated@@39))) 256))) (=> (and (<= ($generated@@24 0) $generated@@39) (< $generated@@39 ($generated@@22 $generated@@38))) ($generated@@37 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@38 $generated@@39))))))
 :pattern ( ($generated@@35 $generated@@7 ($generated@@36 $generated@@38 $generated@@39)))
))))) (= ($generated@@30 $generated@@38) (> ($generated@@22 $generated@@38) 2)))
 :pattern ( ($generated@@30 $generated@@38))
))))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@40 $generated@@42 ($generated@@35 $generated@@42 $generated@@41)) $generated@@41)
 :pattern ( ($generated@@35 $generated@@42 $generated@@41))
)))
(assert  (=> (<= 0 $generated@@29) (forall (($generated@@44 Int) ) (!  (=> (or ($generated@@43 $generated@@44) (and (< 0 $generated@@29) (and (<= ($generated@@24 0) $generated@@44) (< $generated@@44 256)))) (= ($generated@@37 $generated@@44) ($generated@@10 ($generated@@26 $generated@@6 ($generated@@9 true)))))
 :pattern ( ($generated@@37 $generated@@44))
))))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@45 ($generated@@40 $generated@@50 $generated@@47) $generated@@48 $generated@@49) ($generated@@46 $generated@@50 $generated@@47 $generated@@48 $generated@@49))
 :pattern ( ($generated@@45 ($generated@@40 $generated@@50 $generated@@47) $generated@@48 $generated@@49))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@53 T@U) ) (!  (=> (or ($generated@@52 ($generated@@26 $generated@@33 $generated@@53)) (and (< 2 $generated@@29) (and ($generated@@32 $generated@@33 $generated@@53 ($generated@@34 $generated@@0)) (forall (($generated@@54 Int) ) (!  (and (=> (and (<= ($generated@@24 0) $generated@@54) (< $generated@@54 ($generated@@22 ($generated@@26 $generated@@33 $generated@@53)))) (and (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 ($generated@@26 $generated@@33 $generated@@53) $generated@@54)))) (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 ($generated@@26 $generated@@33 $generated@@53) $generated@@54))) 256))) (=> (and (<= ($generated@@24 0) $generated@@54) (< $generated@@54 ($generated@@22 ($generated@@26 $generated@@33 $generated@@53)))) ($generated@@37 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 ($generated@@26 $generated@@33 $generated@@53) $generated@@54))))))
 :pattern ( ($generated@@35 $generated@@7 ($generated@@36 $generated@@53 $generated@@54)))
))))) (and ($generated@@31 ($generated@@26 $generated@@33 $generated@@53)) (= ($generated@@51 ($generated@@26 $generated@@33 $generated@@53)) ($generated@@10 ($generated@@26 $generated@@6 ($generated@@9 ($generated@@30 ($generated@@26 $generated@@33 $generated@@53))))))))
 :weight 3
 :pattern ( ($generated@@51 ($generated@@26 $generated@@33 $generated@@53)))
))))
(assert  (=> (<= 0 $generated@@29) (forall (($generated@@55 Int) ) (!  (=> (or ($generated@@43 ($generated@@24 $generated@@55)) (and (< 0 $generated@@29) (and (<= ($generated@@24 0) ($generated@@24 $generated@@55)) (< $generated@@55 256)))) (= ($generated@@37 ($generated@@24 $generated@@55)) ($generated@@10 ($generated@@26 $generated@@6 ($generated@@9 true)))))
 :weight 3
 :pattern ( ($generated@@37 ($generated@@24 $generated@@55)))
))))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@56 $generated@@57 $generated@@0) (and (= ($generated@@40 $generated@@7 ($generated@@35 $generated@@7 $generated@@57)) $generated@@57) ($generated@@32 $generated@@7 ($generated@@35 $generated@@7 $generated@@57) $generated@@0)))
 :pattern ( ($generated@@56 $generated@@57 $generated@@0))
)))
(assert (forall (($generated@@58 T@U) ) (!  (=> ($generated@@56 $generated@@58 $generated) (and (= ($generated@@40 $generated@@6 ($generated@@35 $generated@@6 $generated@@58)) $generated@@58) ($generated@@32 $generated@@6 ($generated@@35 $generated@@6 $generated@@58) $generated)))
 :pattern ( ($generated@@56 $generated@@58 $generated))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@56 ($generated@@40 $generated@@61 $generated@@59) $generated@@60) ($generated@@32 $generated@@61 $generated@@59 $generated@@60))
 :pattern ( ($generated@@56 ($generated@@40 $generated@@61 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (<= 0 ($generated@@22 $generated@@62))
 :pattern ( ($generated@@22 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@46 $generated@@33 $generated@@63 ($generated@@34 $generated@@64) $generated@@65) (forall (($generated@@66 Int) ) (!  (=> (and (<= 0 $generated@@66) (< $generated@@66 ($generated@@22 $generated@@63))) ($generated@@45 ($generated@@36 $generated@@63 $generated@@66) $generated@@64 $generated@@65))
 :pattern ( ($generated@@36 $generated@@63 $generated@@66))
)))
 :pattern ( ($generated@@46 $generated@@33 $generated@@63 ($generated@@34 $generated@@64) $generated@@65))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@67 T@U) ) (!  (=> (or ($generated@@31 ($generated@@26 $generated@@33 $generated@@67)) (and (< 1 $generated@@29) (and ($generated@@32 $generated@@33 $generated@@67 ($generated@@34 $generated@@0)) (forall (($generated@@68 Int) ) (!  (and (=> (and (<= ($generated@@24 0) $generated@@68) (< $generated@@68 ($generated@@22 ($generated@@26 $generated@@33 $generated@@67)))) (and (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 ($generated@@26 $generated@@33 $generated@@67) $generated@@68)))) (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 ($generated@@26 $generated@@33 $generated@@67) $generated@@68))) 256))) (=> (and (<= ($generated@@24 0) $generated@@68) (< $generated@@68 ($generated@@22 ($generated@@26 $generated@@33 $generated@@67)))) ($generated@@37 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 ($generated@@26 $generated@@33 $generated@@67) $generated@@68))))))
 :pattern ( ($generated@@35 $generated@@7 ($generated@@36 $generated@@67 $generated@@68)))
))))) (= ($generated@@30 ($generated@@26 $generated@@33 $generated@@67)) (> ($generated@@22 ($generated@@26 $generated@@33 $generated@@67)) 2)))
 :weight 3
 :pattern ( ($generated@@30 ($generated@@26 $generated@@33 $generated@@67)))
))))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 ($generated@@34 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@34 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@21 ($generated@@34 $generated@@71)) $generated@@3)
 :pattern ( ($generated@@34 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@35 $generated@@73 ($generated@@40 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@40 $generated@@73 $generated@@72))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@74 $generated@@85 $generated@@86 $generated@@87 ($generated@@81 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@90 $generated@@91 $generated@@88) $generated@@90 $generated@@91) $generated@@88)
 :weight 0
)) (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or (= $generated@@97 $generated@@99) (= ($generated@@74 $generated@@92 $generated@@93 $generated@@94 ($generated@@81 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@99 $generated@@100) ($generated@@74 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@99 $generated@@100)))
 :weight 0
)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@107 $generated@@109) (= ($generated@@74 $generated@@101 $generated@@102 $generated@@103 ($generated@@81 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@108 $generated@@109) ($generated@@74 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@108 $generated@@109)))
 :weight 0
)))) (= ($generated@@5 $generated@@75) 4)) (= ($generated@@5 $generated@@76) 5)) (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@78 $generated@@110 $generated@@111 ($generated@@82 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@112) $generated@@114) $generated@@112)
 :weight 0
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@78 $generated@@115 $generated@@116 ($generated@@82 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@78 $generated@@115 $generated@@116 $generated@@118 $generated@@120)))
 :weight 0
))) (= ($generated@@5 $generated@@79) 6)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@5 ($generated@@80 $generated@@121 $generated@@122)) 7))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@80 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@80 $generated@@125 $generated@@126))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 Bool) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@10 ($generated@@74 $generated@@75 $generated@@76 $generated@@6 ($generated@@77 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))  (=> (and (or (not (= $generated@@131 $generated@@127)) (not true)) ($generated@@10 ($generated@@35 $generated@@6 ($generated@@78 $generated@@76 $generated@@79 ($generated@@78 $generated@@75 ($generated@@80 $generated@@76 $generated@@79) $generated@@128 $generated@@131) $generated@@129)))) $generated@@130))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76 $generated@@6 ($generated@@77 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@133 T@U) ) (!  (=> (or ($generated@@52 $generated@@133) (and (< 2 $generated@@29) (and ($generated@@32 $generated@@33 $generated@@133 ($generated@@34 $generated@@0)) (forall (($generated@@134 Int) ) (!  (and (=> (and (<= ($generated@@24 0) $generated@@134) (< $generated@@134 ($generated@@22 $generated@@133))) (and (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@133 $generated@@134)))) (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@133 $generated@@134))) 256))) (=> (and (<= ($generated@@24 0) $generated@@134) (< $generated@@134 ($generated@@22 $generated@@133))) ($generated@@37 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@133 $generated@@134))))))
 :pattern ( ($generated@@35 $generated@@7 ($generated@@36 $generated@@133 $generated@@134)))
))))) (and ($generated@@31 $generated@@133) (= ($generated@@51 $generated@@133) ($generated@@30 $generated@@133))))
 :pattern ( ($generated@@51 $generated@@133))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> ($generated@@56 $generated@@135 ($generated@@34 $generated@@136)) (and (= ($generated@@40 $generated@@33 ($generated@@35 $generated@@33 $generated@@135)) $generated@@135) ($generated@@32 $generated@@33 ($generated@@35 $generated@@33 $generated@@135) ($generated@@34 $generated@@136))))
 :pattern ( ($generated@@56 $generated@@135 ($generated@@34 $generated@@136)))
)))
(assert (forall (($generated@@137 Int) ) (! (= ($generated@@40 $generated@@7 ($generated@@11 ($generated@@24 $generated@@137))) ($generated@@26 $generated@@79 ($generated@@40 $generated@@7 ($generated@@11 $generated@@137))))
 :pattern ( ($generated@@40 $generated@@7 ($generated@@11 ($generated@@24 $generated@@137))))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@40 $generated@@139 ($generated@@26 $generated@@139 $generated@@138)) ($generated@@26 $generated@@79 ($generated@@40 $generated@@139 $generated@@138)))
 :pattern ( ($generated@@40 $generated@@139 ($generated@@26 $generated@@139 $generated@@138)))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= ($generated@@22 $generated@@140) 0) (= $generated@@140 $generated@@23))
 :pattern ( ($generated@@22 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! ($generated@@46 $generated@@7 $generated@@142 $generated@@0 $generated@@141)
 :pattern ( ($generated@@46 $generated@@7 $generated@@142 $generated@@0 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! ($generated@@46 $generated@@6 $generated@@144 $generated $generated@@143)
 :pattern ( ($generated@@46 $generated@@6 $generated@@144 $generated $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@145 ($generated@@34 $generated@@146)) (forall (($generated@@147 Int) ) (!  (=> (and (<= 0 $generated@@147) (< $generated@@147 ($generated@@22 $generated@@145))) ($generated@@56 ($generated@@36 $generated@@145 $generated@@147) $generated@@146))
 :pattern ( ($generated@@36 $generated@@145 $generated@@147))
)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@145 ($generated@@34 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ) (! ($generated@@32 $generated@@7 $generated@@148 $generated@@0)
 :pattern ( ($generated@@32 $generated@@7 $generated@@148 $generated@@0))
)))
(assert (forall (($generated@@149 T@U) ) (! ($generated@@32 $generated@@6 $generated@@149 $generated)
 :pattern ( ($generated@@32 $generated@@6 $generated@@149 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@158  (=> (and ($generated@@46 $generated@@33 $generated@@150 ($generated@@34 $generated@@0) $generated@@151) (= (ControlFlow 0 4) (- 0 3))) (forall (($generated@@159 Int) ) (!  (and (=> (and (<= ($generated@@24 0) $generated@@159) (< $generated@@159 ($generated@@22 $generated@@150))) (and (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@159)))) (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@159))) 256))) (=> (and (<= ($generated@@24 0) $generated@@159) (< $generated@@159 ($generated@@22 $generated@@150))) ($generated@@37 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@159))))))
 :pattern ( ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@159)))
)))))
(let (($generated@@160 true))
(let (($generated@@161  (=> (forall (($generated@@162 Int) ) (!  (and (=> (and (<= ($generated@@24 0) $generated@@162) (< $generated@@162 ($generated@@22 $generated@@150))) (and (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@162)))) (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@162))) 256))) (=> (and (<= ($generated@@24 0) $generated@@162) (< $generated@@162 ($generated@@22 $generated@@150))) ($generated@@37 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@162))))))
 :pattern ( ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@162)))
)) (and (=> (= (ControlFlow 0 5) 2) $generated@@160) (=> (= (ControlFlow 0 5) 4) $generated@@158)))))
(let (($generated@@163  (=> (and (not (and (<= ($generated@@24 0) $generated@@152) (< $generated@@152 ($generated@@22 $generated@@150)))) (= (ControlFlow 0 11) 5)) $generated@@161)))
(let (($generated@@164  (=> (and (<= ($generated@@24 0) $generated@@152) (< $generated@@152 ($generated@@22 $generated@@150))) (and (=> (= (ControlFlow 0 7) (- 0 10)) (and (<= 0 $generated@@152) (< $generated@@152 ($generated@@22 $generated@@150)))) (=> (and (<= 0 $generated@@152) (< $generated@@152 ($generated@@22 $generated@@150))) (=> (and (= $generated@@153 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@152)))) ($generated@@46 $generated@@7 ($generated@@11 $generated@@153) $generated@@0 $generated@@151)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (<= ($generated@@24 0) $generated@@153)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (< $generated@@153 256)) (=> (and (and (<= ($generated@@24 0) $generated@@153) (< $generated@@153 256)) (and ($generated@@43 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@152)))) (= (ControlFlow 0 7) 5))) $generated@@161)))))))))
(let (($generated@@165  (=> (< $generated@@152 ($generated@@24 0)) (and (=> (= (ControlFlow 0 13) 7) $generated@@164) (=> (= (ControlFlow 0 13) 11) $generated@@163)))))
(let (($generated@@166  (=> (<= ($generated@@24 0) $generated@@152) (and (=> (= (ControlFlow 0 12) 7) $generated@@164) (=> (= (ControlFlow 0 12) 11) $generated@@163)))))
(let (($generated@@167  (=> (=> (and (<= ($generated@@24 0) $generated@@152) (< $generated@@152 ($generated@@22 $generated@@150))) (and (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@152)))) (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@152))) 256))) (and (=> (= (ControlFlow 0 14) 12) $generated@@166) (=> (= (ControlFlow 0 14) 13) $generated@@165)))))
(let (($generated@@168  (=> (and (not (=> (and (<= ($generated@@24 0) $generated@@152) (< $generated@@152 ($generated@@22 $generated@@150))) (and (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@152)))) (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@152))) 256)))) (= (ControlFlow 0 6) 5)) $generated@@161)))
(let (($generated@@169  (=> (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@152))) ($generated@@24 0)) (and (=> (= (ControlFlow 0 18) 14) $generated@@167) (=> (= (ControlFlow 0 18) 6) $generated@@168)))))
(let (($generated@@170  (=> (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@150 $generated@@152)))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (and (<= 0 $generated@@152) (< $generated@@152 ($generated@@22 $generated@@150)))) (=> (and (<= 0 $generated@@152) (< $generated@@152 ($generated@@22 $generated@@150))) (and (=> (= (ControlFlow 0 16) 14) $generated@@167) (=> (= (ControlFlow 0 16) 6) $generated@@168)))))))
(let (($generated@@171  (=> (and (<= ($generated@@24 0) $generated@@152) (< $generated@@152 ($generated@@22 $generated@@150))) (and (=> (= (ControlFlow 0 19) (- 0 20)) (and (<= 0 $generated@@152) (< $generated@@152 ($generated@@22 $generated@@150)))) (=> (and (<= 0 $generated@@152) (< $generated@@152 ($generated@@22 $generated@@150))) (and (=> (= (ControlFlow 0 19) 16) $generated@@170) (=> (= (ControlFlow 0 19) 18) $generated@@169)))))))
(let (($generated@@172  (=> (not (and (<= ($generated@@24 0) $generated@@152) (< $generated@@152 ($generated@@22 $generated@@150)))) (and (=> (= (ControlFlow 0 15) 14) $generated@@167) (=> (= (ControlFlow 0 15) 6) $generated@@168)))))
(let (($generated@@173  (=> (< $generated@@152 ($generated@@24 0)) (and (=> (= (ControlFlow 0 22) 19) $generated@@171) (=> (= (ControlFlow 0 22) 15) $generated@@172)))))
(let (($generated@@174  (=> (<= ($generated@@24 0) $generated@@152) (and (=> (= (ControlFlow 0 21) 19) $generated@@171) (=> (= (ControlFlow 0 21) 15) $generated@@172)))))
(let (($generated@@175  (and (=> (= (ControlFlow 0 23) 21) $generated@@174) (=> (= (ControlFlow 0 23) 22) $generated@@173))))
(let (($generated@@176 true))
(let (($generated@@177  (=> (= $generated@@154 ($generated@@77 $generated@@155 $generated@@151 $generated@@4 false)) (and (=> (= (ControlFlow 0 24) 23) $generated@@175) (=> (= (ControlFlow 0 24) 1) $generated@@176)))))
(let (($generated@@178  (=> (and (and (and ($generated@@156 $generated@@151) ($generated@@157 $generated@@151)) ($generated@@32 $generated@@33 $generated@@150 ($generated@@34 $generated@@0))) (and (= 2 $generated@@29) (= (ControlFlow 0 25) 24))) $generated@@177)))
$generated@@178))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
