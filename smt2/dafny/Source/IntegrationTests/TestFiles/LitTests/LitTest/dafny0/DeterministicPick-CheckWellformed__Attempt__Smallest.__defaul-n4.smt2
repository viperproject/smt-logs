(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@23 (Int) Int)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@36 () Int)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 (T@U) Int)
(declare-fun $generated@@54 (T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@80 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@84 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ) (!  (not ($generated@@20 $generated@@21 $generated@@22))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22))
)))
(assert (forall (($generated@@24 Int) ) (! (= ($generated@@23 $generated@@24) $generated@@24)
 :pattern ( ($generated@@23 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@T) ) (! (= ($generated@@25 $generated@@27 $generated@@26) $generated@@26)
 :pattern ( ($generated@@25 $generated@@27 $generated@@26))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@30) (forall (($generated@@31 T@U) ) (!  (=> ($generated@@20 $generated@@29 $generated@@31) ($generated@@20 $generated@@30 $generated@@31))
 :pattern ( ($generated@@20 $generated@@29 $generated@@31))
 :pattern ( ($generated@@20 $generated@@30 $generated@@31))
)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@T) ) (! (= ($generated@@33 $generated@@35 ($generated@@32 $generated@@35 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@32 $generated@@35 $generated@@34))
)))
(assert (= ($generated@@3 $generated@@40) 3))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@43 T@U) ) (!  (=> (or ($generated@@38 $generated@@43) (and (< 1 $generated@@36) (and ($generated@@39 $generated@@40 $generated@@43 ($generated@@41 $generated)) (not ($generated@@42 $generated@@43 $generated@@21))))) ($generated@@20 $generated@@43 ($generated@@33 $generated@@5 ($generated@@9 ($generated@@37 $generated@@43)))))
 :pattern ( ($generated@@37 $generated@@43))
))))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@45 ($generated@@41 $generated@@46)) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@20 $generated@@45 $generated@@47) ($generated@@44 $generated@@47 $generated@@46))
 :pattern ( ($generated@@20 $generated@@45 $generated@@47))
)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@45 ($generated@@41 $generated@@46)))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (or ($generated@@38 $generated@@52) (and (< 1 $generated@@36) (and (and ($generated@@48 $generated@@51) ($generated@@39 $generated@@40 $generated@@52 ($generated@@41 $generated))) (not ($generated@@42 $generated@@52 $generated@@21))))) (and ($generated@@49 $generated@@52) (= ($generated@@37 $generated@@52) (let (($generated@@53 ($generated@@50 $generated@@52)))
$generated@@53))))
 :pattern ( ($generated@@37 $generated@@52) ($generated@@48 $generated@@51))
))))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@54 ($generated@@33 $generated@@59 $generated@@56) $generated@@57 $generated@@58) ($generated@@55 $generated@@59 $generated@@56 $generated@@57 $generated@@58))
 :pattern ( ($generated@@54 ($generated@@33 $generated@@59 $generated@@56) $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@42 $generated@@60 $generated@@61) (= $generated@@60 $generated@@61))
 :pattern ( ($generated@@42 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@49 $generated@@62) (and ($generated@@20 $generated@@62 ($generated@@33 $generated@@5 ($generated@@9 ($generated@@50 $generated@@62)))) (forall (($generated@@63 T@U) ) (!  (=> ($generated@@20 $generated@@62 ($generated@@33 $generated@@5 $generated@@63)) (<= ($generated@@50 $generated@@62) ($generated@@10 $generated@@63)))
 :pattern ( ($generated@@20 $generated@@62 ($generated@@33 $generated@@5 $generated@@63)))
))))
 :pattern ( ($generated@@50 $generated@@62))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (or ($generated@@38 ($generated@@25 $generated@@40 $generated@@65)) (and (< 1 $generated@@36) (and (and ($generated@@48 $generated@@64) ($generated@@39 $generated@@40 $generated@@65 ($generated@@41 $generated))) (not ($generated@@42 $generated@@65 $generated@@21))))) (and ($generated@@49 ($generated@@25 $generated@@40 $generated@@65)) (= ($generated@@37 ($generated@@25 $generated@@40 $generated@@65)) (let (($generated@@66 ($generated@@50 ($generated@@25 $generated@@40 $generated@@65))))
$generated@@66))))
 :weight 3
 :pattern ( ($generated@@37 ($generated@@25 $generated@@40 $generated@@65)) ($generated@@48 $generated@@64))
))))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@44 $generated@@67 $generated) (and (= ($generated@@33 $generated@@5 ($generated@@32 $generated@@5 $generated@@67)) $generated@@67) ($generated@@39 $generated@@5 ($generated@@32 $generated@@5 $generated@@67) $generated)))
 :pattern ( ($generated@@44 $generated@@67 $generated))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@44 ($generated@@33 $generated@@70 $generated@@68) $generated@@69) ($generated@@39 $generated@@70 $generated@@68 $generated@@69))
 :pattern ( ($generated@@44 ($generated@@33 $generated@@70 $generated@@68) $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@55 $generated@@40 $generated@@71 ($generated@@41 $generated@@72) $generated@@73) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@20 $generated@@71 $generated@@74) ($generated@@54 $generated@@74 $generated@@72 $generated@@73))
 :pattern ( ($generated@@20 $generated@@71 $generated@@74))
)))
 :pattern ( ($generated@@55 $generated@@40 $generated@@71 ($generated@@41 $generated@@72) $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@75 ($generated@@41 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@41 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@19 ($generated@@41 $generated@@77)) $generated@@1)
 :pattern ( ($generated@@41 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@32 $generated@@79 ($generated@@33 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@33 $generated@@79 $generated@@78))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@80 $generated@@91 $generated@@92 $generated@@93 ($generated@@87 $generated@@91 $generated@@92 $generated@@93 $generated@@95 $generated@@96 $generated@@97 $generated@@94) $generated@@96 $generated@@97) $generated@@94)
 :weight 0
)) (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@103 $generated@@105) (= ($generated@@80 $generated@@98 $generated@@99 $generated@@100 ($generated@@87 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@104 $generated@@101) $generated@@105 $generated@@106) ($generated@@80 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@105 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@80 $generated@@107 $generated@@108 $generated@@109 ($generated@@87 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@114 $generated@@115) ($generated@@80 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@114 $generated@@115)))
 :weight 0
)))) (= ($generated@@3 $generated@@81) 4)) (= ($generated@@3 $generated@@82) 5)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@84 $generated@@116 $generated@@117 ($generated@@88 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@118) $generated@@120) $generated@@118)
 :weight 0
))) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@84 $generated@@121 $generated@@122 ($generated@@88 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@84 $generated@@121 $generated@@122 $generated@@124 $generated@@126)))
 :weight 0
))) (= ($generated@@3 $generated@@85) 6)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (= ($generated@@3 ($generated@@86 $generated@@127 $generated@@128)) 7))) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (! (= ($generated@@89 ($generated@@86 $generated@@129 $generated@@130)) $generated@@129)
 :pattern ( ($generated@@86 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@131 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@86 $generated@@131 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 Bool) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@8 ($generated@@80 $generated@@81 $generated@@82 $generated@@4 ($generated@@83 $generated@@133 $generated@@134 $generated@@135 $generated@@136) $generated@@137 $generated@@138))  (=> (and (or (not (= $generated@@137 $generated@@133)) (not true)) ($generated@@8 ($generated@@32 $generated@@4 ($generated@@84 $generated@@82 $generated@@85 ($generated@@84 $generated@@81 ($generated@@86 $generated@@82 $generated@@85) $generated@@134 $generated@@137) $generated@@135)))) $generated@@136))
 :pattern ( ($generated@@80 $generated@@81 $generated@@82 $generated@@4 ($generated@@83 $generated@@133 $generated@@134 $generated@@135 $generated@@136) $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> ($generated@@44 $generated@@139 ($generated@@41 $generated@@140)) (and (= ($generated@@33 $generated@@40 ($generated@@32 $generated@@40 $generated@@139)) $generated@@139) ($generated@@39 $generated@@40 ($generated@@32 $generated@@40 $generated@@139) ($generated@@41 $generated@@140))))
 :pattern ( ($generated@@44 $generated@@139 ($generated@@41 $generated@@140)))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@42 $generated@@141 $generated@@142) (forall (($generated@@143 T@U) ) (! (= ($generated@@20 $generated@@141 $generated@@143) ($generated@@20 $generated@@142 $generated@@143))
 :pattern ( ($generated@@20 $generated@@141 $generated@@143))
 :pattern ( ($generated@@20 $generated@@142 $generated@@143))
)))
 :pattern ( ($generated@@42 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@144 Int) ) (! (= ($generated@@33 $generated@@5 ($generated@@9 ($generated@@23 $generated@@144))) ($generated@@25 $generated@@85 ($generated@@33 $generated@@5 ($generated@@9 $generated@@144))))
 :pattern ( ($generated@@33 $generated@@5 ($generated@@9 ($generated@@23 $generated@@144))))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@33 $generated@@146 ($generated@@25 $generated@@146 $generated@@145)) ($generated@@25 $generated@@85 ($generated@@33 $generated@@146 $generated@@145)))
 :pattern ( ($generated@@33 $generated@@146 ($generated@@25 $generated@@146 $generated@@145)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! ($generated@@55 $generated@@5 $generated@@148 $generated $generated@@147)
 :pattern ( ($generated@@55 $generated@@5 $generated@@148 $generated $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! ($generated@@39 $generated@@5 $generated@@149 $generated)
 :pattern ( ($generated@@39 $generated@@5 $generated@@149 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@159 true))
(let (($generated@@160  (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 ($generated@@37 $generated@@150)))))))
(let (($generated@@161  (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (and ($generated@@39 $generated@@5 ($generated@@9 ($generated@@23 0)) $generated) (and ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 ($generated@@23 0)))) (forall (($generated@@162 Int) ) (!  (=> ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 $generated@@162))) (<= ($generated@@23 0) $generated@@162))
 :pattern ( ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 $generated@@162))))
)))) (exists (($generated@@163 T@U) )  (and ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 $generated@@163)) (forall (($generated@@164 Int) ) (!  (=> ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 $generated@@164))) (<= ($generated@@10 $generated@@163) $generated@@164))
 :pattern ( ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 $generated@@164))))
)))))) (=> (or (and ($generated@@39 $generated@@5 ($generated@@9 ($generated@@23 0)) $generated) (and ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 ($generated@@23 0)))) (forall (($generated@@165 T@U) ) (!  (=> ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 $generated@@165)) (<= ($generated@@23 0) ($generated@@10 $generated@@165)))
 :pattern ( ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 $generated@@165)))
)))) (exists (($generated@@166 Int) )  (and ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 $generated@@166))) (forall (($generated@@167 T@U) ) (!  (=> ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 $generated@@167)) (<= $generated@@166 ($generated@@10 $generated@@167)))
 :pattern ( ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 $generated@@167)))
))))) (=> (and (and ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 $generated@@151))) (forall (($generated@@168 T@U) ) (!  (=> ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 $generated@@168)) (<= $generated@@151 ($generated@@10 $generated@@168)))
 :pattern ( ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 $generated@@168)))
))) (and ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 $generated@@152))) (forall (($generated@@169 T@U) ) (!  (=> ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 $generated@@169)) (<= $generated@@152 ($generated@@10 $generated@@169)))
 :pattern ( ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 $generated@@169)))
)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (= $generated@@151 $generated@@152)) (=> (= $generated@@151 $generated@@152) (=> (and (and ($generated@@49 $generated@@150) (= ($generated@@37 $generated@@150) $generated@@151)) (and ($generated@@39 $generated@@5 ($generated@@9 ($generated@@37 $generated@@150)) $generated) (= (ControlFlow 0 7) 6))) $generated@@160))))))))
(let (($generated@@170  (=> (and (not ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 $generated@@153)))) (= (ControlFlow 0 13) 7)) $generated@@161)))
(let (($generated@@171  (=> (and ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 $generated@@153))) (= (ControlFlow 0 12) 7)) $generated@@161)))
(let (($generated@@172  (and (=> (= (ControlFlow 0 14) 12) $generated@@171) (=> (= (ControlFlow 0 14) 13) $generated@@170))))
(let (($generated@@173  (=> ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 $generated@@151))) (and (=> (= (ControlFlow 0 15) 14) $generated@@172) (=> (= (ControlFlow 0 15) 11) $generated@@159)))))
(let (($generated@@174  (=> (and (not ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 $generated@@151)))) (= (ControlFlow 0 10) 7)) $generated@@161)))
(let (($generated@@175  (and (=> (= (ControlFlow 0 16) 15) $generated@@173) (=> (= (ControlFlow 0 16) 10) $generated@@174))))
(let (($generated@@176 true))
(let (($generated@@177  (and (=> (= (ControlFlow 0 17) (- 0 18)) (not ($generated@@42 $generated@@150 $generated@@21))) (=> (not ($generated@@42 $generated@@150 $generated@@21)) (=> (and (and ($generated@@48 $generated@@154) ($generated@@155 $generated@@154)) (and (exists (($generated@@178 Int) ) (!  (and ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 $generated@@178))) (forall (($generated@@179 T@U) ) (!  (=> ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 $generated@@179)) (<= $generated@@178 ($generated@@10 $generated@@179)))
 :pattern ( ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 $generated@@179)))
)))
 :pattern ( ($generated@@20 $generated@@150 ($generated@@33 $generated@@5 ($generated@@9 $generated@@178))))
)) (= $generated@@156 $generated@@154))) (and (=> (= (ControlFlow 0 17) 16) $generated@@175) (=> (= (ControlFlow 0 17) 4) $generated@@176)))))))
(let (($generated@@180  (=> ($generated@@55 $generated@@40 $generated@@150 ($generated@@41 $generated) $generated@@156) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not ($generated@@42 $generated@@150 $generated@@21))) (=> (and (not ($generated@@42 $generated@@150 $generated@@21)) (= (ControlFlow 0 2) (- 0 1))) (or ($generated@@42 $generated@@150 $generated@@150) (and ($generated@@28 $generated@@150 $generated@@150) (not ($generated@@28 $generated@@150 $generated@@150)))))))))
(let (($generated@@181  (=> (and (= $generated@@157 ($generated@@83 $generated@@158 $generated@@156 $generated@@2 false)) (not ($generated@@42 $generated@@150 $generated@@21))) (and (=> (= (ControlFlow 0 19) 2) $generated@@180) (=> (= (ControlFlow 0 19) 17) $generated@@177)))))
(let (($generated@@182  (=> (and (and (and ($generated@@48 $generated@@156) ($generated@@155 $generated@@156)) ($generated@@39 $generated@@40 $generated@@150 ($generated@@41 $generated))) (and (= 1 $generated@@36) (= (ControlFlow 0 20) 19))) $generated@@181)))
$generated@@182)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
