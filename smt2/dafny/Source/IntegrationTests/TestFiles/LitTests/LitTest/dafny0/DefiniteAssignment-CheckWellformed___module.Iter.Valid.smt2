(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U T@U) Bool)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@0) 0))
(assert (= ($generated@@27 $generated@@0) $generated@@1))
(assert (= ($generated@@10 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@33 ($generated@@30 $generated@@32) $generated@@34) ($generated@@28 $generated@@29 $generated@@33 ($generated@@31 $generated@@32) $generated@@34))
 :pattern ( ($generated@@28 $generated@@29 $generated@@33 ($generated@@30 $generated@@32) $generated@@34))
 :pattern ( ($generated@@28 $generated@@29 $generated@@33 ($generated@@31 $generated@@32) $generated@@34))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@37 $generated@@35 $generated@@38) ($generated@@28 $generated@@29 $generated@@37 $generated@@36 $generated@@38))
 :pattern ( ($generated@@28 $generated@@29 $generated@@37 $generated@@35 $generated@@38))
 :pattern ( ($generated@@28 $generated@@29 $generated@@37 $generated@@36 $generated@@38))
)))
(assert (= ($generated@@26 $generated@@39) 0))
(assert (= ($generated@@40 $generated@@4 $generated@@9) $generated@@39))
(assert ($generated@@41 $generated@@39))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@10 $generated@@45) 4)) (= ($generated@@10 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@10 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@69 ($generated@@31 $generated@@68) $generated@@70)  (or (= $generated@@69 $generated@@42) ($generated@@15 ($generated@@43 $generated@@11 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@70 $generated@@69) $generated@@0)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@69 ($generated@@31 $generated@@68) $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@71 $generated@@36 $generated@@72)  (or (= $generated@@71 $generated@@42) ($generated@@15 ($generated@@43 $generated@@11 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@72 $generated@@71) $generated@@0)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@71 $generated@@36 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@43 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@43 $generated@@75 $generated@@74))
)))
(assert (= ($generated@@10 $generated@@77) 7))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@76 $generated@@77 $generated@@81 ($generated@@78 $generated@@82)) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@79 $generated@@81 $generated@@83) ($generated@@80 $generated@@83 $generated@@82))
 :pattern ( ($generated@@79 $generated@@81 $generated@@83))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@81 ($generated@@78 $generated@@82)))
)))
(assert ($generated@@41 $generated@@0))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@76 $generated@@29 $generated@@85 ($generated@@30 $generated@@84))  (and ($generated@@76 $generated@@29 $generated@@85 ($generated@@31 $generated@@84)) (or (not (= $generated@@85 $generated@@42)) (not true))))
 :pattern ( ($generated@@76 $generated@@29 $generated@@85 ($generated@@30 $generated@@84)))
 :pattern ( ($generated@@76 $generated@@29 $generated@@85 ($generated@@31 $generated@@84)))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@86 ($generated@@73 $generated@@90 $generated@@87) $generated@@88 $generated@@89) ($generated@@28 $generated@@90 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@86 ($generated@@73 $generated@@90 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@93 T@U) ) (!  (and (= ($generated@@91 ($generated@@31 $generated@@93)) $generated@@5) (= ($generated@@92 ($generated@@31 $generated@@93)) $generated@@8))
 :pattern ( ($generated@@31 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (!  (and (= ($generated@@91 ($generated@@30 $generated@@94)) $generated@@6) (= ($generated@@92 ($generated@@30 $generated@@94)) $generated@@8))
 :pattern ( ($generated@@30 $generated@@94))
)))
(assert  (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@95 $generated@@98 $generated@@99 $generated@@100 ($generated@@97 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@104 $generated@@101) $generated@@103 $generated@@104) $generated@@101)
 :weight 0
)) (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@110 $generated@@112) (= ($generated@@95 $generated@@105 $generated@@106 $generated@@107 ($generated@@97 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@112 $generated@@113) ($generated@@95 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@112 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@120 $generated@@122) (= ($generated@@95 $generated@@114 $generated@@115 $generated@@116 ($generated@@97 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@95 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)))))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@15 ($generated@@95 $generated@@29 $generated@@45 $generated@@11 ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))  (=> (and (or (not (= $generated@@129 $generated@@123)) (not true)) ($generated@@15 ($generated@@43 $generated@@11 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@124 $generated@@129) $generated@@125)))) (or (or (= $generated@@129 $generated@@126) ($generated@@79 $generated@@127 ($generated@@73 $generated@@29 $generated@@129))) ($generated@@79 $generated@@128 ($generated@@73 $generated@@29 $generated@@129)))))
 :pattern ( ($generated@@95 $generated@@29 $generated@@45 $generated@@11 ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@80 $generated@@131 $generated@@36) (and (= ($generated@@73 $generated@@29 ($generated@@43 $generated@@29 $generated@@131)) $generated@@131) ($generated@@76 $generated@@29 ($generated@@43 $generated@@29 $generated@@131) $generated@@36)))
 :pattern ( ($generated@@80 $generated@@131 $generated@@36))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@80 $generated@@132 $generated@@35) (and (= ($generated@@73 $generated@@29 ($generated@@43 $generated@@29 $generated@@132)) $generated@@132) ($generated@@76 $generated@@29 ($generated@@43 $generated@@29 $generated@@132) $generated@@35)))
 :pattern ( ($generated@@80 $generated@@132 $generated@@35))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@76 $generated@@29 $generated@@135 ($generated@@31 $generated@@134))  (or (= $generated@@135 $generated@@42) (= ($generated@@133 $generated@@135) ($generated@@31 $generated@@134))))
 :pattern ( ($generated@@76 $generated@@29 $generated@@135 ($generated@@31 $generated@@134)))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@76 $generated@@29 $generated@@136 $generated@@35)  (and ($generated@@76 $generated@@29 $generated@@136 $generated@@36) (or (not (= $generated@@136 $generated@@42)) (not true))))
 :pattern ( ($generated@@76 $generated@@29 $generated@@136 $generated@@35))
 :pattern ( ($generated@@76 $generated@@29 $generated@@136 $generated@@36))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and ($generated@@137 $generated@@139) (and (or (not (= $generated@@140 $generated@@42)) (not true)) (= ($generated@@133 $generated@@140) ($generated@@31 $generated@@138)))) ($generated@@76 $generated@@77 ($generated@@43 $generated@@77 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@139 $generated@@140) $generated@@39)) ($generated@@78 $generated@@36)))
 :pattern ( ($generated@@43 $generated@@77 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@139 $generated@@140) $generated@@39)) ($generated@@31 $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and ($generated@@137 $generated@@142) (and (or (not (= $generated@@143 $generated@@42)) (not true)) (= ($generated@@133 $generated@@143) ($generated@@31 $generated@@141)))) ($generated@@15 ($generated@@43 $generated@@11 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@142 $generated@@143) $generated@@0)))) ($generated@@28 $generated@@77 ($generated@@43 $generated@@77 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@142 $generated@@143) $generated@@39)) ($generated@@78 $generated@@36) $generated@@142))
 :pattern ( ($generated@@43 $generated@@77 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@142 $generated@@143) $generated@@39)) ($generated@@31 $generated@@141))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (and (= ($generated@@144 ($generated@@40 $generated@@145 $generated@@146)) $generated@@145) (= ($generated@@27 ($generated@@40 $generated@@145 $generated@@146)) $generated@@146))
 :pattern ( ($generated@@40 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@80 ($generated@@73 $generated@@149 $generated@@147) $generated@@148) ($generated@@76 $generated@@149 $generated@@147 $generated@@148))
 :pattern ( ($generated@@80 ($generated@@73 $generated@@149 $generated@@147) $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@28 $generated@@77 $generated@@150 ($generated@@78 $generated@@151) $generated@@152) (forall (($generated@@153 T@U) ) (!  (=> ($generated@@79 $generated@@150 $generated@@153) ($generated@@86 $generated@@153 $generated@@151 $generated@@152))
 :pattern ( ($generated@@79 $generated@@150 $generated@@153))
)))
 :pattern ( ($generated@@28 $generated@@77 $generated@@150 ($generated@@78 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (! ($generated@@76 $generated@@29 $generated@@154 $generated@@36)
 :pattern ( ($generated@@76 $generated@@29 $generated@@154 $generated@@36))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@155 ($generated@@78 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@78 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@91 ($generated@@78 $generated@@157)) $generated)
 :pattern ( ($generated@@78 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@31 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@31 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@160 ($generated@@30 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@30 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@43 $generated@@163 ($generated@@73 $generated@@163 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@73 $generated@@163 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> ($generated@@80 $generated@@164 ($generated@@78 $generated@@165)) (and (= ($generated@@73 $generated@@77 ($generated@@43 $generated@@77 $generated@@164)) $generated@@164) ($generated@@76 $generated@@77 ($generated@@43 $generated@@77 $generated@@164) ($generated@@78 $generated@@165))))
 :pattern ( ($generated@@80 $generated@@164 ($generated@@78 $generated@@165)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> ($generated@@80 $generated@@167 ($generated@@31 $generated@@166)) (and (= ($generated@@73 $generated@@29 ($generated@@43 $generated@@29 $generated@@167)) $generated@@167) ($generated@@76 $generated@@29 ($generated@@43 $generated@@29 $generated@@167) ($generated@@31 $generated@@166))))
 :pattern ( ($generated@@80 $generated@@167 ($generated@@31 $generated@@166)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@80 $generated@@169 ($generated@@30 $generated@@168)) (and (= ($generated@@73 $generated@@29 ($generated@@43 $generated@@29 $generated@@169)) $generated@@169) ($generated@@76 $generated@@29 ($generated@@43 $generated@@29 $generated@@169) ($generated@@30 $generated@@168))))
 :pattern ( ($generated@@80 $generated@@169 ($generated@@30 $generated@@168)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (or (not (= $generated@@172 $generated@@42)) (not true)) (= ($generated@@133 $generated@@172) ($generated@@31 $generated@@171))) ($generated@@76 $generated@@77 ($generated@@170 $generated@@172) ($generated@@78 $generated@@36)))
 :pattern ( ($generated@@170 $generated@@172) ($generated@@31 $generated@@171))
)))
(assert (= ($generated@@91 $generated@@36) $generated@@2))
(assert (= ($generated@@92 $generated@@36) $generated@@7))
(assert (= ($generated@@91 $generated@@35) $generated@@3))
(assert (= ($generated@@92 $generated@@35) $generated@@7))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and ($generated@@137 $generated@@174) (and (or (not (= $generated@@175 $generated@@42)) (not true)) (= ($generated@@133 $generated@@175) ($generated@@31 $generated@@173)))) ($generated@@15 ($generated@@43 $generated@@11 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@174 $generated@@175) $generated@@0)))) ($generated@@28 $generated@@77 ($generated@@170 $generated@@175) ($generated@@78 $generated@@36) $generated@@174))
 :pattern ( ($generated@@170 $generated@@175) ($generated@@43 $generated@@11 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@174 $generated@@175) $generated@@0)) ($generated@@31 $generated@@173))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Bool)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@183 true))
(let (($generated@@184 true))
(let (($generated@@185  (=> (and (= $generated@@176 ($generated@@96 $generated@@42 $generated@@177 $generated@@0 $generated@@178 ($generated@@170 $generated@@178) ($generated@@43 $generated@@77 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@177 $generated@@178) $generated@@39)))) (= $generated@@179 ($generated@@15 ($generated@@95 $generated@@29 $generated@@45 $generated@@11 $generated@@176 $generated@@178 $generated@@39)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@179) (=> $generated@@179 (and (=> (= (ControlFlow 0 3) 1) $generated@@184) (=> (= (ControlFlow 0 3) 2) $generated@@183)))))))
(let (($generated@@186  (=> (and ($generated@@137 $generated@@177) ($generated@@180 $generated@@177)) (=> (and (and (or (not (= $generated@@178 $generated@@42)) (not true)) (and ($generated@@76 $generated@@29 $generated@@178 ($generated@@30 $generated@@181)) ($generated@@28 $generated@@29 $generated@@178 ($generated@@30 $generated@@181) $generated@@177))) (and (= 0 $generated@@182) (= (ControlFlow 0 5) 3))) $generated@@185))))
$generated@@186)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
