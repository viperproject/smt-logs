(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U T@U) T@U)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@U T@U T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@51 (Int Int) Int)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@60 (T@T T@U T@U) Bool)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@66 (T@U T@U) Int)
(declare-fun $generated@@77 (Int) Int)
(declare-fun $generated@@79 (Int) Int)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@107 (T@U T@U T@U) Bool)
(declare-fun $generated@@108 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@118 () Int)
(declare-fun $generated@@119 (T@U) Bool)
(declare-fun $generated@@120 (T@U T@U) Bool)
(declare-fun $generated@@121 (T@U T@U) Bool)
(declare-fun $generated@@122 () T@U)
(declare-fun $generated@@123 (T@U T@U) T@U)
(declare-fun $generated@@131 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@177 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@265 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (forall (($generated@@20 T@U) ($generated@@21 T@U) ) (! ($generated@@19 ($generated@@18 $generated@@20 $generated@@21) $generated@@21)
 :pattern ( ($generated@@18 $generated@@20 $generated@@21))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (!  (and (= (+ (+ ($generated@@22 ($generated@@23 $generated@@26 $generated@@27)) ($generated@@22 ($generated@@23 $generated@@27 $generated@@26))) (* 2 ($generated@@22 ($generated@@24 $generated@@26 $generated@@27)))) ($generated@@22 ($generated@@25 $generated@@26 $generated@@27))) (= ($generated@@22 ($generated@@23 $generated@@26 $generated@@27)) (- ($generated@@22 $generated@@26) ($generated@@22 ($generated@@24 $generated@@26 $generated@@27)))))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@26 $generated@@27)))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@31 $generated@@32 $generated@@33) ($generated@@28 $generated@@31 $generated@@30 $generated@@33))
 :pattern ( ($generated@@28 $generated@@31 ($generated@@29 $generated@@32) $generated@@33))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> ($generated@@19 $generated@@34 $generated@@36) ($generated@@19 ($generated@@18 $generated@@34 $generated@@35) $generated@@36))
 :pattern ( ($generated@@18 $generated@@34 $generated@@35) ($generated@@19 $generated@@34 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@19 $generated@@38 $generated@@40) ($generated@@19 ($generated@@37 $generated@@38 $generated@@39) $generated@@40))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39) ($generated@@19 $generated@@38 $generated@@40))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@19 $generated@@42 $generated@@43) ($generated@@19 ($generated@@37 $generated@@41 $generated@@42) $generated@@43))
 :pattern ( ($generated@@37 $generated@@41 $generated@@42) ($generated@@19 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@19 ($generated@@18 $generated@@44 $generated@@45) $generated@@46)  (or (= $generated@@46 $generated@@45) ($generated@@19 $generated@@44 $generated@@46)))
 :pattern ( ($generated@@19 ($generated@@18 $generated@@44 $generated@@45) $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> ($generated@@19 $generated@@49 $generated@@50) (not ($generated@@19 ($generated@@47 $generated@@48 $generated@@49) $generated@@50)))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49) ($generated@@19 $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 Int) ($generated@@53 Int) ) (!  (or (= ($generated@@51 $generated@@52 $generated@@53) $generated@@52) (= ($generated@@51 $generated@@52 $generated@@53) $generated@@53))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (!  (not ($generated@@19 $generated@@54 $generated@@55))
 :pattern ( ($generated@@19 $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@28 $generated@@57 ($generated@@56 $generated@@58) $generated@@59) ($generated@@28 $generated@@57 $generated@@58 $generated@@59))
 :pattern ( ($generated@@28 $generated@@57 ($generated@@56 $generated@@58) $generated@@59))
)))
(assert (= ($generated@@2 $generated@@61) 3))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@60 $generated@@61 $generated@@64 ($generated@@62 $generated@@65)) ($generated@@63 $generated@@64))
 :pattern ( ($generated@@60 $generated@@61 $generated@@64 ($generated@@62 $generated@@65)))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (<= ($generated@@66 $generated@@67 $generated@@69) ($generated@@66 $generated@@68 $generated@@69)) (= ($generated@@66 ($generated@@23 $generated@@67 $generated@@68) $generated@@69) 0))
 :pattern ( ($generated@@23 $generated@@67 $generated@@68) ($generated@@66 $generated@@68 $generated@@69) ($generated@@66 $generated@@67 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@37 ($generated@@37 $generated@@70 $generated@@71) $generated@@71) ($generated@@37 $generated@@70 $generated@@71))
 :pattern ( ($generated@@37 ($generated@@37 $generated@@70 $generated@@71) $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@24 ($generated@@24 $generated@@72 $generated@@73) $generated@@73) ($generated@@24 $generated@@72 $generated@@73))
 :pattern ( ($generated@@24 ($generated@@24 $generated@@72 $generated@@73) $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@19 ($generated@@47 $generated@@74 $generated@@75) $generated@@76)  (and ($generated@@19 $generated@@74 $generated@@76) (not ($generated@@19 $generated@@75 $generated@@76))))
 :pattern ( ($generated@@19 ($generated@@47 $generated@@74 $generated@@75) $generated@@76))
)))
(assert (forall (($generated@@78 Int) ) (!  (=> (<= 0 $generated@@78) (= ($generated@@77 $generated@@78) $generated@@78))
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 Int) ) (! (= ($generated@@79 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@66 ($generated@@24 $generated@@84 $generated@@85) $generated@@86) ($generated@@51 ($generated@@66 $generated@@84 $generated@@86) ($generated@@66 $generated@@85 $generated@@86)))
 :pattern ( ($generated@@66 ($generated@@24 $generated@@84 $generated@@85) $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 ($generated@@87 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@87 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@91 $generated@@92 $generated@@93) (forall (($generated@@94 T@U) ) (!  (or (not ($generated@@19 $generated@@92 $generated@@94)) (not ($generated@@19 $generated@@93 $generated@@94)))
 :pattern ( ($generated@@19 $generated@@92 $generated@@94))
 :pattern ( ($generated@@19 $generated@@93 $generated@@94))
)))
 :pattern ( ($generated@@91 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (or (not (= $generated@@97 $generated@@98)) (not true)) (= ($generated@@66 $generated@@96 $generated@@98) ($generated@@66 ($generated@@95 $generated@@96 $generated@@97) $generated@@98)))
 :pattern ( ($generated@@95 $generated@@96 $generated@@97) ($generated@@66 $generated@@96 $generated@@98))
)))
(assert (= ($generated@@2 $generated@@99) 4))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@60 $generated@@99 $generated@@102 ($generated@@100 $generated@@103)) (forall (($generated@@104 T@U) ) (!  (=> ($generated@@19 $generated@@102 $generated@@104) ($generated@@101 $generated@@104 $generated@@103))
 :pattern ( ($generated@@19 $generated@@102 $generated@@104))
)))
 :pattern ( ($generated@@60 $generated@@99 $generated@@102 ($generated@@100 $generated@@103)))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@22 ($generated@@95 $generated@@105 $generated@@106)) (+ ($generated@@22 $generated@@105) 1))
 :pattern ( ($generated@@22 ($generated@@95 $generated@@105 $generated@@106)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@107 ($generated@@88 $generated@@112 $generated@@109) $generated@@110 $generated@@111) ($generated@@108 $generated@@112 $generated@@109 $generated@@110 $generated@@111))
 :pattern ( ($generated@@107 ($generated@@88 $generated@@112 $generated@@109) $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@22 ($generated@@25 $generated@@113 $generated@@114)) (+ ($generated@@22 $generated@@113) ($generated@@22 $generated@@114)))
 :pattern ( ($generated@@22 ($generated@@25 $generated@@113 $generated@@114)))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@19 ($generated@@37 $generated@@115 $generated@@116) $generated@@117)  (or ($generated@@19 $generated@@115 $generated@@117) ($generated@@19 $generated@@116 $generated@@117)))
 :pattern ( ($generated@@19 ($generated@@37 $generated@@115 $generated@@116) $generated@@117))
)))
(assert  (=> (<= 0 $generated@@118) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (or ($generated@@120 $generated@@124 ($generated@@81 $generated@@61 $generated@@127)) (and (< 0 $generated@@118) (and ($generated@@119 $generated@@126) ($generated@@60 $generated@@61 $generated@@127 ($generated@@62 $generated@@124))))) (and (=> (or (not (= ($generated@@22 ($generated@@81 $generated@@61 $generated@@127)) ($generated@@79 0))) (not true)) (and ($generated@@121 $generated@@124 ($generated@@81 $generated@@61 $generated@@127)) ($generated@@120 $generated@@124 ($generated@@23 $generated@@127 ($generated@@95 $generated@@122 ($generated@@123 $generated@@124 ($generated@@81 $generated@@61 $generated@@127))))))) (= ($generated@@28 $generated@@124 ($generated@@56 $generated@@125) ($generated@@81 $generated@@61 $generated@@127)) (ite (= ($generated@@22 ($generated@@81 $generated@@61 $generated@@127)) ($generated@@79 0)) $generated@@54 (let (($generated@@128 ($generated@@123 $generated@@124 ($generated@@81 $generated@@61 $generated@@127))))
($generated@@37 ($generated@@28 $generated@@124 ($generated@@56 $generated@@125) ($generated@@23 $generated@@127 ($generated@@95 $generated@@122 $generated@@128))) ($generated@@18 $generated@@54 $generated@@128)))))))
 :weight 3
 :pattern ( ($generated@@28 $generated@@124 ($generated@@56 $generated@@125) ($generated@@81 $generated@@61 $generated@@127)) ($generated@@119 $generated@@126))
))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> ($generated@@91 $generated@@129 $generated@@130) (and (= ($generated@@47 ($generated@@37 $generated@@129 $generated@@130) $generated@@129) $generated@@130) (= ($generated@@47 ($generated@@37 $generated@@129 $generated@@130) $generated@@130) $generated@@129)))
 :pattern ( ($generated@@37 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@131 $generated@@132 $generated@@133) (= $generated@@132 $generated@@133))
 :pattern ( ($generated@@131 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@60 $generated@@61 $generated@@134 ($generated@@62 $generated@@135)) (forall (($generated@@136 T@U) ) (!  (=> (< 0 ($generated@@66 $generated@@134 $generated@@136)) ($generated@@101 $generated@@136 $generated@@135))
 :pattern ( ($generated@@66 $generated@@134 $generated@@136))
)))
 :pattern ( ($generated@@60 $generated@@61 $generated@@134 ($generated@@62 $generated@@135)))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@121 $generated@@137 $generated@@138) (> ($generated@@66 $generated@@138 ($generated@@123 $generated@@137 $generated@@138)) 0))
 :pattern ( ($generated@@123 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@101 ($generated@@88 $generated@@141 $generated@@139) $generated@@140) ($generated@@60 $generated@@141 $generated@@139 $generated@@140))
 :pattern ( ($generated@@101 ($generated@@88 $generated@@141 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@63 $generated@@142) (forall (($generated@@143 T@U) ) (!  (and (<= 0 ($generated@@66 $generated@@142 $generated@@143)) (<= ($generated@@66 $generated@@142 $generated@@143) ($generated@@22 $generated@@142)))
 :pattern ( ($generated@@66 $generated@@142 $generated@@143))
)))
 :pattern ( ($generated@@63 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! (<= 0 ($generated@@22 $generated@@144))
 :pattern ( ($generated@@22 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@108 $generated@@99 $generated@@145 ($generated@@100 $generated@@146) $generated@@147) (forall (($generated@@148 T@U) ) (!  (=> ($generated@@19 $generated@@145 $generated@@148) ($generated@@107 $generated@@148 $generated@@146 $generated@@147))
 :pattern ( ($generated@@19 $generated@@145 $generated@@148))
)))
 :pattern ( ($generated@@108 $generated@@99 $generated@@145 ($generated@@100 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@66 $generated@@122 $generated@@149) 0)
 :pattern ( ($generated@@66 $generated@@122 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@66 ($generated@@95 $generated@@150 $generated@@151) $generated@@151) (+ ($generated@@66 $generated@@150 $generated@@151) 1))
 :pattern ( ($generated@@95 $generated@@150 $generated@@151))
)))
(assert  (=> (<= 0 $generated@@118) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (or ($generated@@120 $generated@@153 $generated@@155) (and (< 0 $generated@@118) (and ($generated@@60 $generated@@61 $generated@@155 ($generated@@62 $generated@@153)) ($generated@@108 $generated@@61 $generated@@155 ($generated@@62 $generated@@153) $generated@@152)))) ($generated@@119 $generated@@152)) ($generated@@108 $generated@@99 ($generated@@28 $generated@@153 $generated@@154 $generated@@155) ($generated@@100 $generated@@153) $generated@@152))
 :pattern ( ($generated@@108 $generated@@99 ($generated@@28 $generated@@153 $generated@@154 $generated@@155) ($generated@@100 $generated@@153) $generated@@152))
))))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@156 ($generated@@100 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@100 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@100 $generated@@159)) $generated)
 :pattern ( ($generated@@100 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@160 ($generated@@62 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@62 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@158 ($generated@@62 $generated@@162)) $generated@@0)
 :pattern ( ($generated@@62 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@87 $generated@@164 ($generated@@88 $generated@@164 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@88 $generated@@164 $generated@@163))
)))
(assert  (=> (<= 0 $generated@@118) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (or ($generated@@120 $generated@@165 $generated@@167) (and (< 0 $generated@@118) ($generated@@60 $generated@@61 $generated@@167 ($generated@@62 $generated@@165)))) ($generated@@60 $generated@@99 ($generated@@28 $generated@@165 $generated@@166 $generated@@167) ($generated@@100 $generated@@165)))
 :pattern ( ($generated@@28 $generated@@165 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@37 $generated@@168 ($generated@@37 $generated@@168 $generated@@169)) ($generated@@37 $generated@@168 $generated@@169))
 :pattern ( ($generated@@37 $generated@@168 ($generated@@37 $generated@@168 $generated@@169)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@24 $generated@@170 ($generated@@24 $generated@@170 $generated@@171)) ($generated@@24 $generated@@170 $generated@@171))
 :pattern ( ($generated@@24 $generated@@170 ($generated@@24 $generated@@170 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ) (!  (and (= (= ($generated@@22 $generated@@172) 0) (= $generated@@172 $generated@@122)) (=> (or (not (= ($generated@@22 $generated@@172) 0)) (not true)) (exists (($generated@@173 T@U) ) (! (< 0 ($generated@@66 $generated@@172 $generated@@173))
 :pattern ( ($generated@@66 $generated@@172 $generated@@173))
))))
 :pattern ( ($generated@@22 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@66 ($generated@@25 $generated@@174 $generated@@175) $generated@@176) (+ ($generated@@66 $generated@@174 $generated@@176) ($generated@@66 $generated@@175 $generated@@176)))
 :pattern ( ($generated@@66 ($generated@@25 $generated@@174 $generated@@175) $generated@@176))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@177 $generated@@188 $generated@@189 $generated@@190 ($generated@@184 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@193 $generated@@194) $generated@@191)
 :weight 0
)) (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@177 $generated@@195 $generated@@196 $generated@@197 ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@177 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@177 $generated@@204 $generated@@205 $generated@@206 ($generated@@184 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@177 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (= ($generated@@2 $generated@@178) 5)) (= ($generated@@2 $generated@@179) 6)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@181 $generated@@213 $generated@@214 ($generated@@185 $generated@@213 $generated@@214 $generated@@216 $generated@@217 $generated@@215) $generated@@217) $generated@@215)
 :weight 0
))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@222 $generated@@223) (= ($generated@@181 $generated@@218 $generated@@219 ($generated@@185 $generated@@218 $generated@@219 $generated@@221 $generated@@222 $generated@@220) $generated@@223) ($generated@@181 $generated@@218 $generated@@219 $generated@@221 $generated@@223)))
 :weight 0
))) (= ($generated@@2 $generated@@182) 7)) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (= ($generated@@2 ($generated@@183 $generated@@224 $generated@@225)) 8))) (forall (($generated@@226 T@T) ($generated@@227 T@T) ) (! (= ($generated@@186 ($generated@@183 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@183 $generated@@226 $generated@@227))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= ($generated@@187 ($generated@@183 $generated@@228 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@183 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (= ($generated@@7 ($generated@@177 $generated@@178 $generated@@179 $generated@@3 ($generated@@180 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (or (not (= $generated@@234 $generated@@230)) (not true)) ($generated@@7 ($generated@@87 $generated@@3 ($generated@@181 $generated@@179 $generated@@182 ($generated@@181 $generated@@178 ($generated@@183 $generated@@179 $generated@@182) $generated@@231 $generated@@234) $generated@@232)))) $generated@@233))
 :pattern ( ($generated@@177 $generated@@178 $generated@@179 $generated@@3 ($generated@@180 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 Int) ($generated@@237 Int) ) (! (= (<= $generated@@236 $generated@@237) (= ($generated@@51 $generated@@236 $generated@@237) $generated@@236))
 :pattern ( ($generated@@51 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 Int) ($generated@@239 Int) ) (! (= (<= $generated@@239 $generated@@238) (= ($generated@@51 $generated@@238 $generated@@239) $generated@@239))
 :pattern ( ($generated@@51 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> ($generated@@101 $generated@@240 ($generated@@100 $generated@@241)) (and (= ($generated@@88 $generated@@99 ($generated@@87 $generated@@99 $generated@@240)) $generated@@240) ($generated@@60 $generated@@99 ($generated@@87 $generated@@99 $generated@@240) ($generated@@100 $generated@@241))))
 :pattern ( ($generated@@101 $generated@@240 ($generated@@100 $generated@@241)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> ($generated@@101 $generated@@242 ($generated@@62 $generated@@243)) (and (= ($generated@@88 $generated@@61 ($generated@@87 $generated@@61 $generated@@242)) $generated@@242) ($generated@@60 $generated@@61 ($generated@@87 $generated@@61 $generated@@242) ($generated@@62 $generated@@243))))
 :pattern ( ($generated@@101 $generated@@242 ($generated@@62 $generated@@243)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (= ($generated@@66 ($generated@@23 $generated@@244 $generated@@245) $generated@@246) ($generated@@77 (- ($generated@@66 $generated@@244 $generated@@246) ($generated@@66 $generated@@245 $generated@@246))))
 :pattern ( ($generated@@66 ($generated@@23 $generated@@244 $generated@@245) $generated@@246))
)))
(assert  (=> (<= 0 $generated@@118) (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (or ($generated@@120 $generated@@247 $generated@@250) (and (< 0 $generated@@118) (and ($generated@@119 $generated@@249) ($generated@@60 $generated@@61 $generated@@250 ($generated@@62 $generated@@247))))) (and (=> (or (not (= ($generated@@22 $generated@@250) ($generated@@79 0))) (not true)) (and ($generated@@121 $generated@@247 $generated@@250) ($generated@@120 $generated@@247 ($generated@@23 $generated@@250 ($generated@@95 $generated@@122 ($generated@@123 $generated@@247 $generated@@250)))))) (= ($generated@@28 $generated@@247 ($generated@@56 $generated@@248) $generated@@250) (ite (= ($generated@@22 $generated@@250) ($generated@@79 0)) $generated@@54 (let (($generated@@251 ($generated@@123 $generated@@247 $generated@@250)))
($generated@@37 ($generated@@28 $generated@@247 $generated@@248 ($generated@@23 $generated@@250 ($generated@@95 $generated@@122 $generated@@251))) ($generated@@18 $generated@@54 $generated@@251)))))))
 :pattern ( ($generated@@28 $generated@@247 ($generated@@56 $generated@@248) $generated@@250) ($generated@@119 $generated@@249))
))))
(assert (forall (($generated@@252 Int) ) (!  (=> (< $generated@@252 0) (= ($generated@@77 $generated@@252) 0))
 :pattern ( ($generated@@77 $generated@@252))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@88 $generated@@4 ($generated@@8 ($generated@@79 $generated@@253))) ($generated@@81 $generated@@182 ($generated@@88 $generated@@4 ($generated@@8 $generated@@253))))
 :pattern ( ($generated@@88 $generated@@4 ($generated@@8 ($generated@@79 $generated@@253))))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@T) ) (! (= ($generated@@88 $generated@@255 ($generated@@81 $generated@@255 $generated@@254)) ($generated@@81 $generated@@182 ($generated@@88 $generated@@255 $generated@@254)))
 :pattern ( ($generated@@88 $generated@@255 ($generated@@81 $generated@@255 $generated@@254)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (< 0 ($generated@@66 $generated@@256 $generated@@258)) (< 0 ($generated@@66 ($generated@@95 $generated@@256 $generated@@257) $generated@@258)))
 :pattern ( ($generated@@95 $generated@@256 $generated@@257) ($generated@@66 $generated@@256 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (< 0 ($generated@@66 ($generated@@95 $generated@@259 $generated@@260) $generated@@261))  (or (= $generated@@261 $generated@@260) (< 0 ($generated@@66 $generated@@259 $generated@@261))))
 :pattern ( ($generated@@66 ($generated@@95 $generated@@259 $generated@@260) $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= ($generated@@131 $generated@@262 $generated@@263) (forall (($generated@@264 T@U) ) (! (= ($generated@@66 $generated@@262 $generated@@264) ($generated@@66 $generated@@263 $generated@@264))
 :pattern ( ($generated@@66 $generated@@262 $generated@@264))
 :pattern ( ($generated@@66 $generated@@263 $generated@@264))
)))
 :pattern ( ($generated@@131 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= ($generated@@265 $generated@@266 $generated@@267) (forall (($generated@@268 T@U) ) (! (<= ($generated@@66 $generated@@266 $generated@@268) ($generated@@66 $generated@@267 $generated@@268))
 :pattern ( ($generated@@66 $generated@@266 $generated@@268))
 :pattern ( ($generated@@66 $generated@@267 $generated@@268))
)))
 :pattern ( ($generated@@265 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (= ($generated@@108 $generated@@61 $generated@@269 ($generated@@62 $generated@@270) $generated@@271) (forall (($generated@@272 T@U) ) (!  (=> (< 0 ($generated@@66 $generated@@269 $generated@@272)) ($generated@@107 $generated@@272 $generated@@270 $generated@@271))
 :pattern ( ($generated@@66 $generated@@269 $generated@@272))
)))
 :pattern ( ($generated@@108 $generated@@61 $generated@@269 ($generated@@62 $generated@@270) $generated@@271))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@284  (and (=> (= (ControlFlow 0 4) (- 0 5)) (exists (($generated@@285 T@U) )  (and ($generated@@101 $generated@@285 $generated@@273) (> ($generated@@66 $generated@@274 $generated@@285) 0)))) (=> (exists (($generated@@286 T@U) )  (and ($generated@@101 $generated@@286 $generated@@273) (> ($generated@@66 $generated@@274 $generated@@286) 0))) (=> (and ($generated@@101 $generated@@275 $generated@@273) ($generated@@107 $generated@@275 $generated@@273 $generated@@276)) (=> (and (and (> ($generated@@66 $generated@@274 $generated@@275) 0) (= $generated@@277 ($generated@@23 $generated@@274 ($generated@@95 $generated@@122 $generated@@275)))) (and ($generated@@108 $generated@@61 $generated@@277 ($generated@@62 $generated@@273) $generated@@276) (= (ControlFlow 0 4) (- 0 3)))) (and ($generated@@265 $generated@@277 $generated@@274) (not ($generated@@131 $generated@@277 $generated@@274)))))))))
(let (($generated@@287  (=> (and (not (and ($generated@@101 $generated@@275 $generated@@273) ($generated@@107 $generated@@275 $generated@@273 $generated@@276))) (= (ControlFlow 0 7) 4)) $generated@@284)))
(let (($generated@@288  (=> (and (and ($generated@@101 $generated@@275 $generated@@273) ($generated@@107 $generated@@275 $generated@@273 $generated@@276)) (= (ControlFlow 0 6) 4)) $generated@@284)))
(let (($generated@@289  (=> (or (not (= ($generated@@22 $generated@@274) ($generated@@79 0))) (not true)) (and (=> (= (ControlFlow 0 8) 6) $generated@@288) (=> (= (ControlFlow 0 8) 7) $generated@@287)))))
(let (($generated@@290 true))
(let (($generated@@291 true))
(let (($generated@@292  (=> (and (and (= $generated@@278 ($generated@@180 $generated@@279 $generated@@276 $generated@@1 false)) (= $generated@@280 ($generated@@56 $generated@@281))) (and (= $generated@@282 ($generated@@56 ($generated@@56 $generated@@281))) (= ($generated@@29 $generated@@281) $generated@@281))) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@291) (=> (= (ControlFlow 0 9) 2) $generated@@290)) (=> (= (ControlFlow 0 9) 8) $generated@@289)))))
(let (($generated@@293  (=> (and (and (and ($generated@@119 $generated@@276) ($generated@@283 $generated@@276)) ($generated@@60 $generated@@61 $generated@@274 ($generated@@62 $generated@@273))) (and (= 0 $generated@@118) (= (ControlFlow 0 10) 9))) $generated@@292)))
$generated@@293)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
