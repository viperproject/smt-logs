(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@40 (T@U T@U T@U) Bool)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@47 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T T@T) T@T)
(declare-fun $generated@@62 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) Int)
(declare-fun $generated@@100 (T@U) Int)
(declare-fun $generated@@116 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@155 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@156 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert ($generated@@26 $generated@@27))
(assert ($generated@@26 $generated@@28))
(assert (= ($generated@@10 $generated@@30) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@33 ($generated@@31 $generated@@34)) ($generated@@32 $generated@@33))
 :pattern ( ($generated@@29 $generated@@30 $generated@@33 ($generated@@31 $generated@@34)))
)))
(assert (= ($generated@@10 $generated@@35) 4))
(assert (forall (($generated@@38 T@U) ) (! (= ($generated@@29 $generated@@35 $generated@@38 $generated@@27)  (or (= $generated@@38 $generated@@36) (= ($generated@@37 $generated@@38) $generated@@27)))
 :pattern ( ($generated@@29 $generated@@35 $generated@@38 $generated@@27))
)))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@29 $generated@@35 $generated@@39 $generated@@28)  (or (= $generated@@39 $generated@@36) (= ($generated@@37 $generated@@39) $generated@@28)))
 :pattern ( ($generated@@29 $generated@@35 $generated@@39 $generated@@28))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> (and ($generated@@40 $generated@@43 $generated@@27 $generated@@44) ($generated@@41 $generated@@44)) ($generated@@40 $generated@@43 $generated@@42 $generated@@44))
 :pattern ( ($generated@@40 $generated@@43 $generated@@27 $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> (and ($generated@@40 $generated@@45 $generated@@28 $generated@@46) ($generated@@41 $generated@@46)) ($generated@@40 $generated@@45 $generated@@42 $generated@@46))
 :pattern ( ($generated@@40 $generated@@45 $generated@@28 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@47 $generated@@35 $generated@@49 $generated@@48 $generated@@50) ($generated@@47 $generated@@35 $generated@@49 $generated@@42 $generated@@50))
 :pattern ( ($generated@@47 $generated@@35 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@47 $generated@@35 $generated@@49 $generated@@42 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@47 $generated@@35 $generated@@52 $generated@@51 $generated@@53) ($generated@@47 $generated@@35 $generated@@52 $generated@@27 $generated@@53))
 :pattern ( ($generated@@47 $generated@@35 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@47 $generated@@35 $generated@@52 $generated@@27 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@47 $generated@@35 $generated@@55 $generated@@54 $generated@@56) ($generated@@47 $generated@@35 $generated@@55 $generated@@28 $generated@@56))
 :pattern ( ($generated@@47 $generated@@35 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@47 $generated@@35 $generated@@55 $generated@@28 $generated@@56))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@58 $generated@@65 $generated@@66 ($generated@@62 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@69) $generated@@67)
 :weight 0
)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (or (= $generated@@74 $generated@@75) (= ($generated@@58 $generated@@70 $generated@@71 ($generated@@62 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@75) ($generated@@58 $generated@@70 $generated@@71 $generated@@73 $generated@@75)))
 :weight 0
))) (= ($generated@@10 $generated@@59) 5)) (= ($generated@@10 $generated@@60) 6)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@10 ($generated@@61 $generated@@76 $generated@@77)) 7))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@63 ($generated@@61 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@61 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@64 ($generated@@61 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@61 $generated@@80 $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@47 $generated@@35 $generated@@82 $generated@@42 $generated@@83)  (or (= $generated@@82 $generated@@36) ($generated@@15 ($generated@@57 $generated@@11 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@83 $generated@@82) $generated@@0)))))
 :pattern ( ($generated@@47 $generated@@35 $generated@@82 $generated@@42 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@47 $generated@@35 $generated@@84 $generated@@27 $generated@@85)  (or (= $generated@@84 $generated@@36) ($generated@@15 ($generated@@57 $generated@@11 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@85 $generated@@84) $generated@@0)))))
 :pattern ( ($generated@@47 $generated@@35 $generated@@84 $generated@@27 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@47 $generated@@35 $generated@@86 $generated@@28 $generated@@87)  (or (= $generated@@86 $generated@@36) ($generated@@15 ($generated@@57 $generated@@11 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@87 $generated@@86) $generated@@0)))))
 :pattern ( ($generated@@47 $generated@@35 $generated@@86 $generated@@28 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@88 $generated@@89 $generated@@90) (forall (($generated@@91 T@U) ) (!  (=> ($generated@@15 ($generated@@57 $generated@@11 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@89 $generated@@91) $generated@@0))) ($generated@@15 ($generated@@57 $generated@@11 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@90 $generated@@91) $generated@@0))))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@90 $generated@@91) $generated@@0))
)))
 :pattern ( ($generated@@88 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@57 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@57 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (or (not (= $generated@@98 $generated@@99)) (not true)) (= ($generated@@96 $generated@@97 $generated@@99) ($generated@@96 ($generated@@95 $generated@@97 $generated@@98) $generated@@99)))
 :pattern ( ($generated@@95 $generated@@97 $generated@@98) ($generated@@96 $generated@@97 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@100 ($generated@@95 $generated@@101 $generated@@102)) (+ ($generated@@100 $generated@@101) 1))
 :pattern ( ($generated@@100 ($generated@@95 $generated@@101 $generated@@102)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@40 ($generated@@92 $generated@@106 $generated@@103) $generated@@104 $generated@@105) ($generated@@47 $generated@@106 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@40 ($generated@@92 $generated@@106 $generated@@103) $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> ($generated@@88 $generated@@107 $generated@@108) (=> ($generated@@40 $generated@@109 $generated@@110 $generated@@107) ($generated@@40 $generated@@109 $generated@@110 $generated@@108)))
 :pattern ( ($generated@@88 $generated@@107 $generated@@108) ($generated@@40 $generated@@109 $generated@@110 $generated@@107))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (!  (=> ($generated@@88 $generated@@111 $generated@@112) (=> ($generated@@47 $generated@@115 $generated@@113 $generated@@114 $generated@@111) ($generated@@47 $generated@@115 $generated@@113 $generated@@114 $generated@@112)))
 :pattern ( ($generated@@88 $generated@@111 $generated@@112) ($generated@@47 $generated@@115 $generated@@113 $generated@@114 $generated@@111))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@116 $generated@@117 $generated@@51) (and (= ($generated@@92 $generated@@35 ($generated@@57 $generated@@35 $generated@@117)) $generated@@117) ($generated@@29 $generated@@35 ($generated@@57 $generated@@35 $generated@@117) $generated@@51)))
 :pattern ( ($generated@@116 $generated@@117 $generated@@51))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@116 $generated@@118 $generated@@27) (and (= ($generated@@92 $generated@@35 ($generated@@57 $generated@@35 $generated@@118)) $generated@@118) ($generated@@29 $generated@@35 ($generated@@57 $generated@@35 $generated@@118) $generated@@27)))
 :pattern ( ($generated@@116 $generated@@118 $generated@@27))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@116 $generated@@119 $generated@@54) (and (= ($generated@@92 $generated@@35 ($generated@@57 $generated@@35 $generated@@119)) $generated@@119) ($generated@@29 $generated@@35 ($generated@@57 $generated@@35 $generated@@119) $generated@@54)))
 :pattern ( ($generated@@116 $generated@@119 $generated@@54))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@116 $generated@@120 $generated@@28) (and (= ($generated@@92 $generated@@35 ($generated@@57 $generated@@35 $generated@@120)) $generated@@120) ($generated@@29 $generated@@35 ($generated@@57 $generated@@35 $generated@@120) $generated@@28)))
 :pattern ( ($generated@@116 $generated@@120 $generated@@28))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@116 $generated@@121 $generated@@48) (and (= ($generated@@92 $generated@@35 ($generated@@57 $generated@@35 $generated@@121)) $generated@@121) ($generated@@29 $generated@@35 ($generated@@57 $generated@@35 $generated@@121) $generated@@48)))
 :pattern ( ($generated@@116 $generated@@121 $generated@@48))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@116 $generated@@122 $generated@@42) (and (= ($generated@@92 $generated@@35 ($generated@@57 $generated@@35 $generated@@122)) $generated@@122) ($generated@@29 $generated@@35 ($generated@@57 $generated@@35 $generated@@122) $generated@@42)))
 :pattern ( ($generated@@116 $generated@@122 $generated@@42))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@29 $generated@@35 $generated@@123 $generated@@48)  (and ($generated@@29 $generated@@35 $generated@@123 $generated@@42) (or (not (= $generated@@123 $generated@@36)) (not true))))
 :pattern ( ($generated@@29 $generated@@35 $generated@@123 $generated@@48))
 :pattern ( ($generated@@29 $generated@@35 $generated@@123 $generated@@42))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@29 $generated@@35 $generated@@124 $generated@@51)  (and ($generated@@29 $generated@@35 $generated@@124 $generated@@27) (or (not (= $generated@@124 $generated@@36)) (not true))))
 :pattern ( ($generated@@29 $generated@@35 $generated@@124 $generated@@51))
 :pattern ( ($generated@@29 $generated@@35 $generated@@124 $generated@@27))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@29 $generated@@35 $generated@@125 $generated@@54)  (and ($generated@@29 $generated@@35 $generated@@125 $generated@@28) (or (not (= $generated@@125 $generated@@36)) (not true))))
 :pattern ( ($generated@@29 $generated@@35 $generated@@125 $generated@@54))
 :pattern ( ($generated@@29 $generated@@35 $generated@@125 $generated@@28))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@47 $generated@@35 $generated@@126 $generated@@27 $generated@@127) ($generated@@47 $generated@@35 $generated@@126 $generated@@42 $generated@@127))
 :pattern ( ($generated@@47 $generated@@35 $generated@@126 $generated@@27 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@47 $generated@@35 $generated@@128 $generated@@28 $generated@@129) ($generated@@47 $generated@@35 $generated@@128 $generated@@42 $generated@@129))
 :pattern ( ($generated@@47 $generated@@35 $generated@@128 $generated@@28 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@130 ($generated@@31 $generated@@131)) (forall (($generated@@132 T@U) ) (!  (=> (< 0 ($generated@@96 $generated@@130 $generated@@132)) ($generated@@116 $generated@@132 $generated@@131))
 :pattern ( ($generated@@96 $generated@@130 $generated@@132))
)))
 :pattern ( ($generated@@29 $generated@@30 $generated@@130 ($generated@@31 $generated@@131)))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (or (not (= $generated@@133 $generated@@135)) (not true)) (=> (and ($generated@@88 $generated@@133 $generated@@134) ($generated@@88 $generated@@134 $generated@@135)) ($generated@@88 $generated@@133 $generated@@135)))
 :pattern ( ($generated@@88 $generated@@133 $generated@@134) ($generated@@88 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@116 ($generated@@92 $generated@@138 $generated@@136) $generated@@137) ($generated@@29 $generated@@138 $generated@@136 $generated@@137))
 :pattern ( ($generated@@116 ($generated@@92 $generated@@138 $generated@@136) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@32 $generated@@139) (forall (($generated@@140 T@U) ) (!  (and (<= 0 ($generated@@96 $generated@@139 $generated@@140)) (<= ($generated@@96 $generated@@139 $generated@@140) ($generated@@100 $generated@@139)))
 :pattern ( ($generated@@96 $generated@@139 $generated@@140))
)))
 :pattern ( ($generated@@32 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! (<= 0 ($generated@@100 $generated@@141))
 :pattern ( ($generated@@100 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@96 $generated@@142 $generated@@143) 0)
 :pattern ( ($generated@@96 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@96 ($generated@@95 $generated@@144 $generated@@145) $generated@@145) (+ ($generated@@96 $generated@@144 $generated@@145) 1))
 :pattern ( ($generated@@95 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@31 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@31 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@31 $generated@@149)) $generated)
 :pattern ( ($generated@@31 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@57 $generated@@151 ($generated@@92 $generated@@151 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@92 $generated@@151 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (!  (and (= (= ($generated@@100 $generated@@152) 0) (= $generated@@152 $generated@@142)) (=> (or (not (= ($generated@@100 $generated@@152) 0)) (not true)) (exists (($generated@@153 T@U) ) (! (< 0 ($generated@@96 $generated@@152 $generated@@153))
 :pattern ( ($generated@@96 $generated@@152 $generated@@153))
))))
 :pattern ( ($generated@@100 $generated@@152))
)))
(assert  (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@154 $generated@@157 $generated@@158 $generated@@159 ($generated@@156 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@162 $generated@@163) $generated@@160)
 :weight 0
)) (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@154 $generated@@164 $generated@@165 $generated@@166 ($generated@@156 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@171 $generated@@172) ($generated@@154 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@171 $generated@@172)))
 :weight 0
)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@154 $generated@@173 $generated@@174 $generated@@175 ($generated@@156 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@154 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@15 ($generated@@154 $generated@@35 $generated@@59 $generated@@11 ($generated@@155 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))  (=> (and (or (not (= $generated@@186 $generated@@182)) (not true)) ($generated@@15 ($generated@@57 $generated@@11 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@183 $generated@@186) $generated@@184)))) $generated@@185))
 :pattern ( ($generated@@154 $generated@@35 $generated@@59 $generated@@11 ($generated@@155 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@116 $generated@@188 ($generated@@31 $generated@@189)) (and (= ($generated@@92 $generated@@30 ($generated@@57 $generated@@30 $generated@@188)) $generated@@188) ($generated@@29 $generated@@30 ($generated@@57 $generated@@30 $generated@@188) ($generated@@31 $generated@@189))))
 :pattern ( ($generated@@116 $generated@@188 ($generated@@31 $generated@@189)))
)))
(assert (forall (($generated@@190 T@U) ) (!  (=> ($generated@@29 $generated@@35 $generated@@190 $generated@@27) ($generated@@29 $generated@@35 $generated@@190 $generated@@42))
 :pattern ( ($generated@@29 $generated@@35 $generated@@190 $generated@@27))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> ($generated@@116 $generated@@191 $generated@@27) ($generated@@116 $generated@@191 $generated@@42))
 :pattern ( ($generated@@116 $generated@@191 $generated@@27))
)))
(assert (forall (($generated@@192 T@U) ) (!  (=> ($generated@@29 $generated@@35 $generated@@192 $generated@@28) ($generated@@29 $generated@@35 $generated@@192 $generated@@42))
 :pattern ( ($generated@@29 $generated@@35 $generated@@192 $generated@@28))
)))
(assert (forall (($generated@@193 T@U) ) (!  (=> ($generated@@116 $generated@@193 $generated@@28) ($generated@@116 $generated@@193 $generated@@42))
 :pattern ( ($generated@@116 $generated@@193 $generated@@28))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@41 ($generated@@62 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@194 $generated@@195 ($generated@@62 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@194 $generated@@195) $generated@@196 $generated@@197))) ($generated@@88 $generated@@194 ($generated@@62 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@194 $generated@@195 ($generated@@62 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@194 $generated@@195) $generated@@196 $generated@@197))))
 :pattern ( ($generated@@62 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@194 $generated@@195 ($generated@@62 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@194 $generated@@195) $generated@@196 $generated@@197)))
)))
(assert (= ($generated@@148 $generated@@51) $generated@@1))
(assert (= ($generated@@198 $generated@@51) $generated@@7))
(assert (= ($generated@@148 $generated@@27) $generated@@2))
(assert (= ($generated@@198 $generated@@27) $generated@@7))
(assert (= ($generated@@148 $generated@@54) $generated@@3))
(assert (= ($generated@@198 $generated@@54) $generated@@8))
(assert (= ($generated@@148 $generated@@28) $generated@@4))
(assert (= ($generated@@198 $generated@@28) $generated@@8))
(assert (= ($generated@@148 $generated@@48) $generated@@5))
(assert (= ($generated@@198 $generated@@48) $generated@@9))
(assert (= ($generated@@148 $generated@@42) $generated@@6))
(assert (= ($generated@@198 $generated@@42) $generated@@9))
(assert (forall (($generated@@199 T@U) ) (! (= ($generated@@29 $generated@@35 $generated@@199 $generated@@42)  (or (= $generated@@199 $generated@@36) ($generated@@26 ($generated@@37 $generated@@199))))
 :pattern ( ($generated@@29 $generated@@35 $generated@@199 $generated@@42))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (< 0 ($generated@@96 $generated@@200 $generated@@202)) (< 0 ($generated@@96 ($generated@@95 $generated@@200 $generated@@201) $generated@@202)))
 :pattern ( ($generated@@95 $generated@@200 $generated@@201) ($generated@@96 $generated@@200 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= (< 0 ($generated@@96 ($generated@@95 $generated@@203 $generated@@204) $generated@@205))  (or (= $generated@@205 $generated@@204) (< 0 ($generated@@96 $generated@@203 $generated@@205))))
 :pattern ( ($generated@@96 ($generated@@95 $generated@@203 $generated@@204) $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@47 $generated@@30 $generated@@206 ($generated@@31 $generated@@207) $generated@@208) (forall (($generated@@209 T@U) ) (!  (=> (< 0 ($generated@@96 $generated@@206 $generated@@209)) ($generated@@40 $generated@@209 $generated@@207 $generated@@208))
 :pattern ( ($generated@@96 $generated@@206 $generated@@209))
)))
 :pattern ( ($generated@@47 $generated@@30 $generated@@206 ($generated@@31 $generated@@207) $generated@@208))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Bool)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () Bool)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@225  (=> (= $generated@@210 ($generated@@155 $generated@@36 $generated@@211 $generated@@0 false)) (=> (and (and (or (not (= $generated@@212 $generated@@36)) (not true)) ($generated@@29 $generated@@35 $generated@@212 $generated@@27)) (and (not ($generated@@15 ($generated@@57 $generated@@11 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@211 $generated@@212) $generated@@0)))) (= $generated@@213 ($generated@@62 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@211 $generated@@212 ($generated@@62 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@211 $generated@@212) $generated@@0 ($generated@@92 $generated@@11 ($generated@@14 true))))))) (=> (and (and (and ($generated@@41 $generated@@213) ($generated@@214 $generated@@213)) (and (or (not (= $generated@@215 $generated@@36)) (not true)) ($generated@@29 $generated@@35 $generated@@215 $generated@@28))) (and (and (not ($generated@@15 ($generated@@57 $generated@@11 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@213 $generated@@215) $generated@@0)))) (= $generated@@216 ($generated@@62 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@213 $generated@@215 ($generated@@62 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@213 $generated@@215) $generated@@0 ($generated@@92 $generated@@11 ($generated@@14 true)))))) (and ($generated@@41 $generated@@216) ($generated@@214 $generated@@216)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@217 ($generated@@95 ($generated@@95 $generated@@142 ($generated@@92 $generated@@35 $generated@@212)) ($generated@@92 $generated@@35 $generated@@215))) (= (ControlFlow 0 2) (- 0 1))) true))))))))
(let (($generated@@226  (=> (and ($generated@@41 $generated@@211) ($generated@@214 $generated@@211)) (=> (and (and (and (and (=> $generated@@218 (and ($generated@@29 $generated@@35 $generated@@219 $generated@@51) ($generated@@47 $generated@@35 $generated@@219 $generated@@51 $generated@@211))) true) (and (=> $generated@@220 (and ($generated@@29 $generated@@35 $generated@@221 $generated@@54) ($generated@@47 $generated@@35 $generated@@221 $generated@@54 $generated@@211))) true)) (and (and ($generated@@29 $generated@@30 $generated@@222 ($generated@@31 $generated@@48)) ($generated@@47 $generated@@30 $generated@@222 ($generated@@31 $generated@@48) $generated@@211)) true)) (and (and (and ($generated@@29 $generated@@30 $generated@@223 ($generated@@31 $generated@@51)) ($generated@@47 $generated@@30 $generated@@223 ($generated@@31 $generated@@51) $generated@@211)) true) (and (= 1 $generated@@224) (= (ControlFlow 0 5) 2)))) $generated@@225))))
$generated@@226)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
