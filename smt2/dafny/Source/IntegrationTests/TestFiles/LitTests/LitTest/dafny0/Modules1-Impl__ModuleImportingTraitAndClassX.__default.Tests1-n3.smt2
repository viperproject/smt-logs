(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@84 (Int) Int)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (forall (($generated@@33 T@U) ) (!  (=> (and (or (not (= $generated@@33 $generated@@29)) (not true)) (= ($generated@@30 $generated@@33) $generated@@31)) ($generated@@32 $generated@@13 ($generated@@17 ($generated@@28 $generated@@33)) $generated))
 :pattern ( ($generated@@28 $generated@@33))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@36 $generated@@47 $generated@@48 ($generated@@44 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@51) $generated@@49)
 :weight 0
)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (or (= $generated@@56 $generated@@57) (= ($generated@@36 $generated@@52 $generated@@53 ($generated@@44 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@57) ($generated@@36 $generated@@52 $generated@@53 $generated@@55 $generated@@57)))
 :weight 0
))) (= ($generated@@11 $generated@@37) 3)) (= ($generated@@11 $generated@@38) 4)) (= ($generated@@11 $generated@@39) 5)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (= ($generated@@11 ($generated@@40 $generated@@58 $generated@@59)) 6))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@45 ($generated@@40 $generated@@60 $generated@@61)) $generated@@60)
 :pattern ( ($generated@@40 $generated@@60 $generated@@61))
))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@46 ($generated@@40 $generated@@62 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@40 $generated@@62 $generated@@63))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@64) (and (or (not (= $generated@@65 $generated@@29)) (not true)) ($generated@@32 $generated@@39 $generated@@65 $generated@@42))) ($generated@@16 ($generated@@35 $generated@@12 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@64 $generated@@65) $generated@@1)))) ($generated@@43 $generated@@13 ($generated@@17 ($generated@@34 $generated@@65)) $generated $generated@@64))
 :pattern ( ($generated@@34 $generated@@65) ($generated@@35 $generated@@12 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@64 $generated@@65) $generated@@1)))
)))
(assert ($generated@@66 $generated@@31))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@67 $generated@@31)  (or (= $generated@@67 $generated@@29) (= ($generated@@30 $generated@@67) $generated@@31)))
 :pattern ( ($generated@@32 $generated@@39 $generated@@67 $generated@@31))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@43 $generated@@39 $generated@@70 $generated@@68 $generated@@71) ($generated@@43 $generated@@39 $generated@@70 $generated@@69 $generated@@71))
 :pattern ( ($generated@@43 $generated@@39 $generated@@70 $generated@@68 $generated@@71))
 :pattern ( ($generated@@43 $generated@@39 $generated@@70 $generated@@69 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@43 $generated@@39 $generated@@73 $generated@@72 $generated@@74) ($generated@@43 $generated@@39 $generated@@73 $generated@@42 $generated@@74))
 :pattern ( ($generated@@43 $generated@@39 $generated@@73 $generated@@72 $generated@@74))
 :pattern ( ($generated@@43 $generated@@39 $generated@@73 $generated@@42 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@43 $generated@@39 $generated@@76 $generated@@75 $generated@@77) ($generated@@43 $generated@@39 $generated@@76 $generated@@31 $generated@@77))
 :pattern ( ($generated@@43 $generated@@39 $generated@@76 $generated@@75 $generated@@77))
 :pattern ( ($generated@@43 $generated@@39 $generated@@76 $generated@@31 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@43 $generated@@39 $generated@@78 $generated@@69 $generated@@79)  (or (= $generated@@78 $generated@@29) ($generated@@16 ($generated@@35 $generated@@12 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@79 $generated@@78) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@39 $generated@@78 $generated@@69 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@43 $generated@@39 $generated@@80 $generated@@42 $generated@@81)  (or (= $generated@@80 $generated@@29) ($generated@@16 ($generated@@35 $generated@@12 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@81 $generated@@80) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@39 $generated@@80 $generated@@42 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@43 $generated@@39 $generated@@82 $generated@@31 $generated@@83)  (or (= $generated@@82 $generated@@29) ($generated@@16 ($generated@@35 $generated@@12 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@83 $generated@@82) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@39 $generated@@82 $generated@@31 $generated@@83))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@84 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@86 $generated@@88 $generated@@87) $generated@@87)
 :pattern ( ($generated@@86 $generated@@88 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@35 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@35 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@34 $generated@@92) ($generated@@84 18))
 :pattern ( ($generated@@34 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@28 $generated@@93) ($generated@@84 20))
 :pattern ( ($generated@@28 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> (and (or (not (= $generated@@94 $generated@@29)) (not true)) ($generated@@32 $generated@@39 $generated@@94 $generated@@42)) ($generated@@32 $generated@@13 ($generated@@17 ($generated@@34 $generated@@94)) $generated))
 :pattern ( ($generated@@34 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@95 $generated@@68)  (and ($generated@@32 $generated@@39 $generated@@95 $generated@@69) (or (not (= $generated@@95 $generated@@29)) (not true))))
 :pattern ( ($generated@@32 $generated@@39 $generated@@95 $generated@@68))
 :pattern ( ($generated@@32 $generated@@39 $generated@@95 $generated@@69))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@96 $generated@@72)  (and ($generated@@32 $generated@@39 $generated@@96 $generated@@42) (or (not (= $generated@@96 $generated@@29)) (not true))))
 :pattern ( ($generated@@32 $generated@@39 $generated@@96 $generated@@72))
 :pattern ( ($generated@@32 $generated@@39 $generated@@96 $generated@@42))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@97 $generated@@75)  (and ($generated@@32 $generated@@39 $generated@@97 $generated@@31) (or (not (= $generated@@97 $generated@@29)) (not true))))
 :pattern ( ($generated@@32 $generated@@39 $generated@@97 $generated@@75))
 :pattern ( ($generated@@32 $generated@@39 $generated@@97 $generated@@31))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@43 $generated@@39 $generated@@98 $generated@@42 $generated@@99) ($generated@@43 $generated@@39 $generated@@98 $generated@@69 $generated@@99))
 :pattern ( ($generated@@43 $generated@@39 $generated@@98 $generated@@42 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@43 $generated@@39 $generated@@100 $generated@@31 $generated@@101) ($generated@@43 $generated@@39 $generated@@100 $generated@@42 $generated@@101))
 :pattern ( ($generated@@43 $generated@@39 $generated@@100 $generated@@31 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (! ($generated@@32 $generated@@39 $generated@@102 $generated@@69)
 :pattern ( ($generated@@32 $generated@@39 $generated@@102 $generated@@69))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@35 $generated@@104 ($generated@@89 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@89 $generated@@104 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@105) (and (or (not (= $generated@@106 $generated@@29)) (not true)) (= ($generated@@30 $generated@@106) $generated@@31))) ($generated@@16 ($generated@@35 $generated@@12 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@105 $generated@@106) $generated@@1)))) ($generated@@43 $generated@@13 ($generated@@17 ($generated@@28 $generated@@106)) $generated $generated@@105))
 :pattern ( ($generated@@28 $generated@@106) ($generated@@35 $generated@@12 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@105 $generated@@106) $generated@@1)))
)))
(assert  (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@107 $generated@@110 $generated@@111 $generated@@112 ($generated@@109 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@115 $generated@@116) $generated@@113)
 :weight 0
)) (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@107 $generated@@117 $generated@@118 $generated@@119 ($generated@@109 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@107 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@107 $generated@@126 $generated@@127 $generated@@128 ($generated@@109 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@107 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Bool) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@16 ($generated@@107 $generated@@39 $generated@@37 $generated@@12 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))  (=> (and (or (not (= $generated@@139 $generated@@135)) (not true)) ($generated@@16 ($generated@@35 $generated@@12 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@136 $generated@@139) $generated@@137)))) $generated@@138))
 :pattern ( ($generated@@107 $generated@@39 $generated@@37 $generated@@12 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> ($generated@@32 $generated@@39 $generated@@141 $generated@@42) ($generated@@32 $generated@@39 $generated@@141 $generated@@69))
 :pattern ( ($generated@@32 $generated@@39 $generated@@141 $generated@@42))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> ($generated@@32 $generated@@39 $generated@@142 $generated@@31) ($generated@@32 $generated@@39 $generated@@142 $generated@@42))
 :pattern ( ($generated@@32 $generated@@39 $generated@@142 $generated@@31))
)))
(assert (= ($generated@@27 $generated@@69) $generated@@2))
(assert (= ($generated@@143 $generated@@69) $generated@@8))
(assert (= ($generated@@27 $generated@@68) $generated@@3))
(assert (= ($generated@@143 $generated@@68) $generated@@8))
(assert (= ($generated@@27 $generated@@42) $generated@@4))
(assert (= ($generated@@143 $generated@@42) $generated@@9))
(assert (= ($generated@@27 $generated@@31) $generated@@5))
(assert (= ($generated@@143 $generated@@31) $generated@@10))
(assert (= ($generated@@27 $generated@@72) $generated@@6))
(assert (= ($generated@@143 $generated@@72) $generated@@9))
(assert (= ($generated@@27 $generated@@75) $generated@@7))
(assert (= ($generated@@143 $generated@@75) $generated@@10))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@144 $generated@@42)  (or (= $generated@@144 $generated@@29) ($generated@@66 ($generated@@30 $generated@@144))))
 :pattern ( ($generated@@32 $generated@@39 $generated@@144 $generated@@42))
)))
(assert (forall (($generated@@145 Int) ) (! (= ($generated@@89 $generated@@13 ($generated@@17 ($generated@@84 $generated@@145))) ($generated@@86 $generated@@38 ($generated@@89 $generated@@13 ($generated@@17 $generated@@145))))
 :pattern ( ($generated@@89 $generated@@13 ($generated@@17 ($generated@@84 $generated@@145))))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@89 $generated@@147 ($generated@@86 $generated@@147 $generated@@146)) ($generated@@86 $generated@@38 ($generated@@89 $generated@@147 $generated@@146)))
 :pattern ( ($generated@@89 $generated@@147 ($generated@@86 $generated@@147 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! ($generated@@43 $generated@@13 $generated@@149 $generated $generated@@148)
 :pattern ( ($generated@@43 $generated@@13 $generated@@149 $generated $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (! ($generated@@32 $generated@@13 $generated@@150 $generated)
 :pattern ( ($generated@@32 $generated@@13 $generated@@150 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@157  (=> (= $generated@@151 ($generated@@108 $generated@@29 $generated@@152 $generated@@1 false)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (not (= $generated@@153 $generated@@29)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (= ($generated@@34 $generated@@153) ($generated@@84 18))) (=> (= ($generated@@34 $generated@@153) ($generated@@84 18)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@154 $generated@@29)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@34 $generated@@154) ($generated@@84 18))) (=> (= ($generated@@34 $generated@@154) ($generated@@84 18)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@154 $generated@@29)) (not true))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@28 $generated@@154) ($generated@@84 20)))))))))))))
(let (($generated@@158  (=> (and ($generated@@41 $generated@@152) ($generated@@155 $generated@@152)) (=> (and (and (and ($generated@@32 $generated@@39 $generated@@153 $generated@@42) ($generated@@43 $generated@@39 $generated@@153 $generated@@42 $generated@@152)) (and ($generated@@32 $generated@@39 $generated@@154 $generated@@31) ($generated@@43 $generated@@39 $generated@@154 $generated@@31 $generated@@152))) (and (and (= 0 $generated@@156) (or (not (= $generated@@153 $generated@@29)) (not true))) (and (or (not (= $generated@@154 $generated@@29)) (not true)) (= (ControlFlow 0 8) 2)))) $generated@@157))))
$generated@@158)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
