(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@T T@T) T@T)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@T T@U T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@0) 0))
(assert (= ($generated@@27 $generated@@0) $generated@@1))
(assert (= ($generated@@10 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@32 $generated@@30 $generated@@33) ($generated@@28 $generated@@29 $generated@@32 $generated@@31 $generated@@33))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 $generated@@30 $generated@@33))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 $generated@@31 $generated@@33))
)))
(assert (= ($generated@@26 $generated@@34) 0))
(assert (= ($generated@@35 $generated@@4 $generated@@9) $generated@@34))
(assert ($generated@@36 $generated@@34))
(assert  (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@39 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@39 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@39 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@10 $generated@@40) 4)) (= ($generated@@10 $generated@@41) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@10 ($generated@@42 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@42 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@42 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@42 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@42 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@63 $generated@@31 $generated@@64)  (or (= $generated@@63 $generated@@37) ($generated@@15 ($generated@@38 $generated@@11 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@64 $generated@@63) $generated@@0)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@63 $generated@@31 $generated@@64))
)))
(assert (= ($generated@@10 $generated@@69) 7))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (and (and ($generated@@67 $generated@@73) (and (or (not (= $generated@@74 $generated@@37)) (not true)) (= ($generated@@68 $generated@@74) ($generated@@66 $generated@@71 $generated@@72)))) ($generated@@15 ($generated@@38 $generated@@11 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@73 $generated@@74) $generated@@0)))) ($generated@@28 $generated@@69 ($generated@@65 $generated@@74) ($generated@@70 $generated@@31) $generated@@73))
 :pattern ( ($generated@@65 $generated@@74) ($generated@@38 $generated@@11 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@73 $generated@@74) $generated@@0)) ($generated@@66 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 ($generated@@38 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@38 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@78 $generated@@69 $generated@@81 ($generated@@70 $generated@@82)) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@79 $generated@@81 $generated@@83) ($generated@@80 $generated@@83 $generated@@82))
 :pattern ( ($generated@@79 $generated@@81 $generated@@83))
)))
 :pattern ( ($generated@@78 $generated@@69 $generated@@81 ($generated@@70 $generated@@82)))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@78 $generated@@29 $generated@@87 ($generated@@84 $generated@@85 $generated@@86))  (and ($generated@@78 $generated@@29 $generated@@87 ($generated@@66 $generated@@85 $generated@@86)) (or (not (= $generated@@87 $generated@@37)) (not true))))
 :pattern ( ($generated@@78 $generated@@29 $generated@@87 ($generated@@84 $generated@@85 $generated@@86)))
 :pattern ( ($generated@@78 $generated@@29 $generated@@87 ($generated@@66 $generated@@85 $generated@@86)))
)))
(assert ($generated@@36 $generated@@0))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@88 ($generated@@75 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@28 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@88 ($generated@@75 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@78 $generated@@29 $generated@@95 ($generated@@66 $generated@@93 $generated@@94))  (or (= $generated@@95 $generated@@37) (= ($generated@@68 $generated@@95) ($generated@@66 $generated@@93 $generated@@94))))
 :pattern ( ($generated@@78 $generated@@29 $generated@@95 ($generated@@66 $generated@@93 $generated@@94)))
)))
(assert  (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@96 $generated@@99 $generated@@100 $generated@@101 ($generated@@98 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102) $generated@@104 $generated@@105) $generated@@102)
 :weight 0
)) (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@111 $generated@@113) (= ($generated@@96 $generated@@106 $generated@@107 $generated@@108 ($generated@@98 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@113 $generated@@114) ($generated@@96 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@113 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@96 $generated@@115 $generated@@116 $generated@@117 ($generated@@98 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@122 $generated@@123) ($generated@@96 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@122 $generated@@123)))
 :weight 0
)))))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@15 ($generated@@96 $generated@@29 $generated@@40 $generated@@11 ($generated@@97 $generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@130 $generated@@131))  (=> (and (or (not (= $generated@@130 $generated@@124)) (not true)) ($generated@@15 ($generated@@38 $generated@@11 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@125 $generated@@130) $generated@@126)))) (or (or (= $generated@@130 $generated@@127) ($generated@@79 $generated@@128 ($generated@@75 $generated@@29 $generated@@130))) ($generated@@79 $generated@@129 ($generated@@75 $generated@@29 $generated@@130)))))
 :pattern ( ($generated@@96 $generated@@29 $generated@@40 $generated@@11 ($generated@@97 $generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@134 ($generated@@84 $generated@@132 $generated@@133) $generated@@135) ($generated@@28 $generated@@29 $generated@@134 ($generated@@66 $generated@@132 $generated@@133) $generated@@135))
 :pattern ( ($generated@@28 $generated@@29 $generated@@134 ($generated@@84 $generated@@132 $generated@@133) $generated@@135))
 :pattern ( ($generated@@28 $generated@@29 $generated@@134 ($generated@@66 $generated@@132 $generated@@133) $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@80 $generated@@136 $generated@@31) (and (= ($generated@@75 $generated@@29 ($generated@@38 $generated@@29 $generated@@136)) $generated@@136) ($generated@@78 $generated@@29 ($generated@@38 $generated@@29 $generated@@136) $generated@@31)))
 :pattern ( ($generated@@80 $generated@@136 $generated@@31))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@80 $generated@@137 $generated@@30) (and (= ($generated@@75 $generated@@29 ($generated@@38 $generated@@29 $generated@@137)) $generated@@137) ($generated@@78 $generated@@29 ($generated@@38 $generated@@29 $generated@@137) $generated@@30)))
 :pattern ( ($generated@@80 $generated@@137 $generated@@30))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@78 $generated@@29 $generated@@138 $generated@@30)  (and ($generated@@78 $generated@@29 $generated@@138 $generated@@31) (or (not (= $generated@@138 $generated@@37)) (not true))))
 :pattern ( ($generated@@78 $generated@@29 $generated@@138 $generated@@30))
 :pattern ( ($generated@@78 $generated@@29 $generated@@138 $generated@@31))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and ($generated@@67 $generated@@141) (and (or (not (= $generated@@142 $generated@@37)) (not true)) (= ($generated@@68 $generated@@142) ($generated@@66 $generated@@139 $generated@@140)))) ($generated@@78 $generated@@69 ($generated@@38 $generated@@69 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@141 $generated@@142) $generated@@34)) ($generated@@70 $generated@@31)))
 :pattern ( ($generated@@38 $generated@@69 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@141 $generated@@142) $generated@@34)) ($generated@@66 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@145 ($generated@@66 $generated@@143 $generated@@144) $generated@@146)  (or (= $generated@@145 $generated@@37) ($generated@@15 ($generated@@38 $generated@@11 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@146 $generated@@145) $generated@@0)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@145 ($generated@@66 $generated@@143 $generated@@144) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (and (= ($generated@@147 ($generated@@35 $generated@@148 $generated@@149)) $generated@@148) (= ($generated@@27 ($generated@@35 $generated@@148 $generated@@149)) $generated@@149))
 :pattern ( ($generated@@35 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@80 ($generated@@75 $generated@@152 $generated@@150) $generated@@151) ($generated@@78 $generated@@152 $generated@@150 $generated@@151))
 :pattern ( ($generated@@80 ($generated@@75 $generated@@152 $generated@@150) $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> ($generated@@153 $generated@@154) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@80 $generated@@156 $generated@@154) ($generated@@88 $generated@@156 $generated@@154 $generated@@155))
 :pattern ( ($generated@@88 $generated@@156 $generated@@154 $generated@@155))
)))
 :pattern ( ($generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@28 $generated@@69 $generated@@157 ($generated@@70 $generated@@158) $generated@@159) (forall (($generated@@160 T@U) ) (!  (=> ($generated@@79 $generated@@157 $generated@@160) ($generated@@88 $generated@@160 $generated@@158 $generated@@159))
 :pattern ( ($generated@@79 $generated@@157 $generated@@160))
)))
 :pattern ( ($generated@@28 $generated@@69 $generated@@157 ($generated@@70 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@161 ($generated@@66 $generated@@162 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@66 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@164 ($generated@@66 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@66 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@167 ($generated@@84 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@84 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@170 ($generated@@84 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@84 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! ($generated@@78 $generated@@29 $generated@@173 $generated@@31)
 :pattern ( ($generated@@78 $generated@@29 $generated@@173 $generated@@31))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@174 ($generated@@70 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@70 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@176 ($generated@@70 $generated@@177)) $generated)
 :pattern ( ($generated@@70 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@T) ) (! (= ($generated@@38 $generated@@179 ($generated@@75 $generated@@179 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@75 $generated@@179 $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@80 $generated@@182 ($generated@@66 $generated@@180 $generated@@181)) (and (= ($generated@@75 $generated@@29 ($generated@@38 $generated@@29 $generated@@182)) $generated@@182) ($generated@@78 $generated@@29 ($generated@@38 $generated@@29 $generated@@182) ($generated@@66 $generated@@180 $generated@@181))))
 :pattern ( ($generated@@80 $generated@@182 ($generated@@66 $generated@@180 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> ($generated@@80 $generated@@185 ($generated@@84 $generated@@183 $generated@@184)) (and (= ($generated@@75 $generated@@29 ($generated@@38 $generated@@29 $generated@@185)) $generated@@185) ($generated@@78 $generated@@29 ($generated@@38 $generated@@29 $generated@@185) ($generated@@84 $generated@@183 $generated@@184))))
 :pattern ( ($generated@@80 $generated@@185 ($generated@@84 $generated@@183 $generated@@184)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (and (= ($generated@@176 ($generated@@66 $generated@@187 $generated@@188)) $generated@@5) (= ($generated@@186 ($generated@@66 $generated@@187 $generated@@188)) $generated@@8))
 :pattern ( ($generated@@66 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (and (= ($generated@@176 ($generated@@84 $generated@@189 $generated@@190)) $generated@@6) (= ($generated@@186 ($generated@@84 $generated@@189 $generated@@190)) $generated@@8))
 :pattern ( ($generated@@84 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@80 $generated@@191 ($generated@@70 $generated@@192)) (and (= ($generated@@75 $generated@@69 ($generated@@38 $generated@@69 $generated@@191)) $generated@@191) ($generated@@78 $generated@@69 ($generated@@38 $generated@@69 $generated@@191) ($generated@@70 $generated@@192))))
 :pattern ( ($generated@@80 $generated@@191 ($generated@@70 $generated@@192)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (or (not (= $generated@@195 $generated@@37)) (not true)) (= ($generated@@68 $generated@@195) ($generated@@66 $generated@@193 $generated@@194))) ($generated@@78 $generated@@69 ($generated@@65 $generated@@195) ($generated@@70 $generated@@31)))
 :pattern ( ($generated@@65 $generated@@195) ($generated@@66 $generated@@193 $generated@@194))
)))
(assert (= ($generated@@176 $generated@@31) $generated@@2))
(assert (= ($generated@@186 $generated@@31) $generated@@7))
(assert (= ($generated@@176 $generated@@30) $generated@@3))
(assert (= ($generated@@186 $generated@@30) $generated@@7))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and ($generated@@67 $generated@@198) (and (or (not (= $generated@@199 $generated@@37)) (not true)) (= ($generated@@68 $generated@@199) ($generated@@66 $generated@@196 $generated@@197)))) ($generated@@15 ($generated@@38 $generated@@11 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@198 $generated@@199) $generated@@0)))) ($generated@@28 $generated@@69 ($generated@@38 $generated@@69 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@198 $generated@@199) $generated@@34)) ($generated@@70 $generated@@31) $generated@@198))
 :pattern ( ($generated@@38 $generated@@69 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@198 $generated@@199) $generated@@34)) ($generated@@66 $generated@@196 $generated@@197))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () Bool)
(declare-fun $generated@@204 (T@U) Bool)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@208 true))
(let (($generated@@209 true))
(let (($generated@@210  (=> (and (= $generated@@200 ($generated@@97 $generated@@37 $generated@@201 $generated@@0 $generated@@202 ($generated@@65 $generated@@202) ($generated@@38 $generated@@69 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@201 $generated@@202) $generated@@34)))) (= $generated@@203 ($generated@@15 ($generated@@96 $generated@@29 $generated@@40 $generated@@11 $generated@@200 $generated@@202 $generated@@34)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@203) (=> $generated@@203 (and (=> (= (ControlFlow 0 3) 1) $generated@@209) (=> (= (ControlFlow 0 3) 2) $generated@@208)))))))
(let (($generated@@211  (=> (and (and (and ($generated@@67 $generated@@201) ($generated@@204 $generated@@201)) ($generated@@153 $generated@@205)) (and (and (or (not (= $generated@@202 $generated@@37)) (not true)) (and ($generated@@78 $generated@@29 $generated@@202 ($generated@@84 $generated@@205 $generated@@206)) ($generated@@28 $generated@@29 $generated@@202 ($generated@@84 $generated@@205 $generated@@206) $generated@@201))) (and (= 0 $generated@@207) (= (ControlFlow 0 5) 3)))) $generated@@210)))
$generated@@211)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
