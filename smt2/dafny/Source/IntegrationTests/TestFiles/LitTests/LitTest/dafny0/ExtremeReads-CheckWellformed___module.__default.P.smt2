(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (Int) T@U)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@43 () Int)
(declare-fun $generated@@44 (T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@52 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@86 (Int) Int)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@29 $generated@@30)) ($generated@@27 $generated@@28 $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@29 $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 Int) ($generated@@36 Int) ) (!  (=> (and (and (<= 0 $generated@@35) (<= 0 $generated@@36)) (<= (+ $generated@@35 $generated@@36) ($generated@@33 $generated@@34))) (= ($generated@@31 ($generated@@31 $generated@@34 ($generated@@32 $generated@@35)) ($generated@@32 $generated@@36)) ($generated@@31 $generated@@34 ($generated@@32 (+ $generated@@35 $generated@@36)))))
 :pattern ( ($generated@@31 ($generated@@31 $generated@@34 ($generated@@32 $generated@@35)) ($generated@@32 $generated@@36)))
)))
(assert (= ($generated@@8 $generated@@38) 3))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@42 $generated@@39)  (or (= $generated@@42 $generated@@40) (= ($generated@@41 $generated@@42) $generated@@39)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@42 $generated@@39))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@49) ($generated@@37 $generated@@38 $generated@@50 $generated@@39)) ($generated@@44 ($generated@@45 $generated@@48) $generated@@49 $generated@@50)) (forall (($generated@@51 T@U) ) (! ($generated@@47 ($generated@@45 $generated@@48) $generated@@49 $generated@@51 $generated@@50)
 :pattern ( ($generated@@47 ($generated@@45 $generated@@48) $generated@@49 $generated@@51 $generated@@50))
)))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@48) $generated@@49 $generated@@50))
))))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@52 $generated@@38 $generated@@54 $generated@@53 $generated@@55) ($generated@@52 $generated@@38 $generated@@54 $generated@@39 $generated@@55))
 :pattern ( ($generated@@52 $generated@@38 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@52 $generated@@38 $generated@@54 $generated@@39 $generated@@55))
)))
(assert (= ($generated@@24 $generated@@56) 0))
(assert (= ($generated@@57 $generated@@5 $generated@@7) $generated@@56))
(assert  (not ($generated@@58 $generated@@56)))
(assert  (and (and (and (and (and (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@60 $generated@@67 $generated@@68 ($generated@@64 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@71) $generated@@69)
 :weight 0
)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@76 $generated@@77) (= ($generated@@60 $generated@@72 $generated@@73 ($generated@@64 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@77) ($generated@@60 $generated@@72 $generated@@73 $generated@@75 $generated@@77)))
 :weight 0
))) (= ($generated@@8 $generated@@61) 4)) (= ($generated@@8 $generated@@62) 5)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (= ($generated@@8 ($generated@@63 $generated@@78 $generated@@79)) 6))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@65 ($generated@@63 $generated@@80 $generated@@81)) $generated@@80)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@66 ($generated@@63 $generated@@82 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@63 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@52 $generated@@38 $generated@@84 $generated@@39 $generated@@85)  (or (= $generated@@84 $generated@@40) ($generated@@13 ($generated@@59 $generated@@9 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@85 $generated@@84) $generated@@1)))))
 :pattern ( ($generated@@52 $generated@@38 $generated@@84 $generated@@39 $generated@@85))
)))
(assert (forall (($generated@@87 Int) ) (! (= ($generated@@86 $generated@@87) $generated@@87)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 $generated@@89) $generated@@89)
 :pattern ( ($generated@@88 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 ($generated@@59 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@59 $generated@@93 $generated@@92))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@95) ($generated@@37 $generated@@38 $generated@@96 $generated@@39)) (forall (($generated@@97 T@U) ) (! ($generated@@47 ($generated@@45 $generated@@94) $generated@@95 $generated@@97 $generated@@96)
 :pattern ( ($generated@@47 ($generated@@45 $generated@@94) $generated@@95 $generated@@97 $generated@@96))
))) ($generated@@44 ($generated@@45 $generated@@94) $generated@@95 $generated@@96))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@94) $generated@@95 $generated@@96))
))))
(assert  (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@98 $generated@@101 $generated@@102 $generated@@103 ($generated@@100 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@106 $generated@@107) $generated@@104)
 :weight 0
)) (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@98 $generated@@108 $generated@@109 $generated@@110 ($generated@@100 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@98 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@98 $generated@@117 $generated@@118 $generated@@119 ($generated@@100 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@98 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)))))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@13 ($generated@@98 $generated@@38 $generated@@61 $generated@@9 ($generated@@99 $generated@@126 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))  (=> (and (or (not (= $generated@@131 $generated@@126)) (not true)) ($generated@@13 ($generated@@59 $generated@@9 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@127 $generated@@131) $generated@@128)))) ($generated@@13 ($generated@@59 $generated@@9 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@129 $generated@@131) $generated@@130)))))
 :pattern ( ($generated@@98 $generated@@38 $generated@@61 $generated@@9 ($generated@@99 $generated@@126 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))
)))
(assert ($generated@@58 $generated@@1))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@44 ($generated@@45 $generated@@133) $generated@@134 $generated@@135) ($generated@@44 $generated@@133 $generated@@134 $generated@@135))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and ($generated@@136 $generated@@138) (<= ($generated@@33 $generated@@138) ($generated@@33 $generated@@137))) (and (= ($generated@@136 ($generated@@31 $generated@@137 $generated@@138)) ($generated@@136 $generated@@137)) (= ($generated@@33 ($generated@@31 $generated@@137 $generated@@138)) (- ($generated@@33 $generated@@137) ($generated@@33 $generated@@138)))))
 :pattern ( ($generated@@31 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and ($generated@@46 $generated@@139) (and (or (not (= $generated@@140 $generated@@40)) (not true)) (= ($generated@@41 $generated@@140) $generated@@39))) ($generated@@37 $generated@@38 ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@139 $generated@@140) $generated@@56)) $generated@@39))
 :pattern ( ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@139 $generated@@140) $generated@@56)))
)))
(assert (forall (($generated@@141 Int) ) (!  (=> (<= 0 $generated@@141) (and ($generated@@136 ($generated@@32 $generated@@141)) (= ($generated@@33 ($generated@@32 $generated@@141)) $generated@@141)))
 :pattern ( ($generated@@32 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@142 $generated@@53)  (and ($generated@@37 $generated@@38 $generated@@142 $generated@@39) (or (not (= $generated@@142 $generated@@40)) (not true))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@142 $generated@@53))
 :pattern ( ($generated@@37 $generated@@38 $generated@@142 $generated@@39))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@143) (and (or (not (= $generated@@144 $generated@@40)) (not true)) (= ($generated@@41 $generated@@144) $generated@@39))) ($generated@@13 ($generated@@59 $generated@@9 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@143 $generated@@144) $generated@@1)))) ($generated@@52 $generated@@38 ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@143 $generated@@144) $generated@@56)) $generated@@39 $generated@@143))
 :pattern ( ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@143 $generated@@144) $generated@@56)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (or ($generated@@27 $generated@@145 $generated@@146) (= $generated@@145 $generated@@146)) ($generated@@27 $generated@@146 $generated@@145))
 :pattern ( ($generated@@27 $generated@@145 $generated@@146) ($generated@@27 $generated@@146 $generated@@145))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (or ($generated@@147 $generated@@149 $generated@@150 $generated@@151) (and (< 1 $generated@@43) (and (and ($generated@@46 $generated@@149) ($generated@@37 $generated@@38 $generated@@151 $generated@@39)) (or (not (= $generated@@151 $generated@@40)) (not true))))) (and (and (=> (< 0 ($generated@@33 $generated@@150)) (=> (or (not (= ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@149 $generated@@151) $generated@@56)) $generated@@40)) (not true)) ($generated@@147 $generated@@149 ($generated@@31 $generated@@150 ($generated@@32 1)) ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@149 $generated@@151) $generated@@56))))) (=> (=> (< 0 ($generated@@33 $generated@@150)) (and (or (not (= ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@149 $generated@@151) $generated@@56)) $generated@@40)) (not true)) ($generated@@47 $generated@@148 $generated@@149 ($generated@@31 $generated@@150 ($generated@@32 1)) ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@149 $generated@@151) $generated@@56))))) (=> (= ($generated@@86 0) ($generated@@33 $generated@@150)) (forall (($generated@@152 T@U) ) (!  (=> ($generated@@27 $generated@@152 $generated@@150) ($generated@@147 $generated@@149 $generated@@152 $generated@@151))
 :pattern ( ($generated@@47 $generated@@148 $generated@@149 $generated@@152 $generated@@151))
))))) (= ($generated@@47 ($generated@@45 $generated@@148) $generated@@149 $generated@@150 $generated@@151)  (and (=> (< 0 ($generated@@33 $generated@@150)) (and (or (not (= ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@149 $generated@@151) $generated@@56)) $generated@@40)) (not true)) ($generated@@47 $generated@@148 $generated@@149 ($generated@@31 $generated@@150 ($generated@@32 1)) ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@149 $generated@@151) $generated@@56))))) (=> (= ($generated@@86 0) ($generated@@33 $generated@@150)) (forall (($generated@@153 T@U) ) (!  (=> ($generated@@27 $generated@@153 $generated@@150) ($generated@@47 $generated@@148 $generated@@149 $generated@@153 $generated@@151))
 :pattern ( ($generated@@47 $generated@@148 $generated@@149 $generated@@153 $generated@@151))
)))))))
 :pattern ( ($generated@@47 ($generated@@45 $generated@@148) $generated@@149 $generated@@150 $generated@@151) ($generated@@46 $generated@@149))
))))
(assert  (=> (<= 0 $generated@@43) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (or ($generated@@154 $generated@@156 $generated@@157) (and (< 0 $generated@@43) (and (and ($generated@@46 $generated@@156) ($generated@@37 $generated@@38 $generated@@157 $generated@@39)) (or (not (= $generated@@157 $generated@@40)) (not true))))) (and (=> (or (not (= ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@156 $generated@@157) $generated@@56)) $generated@@40)) (not true)) ($generated@@154 $generated@@156 ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@156 $generated@@157) $generated@@56)))) (= ($generated@@44 ($generated@@45 $generated@@155) $generated@@156 $generated@@157)  (and (or (not (= ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@156 $generated@@157) $generated@@56)) $generated@@40)) (not true)) ($generated@@44 $generated@@155 $generated@@156 ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@156 $generated@@157) $generated@@56)))))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@155) $generated@@156 $generated@@157) ($generated@@46 $generated@@156))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (and (= ($generated@@158 ($generated@@57 $generated@@159 $generated@@160)) $generated@@159) (= ($generated@@26 ($generated@@57 $generated@@159 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@57 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@47 ($generated@@45 $generated@@161) $generated@@162 $generated@@163 $generated@@164) ($generated@@47 $generated@@161 $generated@@162 $generated@@163 $generated@@164))
 :pattern ( ($generated@@47 ($generated@@45 $generated@@161) $generated@@162 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (! (<= 0 ($generated@@33 $generated@@165))
 :pattern ( ($generated@@33 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@59 $generated@@167 ($generated@@91 $generated@@167 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@91 $generated@@167 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (and (and (and (=> ($generated@@27 $generated@@168 $generated@@169) (or (not (= $generated@@168 $generated@@169)) (not true))) (=> (and ($generated@@136 $generated@@168) (not ($generated@@136 $generated@@169))) ($generated@@27 $generated@@168 $generated@@169))) (=> (and ($generated@@136 $generated@@168) ($generated@@136 $generated@@169)) (= ($generated@@27 $generated@@168 $generated@@169) (< ($generated@@33 $generated@@168) ($generated@@33 $generated@@169))))) (=> (and ($generated@@27 $generated@@168 $generated@@169) ($generated@@136 $generated@@169)) ($generated@@136 $generated@@168)))
 :pattern ( ($generated@@27 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> ($generated@@136 $generated@@170) (= $generated@@170 ($generated@@32 ($generated@@33 $generated@@170))))
 :pattern ( ($generated@@33 $generated@@170))
 :pattern ( ($generated@@136 $generated@@170))
)))
(assert (= ($generated@@25 $generated@@39) $generated@@3))
(assert (= ($generated@@171 $generated@@39) $generated@@6))
(assert (= ($generated@@25 $generated@@53) $generated@@4))
(assert (= ($generated@@171 $generated@@53) $generated@@6))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@136 $generated@@173) (<= ($generated@@33 $generated@@173) ($generated@@33 $generated@@172))) (or (and (= $generated@@173 ($generated@@32 0)) (= ($generated@@31 $generated@@172 $generated@@173) $generated@@172)) (and (or (not (= $generated@@173 ($generated@@32 0))) (not true)) ($generated@@27 ($generated@@31 $generated@@172 $generated@@173) $generated@@172))))
 :pattern ( ($generated@@31 $generated@@172 $generated@@173))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@175) ($generated@@37 $generated@@38 $generated@@176 $generated@@39)) (= $generated@@177 ($generated@@32 0))) ($generated@@47 $generated@@174 $generated@@175 $generated@@177 $generated@@176))
 :pattern ( ($generated@@47 $generated@@174 $generated@@175 $generated@@177 $generated@@176))
))))
(assert (forall (($generated@@178 Int) ) (! (= ($generated@@91 $generated@@10 ($generated@@14 ($generated@@86 $generated@@178))) ($generated@@88 $generated@@62 ($generated@@91 $generated@@10 ($generated@@14 $generated@@178))))
 :pattern ( ($generated@@91 $generated@@10 ($generated@@14 ($generated@@86 $generated@@178))))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@91 $generated@@180 ($generated@@88 $generated@@180 $generated@@179)) ($generated@@88 $generated@@62 ($generated@@91 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@91 $generated@@180 ($generated@@88 $generated@@180 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! ($generated@@52 $generated@@9 $generated@@182 $generated $generated@@181)
 :pattern ( ($generated@@52 $generated@@9 $generated@@182 $generated $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (! ($generated@@37 $generated@@9 $generated@@183 $generated)
 :pattern ( ($generated@@37 $generated@@9 $generated@@183 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Bool)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () Bool)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Bool)
(declare-fun $generated@@194 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@195  (=> (= ($generated@@44 ($generated@@45 $generated@@184) $generated@@185 $generated@@186)  (and (or (not (= ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@185 $generated@@186) $generated@@56)) $generated@@40)) (not true)) ($generated@@44 ($generated@@45 $generated@@184) $generated@@185 ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@185 $generated@@186) $generated@@56))))) (=> (and (=> (or (not (= ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@185 $generated@@186) $generated@@56)) $generated@@40)) (not true)) ($generated@@154 $generated@@185 ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@185 $generated@@186) $generated@@56)))) ($generated@@37 $generated@@9 ($generated@@12 ($generated@@44 ($generated@@45 $generated@@184) $generated@@185 $generated@@186)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@187) (=> $generated@@187 (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@188) (=> $generated@@188 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@189)))))))))
(let (($generated@@196  (=> (and (and (= ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@185 $generated@@186) $generated@@56)) $generated@@40) (= $generated@@188 true)) (and (= $generated@@189 true) (= (ControlFlow 0 9) 3))) $generated@@195)))
(let (($generated@@197  (=> (or (not (= ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@185 $generated@@186) $generated@@56)) $generated@@40)) (not true)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (not (= $generated@@186 $generated@@40)) (not true))) (=> (or (not (= $generated@@186 $generated@@40)) (not true)) (=> (= $generated@@190 ($generated@@13 ($generated@@98 $generated@@38 $generated@@61 $generated@@9 $generated@@191 $generated@@186 $generated@@56))) (=> (and (= $generated@@192 ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@185 $generated@@186) $generated@@56))) ($generated@@52 $generated@@38 $generated@@192 $generated@@39 $generated@@185)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (not (= $generated@@192 $generated@@40)) (not true))) (=> (and (or (not (= $generated@@192 $generated@@40)) (not true)) (= $generated@@193 (forall (($generated@@198 T@U) ($generated@@199 T@U) )  (=> (and (and (or (not (= $generated@@198 $generated@@40)) (not true)) ($generated@@13 ($generated@@59 $generated@@9 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@185 $generated@@198) $generated@@1)))) ($generated@@13 ($generated@@59 $generated@@9 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@185 $generated@@198) $generated@@1)))) ($generated@@13 ($generated@@98 $generated@@38 $generated@@61 $generated@@9 $generated@@191 $generated@@198 $generated@@199)))))) (=> (and (and ($generated@@154 $generated@@185 ($generated@@59 $generated@@38 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@185 $generated@@186) $generated@@56))) (= $generated@@188 $generated@@190)) (and (= $generated@@189 $generated@@193) (= (ControlFlow 0 6) 3))) $generated@@195))))))))))
(let (($generated@@200  (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (not (= $generated@@186 $generated@@40)) (not true))) (=> (or (not (= $generated@@186 $generated@@40)) (not true)) (=> (= $generated@@187 ($generated@@13 ($generated@@98 $generated@@38 $generated@@61 $generated@@9 $generated@@191 $generated@@186 $generated@@56))) (and (=> (= (ControlFlow 0 10) 6) $generated@@197) (=> (= (ControlFlow 0 10) 9) $generated@@196)))))))
(let (($generated@@201 true))
(let (($generated@@202  (=> (and (= $generated@@191 ($generated@@99 $generated@@40 $generated@@185 $generated@@1 $generated@@185 $generated@@1)) (or (not (= $generated@@186 $generated@@40)) (not true))) (and (=> (= (ControlFlow 0 12) 1) $generated@@201) (=> (= (ControlFlow 0 12) 10) $generated@@200)))))
(let (($generated@@203  (=> (and (and (and ($generated@@46 $generated@@185) ($generated@@194 $generated@@185)) ($generated@@37 $generated@@38 $generated@@186 $generated@@39)) (and (= 0 $generated@@43) (= (ControlFlow 0 13) 12))) $generated@@202)))
$generated@@203))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
