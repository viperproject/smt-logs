(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@T T@T) T@T)
(declare-fun $generated@@44 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@67 (T@U Int) T@U)
(declare-fun $generated@@68 (T@U T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) T@U)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@75 (Int) Int)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U Int) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@140 (T@U) Int)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated@@2) 0))
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and (or (not (= $generated@@30 $generated@@26)) (not true)) (= ($generated@@27 $generated@@30) ($generated@@25 $generated@@29))) ($generated@@28 $generated@@8 ($generated@@12 ($generated@@24 $generated@@30)) $generated))
 :pattern ( ($generated@@24 $generated@@30) ($generated@@25 $generated@@29))
)))
(assert (= ($generated@@6 $generated@@32) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@35 ($generated@@33 $generated@@34) $generated@@36) ($generated@@31 $generated@@32 $generated@@35 ($generated@@25 $generated@@34) $generated@@36))
 :pattern ( ($generated@@31 $generated@@32 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
 :pattern ( ($generated@@31 $generated@@32 $generated@@35 ($generated@@25 $generated@@34) $generated@@36))
)))
(assert (= ($generated@@37 $generated@@38) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@40 $generated@@47 $generated@@48 ($generated@@44 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@51) $generated@@49)
 :weight 0
)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (or (= $generated@@56 $generated@@57) (= ($generated@@40 $generated@@52 $generated@@53 ($generated@@44 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@57) ($generated@@40 $generated@@52 $generated@@53 $generated@@55 $generated@@57)))
 :weight 0
))) (= ($generated@@6 $generated@@41) 4)) (= ($generated@@6 $generated@@42) 5)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (= ($generated@@6 ($generated@@43 $generated@@58 $generated@@59)) 6))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@45 ($generated@@43 $generated@@60 $generated@@61)) $generated@@60)
 :pattern ( ($generated@@43 $generated@@60 $generated@@61))
))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@46 ($generated@@43 $generated@@62 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@43 $generated@@62 $generated@@63))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@65 ($generated@@25 $generated@@64) $generated@@66)  (or (= $generated@@65 $generated@@26) ($generated@@11 ($generated@@39 $generated@@7 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@66 $generated@@65) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@65 ($generated@@25 $generated@@64) $generated@@66))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 Int) ($generated@@74 Int) ) (!  (=> (and (and (= (+ $generated@@73 1) $generated@@74) (<= 0 $generated@@73)) (<= $generated@@74 ($generated@@24 $generated@@72))) (= ($generated@@67 ($generated@@68 $generated@@71 $generated@@72) $generated@@74) ($generated@@69 ($generated@@67 ($generated@@68 $generated@@71 $generated@@72) $generated@@73) ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@71 $generated@@72) ($generated@@70 $generated@@73)))))
 :pattern ( ($generated@@67 ($generated@@68 $generated@@71 $generated@@72) $generated@@73) ($generated@@67 ($generated@@68 $generated@@71 $generated@@72) $generated@@74))
)))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@75 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@79 $generated@@78))
)))
(assert (= ($generated@@6 $generated@@80) 7))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and ($generated@@28 $generated@@80 $generated@@83 ($generated@@81 $generated@@85)) ($generated@@82 $generated@@84 $generated@@85)) ($generated@@28 $generated@@80 ($generated@@69 $generated@@83 $generated@@84) ($generated@@81 $generated@@85)))
 :pattern ( ($generated@@28 $generated@@80 ($generated@@69 $generated@@83 $generated@@84) ($generated@@81 $generated@@85)))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 Int) ($generated@@89 Int) ) (!  (=> (and (and (<= 0 $generated@@89) (< $generated@@89 $generated@@88)) (< $generated@@89 ($generated@@37 $generated@@87))) (= ($generated@@86 ($generated@@67 $generated@@87 $generated@@88) $generated@@89) ($generated@@86 $generated@@87 $generated@@89)))
 :weight 25
 :pattern ( ($generated@@86 ($generated@@67 $generated@@87 $generated@@88) $generated@@89))
 :pattern ( ($generated@@86 $generated@@87 $generated@@89) ($generated@@67 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Int) ) (!  (=> (and (and (and ($generated@@90 $generated@@93) (and (or (not (= $generated@@94 $generated@@26)) (not true)) (= ($generated@@27 $generated@@94) ($generated@@25 $generated@@92)))) (and (<= 0 $generated@@95) (< $generated@@95 ($generated@@24 $generated@@94)))) ($generated@@11 ($generated@@39 $generated@@7 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@93 $generated@@94) $generated@@2)))) ($generated@@91 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@93 $generated@@94) ($generated@@70 $generated@@95)) $generated@@92 $generated@@93))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@93 $generated@@94) ($generated@@70 $generated@@95)) ($generated@@25 $generated@@92))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@96 $generated@@97 $generated@@98)  (and (= ($generated@@37 $generated@@97) ($generated@@37 $generated@@98)) (forall (($generated@@99 Int) ) (!  (=> (and (<= 0 $generated@@99) (< $generated@@99 ($generated@@37 $generated@@97))) (= ($generated@@86 $generated@@97 $generated@@99) ($generated@@86 $generated@@98 $generated@@99)))
 :pattern ( ($generated@@86 $generated@@97 $generated@@99))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99))
))))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@100 $generated@@102 ($generated@@39 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@39 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@37 ($generated@@69 $generated@@103 $generated@@104)) (+ 1 ($generated@@37 $generated@@103)))
 :pattern ( ($generated@@69 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@28 $generated@@32 $generated@@106 ($generated@@33 $generated@@105))  (and ($generated@@28 $generated@@32 $generated@@106 ($generated@@25 $generated@@105)) (or (not (= $generated@@106 $generated@@26)) (not true))))
 :pattern ( ($generated@@28 $generated@@32 $generated@@106 ($generated@@33 $generated@@105)))
 :pattern ( ($generated@@28 $generated@@32 $generated@@106 ($generated@@25 $generated@@105)))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@91 ($generated@@100 $generated@@110 $generated@@107) $generated@@108 $generated@@109) ($generated@@31 $generated@@110 $generated@@107 $generated@@108 $generated@@109))
 :pattern ( ($generated@@91 ($generated@@100 $generated@@110 $generated@@107) $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ) (!  (and (= ($generated@@23 ($generated@@25 $generated@@112)) $generated@@3) (= ($generated@@111 ($generated@@25 $generated@@112)) $generated@@5))
 :pattern ( ($generated@@25 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (!  (and (= ($generated@@23 ($generated@@33 $generated@@113)) $generated@@4) (= ($generated@@111 ($generated@@33 $generated@@113)) $generated@@5))
 :pattern ( ($generated@@33 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@28 $generated@@32 $generated@@115 ($generated@@25 $generated@@114))  (or (= $generated@@115 $generated@@26) (= ($generated@@27 $generated@@115) ($generated@@25 $generated@@114))))
 :pattern ( ($generated@@28 $generated@@32 $generated@@115 ($generated@@25 $generated@@114)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 Int) ($generated@@118 T@U) ) (!  (and (=> (= $generated@@117 ($generated@@37 $generated@@116)) (= ($generated@@86 ($generated@@69 $generated@@116 $generated@@118) $generated@@117) $generated@@118)) (=> (or (not (= $generated@@117 ($generated@@37 $generated@@116))) (not true)) (= ($generated@@86 ($generated@@69 $generated@@116 $generated@@118) $generated@@117) ($generated@@86 $generated@@116 $generated@@117))))
 :pattern ( ($generated@@86 ($generated@@69 $generated@@116 $generated@@118) $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (forall (($generated@@121 Int) ) (!  (=> (and (<= 0 $generated@@121) (< $generated@@121 ($generated@@37 ($generated@@68 $generated@@119 $generated@@120)))) (= ($generated@@86 ($generated@@68 $generated@@119 $generated@@120) $generated@@121) ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@119 $generated@@120) ($generated@@70 $generated@@121))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@119 $generated@@120) ($generated@@70 $generated@@121)))
 :pattern ( ($generated@@86 ($generated@@68 $generated@@119 $generated@@120) $generated@@121))
))
 :pattern ( ($generated@@68 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@96 $generated@@122 $generated@@123) (= $generated@@122 $generated@@123))
 :pattern ( ($generated@@96 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 Int) ) (!  (=> (and (<= 0 $generated@@125) (<= $generated@@125 ($generated@@37 $generated@@124))) (= ($generated@@37 ($generated@@67 $generated@@124 $generated@@125)) $generated@@125))
 :pattern ( ($generated@@37 ($generated@@67 $generated@@124 $generated@@125)))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@82 $generated@@126 $generated) (and (= ($generated@@100 $generated@@8 ($generated@@39 $generated@@8 $generated@@126)) $generated@@126) ($generated@@28 $generated@@8 ($generated@@39 $generated@@8 $generated@@126) $generated)))
 :pattern ( ($generated@@82 $generated@@126 $generated))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@82 ($generated@@100 $generated@@129 $generated@@127) $generated@@128) ($generated@@28 $generated@@129 $generated@@127 $generated@@128))
 :pattern ( ($generated@@82 ($generated@@100 $generated@@129 $generated@@127) $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (! (<= 0 ($generated@@24 $generated@@130))
 :pattern ( ($generated@@24 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ) (! (<= 0 ($generated@@37 $generated@@131))
 :pattern ( ($generated@@37 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@31 $generated@@80 $generated@@132 ($generated@@81 $generated@@133) $generated@@134) (forall (($generated@@135 Int) ) (!  (=> (and (<= 0 $generated@@135) (< $generated@@135 ($generated@@37 $generated@@132))) ($generated@@91 ($generated@@86 $generated@@132 $generated@@135) $generated@@133 $generated@@134))
 :pattern ( ($generated@@86 $generated@@132 $generated@@135))
)))
 :pattern ( ($generated@@31 $generated@@80 $generated@@132 ($generated@@81 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@136 ($generated@@81 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@81 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@23 ($generated@@81 $generated@@138)) $generated@@1)
 :pattern ( ($generated@@81 $generated@@138))
)))
(assert (forall (($generated@@139 Int) ) (! (= ($generated@@22 ($generated@@70 $generated@@139)) 1)
 :pattern ( ($generated@@70 $generated@@139))
)))
(assert (forall (($generated@@141 Int) ) (! (= ($generated@@140 ($generated@@70 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@70 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@25 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@25 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@144 ($generated@@33 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@33 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@39 $generated@@147 ($generated@@100 $generated@@147 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@100 $generated@@147 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and ($generated@@90 $generated@@149) (and (or (not (= $generated@@150 $generated@@26)) (not true)) (= ($generated@@27 $generated@@150) ($generated@@25 $generated@@148)))) ($generated@@11 ($generated@@39 $generated@@7 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@149 $generated@@150) $generated@@2)))) ($generated@@31 $generated@@8 ($generated@@12 ($generated@@24 $generated@@150)) $generated $generated@@149))
 :pattern ( ($generated@@24 $generated@@150) ($generated@@39 $generated@@7 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@149 $generated@@150) $generated@@2)) ($generated@@25 $generated@@148))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Int) ) (!  (=> (and (and ($generated@@90 $generated@@152) (and (or (not (= $generated@@153 $generated@@26)) (not true)) (= ($generated@@27 $generated@@153) ($generated@@25 $generated@@151)))) (and (<= 0 $generated@@154) (< $generated@@154 ($generated@@24 $generated@@153)))) ($generated@@82 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@152 $generated@@153) ($generated@@70 $generated@@154)) $generated@@151))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@152 $generated@@153) ($generated@@70 $generated@@154)) ($generated@@25 $generated@@151))
)))
(assert  (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@155 $generated@@158 $generated@@159 $generated@@160 ($generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@163 $generated@@164) $generated@@161)
 :weight 0
)) (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@155 $generated@@165 $generated@@166 $generated@@167 ($generated@@157 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@155 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@155 $generated@@174 $generated@@175 $generated@@176 ($generated@@157 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@155 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 Bool) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@11 ($generated@@155 $generated@@32 $generated@@41 $generated@@7 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))  (=> (and (or (not (= $generated@@187 $generated@@183)) (not true)) ($generated@@11 ($generated@@39 $generated@@7 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@184 $generated@@187) $generated@@185)))) $generated@@186))
 :pattern ( ($generated@@155 $generated@@32 $generated@@41 $generated@@7 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@37 ($generated@@68 $generated@@189 $generated@@190)) ($generated@@24 $generated@@190))
 :pattern ( ($generated@@37 ($generated@@68 $generated@@189 $generated@@190)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (and (= ($generated@@191 ($generated@@69 $generated@@193 $generated@@194)) $generated@@193) (= ($generated@@192 ($generated@@69 $generated@@193 $generated@@194)) $generated@@194))
 :pattern ( ($generated@@69 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> ($generated@@82 $generated@@195 ($generated@@81 $generated@@196)) (and (= ($generated@@100 $generated@@80 ($generated@@39 $generated@@80 $generated@@195)) $generated@@195) ($generated@@28 $generated@@80 ($generated@@39 $generated@@80 $generated@@195) ($generated@@81 $generated@@196))))
 :pattern ( ($generated@@82 $generated@@195 ($generated@@81 $generated@@196)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@82 $generated@@198 ($generated@@25 $generated@@197)) (and (= ($generated@@100 $generated@@32 ($generated@@39 $generated@@32 $generated@@198)) $generated@@198) ($generated@@28 $generated@@32 ($generated@@39 $generated@@32 $generated@@198) ($generated@@25 $generated@@197))))
 :pattern ( ($generated@@82 $generated@@198 ($generated@@25 $generated@@197)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@82 $generated@@200 ($generated@@33 $generated@@199)) (and (= ($generated@@100 $generated@@32 ($generated@@39 $generated@@32 $generated@@200)) $generated@@200) ($generated@@28 $generated@@32 ($generated@@39 $generated@@32 $generated@@200) ($generated@@33 $generated@@199))))
 :pattern ( ($generated@@82 $generated@@200 ($generated@@33 $generated@@199)))
)))
(assert (forall (($generated@@201 Int) ) (! (= ($generated@@100 $generated@@8 ($generated@@12 ($generated@@75 $generated@@201))) ($generated@@77 $generated@@42 ($generated@@100 $generated@@8 ($generated@@12 $generated@@201))))
 :pattern ( ($generated@@100 $generated@@8 ($generated@@12 ($generated@@75 $generated@@201))))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@T) ) (! (= ($generated@@100 $generated@@203 ($generated@@77 $generated@@203 $generated@@202)) ($generated@@77 $generated@@42 ($generated@@100 $generated@@203 $generated@@202)))
 :pattern ( ($generated@@100 $generated@@203 ($generated@@77 $generated@@203 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ) (!  (=> (= ($generated@@37 $generated@@204) 0) (= $generated@@204 $generated@@38))
 :pattern ( ($generated@@37 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 Int) ) (!  (=> (= $generated@@206 0) (= ($generated@@67 $generated@@205 $generated@@206) $generated@@38))
 :pattern ( ($generated@@67 $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! ($generated@@31 $generated@@8 $generated@@208 $generated $generated@@207)
 :pattern ( ($generated@@31 $generated@@8 $generated@@208 $generated $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@28 $generated@@80 $generated@@209 ($generated@@81 $generated@@210)) (forall (($generated@@211 Int) ) (!  (=> (and (<= 0 $generated@@211) (< $generated@@211 ($generated@@37 $generated@@209))) ($generated@@82 ($generated@@86 $generated@@209 $generated@@211) $generated@@210))
 :pattern ( ($generated@@86 $generated@@209 $generated@@211))
)))
 :pattern ( ($generated@@28 $generated@@80 $generated@@209 ($generated@@81 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ) (! ($generated@@28 $generated@@8 $generated@@212 $generated)
 :pattern ( ($generated@@28 $generated@@8 $generated@@212 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () Int)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 (T@U) Bool)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@226  (=> (= (ControlFlow 0 19) (- 0 18)) (forall (($generated@@227 Int) ) (!  (=> (and (<= ($generated@@75 0) $generated@@227) (< $generated@@227 $generated@@215)) (= ($generated@@13 ($generated@@39 $generated@@8 ($generated@@86 $generated@@214 $generated@@227))) ($generated@@13 ($generated@@39 $generated@@8 ($generated@@86 $generated@@213 $generated@@227)))))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@86 $generated@@213 $generated@@227)))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@86 $generated@@214 $generated@@227)))
)))))
(let (($generated@@228  (=> (and (not (and (<= ($generated@@75 0) $generated@@216) (< $generated@@216 $generated@@215))) (= (ControlFlow 0 23) 19)) $generated@@226)))
(let (($generated@@229  (=> (and (<= ($generated@@75 0) $generated@@216) (< $generated@@216 $generated@@215)) (and (=> (= (ControlFlow 0 20) (- 0 22)) (and (<= 0 $generated@@216) (< $generated@@216 ($generated@@37 $generated@@214)))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (and (<= 0 $generated@@216) (< $generated@@216 ($generated@@37 $generated@@213)))) (=> (= (ControlFlow 0 20) 19) $generated@@226))))))
(let (($generated@@230  (=> (< $generated@@216 ($generated@@75 0)) (and (=> (= (ControlFlow 0 25) 20) $generated@@229) (=> (= (ControlFlow 0 25) 23) $generated@@228)))))
(let (($generated@@231  (=> (<= ($generated@@75 0) $generated@@216) (and (=> (= (ControlFlow 0 24) 20) $generated@@229) (=> (= (ControlFlow 0 24) 23) $generated@@228)))))
(let (($generated@@232  (and (=> (= (ControlFlow 0 26) 24) $generated@@231) (=> (= (ControlFlow 0 26) 25) $generated@@230))))
(let (($generated@@233 true))
(let (($generated@@234  (=> ($generated@@96 $generated@@214 $generated@@213) (and (=> (= (ControlFlow 0 27) 26) $generated@@232) (=> (= (ControlFlow 0 27) 17) $generated@@233)))))
(let (($generated@@235  (=> (= (ControlFlow 0 6) (- 0 5)) (forall (($generated@@236 Int) ) (!  (=> (and (<= ($generated@@75 0) $generated@@236) (< $generated@@236 $generated@@215)) (= ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@217 $generated@@219) ($generated@@70 $generated@@236)))) ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@217 $generated@@218) ($generated@@70 $generated@@236))))))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@217 $generated@@218) ($generated@@70 $generated@@236))))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@217 $generated@@219) ($generated@@70 $generated@@236))))
)))))
(let (($generated@@237  (=> (and (not (and (<= ($generated@@75 0) $generated@@220) (< $generated@@220 $generated@@215))) (= (ControlFlow 0 12) 6)) $generated@@235)))
(let (($generated@@238  (=> (and (<= ($generated@@75 0) $generated@@220) (< $generated@@220 $generated@@215)) (and (=> (= (ControlFlow 0 7) (- 0 11)) (or (not (= $generated@@219 $generated@@26)) (not true))) (=> (or (not (= $generated@@219 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 7) (- 0 10)) (and (<= 0 $generated@@220) (< $generated@@220 ($generated@@24 $generated@@219)))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (not (= $generated@@218 $generated@@26)) (not true))) (=> (or (not (= $generated@@218 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 $generated@@220) (< $generated@@220 ($generated@@24 $generated@@218)))) (=> (= (ControlFlow 0 7) 6) $generated@@235))))))))))
(let (($generated@@239  (=> (< $generated@@220 ($generated@@75 0)) (and (=> (= (ControlFlow 0 14) 7) $generated@@238) (=> (= (ControlFlow 0 14) 12) $generated@@237)))))
(let (($generated@@240  (=> (<= ($generated@@75 0) $generated@@220) (and (=> (= (ControlFlow 0 13) 7) $generated@@238) (=> (= (ControlFlow 0 13) 12) $generated@@237)))))
(let (($generated@@241  (and (=> (= (ControlFlow 0 15) 13) $generated@@240) (=> (= (ControlFlow 0 15) 14) $generated@@239))))
(let (($generated@@242 true))
(let (($generated@@243  (=> ($generated@@96 $generated@@214 $generated@@213) (and (=> (= (ControlFlow 0 16) 15) $generated@@241) (=> (= (ControlFlow 0 16) 4) $generated@@242)))))
(let (($generated@@244  (=> (and (and (and (not ($generated@@96 $generated@@214 $generated@@213)) (not ($generated@@96 $generated@@214 $generated@@213))) (not ($generated@@11 ($generated@@77 $generated@@7 ($generated@@10 true))))) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@245 true))
(let (($generated@@246  (=> (= $generated@@221 ($generated@@156 $generated@@26 $generated@@217 $generated@@2 false)) (and (=> (= (ControlFlow 0 28) (- 0 32)) (or (not (= $generated@@219 $generated@@26)) (not true))) (=> (or (not (= $generated@@219 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 28) (- 0 31)) (and (<= 0 $generated@@215) (<= $generated@@215 ($generated@@24 $generated@@219)))) (=> (and (<= 0 $generated@@215) (<= $generated@@215 ($generated@@24 $generated@@219))) (=> (= $generated@@214 ($generated@@67 ($generated@@68 $generated@@217 $generated@@219) $generated@@215)) (and (=> (= (ControlFlow 0 28) (- 0 30)) (or (not (= $generated@@218 $generated@@26)) (not true))) (=> (or (not (= $generated@@218 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 28) (- 0 29)) (and (<= 0 $generated@@215) (<= $generated@@215 ($generated@@24 $generated@@218)))) (=> (and (<= 0 $generated@@215) (<= $generated@@215 ($generated@@24 $generated@@218))) (=> (= $generated@@213 ($generated@@67 ($generated@@68 $generated@@217 $generated@@218) $generated@@215)) (and (and (and (=> (= (ControlFlow 0 28) 27) $generated@@234) (=> (= (ControlFlow 0 28) 16) $generated@@243)) (=> (= (ControlFlow 0 28) 1) $generated@@245)) (=> (= (ControlFlow 0 28) 3) $generated@@244)))))))))))))))
(let (($generated@@247  (=> (and (and ($generated@@90 $generated@@217) ($generated@@222 $generated@@217)) (and ($generated@@28 $generated@@32 $generated@@219 ($generated@@33 $generated)) ($generated@@31 $generated@@32 $generated@@219 ($generated@@33 $generated) $generated@@217))) (=> (and (and (and (and ($generated@@28 $generated@@32 $generated@@218 ($generated@@33 $generated)) ($generated@@31 $generated@@32 $generated@@218 ($generated@@33 $generated) $generated@@217)) (<= ($generated@@75 0) $generated@@215)) (and (and ($generated@@28 $generated@@80 $generated@@223 ($generated@@81 $generated)) ($generated@@31 $generated@@80 $generated@@223 ($generated@@81 $generated) $generated@@217)) true)) (and (and (and ($generated@@28 $generated@@80 $generated@@224 ($generated@@81 $generated)) ($generated@@31 $generated@@80 $generated@@224 ($generated@@81 $generated) $generated@@217)) true) (and (and (= 0 $generated@@225) (<= $generated@@215 ($generated@@24 $generated@@219))) (and (<= $generated@@215 ($generated@@24 $generated@@218)) (= (ControlFlow 0 33) 28))))) $generated@@246))))
$generated@@247)))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
