(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U T@U) Bool)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (Int) T@U)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T T@U T@U) Bool)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@58 (Int) Int)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@127 (T@U) Bool)
(declare-fun $generated@@146 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@150 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@204 (Int Int) Int)
(declare-fun $generated@@210 (T@U) Bool)
(declare-fun $generated@@213 (T@U) T@U)
(declare-fun $generated@@214 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@28 $generated@@29) (=> ($generated@@23 $generated@@26 $generated@@28 $generated@@27) ($generated@@23 $generated@@26 $generated@@29 $generated@@27)))
 :pattern ( ($generated@@23 $generated@@26 $generated@@28 $generated@@27) ($generated@@24 $generated@@28 $generated@@30) ($generated@@24 $generated@@29 $generated@@30))
))))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@32 $generated@@33)) ($generated@@25 $generated@@31 $generated@@33))
 :pattern ( ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@32 $generated@@33))
 :pattern ( ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@31 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! ($generated@@34 $generated@@8 $generated@@36 $generated@@35 $generated@@37)
 :pattern ( ($generated@@34 $generated@@8 $generated@@36 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (and ($generated@@39 $generated@@41) ($generated@@39 $generated@@42)) (= ($generated@@38 $generated@@41 $generated@@42) (= ($generated@@40 $generated@@41) ($generated@@40 $generated@@42))))
 :pattern ( ($generated@@38 $generated@@41 $generated@@42) ($generated@@39 $generated@@41))
 :pattern ( ($generated@@38 $generated@@41 $generated@@42) ($generated@@39 $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 Int) ($generated@@48 Int) ) (!  (=> (and (and (<= 0 $generated@@47) (<= 0 $generated@@48)) (<= (+ $generated@@47 $generated@@48) ($generated@@45 $generated@@46))) (= ($generated@@43 ($generated@@43 $generated@@46 ($generated@@44 $generated@@47)) ($generated@@44 $generated@@48)) ($generated@@43 $generated@@46 ($generated@@44 (+ $generated@@47 $generated@@48)))))
 :pattern ( ($generated@@43 ($generated@@43 $generated@@46 ($generated@@44 $generated@@47)) ($generated@@44 $generated@@48)))
)))
(assert (= ($generated@@49 $generated@@50) $generated@@3))
(assert (= ($generated@@6 $generated@@52) 3))
(assert ($generated@@51 $generated@@52 $generated@@50 $generated@@53))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@38 $generated@@54 $generated@@55) (= $generated@@54 $generated@@55))
 :pattern ( ($generated@@38 $generated@@54 $generated@@55))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@57 $generated@@63 $generated@@64) (and (< 3 $generated@@22) ($generated@@51 $generated@@52 $generated@@64 $generated@@53))) (and (and (=> (< 0 ($generated@@45 $generated@@63)) (=> (not (and ($generated@@39 $generated@@64) (= ($generated@@40 $generated@@64) ($generated@@58 0)))) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@51 $generated@@52 $generated@@65 $generated@@53) (and (and (and ($generated@@60 $generated@@64) ($generated@@60 ($generated@@59 ($generated@@59 $generated@@65)))) (and ($generated@@61 $generated@@65) ($generated@@61 ($generated@@59 $generated@@65)))) (=> ($generated@@38 $generated@@64 ($generated@@59 ($generated@@59 $generated@@65))) ($generated@@57 ($generated@@43 $generated@@63 ($generated@@44 1)) $generated@@65))))
 :pattern ( ($generated@@23 $generated@@62 ($generated@@43 $generated@@63 ($generated@@44 1)) $generated@@65))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@65)))
)))) (=> (=> (< 0 ($generated@@45 $generated@@63)) (or (and ($generated@@39 $generated@@64) (= ($generated@@40 $generated@@64) ($generated@@58 0))) (exists (($generated@@66 T@U) ) (!  (and ($generated@@51 $generated@@52 $generated@@66 $generated@@53) (and ($generated@@38 $generated@@64 ($generated@@59 ($generated@@59 $generated@@66))) ($generated@@23 $generated@@62 ($generated@@43 $generated@@63 ($generated@@44 1)) $generated@@66)))
 :pattern ( ($generated@@23 $generated@@62 ($generated@@43 $generated@@63 ($generated@@44 1)) $generated@@66))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@66)))
)))) (=> (= ($generated@@58 0) ($generated@@45 $generated@@63)) (forall (($generated@@67 T@U) ) (!  (=> ($generated@@24 $generated@@67 $generated@@63) ($generated@@57 $generated@@67 $generated@@64))
 :pattern ( ($generated@@23 $generated@@62 $generated@@67 $generated@@64))
))))) (= ($generated@@23 ($generated@@56 $generated@@62) $generated@@63 $generated@@64)  (and (=> (< 0 ($generated@@45 $generated@@63)) (or (and ($generated@@39 $generated@@64) (= ($generated@@40 $generated@@64) ($generated@@58 0))) (exists (($generated@@68 T@U) ) (!  (and ($generated@@51 $generated@@52 $generated@@68 $generated@@53) (and ($generated@@38 $generated@@64 ($generated@@59 ($generated@@59 $generated@@68))) ($generated@@23 $generated@@62 ($generated@@43 $generated@@63 ($generated@@44 1)) $generated@@68)))
 :pattern ( ($generated@@23 $generated@@62 ($generated@@43 $generated@@63 ($generated@@44 1)) $generated@@68))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@68)))
)))) (=> (= ($generated@@58 0) ($generated@@45 $generated@@63)) (exists (($generated@@69 T@U) ) (!  (and ($generated@@24 $generated@@69 $generated@@63) ($generated@@23 $generated@@62 $generated@@69 $generated@@64))
 :pattern ( ($generated@@23 $generated@@62 $generated@@69 $generated@@64))
)))))))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@62) $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@70 Int) ) (! (= ($generated@@58 $generated@@70) $generated@@70)
 :pattern ( ($generated@@58 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@39 $generated@@74) (= ($generated@@49 $generated@@74) $generated@@2))
 :pattern ( ($generated@@39 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@75 $generated@@76) (= ($generated@@49 $generated@@76) $generated@@3))
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 ($generated@@77 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@80 $generated@@79))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and ($generated@@51 $generated@@52 $generated@@83 $generated@@53) (exists (($generated@@84 T@U) ) (! ($generated@@23 ($generated@@56 $generated@@82) $generated@@84 $generated@@83)
 :pattern ( ($generated@@23 ($generated@@56 $generated@@82) $generated@@84 $generated@@83))
))) ($generated@@81 ($generated@@56 $generated@@82) $generated@@83))
 :pattern ( ($generated@@81 ($generated@@56 $generated@@82) $generated@@83))
))))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and ($generated@@51 $generated@@52 $generated@@86 $generated@@53) (= $generated@@87 ($generated@@44 0))) (not ($generated@@23 $generated@@85 $generated@@87 $generated@@86)))
 :pattern ( ($generated@@23 $generated@@85 $generated@@87 $generated@@86))
))))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@75 $generated@@88) (= $generated@@88 $generated@@50))
 :pattern ( ($generated@@75 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@39 $generated@@90) (exists (($generated@@91 Int) ) (= $generated@@90 ($generated@@89 $generated@@91))))
 :pattern ( ($generated@@39 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@51 $generated@@8 $generated@@92 $generated@@35) (<= ($generated@@58 0) ($generated@@13 $generated@@92)))
 :pattern ( ($generated@@51 $generated@@8 $generated@@92 $generated@@35))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@23 ($generated@@56 $generated@@93) $generated@@94 $generated@@95) ($generated@@23 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@93) $generated@@94 $generated@@95))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (and ($generated@@51 $generated@@52 $generated@@97 $generated@@53) ($generated@@81 ($generated@@56 $generated@@96) $generated@@97)) (exists (($generated@@98 T@U) ) (! ($generated@@23 ($generated@@56 $generated@@96) $generated@@98 $generated@@97)
 :pattern ( ($generated@@23 ($generated@@56 $generated@@96) $generated@@98 $generated@@97))
)))
 :pattern ( ($generated@@81 ($generated@@56 $generated@@96) $generated@@97))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@99 T@U) ) (!  (=> (or ($generated@@61 $generated@@99) (and (< 1 $generated@@22) ($generated@@51 $generated@@52 $generated@@99 $generated@@53))) (= ($generated@@59 $generated@@99) (ite ($generated@@39 $generated@@99) (let (($generated@@100 ($generated@@40 $generated@@99)))
($generated@@89 (+ $generated@@100 1))) $generated@@50)))
 :pattern ( ($generated@@59 $generated@@99))
))))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@101 $generated@@103) (<= ($generated@@45 $generated@@103) ($generated@@45 $generated@@102))) (and (= ($generated@@101 ($generated@@43 $generated@@102 $generated@@103)) ($generated@@101 $generated@@102)) (= ($generated@@45 ($generated@@43 $generated@@102 $generated@@103)) (- ($generated@@45 $generated@@102) ($generated@@45 $generated@@103)))))
 :pattern ( ($generated@@43 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 Int) ) (!  (=> (<= 0 $generated@@104) (and ($generated@@101 ($generated@@44 $generated@@104)) (= ($generated@@45 ($generated@@44 $generated@@104)) $generated@@104)))
 :pattern ( ($generated@@44 $generated@@104))
)))
(assert (forall (($generated@@105 Int) ) (! (= ($generated@@51 $generated@@52 ($generated@@89 $generated@@105) $generated@@53) ($generated@@51 $generated@@8 ($generated@@12 $generated@@105) $generated@@35))
 :pattern ( ($generated@@51 $generated@@52 ($generated@@89 $generated@@105) $generated@@53))
)))
(assert (= ($generated@@6 $generated@@106) 4))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (or ($generated@@57 ($generated@@71 $generated@@106 $generated@@108) $generated@@109) (and (< 3 $generated@@22) ($generated@@51 $generated@@52 $generated@@109 $generated@@53))) (and (and (=> (< 0 ($generated@@45 $generated@@108)) (=> (not (and ($generated@@39 $generated@@109) (= ($generated@@40 $generated@@109) ($generated@@58 0)))) (forall (($generated@@110 T@U) ) (!  (=> ($generated@@51 $generated@@52 $generated@@110 $generated@@53) (and (and (and ($generated@@60 $generated@@109) ($generated@@60 ($generated@@59 ($generated@@59 $generated@@110)))) (and ($generated@@61 $generated@@110) ($generated@@61 ($generated@@59 $generated@@110)))) (=> ($generated@@38 $generated@@109 ($generated@@59 ($generated@@59 $generated@@110))) ($generated@@57 ($generated@@43 $generated@@108 ($generated@@44 1)) $generated@@110))))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@107) ($generated@@43 $generated@@108 ($generated@@44 1)) $generated@@110))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@110)))
)))) (=> (=> (< 0 ($generated@@45 $generated@@108)) (or (and ($generated@@39 $generated@@109) (= ($generated@@40 $generated@@109) ($generated@@58 0))) (exists (($generated@@111 T@U) ) (!  (and ($generated@@51 $generated@@52 $generated@@111 $generated@@53) (and ($generated@@38 $generated@@109 ($generated@@59 ($generated@@59 $generated@@111))) ($generated@@23 ($generated@@56 $generated@@107) ($generated@@43 $generated@@108 ($generated@@44 1)) $generated@@111)))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@107) ($generated@@43 $generated@@108 ($generated@@44 1)) $generated@@111))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@111)))
)))) (=> (= ($generated@@58 0) ($generated@@45 $generated@@108)) (forall (($generated@@112 T@U) ) (!  (=> ($generated@@24 $generated@@112 $generated@@108) ($generated@@57 $generated@@112 $generated@@109))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@107) $generated@@112 $generated@@109))
))))) (= ($generated@@23 ($generated@@56 $generated@@107) ($generated@@71 $generated@@106 $generated@@108) $generated@@109)  (and (=> (< 0 ($generated@@45 $generated@@108)) (or (and ($generated@@39 $generated@@109) (= ($generated@@40 $generated@@109) ($generated@@58 0))) (exists (($generated@@113 T@U) ) (!  (and ($generated@@51 $generated@@52 $generated@@113 $generated@@53) (and ($generated@@38 $generated@@109 ($generated@@59 ($generated@@59 $generated@@113))) ($generated@@23 ($generated@@56 $generated@@107) ($generated@@43 $generated@@108 ($generated@@44 1)) $generated@@113)))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@107) ($generated@@43 $generated@@108 ($generated@@44 1)) $generated@@113))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@113)))
)))) (=> (= ($generated@@58 0) ($generated@@45 $generated@@108)) (exists (($generated@@114 T@U) ) (!  (and ($generated@@24 $generated@@114 $generated@@108) ($generated@@23 ($generated@@56 $generated@@107) $generated@@114 $generated@@109))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@107) $generated@@114 $generated@@109))
)))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@56 $generated@@107) ($generated@@71 $generated@@106 $generated@@108) $generated@@109))
))))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@60 $generated@@115) (or ($generated@@39 $generated@@115) ($generated@@75 $generated@@115)))
 :pattern ( ($generated@@60 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (or ($generated@@25 $generated@@116 $generated@@117) (= $generated@@116 $generated@@117)) ($generated@@25 $generated@@117 $generated@@116))
 :pattern ( ($generated@@25 $generated@@116 $generated@@117) ($generated@@25 $generated@@117 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@24 $generated@@118 $generated@@119) ($generated@@25 $generated@@118 $generated@@119))
 :pattern ( ($generated@@24 $generated@@118 $generated@@119))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@120 T@U) ) (!  (=> (or ($generated@@61 $generated@@120) (and (< 1 $generated@@22) ($generated@@51 $generated@@52 $generated@@120 $generated@@53))) ($generated@@51 $generated@@52 ($generated@@59 $generated@@120) $generated@@53))
 :pattern ( ($generated@@59 $generated@@120))
))))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@51 $generated@@52 $generated@@121 $generated@@53) (or ($generated@@39 $generated@@121) ($generated@@75 $generated@@121)))
 :pattern ( ($generated@@75 $generated@@121) ($generated@@51 $generated@@52 $generated@@121 $generated@@53))
 :pattern ( ($generated@@39 $generated@@121) ($generated@@51 $generated@@52 $generated@@121 $generated@@53))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@81 ($generated@@56 $generated@@122) $generated@@123) ($generated@@81 $generated@@122 $generated@@123))
 :pattern ( ($generated@@81 ($generated@@56 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! (<= 0 ($generated@@45 $generated@@124))
 :pattern ( ($generated@@45 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@75 $generated@@125) ($generated@@75 $generated@@126)) ($generated@@38 $generated@@125 $generated@@126))
 :pattern ( ($generated@@38 $generated@@125 $generated@@126) ($generated@@75 $generated@@125))
 :pattern ( ($generated@@38 $generated@@125 $generated@@126) ($generated@@75 $generated@@126))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (or ($generated@@127 $generated@@129) (and (< 2 $generated@@22) ($generated@@51 $generated@@52 $generated@@129 $generated@@53))) (and (=> (not (and ($generated@@39 $generated@@129) (= ($generated@@40 $generated@@129) ($generated@@58 0)))) (forall (($generated@@130 T@U) ) (!  (=> ($generated@@51 $generated@@52 $generated@@130 $generated@@53) (and (and (and ($generated@@60 $generated@@129) ($generated@@60 ($generated@@59 ($generated@@59 $generated@@130)))) (and ($generated@@61 $generated@@130) ($generated@@61 ($generated@@59 $generated@@130)))) (=> ($generated@@38 $generated@@129 ($generated@@59 ($generated@@59 $generated@@130))) ($generated@@127 $generated@@130))))
 :pattern ( ($generated@@81 $generated@@128 $generated@@130))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@130)))
))) (= ($generated@@81 ($generated@@56 $generated@@128) $generated@@129)  (or (and ($generated@@39 $generated@@129) (= ($generated@@40 $generated@@129) ($generated@@58 0))) (exists (($generated@@131 T@U) ) (!  (and ($generated@@51 $generated@@52 $generated@@131 $generated@@53) (and ($generated@@38 $generated@@129 ($generated@@59 ($generated@@59 $generated@@131))) ($generated@@81 $generated@@128 $generated@@131)))
 :pattern ( ($generated@@81 $generated@@128 $generated@@131))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@131)))
))))))
 :pattern ( ($generated@@81 ($generated@@56 $generated@@128) $generated@@129))
))))
(assert (forall (($generated@@132 Int) ) (! (= ($generated@@49 ($generated@@89 $generated@@132)) $generated@@2)
 :pattern ( ($generated@@89 $generated@@132))
)))
(assert (forall (($generated@@133 Int) ) (! (= ($generated@@40 ($generated@@89 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@89 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@77 $generated@@135 ($generated@@78 $generated@@135 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@78 $generated@@135 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@136 $generated@@137) (or (not (= $generated@@136 $generated@@137)) (not true))) (=> (and ($generated@@101 $generated@@136) (not ($generated@@101 $generated@@137))) ($generated@@25 $generated@@136 $generated@@137))) (=> (and ($generated@@101 $generated@@136) ($generated@@101 $generated@@137)) (= ($generated@@25 $generated@@136 $generated@@137) (< ($generated@@45 $generated@@136) ($generated@@45 $generated@@137))))) (=> (and ($generated@@25 $generated@@136 $generated@@137) ($generated@@101 $generated@@137)) ($generated@@101 $generated@@136)))
 :pattern ( ($generated@@25 $generated@@136 $generated@@137))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (or ($generated@@57 ($generated@@71 $generated@@106 $generated@@139) ($generated@@71 $generated@@52 $generated@@140)) (and (< 3 $generated@@22) ($generated@@51 $generated@@52 $generated@@140 $generated@@53))) (and (and (=> (< 0 ($generated@@45 $generated@@139)) (=> (not (and ($generated@@39 ($generated@@71 $generated@@52 $generated@@140)) (= ($generated@@58 ($generated@@40 ($generated@@71 $generated@@52 $generated@@140))) ($generated@@58 0)))) (forall (($generated@@141 T@U) ) (!  (=> ($generated@@51 $generated@@52 $generated@@141 $generated@@53) (and (and (and ($generated@@60 ($generated@@71 $generated@@52 $generated@@140)) ($generated@@60 ($generated@@59 ($generated@@59 $generated@@141)))) (and ($generated@@61 $generated@@141) ($generated@@61 ($generated@@59 $generated@@141)))) (=> ($generated@@38 $generated@@140 ($generated@@59 ($generated@@59 $generated@@141))) ($generated@@57 ($generated@@43 $generated@@139 ($generated@@44 1)) $generated@@141))))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@138) ($generated@@43 $generated@@139 ($generated@@44 1)) $generated@@141))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@141)))
)))) (=> (=> (< 0 ($generated@@45 $generated@@139)) (or (and ($generated@@39 ($generated@@71 $generated@@52 $generated@@140)) (= ($generated@@58 ($generated@@40 ($generated@@71 $generated@@52 $generated@@140))) ($generated@@58 0))) (exists (($generated@@142 T@U) ) (!  (and ($generated@@51 $generated@@52 $generated@@142 $generated@@53) (and ($generated@@38 $generated@@140 ($generated@@59 ($generated@@59 $generated@@142))) ($generated@@23 ($generated@@56 $generated@@138) ($generated@@43 $generated@@139 ($generated@@44 1)) $generated@@142)))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@138) ($generated@@43 $generated@@139 ($generated@@44 1)) $generated@@142))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@142)))
)))) (=> (= ($generated@@58 0) ($generated@@45 $generated@@139)) (forall (($generated@@143 T@U) ) (!  (=> ($generated@@24 $generated@@143 $generated@@139) ($generated@@57 $generated@@143 $generated@@140))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@138) $generated@@143 $generated@@140))
))))) (= ($generated@@23 ($generated@@56 $generated@@138) ($generated@@71 $generated@@106 $generated@@139) ($generated@@71 $generated@@52 $generated@@140))  (and (=> (< 0 ($generated@@45 $generated@@139)) (or (and ($generated@@39 ($generated@@71 $generated@@52 $generated@@140)) (= ($generated@@58 ($generated@@40 ($generated@@71 $generated@@52 $generated@@140))) ($generated@@58 0))) (exists (($generated@@144 T@U) ) (!  (and ($generated@@51 $generated@@52 $generated@@144 $generated@@53) (and ($generated@@38 $generated@@140 ($generated@@59 ($generated@@59 $generated@@144))) ($generated@@23 ($generated@@56 $generated@@138) ($generated@@43 $generated@@139 ($generated@@44 1)) $generated@@144)))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@138) ($generated@@43 $generated@@139 ($generated@@44 1)) $generated@@144))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@144)))
)))) (=> (= ($generated@@58 0) ($generated@@45 $generated@@139)) (exists (($generated@@145 T@U) ) (!  (and ($generated@@24 $generated@@145 $generated@@139) ($generated@@23 ($generated@@56 $generated@@138) $generated@@145 $generated@@140))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@138) $generated@@145 $generated@@140))
)))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@56 $generated@@138) ($generated@@71 $generated@@106 $generated@@139) ($generated@@71 $generated@@52 $generated@@140)))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@146 $generated@@156 $generated@@157 $generated@@158 ($generated@@152 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@161 $generated@@162) $generated@@159)
 :weight 0
)) (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@146 $generated@@163 $generated@@164 $generated@@165 ($generated@@152 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@146 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@146 $generated@@172 $generated@@173 $generated@@174 ($generated@@152 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@146 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))) (= ($generated@@6 $generated@@147) 5)) (= ($generated@@6 $generated@@148) 6)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@150 $generated@@181 $generated@@182 ($generated@@153 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@183) $generated@@185) $generated@@183)
 :weight 0
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@190 $generated@@191) (= ($generated@@150 $generated@@186 $generated@@187 ($generated@@153 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@188) $generated@@191) ($generated@@150 $generated@@186 $generated@@187 $generated@@189 $generated@@191)))
 :weight 0
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@6 ($generated@@151 $generated@@192 $generated@@193)) 7))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@154 ($generated@@151 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@151 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@155 ($generated@@151 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@151 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@11 ($generated@@146 $generated@@147 $generated@@148 $generated@@7 ($generated@@149 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (or (not (= $generated@@202 $generated@@198)) (not true)) ($generated@@11 ($generated@@77 $generated@@7 ($generated@@150 $generated@@148 $generated@@106 ($generated@@150 $generated@@147 ($generated@@151 $generated@@148 $generated@@106) $generated@@199 $generated@@202) $generated@@200)))) $generated@@201))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148 $generated@@7 ($generated@@149 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 Int) ($generated@@206 Int) ) (! (= ($generated@@204 $generated@@205 $generated@@206) (mod $generated@@205 $generated@@206))
 :pattern ( ($generated@@204 $generated@@205 $generated@@206))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@207 T@U) ) (!  (=> (or ($generated@@61 ($generated@@71 $generated@@52 $generated@@207)) (and (< 1 $generated@@22) ($generated@@51 $generated@@52 $generated@@207 $generated@@53))) (= ($generated@@59 ($generated@@71 $generated@@52 $generated@@207)) (ite ($generated@@39 ($generated@@71 $generated@@52 $generated@@207)) (let (($generated@@208 ($generated@@58 ($generated@@40 ($generated@@71 $generated@@52 $generated@@207)))))
($generated@@71 $generated@@52 ($generated@@89 ($generated@@58 (+ $generated@@208 1))))) $generated@@50)))
 :weight 3
 :pattern ( ($generated@@59 ($generated@@71 $generated@@52 $generated@@207)))
))))
(assert (forall (($generated@@209 T@U) ) (!  (=> ($generated@@101 $generated@@209) (= $generated@@209 ($generated@@44 ($generated@@45 $generated@@209))))
 :pattern ( ($generated@@45 $generated@@209))
 :pattern ( ($generated@@101 $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and ($generated@@210 $generated@@212) ($generated@@51 $generated@@52 $generated@@211 $generated@@53)) ($generated@@34 $generated@@52 $generated@@211 $generated@@53 $generated@@212))
 :pattern ( ($generated@@34 $generated@@52 $generated@@211 $generated@@53 $generated@@212))
)))
(assert (= ($generated@@213 $generated@@35) $generated@@0))
(assert (= ($generated@@214 $generated@@35) $generated@@4))
(assert (= ($generated@@213 $generated@@53) $generated@@1))
(assert (= ($generated@@214 $generated@@53) $generated@@5))
(assert (= $generated@@50 ($generated@@71 $generated@@52 $generated@@50)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and ($generated@@101 $generated@@216) (<= ($generated@@45 $generated@@216) ($generated@@45 $generated@@215))) (or (and (= $generated@@216 ($generated@@44 0)) (= ($generated@@43 $generated@@215 $generated@@216) $generated@@215)) (and (or (not (= $generated@@216 ($generated@@44 0))) (not true)) ($generated@@25 ($generated@@43 $generated@@215 $generated@@216) $generated@@215))))
 :pattern ( ($generated@@43 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and ($generated@@210 $generated@@218) (and ($generated@@39 $generated@@217) ($generated@@34 $generated@@52 $generated@@217 $generated@@53 $generated@@218))) ($generated@@34 $generated@@8 ($generated@@12 ($generated@@40 $generated@@217)) $generated@@35 $generated@@218))
 :pattern ( ($generated@@34 $generated@@8 ($generated@@12 ($generated@@40 $generated@@217)) $generated@@35 $generated@@218))
)))
(assert (forall (($generated@@219 Int) ) (! (= ($generated@@78 $generated@@8 ($generated@@12 ($generated@@58 $generated@@219))) ($generated@@71 $generated@@106 ($generated@@78 $generated@@8 ($generated@@12 $generated@@219))))
 :pattern ( ($generated@@78 $generated@@8 ($generated@@12 ($generated@@58 $generated@@219))))
)))
(assert (forall (($generated@@220 Int) ) (! (= ($generated@@89 ($generated@@58 $generated@@220)) ($generated@@71 $generated@@52 ($generated@@89 $generated@@220)))
 :pattern ( ($generated@@89 ($generated@@58 $generated@@220)))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@T) ) (! (= ($generated@@78 $generated@@222 ($generated@@71 $generated@@222 $generated@@221)) ($generated@@71 $generated@@106 ($generated@@78 $generated@@222 $generated@@221)))
 :pattern ( ($generated@@78 $generated@@222 ($generated@@71 $generated@@222 $generated@@221)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@230  (=> (and (and (and (= $generated@@223 ($generated@@149 $generated@@224 $generated@@225 $generated false)) ($generated@@34 $generated@@52 $generated@@226 $generated@@53 $generated@@225)) (and ($generated@@127 $generated@@226) ($generated@@81 ($generated@@56 $generated@@227) $generated@@226))) (and (and ($generated@@210 $generated@@228) ($generated@@229 $generated@@228)) (and (= $generated@@225 $generated@@228) ($generated@@39 $generated@@226)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@39 $generated@@226)) (=> ($generated@@39 $generated@@226) (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= ($generated@@58 2) 0)) (not true))))))))
(let (($generated@@231  (=> (and ($generated@@210 $generated@@225) ($generated@@229 $generated@@225)) (=> (and (and (and ($generated@@51 $generated@@52 $generated@@226 $generated@@53) ($generated@@34 $generated@@52 $generated@@226 $generated@@53 $generated@@225)) ($generated@@60 $generated@@226)) (and (= 3 $generated@@22) (= (ControlFlow 0 4) 2))) $generated@@230))))
$generated@@231)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
