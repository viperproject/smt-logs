(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (Int) Int)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@49 (Int) T@U)
(declare-fun $generated@@52 (Int) T@U)
(declare-fun $generated@@55 () Int)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 (T@U) Int)
(declare-fun $generated@@87 (T@U) Int)
(declare-fun $generated@@91 (T@U) Int)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@104 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@T T@T) T@T)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@159 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@25) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@26 $generated@@28 $generated@@29) $generated@@27)  (and ($generated@@24 $generated@@25 $generated@@28 $generated@@27) ($generated@@24 $generated@@25 $generated@@29 $generated@@27)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@26 $generated@@28 $generated@@29) $generated@@27))
)))
(assert (forall (($generated@@31 Int) ) (! (= ($generated@@30 $generated@@31) $generated@@31)
 :pattern ( ($generated@@30 $generated@@31))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@T) ) (! (= ($generated@@32 $generated@@34 $generated@@33) $generated@@33)
 :pattern ( ($generated@@32 $generated@@34 $generated@@33))
)))
(assert (forall (($generated@@37 T@U) ) (! (= ($generated@@35 $generated@@37) (= ($generated@@36 $generated@@37) $generated@@3))
 :pattern ( ($generated@@35 $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@38 $generated@@39) (= ($generated@@36 $generated@@39) $generated@@4))
 :pattern ( ($generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@40 $generated@@41) (= ($generated@@36 $generated@@41) $generated@@5))
 :pattern ( ($generated@@40 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 ($generated@@42 $generated@@45 $generated@@44)) $generated@@44)
 :pattern ( ($generated@@42 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (!  (=> ($generated@@35 $generated@@46) (exists (($generated@@47 T@U) ($generated@@48 T@U) ) (= $generated@@46 ($generated@@26 $generated@@47 $generated@@48))))
 :pattern ( ($generated@@35 $generated@@46))
)))
(assert (forall (($generated@@50 T@U) ) (!  (=> ($generated@@38 $generated@@50) (exists (($generated@@51 Int) ) (= $generated@@50 ($generated@@49 $generated@@51))))
 :pattern ( ($generated@@38 $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ) (!  (=> ($generated@@40 $generated@@53) (exists (($generated@@54 Int) ) (= $generated@@53 ($generated@@52 $generated@@54))))
 :pattern ( ($generated@@40 $generated@@53))
)))
(assert  (=> (<= 1 $generated@@55) (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (or ($generated@@58 $generated@@63) (and (< 1 $generated@@55) ($generated@@24 $generated@@25 $generated@@63 $generated@@27))) (and (=> ($generated@@35 $generated@@63) (let (($generated@@64 ($generated@@59 $generated@@63)))
 (=> ($generated@@35 $generated@@64) ($generated@@58 $generated@@64)))) (= ($generated@@56 ($generated@@57 $generated@@62) $generated@@63) (ite ($generated@@35 $generated@@63) (let (($generated@@65 ($generated@@60 $generated@@63)))
(let (($generated@@66 ($generated@@59 $generated@@63)))
(ite ($generated@@35 $generated@@66) (let (($generated@@67 ($generated@@56 $generated@@62 $generated@@66)))
(ite  (and ($generated@@38 $generated@@67) (= ($generated@@61 $generated@@67) ($generated@@30 0))) $generated@@65 ($generated@@26 $generated@@67 $generated@@65))) (ite ($generated@@38 $generated@@66) (let (($generated@@68 ($generated@@61 $generated@@66)))
(ite (= $generated@@68 ($generated@@30 0)) $generated@@65 $generated@@63)) $generated@@63)))) (ite ($generated@@38 $generated@@63) $generated@@63 $generated@@63)))))
 :pattern ( ($generated@@56 ($generated@@57 $generated@@62) $generated@@63))
))))
(assert  (=> (<= 1 $generated@@55) (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (or ($generated@@58 $generated@@70) (and (< 1 $generated@@55) ($generated@@24 $generated@@25 $generated@@70 $generated@@27))) ($generated@@24 $generated@@25 ($generated@@56 $generated@@69 $generated@@70) $generated@@27))
 :pattern ( ($generated@@56 $generated@@69 $generated@@70))
))))
(assert  (=> (<= 1 $generated@@55) (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or ($generated@@58 ($generated@@32 $generated@@25 $generated@@72)) (and (< 1 $generated@@55) ($generated@@24 $generated@@25 $generated@@72 $generated@@27))) (and (=> ($generated@@12 ($generated@@32 $generated@@8 ($generated@@11 ($generated@@35 ($generated@@32 $generated@@25 $generated@@72))))) (let (($generated@@73 ($generated@@32 $generated@@25 ($generated@@59 ($generated@@32 $generated@@25 $generated@@72)))))
 (=> ($generated@@35 $generated@@73) ($generated@@58 $generated@@73)))) (= ($generated@@56 ($generated@@57 $generated@@71) ($generated@@32 $generated@@25 $generated@@72)) (ite ($generated@@35 ($generated@@32 $generated@@25 $generated@@72)) (let (($generated@@74 ($generated@@32 $generated@@25 ($generated@@60 ($generated@@32 $generated@@25 $generated@@72)))))
(let (($generated@@75 ($generated@@32 $generated@@25 ($generated@@59 ($generated@@32 $generated@@25 $generated@@72)))))
(ite ($generated@@35 $generated@@75) (let (($generated@@76 ($generated@@32 $generated@@25 ($generated@@56 ($generated@@57 $generated@@71) $generated@@75))))
(ite  (and ($generated@@38 $generated@@76) (= ($generated@@30 ($generated@@61 $generated@@76)) ($generated@@30 0))) $generated@@74 ($generated@@26 $generated@@76 $generated@@74))) (ite ($generated@@38 $generated@@75) (let (($generated@@77 ($generated@@30 ($generated@@61 $generated@@75))))
(ite (= $generated@@77 ($generated@@30 0)) $generated@@74 $generated@@72)) ($generated@@32 $generated@@25 $generated@@72))))) (ite ($generated@@38 ($generated@@32 $generated@@25 $generated@@72)) ($generated@@32 $generated@@25 $generated@@72) ($generated@@32 $generated@@25 $generated@@72))))))
 :weight 3
 :pattern ( ($generated@@56 ($generated@@57 $generated@@71) ($generated@@32 $generated@@25 $generated@@72)))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@36 ($generated@@26 $generated@@78 $generated@@79)) $generated@@3)
 :pattern ( ($generated@@26 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@59 ($generated@@26 $generated@@80 $generated@@81)) $generated@@80)
 :pattern ( ($generated@@26 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@60 ($generated@@26 $generated@@82 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@26 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 Int) ) (! (= ($generated@@36 ($generated@@49 $generated@@84)) $generated@@4)
 :pattern ( ($generated@@49 $generated@@84))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@61 ($generated@@49 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@49 $generated@@85))
)))
(assert (forall (($generated@@86 Int) ) (! (= ($generated@@36 ($generated@@52 $generated@@86)) $generated@@5)
 :pattern ( ($generated@@52 $generated@@86))
)))
(assert (forall (($generated@@88 Int) ) (! (= ($generated@@87 ($generated@@52 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@52 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@42 $generated@@90 ($generated@@43 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@43 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (< ($generated@@91 $generated@@92) ($generated@@91 ($generated@@26 $generated@@92 $generated@@93)))
 :pattern ( ($generated@@26 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (< ($generated@@91 $generated@@95) ($generated@@91 ($generated@@26 $generated@@94 $generated@@95)))
 :pattern ( ($generated@@26 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@56 ($generated@@57 $generated@@96) $generated@@97) ($generated@@56 $generated@@96 $generated@@97))
 :pattern ( ($generated@@56 ($generated@@57 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@98 Int) ) (! (= ($generated@@24 $generated@@25 ($generated@@49 $generated@@98) $generated@@27) ($generated@@24 $generated@@9 ($generated@@13 $generated@@98) $generated))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@49 $generated@@98) $generated@@27))
)))
(assert (forall (($generated@@99 Int) ) (! (= ($generated@@24 $generated@@25 ($generated@@52 $generated@@99) $generated@@27) ($generated@@24 $generated@@9 ($generated@@13 $generated@@99) $generated))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@52 $generated@@99) $generated@@27))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@100 $generated@@111 $generated@@112 $generated@@113 ($generated@@107 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@100 $generated@@118 $generated@@119 $generated@@120 ($generated@@107 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@100 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@100 $generated@@127 $generated@@128 $generated@@129 ($generated@@107 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))) (= ($generated@@7 $generated@@101) 4)) (= ($generated@@7 $generated@@102) 5)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@104 $generated@@136 $generated@@137 ($generated@@108 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@138) $generated@@140) $generated@@138)
 :weight 0
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@145 $generated@@146) (= ($generated@@104 $generated@@141 $generated@@142 ($generated@@108 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@104 $generated@@141 $generated@@142 $generated@@144 $generated@@146)))
 :weight 0
))) (= ($generated@@7 $generated@@105) 6)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (= ($generated@@7 ($generated@@106 $generated@@147 $generated@@148)) 7))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@109 ($generated@@106 $generated@@149 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@106 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@110 ($generated@@106 $generated@@151 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@106 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Bool) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@12 ($generated@@100 $generated@@101 $generated@@102 $generated@@8 ($generated@@103 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))  (=> (and (or (not (= $generated@@157 $generated@@153)) (not true)) ($generated@@12 ($generated@@42 $generated@@8 ($generated@@104 $generated@@102 $generated@@105 ($generated@@104 $generated@@101 ($generated@@106 $generated@@102 $generated@@105) $generated@@154 $generated@@157) $generated@@155)))) $generated@@156))
 :pattern ( ($generated@@100 $generated@@101 $generated@@102 $generated@@8 ($generated@@103 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and ($generated@@160 $generated@@162) (and ($generated@@38 $generated@@161) ($generated@@159 $generated@@25 $generated@@161 $generated@@27 $generated@@162))) ($generated@@159 $generated@@9 ($generated@@13 ($generated@@61 $generated@@161)) $generated $generated@@162))
 :pattern ( ($generated@@159 $generated@@9 ($generated@@13 ($generated@@61 $generated@@161)) $generated $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and ($generated@@160 $generated@@164) (and ($generated@@40 $generated@@163) ($generated@@159 $generated@@25 $generated@@163 $generated@@27 $generated@@164))) ($generated@@159 $generated@@9 ($generated@@13 ($generated@@87 $generated@@163)) $generated $generated@@164))
 :pattern ( ($generated@@159 $generated@@9 ($generated@@13 ($generated@@87 $generated@@163)) $generated $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@165 $generated@@27) (or (or ($generated@@35 $generated@@165) ($generated@@38 $generated@@165)) ($generated@@40 $generated@@165)))
 :pattern ( ($generated@@40 $generated@@165) ($generated@@24 $generated@@25 $generated@@165 $generated@@27))
 :pattern ( ($generated@@38 $generated@@165) ($generated@@24 $generated@@25 $generated@@165 $generated@@27))
 :pattern ( ($generated@@35 $generated@@165) ($generated@@24 $generated@@25 $generated@@165 $generated@@27))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@160 $generated@@167) ($generated@@24 $generated@@25 $generated@@166 $generated@@27)) ($generated@@159 $generated@@25 $generated@@166 $generated@@27 $generated@@167))
 :pattern ( ($generated@@159 $generated@@25 $generated@@166 $generated@@27 $generated@@167))
)))
(assert (= ($generated@@23 $generated@@27) $generated@@2))
(assert (= ($generated@@168 $generated@@27) $generated@@6))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and ($generated@@160 $generated@@170) (and ($generated@@35 $generated@@169) ($generated@@159 $generated@@25 $generated@@169 $generated@@27 $generated@@170))) ($generated@@159 $generated@@25 ($generated@@59 $generated@@169) $generated@@27 $generated@@170))
 :pattern ( ($generated@@159 $generated@@25 ($generated@@59 $generated@@169) $generated@@27 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and ($generated@@160 $generated@@172) (and ($generated@@35 $generated@@171) ($generated@@159 $generated@@25 $generated@@171 $generated@@27 $generated@@172))) ($generated@@159 $generated@@25 ($generated@@60 $generated@@171) $generated@@27 $generated@@172))
 :pattern ( ($generated@@159 $generated@@25 ($generated@@60 $generated@@171) $generated@@27 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@26 ($generated@@32 $generated@@25 $generated@@173) ($generated@@32 $generated@@25 $generated@@174)) ($generated@@32 $generated@@25 ($generated@@26 $generated@@173 $generated@@174)))
 :pattern ( ($generated@@26 ($generated@@32 $generated@@25 $generated@@173) ($generated@@32 $generated@@25 $generated@@174)))
)))
(assert (forall (($generated@@175 Int) ) (! (= ($generated@@43 $generated@@9 ($generated@@13 ($generated@@30 $generated@@175))) ($generated@@32 $generated@@105 ($generated@@43 $generated@@9 ($generated@@13 $generated@@175))))
 :pattern ( ($generated@@43 $generated@@9 ($generated@@13 ($generated@@30 $generated@@175))))
)))
(assert (forall (($generated@@176 Int) ) (! (= ($generated@@49 ($generated@@30 $generated@@176)) ($generated@@32 $generated@@25 ($generated@@49 $generated@@176)))
 :pattern ( ($generated@@49 ($generated@@30 $generated@@176)))
)))
(assert (forall (($generated@@177 Int) ) (! (= ($generated@@52 ($generated@@30 $generated@@177)) ($generated@@32 $generated@@25 ($generated@@52 $generated@@177)))
 :pattern ( ($generated@@52 ($generated@@30 $generated@@177)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@T) ) (! (= ($generated@@43 $generated@@179 ($generated@@32 $generated@@179 $generated@@178)) ($generated@@32 $generated@@105 ($generated@@43 $generated@@179 $generated@@178)))
 :pattern ( ($generated@@43 $generated@@179 ($generated@@32 $generated@@179 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! ($generated@@159 $generated@@9 $generated@@181 $generated $generated@@180)
 :pattern ( ($generated@@159 $generated@@9 $generated@@181 $generated $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ) (! ($generated@@24 $generated@@9 $generated@@182 $generated)
 :pattern ( ($generated@@24 $generated@@9 $generated@@182 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@207 true))
(let (($generated@@208 true))
(let (($generated@@209  (=> (not ($generated@@38 $generated@@183)) (and (=> (= (ControlFlow 0 18) 14) $generated@@208) (=> (= (ControlFlow 0 18) 15) $generated@@207)))))
(let (($generated@@210  (=> ($generated@@38 $generated@@183) (and (=> (= (ControlFlow 0 16) (- 0 17)) ($generated@@38 $generated@@183)) (=> ($generated@@38 $generated@@183) (and (=> (= (ControlFlow 0 16) 14) $generated@@208) (=> (= (ControlFlow 0 16) 15) $generated@@207)))))))
(let (($generated@@211  (=> (and (= $generated@@184 ($generated@@26 $generated@@185 $generated@@186)) ($generated@@24 $generated@@25 $generated@@185 $generated@@27)) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@186 $generated@@27) (= $generated@@187 $generated@@186)) (and ($generated@@24 $generated@@25 $generated@@187 $generated@@27) (= $generated@@188 $generated@@187))) (and (and (= $generated@@189 $generated@@185) ($generated@@24 $generated@@25 $generated@@189 $generated@@27)) (and (= $generated@@190 $generated@@189) ($generated@@159 $generated@@25 $generated@@184 $generated@@27 $generated@@191)))) (and (=> (= (ControlFlow 0 19) (- 0 20)) (< ($generated@@91 $generated@@184) ($generated@@91 $generated@@192))) (=> (< ($generated@@91 $generated@@184) ($generated@@91 $generated@@192)) (=> ($generated@@58 $generated@@184) (=> (and (and (= $generated@@193 ($generated@@56 ($generated@@57 $generated@@194) $generated@@184)) ($generated@@58 $generated@@184)) (and ($generated@@24 $generated@@25 $generated@@193 $generated@@27) (= $generated@@183 $generated@@193))) (and (=> (= (ControlFlow 0 19) 16) $generated@@210) (=> (= (ControlFlow 0 19) 18) $generated@@209))))))))))
(let (($generated@@212 true))
(let (($generated@@213 true))
(let (($generated@@214  (=> (and (and (= $generated@@184 ($generated@@49 $generated@@195)) (= $generated@@196 $generated@@195)) (and ($generated@@24 $generated@@9 ($generated@@13 $generated@@196) $generated) (= $generated@@197 $generated@@196))) (and (=> (= (ControlFlow 0 12) 10) $generated@@213) (=> (= (ControlFlow 0 12) 11) $generated@@212)))))
(let (($generated@@215 true))
(let (($generated@@216 true))
(let (($generated@@217  (=> (or (not (= $generated@@184 ($generated@@49 $generated@@195))) (not true)) (and (=> (= (ControlFlow 0 9) 7) $generated@@216) (=> (= (ControlFlow 0 9) 8) $generated@@215)))))
(let (($generated@@218  (=> (or (not (= $generated@@184 ($generated@@26 $generated@@185 $generated@@186))) (not true)) (and (=> (= (ControlFlow 0 13) 12) $generated@@214) (=> (= (ControlFlow 0 13) 9) $generated@@217)))))
(let (($generated@@219  (=> (= $generated@@192 ($generated@@26 $generated@@198 $generated@@199)) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@198 $generated@@27) ($generated@@24 $generated@@25 $generated@@199 $generated@@27)) (and (= $generated@@200 $generated@@199) ($generated@@24 $generated@@25 $generated@@200 $generated@@27))) (and (and (= $generated@@201 $generated@@200) (= $generated@@202 $generated@@198)) (and ($generated@@24 $generated@@25 $generated@@202 $generated@@27) (= $generated@@184 $generated@@202)))) (and (=> (= (ControlFlow 0 21) 19) $generated@@211) (=> (= (ControlFlow 0 21) 13) $generated@@218))))))
(let (($generated@@220 true))
(let (($generated@@221 true))
(let (($generated@@222  (=> (or (not (= $generated@@192 ($generated@@49 $generated@@203))) (not true)) (and (=> (= (ControlFlow 0 5) 3) $generated@@221) (=> (= (ControlFlow 0 5) 4) $generated@@220)))))
(let (($generated@@223 true))
(let (($generated@@224  (=> (or (not (= $generated@@192 ($generated@@26 $generated@@198 $generated@@199))) (not true)) (and (=> (= (ControlFlow 0 6) 2) $generated@@223) (=> (= (ControlFlow 0 6) 5) $generated@@222)))))
(let (($generated@@225 true))
(let (($generated@@226  (=> (= $generated@@204 ($generated@@103 $generated@@205 $generated@@191 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 22) 1) $generated@@225) (=> (= (ControlFlow 0 22) 21) $generated@@219)) (=> (= (ControlFlow 0 22) 6) $generated@@224)))))
(let (($generated@@227  (=> (and (and (and ($generated@@160 $generated@@191) ($generated@@206 $generated@@191)) ($generated@@24 $generated@@25 $generated@@192 $generated@@27)) (and (= 1 $generated@@55) (= (ControlFlow 0 23) 22))) $generated@@226)))
$generated@@227))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
