(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@T T@T) T@T)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@99 (T@U Int) T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@159 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Int Int T@U) T@U)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ) (!  (not ($generated@@24 $generated@@25 $generated@@26))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26))
)))
(assert (= ($generated@@27 $generated@@25) 0))
(assert (= ($generated@@7 $generated@@29) 3))
(assert (forall (($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@33 $generated@@30)  (or (= $generated@@33 $generated@@31) (= ($generated@@32 $generated@@33) $generated@@30)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@33 $generated@@30))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@36 $generated@@35 $generated@@37) ($generated@@34 $generated@@29 $generated@@36 $generated@@30 $generated@@37))
 :pattern ( ($generated@@34 $generated@@29 $generated@@36 $generated@@35 $generated@@37))
 :pattern ( ($generated@@34 $generated@@29 $generated@@36 $generated@@30 $generated@@37))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@39 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@39 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@39 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@7 $generated@@40) 4)) (= ($generated@@7 $generated@@41) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@7 ($generated@@42 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@42 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@42 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@42 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@42 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@63 $generated@@30 $generated@@64)  (or (= $generated@@63 $generated@@31) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@64 $generated@@63) $generated@@3)))))
 :pattern ( ($generated@@34 $generated@@29 $generated@@63 $generated@@30 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> ($generated@@65 $generated@@66 $generated@@67) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@66 $generated@@68) $generated@@3))) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@67 $generated@@68) $generated@@3))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@67 $generated@@68) $generated@@3))
)))
 :pattern ( ($generated@@65 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 $generated@@70) $generated@@70)
 :pattern ( ($generated@@69 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@38 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@38 $generated@@74 $generated@@73))
)))
(assert (= ($generated@@7 $generated@@75) 7))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@28 $generated@@75 $generated@@79 ($generated@@76 $generated@@80)) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@77 $generated@@79 $generated@@81) ($generated@@78 $generated@@81 $generated@@80))
 :pattern ( ($generated@@77 $generated@@79 $generated@@81))
)))
 :pattern ( ($generated@@28 $generated@@75 $generated@@79 ($generated@@76 $generated@@80)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@82 ($generated@@72 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@34 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@82 ($generated@@72 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@65 $generated@@87 $generated@@88) (=> ($generated@@82 $generated@@89 $generated@@90 $generated@@87) ($generated@@82 $generated@@89 $generated@@90 $generated@@88)))
 :pattern ( ($generated@@65 $generated@@87 $generated@@88) ($generated@@82 $generated@@89 $generated@@90 $generated@@87))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (!  (=> ($generated@@65 $generated@@91 $generated@@92) (=> ($generated@@34 $generated@@95 $generated@@93 $generated@@94 $generated@@91) ($generated@@34 $generated@@95 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@65 $generated@@91 $generated@@92) ($generated@@34 $generated@@95 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@78 $generated@@96 $generated@@35) (and (= ($generated@@72 $generated@@29 ($generated@@38 $generated@@29 $generated@@96)) $generated@@96) ($generated@@28 $generated@@29 ($generated@@38 $generated@@29 $generated@@96) $generated@@35)))
 :pattern ( ($generated@@78 $generated@@96 $generated@@35))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@78 $generated@@97 $generated@@30) (and (= ($generated@@72 $generated@@29 ($generated@@38 $generated@@29 $generated@@97)) $generated@@97) ($generated@@28 $generated@@29 ($generated@@38 $generated@@29 $generated@@97) $generated@@30)))
 :pattern ( ($generated@@78 $generated@@97 $generated@@30))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@98 $generated@@35)  (and ($generated@@28 $generated@@29 $generated@@98 $generated@@30) (or (not (= $generated@@98 $generated@@31)) (not true))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@98 $generated@@35))
 :pattern ( ($generated@@28 $generated@@29 $generated@@98 $generated@@30))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@24 $generated@@100 $generated@@101) (exists (($generated@@102 Int) ) (!  (and (and (<= 0 $generated@@102) (< $generated@@102 ($generated@@27 $generated@@100))) (= ($generated@@99 $generated@@100 $generated@@102) $generated@@101))
 :pattern ( ($generated@@99 $generated@@100 $generated@@102))
)))
 :pattern ( ($generated@@24 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (or (not (= $generated@@103 $generated@@105)) (not true)) (=> (and ($generated@@65 $generated@@103 $generated@@104) ($generated@@65 $generated@@104 $generated@@105)) ($generated@@65 $generated@@103 $generated@@105)))
 :pattern ( ($generated@@65 $generated@@103 $generated@@104) ($generated@@65 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@78 $generated@@106 $generated) (and (= ($generated@@72 $generated@@8 ($generated@@38 $generated@@8 $generated@@106)) $generated@@106) ($generated@@28 $generated@@8 ($generated@@38 $generated@@8 $generated@@106) $generated)))
 :pattern ( ($generated@@78 $generated@@106 $generated))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@78 ($generated@@72 $generated@@109 $generated@@107) $generated@@108) ($generated@@28 $generated@@109 $generated@@107 $generated@@108))
 :pattern ( ($generated@@78 ($generated@@72 $generated@@109 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! (<= 0 ($generated@@27 $generated@@110))
 :pattern ( ($generated@@27 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@34 $generated@@75 $generated@@111 ($generated@@76 $generated@@112) $generated@@113) (forall (($generated@@114 T@U) ) (!  (=> ($generated@@77 $generated@@111 $generated@@114) ($generated@@82 $generated@@114 $generated@@112 $generated@@113))
 :pattern ( ($generated@@77 $generated@@111 $generated@@114))
)))
 :pattern ( ($generated@@34 $generated@@75 $generated@@111 ($generated@@76 $generated@@112) $generated@@113))
)))
(assert (= ($generated@@7 $generated@@115) 8))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@34 $generated@@115 $generated@@117 ($generated@@116 $generated@@118) $generated@@119) (forall (($generated@@120 Int) ) (!  (=> (and (<= 0 $generated@@120) (< $generated@@120 ($generated@@27 $generated@@117))) ($generated@@82 ($generated@@99 $generated@@117 $generated@@120) $generated@@118 $generated@@119))
 :pattern ( ($generated@@99 $generated@@117 $generated@@120))
)))
 :pattern ( ($generated@@34 $generated@@115 $generated@@117 ($generated@@116 $generated@@118) $generated@@119))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@121 ($generated@@76 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@76 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@23 ($generated@@76 $generated@@123)) $generated@@1)
 :pattern ( ($generated@@76 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@124 ($generated@@116 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@116 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@23 ($generated@@116 $generated@@126)) $generated@@2)
 :pattern ( ($generated@@116 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@38 $generated@@128 ($generated@@72 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@72 $generated@@128 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> ($generated@@78 $generated@@129 ($generated@@76 $generated@@130)) (and (= ($generated@@72 $generated@@75 ($generated@@38 $generated@@75 $generated@@129)) $generated@@129) ($generated@@28 $generated@@75 ($generated@@38 $generated@@75 $generated@@129) ($generated@@76 $generated@@130))))
 :pattern ( ($generated@@78 $generated@@129 ($generated@@76 $generated@@130)))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> ($generated@@78 $generated@@131 ($generated@@116 $generated@@132)) (and (= ($generated@@72 $generated@@115 ($generated@@38 $generated@@115 $generated@@131)) $generated@@131) ($generated@@28 $generated@@115 ($generated@@38 $generated@@115 $generated@@131) ($generated@@116 $generated@@132))))
 :pattern ( ($generated@@78 $generated@@131 ($generated@@116 $generated@@132)))
)))
(assert (= ($generated@@23 $generated@@35) $generated@@4))
(assert (= ($generated@@133 $generated@@35) $generated@@6))
(assert (= ($generated@@23 $generated@@30) $generated@@5))
(assert (= ($generated@@133 $generated@@30) $generated@@6))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and ($generated@@136 $generated@@139) ($generated@@136 $generated@@140)) (or ($generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143) (and (and ($generated@@28 $generated@@29 $generated@@141 $generated@@30) ($generated@@28 $generated@@75 $generated@@142 ($generated@@76 $generated@@30))) ($generated@@28 $generated@@115 $generated@@143 ($generated@@116 $generated@@30))))) (and ($generated@@134 $generated@@139) ($generated@@65 $generated@@139 $generated@@140))) (=> (forall (($generated@@144 T@U) ($generated@@145 T@U) )  (=> (and (or (not (= $generated@@144 $generated@@31)) (not true)) (exists (($generated@@146 Int) )  (and (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@27 $generated@@143))) (= ($generated@@99 $generated@@143 $generated@@146) ($generated@@72 $generated@@29 $generated@@144))))) (= ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@139 $generated@@144) $generated@@145) ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@140 $generated@@144) $generated@@145)))) (= ($generated@@135 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143) ($generated@@135 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@143))))
 :pattern ( ($generated@@134 $generated@@139) ($generated@@65 $generated@@139 $generated@@140) ($generated@@135 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@143))
)))
(assert  (=> (<= 0 $generated@@147) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (or ($generated@@137 $generated@@148 $generated@@149 $generated@@150 $generated@@151 $generated@@152) (and (< 0 $generated@@147) (and (and (and (and (and ($generated@@136 $generated@@148) ($generated@@136 $generated@@149)) ($generated@@65 $generated@@148 $generated@@149)) ($generated@@28 $generated@@29 $generated@@150 $generated@@30)) ($generated@@28 $generated@@75 $generated@@151 ($generated@@76 $generated@@30))) ($generated@@28 $generated@@115 $generated@@152 ($generated@@116 $generated@@30))))) (= ($generated@@135 $generated@@148 $generated@@149 $generated@@150 $generated@@151 $generated@@152)  (and true (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (or (not (= $generated@@153 $generated@@31)) (not true)) (=> (exists (($generated@@155 Int) )  (and (and (<= 0 $generated@@155) (< $generated@@155 ($generated@@27 $generated@@152))) (= ($generated@@99 $generated@@152 $generated@@155) ($generated@@72 $generated@@29 $generated@@153)))) (= ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@149 $generated@@153) $generated@@154) ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@148 $generated@@153) $generated@@154))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@149 $generated@@153) $generated@@154))
)))))
 :pattern ( ($generated@@135 $generated@@148 $generated@@149 $generated@@150 $generated@@151 $generated@@152) ($generated@@136 $generated@@149))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@72 $generated@@157 ($generated@@69 $generated@@157 $generated@@156)) ($generated@@69 $generated@@41 ($generated@@72 $generated@@157 $generated@@156)))
 :pattern ( ($generated@@72 $generated@@157 ($generated@@69 $generated@@157 $generated@@156)))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= ($generated@@27 $generated@@158) 0) (= $generated@@158 $generated@@25))
 :pattern ( ($generated@@27 $generated@@158))
)))
(assert  (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@159 $generated@@162 $generated@@163 $generated@@164 ($generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@167 $generated@@168) $generated@@165)
 :weight 0
)) (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@159 $generated@@169 $generated@@170 $generated@@171 ($generated@@161 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@159 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@159 $generated@@178 $generated@@179 $generated@@180 ($generated@@161 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@159 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Int) ($generated@@191 Int) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@12 ($generated@@159 $generated@@29 $generated@@40 $generated@@8 ($generated@@160 $generated@@187 $generated@@188 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))  (=> (and (or (not (= $generated@@193 $generated@@187)) (not true)) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@188 $generated@@193) $generated@@189)))) (exists (($generated@@195 Int) )  (and (and (<= $generated@@190 $generated@@195) (< $generated@@195 $generated@@191)) (= ($generated@@99 $generated@@192 $generated@@195) ($generated@@72 $generated@@29 $generated@@193))))))
 :pattern ( ($generated@@159 $generated@@29 $generated@@40 $generated@@8 ($generated@@160 $generated@@187 $generated@@188 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! ($generated@@34 $generated@@8 $generated@@197 $generated $generated@@196)
 :pattern ( ($generated@@34 $generated@@8 $generated@@197 $generated $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@28 $generated@@115 $generated@@198 ($generated@@116 $generated@@199)) (forall (($generated@@200 Int) ) (!  (=> (and (<= 0 $generated@@200) (< $generated@@200 ($generated@@27 $generated@@198))) ($generated@@78 ($generated@@99 $generated@@198 $generated@@200) $generated@@199))
 :pattern ( ($generated@@99 $generated@@198 $generated@@200))
)))
 :pattern ( ($generated@@28 $generated@@115 $generated@@198 ($generated@@116 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ) (! ($generated@@28 $generated@@8 $generated@@201 $generated)
 :pattern ( ($generated@@28 $generated@@8 $generated@@201 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Bool)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () Bool)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@213  (=> (= ($generated@@135 $generated@@202 $generated@@203 $generated@@204 $generated@@205 $generated@@206)  (and true (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (or (not (= $generated@@214 $generated@@31)) (not true)) (=> (exists (($generated@@216 Int) )  (and (and (<= 0 $generated@@216) (< $generated@@216 ($generated@@27 $generated@@206))) (= ($generated@@99 $generated@@206 $generated@@216) ($generated@@72 $generated@@29 $generated@@214)))) (= ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@203 $generated@@214) $generated@@215) ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@202 $generated@@214) $generated@@215))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@203 $generated@@214) $generated@@215))
)))) (=> (and ($generated@@28 $generated@@8 ($generated@@11 ($generated@@135 $generated@@202 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) $generated) (= (ControlFlow 0 3) (- 0 2))) $generated@@207))))
(let (($generated@@217  (=> (not ($generated@@12 ($generated@@69 $generated@@8 ($generated@@11 true)))) (=> (and (= $generated@@207 true) (= (ControlFlow 0 7) 3)) $generated@@213))))
(let (($generated@@218  (=> ($generated@@12 ($generated@@69 $generated@@8 ($generated@@11 true))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> (and (<= 0 $generated@@208) (< $generated@@208 ($generated@@27 $generated@@206))) (or (not (= ($generated@@38 $generated@@29 ($generated@@99 $generated@@206 $generated@@208)) $generated@@31)) (not true)))) (=> (=> (and (<= 0 $generated@@208) (< $generated@@208 ($generated@@27 $generated@@206))) (or (not (= ($generated@@38 $generated@@29 ($generated@@99 $generated@@206 $generated@@208)) $generated@@31)) (not true))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> (and (and (<= 0 $generated@@208) (< $generated@@208 ($generated@@27 $generated@@206))) (or (not (= ($generated@@38 $generated@@29 ($generated@@99 $generated@@206 $generated@@208)) $generated@@31)) (not true))) ($generated@@34 $generated@@29 ($generated@@38 $generated@@29 ($generated@@99 $generated@@206 $generated@@208)) $generated@@30 $generated@@202))) (=> (=> (and (and (<= 0 $generated@@208) (< $generated@@208 ($generated@@27 $generated@@206))) (or (not (= ($generated@@38 $generated@@29 ($generated@@99 $generated@@206 $generated@@208)) $generated@@31)) (not true))) ($generated@@34 $generated@@29 ($generated@@38 $generated@@29 ($generated@@99 $generated@@206 $generated@@208)) $generated@@30 $generated@@202)) (=> (= $generated@@209 (forall (($generated@@219 T@U) ($generated@@220 T@U) )  (=> (and (and (or (not (= $generated@@219 $generated@@31)) (not true)) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@29 ($generated@@42 $generated@@40 $generated@@41) $generated@@203 $generated@@219) $generated@@3)))) (exists (($generated@@221 Int) )  (and (and (<= 0 $generated@@221) (< $generated@@221 ($generated@@27 $generated@@206))) (= ($generated@@99 $generated@@206 $generated@@221) ($generated@@72 $generated@@29 $generated@@219))))) ($generated@@12 ($generated@@159 $generated@@29 $generated@@40 $generated@@8 $generated@@210 $generated@@219 $generated@@220))))) (=> (and (= $generated@@207 $generated@@209) (= (ControlFlow 0 4) 3)) $generated@@213)))))))))
(let (($generated@@222 true))
(let (($generated@@223  (=> (not ($generated@@24 $generated@@206 ($generated@@72 $generated@@29 $generated@@211))) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@222) (=> (= (ControlFlow 0 10) 4) $generated@@218)) (=> (= (ControlFlow 0 10) 7) $generated@@217)))))
(let (($generated@@224  (=> ($generated@@24 $generated@@206 ($generated@@72 $generated@@29 $generated@@211)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@222) (=> (= (ControlFlow 0 9) 4) $generated@@218)) (=> (= (ControlFlow 0 9) 7) $generated@@217)))))
(let (($generated@@225  (=> (and ($generated@@28 $generated@@29 $generated@@211 $generated@@30) ($generated@@34 $generated@@29 $generated@@211 $generated@@30 $generated@@203)) (and (=> (= (ControlFlow 0 11) 9) $generated@@224) (=> (= (ControlFlow 0 11) 10) $generated@@223)))))
(let (($generated@@226  (=> (not (and ($generated@@28 $generated@@29 $generated@@211 $generated@@30) ($generated@@34 $generated@@29 $generated@@211 $generated@@30 $generated@@203))) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@222) (=> (= (ControlFlow 0 8) 4) $generated@@218)) (=> (= (ControlFlow 0 8) 7) $generated@@217)))))
(let (($generated@@227  (=> (= $generated@@210 ($generated@@160 $generated@@31 $generated@@203 $generated@@3 0 ($generated@@27 $generated@@206) $generated@@206)) (and (=> (= (ControlFlow 0 12) 11) $generated@@225) (=> (= (ControlFlow 0 12) 8) $generated@@226)))))
(let (($generated@@228  (=> (and ($generated@@136 $generated@@202) ($generated@@134 $generated@@202)) (=> (and (and ($generated@@28 $generated@@29 $generated@@204 $generated@@30) ($generated@@34 $generated@@29 $generated@@204 $generated@@30 $generated@@203)) (and ($generated@@28 $generated@@75 $generated@@205 ($generated@@76 $generated@@30)) ($generated@@34 $generated@@75 $generated@@205 ($generated@@76 $generated@@30) $generated@@203))) (=> (and (and (and ($generated@@28 $generated@@115 $generated@@206 ($generated@@116 $generated@@30)) ($generated@@34 $generated@@115 $generated@@206 ($generated@@116 $generated@@30) $generated@@203)) (= 0 $generated@@147)) (and (and (= $generated@@212 $generated@@202) (and ($generated@@65 $generated@@212 $generated@@203) ($generated@@136 $generated@@203))) (= (ControlFlow 0 13) 12))) $generated@@227)))))
$generated@@228)))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 5))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 6))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
