(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U Int) T@U)
(declare-fun $generated@@31 (Int) Int)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (Int) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@56 (T@U) Int)
(declare-fun $generated@@58 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@62 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@66 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert  (and (= ($generated@@5 $generated@@24) 3) (= ($generated@@5 $generated@@29) 4)))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@34 T@U) ) (!  (=> (or ($generated@@25 ($generated@@23 $generated@@24 $generated@@34)) (and (< 0 $generated@@21) ($generated@@26 $generated@@24 $generated@@34 ($generated@@27 $generated@@0)))) (= ($generated@@22 ($generated@@23 $generated@@24 $generated@@34)) (forall (($generated@@35 Int) ) (!  (=> (and (<= ($generated@@31 0) $generated@@35) (< $generated@@35 ($generated@@32 ($generated@@23 $generated@@24 $generated@@34)))) (ite (= ($generated@@28 $generated@@29 ($generated@@30 ($generated@@23 $generated@@24 $generated@@34) $generated@@35)) ($generated@@23 $generated@@29 ($generated@@33 42))) false  (or (= ($generated@@28 $generated@@29 ($generated@@30 ($generated@@23 $generated@@24 $generated@@34) $generated@@35)) ($generated@@23 $generated@@29 ($generated@@33 97))) (= ($generated@@28 $generated@@29 ($generated@@30 ($generated@@23 $generated@@24 $generated@@34) $generated@@35)) ($generated@@23 $generated@@29 ($generated@@33 98))))))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@34 $generated@@35)))
))))
 :weight 3
 :pattern ( ($generated@@22 ($generated@@23 $generated@@24 $generated@@34)))
))))
(assert (= ($generated@@36 $generated) $generated@@1))
(assert (= ($generated@@36 $generated@@0) $generated@@2))
(assert (= ($generated@@32 $generated@@37) 0))
(assert (forall (($generated@@38 Int) ) (! (= ($generated@@31 $generated@@38) $generated@@38)
 :pattern ( ($generated@@31 $generated@@38))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@23 $generated@@40 $generated@@39) $generated@@39)
 :pattern ( ($generated@@23 $generated@@40 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 ($generated@@28 $generated@@43 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@28 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ) (!  (=> ($generated@@44 $generated@@45 $generated) (and (= ($generated@@41 $generated@@6 ($generated@@28 $generated@@6 $generated@@45)) $generated@@45) ($generated@@26 $generated@@6 ($generated@@28 $generated@@6 $generated@@45) $generated)))
 :pattern ( ($generated@@44 $generated@@45 $generated))
)))
(assert (forall (($generated@@46 T@U) ) (!  (=> ($generated@@44 $generated@@46 $generated@@0) (and (= ($generated@@41 $generated@@29 ($generated@@28 $generated@@29 $generated@@46)) $generated@@46) ($generated@@26 $generated@@29 ($generated@@28 $generated@@29 $generated@@46) $generated@@0)))
 :pattern ( ($generated@@44 $generated@@46 $generated@@0))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@44 ($generated@@41 $generated@@49 $generated@@47) $generated@@48) ($generated@@26 $generated@@49 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 ($generated@@41 $generated@@49 $generated@@47) $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (! (<= 0 ($generated@@32 $generated@@50))
 :pattern ( ($generated@@32 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 ($generated@@27 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@27 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@36 ($generated@@27 $generated@@53)) $generated@@3)
 :pattern ( ($generated@@27 $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@28 $generated@@55 ($generated@@41 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@41 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@57 Int) ) (!  (=> (or (and (<= 0 $generated@@57) (< $generated@@57 55296)) (and (<= 57344 $generated@@57) (< $generated@@57 1114112))) (= ($generated@@56 ($generated@@33 $generated@@57)) $generated@@57))
 :pattern ( ($generated@@33 $generated@@57))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@58 $generated@@69 $generated@@70 $generated@@71 ($generated@@65 $generated@@69 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@75 $generated@@72) $generated@@74 $generated@@75) $generated@@72)
 :weight 0
)) (and (forall (($generated@@76 T@T) ($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (or (= $generated@@81 $generated@@83) (= ($generated@@58 $generated@@76 $generated@@77 $generated@@78 ($generated@@65 $generated@@76 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@82 $generated@@79) $generated@@83 $generated@@84) ($generated@@58 $generated@@76 $generated@@77 $generated@@78 $generated@@80 $generated@@83 $generated@@84)))
 :weight 0
)) (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (or (= $generated@@91 $generated@@93) (= ($generated@@58 $generated@@85 $generated@@86 $generated@@87 ($generated@@65 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@90 $generated@@91 $generated@@88) $generated@@92 $generated@@93) ($generated@@58 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@92 $generated@@93)))
 :weight 0
)))) (= ($generated@@5 $generated@@59) 5)) (= ($generated@@5 $generated@@60) 6)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@62 $generated@@94 $generated@@95 ($generated@@66 $generated@@94 $generated@@95 $generated@@97 $generated@@98 $generated@@96) $generated@@98) $generated@@96)
 :weight 0
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (or (= $generated@@103 $generated@@104) (= ($generated@@62 $generated@@99 $generated@@100 ($generated@@66 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@101) $generated@@104) ($generated@@62 $generated@@99 $generated@@100 $generated@@102 $generated@@104)))
 :weight 0
))) (= ($generated@@5 $generated@@63) 7)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (= ($generated@@5 ($generated@@64 $generated@@105 $generated@@106)) 8))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@64 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@68 ($generated@@64 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@64 $generated@@109 $generated@@110))
))))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 Bool) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@10 ($generated@@58 $generated@@59 $generated@@60 $generated@@6 ($generated@@61 $generated@@111 $generated@@112 $generated@@113 $generated@@114) $generated@@115 $generated@@116))  (=> (and (or (not (= $generated@@115 $generated@@111)) (not true)) ($generated@@10 ($generated@@28 $generated@@6 ($generated@@62 $generated@@60 $generated@@63 ($generated@@62 $generated@@59 ($generated@@64 $generated@@60 $generated@@63) $generated@@112 $generated@@115) $generated@@113)))) $generated@@114))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 $generated@@6 ($generated@@61 $generated@@111 $generated@@112 $generated@@113 $generated@@114) $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@44 $generated@@117 ($generated@@27 $generated@@118)) (and (= ($generated@@41 $generated@@24 ($generated@@28 $generated@@24 $generated@@117)) $generated@@117) ($generated@@26 $generated@@24 ($generated@@28 $generated@@24 $generated@@117) ($generated@@27 $generated@@118))))
 :pattern ( ($generated@@44 $generated@@117 ($generated@@27 $generated@@118)))
)))
(assert (forall (($generated@@119 T@U) ) (!  (and (= ($generated@@33 ($generated@@56 $generated@@119)) $generated@@119) (or (and (<= 0 ($generated@@56 $generated@@119)) (< ($generated@@56 $generated@@119) 55296)) (and (<= 57344 ($generated@@56 $generated@@119)) (< ($generated@@56 $generated@@119) 1114112))))
 :pattern ( ($generated@@56 $generated@@119))
)))
(assert (forall (($generated@@120 Int) ) (! (= ($generated@@41 $generated@@7 ($generated@@11 ($generated@@31 $generated@@120))) ($generated@@23 $generated@@63 ($generated@@41 $generated@@7 ($generated@@11 $generated@@120))))
 :pattern ( ($generated@@41 $generated@@7 ($generated@@11 ($generated@@31 $generated@@120))))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@41 $generated@@122 ($generated@@23 $generated@@122 $generated@@121)) ($generated@@23 $generated@@63 ($generated@@41 $generated@@122 $generated@@121)))
 :pattern ( ($generated@@41 $generated@@122 ($generated@@23 $generated@@122 $generated@@121)))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> (= ($generated@@32 $generated@@123) 0) (= $generated@@123 $generated@@37))
 :pattern ( ($generated@@32 $generated@@123))
)))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@124 T@U) ) (!  (=> (or ($generated@@25 $generated@@124) (and (< 0 $generated@@21) ($generated@@26 $generated@@24 $generated@@124 ($generated@@27 $generated@@0)))) (= ($generated@@22 $generated@@124) (forall (($generated@@125 Int) ) (!  (=> (and (<= ($generated@@31 0) $generated@@125) (< $generated@@125 ($generated@@32 $generated@@124))) (ite (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@124 $generated@@125)) ($generated@@23 $generated@@29 ($generated@@33 42))) false  (or (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@124 $generated@@125)) ($generated@@23 $generated@@29 ($generated@@33 97))) (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@124 $generated@@125)) ($generated@@23 $generated@@29 ($generated@@33 98))))))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@124 $generated@@125)))
))))
 :pattern ( ($generated@@22 $generated@@124))
))))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@26 $generated@@24 $generated@@126 ($generated@@27 $generated@@127)) (forall (($generated@@128 Int) ) (!  (=> (and (<= 0 $generated@@128) (< $generated@@128 ($generated@@32 $generated@@126))) ($generated@@44 ($generated@@30 $generated@@126 $generated@@128) $generated@@127))
 :pattern ( ($generated@@30 $generated@@126 $generated@@128))
)))
 :pattern ( ($generated@@26 $generated@@24 $generated@@126 ($generated@@27 $generated@@127)))
)))
(assert (forall (($generated@@129 T@U) ) (! ($generated@@26 $generated@@6 $generated@@129 $generated)
 :pattern ( ($generated@@26 $generated@@6 $generated@@129 $generated))
)))
(assert (forall (($generated@@130 T@U) ) (! ($generated@@26 $generated@@29 $generated@@130 $generated@@0)
 :pattern ( ($generated@@26 $generated@@29 $generated@@130 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@131 () T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 () T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@138 true))
(let (($generated@@139  (=> (and (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@131 $generated@@132)) ($generated@@23 $generated@@29 ($generated@@33 97))) (= (ControlFlow 0 8) 3)) $generated@@138)))
(let (($generated@@140  (=> (or (not (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@131 $generated@@132)) ($generated@@23 $generated@@29 ($generated@@33 97)))) (not true)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 $generated@@132) (< $generated@@132 ($generated@@32 $generated@@131)))) (=> (and (<= 0 $generated@@132) (< $generated@@132 ($generated@@32 $generated@@131))) (=> (= (ControlFlow 0 6) 3) $generated@@138))))))
(let (($generated@@141  (=> (or (not (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@131 $generated@@132)) ($generated@@23 $generated@@29 ($generated@@33 42)))) (not true)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 $generated@@132) (< $generated@@132 ($generated@@32 $generated@@131)))) (=> (and (<= 0 $generated@@132) (< $generated@@132 ($generated@@32 $generated@@131))) (and (=> (= (ControlFlow 0 9) 6) $generated@@140) (=> (= (ControlFlow 0 9) 8) $generated@@139)))))))
(let (($generated@@142  (=> (and (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@131 $generated@@132)) ($generated@@23 $generated@@29 ($generated@@33 42))) (= (ControlFlow 0 5) 3)) $generated@@138)))
(let (($generated@@143  (=> (and (<= ($generated@@31 0) $generated@@132) (< $generated@@132 ($generated@@32 $generated@@131))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (and (<= 0 $generated@@132) (< $generated@@132 ($generated@@32 $generated@@131)))) (=> (and (<= 0 $generated@@132) (< $generated@@132 ($generated@@32 $generated@@131))) (and (=> (= (ControlFlow 0 11) 5) $generated@@142) (=> (= (ControlFlow 0 11) 9) $generated@@141)))))))
(let (($generated@@144  (=> (and (not (and (<= ($generated@@31 0) $generated@@132) (< $generated@@132 ($generated@@32 $generated@@131)))) (= (ControlFlow 0 4) 3)) $generated@@138)))
(let (($generated@@145  (=> (< $generated@@132 ($generated@@31 0)) (and (=> (= (ControlFlow 0 14) 11) $generated@@143) (=> (= (ControlFlow 0 14) 4) $generated@@144)))))
(let (($generated@@146  (=> (<= ($generated@@31 0) $generated@@132) (and (=> (= (ControlFlow 0 13) 11) $generated@@143) (=> (= (ControlFlow 0 13) 4) $generated@@144)))))
(let (($generated@@147  (and (=> (= (ControlFlow 0 15) 13) $generated@@146) (=> (= (ControlFlow 0 15) 14) $generated@@145))))
(let (($generated@@148 true))
(let (($generated@@149 true))
(let (($generated@@150  (=> (= $generated@@133 ($generated@@61 $generated@@134 $generated@@135 $generated@@4 false)) (and (and (=> (= (ControlFlow 0 16) 1) $generated@@149) (=> (= (ControlFlow 0 16) 15) $generated@@147)) (=> (= (ControlFlow 0 16) 2) $generated@@148)))))
(let (($generated@@151  (=> (and (and (and ($generated@@136 $generated@@135) ($generated@@137 $generated@@135)) ($generated@@26 $generated@@24 $generated@@131 ($generated@@27 $generated@@0))) (and (= 0 $generated@@21) (= (ControlFlow 0 17) 16))) $generated@@150)))
$generated@@151)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
