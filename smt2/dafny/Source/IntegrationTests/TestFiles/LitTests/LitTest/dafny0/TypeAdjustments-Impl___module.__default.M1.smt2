(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@77 (Int) Int)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@110 (T@U T@U) Bool)
(declare-fun $generated@@126 (T@U) Int)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and (or (not (= $generated@@32 $generated@@28)) (not true)) (= ($generated@@29 $generated@@32) ($generated@@27 $generated@@31))) ($generated@@30 $generated@@10 ($generated@@14 ($generated@@26 $generated@@32)) $generated))
 :pattern ( ($generated@@26 $generated@@32) ($generated@@27 $generated@@31))
)))
(assert (= ($generated@@8 $generated@@34) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@36) $generated@@38) ($generated@@33 $generated@@34 $generated@@37 ($generated@@27 $generated@@36) $generated@@38))
 :pattern ( ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@36) $generated@@38))
 :pattern ( ($generated@@33 $generated@@34 $generated@@37 ($generated@@27 $generated@@36) $generated@@38))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@41 $generated@@39 $generated@@42) ($generated@@33 $generated@@34 $generated@@41 $generated@@40 $generated@@42))
 :pattern ( ($generated@@33 $generated@@34 $generated@@41 $generated@@39 $generated@@42))
 :pattern ( ($generated@@33 $generated@@34 $generated@@41 $generated@@40 $generated@@42))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@8 $generated@@45) 4)) (= ($generated@@8 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@8 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@69 ($generated@@27 $generated@@68) $generated@@70)  (or (= $generated@@69 $generated@@28) ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@70 $generated@@69) $generated@@1)))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@69 ($generated@@27 $generated@@68) $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@71 $generated@@40 $generated@@72)  (or (= $generated@@71 $generated@@28) ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@72 $generated@@71) $generated@@1)))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@71 $generated@@40 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@73 $generated@@74 $generated@@75) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@74 $generated@@76) $generated@@1))) ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@75 $generated@@76) $generated@@1))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@75 $generated@@76) $generated@@1))
)))
 :pattern ( ($generated@@73 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@77 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 Int) ) (!  (=> (and (and (and ($generated@@83 $generated@@86) (and (or (not (= $generated@@87 $generated@@28)) (not true)) (= ($generated@@29 $generated@@87) ($generated@@27 $generated@@85)))) (and (<= 0 $generated@@88) (< $generated@@88 ($generated@@26 $generated@@87)))) ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@86 $generated@@87) $generated@@1)))) ($generated@@84 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@86 $generated@@87) ($generated@@82 $generated@@88)) $generated@@85 $generated@@86))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@86 $generated@@87) ($generated@@82 $generated@@88)) ($generated@@27 $generated@@85))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@43 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@43 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@30 $generated@@34 $generated@@93 ($generated@@35 $generated@@92))  (and ($generated@@30 $generated@@34 $generated@@93 ($generated@@27 $generated@@92)) (or (not (= $generated@@93 $generated@@28)) (not true))))
 :pattern ( ($generated@@30 $generated@@34 $generated@@93 ($generated@@35 $generated@@92)))
 :pattern ( ($generated@@30 $generated@@34 $generated@@93 ($generated@@27 $generated@@92)))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@84 ($generated@@89 $generated@@97 $generated@@94) $generated@@95 $generated@@96) ($generated@@33 $generated@@97 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@84 ($generated@@89 $generated@@97 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@73 $generated@@98 $generated@@99) (=> ($generated@@84 $generated@@100 $generated@@101 $generated@@98) ($generated@@84 $generated@@100 $generated@@101 $generated@@99)))
 :pattern ( ($generated@@73 $generated@@98 $generated@@99) ($generated@@84 $generated@@100 $generated@@101 $generated@@98))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (!  (=> ($generated@@73 $generated@@102 $generated@@103) (=> ($generated@@33 $generated@@106 $generated@@104 $generated@@105 $generated@@102) ($generated@@33 $generated@@106 $generated@@104 $generated@@105 $generated@@103)))
 :pattern ( ($generated@@73 $generated@@102 $generated@@103) ($generated@@33 $generated@@106 $generated@@104 $generated@@105 $generated@@102))
)))
(assert (forall (($generated@@108 T@U) ) (!  (and (= ($generated@@25 ($generated@@27 $generated@@108)) $generated@@4) (= ($generated@@107 ($generated@@27 $generated@@108)) $generated@@7))
 :pattern ( ($generated@@27 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (!  (and (= ($generated@@25 ($generated@@35 $generated@@109)) $generated@@5) (= ($generated@@107 ($generated@@35 $generated@@109)) $generated@@7))
 :pattern ( ($generated@@35 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@110 $generated@@111 $generated@@40) (and (= ($generated@@89 $generated@@34 ($generated@@43 $generated@@34 $generated@@111)) $generated@@111) ($generated@@30 $generated@@34 ($generated@@43 $generated@@34 $generated@@111) $generated@@40)))
 :pattern ( ($generated@@110 $generated@@111 $generated@@40))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@110 $generated@@112 $generated@@39) (and (= ($generated@@89 $generated@@34 ($generated@@43 $generated@@34 $generated@@112)) $generated@@112) ($generated@@30 $generated@@34 ($generated@@43 $generated@@34 $generated@@112) $generated@@39)))
 :pattern ( ($generated@@110 $generated@@112 $generated@@39))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@30 $generated@@34 $generated@@114 ($generated@@27 $generated@@113))  (or (= $generated@@114 $generated@@28) (= ($generated@@29 $generated@@114) ($generated@@27 $generated@@113))))
 :pattern ( ($generated@@30 $generated@@34 $generated@@114 ($generated@@27 $generated@@113)))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@30 $generated@@34 $generated@@115 $generated@@39)  (and ($generated@@30 $generated@@34 $generated@@115 $generated@@40) (or (not (= $generated@@115 $generated@@28)) (not true))))
 :pattern ( ($generated@@30 $generated@@34 $generated@@115 $generated@@39))
 :pattern ( ($generated@@30 $generated@@34 $generated@@115 $generated@@40))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or (not (= $generated@@116 $generated@@118)) (not true)) (=> (and ($generated@@73 $generated@@116 $generated@@117) ($generated@@73 $generated@@117 $generated@@118)) ($generated@@73 $generated@@116 $generated@@118)))
 :pattern ( ($generated@@73 $generated@@116 $generated@@117) ($generated@@73 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@110 $generated@@119 $generated) (and (= ($generated@@89 $generated@@10 ($generated@@43 $generated@@10 $generated@@119)) $generated@@119) ($generated@@30 $generated@@10 ($generated@@43 $generated@@10 $generated@@119) $generated)))
 :pattern ( ($generated@@110 $generated@@119 $generated))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@110 ($generated@@89 $generated@@122 $generated@@120) $generated@@121) ($generated@@30 $generated@@122 $generated@@120 $generated@@121))
 :pattern ( ($generated@@110 ($generated@@89 $generated@@122 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (<= 0 ($generated@@26 $generated@@123))
 :pattern ( ($generated@@26 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! ($generated@@30 $generated@@34 $generated@@124 $generated@@40)
 :pattern ( ($generated@@30 $generated@@34 $generated@@124 $generated@@40))
)))
(assert (forall (($generated@@125 Int) ) (! (= ($generated@@24 ($generated@@82 $generated@@125)) 1)
 :pattern ( ($generated@@82 $generated@@125))
)))
(assert (forall (($generated@@127 Int) ) (! (= ($generated@@126 ($generated@@82 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@82 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@27 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@27 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@35 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@35 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@43 $generated@@133 ($generated@@89 $generated@@133 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@89 $generated@@133 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and ($generated@@83 $generated@@135) (and (or (not (= $generated@@136 $generated@@28)) (not true)) (= ($generated@@29 $generated@@136) ($generated@@27 $generated@@134)))) ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@135 $generated@@136) $generated@@1)))) ($generated@@33 $generated@@10 ($generated@@14 ($generated@@26 $generated@@136)) $generated $generated@@135))
 :pattern ( ($generated@@26 $generated@@136) ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@135 $generated@@136) $generated@@1)) ($generated@@27 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 Int) ) (!  (=> (and (and ($generated@@83 $generated@@138) (and (or (not (= $generated@@139 $generated@@28)) (not true)) (= ($generated@@29 $generated@@139) ($generated@@27 $generated@@137)))) (and (<= 0 $generated@@140) (< $generated@@140 ($generated@@26 $generated@@139)))) ($generated@@110 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@138 $generated@@139) ($generated@@82 $generated@@140)) $generated@@137))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@138 $generated@@139) ($generated@@82 $generated@@140)) ($generated@@27 $generated@@137))
)))
(assert  (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@141 $generated@@144 $generated@@145 $generated@@146 ($generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@141 $generated@@151 $generated@@152 $generated@@153 ($generated@@143 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@141 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@141 $generated@@160 $generated@@161 $generated@@162 ($generated@@143 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@141 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@13 ($generated@@141 $generated@@34 $generated@@45 $generated@@9 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@141 $generated@@34 $generated@@45 $generated@@9 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@110 $generated@@176 ($generated@@27 $generated@@175)) (and (= ($generated@@89 $generated@@34 ($generated@@43 $generated@@34 $generated@@176)) $generated@@176) ($generated@@30 $generated@@34 ($generated@@43 $generated@@34 $generated@@176) ($generated@@27 $generated@@175))))
 :pattern ( ($generated@@110 $generated@@176 ($generated@@27 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@110 $generated@@178 ($generated@@35 $generated@@177)) (and (= ($generated@@89 $generated@@34 ($generated@@43 $generated@@34 $generated@@178)) $generated@@178) ($generated@@30 $generated@@34 ($generated@@43 $generated@@34 $generated@@178) ($generated@@35 $generated@@177))))
 :pattern ( ($generated@@110 $generated@@178 ($generated@@35 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@83 ($generated@@48 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@179 $generated@@180 ($generated@@48 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@179 $generated@@180) $generated@@181 $generated@@182))) ($generated@@73 $generated@@179 ($generated@@48 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@179 $generated@@180 ($generated@@48 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@179 $generated@@180) $generated@@181 $generated@@182))))
 :pattern ( ($generated@@48 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@179 $generated@@180 ($generated@@48 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@179 $generated@@180) $generated@@181 $generated@@182)))
)))
(assert (= ($generated@@25 $generated@@40) $generated@@2))
(assert (= ($generated@@107 $generated@@40) $generated@@6))
(assert (= ($generated@@25 $generated@@39) $generated@@3))
(assert (= ($generated@@107 $generated@@39) $generated@@6))
(assert (forall (($generated@@183 Int) ) (! (= ($generated@@89 $generated@@10 ($generated@@14 ($generated@@77 $generated@@183))) ($generated@@79 $generated@@46 ($generated@@89 $generated@@10 ($generated@@14 $generated@@183))))
 :pattern ( ($generated@@89 $generated@@10 ($generated@@14 ($generated@@77 $generated@@183))))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@T) ) (! (= ($generated@@89 $generated@@185 ($generated@@79 $generated@@185 $generated@@184)) ($generated@@79 $generated@@46 ($generated@@89 $generated@@185 $generated@@184)))
 :pattern ( ($generated@@89 $generated@@185 ($generated@@79 $generated@@185 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! ($generated@@33 $generated@@10 $generated@@187 $generated $generated@@186)
 :pattern ( ($generated@@33 $generated@@10 $generated@@187 $generated $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! ($generated@@30 $generated@@10 $generated@@188 $generated)
 :pattern ( ($generated@@30 $generated@@10 $generated@@188 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@202  (=> (= $generated@@189 ($generated@@142 $generated@@28 $generated@@190 $generated@@1 false)) (=> (and ($generated@@30 $generated@@34 $generated@@191 ($generated@@35 $generated)) ($generated@@33 $generated@@34 $generated@@191 ($generated@@35 $generated) $generated@@190)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= 0 ($generated@@77 100))) (=> (<= 0 ($generated@@77 100)) (=> (and (and (and (or (not (= $generated@@192 $generated@@28)) (not true)) ($generated@@30 $generated@@34 $generated@@192 ($generated@@27 $generated))) (not ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@190 $generated@@192) $generated@@1))))) (and (and (= ($generated@@26 $generated@@192) ($generated@@77 100)) (= $generated@@193 ($generated@@48 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@190 $generated@@192 ($generated@@48 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@190 $generated@@192) $generated@@1 ($generated@@89 $generated@@9 ($generated@@12 true)))))) (and ($generated@@83 $generated@@193) ($generated@@194 $generated@@193)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@192 $generated@@28)) (not true))) (=> (or (not (= $generated@@192 $generated@@28)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 ($generated@@77 0)) (< ($generated@@77 0) ($generated@@26 $generated@@192)))) (=> (and (<= 0 ($generated@@77 0)) (< ($generated@@77 0) ($generated@@26 $generated@@192))) (=> (and (= $generated@@195 (+ ($generated@@15 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@34 ($generated@@47 $generated@@45 $generated@@46) $generated@@193 $generated@@192) ($generated@@82 ($generated@@77 0))))) 15)) ($generated@@30 $generated@@34 $generated@@196 ($generated@@35 $generated))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@196 $generated@@28)) (not true))) (=> (or (not (= $generated@@196 $generated@@28)) (not true)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@77 0) $generated@@197))))))))))))))))
(let (($generated@@203  (=> (and ($generated@@83 $generated@@190) ($generated@@194 $generated@@190)) (=> (and (and (and (and ($generated@@30 $generated@@34 $generated@@198 ($generated@@35 $generated)) ($generated@@33 $generated@@34 $generated@@198 ($generated@@35 $generated) $generated@@190)) true) (and ($generated@@30 $generated@@34 $generated@@199 ($generated@@35 $generated)) true)) (and (and (and ($generated@@30 $generated@@34 $generated@@200 $generated@@40) ($generated@@33 $generated@@34 $generated@@200 $generated@@40 $generated@@190)) true) (and (= 0 $generated@@201) (= (ControlFlow 0 7) 2)))) $generated@@202))))
$generated@@203)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
