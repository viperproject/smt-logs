(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 () Int)
(declare-fun $generated@@74 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@76 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@98 (T@U T@U) Bool)
(declare-fun $generated@@102 (T@U T@U T@U) Bool)
(declare-fun $generated@@131 (T@U Int) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@24 $generated@@25) 0))
(assert (= ($generated@@7 $generated@@27) 3))
(assert (forall (($generated@@31 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@31 $generated@@28)  (or (= $generated@@31 $generated@@29) (= ($generated@@30 $generated@@31) $generated@@28)))
 :pattern ( ($generated@@26 $generated@@27 $generated@@31 $generated@@28))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@32 $generated@@27 $generated@@34 $generated@@33 $generated@@35) ($generated@@32 $generated@@27 $generated@@34 $generated@@28 $generated@@35))
 :pattern ( ($generated@@32 $generated@@27 $generated@@34 $generated@@33 $generated@@35))
 :pattern ( ($generated@@32 $generated@@27 $generated@@34 $generated@@28 $generated@@35))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@37 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@37 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@37 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@7 $generated@@38) 4)) (= ($generated@@7 $generated@@39) 5)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@7 ($generated@@40 $generated@@55 $generated@@56)) 6))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@40 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@40 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@40 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@32 $generated@@27 $generated@@61 $generated@@28 $generated@@62)  (or (= $generated@@61 $generated@@29) ($generated@@12 ($generated@@36 $generated@@8 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@62 $generated@@61) $generated@@3)))))
 :pattern ( ($generated@@32 $generated@@27 $generated@@61 $generated@@28 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@63 $generated@@64 $generated@@65) (forall (($generated@@66 T@U) ) (!  (=> ($generated@@12 ($generated@@36 $generated@@8 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@64 $generated@@66) $generated@@3))) ($generated@@12 ($generated@@36 $generated@@8 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@65 $generated@@66) $generated@@3))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@65 $generated@@66) $generated@@3))
)))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@36 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@36 $generated@@72 $generated@@71))
)))
(assert  (and (= ($generated@@7 $generated@@77) 7) (= ($generated@@7 $generated@@79) 8)))
(assert  (=> (<= 0 $generated@@73) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (or ($generated@@76 $generated@@82 $generated@@83 $generated@@84 $generated@@85 $generated@@86) (and (< 0 $generated@@73) (and (and (and (and (and ($generated@@75 $generated@@82) ($generated@@75 $generated@@83)) ($generated@@63 $generated@@82 $generated@@83)) ($generated@@26 $generated@@27 $generated@@84 $generated@@28)) ($generated@@26 $generated@@77 $generated@@85 ($generated@@78 $generated@@28))) ($generated@@26 $generated@@79 $generated@@86 ($generated@@80 $generated@@28))))) (= ($generated@@74 $generated@@82 $generated@@83 $generated@@84 $generated@@85 $generated@@86)  (and true (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (or (not (= $generated@@87 $generated@@29)) (not true)) (=> ($generated@@81 $generated@@85 ($generated@@70 $generated@@27 $generated@@87)) (= ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@83 $generated@@87) $generated@@88) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@82 $generated@@87) $generated@@88))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@83 $generated@@87) $generated@@88))
)))))
 :pattern ( ($generated@@74 $generated@@82 $generated@@83 $generated@@84 $generated@@85 $generated@@86) ($generated@@75 $generated@@83))
))))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (and (and (and ($generated@@75 $generated@@91) ($generated@@75 $generated@@92)) (or ($generated@@76 $generated@@90 $generated@@91 $generated@@93 $generated@@94 $generated@@95) (and (and ($generated@@26 $generated@@27 $generated@@93 $generated@@28) ($generated@@26 $generated@@77 $generated@@94 ($generated@@78 $generated@@28))) ($generated@@26 $generated@@79 $generated@@95 ($generated@@80 $generated@@28))))) (and ($generated@@89 $generated@@91) ($generated@@63 $generated@@91 $generated@@92))) (=> (forall (($generated@@96 T@U) ($generated@@97 T@U) )  (=> (and (or (not (= $generated@@96 $generated@@29)) (not true)) ($generated@@81 $generated@@94 ($generated@@70 $generated@@27 $generated@@96))) (= ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@91 $generated@@96) $generated@@97) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@92 $generated@@96) $generated@@97)))) (= ($generated@@74 $generated@@90 $generated@@91 $generated@@93 $generated@@94 $generated@@95) ($generated@@74 $generated@@90 $generated@@92 $generated@@93 $generated@@94 $generated@@95))))
 :pattern ( ($generated@@89 $generated@@91) ($generated@@63 $generated@@91 $generated@@92) ($generated@@74 $generated@@90 $generated@@92 $generated@@93 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@26 $generated@@77 $generated@@99 ($generated@@78 $generated@@100)) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@81 $generated@@99 $generated@@101) ($generated@@98 $generated@@101 $generated@@100))
 :pattern ( ($generated@@81 $generated@@99 $generated@@101))
)))
 :pattern ( ($generated@@26 $generated@@77 $generated@@99 ($generated@@78 $generated@@100)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@102 ($generated@@70 $generated@@106 $generated@@103) $generated@@104 $generated@@105) ($generated@@32 $generated@@106 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@102 ($generated@@70 $generated@@106 $generated@@103) $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> ($generated@@63 $generated@@107 $generated@@108) (=> ($generated@@102 $generated@@109 $generated@@110 $generated@@107) ($generated@@102 $generated@@109 $generated@@110 $generated@@108)))
 :pattern ( ($generated@@63 $generated@@107 $generated@@108) ($generated@@102 $generated@@109 $generated@@110 $generated@@107))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (!  (=> ($generated@@63 $generated@@111 $generated@@112) (=> ($generated@@32 $generated@@115 $generated@@113 $generated@@114 $generated@@111) ($generated@@32 $generated@@115 $generated@@113 $generated@@114 $generated@@112)))
 :pattern ( ($generated@@63 $generated@@111 $generated@@112) ($generated@@32 $generated@@115 $generated@@113 $generated@@114 $generated@@111))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@98 $generated@@116 $generated@@33) (and (= ($generated@@70 $generated@@27 ($generated@@36 $generated@@27 $generated@@116)) $generated@@116) ($generated@@26 $generated@@27 ($generated@@36 $generated@@27 $generated@@116) $generated@@33)))
 :pattern ( ($generated@@98 $generated@@116 $generated@@33))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@98 $generated@@117 $generated@@28) (and (= ($generated@@70 $generated@@27 ($generated@@36 $generated@@27 $generated@@117)) $generated@@117) ($generated@@26 $generated@@27 ($generated@@36 $generated@@27 $generated@@117) $generated@@28)))
 :pattern ( ($generated@@98 $generated@@117 $generated@@28))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@118 $generated@@33)  (and ($generated@@26 $generated@@27 $generated@@118 $generated@@28) (or (not (= $generated@@118 $generated@@29)) (not true))))
 :pattern ( ($generated@@26 $generated@@27 $generated@@118 $generated@@33))
 :pattern ( ($generated@@26 $generated@@27 $generated@@118 $generated@@28))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or (not (= $generated@@119 $generated@@121)) (not true)) (=> (and ($generated@@63 $generated@@119 $generated@@120) ($generated@@63 $generated@@120 $generated@@121)) ($generated@@63 $generated@@119 $generated@@121)))
 :pattern ( ($generated@@63 $generated@@119 $generated@@120) ($generated@@63 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@98 $generated@@122 $generated) (and (= ($generated@@70 $generated@@8 ($generated@@36 $generated@@8 $generated@@122)) $generated@@122) ($generated@@26 $generated@@8 ($generated@@36 $generated@@8 $generated@@122) $generated)))
 :pattern ( ($generated@@98 $generated@@122 $generated))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@98 ($generated@@70 $generated@@125 $generated@@123) $generated@@124) ($generated@@26 $generated@@125 $generated@@123 $generated@@124))
 :pattern ( ($generated@@98 ($generated@@70 $generated@@125 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (<= 0 ($generated@@24 $generated@@126))
 :pattern ( ($generated@@24 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@32 $generated@@77 $generated@@127 ($generated@@78 $generated@@128) $generated@@129) (forall (($generated@@130 T@U) ) (!  (=> ($generated@@81 $generated@@127 $generated@@130) ($generated@@102 $generated@@130 $generated@@128 $generated@@129))
 :pattern ( ($generated@@81 $generated@@127 $generated@@130))
)))
 :pattern ( ($generated@@32 $generated@@77 $generated@@127 ($generated@@78 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@32 $generated@@79 $generated@@132 ($generated@@80 $generated@@133) $generated@@134) (forall (($generated@@135 Int) ) (!  (=> (and (<= 0 $generated@@135) (< $generated@@135 ($generated@@24 $generated@@132))) ($generated@@102 ($generated@@131 $generated@@132 $generated@@135) $generated@@133 $generated@@134))
 :pattern ( ($generated@@131 $generated@@132 $generated@@135))
)))
 :pattern ( ($generated@@32 $generated@@79 $generated@@132 ($generated@@80 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@136 ($generated@@78 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@78 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@23 ($generated@@78 $generated@@138)) $generated@@1)
 :pattern ( ($generated@@78 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@80 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@80 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@23 ($generated@@80 $generated@@141)) $generated@@2)
 :pattern ( ($generated@@80 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@36 $generated@@143 ($generated@@70 $generated@@143 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@70 $generated@@143 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> ($generated@@98 $generated@@144 ($generated@@78 $generated@@145)) (and (= ($generated@@70 $generated@@77 ($generated@@36 $generated@@77 $generated@@144)) $generated@@144) ($generated@@26 $generated@@77 ($generated@@36 $generated@@77 $generated@@144) ($generated@@78 $generated@@145))))
 :pattern ( ($generated@@98 $generated@@144 ($generated@@78 $generated@@145)))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@98 $generated@@146 ($generated@@80 $generated@@147)) (and (= ($generated@@70 $generated@@79 ($generated@@36 $generated@@79 $generated@@146)) $generated@@146) ($generated@@26 $generated@@79 ($generated@@36 $generated@@79 $generated@@146) ($generated@@80 $generated@@147))))
 :pattern ( ($generated@@98 $generated@@146 ($generated@@80 $generated@@147)))
)))
(assert (= ($generated@@23 $generated@@33) $generated@@4))
(assert (= ($generated@@148 $generated@@33) $generated@@6))
(assert (= ($generated@@23 $generated@@28) $generated@@5))
(assert (= ($generated@@148 $generated@@28) $generated@@6))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@70 $generated@@150 ($generated@@67 $generated@@150 $generated@@149)) ($generated@@67 $generated@@39 ($generated@@70 $generated@@150 $generated@@149)))
 :pattern ( ($generated@@70 $generated@@150 ($generated@@67 $generated@@150 $generated@@149)))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= ($generated@@24 $generated@@151) 0) (= $generated@@151 $generated@@25))
 :pattern ( ($generated@@24 $generated@@151))
)))
(assert  (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@152 $generated@@155 $generated@@156 $generated@@157 ($generated@@154 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@160 $generated@@161) $generated@@158)
 :weight 0
)) (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@152 $generated@@162 $generated@@163 $generated@@164 ($generated@@154 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@152 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@152 $generated@@171 $generated@@172 $generated@@173 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@152 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@12 ($generated@@152 $generated@@27 $generated@@38 $generated@@8 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (or (not (= $generated@@184 $generated@@180)) (not true)) ($generated@@12 ($generated@@36 $generated@@8 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@181 $generated@@184) $generated@@182)))) ($generated@@81 $generated@@183 ($generated@@70 $generated@@27 $generated@@184))))
 :pattern ( ($generated@@152 $generated@@27 $generated@@38 $generated@@8 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! ($generated@@32 $generated@@8 $generated@@187 $generated $generated@@186)
 :pattern ( ($generated@@32 $generated@@8 $generated@@187 $generated $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@26 $generated@@79 $generated@@188 ($generated@@80 $generated@@189)) (forall (($generated@@190 Int) ) (!  (=> (and (<= 0 $generated@@190) (< $generated@@190 ($generated@@24 $generated@@188))) ($generated@@98 ($generated@@131 $generated@@188 $generated@@190) $generated@@189))
 :pattern ( ($generated@@131 $generated@@188 $generated@@190))
)))
 :pattern ( ($generated@@26 $generated@@79 $generated@@188 ($generated@@80 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ) (! ($generated@@26 $generated@@8 $generated@@191 $generated)
 :pattern ( ($generated@@26 $generated@@8 $generated@@191 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Bool)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@202  (=> (= ($generated@@74 $generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@196)  (and true (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (or (not (= $generated@@203 $generated@@29)) (not true)) (=> ($generated@@81 $generated@@195 ($generated@@70 $generated@@27 $generated@@203)) (= ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@193 $generated@@203) $generated@@204) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@192 $generated@@203) $generated@@204))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@193 $generated@@203) $generated@@204))
)))) (=> (and ($generated@@26 $generated@@8 ($generated@@11 ($generated@@74 $generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) $generated) (= (ControlFlow 0 3) (- 0 2))) $generated@@197))))
(let (($generated@@205  (=> (not ($generated@@12 ($generated@@67 $generated@@8 ($generated@@11 true)))) (=> (and (= $generated@@197 true) (= (ControlFlow 0 7) 3)) $generated@@202))))
(let (($generated@@206  (=> ($generated@@12 ($generated@@67 $generated@@8 ($generated@@11 true))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> ($generated@@81 $generated@@195 ($generated@@70 $generated@@27 $generated@@198)) (or (not (= $generated@@198 $generated@@29)) (not true)))) (=> (=> ($generated@@81 $generated@@195 ($generated@@70 $generated@@27 $generated@@198)) (or (not (= $generated@@198 $generated@@29)) (not true))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> (and ($generated@@81 $generated@@195 ($generated@@70 $generated@@27 $generated@@198)) (or (not (= $generated@@198 $generated@@29)) (not true))) ($generated@@32 $generated@@27 $generated@@198 $generated@@28 $generated@@192))) (=> (=> (and ($generated@@81 $generated@@195 ($generated@@70 $generated@@27 $generated@@198)) (or (not (= $generated@@198 $generated@@29)) (not true))) ($generated@@32 $generated@@27 $generated@@198 $generated@@28 $generated@@192)) (=> (= $generated@@199 (forall (($generated@@207 T@U) ($generated@@208 T@U) )  (=> (and (and (or (not (= $generated@@207 $generated@@29)) (not true)) ($generated@@12 ($generated@@36 $generated@@8 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@193 $generated@@207) $generated@@3)))) ($generated@@81 $generated@@195 ($generated@@70 $generated@@27 $generated@@207))) ($generated@@12 ($generated@@152 $generated@@27 $generated@@38 $generated@@8 $generated@@200 $generated@@207 $generated@@208))))) (=> (and (= $generated@@197 $generated@@199) (= (ControlFlow 0 4) 3)) $generated@@202)))))))))
(let (($generated@@209 true))
(let (($generated@@210  (=> (= $generated@@200 ($generated@@153 $generated@@29 $generated@@193 $generated@@3 $generated@@195)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@209) (=> (= (ControlFlow 0 8) 4) $generated@@206)) (=> (= (ControlFlow 0 8) 7) $generated@@205)))))
(let (($generated@@211  (=> (and ($generated@@75 $generated@@192) ($generated@@89 $generated@@192)) (=> (and (and ($generated@@26 $generated@@27 $generated@@194 $generated@@28) ($generated@@32 $generated@@27 $generated@@194 $generated@@28 $generated@@193)) (and ($generated@@26 $generated@@77 $generated@@195 ($generated@@78 $generated@@28)) ($generated@@32 $generated@@77 $generated@@195 ($generated@@78 $generated@@28) $generated@@193))) (=> (and (and (and ($generated@@26 $generated@@79 $generated@@196 ($generated@@80 $generated@@28)) ($generated@@32 $generated@@79 $generated@@196 ($generated@@80 $generated@@28) $generated@@193)) (= 0 $generated@@73)) (and (and (= $generated@@201 $generated@@192) (and ($generated@@63 $generated@@201 $generated@@193) ($generated@@75 $generated@@193))) (= (ControlFlow 0 9) 8))) $generated@@210)))))
$generated@@211)))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 5))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 6))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
