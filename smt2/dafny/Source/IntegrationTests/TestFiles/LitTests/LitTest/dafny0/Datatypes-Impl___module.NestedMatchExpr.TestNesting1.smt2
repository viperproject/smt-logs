(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@26 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@41 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@127 (T@U) Bool)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@153 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert  (and (= ($generated@@7 $generated@@29) 3) (= ($generated@@7 $generated@@32) 4)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (and (or ($generated@@26 $generated@@37 $generated@@38 $generated@@39 $generated@@40) (and (< 1 $generated@@23) (and (and (and (or (not (= $generated@@38 $generated@@27)) (not true)) ($generated@@28 $generated@@29 $generated@@38 $generated@@30 $generated@@36)) (and ($generated@@31 $generated@@32 $generated@@39 ($generated@@33 $generated@@37)) ($generated@@28 $generated@@32 $generated@@39 ($generated@@33 $generated@@37) $generated@@36))) (and ($generated@@34 $generated@@40 $generated@@37) ($generated@@24 $generated@@40 $generated@@37 $generated@@36))))) ($generated@@35 $generated@@36)) ($generated@@24 ($generated@@25 $generated@@37 $generated@@38 $generated@@39 $generated@@40) $generated@@37 $generated@@36))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@37 $generated@@38 $generated@@39 $generated@@40) $generated@@37 $generated@@36))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (and (or ($generated@@42 $generated@@44 $generated@@45 $generated@@46 $generated@@47) (and (< 1 $generated@@23) (and (and (and (or (not (= $generated@@45 $generated@@27)) (not true)) ($generated@@28 $generated@@29 $generated@@45 $generated@@30 $generated@@43)) (and ($generated@@31 $generated@@32 $generated@@46 ($generated@@33 $generated@@44)) ($generated@@28 $generated@@32 $generated@@46 ($generated@@33 $generated@@44) $generated@@43))) (and ($generated@@34 $generated@@47 $generated@@44) ($generated@@24 $generated@@47 $generated@@44 $generated@@43))))) ($generated@@35 $generated@@43)) ($generated@@24 ($generated@@41 $generated@@44 $generated@@45 $generated@@46 $generated@@47) $generated@@44 $generated@@43))
 :pattern ( ($generated@@24 ($generated@@41 $generated@@44 $generated@@45 $generated@@46 $generated@@47) $generated@@44 $generated@@43))
))))
(assert (= ($generated@@48 $generated@@49) $generated@@1))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@31 $generated@@29 $generated@@52 $generated@@50)  (or (= $generated@@52 $generated@@27) (= ($generated@@51 $generated@@52) $generated@@50)))
 :pattern ( ($generated@@31 $generated@@29 $generated@@52 $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@53 $generated@@30 $generated@@54) ($generated@@28 $generated@@29 $generated@@53 $generated@@50 $generated@@54))
 :pattern ( ($generated@@28 $generated@@29 $generated@@53 $generated@@30 $generated@@54))
 :pattern ( ($generated@@28 $generated@@29 $generated@@53 $generated@@50 $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@35 $generated@@56) ($generated@@28 $generated@@32 $generated@@49 ($generated@@33 $generated@@55) $generated@@56))
 :pattern ( ($generated@@28 $generated@@32 $generated@@49 ($generated@@33 $generated@@55) $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ) (! ($generated@@31 $generated@@32 $generated@@49 ($generated@@33 $generated@@57))
 :pattern ( ($generated@@31 $generated@@32 $generated@@49 ($generated@@33 $generated@@57)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@59 $generated@@66 $generated@@67 ($generated@@63 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@70) $generated@@68)
 :weight 0
)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (or (= $generated@@75 $generated@@76) (= ($generated@@59 $generated@@71 $generated@@72 ($generated@@63 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@76) ($generated@@59 $generated@@71 $generated@@72 $generated@@74 $generated@@76)))
 :weight 0
))) (= ($generated@@7 $generated@@60) 5)) (= ($generated@@7 $generated@@61) 6)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (= ($generated@@7 ($generated@@62 $generated@@77 $generated@@78)) 7))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@65 ($generated@@62 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@62 $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@83 $generated@@50 $generated@@84)  (or (= $generated@@83 $generated@@27) ($generated@@12 ($generated@@58 $generated@@8 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@29 ($generated@@62 $generated@@60 $generated@@61) $generated@@84 $generated@@83) $generated)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@83 $generated@@50 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@31 $generated@@32 ($generated@@88 $generated@@90 $generated@@91) ($generated@@33 $generated@@89))  (and ($generated@@34 $generated@@90 $generated@@89) ($generated@@31 $generated@@32 $generated@@91 ($generated@@33 $generated@@89))))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@88 $generated@@90 $generated@@91) ($generated@@33 $generated@@89)))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@92 $generated@@93) (= ($generated@@48 $generated@@93) $generated@@1))
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@94 $generated@@95) (= ($generated@@48 $generated@@95) $generated@@2))
 :pattern ( ($generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 ($generated@@58 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@58 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@94 $generated@@99) (exists (($generated@@100 T@U) ($generated@@101 T@U) ) (= $generated@@99 ($generated@@88 $generated@@100 $generated@@101))))
 :pattern ( ($generated@@94 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@92 $generated@@102) (= $generated@@102 $generated@@49))
 :pattern ( ($generated@@92 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@24 ($generated@@96 $generated@@106 $generated@@103) $generated@@104 $generated@@105) ($generated@@28 $generated@@106 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@24 ($generated@@96 $generated@@106 $generated@@103) $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@109 T@U) ) (!  (and (= ($generated@@107 ($generated@@33 $generated@@109)) $generated@@0) (= ($generated@@108 ($generated@@33 $generated@@109)) $generated@@5))
 :pattern ( ($generated@@33 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@34 $generated@@110 $generated@@50) (and (= ($generated@@96 $generated@@29 ($generated@@58 $generated@@29 $generated@@110)) $generated@@110) ($generated@@31 $generated@@29 ($generated@@58 $generated@@29 $generated@@110) $generated@@50)))
 :pattern ( ($generated@@34 $generated@@110 $generated@@50))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@34 $generated@@111 $generated@@30) (and (= ($generated@@96 $generated@@29 ($generated@@58 $generated@@29 $generated@@111)) $generated@@111) ($generated@@31 $generated@@29 ($generated@@58 $generated@@29 $generated@@111) $generated@@30)))
 :pattern ( ($generated@@34 $generated@@111 $generated@@30))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@31 $generated@@29 $generated@@112 $generated@@30)  (and ($generated@@31 $generated@@29 $generated@@112 $generated@@50) (or (not (= $generated@@112 $generated@@27)) (not true))))
 :pattern ( ($generated@@31 $generated@@29 $generated@@112 $generated@@30))
 :pattern ( ($generated@@31 $generated@@29 $generated@@112 $generated@@50))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or ($generated@@26 $generated@@115 $generated@@116 $generated@@117 $generated@@118) (and (< 1 $generated@@23) (and (and (and (or (not (= $generated@@116 $generated@@27)) (not true)) ($generated@@31 $generated@@29 $generated@@116 $generated@@30)) ($generated@@31 $generated@@32 $generated@@117 ($generated@@33 $generated@@115))) ($generated@@34 $generated@@118 $generated@@115)))) (= ($generated@@25 $generated@@115 $generated@@116 $generated@@117 $generated@@118) (ite ($generated@@92 $generated@@117) $generated@@118 (let (($generated@@119 ($generated@@113 $generated@@117)))
(ite ($generated@@92 $generated@@119) $generated@@118 (let (($generated@@120 ($generated@@114 $generated@@119)))
$generated@@120))))))
 :pattern ( ($generated@@25 $generated@@115 $generated@@116 $generated@@117 $generated@@118))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (or ($generated@@42 $generated@@121 $generated@@122 $generated@@123 $generated@@124) (and (< 1 $generated@@23) (and (and (and (or (not (= $generated@@122 $generated@@27)) (not true)) ($generated@@31 $generated@@29 $generated@@122 $generated@@30)) ($generated@@31 $generated@@32 $generated@@123 ($generated@@33 $generated@@121))) ($generated@@34 $generated@@124 $generated@@121)))) (= ($generated@@41 $generated@@121 $generated@@122 $generated@@123 $generated@@124) (ite ($generated@@92 $generated@@123) $generated@@124 (let (($generated@@125 ($generated@@113 $generated@@123)))
(ite ($generated@@92 $generated@@125) $generated@@124 (let (($generated@@126 ($generated@@114 $generated@@125)))
$generated@@126))))))
 :pattern ( ($generated@@41 $generated@@121 $generated@@122 $generated@@123 $generated@@124))
))))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@127 $generated@@128) (or ($generated@@92 $generated@@128) ($generated@@94 $generated@@128)))
 :pattern ( ($generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@130 ($generated@@33 $generated@@129)) (or ($generated@@92 $generated@@130) ($generated@@94 $generated@@130)))
 :pattern ( ($generated@@94 $generated@@130) ($generated@@31 $generated@@32 $generated@@130 ($generated@@33 $generated@@129)))
 :pattern ( ($generated@@92 $generated@@130) ($generated@@31 $generated@@32 $generated@@130 ($generated@@33 $generated@@129)))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@34 ($generated@@96 $generated@@133 $generated@@131) $generated@@132) ($generated@@31 $generated@@133 $generated@@131 $generated@@132))
 :pattern ( ($generated@@34 ($generated@@96 $generated@@133 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@48 ($generated@@88 $generated@@134 $generated@@135)) $generated@@2)
 :pattern ( ($generated@@88 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@114 ($generated@@88 $generated@@136 $generated@@137)) $generated@@136)
 :pattern ( ($generated@@88 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@113 ($generated@@88 $generated@@138 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@88 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@140 ($generated@@33 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@33 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@58 $generated@@143 ($generated@@96 $generated@@143 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@96 $generated@@143 $generated@@142))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (< ($generated@@144 $generated@@146) ($generated@@145 ($generated@@88 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@88 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (< ($generated@@145 $generated@@149) ($generated@@145 ($generated@@88 $generated@@148 $generated@@149)))
 :pattern ( ($generated@@88 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and ($generated@@35 $generated@@152) (and ($generated@@94 $generated@@150) ($generated@@28 $generated@@32 $generated@@150 ($generated@@33 $generated@@151) $generated@@152))) ($generated@@24 ($generated@@114 $generated@@150) $generated@@151 $generated@@152))
 :pattern ( ($generated@@24 ($generated@@114 $generated@@150) $generated@@151 $generated@@152))
)))
(assert  (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@153 $generated@@156 $generated@@157 $generated@@158 ($generated@@155 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@161 $generated@@162) $generated@@159)
 :weight 0
)) (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@153 $generated@@163 $generated@@164 $generated@@165 ($generated@@155 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@153 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@153 $generated@@172 $generated@@173 $generated@@174 ($generated@@155 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@153 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@12 ($generated@@153 $generated@@29 $generated@@60 $generated@@8 ($generated@@154 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (or (not (= $generated@@185 $generated@@181)) (not true)) ($generated@@12 ($generated@@58 $generated@@8 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@29 ($generated@@62 $generated@@60 $generated@@61) $generated@@182 $generated@@185) $generated@@183)))) $generated@@184))
 :pattern ( ($generated@@153 $generated@@29 $generated@@60 $generated@@8 ($generated@@154 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (or ($generated@@26 $generated@@187 ($generated@@85 $generated@@29 $generated@@188) ($generated@@85 $generated@@32 $generated@@189) ($generated@@85 $generated@@61 $generated@@190)) (and (< 1 $generated@@23) (and (and (and (or (not (= $generated@@188 $generated@@27)) (not true)) ($generated@@31 $generated@@29 $generated@@188 $generated@@30)) ($generated@@31 $generated@@32 $generated@@189 ($generated@@33 $generated@@187))) ($generated@@34 $generated@@190 $generated@@187)))) (= ($generated@@25 $generated@@187 ($generated@@85 $generated@@29 $generated@@188) ($generated@@85 $generated@@32 $generated@@189) ($generated@@85 $generated@@61 $generated@@190)) (ite ($generated@@92 ($generated@@85 $generated@@32 $generated@@189)) $generated@@190 (let (($generated@@191 ($generated@@85 $generated@@32 ($generated@@113 ($generated@@85 $generated@@32 $generated@@189)))))
(ite ($generated@@92 $generated@@191) $generated@@190 (let (($generated@@192 ($generated@@85 $generated@@61 ($generated@@114 $generated@@191))))
$generated@@192))))))
 :weight 3
 :pattern ( ($generated@@25 $generated@@187 ($generated@@85 $generated@@29 $generated@@188) ($generated@@85 $generated@@32 $generated@@189) ($generated@@85 $generated@@61 $generated@@190)))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (or ($generated@@42 $generated@@193 ($generated@@85 $generated@@29 $generated@@194) ($generated@@85 $generated@@32 $generated@@195) ($generated@@85 $generated@@61 $generated@@196)) (and (< 1 $generated@@23) (and (and (and (or (not (= $generated@@194 $generated@@27)) (not true)) ($generated@@31 $generated@@29 $generated@@194 $generated@@30)) ($generated@@31 $generated@@32 $generated@@195 ($generated@@33 $generated@@193))) ($generated@@34 $generated@@196 $generated@@193)))) (= ($generated@@41 $generated@@193 ($generated@@85 $generated@@29 $generated@@194) ($generated@@85 $generated@@32 $generated@@195) ($generated@@85 $generated@@61 $generated@@196)) (ite ($generated@@92 ($generated@@85 $generated@@32 $generated@@195)) $generated@@196 (let (($generated@@197 ($generated@@85 $generated@@32 ($generated@@113 ($generated@@85 $generated@@32 $generated@@195)))))
(ite ($generated@@92 $generated@@197) $generated@@196 (let (($generated@@198 ($generated@@85 $generated@@61 ($generated@@114 $generated@@197))))
$generated@@198))))))
 :weight 3
 :pattern ( ($generated@@41 $generated@@193 ($generated@@85 $generated@@29 $generated@@194) ($generated@@85 $generated@@32 $generated@@195) ($generated@@85 $generated@@61 $generated@@196)))
))))
(assert (forall (($generated@@199 T@U) ) (! (= ($generated@@144 ($generated@@96 $generated@@32 $generated@@199)) ($generated@@145 $generated@@199))
 :pattern ( ($generated@@144 ($generated@@96 $generated@@32 $generated@@199)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> ($generated@@34 $generated@@201 ($generated@@33 $generated@@200)) (and (= ($generated@@96 $generated@@32 ($generated@@58 $generated@@32 $generated@@201)) $generated@@201) ($generated@@31 $generated@@32 ($generated@@58 $generated@@32 $generated@@201) ($generated@@33 $generated@@200))))
 :pattern ( ($generated@@34 $generated@@201 ($generated@@33 $generated@@200)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (or ($generated@@26 $generated@@202 $generated@@203 $generated@@204 $generated@@205) (and (< 1 $generated@@23) (and (and (and (or (not (= $generated@@203 $generated@@27)) (not true)) ($generated@@31 $generated@@29 $generated@@203 $generated@@30)) ($generated@@31 $generated@@32 $generated@@204 ($generated@@33 $generated@@202))) ($generated@@34 $generated@@205 $generated@@202)))) ($generated@@34 ($generated@@25 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@202))
 :pattern ( ($generated@@25 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (or ($generated@@42 $generated@@206 $generated@@207 $generated@@208 $generated@@209) (and (< 1 $generated@@23) (and (and (and (or (not (= $generated@@207 $generated@@27)) (not true)) ($generated@@31 $generated@@29 $generated@@207 $generated@@30)) ($generated@@31 $generated@@32 $generated@@208 ($generated@@33 $generated@@206))) ($generated@@34 $generated@@209 $generated@@206)))) ($generated@@34 ($generated@@41 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@206))
 :pattern ( ($generated@@41 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and ($generated@@35 $generated@@212) (and ($generated@@94 $generated@@210) ($generated@@28 $generated@@32 $generated@@210 ($generated@@33 $generated@@211) $generated@@212))) ($generated@@28 $generated@@32 ($generated@@113 $generated@@210) ($generated@@33 $generated@@211) $generated@@212))
 :pattern ( ($generated@@28 $generated@@32 ($generated@@113 $generated@@210) ($generated@@33 $generated@@211) $generated@@212))
)))
(assert (= ($generated@@107 $generated@@50) $generated@@3))
(assert (= ($generated@@108 $generated@@50) $generated@@6))
(assert (= ($generated@@107 $generated@@30) $generated@@4))
(assert (= ($generated@@108 $generated@@30) $generated@@6))
(assert (= $generated@@49 ($generated@@85 $generated@@32 $generated@@49)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (or ($generated@@26 $generated@@213 $generated@@214 ($generated@@85 $generated@@32 $generated@@215) $generated@@216) (and (< 1 $generated@@23) (and (and (and (or (not (= $generated@@214 $generated@@27)) (not true)) ($generated@@31 $generated@@29 $generated@@214 $generated@@30)) ($generated@@31 $generated@@32 $generated@@215 ($generated@@33 $generated@@213))) ($generated@@34 $generated@@216 $generated@@213)))) (= ($generated@@25 $generated@@213 $generated@@214 ($generated@@85 $generated@@32 $generated@@215) $generated@@216) (ite ($generated@@92 ($generated@@85 $generated@@32 $generated@@215)) $generated@@216 (let (($generated@@217 ($generated@@85 $generated@@32 ($generated@@113 ($generated@@85 $generated@@32 $generated@@215)))))
(ite ($generated@@92 $generated@@217) $generated@@216 (let (($generated@@218 ($generated@@85 $generated@@61 ($generated@@114 $generated@@217))))
$generated@@218))))))
 :weight 3
 :pattern ( ($generated@@25 $generated@@213 $generated@@214 ($generated@@85 $generated@@32 $generated@@215) $generated@@216))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (or ($generated@@42 $generated@@219 $generated@@220 ($generated@@85 $generated@@32 $generated@@221) $generated@@222) (and (< 1 $generated@@23) (and (and (and (or (not (= $generated@@220 $generated@@27)) (not true)) ($generated@@31 $generated@@29 $generated@@220 $generated@@30)) ($generated@@31 $generated@@32 $generated@@221 ($generated@@33 $generated@@219))) ($generated@@34 $generated@@222 $generated@@219)))) (= ($generated@@41 $generated@@219 $generated@@220 ($generated@@85 $generated@@32 $generated@@221) $generated@@222) (ite ($generated@@92 ($generated@@85 $generated@@32 $generated@@221)) $generated@@222 (let (($generated@@223 ($generated@@85 $generated@@32 ($generated@@113 ($generated@@85 $generated@@32 $generated@@221)))))
(ite ($generated@@92 $generated@@223) $generated@@222 (let (($generated@@224 ($generated@@85 $generated@@61 ($generated@@114 $generated@@223))))
$generated@@224))))))
 :weight 3
 :pattern ( ($generated@@41 $generated@@219 $generated@@220 ($generated@@85 $generated@@32 $generated@@221) $generated@@222))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@88 ($generated@@85 $generated@@61 $generated@@225) ($generated@@85 $generated@@32 $generated@@226)) ($generated@@85 $generated@@32 ($generated@@88 $generated@@225 $generated@@226)))
 :pattern ( ($generated@@88 ($generated@@85 $generated@@61 $generated@@225) ($generated@@85 $generated@@32 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@T) ) (! (= ($generated@@96 $generated@@228 ($generated@@85 $generated@@228 $generated@@227)) ($generated@@85 $generated@@61 ($generated@@96 $generated@@228 $generated@@227)))
 :pattern ( ($generated@@96 $generated@@228 ($generated@@85 $generated@@228 $generated@@227)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> ($generated@@35 $generated@@232) (= ($generated@@28 $generated@@32 ($generated@@88 $generated@@230 $generated@@231) ($generated@@33 $generated@@229) $generated@@232)  (and ($generated@@24 $generated@@230 $generated@@229 $generated@@232) ($generated@@28 $generated@@32 $generated@@231 ($generated@@33 $generated@@229) $generated@@232))))
 :pattern ( ($generated@@28 $generated@@32 ($generated@@88 $generated@@230 $generated@@231) ($generated@@33 $generated@@229) $generated@@232))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@246  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@58 $generated@@29 ($generated@@25 $generated@@30 $generated@@233 $generated@@234 ($generated@@96 $generated@@29 $generated@@233))) ($generated@@58 $generated@@29 ($generated@@41 $generated@@30 $generated@@233 $generated@@234 ($generated@@96 $generated@@29 $generated@@233)))))))
(let (($generated@@247  (=> (and (and (= $generated@@235 ($generated@@88 ($generated@@96 $generated@@29 $generated@@236) $generated@@237)) ($generated@@31 $generated@@29 $generated@@236 $generated@@30)) (and ($generated@@31 $generated@@32 $generated@@237 ($generated@@33 $generated@@30)) (= (ControlFlow 0 7) 4))) $generated@@246)))
(let (($generated@@248  (=> (and (= $generated@@235 $generated@@49) (= (ControlFlow 0 6) 4)) $generated@@246)))
(let (($generated@@249  (=> (and (= $generated@@234 $generated@@49) (= (ControlFlow 0 5) 4)) $generated@@246)))
(let (($generated@@250 true))
(let (($generated@@251  (=> (or (not (= $generated@@235 $generated@@49)) (not true)) (and (=> (= (ControlFlow 0 8) 7) $generated@@247) (=> (= (ControlFlow 0 8) 2) $generated@@250)))))
(let (($generated@@252  (=> (= $generated@@234 ($generated@@88 ($generated@@96 $generated@@29 $generated@@238) $generated@@239)) (=> (and ($generated@@31 $generated@@29 $generated@@238 $generated@@30) ($generated@@31 $generated@@32 $generated@@239 ($generated@@33 $generated@@30))) (=> (and (and (and (and ($generated@@31 $generated@@32 $generated@@235 ($generated@@33 $generated@@30)) ($generated@@28 $generated@@32 $generated@@235 ($generated@@33 $generated@@30) $generated@@240)) (= $generated@@241 $generated@@239)) (and ($generated@@31 $generated@@32 $generated@@241 ($generated@@33 $generated@@30)) (= $generated@@235 $generated@@241))) (and (and (and ($generated@@31 $generated@@29 $generated@@242 $generated@@30) ($generated@@28 $generated@@29 $generated@@242 $generated@@30 $generated@@240)) (= $generated@@243 $generated@@238)) (and ($generated@@31 $generated@@29 $generated@@243 $generated@@30) (= $generated@@242 $generated@@243)))) (and (=> (= (ControlFlow 0 9) 6) $generated@@248) (=> (= (ControlFlow 0 9) 8) $generated@@251)))))))
(let (($generated@@253 true))
(let (($generated@@254  (=> (or (not (= $generated@@234 $generated@@49)) (not true)) (and (=> (= (ControlFlow 0 10) 9) $generated@@252) (=> (= (ControlFlow 0 10) 1) $generated@@253)))))
(let (($generated@@255  (=> (= $generated@@244 ($generated@@154 $generated@@27 $generated@@240 $generated false)) (and (=> (= (ControlFlow 0 11) 5) $generated@@249) (=> (= (ControlFlow 0 11) 10) $generated@@254)))))
(let (($generated@@256  (=> (and (and ($generated@@35 $generated@@240) ($generated@@245 $generated@@240)) (and (or (not (= $generated@@233 $generated@@27)) (not true)) (and ($generated@@31 $generated@@29 $generated@@233 $generated@@30) ($generated@@28 $generated@@29 $generated@@233 $generated@@30 $generated@@240)))) (=> (and (and (and ($generated@@31 $generated@@32 $generated@@234 ($generated@@33 $generated@@30)) ($generated@@28 $generated@@32 $generated@@234 ($generated@@33 $generated@@30) $generated@@240)) ($generated@@127 $generated@@234)) (and (= 2 $generated@@23) (= (ControlFlow 0 12) 11))) $generated@@255))))
$generated@@256))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
