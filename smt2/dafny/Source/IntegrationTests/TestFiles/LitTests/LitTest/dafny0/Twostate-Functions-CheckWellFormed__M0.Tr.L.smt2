(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () Int)
(declare-fun $generated@@30 (T@U T@U T@U T@U T@U) Int)
(declare-fun $generated@@31 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@74 (T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@102 (Int) Int)
(declare-fun $generated@@104 (T@T T@U) T@U)
(declare-fun $generated@@107 (T@T T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@139 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) 0))
(assert (= ($generated@@28 $generated) $generated@@0))
(assert  (and (and (and (and (and (and (and (= ($generated@@11 $generated@@36) 3) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@41 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@41 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@41 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@11 $generated@@42) 4)) (= ($generated@@11 $generated@@43) 5)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@11 ($generated@@44 $generated@@61 $generated@@62)) 6))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@44 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@44 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@44 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@44 $generated@@65 $generated@@66))
))))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (or ($generated@@31 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71) (and (< 2 $generated@@29) (and (and (and (and (and (and ($generated@@32 $generated@@67) ($generated@@32 $generated@@68)) ($generated@@33 $generated@@67 $generated@@68)) (and (or (not (= $generated@@69 $generated@@34)) (not true)) (and ($generated@@35 $generated@@36 $generated@@69 $generated@@37) ($generated@@38 $generated@@36 $generated@@69 $generated@@37 $generated@@67)))) (and ($generated@@35 $generated@@36 $generated@@70 $generated@@39) ($generated@@38 $generated@@36 $generated@@70 $generated@@39 $generated@@67))) (and ($generated@@35 $generated@@36 $generated@@71 $generated@@40) ($generated@@38 $generated@@36 $generated@@71 $generated@@40 $generated@@68))) (or (= $generated@@70 $generated@@34) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (or (not (= $generated@@72 $generated@@34)) (not true)) (=> (= $generated@@72 $generated@@70) (= ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@68 $generated@@72) $generated@@73) ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@67 $generated@@72) $generated@@73))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@68 $generated@@72) $generated@@73))
)))))) (=> (or (not (= $generated@@70 $generated@@34)) (not true)) (<= ($generated@@18 ($generated@@45 $generated@@13 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@67 $generated@@70) $generated@@46))) ($generated@@30 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71))))
 :pattern ( ($generated@@30 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and (and (and (and ($generated@@32 $generated@@76) ($generated@@32 $generated@@77)) (and (or (not (= $generated@@78 $generated@@34)) (not true)) ($generated@@35 $generated@@36 $generated@@78 $generated@@37))) (or ($generated@@31 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@80) (and ($generated@@35 $generated@@36 $generated@@79 $generated@@39) ($generated@@35 $generated@@36 $generated@@80 $generated@@40)))) (and ($generated@@74 $generated@@76) ($generated@@33 $generated@@76 $generated@@77))) (=> (forall (($generated@@81 T@U) ($generated@@82 T@U) )  (=> (and (or (not (= $generated@@81 $generated@@34)) (not true)) (or (= $generated@@81 $generated@@79) (= $generated@@81 $generated@@80))) (= ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@76 $generated@@81) $generated@@82) ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@77 $generated@@81) $generated@@82)))) (= ($generated@@30 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@80) ($generated@@30 $generated@@75 $generated@@77 $generated@@78 $generated@@79 $generated@@80))))
 :pattern ( ($generated@@74 $generated@@76) ($generated@@33 $generated@@76 $generated@@77) ($generated@@30 $generated@@75 $generated@@77 $generated@@78 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! ($generated@@38 $generated@@13 $generated@@84 $generated@@83 $generated@@85)
 :pattern ( ($generated@@38 $generated@@13 $generated@@84 $generated@@83 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@87 $generated@@39)  (or (= $generated@@87 $generated@@34) (= ($generated@@86 $generated@@87) $generated@@39)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@87 $generated@@39))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@38 $generated@@36 $generated@@88 $generated@@40 $generated@@89) ($generated@@38 $generated@@36 $generated@@88 $generated@@39 $generated@@89))
 :pattern ( ($generated@@38 $generated@@36 $generated@@88 $generated@@40 $generated@@89))
 :pattern ( ($generated@@38 $generated@@36 $generated@@88 $generated@@39 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@38 $generated@@36 $generated@@91 $generated@@37 $generated@@92) ($generated@@38 $generated@@36 $generated@@91 $generated@@90 $generated@@92))
 :pattern ( ($generated@@38 $generated@@36 $generated@@91 $generated@@37 $generated@@92))
 :pattern ( ($generated@@38 $generated@@36 $generated@@91 $generated@@90 $generated@@92))
)))
(assert (= ($generated@@27 $generated@@46) 0))
(assert (= ($generated@@93 $generated@@3 $generated@@10) $generated@@46))
(assert  (not ($generated@@94 $generated@@46)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@38 $generated@@36 $generated@@95 $generated@@39 $generated@@96)  (or (= $generated@@95 $generated@@34) ($generated@@16 ($generated@@45 $generated@@12 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@96 $generated@@95) $generated)))))
 :pattern ( ($generated@@38 $generated@@36 $generated@@95 $generated@@39 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@38 $generated@@36 $generated@@97 $generated@@90 $generated@@98)  (or (= $generated@@97 $generated@@34) ($generated@@16 ($generated@@45 $generated@@12 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@98 $generated@@97) $generated)))))
 :pattern ( ($generated@@38 $generated@@36 $generated@@97 $generated@@90 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@33 $generated@@99 $generated@@100) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@16 ($generated@@45 $generated@@12 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@99 $generated@@101) $generated))) ($generated@@16 ($generated@@45 $generated@@12 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@100 $generated@@101) $generated))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@100 $generated@@101) $generated))
)))
 :pattern ( ($generated@@33 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@103 Int) ) (! (= ($generated@@102 $generated@@103) $generated@@103)
 :pattern ( ($generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@104 $generated@@106 $generated@@105) $generated@@105)
 :pattern ( ($generated@@104 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@107 $generated@@109 ($generated@@45 $generated@@109 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@45 $generated@@109 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@35 $generated@@13 $generated@@110 $generated@@83) (<= ($generated@@102 0) ($generated@@18 $generated@@110)))
 :pattern ( ($generated@@35 $generated@@13 $generated@@110 $generated@@83))
)))
(assert ($generated@@94 $generated))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@111 ($generated@@107 $generated@@115 $generated@@112) $generated@@113 $generated@@114) ($generated@@38 $generated@@115 $generated@@112 $generated@@113 $generated@@114))
 :pattern ( ($generated@@111 ($generated@@107 $generated@@115 $generated@@112) $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> ($generated@@33 $generated@@116 $generated@@117) (=> ($generated@@111 $generated@@118 $generated@@119 $generated@@116) ($generated@@111 $generated@@118 $generated@@119 $generated@@117)))
 :pattern ( ($generated@@33 $generated@@116 $generated@@117) ($generated@@111 $generated@@118 $generated@@119 $generated@@116))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (!  (=> ($generated@@33 $generated@@120 $generated@@121) (=> ($generated@@38 $generated@@124 $generated@@122 $generated@@123 $generated@@120) ($generated@@38 $generated@@124 $generated@@122 $generated@@123 $generated@@121)))
 :pattern ( ($generated@@33 $generated@@120 $generated@@121) ($generated@@38 $generated@@124 $generated@@122 $generated@@123 $generated@@120))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@32 $generated@@125) (and (or (not (= $generated@@126 $generated@@34)) (not true)) (= ($generated@@86 $generated@@126) $generated@@39))) ($generated@@35 $generated@@13 ($generated@@45 $generated@@13 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@125 $generated@@126) $generated@@46)) $generated@@83))
 :pattern ( ($generated@@45 $generated@@13 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@125 $generated@@126) $generated@@46)))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@127 $generated@@40)  (and ($generated@@35 $generated@@36 $generated@@127 $generated@@39) (or (not (= $generated@@127 $generated@@34)) (not true))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@127 $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@127 $generated@@39))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@128 $generated@@37)  (and ($generated@@35 $generated@@36 $generated@@128 $generated@@90) (or (not (= $generated@@128 $generated@@34)) (not true))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@128 $generated@@37))
 :pattern ( ($generated@@35 $generated@@36 $generated@@128 $generated@@90))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and (and ($generated@@32 $generated@@129) (and (or (not (= $generated@@130 $generated@@34)) (not true)) (= ($generated@@86 $generated@@130) $generated@@39))) ($generated@@16 ($generated@@45 $generated@@12 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@129 $generated@@130) $generated)))) ($generated@@38 $generated@@13 ($generated@@45 $generated@@13 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@129 $generated@@130) $generated@@46)) $generated@@83 $generated@@129))
 :pattern ( ($generated@@45 $generated@@13 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@129 $generated@@130) $generated@@46)))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (or (not (= $generated@@131 $generated@@133)) (not true)) (=> (and ($generated@@33 $generated@@131 $generated@@132) ($generated@@33 $generated@@132 $generated@@133)) ($generated@@33 $generated@@131 $generated@@133)))
 :pattern ( ($generated@@33 $generated@@131 $generated@@132) ($generated@@33 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (and (= ($generated@@134 ($generated@@93 $generated@@135 $generated@@136)) $generated@@135) (= ($generated@@28 ($generated@@93 $generated@@135 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@93 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@45 $generated@@138 ($generated@@107 $generated@@138 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@107 $generated@@138 $generated@@137))
)))
(assert  (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@139 $generated@@142 $generated@@143 $generated@@144 ($generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@147 $generated@@148) $generated@@145)
 :weight 0
)) (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@139 $generated@@149 $generated@@150 $generated@@151 ($generated@@141 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@139 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@139 $generated@@158 $generated@@159 $generated@@160 ($generated@@141 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@139 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 Bool) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@16 ($generated@@139 $generated@@36 $generated@@42 $generated@@12 ($generated@@140 $generated@@167 $generated@@168 $generated@@169 $generated@@170) $generated@@171 $generated@@172))  (=> (and (or (not (= $generated@@171 $generated@@167)) (not true)) ($generated@@16 ($generated@@45 $generated@@12 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@168 $generated@@171) $generated@@169)))) $generated@@170))
 :pattern ( ($generated@@139 $generated@@36 $generated@@42 $generated@@12 ($generated@@140 $generated@@167 $generated@@168 $generated@@169 $generated@@170) $generated@@171 $generated@@172))
)))
(assert (= ($generated@@173 $generated@@83) $generated@@1))
(assert (= ($generated@@174 $generated@@83) $generated@@7))
(assert (= ($generated@@173 $generated@@40) $generated@@2))
(assert (= ($generated@@174 $generated@@40) $generated@@8))
(assert (= ($generated@@173 $generated@@39) $generated@@4))
(assert (= ($generated@@174 $generated@@39) $generated@@8))
(assert (= ($generated@@173 $generated@@90) $generated@@5))
(assert (= ($generated@@174 $generated@@90) $generated@@9))
(assert (= ($generated@@173 $generated@@37) $generated@@6))
(assert (= ($generated@@174 $generated@@37) $generated@@9))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@176 $generated@@90)  (or (= $generated@@176 $generated@@34) ($generated@@175 ($generated@@86 $generated@@176))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@176 $generated@@90))
)))
(assert (forall (($generated@@177 Int) ) (! (= ($generated@@107 $generated@@13 ($generated@@17 ($generated@@102 $generated@@177))) ($generated@@104 $generated@@43 ($generated@@107 $generated@@13 ($generated@@17 $generated@@177))))
 :pattern ( ($generated@@107 $generated@@13 ($generated@@17 ($generated@@102 $generated@@177))))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@T) ) (! (= ($generated@@107 $generated@@179 ($generated@@104 $generated@@179 $generated@@178)) ($generated@@104 $generated@@43 ($generated@@107 $generated@@179 $generated@@178)))
 :pattern ( ($generated@@107 $generated@@179 ($generated@@104 $generated@@179 $generated@@178)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@187  (=> (= $generated@@180 ($generated@@140 $generated@@34 $generated@@181 $generated false)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@38 $generated@@36 $generated@@182 $generated@@40 $generated@@183)) (=> ($generated@@38 $generated@@36 $generated@@182 $generated@@40 $generated@@183) (=> (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (or (not (= $generated@@188 $generated@@34)) (not true)) (=> (= $generated@@188 $generated@@182) (= ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@181 $generated@@188) $generated@@189) ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@183 $generated@@188) $generated@@189))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@181 $generated@@188) $generated@@189))
)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (not (= $generated@@182 $generated@@34)) (not true))) (=> (or (not (= $generated@@182 $generated@@34)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@38 $generated@@36 $generated@@182 $generated@@40 $generated@@183)) (=> ($generated@@38 $generated@@36 $generated@@182 $generated@@40 $generated@@183) (=> ($generated@@111 ($generated@@107 $generated@@36 $generated@@184) $generated@@90 $generated@@181) (=> (and ($generated@@38 $generated@@36 $generated@@182 $generated@@39 $generated@@181) ($generated@@38 $generated@@36 $generated@@185 $generated@@40 $generated@@181)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@38 $generated@@36 $generated@@184 $generated@@37 $generated@@183)) (=> ($generated@@38 $generated@@36 $generated@@184 $generated@@37 $generated@@183) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@38 $generated@@36 $generated@@182 $generated@@40 $generated@@183)) (=> ($generated@@38 $generated@@36 $generated@@182 $generated@@40 $generated@@183) (=> (= (ControlFlow 0 2) (- 0 1)) (or (= $generated@@182 $generated@@34) (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (or (not (= $generated@@190 $generated@@34)) (not true)) (=> (= $generated@@190 $generated@@182) (= ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@181 $generated@@190) $generated@@191) ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@183 $generated@@190) $generated@@191))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@36 ($generated@@44 $generated@@42 $generated@@43) $generated@@181 $generated@@190) $generated@@191))
))))))))))))))))))))
(let (($generated@@192  (=> (and ($generated@@32 $generated@@183) ($generated@@74 $generated@@183)) (=> (and (and (or (not (= $generated@@184 $generated@@34)) (not true)) (and ($generated@@35 $generated@@36 $generated@@184 $generated@@37) ($generated@@38 $generated@@36 $generated@@184 $generated@@37 $generated@@186))) (and ($generated@@35 $generated@@36 $generated@@182 $generated@@40) ($generated@@38 $generated@@36 $generated@@182 $generated@@40 $generated@@186))) (=> (and (and (and ($generated@@35 $generated@@36 $generated@@185 $generated@@40) ($generated@@38 $generated@@36 $generated@@185 $generated@@40 $generated@@181)) (= 3 $generated@@29)) (and (and (= $generated@@186 $generated@@183) (and ($generated@@33 $generated@@186 $generated@@181) ($generated@@32 $generated@@181))) (and ($generated@@38 $generated@@36 $generated@@182 $generated@@40 $generated@@186) (= (ControlFlow 0 8) 2)))) $generated@@187)))))
$generated@@192)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
