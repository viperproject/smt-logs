(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U T@U) Bool)
(declare-fun $generated@@0 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@1 () T@T)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 (T@T T@T) T@T)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (T@T T@U) T@U)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@17 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@18 (T@T) T@T)
(declare-fun $generated@@19 (T@T) T@T)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@61 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@8) 0) (= ($generated@@9 $generated@@10) 1)) (= ($generated@@9 $generated@@11) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@6 ($generated@@12 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@12 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@12 ($generated@@6 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@6 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@13 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@14 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@15 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@16 $generated@@25))
))) (forall (($generated@@26 T@T) ($generated@@27 T@T) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@0 $generated@@26 $generated@@27 ($generated@@17 $generated@@26 $generated@@27 $generated@@29 $generated@@30 $generated@@28) $generated@@30) $generated@@28)
 :weight 0
))) (forall (($generated@@31 T@T) ($generated@@32 T@T) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (or (= $generated@@35 $generated@@36) (= ($generated@@0 $generated@@31 $generated@@32 ($generated@@17 $generated@@31 $generated@@32 $generated@@34 $generated@@35 $generated@@33) $generated@@36) ($generated@@0 $generated@@31 $generated@@32 $generated@@34 $generated@@36)))
 :weight 0
))) (= ($generated@@9 $generated@@1) 3)) (= ($generated@@9 $generated@@2) 4)) (= ($generated@@9 $generated@@3) 5)) (forall (($generated@@37 T@T) ($generated@@38 T@T) ) (= ($generated@@9 ($generated@@4 $generated@@37 $generated@@38)) 6))) (forall (($generated@@39 T@T) ($generated@@40 T@T) ) (! (= ($generated@@18 ($generated@@4 $generated@@39 $generated@@40)) $generated@@39)
 :pattern ( ($generated@@4 $generated@@39 $generated@@40))
))) (forall (($generated@@41 T@T) ($generated@@42 T@T) ) (! (= ($generated@@19 ($generated@@4 $generated@@41 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@4 $generated@@41 $generated@@42))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated $generated@@43 $generated@@44) (forall (($generated@@45 T@U) ) (!  (=> ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@43 $generated@@45) $generated@@5))) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@44 $generated@@45) $generated@@5))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@44 $generated@@45) $generated@@5))
)))
 :pattern ( ($generated $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@47 Int) ) (! (= ($generated@@46 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 ($generated@@7 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@7 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (or (not (= $generated@@54 $generated@@56)) (not true)) (=> (and ($generated $generated@@54 $generated@@55) ($generated $generated@@55 $generated@@56)) ($generated $generated@@54 $generated@@56)))
 :pattern ( ($generated $generated@@54 $generated@@55) ($generated $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@7 $generated@@58 ($generated@@51 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@51 $generated@@58 $generated@@57))
)))
(assert  (and (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@59 $generated@@62 $generated@@63 $generated@@64 ($generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@68 $generated@@65) $generated@@67 $generated@@68) $generated@@65)
 :weight 0
)) (and (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@74 $generated@@76) (= ($generated@@59 $generated@@69 $generated@@70 $generated@@71 ($generated@@61 $generated@@69 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@75 $generated@@72) $generated@@76 $generated@@77) ($generated@@59 $generated@@69 $generated@@70 $generated@@71 $generated@@73 $generated@@76 $generated@@77)))
 :weight 0
)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or (= $generated@@84 $generated@@86) (= ($generated@@59 $generated@@78 $generated@@79 $generated@@80 ($generated@@61 $generated@@78 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@84 $generated@@81) $generated@@85 $generated@@86) ($generated@@59 $generated@@78 $generated@@79 $generated@@80 $generated@@82 $generated@@85 $generated@@86)))
 :weight 0
)))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 Bool) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@6 ($generated@@59 $generated@@3 $generated@@1 $generated@@8 ($generated@@60 $generated@@87 $generated@@88 $generated@@89 $generated@@90) $generated@@91 $generated@@92))  (=> (and (or (not (= $generated@@91 $generated@@87)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@88 $generated@@91) $generated@@89)))) $generated@@90))
 :pattern ( ($generated@@59 $generated@@3 $generated@@1 $generated@@8 ($generated@@60 $generated@@87 $generated@@88 $generated@@89 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 Int) ) (! (= ($generated@@51 $generated@@10 ($generated@@13 ($generated@@46 $generated@@93))) ($generated@@48 $generated@@2 ($generated@@51 $generated@@10 ($generated@@13 $generated@@93))))
 :pattern ( ($generated@@51 $generated@@10 ($generated@@13 ($generated@@46 $generated@@93))))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@51 $generated@@95 ($generated@@48 $generated@@95 $generated@@94)) ($generated@@48 $generated@@2 ($generated@@51 $generated@@95 $generated@@94)))
 :pattern ( ($generated@@51 $generated@@95 ($generated@@48 $generated@@95 $generated@@94)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@96 () T@U)
(declare-fun $generated@@97 () T@U)
(declare-fun $generated@@98 () T@U)
(declare-fun $generated@@99 () (_ BitVec 67))
(declare-fun $generated@@100 (T@U) (_ BitVec 67))
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 ((_ BitVec 67)) T@U)
(declare-fun $generated@@103 () (_ BitVec 67))
(declare-fun $generated@@104 (T@U) Bool)
(declare-fun $generated@@105 () T@U)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@107 () (_ BitVec 64))
(declare-fun $generated@@108 (T@U) (_ BitVec 64))
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 ((_ BitVec 64)) T@U)
(declare-fun $generated@@111 () (_ BitVec 64))
(declare-fun $generated@@112 () T@U)
(declare-fun $generated@@113 () (_ BitVec 53))
(declare-fun $generated@@114 (T@U) (_ BitVec 53))
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 ((_ BitVec 53)) T@U)
(declare-fun $generated@@117 () (_ BitVec 53))
(declare-fun $generated@@118 () T@U)
(declare-fun $generated@@119 () (_ BitVec 33))
(declare-fun $generated@@120 (T@U) (_ BitVec 33))
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 ((_ BitVec 33)) T@U)
(declare-fun $generated@@123 () (_ BitVec 33))
(declare-fun $generated@@124 () T@U)
(declare-fun $generated@@125 () (_ BitVec 32))
(declare-fun $generated@@126 (T@U) (_ BitVec 32))
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 ((_ BitVec 32)) T@U)
(declare-fun $generated@@129 () (_ BitVec 32))
(declare-fun $generated@@130 () T@U)
(declare-fun $generated@@131 () (_ BitVec 31))
(declare-fun $generated@@132 (T@U) (_ BitVec 31))
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 ((_ BitVec 31)) T@U)
(declare-fun $generated@@135 () (_ BitVec 31))
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 () (_ BitVec 16))
(declare-fun $generated@@138 (T@U) (_ BitVec 16))
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 ((_ BitVec 16)) T@U)
(declare-fun $generated@@141 () (_ BitVec 16))
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () (_ BitVec 15))
(declare-fun $generated@@144 (T@U) (_ BitVec 15))
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 ((_ BitVec 15)) T@U)
(declare-fun $generated@@147 () (_ BitVec 15))
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () (_ BitVec 8))
(declare-fun $generated@@150 (T@U) (_ BitVec 8))
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 ((_ BitVec 8)) T@U)
(declare-fun $generated@@153 () (_ BitVec 8))
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () (_ BitVec 6))
(declare-fun $generated@@156 (T@U) (_ BitVec 6))
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@158 ((_ BitVec 6)) T@U)
(declare-fun $generated@@159 () (_ BitVec 6))
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () (_ BitVec 1))
(declare-fun $generated@@162 (T@U) (_ BitVec 1))
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@164 ((_ BitVec 1)) T@U)
(declare-fun $generated@@165 () (_ BitVec 1))
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () Int)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () (_ BitVec 2))
(declare-fun $generated@@171 (T@U) (_ BitVec 2))
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 ((_ BitVec 2)) T@U)
(declare-fun $generated@@174 () (_ BitVec 2))
(declare-fun $generated@@175 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@101) 7) (forall (($generated@@176 (_ BitVec 67)) ) (! (= ($generated@@100 ($generated@@102 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@102 $generated@@176))
))) (forall (($generated@@177 T@U) ) (! (= ($generated@@102 ($generated@@100 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@100 $generated@@177))
))) (= ($generated@@9 $generated@@109) 8)) (forall (($generated@@178 (_ BitVec 64)) ) (! (= ($generated@@108 ($generated@@110 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@110 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= ($generated@@110 ($generated@@108 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@108 $generated@@179))
))) (= ($generated@@9 $generated@@115) 9)) (forall (($generated@@180 (_ BitVec 53)) ) (! (= ($generated@@114 ($generated@@116 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@116 $generated@@180))
))) (forall (($generated@@181 T@U) ) (! (= ($generated@@116 ($generated@@114 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@114 $generated@@181))
))) (= ($generated@@9 $generated@@121) 10)) (forall (($generated@@182 (_ BitVec 33)) ) (! (= ($generated@@120 ($generated@@122 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@122 $generated@@182))
))) (forall (($generated@@183 T@U) ) (! (= ($generated@@122 ($generated@@120 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@120 $generated@@183))
))) (= ($generated@@9 $generated@@127) 11)) (forall (($generated@@184 (_ BitVec 32)) ) (! (= ($generated@@126 ($generated@@128 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@128 $generated@@184))
))) (forall (($generated@@185 T@U) ) (! (= ($generated@@128 ($generated@@126 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@126 $generated@@185))
))) (= ($generated@@9 $generated@@133) 12)) (forall (($generated@@186 (_ BitVec 31)) ) (! (= ($generated@@132 ($generated@@134 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@134 $generated@@186))
))) (forall (($generated@@187 T@U) ) (! (= ($generated@@134 ($generated@@132 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@132 $generated@@187))
))) (= ($generated@@9 $generated@@139) 13)) (forall (($generated@@188 (_ BitVec 16)) ) (! (= ($generated@@138 ($generated@@140 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@140 $generated@@188))
))) (forall (($generated@@189 T@U) ) (! (= ($generated@@140 ($generated@@138 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@138 $generated@@189))
))) (= ($generated@@9 $generated@@145) 14)) (forall (($generated@@190 (_ BitVec 15)) ) (! (= ($generated@@144 ($generated@@146 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@146 $generated@@190))
))) (forall (($generated@@191 T@U) ) (! (= ($generated@@146 ($generated@@144 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@144 $generated@@191))
))) (= ($generated@@9 $generated@@151) 15)) (forall (($generated@@192 (_ BitVec 8)) ) (! (= ($generated@@150 ($generated@@152 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@152 $generated@@192))
))) (forall (($generated@@193 T@U) ) (! (= ($generated@@152 ($generated@@150 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@150 $generated@@193))
))) (= ($generated@@9 $generated@@157) 16)) (forall (($generated@@194 (_ BitVec 6)) ) (! (= ($generated@@156 ($generated@@158 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@158 $generated@@194))
))) (forall (($generated@@195 T@U) ) (! (= ($generated@@158 ($generated@@156 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@156 $generated@@195))
))) (= ($generated@@9 $generated@@163) 17)) (forall (($generated@@196 (_ BitVec 1)) ) (! (= ($generated@@162 ($generated@@164 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@164 $generated@@196))
))) (forall (($generated@@197 T@U) ) (! (= ($generated@@164 ($generated@@162 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@162 $generated@@197))
))) (= ($generated@@9 $generated@@172) 18)) (forall (($generated@@198 (_ BitVec 2)) ) (! (= ($generated@@171 ($generated@@173 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@173 $generated@@198))
))) (forall (($generated@@199 T@U) ) (! (= ($generated@@173 ($generated@@171 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@171 $generated@@199))
))))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@200  (=> (= $generated@@96 ($generated@@60 $generated@@97 $generated@@98 $generated@@5 false)) (=> (and (and (= $generated@@99 ($generated@@100 ($generated@@48 $generated@@101 ($generated@@102 (bvsub #b0000000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000001))))) (= $generated@@103 ($generated@@100 ($generated@@48 $generated@@101 ($generated@@102 #b0000000000000000000000000000000000000000000000000000000000000000011))))) (and ($generated@@104 $generated@@105) ($generated@@106 $generated@@105))) (=> (and (and (and (forall (($generated@@201 T@U) ) (!  (=> (and (or (not (= $generated@@201 $generated@@97)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@201) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@105 $generated@@201) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@98 $generated@@201)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@105 $generated@@201))
)) ($generated $generated@@98 $generated@@105)) (and (= $generated@@107 ($generated@@108 ($generated@@48 $generated@@109 ($generated@@110 (bvsub #x0000000000000000 #x0000000000000001))))) (= $generated@@111 ($generated@@108 ($generated@@48 $generated@@109 ($generated@@110 #x0000000000000003)))))) (and (and ($generated@@104 $generated@@112) ($generated@@106 $generated@@112)) (and (forall (($generated@@202 T@U) ) (!  (=> (and (or (not (= $generated@@202 $generated@@97)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@105 $generated@@202) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@112 $generated@@202) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@105 $generated@@202)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@112 $generated@@202))
)) ($generated $generated@@105 $generated@@112)))) (=> (and (and (and (and (and (and (= $generated@@113 ($generated@@114 ($generated@@48 $generated@@115 ($generated@@116 (bvsub #b00000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000000000000000000000001))))) (= $generated@@117 ($generated@@114 ($generated@@48 $generated@@115 ($generated@@116 #b00000000000000000000000000000000000000000000000000011))))) (and ($generated@@104 $generated@@118) ($generated@@106 $generated@@118))) (and (and (forall (($generated@@203 T@U) ) (!  (=> (and (or (not (= $generated@@203 $generated@@97)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@112 $generated@@203) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@118 $generated@@203) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@112 $generated@@203)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@118 $generated@@203))
)) ($generated $generated@@112 $generated@@118)) (and (= $generated@@119 ($generated@@120 ($generated@@48 $generated@@121 ($generated@@122 (bvsub #b000000000000000000000000000000000 #b000000000000000000000000000000001))))) (= $generated@@123 ($generated@@120 ($generated@@48 $generated@@121 ($generated@@122 #b000000000000000000000000000000011))))))) (and (and (and ($generated@@104 $generated@@124) ($generated@@106 $generated@@124)) (and (forall (($generated@@204 T@U) ) (!  (=> (and (or (not (= $generated@@204 $generated@@97)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@118 $generated@@204) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@124 $generated@@204) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@118 $generated@@204)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@124 $generated@@204))
)) ($generated $generated@@118 $generated@@124))) (and (and (= $generated@@125 ($generated@@126 ($generated@@48 $generated@@127 ($generated@@128 (bvsub #x00000000 #x00000001))))) (= $generated@@129 ($generated@@126 ($generated@@48 $generated@@127 ($generated@@128 #x00000003))))) (and ($generated@@104 $generated@@130) ($generated@@106 $generated@@130))))) (and (and (and (and (forall (($generated@@205 T@U) ) (!  (=> (and (or (not (= $generated@@205 $generated@@97)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@124 $generated@@205) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@130 $generated@@205) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@124 $generated@@205)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@130 $generated@@205))
)) ($generated $generated@@124 $generated@@130)) (and (= $generated@@131 ($generated@@132 ($generated@@48 $generated@@133 ($generated@@134 (bvsub #b0000000000000000000000000000000 #b0000000000000000000000000000001))))) (= $generated@@135 ($generated@@132 ($generated@@48 $generated@@133 ($generated@@134 #b0000000000000000000000000000011)))))) (and (and ($generated@@104 $generated@@136) ($generated@@106 $generated@@136)) (and (forall (($generated@@206 T@U) ) (!  (=> (and (or (not (= $generated@@206 $generated@@97)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@130 $generated@@206) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@136 $generated@@206) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@130 $generated@@206)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@136 $generated@@206))
)) ($generated $generated@@130 $generated@@136)))) (and (and (and (= $generated@@137 ($generated@@138 ($generated@@48 $generated@@139 ($generated@@140 (bvsub #x0000 #x0001))))) (= $generated@@141 ($generated@@138 ($generated@@48 $generated@@139 ($generated@@140 #x0003))))) (and ($generated@@104 $generated@@142) ($generated@@106 $generated@@142))) (and (and (forall (($generated@@207 T@U) ) (!  (=> (and (or (not (= $generated@@207 $generated@@97)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@136 $generated@@207) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@142 $generated@@207) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@136 $generated@@207)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@142 $generated@@207))
)) ($generated $generated@@136 $generated@@142)) (and (= $generated@@143 ($generated@@144 ($generated@@48 $generated@@145 ($generated@@146 (bvsub #b000000000000000 #b000000000000001))))) (= $generated@@147 ($generated@@144 ($generated@@48 $generated@@145 ($generated@@146 #b000000000000011))))))))) (and (and (and (and (and ($generated@@104 $generated@@148) ($generated@@106 $generated@@148)) (and (forall (($generated@@208 T@U) ) (!  (=> (and (or (not (= $generated@@208 $generated@@97)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@142 $generated@@208) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@148 $generated@@208) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@142 $generated@@208)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@148 $generated@@208))
)) ($generated $generated@@142 $generated@@148))) (and (and (= $generated@@149 ($generated@@150 ($generated@@48 $generated@@151 ($generated@@152 (bvsub #x00 #x01))))) (= $generated@@153 ($generated@@150 ($generated@@48 $generated@@151 ($generated@@152 #x03))))) (and ($generated@@104 $generated@@154) ($generated@@106 $generated@@154)))) (and (and (and (forall (($generated@@209 T@U) ) (!  (=> (and (or (not (= $generated@@209 $generated@@97)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@148 $generated@@209) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@154 $generated@@209) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@148 $generated@@209)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@154 $generated@@209))
)) ($generated $generated@@148 $generated@@154)) (and (= $generated@@155 ($generated@@156 ($generated@@48 $generated@@157 ($generated@@158 (bvsub #b000000 #b000001))))) (= $generated@@159 ($generated@@156 ($generated@@48 $generated@@157 ($generated@@158 #b000011)))))) (and (and ($generated@@104 $generated@@160) ($generated@@106 $generated@@160)) (and (forall (($generated@@210 T@U) ) (!  (=> (and (or (not (= $generated@@210 $generated@@97)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@154 $generated@@210) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@160 $generated@@210) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@154 $generated@@210)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@160 $generated@@210))
)) ($generated $generated@@154 $generated@@160))))) (and (and (and (and (= $generated@@161 ($generated@@162 ($generated@@48 $generated@@163 ($generated@@164 #b1)))) (= $generated@@165 ($generated@@162 ($generated@@48 $generated@@163 ($generated@@164 #b1))))) (and ($generated@@104 $generated@@166) ($generated@@106 $generated@@166))) (and (and (forall (($generated@@211 T@U) ) (!  (=> (and (or (not (= $generated@@211 $generated@@97)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@160 $generated@@211) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@166 $generated@@211) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@160 $generated@@211)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@166 $generated@@211))
)) ($generated $generated@@160 $generated@@166)) (and (= $generated@@167 ($generated@@46 0)) (= $generated@@168 ($generated@@46 0))))) (and (and (and ($generated@@104 $generated@@169) ($generated@@106 $generated@@169)) (forall (($generated@@212 T@U) ) (!  (=> (and (or (not (= $generated@@212 $generated@@97)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@166 $generated@@212) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@169 $generated@@212) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@166 $generated@@212)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@169 $generated@@212))
))) (and (and ($generated $generated@@166 $generated@@169) (= $generated@@170 ($generated@@171 ($generated@@48 $generated@@172 ($generated@@173 #b11))))) (and (= $generated@@174 ($generated@@171 ($generated@@48 $generated@@172 ($generated@@173 #b10)))) (= (ControlFlow 0 2) (- 0 1)))))))) (or (not (= $generated@@174 #b00)) (not true))))))))
(let (($generated@@213  (=> (and (and ($generated@@104 $generated@@98) ($generated@@106 $generated@@98)) (and (= 1 $generated@@175) (= (ControlFlow 0 3) 2))) $generated@@200)))
$generated@@213)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
