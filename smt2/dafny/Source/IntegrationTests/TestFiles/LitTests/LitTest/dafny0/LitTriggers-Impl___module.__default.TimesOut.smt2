(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@102 (T@U) Bool)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@124 (T@U) Int)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@137 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@T T@T) T@T)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@203 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert  (and (= ($generated@@7 $generated@@27) 3) (= ($generated@@7 $generated@@29) 4)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (or ($generated@@25 $generated@@32) (and (< 1 $generated@@23) ($generated@@26 $generated@@27 $generated@@32 $generated@@28))) ($generated@@26 $generated@@29 ($generated@@24 $generated@@31 $generated@@32) ($generated@@30 $generated)))
 :pattern ( ($generated@@24 $generated@@31 $generated@@32))
))))
(assert (= ($generated@@33 $generated) $generated@@0))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@26 $generated@@27 ($generated@@34 $generated@@35 $generated@@36) $generated@@28)  (and ($generated@@26 $generated@@27 $generated@@35 $generated@@28) ($generated@@26 $generated@@27 $generated@@36 $generated@@28)))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@34 $generated@@35 $generated@@36) $generated@@28))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@38 $generated@@39 $generated@@41) ($generated@@38 ($generated@@37 $generated@@39 $generated@@40) $generated@@41))
 :pattern ( ($generated@@37 $generated@@39 $generated@@40) ($generated@@38 $generated@@39 $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated@@38 $generated@@43 $generated@@44) ($generated@@38 ($generated@@37 $generated@@42 $generated@@43) $generated@@44))
 :pattern ( ($generated@@37 $generated@@42 $generated@@43) ($generated@@38 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> ($generated@@38 $generated@@47 $generated@@48) (not ($generated@@38 ($generated@@45 $generated@@46 $generated@@47) $generated@@48)))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47) ($generated@@38 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (!  (not ($generated@@38 $generated@@49 $generated@@50))
 :pattern ( ($generated@@38 $generated@@49 $generated@@50))
)))
(assert (= ($generated@@51 $generated@@52) $generated@@4))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@37 ($generated@@37 $generated@@53 $generated@@54) $generated@@54) ($generated@@37 $generated@@53 $generated@@54))
 :pattern ( ($generated@@37 ($generated@@37 $generated@@53 $generated@@54) $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@38 ($generated@@45 $generated@@55 $generated@@56) $generated@@57)  (and ($generated@@38 $generated@@55 $generated@@57) (not ($generated@@38 $generated@@56 $generated@@57))))
 :pattern ( ($generated@@38 ($generated@@45 $generated@@55 $generated@@56) $generated@@57))
)))
(assert ($generated@@26 $generated@@27 $generated@@52 $generated@@28))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (or ($generated@@25 $generated@@63) (and (< 1 $generated@@23) ($generated@@26 $generated@@27 $generated@@63 $generated@@28))) (and (=> (not ($generated@@59 $generated@@63)) (let (($generated@@64 ($generated@@60 $generated@@63)))
(let (($generated@@65 ($generated@@61 $generated@@63)))
 (and ($generated@@25 $generated@@65) ($generated@@25 $generated@@64))))) (= ($generated@@24 ($generated@@58 $generated@@62) $generated@@63) (ite ($generated@@59 $generated@@63) $generated@@49 (let (($generated@@66 ($generated@@60 $generated@@63)))
(let (($generated@@67 ($generated@@61 $generated@@63)))
($generated@@37 ($generated@@24 $generated@@62 $generated@@67) ($generated@@24 $generated@@62 $generated@@66))))))))
 :pattern ( ($generated@@24 ($generated@@58 $generated@@62) $generated@@63))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 $generated@@69) $generated@@69)
 :pattern ( ($generated@@68 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@59 $generated@@71) (= ($generated@@51 $generated@@71) $generated@@4))
 :pattern ( ($generated@@59 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@72 $generated@@73) (= ($generated@@51 $generated@@73) $generated@@5))
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 ($generated@@74 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@74 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@78 $generated@@79 $generated@@80) (forall (($generated@@81 T@U) ) (!  (or (not ($generated@@38 $generated@@79 $generated@@81)) (not ($generated@@38 $generated@@80 $generated@@81)))
 :pattern ( ($generated@@38 $generated@@79 $generated@@81))
 :pattern ( ($generated@@38 $generated@@80 $generated@@81))
)))
 :pattern ( ($generated@@78 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@72 $generated@@82) (exists (($generated@@83 T@U) ($generated@@84 T@U) ) (= $generated@@82 ($generated@@34 $generated@@83 $generated@@84))))
 :pattern ( ($generated@@72 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@59 $generated@@85) (= $generated@@85 $generated@@52))
 :pattern ( ($generated@@59 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@26 $generated@@29 $generated@@87 ($generated@@30 $generated@@88)) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@38 $generated@@87 $generated@@89) ($generated@@86 $generated@@89 $generated@@88))
 :pattern ( ($generated@@38 $generated@@87 $generated@@89))
)))
 :pattern ( ($generated@@26 $generated@@29 $generated@@87 ($generated@@30 $generated@@88)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@90 ($generated@@75 $generated@@95 $generated@@92) $generated@@93 $generated@@94) ($generated@@91 $generated@@95 $generated@@92 $generated@@93 $generated@@94))
 :pattern ( ($generated@@90 ($generated@@75 $generated@@95 $generated@@92) $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@86 $generated@@96 $generated@@28) (and (= ($generated@@75 $generated@@27 ($generated@@74 $generated@@27 $generated@@96)) $generated@@96) ($generated@@26 $generated@@27 ($generated@@74 $generated@@27 $generated@@96) $generated@@28)))
 :pattern ( ($generated@@86 $generated@@96 $generated@@28))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@38 ($generated@@37 $generated@@97 $generated@@98) $generated@@99)  (or ($generated@@38 $generated@@97 $generated@@99) ($generated@@38 $generated@@98 $generated@@99)))
 :pattern ( ($generated@@38 ($generated@@37 $generated@@97 $generated@@98) $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@78 $generated@@100 $generated@@101) (and (= ($generated@@45 ($generated@@37 $generated@@100 $generated@@101) $generated@@100) $generated@@101) (= ($generated@@45 ($generated@@37 $generated@@100 $generated@@101) $generated@@101) $generated@@100)))
 :pattern ( ($generated@@37 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@102 $generated@@103) (or ($generated@@59 $generated@@103) ($generated@@72 $generated@@103)))
 :pattern ( ($generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@104 $generated@@28) (or ($generated@@59 $generated@@104) ($generated@@72 $generated@@104)))
 :pattern ( ($generated@@72 $generated@@104) ($generated@@26 $generated@@27 $generated@@104 $generated@@28))
 :pattern ( ($generated@@59 $generated@@104) ($generated@@26 $generated@@27 $generated@@104 $generated@@28))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@86 $generated@@105 $generated) (and (= ($generated@@75 $generated@@9 ($generated@@74 $generated@@9 $generated@@105)) $generated@@105) ($generated@@26 $generated@@9 ($generated@@74 $generated@@9 $generated@@105) $generated)))
 :pattern ( ($generated@@86 $generated@@105 $generated))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@86 ($generated@@75 $generated@@108 $generated@@106) $generated@@107) ($generated@@26 $generated@@108 $generated@@106 $generated@@107))
 :pattern ( ($generated@@86 ($generated@@75 $generated@@108 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@91 $generated@@29 $generated@@109 ($generated@@30 $generated@@110) $generated@@111) (forall (($generated@@112 T@U) ) (!  (=> ($generated@@38 $generated@@109 $generated@@112) ($generated@@90 $generated@@112 $generated@@110 $generated@@111))
 :pattern ( ($generated@@38 $generated@@109 $generated@@112))
)))
 :pattern ( ($generated@@91 $generated@@29 $generated@@109 ($generated@@30 $generated@@110) $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@51 ($generated@@34 $generated@@113 $generated@@114)) $generated@@5)
 :pattern ( ($generated@@34 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@61 ($generated@@34 $generated@@115 $generated@@116)) $generated@@115)
 :pattern ( ($generated@@34 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@60 ($generated@@34 $generated@@117 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@34 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@119 ($generated@@30 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@30 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@33 ($generated@@30 $generated@@121)) $generated@@1)
 :pattern ( ($generated@@30 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@74 $generated@@123 ($generated@@75 $generated@@123 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@75 $generated@@123 $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (< ($generated@@124 $generated@@125) ($generated@@124 ($generated@@34 $generated@@125 $generated@@126)))
 :pattern ( ($generated@@34 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (< ($generated@@124 $generated@@128) ($generated@@124 ($generated@@34 $generated@@127 $generated@@128)))
 :pattern ( ($generated@@34 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@24 ($generated@@58 $generated@@129) $generated@@130) ($generated@@24 $generated@@129 $generated@@130))
 :pattern ( ($generated@@24 ($generated@@58 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@37 $generated@@131 ($generated@@37 $generated@@131 $generated@@132)) ($generated@@37 $generated@@131 $generated@@132))
 :pattern ( ($generated@@37 $generated@@131 ($generated@@37 $generated@@131 $generated@@132)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@133 $generated@@144 $generated@@145 $generated@@146 ($generated@@140 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@133 $generated@@151 $generated@@152 $generated@@153 ($generated@@140 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@133 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@133 $generated@@160 $generated@@161 $generated@@162 ($generated@@140 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@133 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))) (= ($generated@@7 $generated@@134) 5)) (= ($generated@@7 $generated@@135) 6)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@137 $generated@@169 $generated@@170 ($generated@@141 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@171) $generated@@173) $generated@@171)
 :weight 0
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@178 $generated@@179) (= ($generated@@137 $generated@@174 $generated@@175 ($generated@@141 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@176) $generated@@179) ($generated@@137 $generated@@174 $generated@@175 $generated@@177 $generated@@179)))
 :weight 0
))) (= ($generated@@7 $generated@@138) 7)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@7 ($generated@@139 $generated@@180 $generated@@181)) 8))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@142 ($generated@@139 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@139 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@143 ($generated@@139 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@139 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@12 ($generated@@133 $generated@@134 $generated@@135 $generated@@8 ($generated@@136 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))  (=> (and (or (not (= $generated@@190 $generated@@186)) (not true)) ($generated@@12 ($generated@@74 $generated@@8 ($generated@@137 $generated@@135 $generated@@138 ($generated@@137 $generated@@134 ($generated@@139 $generated@@135 $generated@@138) $generated@@187 $generated@@190) $generated@@188)))) $generated@@189))
 :pattern ( ($generated@@133 $generated@@134 $generated@@135 $generated@@8 ($generated@@136 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> ($generated@@86 $generated@@192 ($generated@@30 $generated@@193)) (and (= ($generated@@75 $generated@@29 ($generated@@74 $generated@@29 $generated@@192)) $generated@@192) ($generated@@26 $generated@@29 ($generated@@74 $generated@@29 $generated@@192) ($generated@@30 $generated@@193))))
 :pattern ( ($generated@@86 $generated@@192 ($generated@@30 $generated@@193)))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and ($generated@@194 $generated@@196) ($generated@@26 $generated@@27 $generated@@195 $generated@@28)) ($generated@@91 $generated@@27 $generated@@195 $generated@@28 $generated@@196))
 :pattern ( ($generated@@91 $generated@@27 $generated@@195 $generated@@28 $generated@@196))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (or ($generated@@25 ($generated@@68 $generated@@27 $generated@@198)) (and (< 1 $generated@@23) ($generated@@26 $generated@@27 $generated@@198 $generated@@28))) (and (=> (not ($generated@@12 ($generated@@68 $generated@@8 ($generated@@11 ($generated@@59 ($generated@@68 $generated@@27 $generated@@198)))))) (let (($generated@@199 ($generated@@68 $generated@@27 ($generated@@60 ($generated@@68 $generated@@27 $generated@@198)))))
(let (($generated@@200 ($generated@@68 $generated@@27 ($generated@@61 ($generated@@68 $generated@@27 $generated@@198)))))
 (and ($generated@@25 $generated@@200) ($generated@@25 $generated@@199))))) (= ($generated@@24 ($generated@@58 $generated@@197) ($generated@@68 $generated@@27 $generated@@198)) (ite ($generated@@59 ($generated@@68 $generated@@27 $generated@@198)) $generated@@49 (let (($generated@@201 ($generated@@68 $generated@@27 ($generated@@60 ($generated@@68 $generated@@27 $generated@@198)))))
(let (($generated@@202 ($generated@@68 $generated@@27 ($generated@@61 ($generated@@68 $generated@@27 $generated@@198)))))
($generated@@37 ($generated@@24 ($generated@@58 $generated@@197) $generated@@202) ($generated@@24 ($generated@@58 $generated@@197) $generated@@201))))))))
 :weight 3
 :pattern ( ($generated@@24 ($generated@@58 $generated@@197) ($generated@@68 $generated@@27 $generated@@198)))
))))
(assert (= ($generated@@33 $generated@@28) $generated@@3))
(assert (= ($generated@@203 $generated@@28) $generated@@6))
(assert (= $generated@@52 ($generated@@68 $generated@@27 $generated@@52)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and ($generated@@194 $generated@@205) (and ($generated@@72 $generated@@204) ($generated@@91 $generated@@27 $generated@@204 $generated@@28 $generated@@205))) ($generated@@91 $generated@@27 ($generated@@61 $generated@@204) $generated@@28 $generated@@205))
 :pattern ( ($generated@@91 $generated@@27 ($generated@@61 $generated@@204) $generated@@28 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and ($generated@@194 $generated@@207) (and ($generated@@72 $generated@@206) ($generated@@91 $generated@@27 $generated@@206 $generated@@28 $generated@@207))) ($generated@@91 $generated@@27 ($generated@@60 $generated@@206) $generated@@28 $generated@@207))
 :pattern ( ($generated@@91 $generated@@27 ($generated@@60 $generated@@206) $generated@@28 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@34 ($generated@@68 $generated@@27 $generated@@208) ($generated@@68 $generated@@27 $generated@@209)) ($generated@@68 $generated@@27 ($generated@@34 $generated@@208 $generated@@209)))
 :pattern ( ($generated@@34 ($generated@@68 $generated@@27 $generated@@208) ($generated@@68 $generated@@27 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@T) ) (! (= ($generated@@75 $generated@@211 ($generated@@68 $generated@@211 $generated@@210)) ($generated@@68 $generated@@138 ($generated@@75 $generated@@211 $generated@@210)))
 :pattern ( ($generated@@75 $generated@@211 ($generated@@68 $generated@@211 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! ($generated@@91 $generated@@9 $generated@@213 $generated $generated@@212)
 :pattern ( ($generated@@91 $generated@@9 $generated@@213 $generated $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! ($generated@@26 $generated@@9 $generated@@214 $generated)
 :pattern ( ($generated@@26 $generated@@9 $generated@@214 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@217 (Int) Bool)
(declare-fun $generated@@218 (T@U) Int)
(declare-fun $generated@@219 (Int) Bool)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@225 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@226  (=> (and (and (=> ($generated@@72 $generated@@215) (and ($generated@@216 $generated@@215) ($generated@@217 ($generated@@218 $generated@@215)))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@72 $generated@@215)) ($generated@@219 ($generated@@218 $generated@@215)))))
(let (($generated@@227  (=> (and (not ($generated@@72 $generated@@215)) (= (ControlFlow 0 4) 2)) $generated@@226)))
(let (($generated@@228  (=> ($generated@@72 $generated@@215) (=> (and ($generated@@91 $generated@@27 $generated@@215 $generated@@28 $generated@@220) ($generated@@216 $generated@@215)) (=> (and (and (= $generated@@221 ($generated@@218 $generated@@215)) ($generated@@91 $generated@@9 ($generated@@13 $generated@@221) $generated $generated@@220)) (and ($generated@@217 ($generated@@218 $generated@@215)) (= (ControlFlow 0 3) 2))) $generated@@226)))))
(let (($generated@@229  (=> (= $generated@@222 ($generated@@136 $generated@@223 $generated@@220 $generated@@2 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@228) (=> (= (ControlFlow 0 5) 4) $generated@@227)))))
(let (($generated@@230  (=> (and ($generated@@194 $generated@@220) ($generated@@224 $generated@@220)) (=> (and (and (and (and ($generated@@26 $generated@@27 $generated@@215 $generated@@28) ($generated@@91 $generated@@27 $generated@@215 $generated@@28 $generated@@220)) ($generated@@102 $generated@@215)) (= 2 $generated@@23)) (and (forall (($generated@@231 Int) ) (!  (=> ($generated@@38 ($generated@@24 ($generated@@58 $generated@@225) $generated@@215) ($generated@@75 $generated@@9 ($generated@@13 $generated@@231))) ($generated@@219 $generated@@231))
 :pattern ( ($generated@@219 $generated@@231))
 :pattern ( ($generated@@38 ($generated@@24 ($generated@@58 $generated@@225) $generated@@215) ($generated@@75 $generated@@9 ($generated@@13 $generated@@231))))
)) (= (ControlFlow 0 6) 5))) $generated@@229))))
$generated@@230))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
