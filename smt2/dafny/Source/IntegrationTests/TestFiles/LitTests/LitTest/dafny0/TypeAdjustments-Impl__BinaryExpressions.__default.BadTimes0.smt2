(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 (Int Int) Int)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T T@T) T@T)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@85 (Int) Int)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) Int)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@208 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27)
 :pattern ( ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@29 Int) ($generated@@30 Int) ) (!  (or (= ($generated@@28 $generated@@29 $generated@@30) $generated@@29) (= ($generated@@28 $generated@@29 $generated@@30) $generated@@30))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@31 ($generated@@32 $generated@@33 $generated@@34) $generated@@35)  (and ($generated@@31 $generated@@33 $generated@@35) ($generated@@31 $generated@@34 $generated@@35)))
 :pattern ( ($generated@@31 ($generated@@32 $generated@@33 $generated@@34) $generated@@35))
)))
(assert (= ($generated@@7 $generated@@37) 3))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@40 ($generated@@38 $generated@@41)) ($generated@@39 $generated@@40))
 :pattern ( ($generated@@36 $generated@@37 $generated@@40 ($generated@@38 $generated@@41)))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@32 ($generated@@32 $generated@@42 $generated@@43) $generated@@43) ($generated@@32 $generated@@42 $generated@@43))
 :pattern ( ($generated@@32 ($generated@@32 $generated@@42 $generated@@43) $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@44 ($generated@@44 $generated@@45 $generated@@46) $generated@@46) ($generated@@44 $generated@@45 $generated@@46))
 :pattern ( ($generated@@44 ($generated@@44 $generated@@45 $generated@@46) $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@47 ($generated@@47 $generated@@48 $generated@@49) $generated@@49) ($generated@@47 $generated@@48 $generated@@49))
 :pattern ( ($generated@@47 ($generated@@47 $generated@@48 $generated@@49) $generated@@49))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@51 $generated@@60 $generated@@61 ($generated@@57 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@51 $generated@@65 $generated@@66 ($generated@@57 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@51 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (= ($generated@@7 $generated@@52) 4)) (= ($generated@@7 $generated@@53) 5)) (= ($generated@@7 $generated@@54) 6)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@7 ($generated@@55 $generated@@71 $generated@@72)) 7))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@58 ($generated@@55 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@55 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@59 ($generated@@55 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@55 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@50 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@12 ($generated@@56 $generated@@8 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@77 $generated@@79) $generated@@4))) ($generated@@12 ($generated@@56 $generated@@8 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@78 $generated@@79) $generated@@4))))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@78 $generated@@79) $generated@@4))
)))
 :pattern ( ($generated@@50 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@36 ($generated@@55 $generated@@53 $generated@@8) $generated@@82 ($generated@@80 $generated@@83)) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@12 ($generated@@51 $generated@@53 $generated@@8 $generated@@82 $generated@@84)) ($generated@@81 $generated@@84 $generated@@83))
 :pattern ( ($generated@@51 $generated@@53 $generated@@8 $generated@@82 $generated@@84))
)))
 :pattern ( ($generated@@36 ($generated@@55 $generated@@53 $generated@@8) $generated@@82 ($generated@@80 $generated@@83)))
)))
(assert (forall (($generated@@86 Int) ) (! (= ($generated@@85 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 $generated@@88) $generated@@88)
 :pattern ( ($generated@@87 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@90 ($generated@@47 $generated@@91 $generated@@92) $generated@@93) ($generated@@28 ($generated@@90 $generated@@91 $generated@@93) ($generated@@90 $generated@@92 $generated@@93)))
 :pattern ( ($generated@@90 ($generated@@47 $generated@@91 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 ($generated@@56 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@56 $generated@@96 $generated@@95))
)))
(assert (= ($generated@@7 $generated@@97) 8))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@36 $generated@@97 $generated@@99 ($generated@@98 $generated@@100)) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@31 $generated@@99 $generated@@101) ($generated@@81 $generated@@101 $generated@@100))
 :pattern ( ($generated@@31 $generated@@99 $generated@@101))
)))
 :pattern ( ($generated@@36 $generated@@97 $generated@@99 ($generated@@98 $generated@@100)))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@36 $generated@@9 $generated@@102 $generated@@25) (<= ($generated@@85 0) ($generated@@14 $generated@@102)))
 :pattern ( ($generated@@36 $generated@@9 $generated@@102 $generated@@25))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@103 ($generated@@94 $generated@@107 $generated@@104) $generated@@105 $generated@@106) ($generated@@24 $generated@@107 $generated@@104 $generated@@105 $generated@@106))
 :pattern ( ($generated@@103 ($generated@@94 $generated@@107 $generated@@104) $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> ($generated@@50 $generated@@108 $generated@@109) (=> ($generated@@103 $generated@@110 $generated@@111 $generated@@108) ($generated@@103 $generated@@110 $generated@@111 $generated@@109)))
 :pattern ( ($generated@@50 $generated@@108 $generated@@109) ($generated@@103 $generated@@110 $generated@@111 $generated@@108))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (!  (=> ($generated@@50 $generated@@112 $generated@@113) (=> ($generated@@24 $generated@@116 $generated@@114 $generated@@115 $generated@@112) ($generated@@24 $generated@@116 $generated@@114 $generated@@115 $generated@@113)))
 :pattern ( ($generated@@50 $generated@@112 $generated@@113) ($generated@@24 $generated@@116 $generated@@114 $generated@@115 $generated@@112))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@81 $generated@@117 $generated@@25) (and (= ($generated@@94 $generated@@9 ($generated@@56 $generated@@9 $generated@@117)) $generated@@117) ($generated@@36 $generated@@9 ($generated@@56 $generated@@9 $generated@@117) $generated@@25)))
 :pattern ( ($generated@@81 $generated@@117 $generated@@25))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@12 ($generated@@51 $generated@@53 $generated@@8 ($generated@@44 $generated@@118 $generated@@119) $generated@@120))  (and ($generated@@12 ($generated@@51 $generated@@53 $generated@@8 $generated@@118 $generated@@120)) ($generated@@12 ($generated@@51 $generated@@53 $generated@@8 $generated@@119 $generated@@120))))
 :pattern ( ($generated@@51 $generated@@53 $generated@@8 ($generated@@44 $generated@@118 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@24 ($generated@@55 $generated@@53 $generated@@8) $generated@@121 ($generated@@80 $generated@@122) $generated@@123) (forall (($generated@@124 T@U) ) (!  (=> ($generated@@12 ($generated@@51 $generated@@53 $generated@@8 $generated@@121 $generated@@124)) ($generated@@103 $generated@@124 $generated@@122 $generated@@123))
 :pattern ( ($generated@@51 $generated@@53 $generated@@8 $generated@@121 $generated@@124))
)))
 :pattern ( ($generated@@24 ($generated@@55 $generated@@53 $generated@@8) $generated@@121 ($generated@@80 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@125 ($generated@@38 $generated@@126)) (forall (($generated@@127 T@U) ) (!  (=> (< 0 ($generated@@90 $generated@@125 $generated@@127)) ($generated@@81 $generated@@127 $generated@@126))
 :pattern ( ($generated@@90 $generated@@125 $generated@@127))
)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@125 ($generated@@38 $generated@@126)))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (or (not (= $generated@@128 $generated@@130)) (not true)) (=> (and ($generated@@50 $generated@@128 $generated@@129) ($generated@@50 $generated@@129 $generated@@130)) ($generated@@50 $generated@@128 $generated@@130)))
 :pattern ( ($generated@@50 $generated@@128 $generated@@129) ($generated@@50 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@81 $generated@@131 $generated) (and (= ($generated@@94 $generated@@9 ($generated@@56 $generated@@9 $generated@@131)) $generated@@131) ($generated@@36 $generated@@9 ($generated@@56 $generated@@9 $generated@@131) $generated)))
 :pattern ( ($generated@@81 $generated@@131 $generated))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@81 ($generated@@94 $generated@@134 $generated@@132) $generated@@133) ($generated@@36 $generated@@134 $generated@@132 $generated@@133))
 :pattern ( ($generated@@81 ($generated@@94 $generated@@134 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@39 $generated@@136) (forall (($generated@@137 T@U) ) (!  (and (<= 0 ($generated@@90 $generated@@136 $generated@@137)) (<= ($generated@@90 $generated@@136 $generated@@137) ($generated@@135 $generated@@136)))
 :pattern ( ($generated@@90 $generated@@136 $generated@@137))
)))
 :pattern ( ($generated@@39 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! (<= 0 ($generated@@135 $generated@@138))
 :pattern ( ($generated@@135 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@24 $generated@@97 $generated@@139 ($generated@@98 $generated@@140) $generated@@141) (forall (($generated@@142 T@U) ) (!  (=> ($generated@@31 $generated@@139 $generated@@142) ($generated@@103 $generated@@142 $generated@@140 $generated@@141))
 :pattern ( ($generated@@31 $generated@@139 $generated@@142))
)))
 :pattern ( ($generated@@24 $generated@@97 $generated@@139 ($generated@@98 $generated@@140) $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@90 $generated@@143 $generated@@144) 0)
 :pattern ( ($generated@@90 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@98 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@98 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@23 ($generated@@98 $generated@@147)) $generated@@1)
 :pattern ( ($generated@@98 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@80 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@80 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@23 ($generated@@80 $generated@@150)) $generated@@2)
 :pattern ( ($generated@@80 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@151 ($generated@@38 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@38 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@23 ($generated@@38 $generated@@153)) $generated@@3)
 :pattern ( ($generated@@38 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@56 $generated@@155 ($generated@@94 $generated@@155 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@94 $generated@@155 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@32 $generated@@156 ($generated@@32 $generated@@156 $generated@@157)) ($generated@@32 $generated@@156 $generated@@157))
 :pattern ( ($generated@@32 $generated@@156 ($generated@@32 $generated@@156 $generated@@157)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@44 $generated@@158 ($generated@@44 $generated@@158 $generated@@159)) ($generated@@44 $generated@@158 $generated@@159))
 :pattern ( ($generated@@44 $generated@@158 ($generated@@44 $generated@@158 $generated@@159)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@47 $generated@@160 ($generated@@47 $generated@@160 $generated@@161)) ($generated@@47 $generated@@160 $generated@@161))
 :pattern ( ($generated@@47 $generated@@160 ($generated@@47 $generated@@160 $generated@@161)))
)))
(assert (forall (($generated@@162 T@U) ) (!  (and (= (= ($generated@@135 $generated@@162) 0) (= $generated@@162 $generated@@143)) (=> (or (not (= ($generated@@135 $generated@@162) 0)) (not true)) (exists (($generated@@163 T@U) ) (! (< 0 ($generated@@90 $generated@@162 $generated@@163))
 :pattern ( ($generated@@90 $generated@@162 $generated@@163))
))))
 :pattern ( ($generated@@135 $generated@@162))
)))
(assert  (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@164 $generated@@167 $generated@@168 $generated@@169 ($generated@@166 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@172 $generated@@173) $generated@@170)
 :weight 0
)) (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@164 $generated@@174 $generated@@175 $generated@@176 ($generated@@166 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@164 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@164 $generated@@183 $generated@@184 $generated@@185 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@164 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@12 ($generated@@164 $generated@@54 $generated@@52 $generated@@8 ($generated@@165 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (or (not (= $generated@@196 $generated@@192)) (not true)) ($generated@@12 ($generated@@56 $generated@@8 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@193 $generated@@196) $generated@@194)))) $generated@@195))
 :pattern ( ($generated@@164 $generated@@54 $generated@@52 $generated@@8 ($generated@@165 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 Int) ($generated@@199 Int) ) (! (= (<= $generated@@198 $generated@@199) (= ($generated@@28 $generated@@198 $generated@@199) $generated@@198))
 :pattern ( ($generated@@28 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 Int) ($generated@@201 Int) ) (! (= (<= $generated@@201 $generated@@200) (= ($generated@@28 $generated@@200 $generated@@201) $generated@@201))
 :pattern ( ($generated@@28 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@81 $generated@@202 ($generated@@98 $generated@@203)) (and (= ($generated@@94 $generated@@97 ($generated@@56 $generated@@97 $generated@@202)) $generated@@202) ($generated@@36 $generated@@97 ($generated@@56 $generated@@97 $generated@@202) ($generated@@98 $generated@@203))))
 :pattern ( ($generated@@81 $generated@@202 ($generated@@98 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> ($generated@@81 $generated@@204 ($generated@@80 $generated@@205)) (and (= ($generated@@94 ($generated@@55 $generated@@53 $generated@@8) ($generated@@56 ($generated@@55 $generated@@53 $generated@@8) $generated@@204)) $generated@@204) ($generated@@36 ($generated@@55 $generated@@53 $generated@@8) ($generated@@56 ($generated@@55 $generated@@53 $generated@@8) $generated@@204) ($generated@@80 $generated@@205))))
 :pattern ( ($generated@@81 $generated@@204 ($generated@@80 $generated@@205)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> ($generated@@81 $generated@@206 ($generated@@38 $generated@@207)) (and (= ($generated@@94 $generated@@37 ($generated@@56 $generated@@37 $generated@@206)) $generated@@206) ($generated@@36 $generated@@37 ($generated@@56 $generated@@37 $generated@@206) ($generated@@38 $generated@@207))))
 :pattern ( ($generated@@81 $generated@@206 ($generated@@38 $generated@@207)))
)))
(assert (= ($generated@@23 $generated@@25) $generated@@5))
(assert (= ($generated@@208 $generated@@25) $generated@@6))
(assert (forall (($generated@@209 Int) ) (! (= ($generated@@94 $generated@@9 ($generated@@13 ($generated@@85 $generated@@209))) ($generated@@87 $generated@@53 ($generated@@94 $generated@@9 ($generated@@13 $generated@@209))))
 :pattern ( ($generated@@94 $generated@@9 ($generated@@13 ($generated@@85 $generated@@209))))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@T) ) (! (= ($generated@@94 $generated@@211 ($generated@@87 $generated@@211 $generated@@210)) ($generated@@87 $generated@@53 ($generated@@94 $generated@@211 $generated@@210)))
 :pattern ( ($generated@@94 $generated@@211 ($generated@@87 $generated@@211 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@24 $generated@@37 $generated@@212 ($generated@@38 $generated@@213) $generated@@214) (forall (($generated@@215 T@U) ) (!  (=> (< 0 ($generated@@90 $generated@@212 $generated@@215)) ($generated@@103 $generated@@215 $generated@@213 $generated@@214))
 :pattern ( ($generated@@90 $generated@@212 $generated@@215))
)))
 :pattern ( ($generated@@24 $generated@@37 $generated@@212 ($generated@@38 $generated@@213) $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! ($generated@@24 $generated@@9 $generated@@217 $generated $generated@@216)
 :pattern ( ($generated@@24 $generated@@9 $generated@@217 $generated $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! ($generated@@36 $generated@@9 $generated@@218 $generated)
 :pattern ( ($generated@@36 $generated@@9 $generated@@218 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@243  (=> (= $generated@@219 ($generated@@165 $generated@@220 $generated@@221 $generated@@4 false)) (=> (and (= $generated@@222 ($generated@@32 $generated@@223 $generated@@224)) (= $generated@@225 ($generated@@44 $generated@@226 $generated@@227))) (=> (and (and (= $generated@@228 ($generated@@47 $generated@@229 $generated@@230)) ($generated@@36 $generated@@97 $generated@@231 ($generated@@98 $generated))) (and ($generated@@36 ($generated@@55 $generated@@53 $generated@@8) $generated@@232 ($generated@@80 $generated)) ($generated@@36 $generated@@37 $generated@@233 ($generated@@38 $generated)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@36 $generated@@97 $generated@@231 ($generated@@98 $generated@@25))) (=> ($generated@@36 $generated@@97 $generated@@231 ($generated@@98 $generated@@25)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@36 ($generated@@55 $generated@@53 $generated@@8) $generated@@232 ($generated@@80 $generated@@25))) (=> ($generated@@36 ($generated@@55 $generated@@53 $generated@@8) $generated@@232 ($generated@@80 $generated@@25)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@36 $generated@@37 $generated@@233 ($generated@@38 $generated@@25))))))))))))
(let (($generated@@244  (=> (and ($generated@@234 $generated@@221) ($generated@@235 $generated@@221)) (=> (and (and (and (and (and ($generated@@36 $generated@@97 $generated@@223 ($generated@@98 $generated@@25)) ($generated@@24 $generated@@97 $generated@@223 ($generated@@98 $generated@@25) $generated@@221)) (and ($generated@@36 ($generated@@55 $generated@@53 $generated@@8) $generated@@226 ($generated@@80 $generated@@25)) ($generated@@24 ($generated@@55 $generated@@53 $generated@@8) $generated@@226 ($generated@@80 $generated@@25) $generated@@221))) (and (and ($generated@@36 $generated@@37 $generated@@229 ($generated@@38 $generated@@25)) ($generated@@24 $generated@@37 $generated@@229 ($generated@@38 $generated@@25) $generated@@221)) (and ($generated@@36 $generated@@97 $generated@@224 ($generated@@98 $generated)) ($generated@@24 $generated@@97 $generated@@224 ($generated@@98 $generated) $generated@@221)))) (and (and (and ($generated@@36 ($generated@@55 $generated@@53 $generated@@8) $generated@@227 ($generated@@80 $generated)) ($generated@@24 ($generated@@55 $generated@@53 $generated@@8) $generated@@227 ($generated@@80 $generated) $generated@@221)) (and ($generated@@36 $generated@@37 $generated@@230 ($generated@@38 $generated)) ($generated@@24 $generated@@37 $generated@@230 ($generated@@38 $generated) $generated@@221))) (and (and ($generated@@36 $generated@@97 $generated@@236 ($generated@@98 $generated)) ($generated@@24 $generated@@97 $generated@@236 ($generated@@98 $generated) $generated@@221)) true))) (and (and (and (and ($generated@@36 ($generated@@55 $generated@@53 $generated@@8) $generated@@237 ($generated@@80 $generated)) ($generated@@24 ($generated@@55 $generated@@53 $generated@@8) $generated@@237 ($generated@@80 $generated) $generated@@221)) true) (and (and ($generated@@36 $generated@@37 $generated@@238 ($generated@@38 $generated)) ($generated@@24 $generated@@37 $generated@@238 ($generated@@38 $generated) $generated@@221)) true)) (and (and (and ($generated@@36 $generated@@97 $generated@@239 ($generated@@98 $generated)) true) (and ($generated@@36 ($generated@@55 $generated@@53 $generated@@8) $generated@@240 ($generated@@80 $generated)) true)) (and (and ($generated@@36 $generated@@37 $generated@@241 ($generated@@38 $generated)) true) (and (= 1 $generated@@242) (= (ControlFlow 0 5) 2)))))) $generated@@243))))
$generated@@244)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
