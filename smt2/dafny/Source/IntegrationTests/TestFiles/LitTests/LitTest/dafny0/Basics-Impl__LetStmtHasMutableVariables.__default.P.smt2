(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@69 (T@U) Int)
(declare-fun $generated@@70 (T@U) Int)
(declare-fun $generated@@78 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@82 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@137 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (= ($generated@@5 $generated@@24) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@28 ($generated@@25 $generated@@26 $generated@@27)) ($generated@@22 $generated@@28))
 :pattern ( ($generated@@22 $generated@@28) ($generated@@23 $generated@@24 $generated@@28 ($generated@@25 $generated@@26 $generated@@27)))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@29 $generated@@33 $generated@@34) ($generated@@25 $generated@@31 $generated@@32))  (and ($generated@@30 $generated@@33 $generated@@31) ($generated@@30 $generated@@34 $generated@@32)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@29 $generated@@33 $generated@@34) ($generated@@25 $generated@@31 $generated@@32)))
)))
(assert (forall (($generated@@36 Int) ) (! (= ($generated@@35 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@37 $generated@@39 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@39 $generated@@38))
)))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@22 $generated@@41) (= ($generated@@40 $generated@@41) $generated@@2))
 :pattern ( ($generated@@22 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 ($generated@@42 $generated@@45 $generated@@44)) $generated@@44)
 :pattern ( ($generated@@42 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (!  (=> ($generated@@22 $generated@@46) (exists (($generated@@47 T@U) ($generated@@48 T@U) ) (= $generated@@46 ($generated@@29 $generated@@47 $generated@@48))))
 :pattern ( ($generated@@22 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ) (!  (=> ($generated@@30 $generated@@49 $generated) (and (= ($generated@@43 $generated@@7 ($generated@@42 $generated@@7 $generated@@49)) $generated@@49) ($generated@@23 $generated@@7 ($generated@@42 $generated@@7 $generated@@49) $generated)))
 :pattern ( ($generated@@30 $generated@@49 $generated))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@30 ($generated@@43 $generated@@52 $generated@@50) $generated@@51) ($generated@@23 $generated@@52 $generated@@50 $generated@@51))
 :pattern ( ($generated@@30 ($generated@@43 $generated@@52 $generated@@50) $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@40 ($generated@@29 $generated@@53 $generated@@54)) $generated@@2)
 :pattern ( ($generated@@29 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@55 ($generated@@25 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@25 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@58 ($generated@@25 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@25 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@61 ($generated@@29 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@29 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@64 ($generated@@29 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@29 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@42 $generated@@68 ($generated@@43 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@43 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (< ($generated@@69 $generated@@71) ($generated@@70 ($generated@@29 $generated@@71 $generated@@72)))
 :pattern ( ($generated@@29 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (< ($generated@@69 $generated@@74) ($generated@@70 ($generated@@29 $generated@@73 $generated@@74)))
 :pattern ( ($generated@@29 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> ($generated@@30 $generated@@77 ($generated@@25 $generated@@75 $generated@@76)) (and (= ($generated@@43 $generated@@24 ($generated@@42 $generated@@24 $generated@@77)) $generated@@77) ($generated@@23 $generated@@24 ($generated@@42 $generated@@24 $generated@@77) ($generated@@25 $generated@@75 $generated@@76))))
 :pattern ( ($generated@@30 $generated@@77 ($generated@@25 $generated@@75 $generated@@76)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@78 $generated@@89 $generated@@90 $generated@@91 ($generated@@85 $generated@@89 $generated@@90 $generated@@91 $generated@@93 $generated@@94 $generated@@95 $generated@@92) $generated@@94 $generated@@95) $generated@@92)
 :weight 0
)) (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (or (= $generated@@101 $generated@@103) (= ($generated@@78 $generated@@96 $generated@@97 $generated@@98 ($generated@@85 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@102 $generated@@99) $generated@@103 $generated@@104) ($generated@@78 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@103 $generated@@104)))
 :weight 0
)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@111 $generated@@113) (= ($generated@@78 $generated@@105 $generated@@106 $generated@@107 ($generated@@85 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@112 $generated@@113) ($generated@@78 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@112 $generated@@113)))
 :weight 0
)))) (= ($generated@@5 $generated@@79) 4)) (= ($generated@@5 $generated@@80) 5)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@82 $generated@@114 $generated@@115 ($generated@@86 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@116) $generated@@118) $generated@@116)
 :weight 0
))) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@82 $generated@@119 $generated@@120 ($generated@@86 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@82 $generated@@119 $generated@@120 $generated@@122 $generated@@124)))
 :weight 0
))) (= ($generated@@5 $generated@@83) 6)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (= ($generated@@5 ($generated@@84 $generated@@125 $generated@@126)) 7))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@127 $generated@@128)) $generated@@127)
 :pattern ( ($generated@@84 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@129 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@84 $generated@@129 $generated@@130))
))))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 Bool) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@10 ($generated@@78 $generated@@79 $generated@@80 $generated@@6 ($generated@@81 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))  (=> (and (or (not (= $generated@@135 $generated@@131)) (not true)) ($generated@@10 ($generated@@42 $generated@@6 ($generated@@82 $generated@@80 $generated@@83 ($generated@@82 $generated@@79 ($generated@@84 $generated@@80 $generated@@83) $generated@@132 $generated@@135) $generated@@133)))) $generated@@134))
 :pattern ( ($generated@@78 $generated@@79 $generated@@80 $generated@@6 ($generated@@81 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (and (= ($generated@@21 ($generated@@25 $generated@@138 $generated@@139)) $generated@@3) (= ($generated@@137 ($generated@@25 $generated@@138 $generated@@139)) $generated@@4))
 :pattern ( ($generated@@25 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@69 ($generated@@43 $generated@@24 $generated@@140)) ($generated@@70 $generated@@140))
 :pattern ( ($generated@@69 ($generated@@43 $generated@@24 $generated@@140)))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@29 ($generated@@37 $generated@@83 $generated@@141) ($generated@@37 $generated@@83 $generated@@142)) ($generated@@37 $generated@@24 ($generated@@29 $generated@@141 $generated@@142)))
 :pattern ( ($generated@@29 ($generated@@37 $generated@@83 $generated@@141) ($generated@@37 $generated@@83 $generated@@142)))
)))
(assert (forall (($generated@@143 Int) ) (! (= ($generated@@43 $generated@@7 ($generated@@11 ($generated@@35 $generated@@143))) ($generated@@37 $generated@@83 ($generated@@43 $generated@@7 ($generated@@11 $generated@@143))))
 :pattern ( ($generated@@43 $generated@@7 ($generated@@11 ($generated@@35 $generated@@143))))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@43 $generated@@145 ($generated@@37 $generated@@145 $generated@@144)) ($generated@@37 $generated@@83 ($generated@@43 $generated@@145 $generated@@144)))
 :pattern ( ($generated@@43 $generated@@145 ($generated@@37 $generated@@145 $generated@@144)))
)))
(assert (forall (($generated@@146 T@U) ) (! ($generated@@23 $generated@@7 $generated@@146 $generated)
 :pattern ( ($generated@@23 $generated@@7 $generated@@146 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@156  (and (=> (= (ControlFlow 0 2) (- 0 3)) (= $generated@@147 ($generated@@35 17))) (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@148 ($generated@@35 16))))))
(let (($generated@@157  (=> (and (or (not (= $generated@@147 ($generated@@35 17))) (not true)) (= (ControlFlow 0 5) 2)) $generated@@156)))
(let (($generated@@158  (=> (and (= $generated@@147 ($generated@@35 17)) (= (ControlFlow 0 4) 2)) $generated@@156)))
(let (($generated@@159  (=> (= $generated@@149 ($generated@@81 $generated@@150 $generated@@151 $generated@@1 false)) (=> (and (and (= $generated@@152 ($generated@@37 $generated@@24 ($generated@@29 ($generated@@43 $generated@@7 ($generated@@11 ($generated@@35 16))) ($generated@@43 $generated@@7 ($generated@@11 ($generated@@35 17)))))) ($generated@@23 $generated@@24 $generated@@152 ($generated@@25 $generated $generated))) (and ($generated@@22 $generated@@152) (= ($generated@@29 ($generated@@43 $generated@@7 ($generated@@11 $generated@@148)) ($generated@@43 $generated@@7 ($generated@@11 $generated@@147))) $generated@@152))) (and (=> (= (ControlFlow 0 6) 4) $generated@@158) (=> (= (ControlFlow 0 6) 5) $generated@@157))))))
(let (($generated@@160  (=> (and (and ($generated@@153 $generated@@151) ($generated@@154 $generated@@151)) (and (= 0 $generated@@155) (= (ControlFlow 0 7) 6))) $generated@@159)))
$generated@@160))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
