(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@37 (T@U T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@T T@T) T@T)
(declare-fun $generated@@59 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@123 (T@U Int) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@148 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@150 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert ($generated@@26 $generated@@27))
(assert ($generated@@26 $generated@@28))
(assert (= ($generated@@29 $generated@@30) 0))
(assert (= ($generated@@10 $generated@@32) 3))
(assert (forall (($generated@@35 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@35 $generated@@27)  (or (= $generated@@35 $generated@@33) (= ($generated@@34 $generated@@35) $generated@@27)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@35 $generated@@27))
)))
(assert (forall (($generated@@36 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@36 $generated@@28)  (or (= $generated@@36 $generated@@33) (= ($generated@@34 $generated@@36) $generated@@28)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 $generated@@28))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (and ($generated@@37 $generated@@40 $generated@@27 $generated@@41) ($generated@@38 $generated@@41)) ($generated@@37 $generated@@40 $generated@@39 $generated@@41))
 :pattern ( ($generated@@37 $generated@@40 $generated@@27 $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (and ($generated@@37 $generated@@42 $generated@@28 $generated@@43) ($generated@@38 $generated@@43)) ($generated@@37 $generated@@42 $generated@@39 $generated@@43))
 :pattern ( ($generated@@37 $generated@@42 $generated@@28 $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@44 $generated@@32 $generated@@46 $generated@@45 $generated@@47) ($generated@@44 $generated@@32 $generated@@46 $generated@@39 $generated@@47))
 :pattern ( ($generated@@44 $generated@@32 $generated@@46 $generated@@45 $generated@@47))
 :pattern ( ($generated@@44 $generated@@32 $generated@@46 $generated@@39 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@44 $generated@@32 $generated@@49 $generated@@48 $generated@@50) ($generated@@44 $generated@@32 $generated@@49 $generated@@27 $generated@@50))
 :pattern ( ($generated@@44 $generated@@32 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@44 $generated@@32 $generated@@49 $generated@@27 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@44 $generated@@32 $generated@@52 $generated@@51 $generated@@53) ($generated@@44 $generated@@32 $generated@@52 $generated@@28 $generated@@53))
 :pattern ( ($generated@@44 $generated@@32 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@44 $generated@@32 $generated@@52 $generated@@28 $generated@@53))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@55 $generated@@62 $generated@@63 ($generated@@59 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@66) $generated@@64)
 :weight 0
)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (or (= $generated@@71 $generated@@72) (= ($generated@@55 $generated@@67 $generated@@68 ($generated@@59 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@72) ($generated@@55 $generated@@67 $generated@@68 $generated@@70 $generated@@72)))
 :weight 0
))) (= ($generated@@10 $generated@@56) 4)) (= ($generated@@10 $generated@@57) 5)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (= ($generated@@10 ($generated@@58 $generated@@73 $generated@@74)) 6))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@60 ($generated@@58 $generated@@75 $generated@@76)) $generated@@75)
 :pattern ( ($generated@@58 $generated@@75 $generated@@76))
))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@61 ($generated@@58 $generated@@77 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@58 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@44 $generated@@32 $generated@@79 $generated@@39 $generated@@80)  (or (= $generated@@79 $generated@@33) ($generated@@15 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@80 $generated@@79) $generated@@0)))))
 :pattern ( ($generated@@44 $generated@@32 $generated@@79 $generated@@39 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@44 $generated@@32 $generated@@81 $generated@@27 $generated@@82)  (or (= $generated@@81 $generated@@33) ($generated@@15 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@82 $generated@@81) $generated@@0)))))
 :pattern ( ($generated@@44 $generated@@32 $generated@@81 $generated@@27 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@44 $generated@@32 $generated@@83 $generated@@28 $generated@@84)  (or (= $generated@@83 $generated@@33) ($generated@@15 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@84 $generated@@83) $generated@@0)))))
 :pattern ( ($generated@@44 $generated@@32 $generated@@83 $generated@@28 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@85 $generated@@86 $generated@@87) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@15 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@86 $generated@@88) $generated@@0))) ($generated@@15 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@87 $generated@@88) $generated@@0))))
 :pattern ( ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@87 $generated@@88) $generated@@0))
)))
 :pattern ( ($generated@@85 $generated@@86 $generated@@87))
)))
(assert (= ($generated@@10 $generated@@89) 7))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (and ($generated@@31 $generated@@89 $generated@@93 ($generated@@91 $generated@@95)) ($generated@@92 $generated@@94 $generated@@95)) ($generated@@31 $generated@@89 ($generated@@90 $generated@@93 $generated@@94) ($generated@@91 $generated@@95)))
 :pattern ( ($generated@@31 $generated@@89 ($generated@@90 $generated@@93 $generated@@94) ($generated@@91 $generated@@95)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 ($generated@@54 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@54 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@29 ($generated@@90 $generated@@99 $generated@@100)) (+ 1 ($generated@@29 $generated@@99)))
 :pattern ( ($generated@@90 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@37 ($generated@@96 $generated@@104 $generated@@101) $generated@@102 $generated@@103) ($generated@@44 $generated@@104 $generated@@101 $generated@@102 $generated@@103))
 :pattern ( ($generated@@37 ($generated@@96 $generated@@104 $generated@@101) $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> ($generated@@85 $generated@@105 $generated@@106) (=> ($generated@@37 $generated@@107 $generated@@108 $generated@@105) ($generated@@37 $generated@@107 $generated@@108 $generated@@106)))
 :pattern ( ($generated@@85 $generated@@105 $generated@@106) ($generated@@37 $generated@@107 $generated@@108 $generated@@105))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (!  (=> ($generated@@85 $generated@@109 $generated@@110) (=> ($generated@@44 $generated@@113 $generated@@111 $generated@@112 $generated@@109) ($generated@@44 $generated@@113 $generated@@111 $generated@@112 $generated@@110)))
 :pattern ( ($generated@@85 $generated@@109 $generated@@110) ($generated@@44 $generated@@113 $generated@@111 $generated@@112 $generated@@109))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@92 $generated@@114 $generated@@48) (and (= ($generated@@96 $generated@@32 ($generated@@54 $generated@@32 $generated@@114)) $generated@@114) ($generated@@31 $generated@@32 ($generated@@54 $generated@@32 $generated@@114) $generated@@48)))
 :pattern ( ($generated@@92 $generated@@114 $generated@@48))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@92 $generated@@115 $generated@@27) (and (= ($generated@@96 $generated@@32 ($generated@@54 $generated@@32 $generated@@115)) $generated@@115) ($generated@@31 $generated@@32 ($generated@@54 $generated@@32 $generated@@115) $generated@@27)))
 :pattern ( ($generated@@92 $generated@@115 $generated@@27))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@92 $generated@@116 $generated@@51) (and (= ($generated@@96 $generated@@32 ($generated@@54 $generated@@32 $generated@@116)) $generated@@116) ($generated@@31 $generated@@32 ($generated@@54 $generated@@32 $generated@@116) $generated@@51)))
 :pattern ( ($generated@@92 $generated@@116 $generated@@51))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@92 $generated@@117 $generated@@28) (and (= ($generated@@96 $generated@@32 ($generated@@54 $generated@@32 $generated@@117)) $generated@@117) ($generated@@31 $generated@@32 ($generated@@54 $generated@@32 $generated@@117) $generated@@28)))
 :pattern ( ($generated@@92 $generated@@117 $generated@@28))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@92 $generated@@118 $generated@@45) (and (= ($generated@@96 $generated@@32 ($generated@@54 $generated@@32 $generated@@118)) $generated@@118) ($generated@@31 $generated@@32 ($generated@@54 $generated@@32 $generated@@118) $generated@@45)))
 :pattern ( ($generated@@92 $generated@@118 $generated@@45))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@92 $generated@@119 $generated@@39) (and (= ($generated@@96 $generated@@32 ($generated@@54 $generated@@32 $generated@@119)) $generated@@119) ($generated@@31 $generated@@32 ($generated@@54 $generated@@32 $generated@@119) $generated@@39)))
 :pattern ( ($generated@@92 $generated@@119 $generated@@39))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@120 $generated@@45)  (and ($generated@@31 $generated@@32 $generated@@120 $generated@@39) (or (not (= $generated@@120 $generated@@33)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@120 $generated@@45))
 :pattern ( ($generated@@31 $generated@@32 $generated@@120 $generated@@39))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@121 $generated@@48)  (and ($generated@@31 $generated@@32 $generated@@121 $generated@@27) (or (not (= $generated@@121 $generated@@33)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@121 $generated@@48))
 :pattern ( ($generated@@31 $generated@@32 $generated@@121 $generated@@27))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@122 $generated@@51)  (and ($generated@@31 $generated@@32 $generated@@122 $generated@@28) (or (not (= $generated@@122 $generated@@33)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@122 $generated@@51))
 :pattern ( ($generated@@31 $generated@@32 $generated@@122 $generated@@28))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 Int) ($generated@@126 T@U) ) (!  (and (=> (= $generated@@125 ($generated@@29 $generated@@124)) (= ($generated@@123 ($generated@@90 $generated@@124 $generated@@126) $generated@@125) $generated@@126)) (=> (or (not (= $generated@@125 ($generated@@29 $generated@@124))) (not true)) (= ($generated@@123 ($generated@@90 $generated@@124 $generated@@126) $generated@@125) ($generated@@123 $generated@@124 $generated@@125))))
 :pattern ( ($generated@@123 ($generated@@90 $generated@@124 $generated@@126) $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> ($generated@@44 $generated@@32 $generated@@127 $generated@@27 $generated@@128) ($generated@@44 $generated@@32 $generated@@127 $generated@@39 $generated@@128))
 :pattern ( ($generated@@44 $generated@@32 $generated@@127 $generated@@27 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> ($generated@@44 $generated@@32 $generated@@129 $generated@@28 $generated@@130) ($generated@@44 $generated@@32 $generated@@129 $generated@@39 $generated@@130))
 :pattern ( ($generated@@44 $generated@@32 $generated@@129 $generated@@28 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (or (not (= $generated@@131 $generated@@133)) (not true)) (=> (and ($generated@@85 $generated@@131 $generated@@132) ($generated@@85 $generated@@132 $generated@@133)) ($generated@@85 $generated@@131 $generated@@133)))
 :pattern ( ($generated@@85 $generated@@131 $generated@@132) ($generated@@85 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@92 ($generated@@96 $generated@@136 $generated@@134) $generated@@135) ($generated@@31 $generated@@136 $generated@@134 $generated@@135))
 :pattern ( ($generated@@92 ($generated@@96 $generated@@136 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (! (<= 0 ($generated@@29 $generated@@137))
 :pattern ( ($generated@@29 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@44 $generated@@89 $generated@@138 ($generated@@91 $generated@@139) $generated@@140) (forall (($generated@@141 Int) ) (!  (=> (and (<= 0 $generated@@141) (< $generated@@141 ($generated@@29 $generated@@138))) ($generated@@37 ($generated@@123 $generated@@138 $generated@@141) $generated@@139 $generated@@140))
 :pattern ( ($generated@@123 $generated@@138 $generated@@141))
)))
 :pattern ( ($generated@@44 $generated@@89 $generated@@138 ($generated@@91 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@91 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@91 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@144 ($generated@@91 $generated@@145)) $generated)
 :pattern ( ($generated@@91 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@54 $generated@@147 ($generated@@96 $generated@@147 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@96 $generated@@147 $generated@@146))
)))
(assert  (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@148 $generated@@151 $generated@@152 $generated@@153 ($generated@@150 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@156 $generated@@157) $generated@@154)
 :weight 0
)) (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@148 $generated@@158 $generated@@159 $generated@@160 ($generated@@150 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@148 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@148 $generated@@167 $generated@@168 $generated@@169 ($generated@@150 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@148 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@15 ($generated@@148 $generated@@32 $generated@@56 $generated@@11 ($generated@@149 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (or (not (= $generated@@180 $generated@@176)) (not true)) ($generated@@15 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@177 $generated@@180) $generated@@178)))) $generated@@179))
 :pattern ( ($generated@@148 $generated@@32 $generated@@56 $generated@@11 ($generated@@149 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (and (= ($generated@@182 ($generated@@90 $generated@@184 $generated@@185)) $generated@@184) (= ($generated@@183 ($generated@@90 $generated@@184 $generated@@185)) $generated@@185))
 :pattern ( ($generated@@90 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@92 $generated@@186 ($generated@@91 $generated@@187)) (and (= ($generated@@96 $generated@@89 ($generated@@54 $generated@@89 $generated@@186)) $generated@@186) ($generated@@31 $generated@@89 ($generated@@54 $generated@@89 $generated@@186) ($generated@@91 $generated@@187))))
 :pattern ( ($generated@@92 $generated@@186 ($generated@@91 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@188 $generated@@27) ($generated@@31 $generated@@32 $generated@@188 $generated@@39))
 :pattern ( ($generated@@31 $generated@@32 $generated@@188 $generated@@27))
)))
(assert (forall (($generated@@189 T@U) ) (!  (=> ($generated@@92 $generated@@189 $generated@@27) ($generated@@92 $generated@@189 $generated@@39))
 :pattern ( ($generated@@92 $generated@@189 $generated@@27))
)))
(assert (forall (($generated@@190 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@190 $generated@@28) ($generated@@31 $generated@@32 $generated@@190 $generated@@39))
 :pattern ( ($generated@@31 $generated@@32 $generated@@190 $generated@@28))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> ($generated@@92 $generated@@191 $generated@@28) ($generated@@92 $generated@@191 $generated@@39))
 :pattern ( ($generated@@92 $generated@@191 $generated@@28))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> ($generated@@38 ($generated@@59 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@192 $generated@@193 ($generated@@59 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@192 $generated@@193) $generated@@194 $generated@@195))) ($generated@@85 $generated@@192 ($generated@@59 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@192 $generated@@193 ($generated@@59 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@192 $generated@@193) $generated@@194 $generated@@195))))
 :pattern ( ($generated@@59 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@192 $generated@@193 ($generated@@59 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@192 $generated@@193) $generated@@194 $generated@@195)))
)))
(assert (= ($generated@@144 $generated@@48) $generated@@1))
(assert (= ($generated@@196 $generated@@48) $generated@@7))
(assert (= ($generated@@144 $generated@@27) $generated@@2))
(assert (= ($generated@@196 $generated@@27) $generated@@7))
(assert (= ($generated@@144 $generated@@51) $generated@@3))
(assert (= ($generated@@196 $generated@@51) $generated@@8))
(assert (= ($generated@@144 $generated@@28) $generated@@4))
(assert (= ($generated@@196 $generated@@28) $generated@@8))
(assert (= ($generated@@144 $generated@@45) $generated@@5))
(assert (= ($generated@@196 $generated@@45) $generated@@9))
(assert (= ($generated@@144 $generated@@39) $generated@@6))
(assert (= ($generated@@196 $generated@@39) $generated@@9))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@197 $generated@@39)  (or (= $generated@@197 $generated@@33) ($generated@@26 ($generated@@34 $generated@@197))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@197 $generated@@39))
)))
(assert (forall (($generated@@198 T@U) ) (!  (=> (= ($generated@@29 $generated@@198) 0) (= $generated@@198 $generated@@30))
 :pattern ( ($generated@@29 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@31 $generated@@89 $generated@@199 ($generated@@91 $generated@@200)) (forall (($generated@@201 Int) ) (!  (=> (and (<= 0 $generated@@201) (< $generated@@201 ($generated@@29 $generated@@199))) ($generated@@92 ($generated@@123 $generated@@199 $generated@@201) $generated@@200))
 :pattern ( ($generated@@123 $generated@@199 $generated@@201))
)))
 :pattern ( ($generated@@31 $generated@@89 $generated@@199 ($generated@@91 $generated@@200)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Bool)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () Bool)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@217  (=> (= $generated@@202 ($generated@@149 $generated@@33 $generated@@203 $generated@@0 false)) (=> (and (and (or (not (= $generated@@204 $generated@@33)) (not true)) ($generated@@31 $generated@@32 $generated@@204 $generated@@27)) (and (not ($generated@@15 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@203 $generated@@204) $generated@@0)))) (= $generated@@205 ($generated@@59 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@203 $generated@@204 ($generated@@59 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@203 $generated@@204) $generated@@0 ($generated@@96 $generated@@11 ($generated@@14 true))))))) (=> (and (and (and ($generated@@38 $generated@@205) ($generated@@206 $generated@@205)) (and (or (not (= $generated@@207 $generated@@33)) (not true)) ($generated@@31 $generated@@32 $generated@@207 $generated@@28))) (and (and (not ($generated@@15 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@205 $generated@@207) $generated@@0)))) (= $generated@@208 ($generated@@59 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@205 $generated@@207 ($generated@@59 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@205 $generated@@207) $generated@@0 ($generated@@96 $generated@@11 ($generated@@14 true)))))) (and ($generated@@38 $generated@@208) ($generated@@206 $generated@@208)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@209 ($generated@@90 ($generated@@90 $generated@@30 ($generated@@96 $generated@@32 $generated@@204)) ($generated@@96 $generated@@32 $generated@@207))) (= (ControlFlow 0 2) (- 0 1))) true))))))))
(let (($generated@@218  (=> (and ($generated@@38 $generated@@203) ($generated@@206 $generated@@203)) (=> (and (and (and (and (=> $generated@@210 (and ($generated@@31 $generated@@32 $generated@@211 $generated@@48) ($generated@@44 $generated@@32 $generated@@211 $generated@@48 $generated@@203))) true) (and (=> $generated@@212 (and ($generated@@31 $generated@@32 $generated@@213 $generated@@51) ($generated@@44 $generated@@32 $generated@@213 $generated@@51 $generated@@203))) true)) (and (and ($generated@@31 $generated@@89 $generated@@214 ($generated@@91 $generated@@45)) ($generated@@44 $generated@@89 $generated@@214 ($generated@@91 $generated@@45) $generated@@203)) true)) (and (and (and ($generated@@31 $generated@@89 $generated@@215 ($generated@@91 $generated@@48)) ($generated@@44 $generated@@89 $generated@@215 ($generated@@91 $generated@@48) $generated@@203)) true) (and (= 1 $generated@@216) (= (ControlFlow 0 5) 2)))) $generated@@217))))
$generated@@218)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
