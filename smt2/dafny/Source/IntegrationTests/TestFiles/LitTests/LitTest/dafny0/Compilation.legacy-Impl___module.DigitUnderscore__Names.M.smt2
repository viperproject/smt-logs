(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@75 (Real) Int)
(declare-fun $generated@@77 (Int) Int)
(declare-fun $generated@@79 (Real) Real)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@134 (Int) Real)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@1) 0))
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@28 $generated@@1) $generated@@2))
(assert (= ($generated@@10 $generated@@30) 3))
(assert (forall (($generated@@34 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@34 $generated@@31)  (or (= $generated@@34 $generated@@32) (= ($generated@@33 $generated@@34) $generated@@31)))
 :pattern ( ($generated@@29 $generated@@30 $generated@@34 $generated@@31))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@35 $generated@@30 $generated@@37 $generated@@36 $generated@@38) ($generated@@35 $generated@@30 $generated@@37 $generated@@31 $generated@@38))
 :pattern ( ($generated@@35 $generated@@30 $generated@@37 $generated@@36 $generated@@38))
 :pattern ( ($generated@@35 $generated@@30 $generated@@37 $generated@@31 $generated@@38))
)))
(assert (= ($generated@@26 $generated@@39) 0))
(assert (= ($generated@@40 $generated@@3 $generated@@7) $generated@@39))
(assert  (not ($generated@@41 $generated@@39)))
(assert (= ($generated@@26 $generated@@42) 0))
(assert (= ($generated@@40 $generated@@3 $generated@@8) $generated@@42))
(assert  (not ($generated@@41 $generated@@42)))
(assert (= ($generated@@26 $generated@@43) 0))
(assert (= ($generated@@40 $generated@@3 $generated@@9) $generated@@43))
(assert  (not ($generated@@41 $generated@@43)))
(assert  (and (and (and (and (and (and (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@45 $generated@@52 $generated@@53 ($generated@@49 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@56) $generated@@54)
 :weight 0
)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (or (= $generated@@61 $generated@@62) (= ($generated@@45 $generated@@57 $generated@@58 ($generated@@49 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@62) ($generated@@45 $generated@@57 $generated@@58 $generated@@60 $generated@@62)))
 :weight 0
))) (= ($generated@@10 $generated@@46) 4)) (= ($generated@@10 $generated@@47) 5)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@10 ($generated@@48 $generated@@63 $generated@@64)) 6))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@50 ($generated@@48 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@51 ($generated@@48 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@48 $generated@@67 $generated@@68))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@35 $generated@@30 $generated@@69 $generated@@31 $generated@@70)  (or (= $generated@@69 $generated@@32) ($generated@@15 ($generated@@44 $generated@@11 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@70 $generated@@69) $generated@@1)))))
 :pattern ( ($generated@@35 $generated@@30 $generated@@69 $generated@@31 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@71 $generated@@72 $generated@@73) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@15 ($generated@@44 $generated@@11 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@72 $generated@@74) $generated@@1))) ($generated@@15 ($generated@@44 $generated@@11 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@73 $generated@@74) $generated@@1))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@73 $generated@@74) $generated@@1))
)))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 Real) ) (! (= ($generated@@75 $generated@@76) (to_int $generated@@76))
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@77 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 Real) ) (! (= ($generated@@79 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 ($generated@@44 $generated@@86 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@44 $generated@@86 $generated@@85))
)))
(assert ($generated@@41 $generated@@1))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and (and ($generated@@87 $generated@@88) (and (or (not (= $generated@@89 $generated@@32)) (not true)) (= ($generated@@33 $generated@@89) $generated@@31))) ($generated@@15 ($generated@@44 $generated@@11 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@88 $generated@@89) $generated@@1)))) ($generated@@35 $generated@@12 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@88 $generated@@89) $generated@@39)) $generated $generated@@88))
 :pattern ( ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@88 $generated@@89) $generated@@39)))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and ($generated@@87 $generated@@90) (and (or (not (= $generated@@91 $generated@@32)) (not true)) (= ($generated@@33 $generated@@91) $generated@@31))) ($generated@@15 ($generated@@44 $generated@@11 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@90 $generated@@91) $generated@@1)))) ($generated@@35 $generated@@12 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@90 $generated@@91) $generated@@42)) $generated $generated@@90))
 :pattern ( ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@90 $generated@@91) $generated@@42)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (and (and ($generated@@87 $generated@@92) (and (or (not (= $generated@@93 $generated@@32)) (not true)) (= ($generated@@33 $generated@@93) $generated@@31))) ($generated@@15 ($generated@@44 $generated@@11 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@92 $generated@@93) $generated@@1)))) ($generated@@35 $generated@@12 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@92 $generated@@93) $generated@@43)) $generated $generated@@92))
 :pattern ( ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@92 $generated@@93) $generated@@43)))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (!  (=> ($generated@@71 $generated@@94 $generated@@95) (=> ($generated@@35 $generated@@98 $generated@@96 $generated@@97 $generated@@94) ($generated@@35 $generated@@98 $generated@@96 $generated@@97 $generated@@95)))
 :pattern ( ($generated@@71 $generated@@94 $generated@@95) ($generated@@35 $generated@@98 $generated@@96 $generated@@97 $generated@@94))
)))
(assert  (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@99 $generated@@102 $generated@@103 $generated@@104 ($generated@@101 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@107 $generated@@108) $generated@@105)
 :weight 0
)) (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@99 $generated@@109 $generated@@110 $generated@@111 ($generated@@101 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@99 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@99 $generated@@118 $generated@@119 $generated@@120 ($generated@@101 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@99 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@15 ($generated@@99 $generated@@30 $generated@@46 $generated@@11 ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))  (=> (and (or (not (= $generated@@131 $generated@@127)) (not true)) ($generated@@15 ($generated@@44 $generated@@11 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@128 $generated@@131) $generated@@129)))) (= $generated@@131 $generated@@130)))
 :pattern ( ($generated@@99 $generated@@30 $generated@@46 $generated@@11 ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@133 $generated@@36)  (and ($generated@@29 $generated@@30 $generated@@133 $generated@@31) (or (not (= $generated@@133 $generated@@32)) (not true))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@133 $generated@@36))
 :pattern ( ($generated@@29 $generated@@30 $generated@@133 $generated@@31))
)))
(assert (forall (($generated@@135 Int) ) (! (= ($generated@@134 $generated@@135) (to_real $generated@@135))
 :pattern ( ($generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (or (not (= $generated@@136 $generated@@138)) (not true)) (=> (and ($generated@@71 $generated@@136 $generated@@137) ($generated@@71 $generated@@137 $generated@@138)) ($generated@@71 $generated@@136 $generated@@138)))
 :pattern ( ($generated@@71 $generated@@136 $generated@@137) ($generated@@71 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (and (= ($generated@@139 ($generated@@40 $generated@@140 $generated@@141)) $generated@@140) (= ($generated@@28 ($generated@@40 $generated@@140 $generated@@141)) $generated@@141))
 :pattern ( ($generated@@40 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 Int) ) (! (= ($generated@@75 ($generated@@134 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@75 ($generated@@134 $generated@@142)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@44 $generated@@144 ($generated@@84 $generated@@144 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@84 $generated@@144 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and ($generated@@87 $generated@@145) (and (or (not (= $generated@@146 $generated@@32)) (not true)) (= ($generated@@33 $generated@@146) $generated@@31))) ($generated@@29 $generated@@12 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@145 $generated@@146) $generated@@39)) $generated))
 :pattern ( ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@145 $generated@@146) $generated@@39)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and ($generated@@87 $generated@@147) (and (or (not (= $generated@@148 $generated@@32)) (not true)) (= ($generated@@33 $generated@@148) $generated@@31))) ($generated@@29 $generated@@12 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@147 $generated@@148) $generated@@42)) $generated))
 :pattern ( ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@147 $generated@@148) $generated@@42)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and ($generated@@87 $generated@@149) (and (or (not (= $generated@@150 $generated@@32)) (not true)) (= ($generated@@33 $generated@@150) $generated@@31))) ($generated@@29 $generated@@12 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@149 $generated@@150) $generated@@43)) $generated))
 :pattern ( ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@149 $generated@@150) $generated@@43)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> ($generated@@87 ($generated@@49 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@151 $generated@@152 ($generated@@49 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@151 $generated@@152) $generated@@153 $generated@@154))) ($generated@@71 $generated@@151 ($generated@@49 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@151 $generated@@152 ($generated@@49 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@151 $generated@@152) $generated@@153 $generated@@154))))
 :pattern ( ($generated@@49 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@151 $generated@@152 ($generated@@49 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@151 $generated@@152) $generated@@153 $generated@@154)))
)))
(assert (= ($generated@@27 $generated@@31) $generated@@4))
(assert (= ($generated@@155 $generated@@31) $generated@@6))
(assert (= ($generated@@27 $generated@@36) $generated@@5))
(assert (= ($generated@@155 $generated@@36) $generated@@6))
(assert (forall (($generated@@156 Int) ) (! (= ($generated@@84 $generated@@12 ($generated@@16 ($generated@@77 $generated@@156))) ($generated@@81 $generated@@47 ($generated@@84 $generated@@12 ($generated@@16 $generated@@156))))
 :pattern ( ($generated@@84 $generated@@12 ($generated@@16 ($generated@@77 $generated@@156))))
)))
(assert (forall (($generated@@157 Real) ) (! (= ($generated@@84 $generated@@13 ($generated@@18 ($generated@@79 $generated@@157))) ($generated@@81 $generated@@47 ($generated@@84 $generated@@13 ($generated@@18 $generated@@157))))
 :pattern ( ($generated@@84 $generated@@13 ($generated@@18 ($generated@@79 $generated@@157))))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@T) ) (! (= ($generated@@84 $generated@@159 ($generated@@81 $generated@@159 $generated@@158)) ($generated@@81 $generated@@47 ($generated@@84 $generated@@159 $generated@@158)))
 :pattern ( ($generated@@84 $generated@@159 ($generated@@81 $generated@@159 $generated@@158)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! ($generated@@35 $generated@@12 $generated@@161 $generated $generated@@160)
 :pattern ( ($generated@@35 $generated@@12 $generated@@161 $generated $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! ($generated@@29 $generated@@12 $generated@@162 $generated)
 :pattern ( ($generated@@29 $generated@@12 $generated@@162 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () Int)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () Real)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@175  (and (=> (= (ControlFlow 0 2) (- 0 5)) (= ($generated@@17 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@163 $generated@@164) $generated@@39))) ($generated@@75 ($generated@@79 7.0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@17 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@163 $generated@@164) $generated@@42))) ($generated@@77 8))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@17 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@163 $generated@@164) $generated@@43))) ($generated@@77 9))) (=> (and (and (and (= ($generated@@17 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@163 $generated@@164) $generated@@39))) ($generated@@75 ($generated@@79 7.0))) (= ($generated@@17 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@163 $generated@@164) $generated@@42))) ($generated@@77 8))) (= ($generated@@17 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@163 $generated@@164) $generated@@43))) ($generated@@77 9))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@15 ($generated@@99 $generated@@30 $generated@@46 $generated@@11 $generated@@165 $generated@@164 $generated@@43))))))))
(let (($generated@@176  (=> (and (not (and (= ($generated@@17 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@163 $generated@@164) $generated@@39))) ($generated@@75 ($generated@@79 7.0))) (= ($generated@@17 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@163 $generated@@164) $generated@@42))) ($generated@@77 8)))) (= (ControlFlow 0 7) 2)) $generated@@175)))
(let (($generated@@177  (=> (and (and (= ($generated@@17 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@163 $generated@@164) $generated@@39))) ($generated@@75 ($generated@@79 7.0))) (= ($generated@@17 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@163 $generated@@164) $generated@@42))) ($generated@@77 8))) (= (ControlFlow 0 6) 2)) $generated@@175)))
(let (($generated@@178  (=> (or (not (= ($generated@@17 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@163 $generated@@164) $generated@@39))) ($generated@@75 ($generated@@79 7.0)))) (not true)) (and (=> (= (ControlFlow 0 9) 6) $generated@@177) (=> (= (ControlFlow 0 9) 7) $generated@@176)))))
(let (($generated@@179  (=> (= ($generated@@17 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@163 $generated@@164) $generated@@39))) ($generated@@75 ($generated@@79 7.0))) (and (=> (= (ControlFlow 0 8) 6) $generated@@177) (=> (= (ControlFlow 0 8) 7) $generated@@176)))))
(let (($generated@@180  (=> (= $generated@@165 ($generated@@100 $generated@@32 $generated@@166 $generated@@1 $generated@@164)) (and (=> (= (ControlFlow 0 10) (- 0 14)) ($generated@@15 ($generated@@99 $generated@@30 $generated@@46 $generated@@11 $generated@@165 $generated@@164 $generated@@39))) (=> ($generated@@15 ($generated@@99 $generated@@30 $generated@@46 $generated@@11 $generated@@165 $generated@@164 $generated@@39)) (=> (= $generated@@167 ($generated@@77 7)) (=> (and (= $generated@@168 ($generated@@49 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@166 $generated@@164 ($generated@@49 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@166 $generated@@164) $generated@@39 ($generated@@84 $generated@@12 ($generated@@16 $generated@@167))))) ($generated@@87 $generated@@168)) (and (=> (= (ControlFlow 0 10) (- 0 13)) ($generated@@15 ($generated@@99 $generated@@30 $generated@@46 $generated@@11 $generated@@165 $generated@@164 $generated@@42))) (=> ($generated@@15 ($generated@@99 $generated@@30 $generated@@46 $generated@@11 $generated@@165 $generated@@164 $generated@@42)) (=> (= $generated@@169 ($generated@@77 8)) (=> (and (= $generated@@170 ($generated@@49 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@168 $generated@@164 ($generated@@49 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@168 $generated@@164) $generated@@42 ($generated@@84 $generated@@12 ($generated@@16 $generated@@169))))) ($generated@@87 $generated@@170)) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@15 ($generated@@99 $generated@@30 $generated@@46 $generated@@11 $generated@@165 $generated@@164 $generated@@43))) (=> ($generated@@15 ($generated@@99 $generated@@30 $generated@@46 $generated@@11 $generated@@165 $generated@@164 $generated@@43)) (=> (and (and (= $generated@@171 ($generated@@77 9)) (= $generated@@163 ($generated@@49 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@170 $generated@@164 ($generated@@49 $generated@@46 $generated@@47 ($generated@@45 $generated@@30 ($generated@@48 $generated@@46 $generated@@47) $generated@@170 $generated@@164) $generated@@43 ($generated@@84 $generated@@12 ($generated@@16 $generated@@171)))))) (and ($generated@@87 $generated@@163) (= $generated@@172 ($generated@@79 7.0)))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (= ($generated@@134 ($generated@@75 $generated@@172)) $generated@@172)) (=> (= ($generated@@134 ($generated@@75 $generated@@172)) $generated@@172) (and (=> (= (ControlFlow 0 10) 8) $generated@@179) (=> (= (ControlFlow 0 10) 9) $generated@@178))))))))))))))))))
(let (($generated@@181  (=> (and ($generated@@87 $generated@@166) ($generated@@173 $generated@@166)) (=> (and (and (or (not (= $generated@@164 $generated@@32)) (not true)) (and ($generated@@29 $generated@@30 $generated@@164 $generated@@36) ($generated@@35 $generated@@30 $generated@@164 $generated@@36 $generated@@166))) (and (= 0 $generated@@174) (= (ControlFlow 0 15) 10))) $generated@@180))))
$generated@@181))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
