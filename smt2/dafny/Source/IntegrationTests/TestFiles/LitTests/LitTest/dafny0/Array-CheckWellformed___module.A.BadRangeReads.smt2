(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U Int) T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@50 (T@U Int) T@U)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@96 (Int) Int)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@U Int) T@U)
(declare-fun $generated@@107 (T@U) Bool)
(declare-fun $generated@@108 (T@U T@U T@U) Bool)
(declare-fun $generated@@113 (T@U T@U) Bool)
(declare-fun $generated@@117 (T@T T@U) T@U)
(declare-fun $generated@@122 () Int)
(declare-fun $generated@@123 (T@U T@U Bool) Bool)
(declare-fun $generated@@124 (T@U T@U Bool) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@186 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@3) 0))
(assert (= ($generated@@27 $generated) $generated@@1))
(assert (= ($generated@@27 $generated@@0) $generated@@2))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and (or (not (= $generated@@34 $generated@@30)) (not true)) (= ($generated@@31 $generated@@34) ($generated@@29 $generated@@33))) ($generated@@32 $generated@@12 ($generated@@16 ($generated@@28 $generated@@34)) $generated@@0))
 :pattern ( ($generated@@28 $generated@@34) ($generated@@29 $generated@@33))
)))
(assert (= ($generated@@10 $generated@@36) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40) ($generated@@35 $generated@@36 $generated@@39 ($generated@@29 $generated@@38) $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@29 $generated@@38) $generated@@40))
)))
(assert (= ($generated@@41 $generated@@42) 0))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 Int) ) (!  (=> (and (<= 0 $generated@@47) (<= $generated@@47 ($generated@@41 $generated@@45))) (= ($generated@@43 ($generated@@44 $generated@@45 $generated@@46) $generated@@47) ($generated@@44 ($generated@@43 $generated@@45 $generated@@47) $generated@@46)))
 :pattern ( ($generated@@43 ($generated@@44 $generated@@45 $generated@@46) $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@49 $generated@@48)  (or (= $generated@@49 $generated@@30) (= ($generated@@31 $generated@@49) $generated@@48)))
 :pattern ( ($generated@@32 $generated@@36 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 Int) ) (!  (=> (= $generated@@54 ($generated@@41 $generated@@52)) (and (= ($generated@@50 ($generated@@51 $generated@@52 $generated@@53) $generated@@54) $generated@@52) (= ($generated@@43 ($generated@@51 $generated@@52 $generated@@53) $generated@@54) $generated@@53)))
 :pattern ( ($generated@@50 ($generated@@51 $generated@@52 $generated@@53) $generated@@54))
 :pattern ( ($generated@@43 ($generated@@51 $generated@@52 $generated@@53) $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@56 $generated@@55 $generated@@57) ($generated@@35 $generated@@36 $generated@@56 $generated@@48 $generated@@57))
 :pattern ( ($generated@@35 $generated@@36 $generated@@56 $generated@@55 $generated@@57))
 :pattern ( ($generated@@35 $generated@@36 $generated@@56 $generated@@48 $generated@@57))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@59 $generated@@66 $generated@@67 ($generated@@63 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@70) $generated@@68)
 :weight 0
)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (or (= $generated@@75 $generated@@76) (= ($generated@@59 $generated@@71 $generated@@72 ($generated@@63 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@76) ($generated@@59 $generated@@71 $generated@@72 $generated@@74 $generated@@76)))
 :weight 0
))) (= ($generated@@10 $generated@@60) 4)) (= ($generated@@10 $generated@@61) 5)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (= ($generated@@10 ($generated@@62 $generated@@77 $generated@@78)) 6))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@65 ($generated@@62 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@62 $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@84 ($generated@@29 $generated@@83) $generated@@85)  (or (= $generated@@84 $generated@@30) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@85 $generated@@84) $generated@@3)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@84 ($generated@@29 $generated@@83) $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@86 $generated@@48 $generated@@87)  (or (= $generated@@86 $generated@@30) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@87 $generated@@86) $generated@@3)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@86 $generated@@48 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 Int) ($generated@@93 Int) ) (!  (=> (and (and (= (+ $generated@@92 1) $generated@@93) (<= 0 $generated@@92)) (<= $generated@@93 ($generated@@28 $generated@@91))) (= ($generated@@50 ($generated@@88 $generated@@90 $generated@@91) $generated@@93) ($generated@@44 ($generated@@50 ($generated@@88 $generated@@90 $generated@@91) $generated@@92) ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@90 $generated@@91) ($generated@@89 $generated@@92)))))
 :pattern ( ($generated@@50 ($generated@@88 $generated@@90 $generated@@91) $generated@@92) ($generated@@50 ($generated@@88 $generated@@90 $generated@@91) $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 Int) ) (!  (=> (= $generated@@95 0) (= ($generated@@43 $generated@@94 $generated@@95) $generated@@94))
 :pattern ( ($generated@@43 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 Int) ) (! (= ($generated@@96 $generated@@97) $generated@@97)
 :pattern ( ($generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 $generated@@99) $generated@@99)
 :pattern ( ($generated@@98 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 Int) ($generated@@104 Int) ) (!  (=> (and (and (<= 0 $generated@@104) (< $generated@@104 $generated@@103)) (< $generated@@104 ($generated@@41 $generated@@102))) (= ($generated@@101 ($generated@@50 $generated@@102 $generated@@103) $generated@@104) ($generated@@101 $generated@@102 $generated@@104)))
 :weight 25
 :pattern ( ($generated@@101 ($generated@@50 $generated@@102 $generated@@103) $generated@@104))
 :pattern ( ($generated@@101 $generated@@102 $generated@@104) ($generated@@50 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 Int) ) (!  (=> (and (<= 0 $generated@@106) (<= $generated@@106 ($generated@@41 $generated@@105))) (= ($generated@@41 ($generated@@43 $generated@@105 $generated@@106)) (- ($generated@@41 $generated@@105) $generated@@106)))
 :pattern ( ($generated@@41 ($generated@@43 $generated@@105 $generated@@106)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 Int) ) (!  (=> (and (and (and ($generated@@107 $generated@@110) (and (or (not (= $generated@@111 $generated@@30)) (not true)) (= ($generated@@31 $generated@@111) ($generated@@29 $generated@@109)))) (and (<= 0 $generated@@112) (< $generated@@112 ($generated@@28 $generated@@111)))) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@110 $generated@@111) $generated@@3)))) ($generated@@108 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@110 $generated@@111) ($generated@@89 $generated@@112)) $generated@@109 $generated@@110))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@110 $generated@@111) ($generated@@89 $generated@@112)) ($generated@@29 $generated@@109))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@113 $generated@@114 $generated@@115)  (and (= ($generated@@41 $generated@@114) ($generated@@41 $generated@@115)) (forall (($generated@@116 Int) ) (!  (=> (and (<= 0 $generated@@116) (< $generated@@116 ($generated@@41 $generated@@114))) (= ($generated@@101 $generated@@114 $generated@@116) ($generated@@101 $generated@@115 $generated@@116)))
 :pattern ( ($generated@@101 $generated@@114 $generated@@116))
 :pattern ( ($generated@@101 $generated@@115 $generated@@116))
))))
 :pattern ( ($generated@@113 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@117 $generated@@119 ($generated@@58 $generated@@119 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@58 $generated@@119 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@41 ($generated@@44 $generated@@120 $generated@@121)) (+ 1 ($generated@@41 $generated@@120)))
 :pattern ( ($generated@@44 $generated@@120 $generated@@121))
)))
(assert  (=> (<= 0 $generated@@122) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (or ($generated@@124 ($generated@@98 $generated@@36 $generated@@126) ($generated@@98 $generated@@36 $generated@@127) ($generated@@15 ($generated@@98 $generated@@11 $generated@@128))) (and (< 0 $generated@@122) (and (and ($generated@@107 $generated@@125) (and (or (not (= $generated@@126 $generated@@30)) (not true)) (and ($generated@@32 $generated@@36 $generated@@126 $generated@@55) ($generated@@35 $generated@@36 $generated@@126 $generated@@55 $generated@@125)))) ($generated@@32 $generated@@36 $generated@@127 ($generated@@37 $generated@@0))))) (= ($generated@@123 ($generated@@98 $generated@@36 $generated@@126) ($generated@@98 $generated@@36 $generated@@127) ($generated@@15 ($generated@@98 $generated@@11 $generated@@128)))  (and (= ($generated@@96 ($generated@@28 ($generated@@98 $generated@@36 $generated@@127))) ($generated@@96 10)) (ite ($generated@@15 $generated@@128) ($generated@@113 ($generated@@88 $generated@@125 ($generated@@98 $generated@@36 $generated@@127)) $generated@@42) ($generated@@113 ($generated@@51 ($generated@@51 ($generated@@43 ($generated@@50 ($generated@@88 $generated@@125 ($generated@@98 $generated@@36 $generated@@127)) ($generated@@96 5)) ($generated@@96 2)) ($generated@@50 ($generated@@88 $generated@@125 ($generated@@98 $generated@@36 $generated@@127)) ($generated@@96 5))) ($generated@@43 ($generated@@88 $generated@@125 ($generated@@98 $generated@@36 $generated@@127)) ($generated@@96 2))) $generated@@42)))))
 :weight 3
 :pattern ( ($generated@@123 ($generated@@98 $generated@@36 $generated@@126) ($generated@@98 $generated@@36 $generated@@127) ($generated@@15 ($generated@@98 $generated@@11 $generated@@128))) ($generated@@107 $generated@@125))
))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@130 ($generated@@37 $generated@@129))  (and ($generated@@32 $generated@@36 $generated@@130 ($generated@@29 $generated@@129)) (or (not (= $generated@@130 $generated@@30)) (not true))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@130 ($generated@@37 $generated@@129)))
 :pattern ( ($generated@@32 $generated@@36 $generated@@130 ($generated@@29 $generated@@129)))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@108 ($generated@@117 $generated@@134 $generated@@131) $generated@@132 $generated@@133) ($generated@@35 $generated@@134 $generated@@131 $generated@@132 $generated@@133))
 :pattern ( ($generated@@108 ($generated@@117 $generated@@134 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 Int) ($generated@@137 Int) ) (!  (=> (and (and (<= 0 $generated@@136) (<= 0 $generated@@137)) (< $generated@@137 (- ($generated@@41 $generated@@135) $generated@@136))) (= ($generated@@101 ($generated@@43 $generated@@135 $generated@@136) $generated@@137) ($generated@@101 $generated@@135 (+ $generated@@137 $generated@@136))))
 :weight 25
 :pattern ( ($generated@@101 ($generated@@43 $generated@@135 $generated@@136) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (and (= ($generated@@27 ($generated@@29 $generated@@139)) $generated@@4) (= ($generated@@138 ($generated@@29 $generated@@139)) $generated@@8))
 :pattern ( ($generated@@29 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (!  (and (= ($generated@@27 ($generated@@37 $generated@@140)) $generated@@5) (= ($generated@@138 ($generated@@37 $generated@@140)) $generated@@8))
 :pattern ( ($generated@@37 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@41 ($generated@@51 $generated@@141 $generated@@142)) (+ ($generated@@41 $generated@@141) ($generated@@41 $generated@@142)))
 :pattern ( ($generated@@41 ($generated@@51 $generated@@141 $generated@@142)))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> ($generated@@143 $generated@@144 $generated@@48) (and (= ($generated@@117 $generated@@36 ($generated@@58 $generated@@36 $generated@@144)) $generated@@144) ($generated@@32 $generated@@36 ($generated@@58 $generated@@36 $generated@@144) $generated@@48)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@48))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@143 $generated@@145 $generated@@55) (and (= ($generated@@117 $generated@@36 ($generated@@58 $generated@@36 $generated@@145)) $generated@@145) ($generated@@32 $generated@@36 ($generated@@58 $generated@@36 $generated@@145) $generated@@55)))
 :pattern ( ($generated@@143 $generated@@145 $generated@@55))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@147 ($generated@@29 $generated@@146))  (or (= $generated@@147 $generated@@30) (= ($generated@@31 $generated@@147) ($generated@@29 $generated@@146))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@147 ($generated@@29 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@148 $generated@@55)  (and ($generated@@32 $generated@@36 $generated@@148 $generated@@48) (or (not (= $generated@@148 $generated@@30)) (not true))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@148 $generated@@55))
 :pattern ( ($generated@@32 $generated@@36 $generated@@148 $generated@@48))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 Int) ($generated@@151 T@U) ) (!  (and (=> (= $generated@@150 ($generated@@41 $generated@@149)) (= ($generated@@101 ($generated@@44 $generated@@149 $generated@@151) $generated@@150) $generated@@151)) (=> (or (not (= $generated@@150 ($generated@@41 $generated@@149))) (not true)) (= ($generated@@101 ($generated@@44 $generated@@149 $generated@@151) $generated@@150) ($generated@@101 $generated@@149 $generated@@150))))
 :pattern ( ($generated@@101 ($generated@@44 $generated@@149 $generated@@151) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (forall (($generated@@154 Int) ) (!  (=> (and (<= 0 $generated@@154) (< $generated@@154 ($generated@@41 ($generated@@88 $generated@@152 $generated@@153)))) (= ($generated@@101 ($generated@@88 $generated@@152 $generated@@153) $generated@@154) ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@152 $generated@@153) ($generated@@89 $generated@@154))))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@152 $generated@@153) ($generated@@89 $generated@@154)))
 :pattern ( ($generated@@101 ($generated@@88 $generated@@152 $generated@@153) $generated@@154))
))
 :pattern ( ($generated@@88 $generated@@152 $generated@@153))
)))
(assert  (=> (<= 0 $generated@@122) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (or ($generated@@124 $generated@@156 ($generated@@98 $generated@@36 $generated@@157) ($generated@@15 ($generated@@98 $generated@@11 $generated@@158))) (and (< 0 $generated@@122) (and (and ($generated@@107 $generated@@155) (and (or (not (= $generated@@156 $generated@@30)) (not true)) (and ($generated@@32 $generated@@36 $generated@@156 $generated@@55) ($generated@@35 $generated@@36 $generated@@156 $generated@@55 $generated@@155)))) ($generated@@32 $generated@@36 $generated@@157 ($generated@@37 $generated@@0))))) (= ($generated@@123 $generated@@156 ($generated@@98 $generated@@36 $generated@@157) ($generated@@15 ($generated@@98 $generated@@11 $generated@@158)))  (and (= ($generated@@96 ($generated@@28 ($generated@@98 $generated@@36 $generated@@157))) ($generated@@96 10)) (ite ($generated@@15 $generated@@158) ($generated@@113 ($generated@@88 $generated@@155 ($generated@@98 $generated@@36 $generated@@157)) $generated@@42) ($generated@@113 ($generated@@51 ($generated@@51 ($generated@@43 ($generated@@50 ($generated@@88 $generated@@155 ($generated@@98 $generated@@36 $generated@@157)) ($generated@@96 5)) ($generated@@96 2)) ($generated@@50 ($generated@@88 $generated@@155 ($generated@@98 $generated@@36 $generated@@157)) ($generated@@96 5))) ($generated@@43 ($generated@@88 $generated@@155 ($generated@@98 $generated@@36 $generated@@157)) ($generated@@96 2))) $generated@@42)))))
 :weight 3
 :pattern ( ($generated@@123 $generated@@156 ($generated@@98 $generated@@36 $generated@@157) ($generated@@15 ($generated@@98 $generated@@11 $generated@@158))) ($generated@@107 $generated@@155))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@113 $generated@@159 $generated@@160) (= $generated@@159 $generated@@160))
 :pattern ( ($generated@@113 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 Int) ) (!  (=> (and (<= 0 $generated@@162) (<= $generated@@162 ($generated@@41 $generated@@161))) (= ($generated@@41 ($generated@@50 $generated@@161 $generated@@162)) $generated@@162))
 :pattern ( ($generated@@41 ($generated@@50 $generated@@161 $generated@@162)))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> ($generated@@143 $generated@@163 $generated@@0) (and (= ($generated@@117 $generated@@12 ($generated@@58 $generated@@12 $generated@@163)) $generated@@163) ($generated@@32 $generated@@12 ($generated@@58 $generated@@12 $generated@@163) $generated@@0)))
 :pattern ( ($generated@@143 $generated@@163 $generated@@0))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> ($generated@@143 $generated@@164 $generated) (and (= ($generated@@117 $generated@@11 ($generated@@58 $generated@@11 $generated@@164)) $generated@@164) ($generated@@32 $generated@@11 ($generated@@58 $generated@@11 $generated@@164) $generated)))
 :pattern ( ($generated@@143 $generated@@164 $generated))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@143 ($generated@@117 $generated@@167 $generated@@165) $generated@@166) ($generated@@32 $generated@@167 $generated@@165 $generated@@166))
 :pattern ( ($generated@@143 ($generated@@117 $generated@@167 $generated@@165) $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! (<= 0 ($generated@@28 $generated@@168))
 :pattern ( ($generated@@28 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ) (! (<= 0 ($generated@@41 $generated@@169))
 :pattern ( ($generated@@41 $generated@@169))
)))
(assert (forall (($generated@@170 Int) ) (! (= ($generated@@26 ($generated@@89 $generated@@170)) 1)
 :pattern ( ($generated@@89 $generated@@170))
)))
(assert (forall (($generated@@172 Int) ) (! (= ($generated@@171 ($generated@@89 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@89 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@173 ($generated@@29 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@29 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@175 ($generated@@37 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@37 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@58 $generated@@178 ($generated@@117 $generated@@178 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@117 $generated@@178 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and ($generated@@107 $generated@@180) (and (or (not (= $generated@@181 $generated@@30)) (not true)) (= ($generated@@31 $generated@@181) ($generated@@29 $generated@@179)))) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@180 $generated@@181) $generated@@3)))) ($generated@@35 $generated@@12 ($generated@@16 ($generated@@28 $generated@@181)) $generated@@0 $generated@@180))
 :pattern ( ($generated@@28 $generated@@181) ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@180 $generated@@181) $generated@@3)) ($generated@@29 $generated@@179))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Int) ) (!  (=> (and (and ($generated@@107 $generated@@183) (and (or (not (= $generated@@184 $generated@@30)) (not true)) (= ($generated@@31 $generated@@184) ($generated@@29 $generated@@182)))) (and (<= 0 $generated@@185) (< $generated@@185 ($generated@@28 $generated@@184)))) ($generated@@143 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@183 $generated@@184) ($generated@@89 $generated@@185)) $generated@@182))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@183 $generated@@184) ($generated@@89 $generated@@185)) ($generated@@29 $generated@@182))
)))
(assert  (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@186 $generated@@189 $generated@@190 $generated@@191 ($generated@@188 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@194 $generated@@195) $generated@@192)
 :weight 0
)) (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@186 $generated@@196 $generated@@197 $generated@@198 ($generated@@188 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@186 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@186 $generated@@205 $generated@@206 $generated@@207 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@186 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (= ($generated@@15 ($generated@@186 $generated@@36 $generated@@60 $generated@@11 ($generated@@187 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (or (not (= $generated@@218 $generated@@214)) (not true)) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@36 ($generated@@62 $generated@@60 $generated@@61) $generated@@215 $generated@@218) $generated@@216)))) $generated@@217))
 :pattern ( ($generated@@186 $generated@@36 $generated@@60 $generated@@11 ($generated@@187 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@41 ($generated@@88 $generated@@220 $generated@@221)) ($generated@@28 $generated@@221))
 :pattern ( ($generated@@41 ($generated@@88 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (and (= ($generated@@222 ($generated@@44 $generated@@224 $generated@@225)) $generated@@224) (= ($generated@@223 ($generated@@44 $generated@@224 $generated@@225)) $generated@@225))
 :pattern ( ($generated@@44 $generated@@224 $generated@@225))
)))
(assert  (=> (<= 0 $generated@@122) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (!  (=> (or ($generated@@124 $generated@@227 $generated@@228 $generated@@229) (and (< 0 $generated@@122) (and (and ($generated@@107 $generated@@226) (and (or (not (= $generated@@227 $generated@@30)) (not true)) (and ($generated@@32 $generated@@36 $generated@@227 $generated@@55) ($generated@@35 $generated@@36 $generated@@227 $generated@@55 $generated@@226)))) ($generated@@32 $generated@@36 $generated@@228 ($generated@@37 $generated@@0))))) (= ($generated@@123 $generated@@227 $generated@@228 $generated@@229)  (and (= ($generated@@28 $generated@@228) ($generated@@96 10)) (ite $generated@@229 ($generated@@113 ($generated@@88 $generated@@226 $generated@@228) $generated@@42) ($generated@@113 ($generated@@51 ($generated@@51 ($generated@@43 ($generated@@50 ($generated@@88 $generated@@226 $generated@@228) ($generated@@96 5)) ($generated@@96 2)) ($generated@@50 ($generated@@88 $generated@@226 $generated@@228) ($generated@@96 5))) ($generated@@43 ($generated@@88 $generated@@226 $generated@@228) ($generated@@96 2))) $generated@@42)))))
 :pattern ( ($generated@@123 $generated@@227 $generated@@228 $generated@@229) ($generated@@107 $generated@@226))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> ($generated@@143 $generated@@231 ($generated@@29 $generated@@230)) (and (= ($generated@@117 $generated@@36 ($generated@@58 $generated@@36 $generated@@231)) $generated@@231) ($generated@@32 $generated@@36 ($generated@@58 $generated@@36 $generated@@231) ($generated@@29 $generated@@230))))
 :pattern ( ($generated@@143 $generated@@231 ($generated@@29 $generated@@230)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> ($generated@@143 $generated@@233 ($generated@@37 $generated@@232)) (and (= ($generated@@117 $generated@@36 ($generated@@58 $generated@@36 $generated@@233)) $generated@@233) ($generated@@32 $generated@@36 ($generated@@58 $generated@@36 $generated@@233) ($generated@@37 $generated@@232))))
 :pattern ( ($generated@@143 $generated@@233 ($generated@@37 $generated@@232)))
)))
(assert (= ($generated@@27 $generated@@48) $generated@@6))
(assert (= ($generated@@138 $generated@@48) $generated@@9))
(assert (= ($generated@@27 $generated@@55) $generated@@7))
(assert (= ($generated@@138 $generated@@55) $generated@@9))
(assert (forall (($generated@@234 T@U) ($generated@@235 Int) ($generated@@236 Int) ) (!  (=> (and (and (<= 0 $generated@@235) (<= $generated@@235 $generated@@236)) (< $generated@@236 ($generated@@41 $generated@@234))) (= ($generated@@101 ($generated@@43 $generated@@234 $generated@@235) (- $generated@@236 $generated@@235)) ($generated@@101 $generated@@234 $generated@@236)))
 :weight 25
 :pattern ( ($generated@@101 $generated@@234 $generated@@236) ($generated@@43 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 Int) ($generated@@239 Int) ) (!  (=> (and (and (<= 0 $generated@@238) (<= 0 $generated@@239)) (<= (+ $generated@@238 $generated@@239) ($generated@@41 $generated@@237))) (= ($generated@@43 ($generated@@43 $generated@@237 $generated@@238) $generated@@239) ($generated@@43 $generated@@237 (+ $generated@@238 $generated@@239))))
 :pattern ( ($generated@@43 ($generated@@43 $generated@@237 $generated@@238) $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Int) ) (!  (and (=> (< $generated@@242 ($generated@@41 $generated@@240)) (= ($generated@@101 ($generated@@51 $generated@@240 $generated@@241) $generated@@242) ($generated@@101 $generated@@240 $generated@@242))) (=> (<= ($generated@@41 $generated@@240) $generated@@242) (= ($generated@@101 ($generated@@51 $generated@@240 $generated@@241) $generated@@242) ($generated@@101 $generated@@241 (- $generated@@242 ($generated@@41 $generated@@240))))))
 :pattern ( ($generated@@101 ($generated@@51 $generated@@240 $generated@@241) $generated@@242))
)))
(assert (forall (($generated@@243 Int) ) (! (= ($generated@@117 $generated@@12 ($generated@@16 ($generated@@96 $generated@@243))) ($generated@@98 $generated@@61 ($generated@@117 $generated@@12 ($generated@@16 $generated@@243))))
 :pattern ( ($generated@@117 $generated@@12 ($generated@@16 ($generated@@96 $generated@@243))))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (= ($generated@@117 $generated@@245 ($generated@@98 $generated@@245 $generated@@244)) ($generated@@98 $generated@@61 ($generated@@117 $generated@@245 $generated@@244)))
 :pattern ( ($generated@@117 $generated@@245 ($generated@@98 $generated@@245 $generated@@244)))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= ($generated@@41 $generated@@246) 0) (= $generated@@246 $generated@@42))
 :pattern ( ($generated@@41 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 Int) ) (!  (=> (= $generated@@248 0) (= ($generated@@50 $generated@@247 $generated@@248) $generated@@42))
 :pattern ( ($generated@@50 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! ($generated@@35 $generated@@12 $generated@@250 $generated@@0 $generated@@249)
 :pattern ( ($generated@@35 $generated@@12 $generated@@250 $generated@@0 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! ($generated@@35 $generated@@11 $generated@@252 $generated $generated@@251)
 :pattern ( ($generated@@35 $generated@@11 $generated@@252 $generated $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! ($generated@@32 $generated@@12 $generated@@253 $generated@@0)
 :pattern ( ($generated@@32 $generated@@12 $generated@@253 $generated@@0))
)))
(assert (forall (($generated@@254 T@U) ) (! ($generated@@32 $generated@@11 $generated@@254 $generated)
 :pattern ( ($generated@@32 $generated@@11 $generated@@254 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () Bool)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () Bool)
(declare-fun $generated@@260 () Bool)
(declare-fun $generated@@261 () Bool)
(declare-fun $generated@@262 () Bool)
(declare-fun $generated@@263 () Bool)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () Bool)
(declare-fun $generated@@266 () Bool)
(declare-fun $generated@@267 () Bool)
(declare-fun $generated@@268 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@269  (=> (and (= ($generated@@123 $generated@@255 $generated@@256 $generated@@257)  (and (= ($generated@@28 $generated@@256) ($generated@@96 10)) (ite $generated@@257 ($generated@@113 ($generated@@88 $generated@@258 $generated@@256) $generated@@42) ($generated@@113 ($generated@@51 ($generated@@51 ($generated@@43 ($generated@@50 ($generated@@88 $generated@@258 $generated@@256) ($generated@@96 5)) ($generated@@96 2)) ($generated@@50 ($generated@@88 $generated@@258 $generated@@256) ($generated@@96 5))) ($generated@@43 ($generated@@88 $generated@@258 $generated@@256) ($generated@@96 2))) $generated@@42)))) ($generated@@32 $generated@@11 ($generated@@14 ($generated@@123 $generated@@255 $generated@@256 $generated@@257)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 6)) $generated@@259) (=> $generated@@259 (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@260) (=> $generated@@260 (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@261) (=> $generated@@261 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@262))))))))))
(let (($generated@@270  (=> (not $generated@@257) (and (=> (= (ControlFlow 0 10) (- 0 17)) (or (not (= $generated@@256 $generated@@30)) (not true))) (=> (or (not (= $generated@@256 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 10) (- 0 16)) (and (<= 0 ($generated@@96 2)) (<= ($generated@@96 2) ($generated@@28 $generated@@256)))) (=> (and (<= 0 ($generated@@96 2)) (<= ($generated@@96 2) ($generated@@28 $generated@@256))) (and (=> (= (ControlFlow 0 10) (- 0 15)) (and (<= ($generated@@96 2) ($generated@@96 5)) (<= ($generated@@96 5) ($generated@@28 $generated@@256)))) (=> (and (<= ($generated@@96 2) ($generated@@96 5)) (<= ($generated@@96 5) ($generated@@28 $generated@@256))) (=> (= $generated@@263 (forall (($generated@@271 Int) ) (!  (=> (and (<= ($generated@@96 2) $generated@@271) (< $generated@@271 ($generated@@96 5))) ($generated@@15 ($generated@@186 $generated@@36 $generated@@60 $generated@@11 $generated@@264 $generated@@256 ($generated@@89 $generated@@271))))
 :pattern ( ($generated@@186 $generated@@36 $generated@@60 $generated@@11 $generated@@264 $generated@@256 ($generated@@89 $generated@@271)))
))) (and (=> (= (ControlFlow 0 10) (- 0 14)) (or (not (= $generated@@256 $generated@@30)) (not true))) (=> (or (not (= $generated@@256 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 10) (- 0 13)) (and (<= 0 ($generated@@96 5)) (<= ($generated@@96 5) ($generated@@28 $generated@@256)))) (=> (and (<= 0 ($generated@@96 5)) (<= ($generated@@96 5) ($generated@@28 $generated@@256))) (=> (= $generated@@265 (forall (($generated@@272 Int) ) (!  (=> (and (<= 0 $generated@@272) (< $generated@@272 ($generated@@96 5))) ($generated@@15 ($generated@@186 $generated@@36 $generated@@60 $generated@@11 $generated@@264 $generated@@256 ($generated@@89 $generated@@272))))
 :pattern ( ($generated@@186 $generated@@36 $generated@@60 $generated@@11 $generated@@264 $generated@@256 ($generated@@89 $generated@@272)))
))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (not (= $generated@@256 $generated@@30)) (not true))) (=> (or (not (= $generated@@256 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 ($generated@@96 2)) (<= ($generated@@96 2) ($generated@@28 $generated@@256)))) (=> (and (<= 0 ($generated@@96 2)) (<= ($generated@@96 2) ($generated@@28 $generated@@256))) (=> (and (= $generated@@266 (forall (($generated@@273 Int) ) (!  (=> (and (<= ($generated@@96 2) $generated@@273) (< $generated@@273 ($generated@@28 $generated@@256))) ($generated@@15 ($generated@@186 $generated@@36 $generated@@60 $generated@@11 $generated@@264 $generated@@256 ($generated@@89 $generated@@273))))
 :pattern ( ($generated@@186 $generated@@36 $generated@@60 $generated@@11 $generated@@264 $generated@@256 ($generated@@89 $generated@@273)))
))) (= $generated@@260 $generated@@263)) (=> (and (and (= $generated@@261 $generated@@265) (= $generated@@262 $generated@@266)) (and (= $generated@@259 true) (= (ControlFlow 0 10) 3))) $generated@@269)))))))))))))))))))))
(let (($generated@@274  (=> $generated@@257 (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= $generated@@256 $generated@@30)) (not true))) (=> (or (not (= $generated@@256 $generated@@30)) (not true)) (=> (and (= $generated@@267 (forall (($generated@@275 Int) ) (!  (=> (and (<= 0 $generated@@275) (< $generated@@275 ($generated@@28 $generated@@256))) ($generated@@15 ($generated@@186 $generated@@36 $generated@@60 $generated@@11 $generated@@264 $generated@@256 ($generated@@89 $generated@@275))))
 :pattern ( ($generated@@186 $generated@@36 $generated@@60 $generated@@11 $generated@@264 $generated@@256 ($generated@@89 $generated@@275)))
))) (= $generated@@260 true)) (=> (and (and (= $generated@@261 true) (= $generated@@262 true)) (and (= $generated@@259 $generated@@267) (= (ControlFlow 0 8) 3))) $generated@@269)))))))
(let (($generated@@276  (=> (= ($generated@@28 $generated@@256) ($generated@@96 10)) (and (=> (= (ControlFlow 0 18) 8) $generated@@274) (=> (= (ControlFlow 0 18) 10) $generated@@270)))))
(let (($generated@@277  (=> (and (or (not (= ($generated@@28 $generated@@256) ($generated@@96 10))) (not true)) (= $generated@@260 true)) (=> (and (and (= $generated@@261 true) (= $generated@@262 true)) (and (= $generated@@259 true) (= (ControlFlow 0 7) 3))) $generated@@269))))
(let (($generated@@278  (and (=> (= (ControlFlow 0 19) (- 0 20)) (or (not (= $generated@@256 $generated@@30)) (not true))) (=> (or (not (= $generated@@256 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 19) 18) $generated@@276) (=> (= (ControlFlow 0 19) 7) $generated@@277))))))
(let (($generated@@279 true))
(let (($generated@@280  (=> (= $generated@@264 ($generated@@187 $generated@@30 $generated@@258 $generated@@3 false)) (and (=> (= (ControlFlow 0 21) 1) $generated@@279) (=> (= (ControlFlow 0 21) 19) $generated@@278)))))
(let (($generated@@281  (=> (and ($generated@@107 $generated@@258) ($generated@@268 $generated@@258)) (=> (and (and (and (or (not (= $generated@@255 $generated@@30)) (not true)) (and ($generated@@32 $generated@@36 $generated@@255 $generated@@55) ($generated@@35 $generated@@36 $generated@@255 $generated@@55 $generated@@258))) ($generated@@32 $generated@@36 $generated@@256 ($generated@@37 $generated@@0))) (and (= 0 $generated@@122) (= (ControlFlow 0 22) 21))) $generated@@280))))
$generated@@281))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 6))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 4))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
