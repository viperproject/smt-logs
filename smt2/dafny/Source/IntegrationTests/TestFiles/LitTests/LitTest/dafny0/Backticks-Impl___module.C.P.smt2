(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T T@T) T@T)
(declare-fun $generated@@50 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@76 (Int) Int)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@1) 0))
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@28 $generated@@1) $generated@@2))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@29 $generated@@12 $generated@@31 $generated@@30 $generated@@32)
 :pattern ( ($generated@@29 $generated@@12 $generated@@31 $generated@@30 $generated@@32))
)))
(assert (= ($generated@@10 $generated@@34) 3))
(assert (forall (($generated@@38 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@38 $generated@@35)  (or (= $generated@@38 $generated@@36) (= ($generated@@37 $generated@@38) $generated@@35)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@38 $generated@@35))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@29 $generated@@34 $generated@@40 $generated@@39 $generated@@41) ($generated@@29 $generated@@34 $generated@@40 $generated@@35 $generated@@41))
 :pattern ( ($generated@@29 $generated@@34 $generated@@40 $generated@@39 $generated@@41))
 :pattern ( ($generated@@29 $generated@@34 $generated@@40 $generated@@35 $generated@@41))
)))
(assert (= ($generated@@26 $generated@@42) 0))
(assert (= ($generated@@43 $generated@@4 $generated@@9) $generated@@42))
(assert  (not ($generated@@44 $generated@@42)))
(assert  (and (and (and (and (and (and (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@46 $generated@@53 $generated@@54 ($generated@@50 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@57) $generated@@55)
 :weight 0
)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (or (= $generated@@62 $generated@@63) (= ($generated@@46 $generated@@58 $generated@@59 ($generated@@50 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@63) ($generated@@46 $generated@@58 $generated@@59 $generated@@61 $generated@@63)))
 :weight 0
))) (= ($generated@@10 $generated@@47) 4)) (= ($generated@@10 $generated@@48) 5)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (= ($generated@@10 ($generated@@49 $generated@@64 $generated@@65)) 6))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@51 ($generated@@49 $generated@@66 $generated@@67)) $generated@@66)
 :pattern ( ($generated@@49 $generated@@66 $generated@@67))
))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@52 ($generated@@49 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@49 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@29 $generated@@34 $generated@@70 $generated@@35 $generated@@71)  (or (= $generated@@70 $generated@@36) ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@71 $generated@@70) $generated@@1)))))
 :pattern ( ($generated@@29 $generated@@34 $generated@@70 $generated@@35 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> ($generated@@72 $generated@@73 $generated@@74) (forall (($generated@@75 T@U) ) (!  (=> ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@73 $generated@@75) $generated@@1))) ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@74 $generated@@75) $generated@@1))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@74 $generated@@75) $generated@@1))
)))
 :pattern ( ($generated@@72 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@77 Int) ) (! (= ($generated@@76 $generated@@77) $generated@@77)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@45 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@45 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@33 $generated@@12 $generated@@84 $generated@@30) (<= ($generated@@76 0) ($generated@@17 $generated@@84)))
 :pattern ( ($generated@@33 $generated@@12 $generated@@84 $generated@@30))
)))
(assert ($generated@@44 $generated@@1))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (and ($generated@@85 $generated@@86) (and (or (not (= $generated@@87 $generated@@36)) (not true)) (= ($generated@@37 $generated@@87) $generated@@35))) ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@86 $generated@@87) $generated@@1)))) ($generated@@29 $generated@@12 ($generated@@45 $generated@@12 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@86 $generated@@87) $generated@@42)) $generated $generated@@86))
 :pattern ( ($generated@@45 $generated@@12 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@86 $generated@@87) $generated@@42)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (!  (=> ($generated@@72 $generated@@88 $generated@@89) (=> ($generated@@29 $generated@@92 $generated@@90 $generated@@91 $generated@@88) ($generated@@29 $generated@@92 $generated@@90 $generated@@91 $generated@@89)))
 :pattern ( ($generated@@72 $generated@@88 $generated@@89) ($generated@@29 $generated@@92 $generated@@90 $generated@@91 $generated@@88))
)))
(assert  (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@93 $generated@@96 $generated@@97 $generated@@98 ($generated@@95 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@102 $generated@@99) $generated@@101 $generated@@102) $generated@@99)
 :weight 0
)) (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@108 $generated@@110) (= ($generated@@93 $generated@@103 $generated@@104 $generated@@105 ($generated@@95 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@93 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@93 $generated@@112 $generated@@113 $generated@@114 ($generated@@95 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@93 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@15 ($generated@@93 $generated@@34 $generated@@47 $generated@@11 ($generated@@94 $generated@@121 $generated@@122 $generated@@123 $generated@@124 $generated@@125) $generated@@126 $generated@@127))  (=> (and (or (not (= $generated@@126 $generated@@121)) (not true)) ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@122 $generated@@126) $generated@@123)))) (and (= $generated@@126 $generated@@124) (= $generated@@127 $generated@@125))))
 :pattern ( ($generated@@93 $generated@@34 $generated@@47 $generated@@11 ($generated@@94 $generated@@121 $generated@@122 $generated@@123 $generated@@124 $generated@@125) $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@128 $generated@@39)  (and ($generated@@33 $generated@@34 $generated@@128 $generated@@35) (or (not (= $generated@@128 $generated@@36)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@128 $generated@@39))
 :pattern ( ($generated@@33 $generated@@34 $generated@@128 $generated@@35))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or (not (= $generated@@129 $generated@@131)) (not true)) (=> (and ($generated@@72 $generated@@129 $generated@@130) ($generated@@72 $generated@@130 $generated@@131)) ($generated@@72 $generated@@129 $generated@@131)))
 :pattern ( ($generated@@72 $generated@@129 $generated@@130) ($generated@@72 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (and (= ($generated@@132 ($generated@@43 $generated@@133 $generated@@134)) $generated@@133) (= ($generated@@28 ($generated@@43 $generated@@133 $generated@@134)) $generated@@134))
 :pattern ( ($generated@@43 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@45 $generated@@136 ($generated@@81 $generated@@136 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@81 $generated@@136 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and ($generated@@85 $generated@@137) (and (or (not (= $generated@@138 $generated@@36)) (not true)) (= ($generated@@37 $generated@@138) $generated@@35))) ($generated@@33 $generated@@12 ($generated@@45 $generated@@12 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@137 $generated@@138) $generated@@42)) $generated))
 :pattern ( ($generated@@45 $generated@@12 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@137 $generated@@138) $generated@@42)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@85 ($generated@@50 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@139 $generated@@140 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@139 $generated@@140) $generated@@141 $generated@@142))) ($generated@@72 $generated@@139 ($generated@@50 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@139 $generated@@140 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@139 $generated@@140) $generated@@141 $generated@@142))))
 :pattern ( ($generated@@50 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@139 $generated@@140 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@139 $generated@@140) $generated@@141 $generated@@142)))
)))
(assert (= ($generated@@27 $generated@@30) $generated@@3))
(assert (= ($generated@@143 $generated@@30) $generated@@7))
(assert (= ($generated@@27 $generated@@35) $generated@@5))
(assert (= ($generated@@143 $generated@@35) $generated@@8))
(assert (= ($generated@@27 $generated@@39) $generated@@6))
(assert (= ($generated@@143 $generated@@39) $generated@@8))
(assert (forall (($generated@@144 Int) ) (! (= ($generated@@81 $generated@@12 ($generated@@16 ($generated@@76 $generated@@144))) ($generated@@78 $generated@@48 ($generated@@81 $generated@@12 ($generated@@16 $generated@@144))))
 :pattern ( ($generated@@81 $generated@@12 ($generated@@16 ($generated@@76 $generated@@144))))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@81 $generated@@146 ($generated@@78 $generated@@146 $generated@@145)) ($generated@@78 $generated@@48 ($generated@@81 $generated@@146 $generated@@145)))
 :pattern ( ($generated@@81 $generated@@146 ($generated@@78 $generated@@146 $generated@@145)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! ($generated@@29 $generated@@12 $generated@@148 $generated $generated@@147)
 :pattern ( ($generated@@29 $generated@@12 $generated@@148 $generated $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! ($generated@@33 $generated@@12 $generated@@149 $generated)
 :pattern ( ($generated@@33 $generated@@12 $generated@@149 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () Int)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@159 true))
(let (($generated@@160  (=> (or (not (= $generated@@150 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@33 $generated@@12 ($generated@@16 (- $generated@@150 1)) $generated@@30)) (=> ($generated@@33 $generated@@12 ($generated@@16 (- $generated@@150 1)) $generated@@30) (=> (= $generated@@151 (- $generated@@150 1)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (forall (($generated@@161 T@U) ($generated@@162 T@U) )  (=> (and (and (or (not (= $generated@@161 $generated@@36)) (not true)) ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@152 $generated@@161) $generated@@1)))) (= $generated@@161 $generated@@153)) ($generated@@15 ($generated@@93 $generated@@34 $generated@@47 $generated@@11 $generated@@154 $generated@@161 $generated@@162))))) (=> (forall (($generated@@163 T@U) ($generated@@164 T@U) )  (=> (and (and (or (not (= $generated@@163 $generated@@36)) (not true)) ($generated@@15 ($generated@@45 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@152 $generated@@163) $generated@@1)))) (= $generated@@163 $generated@@153)) ($generated@@15 ($generated@@93 $generated@@34 $generated@@47 $generated@@11 $generated@@154 $generated@@163 $generated@@164)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@150) (= $generated@@151 $generated@@150))) (=> (or (<= 0 $generated@@150) (= $generated@@151 $generated@@150)) (=> (= (ControlFlow 0 2) (- 0 1)) (< $generated@@151 $generated@@150))))))))))))
(let (($generated@@165  (=> (= $generated@@154 ($generated@@94 $generated@@36 $generated@@155 $generated@@1 $generated@@153 $generated@@42)) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@15 ($generated@@93 $generated@@34 $generated@@47 $generated@@11 $generated@@154 $generated@@153 $generated@@42))) (=> ($generated@@15 ($generated@@93 $generated@@34 $generated@@47 $generated@@11 $generated@@154 $generated@@153 $generated@@42)) (=> (= $generated@@156 (+ ($generated@@17 ($generated@@45 $generated@@12 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@155 $generated@@153) $generated@@42))) 1)) (=> (and (= $generated@@152 ($generated@@50 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@155 $generated@@153 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@34 ($generated@@49 $generated@@47 $generated@@48) $generated@@155 $generated@@153) $generated@@42 ($generated@@81 $generated@@12 ($generated@@16 $generated@@156))))) ($generated@@85 $generated@@152)) (and (=> (= (ControlFlow 0 7) 2) $generated@@160) (=> (= (ControlFlow 0 7) 6) $generated@@159)))))))))
(let (($generated@@166  (=> (and ($generated@@85 $generated@@155) ($generated@@157 $generated@@155)) (=> (and (and (and (or (not (= $generated@@153 $generated@@36)) (not true)) (and ($generated@@33 $generated@@34 $generated@@153 $generated@@39) ($generated@@29 $generated@@34 $generated@@153 $generated@@39 $generated@@155))) (<= ($generated@@76 0) $generated@@150)) (and (= 0 $generated@@158) (= (ControlFlow 0 9) 7))) $generated@@165))))
$generated@@166)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
