(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@32 () Int)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U T@U T@U T@U T@U) Int)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@43 (Int) Int)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U) Bool)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@177 (T@U) Int)
(declare-fun $generated@@182 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@24) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@27 $generated@@31) (= ($generated@@23 $generated@@24 ($generated@@25 $generated@@29 $generated@@30) ($generated@@26 $generated@@28) $generated@@31)  (and ($generated@@23 $generated@@24 $generated@@29 ($generated@@26 $generated@@28) $generated@@31) ($generated@@23 $generated@@24 $generated@@30 ($generated@@26 $generated@@28) $generated@@31))))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@25 $generated@@29 $generated@@30) ($generated@@26 $generated@@28) $generated@@31))
)))
(assert (= ($generated@@7 $generated@@37) 4))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (or ($generated@@34 $generated@@44 $generated@@45) (and (< 2 $generated@@32) (and (or (not (= $generated@@45 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@45 ($generated@@38 $generated@@44))))) (and (forall (($generated@@46 T@U) ) (!  (=> ($generated@@36 $generated@@24 $generated@@46 ($generated@@26 $generated@@44)) ($generated@@42 $generated@@44 $generated@@44 $generated@@45 $generated@@46))
 :pattern ( ($generated@@39 $generated@@44 $generated@@44 ($generated@@40 $generated@@41) $generated@@45 $generated@@46))
)) (= ($generated@@33 $generated@@44 $generated@@45) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@36 $generated@@24 $generated@@47 ($generated@@26 $generated@@44)) (<= ($generated@@43 2) ($generated@@39 $generated@@44 $generated@@44 ($generated@@40 $generated@@41) $generated@@45 $generated@@47)))
 :pattern ( ($generated@@39 $generated@@44 $generated@@44 ($generated@@40 $generated@@41) $generated@@45 $generated@@47))
)))))
 :pattern ( ($generated@@33 $generated@@44 $generated@@45))
))))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@23 $generated@@37 $generated@@50 ($generated@@38 $generated@@49) $generated@@51) ($generated@@23 $generated@@37 $generated@@50 ($generated@@48 $generated@@49) $generated@@51))
 :pattern ( ($generated@@23 $generated@@37 $generated@@50 ($generated@@38 $generated@@49) $generated@@51))
 :pattern ( ($generated@@23 $generated@@37 $generated@@50 ($generated@@48 $generated@@49) $generated@@51))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@53 $generated@@60 $generated@@61 ($generated@@57 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@53 $generated@@65 $generated@@66 ($generated@@57 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@53 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (= ($generated@@7 $generated@@54) 5)) (= ($generated@@7 $generated@@55) 6)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@7 ($generated@@56 $generated@@71 $generated@@72)) 7))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@58 ($generated@@56 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@56 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@59 ($generated@@56 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@56 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@23 $generated@@37 $generated@@78 ($generated@@48 $generated@@77) $generated@@79)  (or (= $generated@@78 $generated@@35) ($generated@@12 ($generated@@52 $generated@@8 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@79 $generated@@78) $generated)))))
 :pattern ( ($generated@@23 $generated@@37 $generated@@78 ($generated@@48 $generated@@77) $generated@@79))
)))
(assert (forall (($generated@@80 Int) ) (! (= ($generated@@43 $generated@@80) $generated@@80)
 :pattern ( ($generated@@43 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@84 $generated@@86) (= ($generated@@85 $generated@@86) $generated@@0))
 :pattern ( ($generated@@84 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@87 $generated@@88) (= ($generated@@85 $generated@@88) $generated@@2))
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@52 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@52 $generated@@91 $generated@@90))
)))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@34 $generated@@92 ($generated@@81 $generated@@37 $generated@@93)) (and (< 2 $generated@@32) (and (or (not (= $generated@@93 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@93 ($generated@@38 $generated@@92))))) (and (forall (($generated@@94 T@U) ) (!  (=> ($generated@@36 $generated@@24 $generated@@94 ($generated@@26 $generated@@92)) ($generated@@42 $generated@@92 $generated@@92 ($generated@@81 $generated@@37 $generated@@93) $generated@@94))
 :pattern ( ($generated@@39 $generated@@92 $generated@@92 ($generated@@40 $generated@@41) $generated@@93 $generated@@94))
)) (= ($generated@@33 $generated@@92 ($generated@@81 $generated@@37 $generated@@93)) (forall (($generated@@95 T@U) ) (!  (=> ($generated@@36 $generated@@24 $generated@@95 ($generated@@26 $generated@@92)) (<= ($generated@@43 2) ($generated@@39 $generated@@92 $generated@@92 ($generated@@40 $generated@@41) ($generated@@81 $generated@@37 $generated@@93) $generated@@95)))
 :pattern ( ($generated@@39 $generated@@92 $generated@@92 ($generated@@40 $generated@@41) $generated@@93 $generated@@95))
)))))
 :weight 3
 :pattern ( ($generated@@33 $generated@@92 ($generated@@81 $generated@@37 $generated@@93)))
))))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@87 $generated@@96) (exists (($generated@@97 T@U) ($generated@@98 T@U) ) (= $generated@@96 ($generated@@25 $generated@@97 $generated@@98))))
 :pattern ( ($generated@@87 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@36 $generated@@24 ($generated@@25 $generated@@100 $generated@@101) ($generated@@26 $generated@@99))  (and ($generated@@36 $generated@@24 $generated@@100 ($generated@@26 $generated@@99)) ($generated@@36 $generated@@24 $generated@@101 ($generated@@26 $generated@@99))))
 :pattern ( ($generated@@36 $generated@@24 ($generated@@25 $generated@@100 $generated@@101) ($generated@@26 $generated@@99)))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@84 $generated@@103) (exists (($generated@@104 T@U) ) (= $generated@@103 ($generated@@102 $generated@@104))))
 :pattern ( ($generated@@84 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@106 ($generated@@38 $generated@@105))  (and ($generated@@36 $generated@@37 $generated@@106 ($generated@@48 $generated@@105)) (or (not (= $generated@@106 $generated@@35)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@106 ($generated@@38 $generated@@105)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@106 ($generated@@48 $generated@@105)))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@107 ($generated@@89 $generated@@111 $generated@@108) $generated@@109 $generated@@110) ($generated@@23 $generated@@111 $generated@@108 $generated@@109 $generated@@110))
 :pattern ( ($generated@@107 ($generated@@89 $generated@@111 $generated@@108) $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@114 T@U) ) (!  (and (= ($generated@@112 ($generated@@26 $generated@@114)) $generated@@1) (= ($generated@@113 ($generated@@26 $generated@@114)) $generated@@5))
 :pattern ( ($generated@@26 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (!  (and (= ($generated@@112 ($generated@@48 $generated@@115)) $generated@@3) (= ($generated@@113 ($generated@@48 $generated@@115)) $generated@@6))
 :pattern ( ($generated@@48 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (!  (and (= ($generated@@112 ($generated@@38 $generated@@116)) $generated@@4) (= ($generated@@113 ($generated@@38 $generated@@116)) $generated@@6))
 :pattern ( ($generated@@38 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@119 ($generated@@48 $generated@@118))  (or (= $generated@@119 $generated@@35) (= ($generated@@117 $generated@@119) ($generated@@48 $generated@@118))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@119 ($generated@@48 $generated@@118)))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@27 $generated@@122) (= ($generated@@23 $generated@@24 ($generated@@102 $generated@@121) ($generated@@26 $generated@@120) $generated@@122) ($generated@@107 $generated@@121 $generated@@120 $generated@@122)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@102 $generated@@121) ($generated@@26 $generated@@120) $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> ($generated@@36 $generated@@24 $generated@@124 ($generated@@26 $generated@@123)) (or ($generated@@84 $generated@@124) ($generated@@87 $generated@@124)))
 :pattern ( ($generated@@87 $generated@@124) ($generated@@36 $generated@@24 $generated@@124 ($generated@@26 $generated@@123)))
 :pattern ( ($generated@@84 $generated@@124) ($generated@@36 $generated@@24 $generated@@124 ($generated@@26 $generated@@123)))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or ($generated@@42 $generated@@127 $generated@@128 $generated@@130 ($generated@@81 $generated@@24 $generated@@131)) (and (< 1 $generated@@32) (and (and (or (not (= $generated@@130 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@130 ($generated@@38 $generated@@127))) ($generated@@36 $generated@@24 $generated@@131 ($generated@@26 $generated@@128))))) (and (=> (not ($generated@@12 ($generated@@81 $generated@@8 ($generated@@11 ($generated@@84 ($generated@@81 $generated@@24 $generated@@131)))))) (let (($generated@@132 ($generated@@81 $generated@@24 ($generated@@125 ($generated@@81 $generated@@24 $generated@@131)))))
(let (($generated@@133 ($generated@@81 $generated@@24 ($generated@@126 ($generated@@81 $generated@@24 $generated@@131)))))
 (and ($generated@@42 $generated@@127 $generated@@128 $generated@@130 $generated@@133) ($generated@@42 $generated@@127 $generated@@128 $generated@@130 $generated@@132))))) (= ($generated@@39 $generated@@127 $generated@@128 ($generated@@40 $generated@@129) $generated@@130 ($generated@@81 $generated@@24 $generated@@131)) (ite ($generated@@84 ($generated@@81 $generated@@24 $generated@@131)) ($generated@@43 1) (let (($generated@@134 ($generated@@81 $generated@@24 ($generated@@125 ($generated@@81 $generated@@24 $generated@@131)))))
(let (($generated@@135 ($generated@@81 $generated@@24 ($generated@@126 ($generated@@81 $generated@@24 $generated@@131)))))
(+ ($generated@@39 $generated@@127 $generated@@128 ($generated@@40 $generated@@129) $generated@@130 $generated@@135) ($generated@@39 $generated@@127 $generated@@128 ($generated@@40 $generated@@129) $generated@@130 $generated@@134))))))))
 :weight 3
 :pattern ( ($generated@@39 $generated@@127 $generated@@128 ($generated@@40 $generated@@129) $generated@@130 ($generated@@81 $generated@@24 $generated@@131)))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@136 ($generated@@89 $generated@@139 $generated@@137) $generated@@138) ($generated@@36 $generated@@139 $generated@@137 $generated@@138))
 :pattern ( ($generated@@136 ($generated@@89 $generated@@139 $generated@@137) $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> ($generated@@140 $generated@@141) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> ($generated@@136 $generated@@143 $generated@@141) ($generated@@107 $generated@@143 $generated@@141 $generated@@142))
 :pattern ( ($generated@@107 $generated@@143 $generated@@141 $generated@@142))
)))
 :pattern ( ($generated@@140 $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@85 ($generated@@25 $generated@@144 $generated@@145)) $generated@@2)
 :pattern ( ($generated@@25 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@126 ($generated@@25 $generated@@146 $generated@@147)) $generated@@146)
 :pattern ( ($generated@@25 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@125 ($generated@@25 $generated@@148 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@25 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@85 ($generated@@102 $generated@@150)) $generated@@0)
 :pattern ( ($generated@@102 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@151 ($generated@@26 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@26 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@153 ($generated@@102 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@102 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@155 ($generated@@48 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@48 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@38 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@38 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@52 $generated@@160 ($generated@@89 $generated@@160 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@89 $generated@@160 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@36 $generated@@24 ($generated@@102 $generated@@162) ($generated@@26 $generated@@161)) ($generated@@136 $generated@@162 $generated@@161))
 :pattern ( ($generated@@36 $generated@@24 ($generated@@102 $generated@@162) ($generated@@26 $generated@@161)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (< ($generated@@163 $generated@@164) ($generated@@163 ($generated@@25 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@25 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (< ($generated@@163 $generated@@167) ($generated@@163 ($generated@@25 $generated@@166 $generated@@167)))
 :pattern ( ($generated@@25 $generated@@166 $generated@@167))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (or ($generated@@42 $generated@@168 $generated@@169 $generated@@171 $generated@@172) (and (< 1 $generated@@32) (and (and (or (not (= $generated@@171 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@171 ($generated@@38 $generated@@168))) ($generated@@36 $generated@@24 $generated@@172 ($generated@@26 $generated@@169))))) (and (=> (not ($generated@@84 $generated@@172)) (let (($generated@@173 ($generated@@125 $generated@@172)))
(let (($generated@@174 ($generated@@126 $generated@@172)))
 (and ($generated@@42 $generated@@168 $generated@@169 $generated@@171 $generated@@174) ($generated@@42 $generated@@168 $generated@@169 $generated@@171 $generated@@173))))) (= ($generated@@39 $generated@@168 $generated@@169 ($generated@@40 $generated@@170) $generated@@171 $generated@@172) (ite ($generated@@84 $generated@@172) ($generated@@43 1) (let (($generated@@175 ($generated@@125 $generated@@172)))
(let (($generated@@176 ($generated@@126 $generated@@172)))
(+ ($generated@@39 $generated@@168 $generated@@169 $generated@@170 $generated@@171 $generated@@176) ($generated@@39 $generated@@168 $generated@@169 $generated@@170 $generated@@171 $generated@@175))))))))
 :pattern ( ($generated@@39 $generated@@168 $generated@@169 ($generated@@40 $generated@@170) $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@178 T@U) ) (! (< ($generated@@177 $generated@@178) ($generated@@163 ($generated@@102 $generated@@178)))
 :pattern ( ($generated@@102 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and ($generated@@27 $generated@@181) (and ($generated@@84 $generated@@179) ($generated@@23 $generated@@24 $generated@@179 ($generated@@26 $generated@@180) $generated@@181))) ($generated@@107 ($generated@@153 $generated@@179) $generated@@180 $generated@@181))
 :pattern ( ($generated@@107 ($generated@@153 $generated@@179) $generated@@180 $generated@@181))
)))
(assert  (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@182 $generated@@185 $generated@@186 $generated@@187 ($generated@@184 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@190 $generated@@191) $generated@@188)
 :weight 0
)) (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@182 $generated@@192 $generated@@193 $generated@@194 ($generated@@184 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@182 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@182 $generated@@201 $generated@@202 $generated@@203 ($generated@@184 $generated@@201 $generated@@202 $generated@@203 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@182 $generated@@201 $generated@@202 $generated@@203 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (= ($generated@@12 ($generated@@182 $generated@@37 $generated@@54 $generated@@8 ($generated@@183 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (or (not (= $generated@@214 $generated@@210)) (not true)) ($generated@@12 ($generated@@52 $generated@@8 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@211 $generated@@214) $generated@@212)))) $generated@@213))
 :pattern ( ($generated@@182 $generated@@37 $generated@@54 $generated@@8 ($generated@@183 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ) (! (= ($generated@@177 ($generated@@89 $generated@@24 $generated@@216)) ($generated@@163 $generated@@216))
 :pattern ( ($generated@@177 ($generated@@89 $generated@@24 $generated@@216)))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> ($generated@@136 $generated@@218 ($generated@@26 $generated@@217)) (and (= ($generated@@89 $generated@@24 ($generated@@52 $generated@@24 $generated@@218)) $generated@@218) ($generated@@36 $generated@@24 ($generated@@52 $generated@@24 $generated@@218) ($generated@@26 $generated@@217))))
 :pattern ( ($generated@@136 $generated@@218 ($generated@@26 $generated@@217)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> ($generated@@136 $generated@@220 ($generated@@48 $generated@@219)) (and (= ($generated@@89 $generated@@37 ($generated@@52 $generated@@37 $generated@@220)) $generated@@220) ($generated@@36 $generated@@37 ($generated@@52 $generated@@37 $generated@@220) ($generated@@48 $generated@@219))))
 :pattern ( ($generated@@136 $generated@@220 ($generated@@48 $generated@@219)))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> ($generated@@136 $generated@@222 ($generated@@38 $generated@@221)) (and (= ($generated@@89 $generated@@37 ($generated@@52 $generated@@37 $generated@@222)) $generated@@222) ($generated@@36 $generated@@37 ($generated@@52 $generated@@37 $generated@@222) ($generated@@38 $generated@@221))))
 :pattern ( ($generated@@136 $generated@@222 ($generated@@38 $generated@@221)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and ($generated@@27 $generated@@225) (and ($generated@@87 $generated@@223) ($generated@@23 $generated@@24 $generated@@223 ($generated@@26 $generated@@224) $generated@@225))) ($generated@@23 $generated@@24 ($generated@@126 $generated@@223) ($generated@@26 $generated@@224) $generated@@225))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@126 $generated@@223) ($generated@@26 $generated@@224) $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and ($generated@@27 $generated@@228) (and ($generated@@87 $generated@@226) ($generated@@23 $generated@@24 $generated@@226 ($generated@@26 $generated@@227) $generated@@228))) ($generated@@23 $generated@@24 ($generated@@125 $generated@@226) ($generated@@26 $generated@@227) $generated@@228))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@125 $generated@@226) ($generated@@26 $generated@@227) $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= ($generated@@25 ($generated@@81 $generated@@24 $generated@@229) ($generated@@81 $generated@@24 $generated@@230)) ($generated@@81 $generated@@24 ($generated@@25 $generated@@229 $generated@@230)))
 :pattern ( ($generated@@25 ($generated@@81 $generated@@24 $generated@@229) ($generated@@81 $generated@@24 $generated@@230)))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (or ($generated@@42 $generated@@231 $generated@@232 ($generated@@81 $generated@@37 $generated@@234) ($generated@@81 $generated@@24 $generated@@235)) (and (< 1 $generated@@32) (and (and (or (not (= $generated@@234 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@234 ($generated@@38 $generated@@231))) ($generated@@36 $generated@@24 $generated@@235 ($generated@@26 $generated@@232))))) (and (=> (not ($generated@@12 ($generated@@81 $generated@@8 ($generated@@11 ($generated@@84 ($generated@@81 $generated@@24 $generated@@235)))))) (let (($generated@@236 ($generated@@81 $generated@@24 ($generated@@125 ($generated@@81 $generated@@24 $generated@@235)))))
(let (($generated@@237 ($generated@@81 $generated@@24 ($generated@@126 ($generated@@81 $generated@@24 $generated@@235)))))
 (and ($generated@@42 $generated@@231 $generated@@232 ($generated@@81 $generated@@37 $generated@@234) $generated@@237) ($generated@@42 $generated@@231 $generated@@232 ($generated@@81 $generated@@37 $generated@@234) $generated@@236))))) (= ($generated@@39 $generated@@231 $generated@@232 ($generated@@40 $generated@@233) ($generated@@81 $generated@@37 $generated@@234) ($generated@@81 $generated@@24 $generated@@235)) (ite ($generated@@84 ($generated@@81 $generated@@24 $generated@@235)) ($generated@@43 1) (let (($generated@@238 ($generated@@81 $generated@@24 ($generated@@125 ($generated@@81 $generated@@24 $generated@@235)))))
(let (($generated@@239 ($generated@@81 $generated@@24 ($generated@@126 ($generated@@81 $generated@@24 $generated@@235)))))
($generated@@43 (+ ($generated@@39 $generated@@231 $generated@@232 ($generated@@40 $generated@@233) ($generated@@81 $generated@@37 $generated@@234) $generated@@239) ($generated@@39 $generated@@231 $generated@@232 ($generated@@40 $generated@@233) ($generated@@81 $generated@@37 $generated@@234) $generated@@238)))))))))
 :weight 3
 :pattern ( ($generated@@39 $generated@@231 $generated@@232 ($generated@@40 $generated@@233) ($generated@@81 $generated@@37 $generated@@234) ($generated@@81 $generated@@24 $generated@@235)))
))))
(assert (forall (($generated@@240 Int) ) (! (= ($generated@@89 $generated@@9 ($generated@@13 ($generated@@43 $generated@@240))) ($generated@@81 $generated@@55 ($generated@@89 $generated@@9 ($generated@@13 $generated@@240))))
 :pattern ( ($generated@@89 $generated@@9 ($generated@@13 ($generated@@43 $generated@@240))))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@102 ($generated@@81 $generated@@55 $generated@@241)) ($generated@@81 $generated@@24 ($generated@@102 $generated@@241)))
 :pattern ( ($generated@@102 ($generated@@81 $generated@@55 $generated@@241)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@T) ) (! (= ($generated@@89 $generated@@243 ($generated@@81 $generated@@243 $generated@@242)) ($generated@@81 $generated@@55 ($generated@@89 $generated@@243 $generated@@242)))
 :pattern ( ($generated@@89 $generated@@243 ($generated@@81 $generated@@243 $generated@@242)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (= ($generated@@39 $generated@@244 $generated@@245 ($generated@@40 $generated@@246) $generated@@247 $generated@@248) ($generated@@39 $generated@@244 $generated@@245 $generated@@246 $generated@@247 $generated@@248))
 :pattern ( ($generated@@39 $generated@@244 $generated@@245 ($generated@@40 $generated@@246) $generated@@247 $generated@@248))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@254  (=> (and (and (= $generated@@249 ($generated@@183 $generated@@35 $generated@@250 $generated false)) ($generated@@107 ($generated@@89 $generated@@37 $generated@@251) ($generated@@48 $generated@@252) $generated@@250)) (and ($generated@@34 $generated@@252 $generated@@251) ($generated@@34 $generated@@252 $generated@@251))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@34 $generated@@252 $generated@@251) (or ($generated@@33 $generated@@252 $generated@@251) (forall (($generated@@255 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@24 $generated@@255 ($generated@@26 $generated@@252)) (forall (($generated@@256 T@U) ) (!  (=> ($generated@@36 $generated@@24 $generated@@256 ($generated@@26 $generated@@252)) (=> (< ($generated@@163 $generated@@256) ($generated@@163 $generated@@255)) (<= ($generated@@43 2) ($generated@@39 $generated@@252 $generated@@252 ($generated@@40 $generated@@41) $generated@@251 $generated@@256))))
 :pattern ( ($generated@@39 $generated@@252 $generated@@252 ($generated@@40 $generated@@41) $generated@@251 $generated@@256))
))) (and true (exists (($generated@@257 T@U) ) (!  (and ($generated@@136 $generated@@257 $generated@@252) (= ($generated@@102 $generated@@257) $generated@@255))
 :pattern ( ($generated@@102 $generated@@257))
)))) (<= ($generated@@43 2) ($generated@@39 $generated@@252 $generated@@252 ($generated@@40 ($generated@@40 $generated@@41)) $generated@@251 $generated@@255)))
 :pattern ( ($generated@@39 $generated@@252 $generated@@252 ($generated@@40 ($generated@@40 $generated@@41)) $generated@@251 $generated@@255))
))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@34 $generated@@252 $generated@@251) (or ($generated@@33 $generated@@252 $generated@@251) (forall (($generated@@258 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@24 $generated@@258 ($generated@@26 $generated@@252)) (forall (($generated@@259 T@U) ) (!  (=> ($generated@@36 $generated@@24 $generated@@259 ($generated@@26 $generated@@252)) (=> (< ($generated@@163 $generated@@259) ($generated@@163 $generated@@258)) (<= ($generated@@43 2) ($generated@@39 $generated@@252 $generated@@252 ($generated@@40 $generated@@41) $generated@@251 $generated@@259))))
 :pattern ( ($generated@@39 $generated@@252 $generated@@252 ($generated@@40 $generated@@41) $generated@@251 $generated@@259))
))) (and true (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and ($generated@@36 $generated@@24 $generated@@260 ($generated@@26 $generated@@252)) ($generated@@36 $generated@@24 $generated@@261 ($generated@@26 $generated@@252))) (= ($generated@@25 $generated@@260 $generated@@261) $generated@@258))
 :pattern ( ($generated@@25 $generated@@260 $generated@@261))
)))) (<= ($generated@@43 2) ($generated@@39 $generated@@252 $generated@@252 ($generated@@40 ($generated@@40 $generated@@41)) $generated@@251 $generated@@258)))
 :pattern ( ($generated@@39 $generated@@252 $generated@@252 ($generated@@40 ($generated@@40 $generated@@41)) $generated@@251 $generated@@258))
)))))))))
(let (($generated@@262  (=> (and (and (and ($generated@@27 $generated@@250) ($generated@@253 $generated@@250)) ($generated@@140 $generated@@252)) (and (and (or (not (= $generated@@251 $generated@@35)) (not true)) (and ($generated@@36 $generated@@37 $generated@@251 ($generated@@38 $generated@@252)) ($generated@@23 $generated@@37 $generated@@251 ($generated@@38 $generated@@252) $generated@@250))) (and (= 3 $generated@@32) (= (ControlFlow 0 4) 2)))) $generated@@254)))
$generated@@262)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
