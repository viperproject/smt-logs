(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@75 (Int) Int)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) Bool)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@118 (T@U Int) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@132 (T@U) Bool)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (or (not (= $generated@@31 $generated@@27)) (not true)) (= ($generated@@28 $generated@@31) ($generated@@26 $generated@@30))) ($generated@@29 $generated@@10 ($generated@@14 ($generated@@25 $generated@@31)) $generated))
 :pattern ( ($generated@@25 $generated@@31) ($generated@@26 $generated@@30))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! ($generated@@32 $generated@@10 $generated@@34 $generated@@33 $generated@@35)
 :pattern ( ($generated@@32 $generated@@10 $generated@@34 $generated@@33 $generated@@35))
)))
(assert (= ($generated@@8 $generated@@36) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40) ($generated@@32 $generated@@36 $generated@@39 ($generated@@26 $generated@@38) $generated@@40))
 :pattern ( ($generated@@32 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40))
 :pattern ( ($generated@@32 $generated@@36 $generated@@39 ($generated@@26 $generated@@38) $generated@@40))
)))
(assert (= ($generated@@41 $generated@@42) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@8 $generated@@45) 4)) (= ($generated@@8 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@8 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@69 ($generated@@26 $generated@@68) $generated@@70)  (or (= $generated@@69 $generated@@27) ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@36 ($generated@@47 $generated@@45 $generated@@46) $generated@@70 $generated@@69) $generated@@2)))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@69 ($generated@@26 $generated@@68) $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@71 $generated@@72 $generated@@73) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@36 ($generated@@47 $generated@@45 $generated@@46) $generated@@72 $generated@@74) $generated@@2))) ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@36 ($generated@@47 $generated@@45 $generated@@46) $generated@@73 $generated@@74) $generated@@2))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@36 ($generated@@47 $generated@@45 $generated@@46) $generated@@73 $generated@@74) $generated@@2))
)))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@75 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@43 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@43 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@29 $generated@@10 $generated@@83 $generated@@33) (<= ($generated@@75 0) ($generated@@15 $generated@@83)))
 :pattern ( ($generated@@29 $generated@@10 $generated@@83 $generated@@33))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@85 ($generated@@37 $generated@@84))  (and ($generated@@29 $generated@@36 $generated@@85 ($generated@@26 $generated@@84)) (or (not (= $generated@@85 $generated@@27)) (not true))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@85 ($generated@@37 $generated@@84)))
 :pattern ( ($generated@@29 $generated@@36 $generated@@85 ($generated@@26 $generated@@84)))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@86 ($generated@@80 $generated@@90 $generated@@87) $generated@@88 $generated@@89) ($generated@@32 $generated@@90 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@86 ($generated@@80 $generated@@90 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@71 $generated@@91 $generated@@92) (=> ($generated@@86 $generated@@93 $generated@@94 $generated@@91) ($generated@@86 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@71 $generated@@91 $generated@@92) ($generated@@86 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (!  (=> ($generated@@71 $generated@@95 $generated@@96) (=> ($generated@@32 $generated@@99 $generated@@97 $generated@@98 $generated@@95) ($generated@@32 $generated@@99 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@71 $generated@@95 $generated@@96) ($generated@@32 $generated@@99 $generated@@97 $generated@@98 $generated@@95))
)))
(assert (forall (($generated@@101 T@U) ) (!  (and (= ($generated@@24 ($generated@@26 $generated@@101)) $generated@@4) (= ($generated@@100 ($generated@@26 $generated@@101)) $generated@@7))
 :pattern ( ($generated@@26 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (!  (and (= ($generated@@24 ($generated@@37 $generated@@102)) $generated@@5) (= ($generated@@100 ($generated@@37 $generated@@102)) $generated@@7))
 :pattern ( ($generated@@37 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@103 $generated@@104 $generated@@33) (and (= ($generated@@80 $generated@@10 ($generated@@43 $generated@@10 $generated@@104)) $generated@@104) ($generated@@29 $generated@@10 ($generated@@43 $generated@@10 $generated@@104) $generated@@33)))
 :pattern ( ($generated@@103 $generated@@104 $generated@@33))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@106 ($generated@@26 $generated@@105))  (or (= $generated@@106 $generated@@27) (= ($generated@@28 $generated@@106) ($generated@@26 $generated@@105))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@106 ($generated@@26 $generated@@105)))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (or (not (= $generated@@107 $generated@@109)) (not true)) (=> (and ($generated@@71 $generated@@107 $generated@@108) ($generated@@71 $generated@@108 $generated@@109)) ($generated@@71 $generated@@107 $generated@@109)))
 :pattern ( ($generated@@71 $generated@@107 $generated@@108) ($generated@@71 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@103 $generated@@110 $generated) (and (= ($generated@@80 $generated@@10 ($generated@@43 $generated@@10 $generated@@110)) $generated@@110) ($generated@@29 $generated@@10 ($generated@@43 $generated@@10 $generated@@110) $generated)))
 :pattern ( ($generated@@103 $generated@@110 $generated))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@103 ($generated@@80 $generated@@113 $generated@@111) $generated@@112) ($generated@@29 $generated@@113 $generated@@111 $generated@@112))
 :pattern ( ($generated@@103 ($generated@@80 $generated@@113 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (! (<= 0 ($generated@@25 $generated@@114))
 :pattern ( ($generated@@25 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (! (<= 0 ($generated@@41 $generated@@115))
 :pattern ( ($generated@@41 $generated@@115))
)))
(assert (= ($generated@@8 $generated@@116) 7))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@32 $generated@@116 $generated@@119 ($generated@@117 $generated@@120) $generated@@121) (forall (($generated@@122 Int) ) (!  (=> (and (<= 0 $generated@@122) (< $generated@@122 ($generated@@41 $generated@@119))) ($generated@@86 ($generated@@118 $generated@@119 $generated@@122) $generated@@120 $generated@@121))
 :pattern ( ($generated@@118 $generated@@119 $generated@@122))
)))
 :pattern ( ($generated@@32 $generated@@116 $generated@@119 ($generated@@117 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@117 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@117 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@24 ($generated@@117 $generated@@125)) $generated@@1)
 :pattern ( ($generated@@117 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@26 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@26 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@37 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@37 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@43 $generated@@131 ($generated@@80 $generated@@131 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@80 $generated@@131 $generated@@130))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (and ($generated@@132 $generated@@134) (and (or (not (= $generated@@135 $generated@@27)) (not true)) (= ($generated@@28 $generated@@135) ($generated@@26 $generated@@133)))) ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@36 ($generated@@47 $generated@@45 $generated@@46) $generated@@134 $generated@@135) $generated@@2)))) ($generated@@32 $generated@@10 ($generated@@14 ($generated@@25 $generated@@135)) $generated $generated@@134))
 :pattern ( ($generated@@25 $generated@@135) ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@36 ($generated@@47 $generated@@45 $generated@@46) $generated@@134 $generated@@135) $generated@@2)) ($generated@@26 $generated@@133))
)))
(assert  (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@136 $generated@@139 $generated@@140 $generated@@141 ($generated@@138 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@144 $generated@@145) $generated@@142)
 :weight 0
)) (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@136 $generated@@146 $generated@@147 $generated@@148 ($generated@@138 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@136 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@136 $generated@@155 $generated@@156 $generated@@157 ($generated@@138 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@136 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@13 ($generated@@136 $generated@@36 $generated@@45 $generated@@9 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@36 ($generated@@47 $generated@@45 $generated@@46) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@136 $generated@@36 $generated@@45 $generated@@9 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@103 $generated@@170 ($generated@@117 $generated@@171)) (and (= ($generated@@80 $generated@@116 ($generated@@43 $generated@@116 $generated@@170)) $generated@@170) ($generated@@29 $generated@@116 ($generated@@43 $generated@@116 $generated@@170) ($generated@@117 $generated@@171))))
 :pattern ( ($generated@@103 $generated@@170 ($generated@@117 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@103 $generated@@173 ($generated@@26 $generated@@172)) (and (= ($generated@@80 $generated@@36 ($generated@@43 $generated@@36 $generated@@173)) $generated@@173) ($generated@@29 $generated@@36 ($generated@@43 $generated@@36 $generated@@173) ($generated@@26 $generated@@172))))
 :pattern ( ($generated@@103 $generated@@173 ($generated@@26 $generated@@172)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@103 $generated@@175 ($generated@@37 $generated@@174)) (and (= ($generated@@80 $generated@@36 ($generated@@43 $generated@@36 $generated@@175)) $generated@@175) ($generated@@29 $generated@@36 ($generated@@43 $generated@@36 $generated@@175) ($generated@@37 $generated@@174))))
 :pattern ( ($generated@@103 $generated@@175 ($generated@@37 $generated@@174)))
)))
(assert (= ($generated@@24 $generated@@33) $generated@@3))
(assert (= ($generated@@100 $generated@@33) $generated@@6))
(assert (forall (($generated@@176 Int) ) (! (= ($generated@@80 $generated@@10 ($generated@@14 ($generated@@75 $generated@@176))) ($generated@@77 $generated@@46 ($generated@@80 $generated@@10 ($generated@@14 $generated@@176))))
 :pattern ( ($generated@@80 $generated@@10 ($generated@@14 ($generated@@75 $generated@@176))))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@80 $generated@@178 ($generated@@77 $generated@@178 $generated@@177)) ($generated@@77 $generated@@46 ($generated@@80 $generated@@178 $generated@@177)))
 :pattern ( ($generated@@80 $generated@@178 ($generated@@77 $generated@@178 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= ($generated@@41 $generated@@179) 0) (= $generated@@179 $generated@@42))
 :pattern ( ($generated@@41 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! ($generated@@32 $generated@@10 $generated@@181 $generated $generated@@180)
 :pattern ( ($generated@@32 $generated@@10 $generated@@181 $generated $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@29 $generated@@116 $generated@@182 ($generated@@117 $generated@@183)) (forall (($generated@@184 Int) ) (!  (=> (and (<= 0 $generated@@184) (< $generated@@184 ($generated@@41 $generated@@182))) ($generated@@103 ($generated@@118 $generated@@182 $generated@@184) $generated@@183))
 :pattern ( ($generated@@118 $generated@@182 $generated@@184))
)))
 :pattern ( ($generated@@29 $generated@@116 $generated@@182 ($generated@@117 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ) (! ($generated@@29 $generated@@10 $generated@@185 $generated)
 :pattern ( ($generated@@29 $generated@@10 $generated@@185 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@192  (=> (= $generated@@186 ($generated@@137 $generated@@27 $generated@@187 $generated@@2 false)) (=> (and (<= ($generated@@75 10) ($generated@@41 $generated@@188)) (= (ControlFlow 0 2) (- 0 1))) (or (not (= $generated@@189 $generated@@27)) (not true))))))
(let (($generated@@193  (=> (and (and (and ($generated@@132 $generated@@187) ($generated@@190 $generated@@187)) (and ($generated@@29 $generated@@116 $generated@@188 ($generated@@117 $generated@@33)) ($generated@@32 $generated@@116 $generated@@188 ($generated@@117 $generated@@33) $generated@@187))) (and (and ($generated@@29 $generated@@36 $generated@@189 ($generated@@37 $generated@@33)) ($generated@@32 $generated@@36 $generated@@189 ($generated@@37 $generated@@33) $generated@@187)) (and (= 0 $generated@@191) (= (ControlFlow 0 3) 2)))) $generated@@192)))
$generated@@193)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
