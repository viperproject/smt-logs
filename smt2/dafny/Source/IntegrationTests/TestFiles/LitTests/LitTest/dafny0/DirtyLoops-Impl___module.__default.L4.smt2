(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@74 (Int) Int)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@T T@U T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@142 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@23 ($generated@@22 $generated@@24 $generated@@25) $generated@@25)
 :pattern ( ($generated@@22 $generated@@24 $generated@@25))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@23 $generated@@26 $generated@@28) ($generated@@23 ($generated@@22 $generated@@26 $generated@@27) $generated@@28))
 :pattern ( ($generated@@22 $generated@@26 $generated@@27) ($generated@@23 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@23 ($generated@@22 $generated@@29 $generated@@30) $generated@@31)  (or (= $generated@@31 $generated@@30) ($generated@@23 $generated@@29 $generated@@31)))
 :pattern ( ($generated@@23 ($generated@@22 $generated@@29 $generated@@30) $generated@@31))
)))
(assert (= ($generated@@5 $generated@@33) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@37 ($generated@@34 $generated@@36) $generated@@38) ($generated@@32 $generated@@33 $generated@@37 ($generated@@35 $generated@@36) $generated@@38))
 :pattern ( ($generated@@32 $generated@@33 $generated@@37 ($generated@@34 $generated@@36) $generated@@38))
 :pattern ( ($generated@@32 $generated@@33 $generated@@37 ($generated@@35 $generated@@36) $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ) (!  (not ($generated@@23 $generated@@39 $generated@@40))
 :pattern ( ($generated@@23 $generated@@39 $generated@@40))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@43 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@43 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@5 $generated@@44) 4)) (= ($generated@@5 $generated@@45) 5)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@5 ($generated@@46 $generated@@61 $generated@@62)) 6))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@46 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@46 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@68 ($generated@@35 $generated@@67) $generated@@69)  (or (= $generated@@68 $generated@@41) ($generated@@10 ($generated@@42 $generated@@6 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@69 $generated@@68) $generated@@1)))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@68 ($generated@@35 $generated@@67) $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> ($generated@@70 $generated@@71 $generated@@72) (forall (($generated@@73 T@U) ) (!  (=> ($generated@@10 ($generated@@42 $generated@@6 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@71 $generated@@73) $generated@@1))) ($generated@@10 ($generated@@42 $generated@@6 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@72 $generated@@73) $generated@@1))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@72 $generated@@73) $generated@@1))
)))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@75 Int) ) (! (= ($generated@@74 $generated@@75) $generated@@75)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 $generated@@77) $generated@@77)
 :pattern ( ($generated@@76 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 ($generated@@42 $generated@@81 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@42 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@82 $generated@@33 $generated@@84 ($generated@@34 $generated@@83))  (and ($generated@@82 $generated@@33 $generated@@84 ($generated@@35 $generated@@83)) (or (not (= $generated@@84 $generated@@41)) (not true))))
 :pattern ( ($generated@@82 $generated@@33 $generated@@84 ($generated@@34 $generated@@83)))
 :pattern ( ($generated@@82 $generated@@33 $generated@@84 ($generated@@35 $generated@@83)))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (!  (=> ($generated@@70 $generated@@85 $generated@@86) (=> ($generated@@32 $generated@@89 $generated@@87 $generated@@88 $generated@@85) ($generated@@32 $generated@@89 $generated@@87 $generated@@88 $generated@@86)))
 :pattern ( ($generated@@70 $generated@@85 $generated@@86) ($generated@@32 $generated@@89 $generated@@87 $generated@@88 $generated@@85))
)))
(assert (forall (($generated@@91 T@U) ) (!  (and (= ($generated@@21 ($generated@@35 $generated@@91)) $generated@@2) (= ($generated@@90 ($generated@@35 $generated@@91)) $generated@@4))
 :pattern ( ($generated@@35 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ) (!  (and (= ($generated@@21 ($generated@@34 $generated@@92)) $generated@@3) (= ($generated@@90 ($generated@@34 $generated@@92)) $generated@@4))
 :pattern ( ($generated@@34 $generated@@92))
)))
(assert  (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@93 $generated@@96 $generated@@97 $generated@@98 ($generated@@95 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@102 $generated@@99) $generated@@101 $generated@@102) $generated@@99)
 :weight 0
)) (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@108 $generated@@110) (= ($generated@@93 $generated@@103 $generated@@104 $generated@@105 ($generated@@95 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@93 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@93 $generated@@112 $generated@@113 $generated@@114 ($generated@@95 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@93 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@10 ($generated@@93 $generated@@33 $generated@@44 $generated@@6 ($generated@@94 $generated@@121 $generated@@122 $generated@@123 $generated@@124) $generated@@125 $generated@@126))  (=> (and (or (not (= $generated@@125 $generated@@121)) (not true)) ($generated@@10 ($generated@@42 $generated@@6 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@122 $generated@@125) $generated@@123)))) (= $generated@@125 $generated@@124)))
 :pattern ( ($generated@@93 $generated@@33 $generated@@44 $generated@@6 ($generated@@94 $generated@@121 $generated@@122 $generated@@123 $generated@@124) $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@82 $generated@@33 $generated@@129 ($generated@@35 $generated@@128))  (or (= $generated@@129 $generated@@41) (= ($generated@@127 $generated@@129) ($generated@@35 $generated@@128))))
 :pattern ( ($generated@@82 $generated@@33 $generated@@129 ($generated@@35 $generated@@128)))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or (not (= $generated@@130 $generated@@132)) (not true)) (=> (and ($generated@@70 $generated@@130 $generated@@131) ($generated@@70 $generated@@131 $generated@@132)) ($generated@@70 $generated@@130 $generated@@132)))
 :pattern ( ($generated@@70 $generated@@130 $generated@@131) ($generated@@70 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@133 ($generated@@35 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@35 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@135 ($generated@@34 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@34 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@42 $generated@@138 ($generated@@79 $generated@@138 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@79 $generated@@138 $generated@@137))
)))
(assert (forall (($generated@@139 Int) ) (! (= ($generated@@79 $generated@@7 ($generated@@11 ($generated@@74 $generated@@139))) ($generated@@76 $generated@@45 ($generated@@79 $generated@@7 ($generated@@11 $generated@@139))))
 :pattern ( ($generated@@79 $generated@@7 ($generated@@11 ($generated@@74 $generated@@139))))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@79 $generated@@141 ($generated@@76 $generated@@141 $generated@@140)) ($generated@@76 $generated@@45 ($generated@@79 $generated@@141 $generated@@140)))
 :pattern ( ($generated@@79 $generated@@141 ($generated@@76 $generated@@141 $generated@@140)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@10 ($generated@@93 $generated@@33 $generated@@44 $generated@@6 ($generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))  (=> (and (or (not (= $generated@@147 $generated@@143)) (not true)) ($generated@@10 ($generated@@42 $generated@@6 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@144 $generated@@147) $generated@@145)))) ($generated@@23 $generated@@146 ($generated@@79 $generated@@33 $generated@@147))))
 :pattern ( ($generated@@93 $generated@@33 $generated@@44 $generated@@6 ($generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! ($generated@@32 $generated@@7 $generated@@150 $generated $generated@@149)
 :pattern ( ($generated@@32 $generated@@7 $generated@@150 $generated $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! ($generated@@82 $generated@@7 $generated@@151 $generated)
 :pattern ( ($generated@@82 $generated@@7 $generated@@151 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 () Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@167  (=> (<= (+ $generated@@152 $generated@@153) $generated@@154) (and (=> (= (ControlFlow 0 5) (- 0 7)) (= $generated@@154 ($generated@@74 0))) (=> (= $generated@@154 ($generated@@74 0)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (= $generated@@152 $generated@@152)) (=> (= $generated@@152 $generated@@152) (=> (= (ControlFlow 0 5) (- 0 4)) (= $generated@@153 $generated@@155)))))))))
(let (($generated@@168 true))
(let (($generated@@169  (=> (and (< $generated@@154 (+ $generated@@152 $generated@@153)) (= (ControlFlow 0 8) 3)) $generated@@168)))
(let (($generated@@170  (and (=> (= (ControlFlow 0 9) 5) $generated@@167) (=> (= (ControlFlow 0 9) 8) $generated@@169))))
(let (($generated@@171  (=> $generated@@156 (and (=> (= (ControlFlow 0 10) 9) $generated@@170) (=> (= (ControlFlow 0 10) 3) $generated@@168)))))
(let (($generated@@172 true))
(let (($generated@@173  (and (=> (= (ControlFlow 0 11) 2) $generated@@172) (=> (= (ControlFlow 0 11) 10) $generated@@171))))
(let (($generated@@174 true))
(let (($generated@@175  (=> (and (and (and ($generated@@157 $generated@@158) ($generated@@159 $generated@@158)) (not false)) (and (and (forall (($generated@@176 T@U) ) (!  (=> (and (or (not (= $generated@@176 $generated@@41)) (not true)) ($generated@@10 ($generated@@42 $generated@@6 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@176) $generated@@1)))) (or (= ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@158 $generated@@176) ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@176)) (= $generated@@176 $generated@@161)))
 :pattern ( ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@158 $generated@@176))
)) ($generated@@70 $generated@@160 $generated@@158)) (and (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (or (not (= $generated@@177 $generated@@41)) (not true)) ($generated@@10 ($generated@@42 $generated@@6 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@177) $generated@@1)))) (or (= ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@158 $generated@@177) $generated@@178) ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@177) $generated@@178)) ($generated@@10 ($generated@@93 $generated@@33 $generated@@44 $generated@@6 $generated@@162 $generated@@177 $generated@@178))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@158 $generated@@177) $generated@@178))
)) (<= (- (+ $generated@@152 $generated@@153) $generated@@154) $generated@@163)))) (and (=> (= (ControlFlow 0 12) 1) $generated@@174) (=> (= (ControlFlow 0 12) 11) $generated@@173)))))
(let (($generated@@179  (and (=> (= (ControlFlow 0 13) (- 0 14)) (forall (($generated@@180 T@U) ($generated@@181 T@U) )  (=> (and (and (or (not (= $generated@@180 $generated@@41)) (not true)) ($generated@@10 ($generated@@42 $generated@@6 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@180) $generated@@1)))) ($generated@@23 (ite (< $generated@@152 3) ($generated@@22 $generated@@39 ($generated@@79 $generated@@33 $generated@@161)) $generated@@39) ($generated@@79 $generated@@33 $generated@@180))) ($generated@@10 ($generated@@93 $generated@@33 $generated@@44 $generated@@6 $generated@@164 $generated@@180 $generated@@181))))) (=> (forall (($generated@@182 T@U) ($generated@@183 T@U) )  (=> (and (and (or (not (= $generated@@182 $generated@@41)) (not true)) ($generated@@10 ($generated@@42 $generated@@6 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@33 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@182) $generated@@1)))) ($generated@@23 (ite (< $generated@@152 3) ($generated@@22 $generated@@39 ($generated@@79 $generated@@33 $generated@@161)) $generated@@39) ($generated@@79 $generated@@33 $generated@@182))) ($generated@@10 ($generated@@93 $generated@@33 $generated@@44 $generated@@6 $generated@@164 $generated@@182 $generated@@183)))) (=> (= $generated@@162 ($generated@@142 $generated@@41 $generated@@160 $generated@@1 (ite (< $generated@@152 3) ($generated@@22 $generated@@39 ($generated@@79 $generated@@33 $generated@@161)) $generated@@39))) (=> (and (= $generated@@163 (- (+ $generated@@152 $generated@@155) $generated@@165)) (= (ControlFlow 0 13) 12)) $generated@@175))))))
(let (($generated@@184  (=> (and (<= 3 $generated@@152) (= (ControlFlow 0 16) 13)) $generated@@179)))
(let (($generated@@185  (=> (and (< $generated@@152 3) (= (ControlFlow 0 15) 13)) $generated@@179)))
(let (($generated@@186  (=> (and (= $generated@@164 ($generated@@94 $generated@@41 $generated@@160 $generated@@1 $generated@@161)) (= $generated@@165 ($generated@@74 0))) (and (=> (= (ControlFlow 0 17) 15) $generated@@185) (=> (= (ControlFlow 0 17) 16) $generated@@184)))))
(let (($generated@@187  (=> (and ($generated@@157 $generated@@160) ($generated@@159 $generated@@160)) (=> (and (and ($generated@@82 $generated@@33 $generated@@161 ($generated@@34 $generated)) ($generated@@32 $generated@@33 $generated@@161 ($generated@@34 $generated) $generated@@160)) (and (= 0 $generated@@166) (= (ControlFlow 0 18) 17))) $generated@@186))))
$generated@@187)))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 5) (- 7))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
