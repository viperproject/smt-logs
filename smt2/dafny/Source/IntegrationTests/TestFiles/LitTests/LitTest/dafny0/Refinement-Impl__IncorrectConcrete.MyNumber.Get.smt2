(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@T T@T) T@T)
(declare-fun $generated@@59 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@98 (T@U) Bool)
(declare-fun $generated@@105 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@131 () Int)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@133 (T@U T@U) Bool)
(declare-fun $generated@@134 (Int Int) Int)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert (= ($generated@@31 $generated@@2) 0))
(assert (= ($generated@@32 $generated) $generated@@0))
(assert (= ($generated@@33 $generated@@2) $generated@@3))
(assert (= ($generated@@15 $generated@@35) 3))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@39 $generated@@36)  (or (= $generated@@39 $generated@@37) (= ($generated@@38 $generated@@39) $generated@@36)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@39 $generated@@36))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@43 $generated@@41 $generated@@44) ($generated@@40 $generated@@35 $generated@@43 $generated@@42 $generated@@44))
 :pattern ( ($generated@@40 $generated@@35 $generated@@43 $generated@@41 $generated@@44))
 :pattern ( ($generated@@40 $generated@@35 $generated@@43 $generated@@42 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@46 $generated@@45 $generated@@47) ($generated@@40 $generated@@35 $generated@@46 $generated@@36 $generated@@47))
 :pattern ( ($generated@@40 $generated@@35 $generated@@46 $generated@@45 $generated@@47))
 :pattern ( ($generated@@40 $generated@@35 $generated@@46 $generated@@36 $generated@@47))
)))
(assert (= ($generated@@31 $generated@@48) 0))
(assert (= ($generated@@49 $generated@@6 $generated@@13) $generated@@48))
(assert ($generated@@50 $generated@@48))
(assert (= ($generated@@31 $generated@@51) 0))
(assert (= ($generated@@49 $generated@@6 $generated@@14) $generated@@51))
(assert ($generated@@50 $generated@@51))
(assert (= ($generated@@31 $generated@@52) 0))
(assert (= ($generated@@49 $generated@@6 $generated@@11) $generated@@52))
(assert  (not ($generated@@50 $generated@@52)))
(assert (= ($generated@@31 $generated@@53) 0))
(assert (= ($generated@@49 $generated@@6 $generated@@12) $generated@@53))
(assert  (not ($generated@@50 $generated@@53)))
(assert  (and (and (and (and (and (and (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@55 $generated@@62 $generated@@63 ($generated@@59 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@66) $generated@@64)
 :weight 0
)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (or (= $generated@@71 $generated@@72) (= ($generated@@55 $generated@@67 $generated@@68 ($generated@@59 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@72) ($generated@@55 $generated@@67 $generated@@68 $generated@@70 $generated@@72)))
 :weight 0
))) (= ($generated@@15 $generated@@56) 4)) (= ($generated@@15 $generated@@57) 5)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (= ($generated@@15 ($generated@@58 $generated@@73 $generated@@74)) 6))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@60 ($generated@@58 $generated@@75 $generated@@76)) $generated@@75)
 :pattern ( ($generated@@58 $generated@@75 $generated@@76))
))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@61 ($generated@@58 $generated@@77 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@58 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@79 $generated@@42 $generated@@80)  (or (= $generated@@79 $generated@@37) ($generated@@20 ($generated@@54 $generated@@16 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@80 $generated@@79) $generated@@2)))))
 :pattern ( ($generated@@40 $generated@@35 $generated@@79 $generated@@42 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@81 $generated@@36 $generated@@82)  (or (= $generated@@81 $generated@@37) ($generated@@20 ($generated@@54 $generated@@16 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@82 $generated@@81) $generated@@2)))))
 :pattern ( ($generated@@40 $generated@@35 $generated@@81 $generated@@36 $generated@@82))
)))
(assert (forall (($generated@@84 Int) ) (! (= ($generated@@83 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 ($generated@@54 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@54 $generated@@90 $generated@@89))
)))
(assert (= ($generated@@15 $generated@@91) 7))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@34 $generated@@91 $generated@@95 ($generated@@92 $generated@@96)) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@93 $generated@@95 $generated@@97) ($generated@@94 $generated@@97 $generated@@96))
 :pattern ( ($generated@@93 $generated@@95 $generated@@97))
)))
 :pattern ( ($generated@@34 $generated@@91 $generated@@95 ($generated@@92 $generated@@96)))
)))
(assert ($generated@@50 $generated@@2))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and (and ($generated@@98 $generated@@99) (and (or (not (= $generated@@100 $generated@@37)) (not true)) (= ($generated@@38 $generated@@100) $generated@@36))) ($generated@@20 ($generated@@54 $generated@@16 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@99 $generated@@100) $generated@@2)))) ($generated@@40 $generated@@17 ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@99 $generated@@100) $generated@@52)) $generated $generated@@99))
 :pattern ( ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@99 $generated@@100) $generated@@52)))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (and (and ($generated@@98 $generated@@101) (and (or (not (= $generated@@102 $generated@@37)) (not true)) (= ($generated@@38 $generated@@102) $generated@@36))) ($generated@@20 ($generated@@54 $generated@@16 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@101 $generated@@102) $generated@@2)))) ($generated@@40 $generated@@17 ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@101 $generated@@102) $generated@@53)) $generated $generated@@101))
 :pattern ( ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@101 $generated@@102) $generated@@53)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and ($generated@@98 $generated@@103) (and (or (not (= $generated@@104 $generated@@37)) (not true)) (= ($generated@@38 $generated@@104) $generated@@36))) ($generated@@20 ($generated@@54 $generated@@16 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@103 $generated@@104) $generated@@2)))) ($generated@@40 $generated@@17 ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@103 $generated@@104) $generated@@51)) $generated $generated@@103))
 :pattern ( ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@103 $generated@@104) $generated@@51)))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@105 ($generated@@88 $generated@@109 $generated@@106) $generated@@107 $generated@@108) ($generated@@40 $generated@@109 $generated@@106 $generated@@107 $generated@@108))
 :pattern ( ($generated@@105 ($generated@@88 $generated@@109 $generated@@106) $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@94 $generated@@110 $generated@@42) (and (= ($generated@@88 $generated@@35 ($generated@@54 $generated@@35 $generated@@110)) $generated@@110) ($generated@@34 $generated@@35 ($generated@@54 $generated@@35 $generated@@110) $generated@@42)))
 :pattern ( ($generated@@94 $generated@@110 $generated@@42))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@94 $generated@@111 $generated@@41) (and (= ($generated@@88 $generated@@35 ($generated@@54 $generated@@35 $generated@@111)) $generated@@111) ($generated@@34 $generated@@35 ($generated@@54 $generated@@35 $generated@@111) $generated@@41)))
 :pattern ( ($generated@@94 $generated@@111 $generated@@41))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@94 $generated@@112 $generated@@36) (and (= ($generated@@88 $generated@@35 ($generated@@54 $generated@@35 $generated@@112)) $generated@@112) ($generated@@34 $generated@@35 ($generated@@54 $generated@@35 $generated@@112) $generated@@36)))
 :pattern ( ($generated@@94 $generated@@112 $generated@@36))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@94 $generated@@113 $generated@@45) (and (= ($generated@@88 $generated@@35 ($generated@@54 $generated@@35 $generated@@113)) $generated@@113) ($generated@@34 $generated@@35 ($generated@@54 $generated@@35 $generated@@113) $generated@@45)))
 :pattern ( ($generated@@94 $generated@@113 $generated@@45))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@114 $generated@@41)  (and ($generated@@34 $generated@@35 $generated@@114 $generated@@42) (or (not (= $generated@@114 $generated@@37)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@114 $generated@@41))
 :pattern ( ($generated@@34 $generated@@35 $generated@@114 $generated@@42))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@115 $generated@@45)  (and ($generated@@34 $generated@@35 $generated@@115 $generated@@36) (or (not (= $generated@@115 $generated@@37)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@115 $generated@@45))
 :pattern ( ($generated@@34 $generated@@35 $generated@@115 $generated@@36))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (and ($generated@@98 $generated@@116) (and (or (not (= $generated@@117 $generated@@37)) (not true)) (= ($generated@@38 $generated@@117) $generated@@36))) ($generated@@34 $generated@@91 ($generated@@54 $generated@@91 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@116 $generated@@117) $generated@@48)) ($generated@@92 $generated@@41)))
 :pattern ( ($generated@@54 $generated@@91 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@116 $generated@@117) $generated@@48)))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (and (and ($generated@@98 $generated@@118) (and (or (not (= $generated@@119 $generated@@37)) (not true)) (= ($generated@@38 $generated@@119) $generated@@36))) ($generated@@20 ($generated@@54 $generated@@16 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@118 $generated@@119) $generated@@2)))) ($generated@@40 $generated@@91 ($generated@@54 $generated@@91 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@118 $generated@@119) $generated@@48)) ($generated@@92 $generated@@41) $generated@@118))
 :pattern ( ($generated@@54 $generated@@91 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@118 $generated@@119) $generated@@48)))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (and (= ($generated@@120 ($generated@@49 $generated@@121 $generated@@122)) $generated@@121) (= ($generated@@33 ($generated@@49 $generated@@121 $generated@@122)) $generated@@122))
 :pattern ( ($generated@@49 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@94 $generated@@123 $generated) (and (= ($generated@@88 $generated@@17 ($generated@@54 $generated@@17 $generated@@123)) $generated@@123) ($generated@@34 $generated@@17 ($generated@@54 $generated@@17 $generated@@123) $generated)))
 :pattern ( ($generated@@94 $generated@@123 $generated))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@94 ($generated@@88 $generated@@126 $generated@@124) $generated@@125) ($generated@@34 $generated@@126 $generated@@124 $generated@@125))
 :pattern ( ($generated@@94 ($generated@@88 $generated@@126 $generated@@124) $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@40 $generated@@91 $generated@@127 ($generated@@92 $generated@@128) $generated@@129) (forall (($generated@@130 T@U) ) (!  (=> ($generated@@93 $generated@@127 $generated@@130) ($generated@@105 $generated@@130 $generated@@128 $generated@@129))
 :pattern ( ($generated@@93 $generated@@127 $generated@@130))
)))
 :pattern ( ($generated@@40 $generated@@91 $generated@@127 ($generated@@92 $generated@@128) $generated@@129))
)))
(assert  (=> (<= 0 $generated@@131) (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (or ($generated@@133 $generated@@135 $generated@@136) (and (< 0 $generated@@131) (and ($generated@@98 $generated@@135) (and (or (not (= $generated@@136 $generated@@37)) (not true)) (and ($generated@@34 $generated@@35 $generated@@136 $generated@@45) ($generated@@40 $generated@@35 $generated@@136 $generated@@45 $generated@@135)))))) (= ($generated@@132 $generated@@135 $generated@@136)  (and ($generated@@93 ($generated@@54 $generated@@91 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@135 $generated@@136) $generated@@48)) ($generated@@88 $generated@@35 $generated@@136)) (= ($generated@@22 ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@135 $generated@@136) $generated@@51))) (- ($generated@@134 ($generated@@83 2) ($generated@@22 ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@135 $generated@@136) $generated@@52)))) ($generated@@22 ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@135 $generated@@136) $generated@@53))))))))
 :pattern ( ($generated@@132 $generated@@135 $generated@@136) ($generated@@98 $generated@@135))
))))
(assert (forall (($generated@@137 T@U) ) (! ($generated@@34 $generated@@35 $generated@@137 $generated@@42)
 :pattern ( ($generated@@34 $generated@@35 $generated@@137 $generated@@42))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@138 ($generated@@92 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@92 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@32 ($generated@@92 $generated@@140)) $generated@@1)
 :pattern ( ($generated@@92 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@54 $generated@@142 ($generated@@88 $generated@@142 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@88 $generated@@142 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and ($generated@@98 $generated@@143) (and (or (not (= $generated@@144 $generated@@37)) (not true)) (= ($generated@@38 $generated@@144) $generated@@36))) ($generated@@34 $generated@@17 ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@143 $generated@@144) $generated@@52)) $generated))
 :pattern ( ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@143 $generated@@144) $generated@@52)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and ($generated@@98 $generated@@145) (and (or (not (= $generated@@146 $generated@@37)) (not true)) (= ($generated@@38 $generated@@146) $generated@@36))) ($generated@@34 $generated@@17 ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@145 $generated@@146) $generated@@53)) $generated))
 :pattern ( ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@145 $generated@@146) $generated@@53)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and ($generated@@98 $generated@@147) (and (or (not (= $generated@@148 $generated@@37)) (not true)) (= ($generated@@38 $generated@@148) $generated@@36))) ($generated@@34 $generated@@17 ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@147 $generated@@148) $generated@@51)) $generated))
 :pattern ( ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@147 $generated@@148) $generated@@51)))
)))
(assert  (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@149 $generated@@152 $generated@@153 $generated@@154 ($generated@@151 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@157 $generated@@158) $generated@@155)
 :weight 0
)) (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@149 $generated@@159 $generated@@160 $generated@@161 ($generated@@151 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@149 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@149 $generated@@168 $generated@@169 $generated@@170 ($generated@@151 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@149 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Bool) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@20 ($generated@@149 $generated@@35 $generated@@56 $generated@@16 ($generated@@150 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@181 $generated@@182))  (=> (and (or (not (= $generated@@181 $generated@@177)) (not true)) ($generated@@20 ($generated@@54 $generated@@16 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@178 $generated@@181) $generated@@179)))) $generated@@180))
 :pattern ( ($generated@@149 $generated@@35 $generated@@56 $generated@@16 ($generated@@150 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 Int) ($generated@@184 Int) ) (! (= ($generated@@134 $generated@@183 $generated@@184) (* $generated@@183 $generated@@184))
 :pattern ( ($generated@@134 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> ($generated@@94 $generated@@185 ($generated@@92 $generated@@186)) (and (= ($generated@@88 $generated@@91 ($generated@@54 $generated@@91 $generated@@185)) $generated@@185) ($generated@@34 $generated@@91 ($generated@@54 $generated@@91 $generated@@185) ($generated@@92 $generated@@186))))
 :pattern ( ($generated@@94 $generated@@185 ($generated@@92 $generated@@186)))
)))
(assert  (=> (<= 0 $generated@@131) (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (or ($generated@@133 $generated@@187 $generated@@188) (and (< 0 $generated@@131) (and ($generated@@98 $generated@@187) (and (or (not (= $generated@@188 $generated@@37)) (not true)) (and ($generated@@34 $generated@@35 $generated@@188 $generated@@45) ($generated@@40 $generated@@35 $generated@@188 $generated@@45 $generated@@187)))))) (=> ($generated@@132 $generated@@187 $generated@@188) ($generated@@93 ($generated@@54 $generated@@91 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@187 $generated@@188) $generated@@48)) ($generated@@88 $generated@@35 $generated@@188))))
 :pattern ( ($generated@@132 $generated@@187 $generated@@188))
))))
(assert (= ($generated@@32 $generated@@42) $generated@@4))
(assert (= ($generated@@189 $generated@@42) $generated@@9))
(assert (= ($generated@@32 $generated@@41) $generated@@5))
(assert (= ($generated@@189 $generated@@41) $generated@@9))
(assert (= ($generated@@32 $generated@@36) $generated@@7))
(assert (= ($generated@@189 $generated@@36) $generated@@10))
(assert (= ($generated@@32 $generated@@45) $generated@@8))
(assert (= ($generated@@189 $generated@@45) $generated@@10))
(assert (forall (($generated@@190 Int) ) (! (= ($generated@@88 $generated@@17 ($generated@@21 ($generated@@83 $generated@@190))) ($generated@@85 $generated@@57 ($generated@@88 $generated@@17 ($generated@@21 $generated@@190))))
 :pattern ( ($generated@@88 $generated@@17 ($generated@@21 ($generated@@83 $generated@@190))))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@T) ) (! (= ($generated@@88 $generated@@192 ($generated@@85 $generated@@192 $generated@@191)) ($generated@@85 $generated@@57 ($generated@@88 $generated@@192 $generated@@191)))
 :pattern ( ($generated@@88 $generated@@192 ($generated@@85 $generated@@192 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! ($generated@@40 $generated@@17 $generated@@194 $generated $generated@@193)
 :pattern ( ($generated@@40 $generated@@17 $generated@@194 $generated $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! ($generated@@34 $generated@@17 $generated@@195 $generated)
 :pattern ( ($generated@@34 $generated@@17 $generated@@195 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@201  (=> (and (= $generated@@196 ($generated@@150 $generated@@37 $generated@@197 $generated@@2 false)) (= $generated@@198 (- ($generated@@22 ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@197 $generated@@199) $generated@@52))) ($generated@@22 ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@197 $generated@@199) $generated@@53)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= $generated@@198 ($generated@@22 ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@197 $generated@@199) $generated@@51))))) (=> (= $generated@@198 ($generated@@22 ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@197 $generated@@199) $generated@@51)))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> false (= $generated@@198 ($generated@@22 ($generated@@54 $generated@@17 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@197 $generated@@199) $generated@@51)))))))))))
(let (($generated@@202  (=> (and ($generated@@98 $generated@@197) ($generated@@200 $generated@@197)) (=> (and (and (and (or (not (= $generated@@199 $generated@@37)) (not true)) (and ($generated@@34 $generated@@35 $generated@@199 $generated@@45) ($generated@@40 $generated@@35 $generated@@199 $generated@@45 $generated@@197))) (= 1 $generated@@131)) (and ($generated@@132 $generated@@197 $generated@@199) (= (ControlFlow 0 4) 2))) $generated@@201))))
$generated@@202)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
