(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Int)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T T@T) T@T)
(declare-fun $generated@@67 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@95 (Int) Int)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@110 (T@U) Bool)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@112 (T@U) Bool)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@119 (T@U T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@173 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U) Int)
(declare-fun $generated@@213 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated@@2) 0))
(assert (= ($generated@@31 $generated) $generated@@0))
(assert (= ($generated@@32 $generated@@2) $generated@@3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! ($generated@@33 $generated@@16 $generated@@35 $generated@@34 $generated@@36)
 :pattern ( ($generated@@33 $generated@@16 $generated@@35 $generated@@34 $generated@@36))
)))
(assert (forall (($generated@@42 T@U) ) (!  (=> (and (or (not (= $generated@@42 $generated@@38)) (not true)) (= ($generated@@39 $generated@@42) $generated@@40)) ($generated@@41 $generated@@16 ($generated@@20 ($generated@@37 $generated@@42)) $generated))
 :pattern ( ($generated@@37 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ) (!  (=> (and (or (not (= $generated@@44 $generated@@38)) (not true)) (= ($generated@@39 $generated@@44) $generated@@40)) ($generated@@41 $generated@@16 ($generated@@20 ($generated@@43 $generated@@44)) $generated))
 :pattern ( ($generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (!  (=> (and (or (not (= $generated@@46 $generated@@38)) (not true)) (= ($generated@@39 $generated@@46) $generated@@40)) ($generated@@41 $generated@@16 ($generated@@20 ($generated@@45 $generated@@46)) $generated))
 :pattern ( ($generated@@45 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ) (!  (not ($generated@@47 $generated@@48 $generated@@49))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49))
)))
(assert (= ($generated@@14 $generated@@50) 3))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@41 $generated@@50 $generated@@51 $generated@@40)  (or (= $generated@@51 $generated@@38) (= ($generated@@39 $generated@@51) $generated@@40)))
 :pattern ( ($generated@@41 $generated@@50 $generated@@51 $generated@@40))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@33 $generated@@50 $generated@@54 $generated@@52 $generated@@55) ($generated@@33 $generated@@50 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@33 $generated@@50 $generated@@54 $generated@@52 $generated@@55))
 :pattern ( ($generated@@33 $generated@@50 $generated@@54 $generated@@53 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@33 $generated@@50 $generated@@57 $generated@@56 $generated@@58) ($generated@@33 $generated@@50 $generated@@57 $generated@@40 $generated@@58))
 :pattern ( ($generated@@33 $generated@@50 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@33 $generated@@50 $generated@@57 $generated@@40 $generated@@58))
)))
(assert (= ($generated@@30 $generated@@59) 0))
(assert (= ($generated@@60 $generated@@8 $generated@@13) $generated@@59))
(assert ($generated@@61 $generated@@59))
(assert  (and (and (and (and (and (and (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@63 $generated@@70 $generated@@71 ($generated@@67 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@74) $generated@@72)
 :weight 0
)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (or (= $generated@@79 $generated@@80) (= ($generated@@63 $generated@@75 $generated@@76 ($generated@@67 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@77) $generated@@80) ($generated@@63 $generated@@75 $generated@@76 $generated@@78 $generated@@80)))
 :weight 0
))) (= ($generated@@14 $generated@@64) 4)) (= ($generated@@14 $generated@@65) 5)) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (= ($generated@@14 ($generated@@66 $generated@@81 $generated@@82)) 6))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@68 ($generated@@66 $generated@@83 $generated@@84)) $generated@@83)
 :pattern ( ($generated@@66 $generated@@83 $generated@@84))
))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@69 ($generated@@66 $generated@@85 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@66 $generated@@85 $generated@@86))
))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@33 $generated@@50 $generated@@87 $generated@@53 $generated@@88)  (or (= $generated@@87 $generated@@38) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@88 $generated@@87) $generated@@2)))))
 :pattern ( ($generated@@33 $generated@@50 $generated@@87 $generated@@53 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@33 $generated@@50 $generated@@89 $generated@@40 $generated@@90)  (or (= $generated@@89 $generated@@38) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@90 $generated@@89) $generated@@2)))))
 :pattern ( ($generated@@33 $generated@@50 $generated@@89 $generated@@40 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@91 $generated@@92 $generated@@93) (forall (($generated@@94 T@U) ) (!  (=> ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@92 $generated@@94) $generated@@2))) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@93 $generated@@94) $generated@@2))))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@93 $generated@@94) $generated@@2))
)))
 :pattern ( ($generated@@91 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@96 Int) ) (! (= ($generated@@95 $generated@@96) $generated@@96)
 :pattern ( ($generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 $generated@@98) $generated@@98)
 :pattern ( ($generated@@97 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@100 $generated@@102 ($generated@@62 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@62 $generated@@102 $generated@@101))
)))
(assert (= ($generated@@14 $generated@@103) 7))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@41 $generated@@103 $generated@@106 ($generated@@104 $generated@@107)) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@47 $generated@@106 $generated@@108) ($generated@@105 $generated@@108 $generated@@107))
 :pattern ( ($generated@@47 $generated@@106 $generated@@108))
)))
 :pattern ( ($generated@@41 $generated@@103 $generated@@106 ($generated@@104 $generated@@107)))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@41 $generated@@16 $generated@@109 $generated@@34) (<= ($generated@@95 0) ($generated@@21 $generated@@109)))
 :pattern ( ($generated@@41 $generated@@16 $generated@@109 $generated@@34))
)))
(assert ($generated@@61 $generated@@2))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (and (and (and ($generated@@112 $generated@@114) ($generated@@112 $generated@@115)) (and (or (not (= $generated@@116 $generated@@38)) (not true)) ($generated@@41 $generated@@50 $generated@@116 $generated@@56))) (and ($generated@@110 $generated@@114) ($generated@@91 $generated@@114 $generated@@115))) (=> (forall (($generated@@117 T@U) ($generated@@118 T@U) )  (=> (and (or (not (= $generated@@117 $generated@@38)) (not true)) (or (or (= $generated@@117 $generated@@116) ($generated@@47 ($generated@@113 $generated@@116) ($generated@@100 $generated@@50 $generated@@117))) ($generated@@47 ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@114 $generated@@116) $generated@@59)) ($generated@@100 $generated@@50 $generated@@117)))) (= ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@114 $generated@@117) $generated@@118) ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@115 $generated@@117) $generated@@118)))) (= ($generated@@111 $generated@@114 $generated@@116) ($generated@@111 $generated@@115 $generated@@116))))
 :pattern ( ($generated@@110 $generated@@114) ($generated@@91 $generated@@114 $generated@@115) ($generated@@111 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@119 ($generated@@100 $generated@@123 $generated@@120) $generated@@121 $generated@@122) ($generated@@33 $generated@@123 $generated@@120 $generated@@121 $generated@@122))
 :pattern ( ($generated@@119 ($generated@@100 $generated@@123 $generated@@120) $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@91 $generated@@124 $generated@@125) (=> ($generated@@119 $generated@@126 $generated@@127 $generated@@124) ($generated@@119 $generated@@126 $generated@@127 $generated@@125)))
 :pattern ( ($generated@@91 $generated@@124 $generated@@125) ($generated@@119 $generated@@126 $generated@@127 $generated@@124))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@T) ) (!  (=> ($generated@@91 $generated@@128 $generated@@129) (=> ($generated@@33 $generated@@132 $generated@@130 $generated@@131 $generated@@128) ($generated@@33 $generated@@132 $generated@@130 $generated@@131 $generated@@129)))
 :pattern ( ($generated@@91 $generated@@128 $generated@@129) ($generated@@33 $generated@@132 $generated@@130 $generated@@131 $generated@@128))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@105 $generated@@133 $generated@@34) (and (= ($generated@@100 $generated@@16 ($generated@@62 $generated@@16 $generated@@133)) $generated@@133) ($generated@@41 $generated@@16 ($generated@@62 $generated@@16 $generated@@133) $generated@@34)))
 :pattern ( ($generated@@105 $generated@@133 $generated@@34))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@105 $generated@@134 $generated@@53) (and (= ($generated@@100 $generated@@50 ($generated@@62 $generated@@50 $generated@@134)) $generated@@134) ($generated@@41 $generated@@50 ($generated@@62 $generated@@50 $generated@@134) $generated@@53)))
 :pattern ( ($generated@@105 $generated@@134 $generated@@53))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> ($generated@@105 $generated@@135 $generated@@52) (and (= ($generated@@100 $generated@@50 ($generated@@62 $generated@@50 $generated@@135)) $generated@@135) ($generated@@41 $generated@@50 ($generated@@62 $generated@@50 $generated@@135) $generated@@52)))
 :pattern ( ($generated@@105 $generated@@135 $generated@@52))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@105 $generated@@136 $generated@@56) (and (= ($generated@@100 $generated@@50 ($generated@@62 $generated@@50 $generated@@136)) $generated@@136) ($generated@@41 $generated@@50 ($generated@@62 $generated@@50 $generated@@136) $generated@@56)))
 :pattern ( ($generated@@105 $generated@@136 $generated@@56))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@105 $generated@@137 $generated@@40) (and (= ($generated@@100 $generated@@50 ($generated@@62 $generated@@50 $generated@@137)) $generated@@137) ($generated@@41 $generated@@50 ($generated@@62 $generated@@50 $generated@@137) $generated@@40)))
 :pattern ( ($generated@@105 $generated@@137 $generated@@40))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@41 $generated@@50 $generated@@138 $generated@@52)  (and ($generated@@41 $generated@@50 $generated@@138 $generated@@53) (or (not (= $generated@@138 $generated@@38)) (not true))))
 :pattern ( ($generated@@41 $generated@@50 $generated@@138 $generated@@52))
 :pattern ( ($generated@@41 $generated@@50 $generated@@138 $generated@@53))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@41 $generated@@50 $generated@@139 $generated@@56)  (and ($generated@@41 $generated@@50 $generated@@139 $generated@@40) (or (not (= $generated@@139 $generated@@38)) (not true))))
 :pattern ( ($generated@@41 $generated@@50 $generated@@139 $generated@@56))
 :pattern ( ($generated@@41 $generated@@50 $generated@@139 $generated@@40))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and ($generated@@112 $generated@@140) (and (or (not (= $generated@@141 $generated@@38)) (not true)) (= ($generated@@39 $generated@@141) $generated@@40))) ($generated@@41 $generated@@103 ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@140 $generated@@141) $generated@@59)) ($generated@@104 $generated@@53)))
 :pattern ( ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@140 $generated@@141) $generated@@59)))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and ($generated@@112 $generated@@142) (and (or (not (= $generated@@143 $generated@@38)) (not true)) (= ($generated@@39 $generated@@143) $generated@@40))) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@142 $generated@@143) $generated@@2)))) ($generated@@33 $generated@@103 ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@142 $generated@@143) $generated@@59)) ($generated@@104 $generated@@53) $generated@@142))
 :pattern ( ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@142 $generated@@143) $generated@@59)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> ($generated@@144 $generated@@145 $generated@@146) (= $generated@@145 $generated@@146))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (or (not (= $generated@@147 $generated@@149)) (not true)) (=> (and ($generated@@91 $generated@@147 $generated@@148) ($generated@@91 $generated@@148 $generated@@149)) ($generated@@91 $generated@@147 $generated@@149)))
 :pattern ( ($generated@@91 $generated@@147 $generated@@148) ($generated@@91 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (and (= ($generated@@150 ($generated@@60 $generated@@151 $generated@@152)) $generated@@151) (= ($generated@@32 ($generated@@60 $generated@@151 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@60 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@105 $generated@@153 $generated) (and (= ($generated@@100 $generated@@16 ($generated@@62 $generated@@16 $generated@@153)) $generated@@153) ($generated@@41 $generated@@16 ($generated@@62 $generated@@16 $generated@@153) $generated)))
 :pattern ( ($generated@@105 $generated@@153 $generated))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@105 ($generated@@100 $generated@@156 $generated@@154) $generated@@155) ($generated@@41 $generated@@156 $generated@@154 $generated@@155))
 :pattern ( ($generated@@105 ($generated@@100 $generated@@156 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@33 $generated@@103 $generated@@157 ($generated@@104 $generated@@158) $generated@@159) (forall (($generated@@160 T@U) ) (!  (=> ($generated@@47 $generated@@157 $generated@@160) ($generated@@119 $generated@@160 $generated@@158 $generated@@159))
 :pattern ( ($generated@@47 $generated@@157 $generated@@160))
)))
 :pattern ( ($generated@@33 $generated@@103 $generated@@157 ($generated@@104 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! ($generated@@41 $generated@@50 $generated@@161 $generated@@53)
 :pattern ( ($generated@@41 $generated@@50 $generated@@161 $generated@@53))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@162 ($generated@@104 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@104 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@31 ($generated@@104 $generated@@164)) $generated@@1)
 :pattern ( ($generated@@104 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@62 $generated@@166 ($generated@@100 $generated@@166 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@100 $generated@@166 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and ($generated@@112 $generated@@167) (and (or (not (= $generated@@168 $generated@@38)) (not true)) (= ($generated@@39 $generated@@168) $generated@@40))) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@167 $generated@@168) $generated@@2)))) ($generated@@33 $generated@@16 ($generated@@20 ($generated@@37 $generated@@168)) $generated $generated@@167))
 :pattern ( ($generated@@37 $generated@@168) ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@167 $generated@@168) $generated@@2)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and ($generated@@112 $generated@@169) (and (or (not (= $generated@@170 $generated@@38)) (not true)) (= ($generated@@39 $generated@@170) $generated@@40))) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@169 $generated@@170) $generated@@2)))) ($generated@@33 $generated@@16 ($generated@@20 ($generated@@43 $generated@@170)) $generated $generated@@169))
 :pattern ( ($generated@@43 $generated@@170) ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@169 $generated@@170) $generated@@2)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and ($generated@@112 $generated@@171) (and (or (not (= $generated@@172 $generated@@38)) (not true)) (= ($generated@@39 $generated@@172) $generated@@40))) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@171 $generated@@172) $generated@@2)))) ($generated@@33 $generated@@16 ($generated@@20 ($generated@@45 $generated@@172)) $generated $generated@@171))
 :pattern ( ($generated@@45 $generated@@172) ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@171 $generated@@172) $generated@@2)))
)))
(assert  (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@173 $generated@@176 $generated@@177 $generated@@178 ($generated@@175 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@181 $generated@@182) $generated@@179)
 :weight 0
)) (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@173 $generated@@183 $generated@@184 $generated@@185 ($generated@@175 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@173 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@173 $generated@@192 $generated@@193 $generated@@194 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@173 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 Bool) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@19 ($generated@@173 $generated@@50 $generated@@64 $generated@@15 ($generated@@174 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@205 $generated@@206))  (=> (and (or (not (= $generated@@205 $generated@@201)) (not true)) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@202 $generated@@205) $generated@@203)))) $generated@@204))
 :pattern ( ($generated@@173 $generated@@50 $generated@@64 $generated@@15 ($generated@@174 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (!  (=> (and (or (not (= $generated@@208 $generated@@38)) (not true)) (= ($generated@@39 $generated@@208) $generated@@40)) ($generated@@41 $generated@@16 ($generated@@20 ($generated@@207 $generated@@208)) $generated@@34))
 :pattern ( ($generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@105 $generated@@209 ($generated@@104 $generated@@210)) (and (= ($generated@@100 $generated@@103 ($generated@@62 $generated@@103 $generated@@209)) $generated@@209) ($generated@@41 $generated@@103 ($generated@@62 $generated@@103 $generated@@209) ($generated@@104 $generated@@210))))
 :pattern ( ($generated@@105 $generated@@209 ($generated@@104 $generated@@210)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (and ($generated@@112 $generated@@211) (and (or (not (= $generated@@212 $generated@@38)) (not true)) (= ($generated@@39 $generated@@212) $generated@@40))) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@211 $generated@@212) $generated@@2)))) ($generated@@33 $generated@@16 ($generated@@20 ($generated@@207 $generated@@212)) $generated@@34 $generated@@211))
 :pattern ( ($generated@@207 $generated@@212) ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@211 $generated@@212) $generated@@2)))
)))
(assert (= ($generated@@31 $generated@@34) $generated@@4))
(assert (= ($generated@@213 $generated@@34) $generated@@10))
(assert (= ($generated@@31 $generated@@53) $generated@@5))
(assert (= ($generated@@213 $generated@@53) $generated@@11))
(assert (= ($generated@@31 $generated@@52) $generated@@6))
(assert (= ($generated@@213 $generated@@52) $generated@@11))
(assert (= ($generated@@31 $generated@@56) $generated@@7))
(assert (= ($generated@@213 $generated@@56) $generated@@12))
(assert (= ($generated@@31 $generated@@40) $generated@@9))
(assert (= ($generated@@213 $generated@@40) $generated@@12))
(assert (forall (($generated@@214 T@U) ) (!  (=> (and (or (not (= $generated@@214 $generated@@38)) (not true)) (= ($generated@@39 $generated@@214) $generated@@40)) ($generated@@41 $generated@@103 ($generated@@113 $generated@@214) ($generated@@104 $generated@@53)))
 :pattern ( ($generated@@113 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (!  (=> (and (or (not (= $generated@@216 $generated@@38)) (not true)) (= ($generated@@39 $generated@@216) $generated@@40)) ($generated@@41 $generated@@103 ($generated@@215 $generated@@216) ($generated@@104 $generated@@53)))
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= ($generated@@144 $generated@@217 $generated@@218) (forall (($generated@@219 T@U) ) (! (= ($generated@@47 $generated@@217 $generated@@219) ($generated@@47 $generated@@218 $generated@@219))
 :pattern ( ($generated@@47 $generated@@217 $generated@@219))
 :pattern ( ($generated@@47 $generated@@218 $generated@@219))
)))
 :pattern ( ($generated@@144 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and ($generated@@112 $generated@@220) (and (or (not (= $generated@@221 $generated@@38)) (not true)) (= ($generated@@39 $generated@@221) $generated@@40))) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@220 $generated@@221) $generated@@2)))) ($generated@@33 $generated@@103 ($generated@@113 $generated@@221) ($generated@@104 $generated@@53) $generated@@220))
 :pattern ( ($generated@@113 $generated@@221) ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@220 $generated@@221) $generated@@2)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and ($generated@@112 $generated@@222) (and (or (not (= $generated@@223 $generated@@38)) (not true)) (= ($generated@@39 $generated@@223) $generated@@40))) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@222 $generated@@223) $generated@@2)))) ($generated@@33 $generated@@103 ($generated@@215 $generated@@223) ($generated@@104 $generated@@53) $generated@@222))
 :pattern ( ($generated@@215 $generated@@223) ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@50 ($generated@@66 $generated@@64 $generated@@65) $generated@@222 $generated@@223) $generated@@2)))
)))
(assert (forall (($generated@@224 Int) ) (! (= ($generated@@100 $generated@@16 ($generated@@20 ($generated@@95 $generated@@224))) ($generated@@97 $generated@@65 ($generated@@100 $generated@@16 ($generated@@20 $generated@@224))))
 :pattern ( ($generated@@100 $generated@@16 ($generated@@20 ($generated@@95 $generated@@224))))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@T) ) (! (= ($generated@@100 $generated@@226 ($generated@@97 $generated@@226 $generated@@225)) ($generated@@97 $generated@@65 ($generated@@100 $generated@@226 $generated@@225)))
 :pattern ( ($generated@@100 $generated@@226 ($generated@@97 $generated@@226 $generated@@225)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! ($generated@@33 $generated@@16 $generated@@228 $generated $generated@@227)
 :pattern ( ($generated@@33 $generated@@16 $generated@@228 $generated $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! ($generated@@41 $generated@@16 $generated@@229 $generated)
 :pattern ( ($generated@@41 $generated@@16 $generated@@229 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () Int)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@235  (=> (and (= $generated@@230 ($generated@@174 $generated@@38 $generated@@231 $generated@@2 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@41 $generated@@16 ($generated@@20 $generated@@232) $generated@@34))))
(let (($generated@@236  (=> (and (and (and ($generated@@112 $generated@@231) ($generated@@110 $generated@@231)) (<= ($generated@@95 0) $generated@@233)) (and (= 1 $generated@@234) (= (ControlFlow 0 3) 2))) $generated@@235)))
$generated@@236)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
