(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@T T@T) T@T)
(declare-fun $generated@@44 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@71 (Int) Int)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@T T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) Bool)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@121 (T@U) Bool)
(declare-fun $generated@@128 () Int)
(declare-fun $generated@@129 (T@U T@U T@U T@U T@U) Int)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@131 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Int)
(declare-fun $generated@@184 (T@U) Int)
(declare-fun $generated@@189 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@24) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@27 $generated@@31) (= ($generated@@23 $generated@@24 ($generated@@25 $generated@@29 $generated@@30) ($generated@@26 $generated@@28) $generated@@31)  (and ($generated@@23 $generated@@24 $generated@@29 ($generated@@26 $generated@@28) $generated@@31) ($generated@@23 $generated@@24 $generated@@30 ($generated@@26 $generated@@28) $generated@@31))))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@25 $generated@@29 $generated@@30) ($generated@@26 $generated@@28) $generated@@31))
)))
(assert (= ($generated@@7 $generated@@32) 4))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@23 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37) ($generated@@23 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
 :pattern ( ($generated@@23 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37))
 :pattern ( ($generated@@23 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@40 $generated@@47 $generated@@48 ($generated@@44 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@51) $generated@@49)
 :weight 0
)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (or (= $generated@@56 $generated@@57) (= ($generated@@40 $generated@@52 $generated@@53 ($generated@@44 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@57) ($generated@@40 $generated@@52 $generated@@53 $generated@@55 $generated@@57)))
 :weight 0
))) (= ($generated@@7 $generated@@41) 5)) (= ($generated@@7 $generated@@42) 6)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (= ($generated@@7 ($generated@@43 $generated@@58 $generated@@59)) 7))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@45 ($generated@@43 $generated@@60 $generated@@61)) $generated@@60)
 :pattern ( ($generated@@43 $generated@@60 $generated@@61))
))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@46 ($generated@@43 $generated@@62 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@43 $generated@@62 $generated@@63))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@23 $generated@@32 $generated@@65 ($generated@@34 $generated@@64) $generated@@66)  (or (= $generated@@65 $generated@@38) ($generated@@12 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@66 $generated@@65) $generated)))))
 :pattern ( ($generated@@23 $generated@@32 $generated@@65 ($generated@@34 $generated@@64) $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@67 $generated@@68 $generated@@69) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@12 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@68 $generated@@70) $generated))) ($generated@@12 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@69 $generated@@70) $generated))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@69 $generated@@70) $generated))
)))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@71 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@76 $generated@@78) (= ($generated@@77 $generated@@78) $generated@@0))
 :pattern ( ($generated@@76 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@79 $generated@@80) (= ($generated@@77 $generated@@80) $generated@@2))
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@39 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@39 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@79 $generated@@84) (exists (($generated@@85 T@U) ($generated@@86 T@U) ) (= $generated@@84 ($generated@@25 $generated@@85 $generated@@86))))
 :pattern ( ($generated@@79 $generated@@84))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@87 $generated@@24 ($generated@@25 $generated@@89 $generated@@90) ($generated@@26 $generated@@88))  (and ($generated@@87 $generated@@24 $generated@@89 ($generated@@26 $generated@@88)) ($generated@@87 $generated@@24 $generated@@90 ($generated@@26 $generated@@88))))
 :pattern ( ($generated@@87 $generated@@24 ($generated@@25 $generated@@89 $generated@@90) ($generated@@26 $generated@@88)))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@76 $generated@@92) (exists (($generated@@93 T@U) ) (= $generated@@92 ($generated@@91 $generated@@93))))
 :pattern ( ($generated@@76 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@87 $generated@@32 $generated@@95 ($generated@@33 $generated@@94))  (and ($generated@@87 $generated@@32 $generated@@95 ($generated@@34 $generated@@94)) (or (not (= $generated@@95 $generated@@38)) (not true))))
 :pattern ( ($generated@@87 $generated@@32 $generated@@95 ($generated@@33 $generated@@94)))
 :pattern ( ($generated@@87 $generated@@32 $generated@@95 ($generated@@34 $generated@@94)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@96 ($generated@@81 $generated@@100 $generated@@97) $generated@@98 $generated@@99) ($generated@@23 $generated@@100 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@96 ($generated@@81 $generated@@100 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@67 $generated@@101 $generated@@102) (=> ($generated@@96 $generated@@103 $generated@@104 $generated@@101) ($generated@@96 $generated@@103 $generated@@104 $generated@@102)))
 :pattern ( ($generated@@67 $generated@@101 $generated@@102) ($generated@@96 $generated@@103 $generated@@104 $generated@@101))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (!  (=> ($generated@@67 $generated@@105 $generated@@106) (=> ($generated@@23 $generated@@109 $generated@@107 $generated@@108 $generated@@105) ($generated@@23 $generated@@109 $generated@@107 $generated@@108 $generated@@106)))
 :pattern ( ($generated@@67 $generated@@105 $generated@@106) ($generated@@23 $generated@@109 $generated@@107 $generated@@108 $generated@@105))
)))
(assert (forall (($generated@@112 T@U) ) (!  (and (= ($generated@@110 ($generated@@26 $generated@@112)) $generated@@1) (= ($generated@@111 ($generated@@26 $generated@@112)) $generated@@5))
 :pattern ( ($generated@@26 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (!  (and (= ($generated@@110 ($generated@@34 $generated@@113)) $generated@@3) (= ($generated@@111 ($generated@@34 $generated@@113)) $generated@@6))
 :pattern ( ($generated@@34 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (!  (and (= ($generated@@110 ($generated@@33 $generated@@114)) $generated@@4) (= ($generated@@111 ($generated@@33 $generated@@114)) $generated@@6))
 :pattern ( ($generated@@33 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@87 $generated@@32 $generated@@117 ($generated@@34 $generated@@116))  (or (= $generated@@117 $generated@@38) (= ($generated@@115 $generated@@117) ($generated@@34 $generated@@116))))
 :pattern ( ($generated@@87 $generated@@32 $generated@@117 ($generated@@34 $generated@@116)))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@27 $generated@@120) (= ($generated@@23 $generated@@24 ($generated@@91 $generated@@119) ($generated@@26 $generated@@118) $generated@@120) ($generated@@96 $generated@@119 $generated@@118 $generated@@120)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@91 $generated@@119) ($generated@@26 $generated@@118) $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@121 $generated@@122) (or ($generated@@76 $generated@@122) ($generated@@79 $generated@@122)))
 :pattern ( ($generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> ($generated@@87 $generated@@24 $generated@@124 ($generated@@26 $generated@@123)) (or ($generated@@76 $generated@@124) ($generated@@79 $generated@@124)))
 :pattern ( ($generated@@79 $generated@@124) ($generated@@87 $generated@@24 $generated@@124 ($generated@@26 $generated@@123)))
 :pattern ( ($generated@@76 $generated@@124) ($generated@@87 $generated@@24 $generated@@124 ($generated@@26 $generated@@123)))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (or (not (= $generated@@125 $generated@@127)) (not true)) (=> (and ($generated@@67 $generated@@125 $generated@@126) ($generated@@67 $generated@@126 $generated@@127)) ($generated@@67 $generated@@125 $generated@@127)))
 :pattern ( ($generated@@67 $generated@@125 $generated@@126) ($generated@@67 $generated@@126 $generated@@127))
)))
(assert  (=> (<= 1 $generated@@128) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (or ($generated@@131 $generated@@134 $generated@@135 $generated@@137 ($generated@@73 $generated@@24 $generated@@138)) (and (< 1 $generated@@128) (and (and (or (not (= $generated@@137 $generated@@38)) (not true)) ($generated@@87 $generated@@32 $generated@@137 ($generated@@33 $generated@@134))) ($generated@@87 $generated@@24 $generated@@138 ($generated@@26 $generated@@135))))) (and (=> (not ($generated@@12 ($generated@@73 $generated@@8 ($generated@@11 ($generated@@76 ($generated@@73 $generated@@24 $generated@@138)))))) (let (($generated@@139 ($generated@@73 $generated@@24 ($generated@@132 ($generated@@73 $generated@@24 $generated@@138)))))
(let (($generated@@140 ($generated@@73 $generated@@24 ($generated@@133 ($generated@@73 $generated@@24 $generated@@138)))))
 (and ($generated@@131 $generated@@134 $generated@@135 $generated@@137 $generated@@140) ($generated@@131 $generated@@134 $generated@@135 $generated@@137 $generated@@139))))) (= ($generated@@129 $generated@@134 $generated@@135 ($generated@@130 $generated@@136) $generated@@137 ($generated@@73 $generated@@24 $generated@@138)) (ite ($generated@@76 ($generated@@73 $generated@@24 $generated@@138)) ($generated@@71 1) (let (($generated@@141 ($generated@@73 $generated@@24 ($generated@@132 ($generated@@73 $generated@@24 $generated@@138)))))
(let (($generated@@142 ($generated@@73 $generated@@24 ($generated@@133 ($generated@@73 $generated@@24 $generated@@138)))))
(+ ($generated@@129 $generated@@134 $generated@@135 ($generated@@130 $generated@@136) $generated@@137 $generated@@142) ($generated@@129 $generated@@134 $generated@@135 ($generated@@130 $generated@@136) $generated@@137 $generated@@141))))))))
 :weight 3
 :pattern ( ($generated@@129 $generated@@134 $generated@@135 ($generated@@130 $generated@@136) $generated@@137 ($generated@@73 $generated@@24 $generated@@138)))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@143 ($generated@@81 $generated@@146 $generated@@144) $generated@@145) ($generated@@87 $generated@@146 $generated@@144 $generated@@145))
 :pattern ( ($generated@@143 ($generated@@81 $generated@@146 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> ($generated@@147 $generated@@148) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> ($generated@@143 $generated@@150 $generated@@148) ($generated@@96 $generated@@150 $generated@@148 $generated@@149))
 :pattern ( ($generated@@96 $generated@@150 $generated@@148 $generated@@149))
)))
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@77 ($generated@@25 $generated@@151 $generated@@152)) $generated@@2)
 :pattern ( ($generated@@25 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@133 ($generated@@25 $generated@@153 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@25 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@132 ($generated@@25 $generated@@155 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@25 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@77 ($generated@@91 $generated@@157)) $generated@@0)
 :pattern ( ($generated@@91 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@26 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@26 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@160 ($generated@@91 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@91 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@162 ($generated@@34 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@34 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@164 ($generated@@33 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@33 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@39 $generated@@167 ($generated@@81 $generated@@167 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@81 $generated@@167 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@87 $generated@@24 ($generated@@91 $generated@@169) ($generated@@26 $generated@@168)) ($generated@@143 $generated@@169 $generated@@168))
 :pattern ( ($generated@@87 $generated@@24 ($generated@@91 $generated@@169) ($generated@@26 $generated@@168)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (< ($generated@@170 $generated@@171) ($generated@@170 ($generated@@25 $generated@@171 $generated@@172)))
 :pattern ( ($generated@@25 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (< ($generated@@170 $generated@@174) ($generated@@170 ($generated@@25 $generated@@173 $generated@@174)))
 :pattern ( ($generated@@25 $generated@@173 $generated@@174))
)))
(assert  (=> (<= 1 $generated@@128) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (or ($generated@@131 $generated@@175 $generated@@176 $generated@@178 $generated@@179) (and (< 1 $generated@@128) (and (and (or (not (= $generated@@178 $generated@@38)) (not true)) ($generated@@87 $generated@@32 $generated@@178 ($generated@@33 $generated@@175))) ($generated@@87 $generated@@24 $generated@@179 ($generated@@26 $generated@@176))))) (and (=> (not ($generated@@76 $generated@@179)) (let (($generated@@180 ($generated@@132 $generated@@179)))
(let (($generated@@181 ($generated@@133 $generated@@179)))
 (and ($generated@@131 $generated@@175 $generated@@176 $generated@@178 $generated@@181) ($generated@@131 $generated@@175 $generated@@176 $generated@@178 $generated@@180))))) (= ($generated@@129 $generated@@175 $generated@@176 ($generated@@130 $generated@@177) $generated@@178 $generated@@179) (ite ($generated@@76 $generated@@179) ($generated@@71 1) (let (($generated@@182 ($generated@@132 $generated@@179)))
(let (($generated@@183 ($generated@@133 $generated@@179)))
(+ ($generated@@129 $generated@@175 $generated@@176 $generated@@177 $generated@@178 $generated@@183) ($generated@@129 $generated@@175 $generated@@176 $generated@@177 $generated@@178 $generated@@182))))))))
 :pattern ( ($generated@@129 $generated@@175 $generated@@176 ($generated@@130 $generated@@177) $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@185 T@U) ) (! (< ($generated@@184 $generated@@185) ($generated@@170 ($generated@@91 $generated@@185)))
 :pattern ( ($generated@@91 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@27 $generated@@188) (and ($generated@@76 $generated@@186) ($generated@@23 $generated@@24 $generated@@186 ($generated@@26 $generated@@187) $generated@@188))) ($generated@@96 ($generated@@160 $generated@@186) $generated@@187 $generated@@188))
 :pattern ( ($generated@@96 ($generated@@160 $generated@@186) $generated@@187 $generated@@188))
)))
(assert  (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@189 $generated@@192 $generated@@193 $generated@@194 ($generated@@191 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@197 $generated@@198) $generated@@195)
 :weight 0
)) (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@189 $generated@@199 $generated@@200 $generated@@201 ($generated@@191 $generated@@199 $generated@@200 $generated@@201 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@189 $generated@@199 $generated@@200 $generated@@201 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)) (forall (($generated@@208 T@T) ($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@189 $generated@@208 $generated@@209 $generated@@210 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@189 $generated@@208 $generated@@209 $generated@@210 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@12 ($generated@@189 $generated@@32 $generated@@41 $generated@@8 ($generated@@190 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (or (not (= $generated@@221 $generated@@217)) (not true)) ($generated@@12 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@218 $generated@@221) $generated@@219)))) $generated@@220))
 :pattern ( ($generated@@189 $generated@@32 $generated@@41 $generated@@8 ($generated@@190 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@224 Int) ($generated@@225 Int) ) (! (= ($generated@@223 $generated@@224 $generated@@225) (mod $generated@@224 $generated@@225))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ) (! (= ($generated@@184 ($generated@@81 $generated@@24 $generated@@226)) ($generated@@170 $generated@@226))
 :pattern ( ($generated@@184 ($generated@@81 $generated@@24 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> ($generated@@143 $generated@@228 ($generated@@26 $generated@@227)) (and (= ($generated@@81 $generated@@24 ($generated@@39 $generated@@24 $generated@@228)) $generated@@228) ($generated@@87 $generated@@24 ($generated@@39 $generated@@24 $generated@@228) ($generated@@26 $generated@@227))))
 :pattern ( ($generated@@143 $generated@@228 ($generated@@26 $generated@@227)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> ($generated@@143 $generated@@230 ($generated@@34 $generated@@229)) (and (= ($generated@@81 $generated@@32 ($generated@@39 $generated@@32 $generated@@230)) $generated@@230) ($generated@@87 $generated@@32 ($generated@@39 $generated@@32 $generated@@230) ($generated@@34 $generated@@229))))
 :pattern ( ($generated@@143 $generated@@230 ($generated@@34 $generated@@229)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> ($generated@@143 $generated@@232 ($generated@@33 $generated@@231)) (and (= ($generated@@81 $generated@@32 ($generated@@39 $generated@@32 $generated@@232)) $generated@@232) ($generated@@87 $generated@@32 ($generated@@39 $generated@@32 $generated@@232) ($generated@@33 $generated@@231))))
 :pattern ( ($generated@@143 $generated@@232 ($generated@@33 $generated@@231)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and ($generated@@27 $generated@@235) (and ($generated@@79 $generated@@233) ($generated@@23 $generated@@24 $generated@@233 ($generated@@26 $generated@@234) $generated@@235))) ($generated@@23 $generated@@24 ($generated@@133 $generated@@233) ($generated@@26 $generated@@234) $generated@@235))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@133 $generated@@233) ($generated@@26 $generated@@234) $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and ($generated@@27 $generated@@238) (and ($generated@@79 $generated@@236) ($generated@@23 $generated@@24 $generated@@236 ($generated@@26 $generated@@237) $generated@@238))) ($generated@@23 $generated@@24 ($generated@@132 $generated@@236) ($generated@@26 $generated@@237) $generated@@238))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@132 $generated@@236) ($generated@@26 $generated@@237) $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= ($generated@@25 ($generated@@73 $generated@@24 $generated@@239) ($generated@@73 $generated@@24 $generated@@240)) ($generated@@73 $generated@@24 ($generated@@25 $generated@@239 $generated@@240)))
 :pattern ( ($generated@@25 ($generated@@73 $generated@@24 $generated@@239) ($generated@@73 $generated@@24 $generated@@240)))
)))
(assert  (=> (<= 1 $generated@@128) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (or ($generated@@131 $generated@@241 $generated@@242 ($generated@@73 $generated@@32 $generated@@244) ($generated@@73 $generated@@24 $generated@@245)) (and (< 1 $generated@@128) (and (and (or (not (= $generated@@244 $generated@@38)) (not true)) ($generated@@87 $generated@@32 $generated@@244 ($generated@@33 $generated@@241))) ($generated@@87 $generated@@24 $generated@@245 ($generated@@26 $generated@@242))))) (and (=> (not ($generated@@12 ($generated@@73 $generated@@8 ($generated@@11 ($generated@@76 ($generated@@73 $generated@@24 $generated@@245)))))) (let (($generated@@246 ($generated@@73 $generated@@24 ($generated@@132 ($generated@@73 $generated@@24 $generated@@245)))))
(let (($generated@@247 ($generated@@73 $generated@@24 ($generated@@133 ($generated@@73 $generated@@24 $generated@@245)))))
 (and ($generated@@131 $generated@@241 $generated@@242 ($generated@@73 $generated@@32 $generated@@244) $generated@@247) ($generated@@131 $generated@@241 $generated@@242 ($generated@@73 $generated@@32 $generated@@244) $generated@@246))))) (= ($generated@@129 $generated@@241 $generated@@242 ($generated@@130 $generated@@243) ($generated@@73 $generated@@32 $generated@@244) ($generated@@73 $generated@@24 $generated@@245)) (ite ($generated@@76 ($generated@@73 $generated@@24 $generated@@245)) ($generated@@71 1) (let (($generated@@248 ($generated@@73 $generated@@24 ($generated@@132 ($generated@@73 $generated@@24 $generated@@245)))))
(let (($generated@@249 ($generated@@73 $generated@@24 ($generated@@133 ($generated@@73 $generated@@24 $generated@@245)))))
($generated@@71 (+ ($generated@@129 $generated@@241 $generated@@242 ($generated@@130 $generated@@243) ($generated@@73 $generated@@32 $generated@@244) $generated@@249) ($generated@@129 $generated@@241 $generated@@242 ($generated@@130 $generated@@243) ($generated@@73 $generated@@32 $generated@@244) $generated@@248)))))))))
 :weight 3
 :pattern ( ($generated@@129 $generated@@241 $generated@@242 ($generated@@130 $generated@@243) ($generated@@73 $generated@@32 $generated@@244) ($generated@@73 $generated@@24 $generated@@245)))
))))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@81 $generated@@9 ($generated@@13 ($generated@@71 $generated@@250))) ($generated@@73 $generated@@42 ($generated@@81 $generated@@9 ($generated@@13 $generated@@250))))
 :pattern ( ($generated@@81 $generated@@9 ($generated@@13 ($generated@@71 $generated@@250))))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@91 ($generated@@73 $generated@@42 $generated@@251)) ($generated@@73 $generated@@24 ($generated@@91 $generated@@251)))
 :pattern ( ($generated@@91 ($generated@@73 $generated@@42 $generated@@251)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@T) ) (! (= ($generated@@81 $generated@@253 ($generated@@73 $generated@@253 $generated@@252)) ($generated@@73 $generated@@42 ($generated@@81 $generated@@253 $generated@@252)))
 :pattern ( ($generated@@81 $generated@@253 ($generated@@73 $generated@@253 $generated@@252)))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (! (= ($generated@@129 $generated@@254 $generated@@255 ($generated@@130 $generated@@256) $generated@@257 $generated@@258) ($generated@@129 $generated@@254 $generated@@255 $generated@@256 $generated@@257 $generated@@258))
 :pattern ( ($generated@@129 $generated@@254 $generated@@255 ($generated@@130 $generated@@256) $generated@@257 $generated@@258))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@266  (=> (= $generated@@259 ($generated@@190 $generated@@38 $generated@@260 $generated false)) (=> (and (and (and ($generated@@27 $generated@@261) ($generated@@262 $generated@@261)) (and (forall (($generated@@267 T@U) ) (!  (=> (and (or (not (= $generated@@267 $generated@@38)) (not true)) ($generated@@12 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@260 $generated@@267) $generated)))) (= ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@261 $generated@@267) ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@260 $generated@@267)))
 :pattern ( ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@261 $generated@@267))
)) ($generated@@67 $generated@@260 $generated@@261))) (and (and ($generated@@96 ($generated@@81 $generated@@32 $generated@@263) ($generated@@34 $generated@@264) $generated@@261) ($generated@@23 $generated@@24 $generated@@265 ($generated@@26 $generated@@264) $generated@@261)) (and ($generated@@131 $generated@@264 $generated@@264 $generated@@263 $generated@@265) (= (ControlFlow 0 2) (- 0 1))))) (or (not (= ($generated@@71 2) 0)) (not true))))))
(let (($generated@@268  (=> (and (and (and (and ($generated@@27 $generated@@260) ($generated@@262 $generated@@260)) ($generated@@147 $generated@@264)) (and (or (not (= $generated@@263 $generated@@38)) (not true)) (and ($generated@@87 $generated@@32 $generated@@263 ($generated@@33 $generated@@264)) ($generated@@23 $generated@@32 $generated@@263 ($generated@@33 $generated@@264) $generated@@260)))) (and (and (and ($generated@@87 $generated@@24 $generated@@265 ($generated@@26 $generated@@264)) ($generated@@23 $generated@@24 $generated@@265 ($generated@@26 $generated@@264) $generated@@260)) ($generated@@121 $generated@@265)) (and (= 2 $generated@@128) (= (ControlFlow 0 3) 2)))) $generated@@266)))
$generated@@268)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
