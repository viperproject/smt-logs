(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@T T@T) T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@39 (T@T) T@T)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@U T@U T@U) Bool)
(declare-fun $generated@@66 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U) T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@T T@U T@U) Bool)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert  (and (and (and (and (and (and (and (forall (($generated@@41 T@T) ($generated@@42 T@T) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@27 $generated@@41 $generated@@42 ($generated@@38 $generated@@41 $generated@@42 $generated@@44 $generated@@45 $generated@@43) $generated@@45) $generated@@43)
 :weight 0
)) (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (or (= $generated@@50 $generated@@51) (= ($generated@@27 $generated@@46 $generated@@47 ($generated@@38 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@51) ($generated@@27 $generated@@46 $generated@@47 $generated@@49 $generated@@51)))
 :weight 0
))) (= ($generated@@8 $generated@@28) 3)) (= ($generated@@8 $generated@@29) 4)) (= ($generated@@8 $generated@@30) 5)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ) (= ($generated@@8 ($generated@@31 $generated@@52 $generated@@53)) 6))) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (! (= ($generated@@39 ($generated@@31 $generated@@54 $generated@@55)) $generated@@54)
 :pattern ( ($generated@@31 $generated@@54 $generated@@55))
))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@40 ($generated@@31 $generated@@56 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@31 $generated@@56 $generated@@57))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (and ($generated@@34 $generated@@59) (and (or (not (= $generated@@60 $generated@@35)) (not true)) (= ($generated@@36 $generated@@60) ($generated@@33 $generated@@58)))) ($generated@@37 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@59 $generated@@60) $generated@@32) $generated@@58))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@59 $generated@@60) $generated@@32) ($generated@@33 $generated@@58))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (and (and ($generated@@34 $generated@@64) (and (or (not (= $generated@@65 $generated@@35)) (not true)) (= ($generated@@36 $generated@@65) ($generated@@33 $generated@@63)))) ($generated@@13 ($generated@@61 $generated@@9 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@64 $generated@@65) $generated@@1)))) ($generated@@62 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@64 $generated@@65) $generated@@32) $generated@@63 $generated@@64))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@64 $generated@@65) $generated@@32) ($generated@@33 $generated@@63))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@66 $generated@@30 $generated@@69 ($generated@@67 $generated@@68) $generated@@70) ($generated@@66 $generated@@30 $generated@@69 ($generated@@33 $generated@@68) $generated@@70))
 :pattern ( ($generated@@66 $generated@@30 $generated@@69 ($generated@@67 $generated@@68) $generated@@70))
 :pattern ( ($generated@@66 $generated@@30 $generated@@69 ($generated@@33 $generated@@68) $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@66 $generated@@30 $generated@@72 ($generated@@33 $generated@@71) $generated@@73)  (or (= $generated@@72 $generated@@35) ($generated@@13 ($generated@@61 $generated@@9 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@73 $generated@@72) $generated@@1)))))
 :pattern ( ($generated@@66 $generated@@30 $generated@@72 ($generated@@33 $generated@@71) $generated@@73))
)))
(assert (= ($generated@@24 $generated@@32) 0))
(assert (= ($generated@@74 $generated@@4 $generated@@7) $generated@@32))
(assert  (not ($generated@@75 $generated@@32)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@76 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@13 ($generated@@61 $generated@@9 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@77 $generated@@79) $generated@@1))) ($generated@@13 ($generated@@61 $generated@@9 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@78 $generated@@79) $generated@@1))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@78 $generated@@79) $generated@@1))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@80 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@61 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@61 $generated@@87 $generated@@86))
)))
(assert ($generated@@75 $generated@@1))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 $generated@@30 $generated@@90 ($generated@@67 $generated@@89))  (and ($generated@@88 $generated@@30 $generated@@90 ($generated@@33 $generated@@89)) (or (not (= $generated@@90 $generated@@35)) (not true))))
 :pattern ( ($generated@@88 $generated@@30 $generated@@90 ($generated@@67 $generated@@89)))
 :pattern ( ($generated@@88 $generated@@30 $generated@@90 ($generated@@33 $generated@@89)))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@62 ($generated@@85 $generated@@94 $generated@@91) $generated@@92 $generated@@93) ($generated@@66 $generated@@94 $generated@@91 $generated@@92 $generated@@93))
 :pattern ( ($generated@@62 ($generated@@85 $generated@@94 $generated@@91) $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@76 $generated@@95 $generated@@96) (=> ($generated@@62 $generated@@97 $generated@@98 $generated@@95) ($generated@@62 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@76 $generated@@95 $generated@@96) ($generated@@62 $generated@@97 $generated@@98 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (!  (=> ($generated@@76 $generated@@99 $generated@@100) (=> ($generated@@66 $generated@@103 $generated@@101 $generated@@102 $generated@@99) ($generated@@66 $generated@@103 $generated@@101 $generated@@102 $generated@@100)))
 :pattern ( ($generated@@76 $generated@@99 $generated@@100) ($generated@@66 $generated@@103 $generated@@101 $generated@@102 $generated@@99))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@25 ($generated@@67 $generated@@105)) $generated@@3) (= ($generated@@104 ($generated@@67 $generated@@105)) $generated@@6))
 :pattern ( ($generated@@67 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (!  (and (= ($generated@@25 ($generated@@33 $generated@@106)) $generated@@5) (= ($generated@@104 ($generated@@33 $generated@@106)) $generated@@6))
 :pattern ( ($generated@@33 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@88 $generated@@30 $generated@@108 ($generated@@33 $generated@@107))  (or (= $generated@@108 $generated@@35) (= ($generated@@36 $generated@@108) ($generated@@33 $generated@@107))))
 :pattern ( ($generated@@88 $generated@@30 $generated@@108 ($generated@@33 $generated@@107)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or (not (= $generated@@109 $generated@@111)) (not true)) (=> (and ($generated@@76 $generated@@109 $generated@@110) ($generated@@76 $generated@@110 $generated@@111)) ($generated@@76 $generated@@109 $generated@@111)))
 :pattern ( ($generated@@76 $generated@@109 $generated@@110) ($generated@@76 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (and (= ($generated@@112 ($generated@@74 $generated@@113 $generated@@114)) $generated@@113) (= ($generated@@26 ($generated@@74 $generated@@113 $generated@@114)) $generated@@114))
 :pattern ( ($generated@@74 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@37 $generated@@115 $generated) (and (= ($generated@@85 $generated@@10 ($generated@@61 $generated@@10 $generated@@115)) $generated@@115) ($generated@@88 $generated@@10 ($generated@@61 $generated@@10 $generated@@115) $generated)))
 :pattern ( ($generated@@37 $generated@@115 $generated))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@37 ($generated@@85 $generated@@118 $generated@@116) $generated@@117) ($generated@@88 $generated@@118 $generated@@116 $generated@@117))
 :pattern ( ($generated@@37 ($generated@@85 $generated@@118 $generated@@116) $generated@@117))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@119 ($generated@@67 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@67 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@121 ($generated@@33 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@33 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@61 $generated@@124 ($generated@@85 $generated@@124 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@85 $generated@@124 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> ($generated@@37 $generated@@126 ($generated@@67 $generated@@125)) (and (= ($generated@@85 $generated@@30 ($generated@@61 $generated@@30 $generated@@126)) $generated@@126) ($generated@@88 $generated@@30 ($generated@@61 $generated@@30 $generated@@126) ($generated@@67 $generated@@125))))
 :pattern ( ($generated@@37 $generated@@126 ($generated@@67 $generated@@125)))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> ($generated@@37 $generated@@128 ($generated@@33 $generated@@127)) (and (= ($generated@@85 $generated@@30 ($generated@@61 $generated@@30 $generated@@128)) $generated@@128) ($generated@@88 $generated@@30 ($generated@@61 $generated@@30 $generated@@128) ($generated@@33 $generated@@127))))
 :pattern ( ($generated@@37 $generated@@128 ($generated@@33 $generated@@127)))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> ($generated@@34 ($generated@@38 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@129 $generated@@130 ($generated@@38 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@129 $generated@@130) $generated@@131 $generated@@132))) ($generated@@76 $generated@@129 ($generated@@38 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@129 $generated@@130 ($generated@@38 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@129 $generated@@130) $generated@@131 $generated@@132))))
 :pattern ( ($generated@@38 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@129 $generated@@130 ($generated@@38 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@129 $generated@@130) $generated@@131 $generated@@132)))
)))
(assert  (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@133 $generated@@136 $generated@@137 $generated@@138 ($generated@@135 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@141 $generated@@142) $generated@@139)
 :weight 0
)) (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@133 $generated@@143 $generated@@144 $generated@@145 ($generated@@135 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@133 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@133 $generated@@152 $generated@@153 $generated@@154 ($generated@@135 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@133 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@13 ($generated@@133 $generated@@30 $generated@@28 $generated@@9 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@161)) (not true)) ($generated@@13 ($generated@@61 $generated@@9 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@162 $generated@@166) $generated@@163)))) (or (= $generated@@166 $generated@@164) (= $generated@@166 $generated@@165))))
 :pattern ( ($generated@@133 $generated@@30 $generated@@28 $generated@@9 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 Int) ) (! (= ($generated@@85 $generated@@10 ($generated@@14 ($generated@@80 $generated@@168))) ($generated@@82 $generated@@29 ($generated@@85 $generated@@10 ($generated@@14 $generated@@168))))
 :pattern ( ($generated@@85 $generated@@10 ($generated@@14 ($generated@@80 $generated@@168))))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@T) ) (! (= ($generated@@85 $generated@@170 ($generated@@82 $generated@@170 $generated@@169)) ($generated@@82 $generated@@29 ($generated@@85 $generated@@170 $generated@@169)))
 :pattern ( ($generated@@85 $generated@@170 ($generated@@82 $generated@@170 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! ($generated@@66 $generated@@10 $generated@@172 $generated $generated@@171)
 :pattern ( ($generated@@66 $generated@@10 $generated@@172 $generated $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! ($generated@@88 $generated@@10 $generated@@173 $generated)
 :pattern ( ($generated@@88 $generated@@10 $generated@@173 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@188  (=> (= $generated@@174 ($generated@@134 $generated@@35 $generated@@175 $generated@@1 $generated@@176 $generated@@177)) (and (=> (= (ControlFlow 0 2) (- 0 11)) (or (not (= $generated@@177 $generated@@35)) (not true))) (=> (or (not (= $generated@@177 $generated@@35)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@13 ($generated@@133 $generated@@30 $generated@@28 $generated@@9 $generated@@174 $generated@@177 $generated@@32))) (=> ($generated@@13 ($generated@@133 $generated@@30 $generated@@28 $generated@@9 $generated@@174 $generated@@177 $generated@@32)) (=> (and (= $generated@@178 ($generated@@38 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@175 $generated@@177 ($generated@@38 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@175 $generated@@177) $generated@@32 $generated@@179))) ($generated@@34 $generated@@178)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (or (not (= $generated@@176 $generated@@35)) (not true))) (=> (or (not (= $generated@@176 $generated@@35)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@13 ($generated@@133 $generated@@30 $generated@@28 $generated@@9 $generated@@174 $generated@@176 $generated@@32))) (=> ($generated@@13 ($generated@@133 $generated@@30 $generated@@28 $generated@@9 $generated@@174 $generated@@176 $generated@@32)) (=> (= $generated@@180 ($generated@@80 15)) (=> (and (= $generated@@181 ($generated@@38 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@178 $generated@@176 ($generated@@38 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@178 $generated@@176) $generated@@32 ($generated@@85 $generated@@10 ($generated@@14 $generated@@180))))) ($generated@@34 $generated@@181)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (not (= $generated@@177 $generated@@35)) (not true))) (=> (or (not (= $generated@@177 $generated@@35)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@13 ($generated@@133 $generated@@30 $generated@@28 $generated@@9 $generated@@174 $generated@@177 $generated@@32))) (=> ($generated@@13 ($generated@@133 $generated@@30 $generated@@28 $generated@@9 $generated@@174 $generated@@177 $generated@@32)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@176 $generated@@35)) (not true))) (=> (or (not (= $generated@@176 $generated@@35)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@13 ($generated@@133 $generated@@30 $generated@@28 $generated@@9 $generated@@174 $generated@@176 $generated@@32))) (=> ($generated@@13 ($generated@@133 $generated@@30 $generated@@28 $generated@@9 $generated@@174 $generated@@176 $generated@@32)) (=> (= $generated@@182 ($generated@@80 15)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (not (= $generated@@176 $generated@@177)) (not true)) (= ($generated@@85 $generated@@10 ($generated@@14 $generated@@182)) $generated@@179))) (=> (or (or (not (= $generated@@176 $generated@@177)) (not true)) (= ($generated@@85 $generated@@10 ($generated@@14 $generated@@182)) $generated@@179)) (=> (= $generated@@183 ($generated@@38 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@181 $generated@@177 ($generated@@38 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@181 $generated@@177) $generated@@32 $generated@@179))) (=> (and (and ($generated@@34 $generated@@183) (= $generated@@184 ($generated@@38 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@183 $generated@@176 ($generated@@38 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@183 $generated@@176) $generated@@32 ($generated@@85 $generated@@10 ($generated@@14 $generated@@182)))))) (and ($generated@@34 $generated@@184) (= (ControlFlow 0 2) (- 0 1)))) (or (not (= $generated@@176 $generated@@35)) (not true)))))))))))))))))))))))))))))
(let (($generated@@189  (=> (and ($generated@@34 $generated@@175) ($generated@@185 $generated@@175)) (=> (and (and (and ($generated@@88 $generated@@30 $generated@@176 ($generated@@67 $generated)) ($generated@@66 $generated@@30 $generated@@176 ($generated@@67 $generated) $generated@@175)) (and ($generated@@88 $generated@@30 $generated@@177 ($generated@@67 $generated@@186)) ($generated@@66 $generated@@30 $generated@@177 ($generated@@67 $generated@@186) $generated@@175))) (and (and ($generated@@37 $generated@@179 $generated@@186) ($generated@@62 $generated@@179 $generated@@186 $generated@@175)) (and (= 1 $generated@@187) (= (ControlFlow 0 12) 2)))) $generated@@188))))
$generated@@189)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
