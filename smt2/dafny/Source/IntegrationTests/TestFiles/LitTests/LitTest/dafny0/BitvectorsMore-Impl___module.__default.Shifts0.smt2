(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () Int)
(declare-fun $generated@@0 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) (_ BitVec 2) Int Int) Bool)
(declare-fun $generated@@1 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) (_ BitVec 2) Int Int) Bool)
(declare-fun $generated@@2 (Int) Int)
(declare-fun $generated@@3 (Int Int) Int)
(declare-fun $generated@@4 (Real) Real)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@U) (_ BitVec 67))
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U) (_ BitVec 32))
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@U) (_ BitVec 7))
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@U) (_ BitVec 2))
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 ((_ BitVec 67)) T@U)
(declare-fun $generated@@50 ((_ BitVec 32)) T@U)
(declare-fun $generated@@51 ((_ BitVec 7)) T@U)
(declare-fun $generated@@52 ((_ BitVec 2)) T@U)
(declare-fun $generated@@74 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@78 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert  (=> (<= 1 $generated) (forall (($generated@@21 Int) ($generated@@22 Int) ($generated@@23 Real) ($generated@@24 Int) ($generated@@25 Real) ($generated@@26 (_ BitVec 67)) ($generated@@27 (_ BitVec 32)) ($generated@@28 (_ BitVec 7)) ($generated@@29 (_ BitVec 2)) ($generated@@30 Int) ($generated@@31 Int) ) (!  (=> (or ($generated@@1 $generated@@21 $generated@@22 $generated@@23 $generated@@24 $generated@@25 $generated@@26 $generated@@27 $generated@@28 $generated@@29 $generated@@30 $generated@@31) (and (< 1 $generated) (and (and (and (and (<= ($generated@@2 0) $generated@@22) (= ($generated@@3 $generated@@24 ($generated@@2 2)) ($generated@@2 0))) (and (<= ($generated@@4 (- 0.0 4.0)) $generated@@25) (< $generated@@25 300.0))) (= 0 $generated@@30)) (and (<= ($generated@@2 0) $generated@@31) (< $generated@@31 80))))) (= ($generated@@0 $generated@@21 $generated@@22 $generated@@23 $generated@@24 $generated@@25 $generated@@26 $generated@@27 $generated@@28 $generated@@29 $generated@@30 $generated@@31)  (and (and (and (and (and (and (and (and (and (and (= $generated@@21 $generated@@21) (= $generated@@22 $generated@@22)) (= $generated@@23 $generated@@23)) (= $generated@@24 $generated@@24)) (= $generated@@25 $generated@@25)) (= $generated@@26 $generated@@26)) (= $generated@@27 $generated@@27)) (= $generated@@28 $generated@@28)) (= $generated@@29 $generated@@29)) (= $generated@@30 $generated@@30)) (= $generated@@31 $generated@@31))))
 :pattern ( ($generated@@0 $generated@@21 $generated@@22 $generated@@23 $generated@@24 $generated@@25 $generated@@26 $generated@@27 $generated@@28 $generated@@29 $generated@@30 $generated@@31))
))))
(assert (forall (($generated@@32 Int) ) (! (= ($generated@@2 $generated@@32) $generated@@32)
 :pattern ( ($generated@@2 $generated@@32))
)))
(assert (forall (($generated@@33 Real) ) (! (= ($generated@@4 $generated@@33) $generated@@33)
 :pattern ( ($generated@@4 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@T) ) (! (= ($generated@@34 $generated@@36 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@36 $generated@@35))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@38 $generated@@40 ($generated@@37 $generated@@40 $generated@@39)) $generated@@39)
 :pattern ( ($generated@@37 $generated@@40 $generated@@39))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@42) 3) (forall (($generated@@53 (_ BitVec 67)) ) (! (= ($generated@@41 ($generated@@49 $generated@@53)) $generated@@53)
 :pattern ( ($generated@@49 $generated@@53))
))) (forall (($generated@@54 T@U) ) (! (= ($generated@@49 ($generated@@41 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@41 $generated@@54))
))) (= ($generated@@5 $generated@@44) 4)) (forall (($generated@@55 (_ BitVec 32)) ) (! (= ($generated@@43 ($generated@@50 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@50 $generated@@55))
))) (forall (($generated@@56 T@U) ) (! (= ($generated@@50 ($generated@@43 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@43 $generated@@56))
))) (= ($generated@@5 $generated@@46) 5)) (forall (($generated@@57 (_ BitVec 7)) ) (! (= ($generated@@45 ($generated@@51 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@51 $generated@@57))
))) (forall (($generated@@58 T@U) ) (! (= ($generated@@51 ($generated@@45 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@45 $generated@@58))
))) (= ($generated@@5 $generated@@48) 6)) (forall (($generated@@59 (_ BitVec 2)) ) (! (= ($generated@@47 ($generated@@52 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@52 $generated@@59))
))) (forall (($generated@@60 T@U) ) (! (= ($generated@@52 ($generated@@47 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@47 $generated@@60))
))))
(assert  (=> (<= 1 $generated) (forall (($generated@@61 Int) ($generated@@62 Int) ($generated@@63 Real) ($generated@@64 Int) ($generated@@65 Real) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 Int) ($generated@@71 Int) ) (!  (=> (or ($generated@@1 ($generated@@2 $generated@@61) ($generated@@2 $generated@@62) ($generated@@4 $generated@@63) ($generated@@2 $generated@@64) ($generated@@4 $generated@@65) ($generated@@41 ($generated@@34 $generated@@42 $generated@@66)) ($generated@@43 ($generated@@34 $generated@@44 $generated@@67)) ($generated@@45 ($generated@@34 $generated@@46 $generated@@68)) ($generated@@47 ($generated@@34 $generated@@48 $generated@@69)) ($generated@@2 $generated@@70) ($generated@@2 $generated@@71)) (and (< 1 $generated) (and (and (and (and (<= ($generated@@2 0) $generated@@62) (= ($generated@@3 $generated@@64 ($generated@@2 2)) ($generated@@2 0))) (and (<= ($generated@@4 (- 0.0 4.0)) $generated@@65) (< $generated@@65 300.0))) (= 0 $generated@@70)) (and (<= ($generated@@2 0) $generated@@71) (< $generated@@71 80))))) (= ($generated@@0 ($generated@@2 $generated@@61) ($generated@@2 $generated@@62) ($generated@@4 $generated@@63) ($generated@@2 $generated@@64) ($generated@@4 $generated@@65) ($generated@@41 ($generated@@34 $generated@@42 $generated@@66)) ($generated@@43 ($generated@@34 $generated@@44 $generated@@67)) ($generated@@45 ($generated@@34 $generated@@46 $generated@@68)) ($generated@@47 ($generated@@34 $generated@@48 $generated@@69)) ($generated@@2 $generated@@70) ($generated@@2 $generated@@71))  (and (and (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@61) ($generated@@2 $generated@@61)) (= ($generated@@2 $generated@@62) ($generated@@2 $generated@@62))) (= ($generated@@4 $generated@@63) ($generated@@4 $generated@@63))) (= ($generated@@2 $generated@@64) ($generated@@2 $generated@@64))) (= ($generated@@4 $generated@@65) ($generated@@4 $generated@@65))) (= ($generated@@41 ($generated@@34 $generated@@42 $generated@@66)) ($generated@@41 ($generated@@34 $generated@@42 $generated@@66)))) (= ($generated@@43 ($generated@@34 $generated@@44 $generated@@67)) ($generated@@43 ($generated@@34 $generated@@44 $generated@@67)))) (= ($generated@@45 ($generated@@34 $generated@@46 $generated@@68)) ($generated@@45 ($generated@@34 $generated@@46 $generated@@68)))) (= ($generated@@47 ($generated@@34 $generated@@48 $generated@@69)) ($generated@@47 ($generated@@34 $generated@@48 $generated@@69)))) (= ($generated@@2 $generated@@70) ($generated@@2 $generated@@70))) (= ($generated@@2 $generated@@71) ($generated@@2 $generated@@71)))))
 :weight 3
 :pattern ( ($generated@@0 ($generated@@2 $generated@@61) ($generated@@2 $generated@@62) ($generated@@4 $generated@@63) ($generated@@2 $generated@@64) ($generated@@4 $generated@@65) ($generated@@41 ($generated@@34 $generated@@42 $generated@@66)) ($generated@@43 ($generated@@34 $generated@@44 $generated@@67)) ($generated@@45 ($generated@@34 $generated@@46 $generated@@68)) ($generated@@47 ($generated@@34 $generated@@48 $generated@@69)) ($generated@@2 $generated@@70) ($generated@@2 $generated@@71)))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@37 $generated@@73 ($generated@@38 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@38 $generated@@73 $generated@@72))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@74 $generated@@85 $generated@@86 $generated@@87 ($generated@@81 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@90 $generated@@91 $generated@@88) $generated@@90 $generated@@91) $generated@@88)
 :weight 0
)) (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or (= $generated@@97 $generated@@99) (= ($generated@@74 $generated@@92 $generated@@93 $generated@@94 ($generated@@81 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@99 $generated@@100) ($generated@@74 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@99 $generated@@100)))
 :weight 0
)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@107 $generated@@109) (= ($generated@@74 $generated@@101 $generated@@102 $generated@@103 ($generated@@81 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@108 $generated@@109) ($generated@@74 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@108 $generated@@109)))
 :weight 0
)))) (= ($generated@@5 $generated@@75) 7)) (= ($generated@@5 $generated@@76) 8)) (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@78 $generated@@110 $generated@@111 ($generated@@82 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@112) $generated@@114) $generated@@112)
 :weight 0
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@78 $generated@@115 $generated@@116 ($generated@@82 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@78 $generated@@115 $generated@@116 $generated@@118 $generated@@120)))
 :weight 0
))) (= ($generated@@5 $generated@@79) 9)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@5 ($generated@@80 $generated@@121 $generated@@122)) 10))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@80 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@80 $generated@@125 $generated@@126))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 Bool) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@10 ($generated@@74 $generated@@75 $generated@@76 $generated@@6 ($generated@@77 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))  (=> (and (or (not (= $generated@@131 $generated@@127)) (not true)) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@78 $generated@@76 $generated@@79 ($generated@@78 $generated@@75 ($generated@@80 $generated@@76 $generated@@79) $generated@@128 $generated@@131) $generated@@129)))) $generated@@130))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76 $generated@@6 ($generated@@77 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 Int) ($generated@@134 Int) ) (! (= ($generated@@3 $generated@@133 $generated@@134) (mod $generated@@133 $generated@@134))
 :pattern ( ($generated@@3 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 Int) ) (! (= ($generated@@38 $generated@@7 ($generated@@11 ($generated@@2 $generated@@135))) ($generated@@34 $generated@@79 ($generated@@38 $generated@@7 ($generated@@11 $generated@@135))))
 :pattern ( ($generated@@38 $generated@@7 ($generated@@11 ($generated@@2 $generated@@135))))
)))
(assert (forall (($generated@@136 Real) ) (! (= ($generated@@38 $generated@@8 ($generated@@13 ($generated@@4 $generated@@136))) ($generated@@34 $generated@@79 ($generated@@38 $generated@@8 ($generated@@13 $generated@@136))))
 :pattern ( ($generated@@38 $generated@@8 ($generated@@13 ($generated@@4 $generated@@136))))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@38 $generated@@138 ($generated@@34 $generated@@138 $generated@@137)) ($generated@@34 $generated@@79 ($generated@@38 $generated@@138 $generated@@137)))
 :pattern ( ($generated@@38 $generated@@138 ($generated@@34 $generated@@138 $generated@@137)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 () Int)
(declare-fun $generated@@141 () Real)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 () Real)
(declare-fun $generated@@144 () (_ BitVec 67))
(declare-fun $generated@@145 () (_ BitVec 32))
(declare-fun $generated@@146 () (_ BitVec 7))
(declare-fun $generated@@147 () (_ BitVec 2))
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 () (_ BitVec 67))
(declare-fun $generated@@151 () (_ BitVec 67))
(declare-fun $generated@@152 () (_ BitVec 67))
(declare-fun $generated@@153 () (_ BitVec 67))
(declare-fun $generated@@154 () (_ BitVec 67))
(declare-fun $generated@@155 () (_ BitVec 67))
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@162  (and (=> (= (ControlFlow 0 4) (- 0 14)) (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@139 $generated@@139)))) (=> (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@139 $generated@@139))) (and (=> (= (ControlFlow 0 4) (- 0 13)) (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@140 $generated@@140)))) (=> (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@140 $generated@@140))) (and (=> (= (ControlFlow 0 4) (- 0 12)) (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@141 $generated@@141)))) (=> (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@141 $generated@@141))) (and (=> (= (ControlFlow 0 4) (- 0 11)) (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@142 $generated@@142)))) (=> (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@142 $generated@@142))) (and (=> (= (ControlFlow 0 4) (- 0 10)) (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@143 $generated@@143)))) (=> (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@143 $generated@@143))) (and (=> (= (ControlFlow 0 4) (- 0 9)) (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@144 $generated@@144)))) (=> (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@144 $generated@@144))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@145 $generated@@145)))) (=> (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@145 $generated@@145))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@146 $generated@@146)))) (=> (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@146 $generated@@146))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@147 $generated@@147)))) (=> (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@147 $generated@@147))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@148 $generated@@148)))) (=> (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@148 $generated@@148))) (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@1 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (or ($generated@@0 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149) (= $generated@@149 $generated@@149))))))))))))))))))))))))))
(let (($generated@@163  (=> (and (<= ($generated@@2 0) $generated@@139) (< $generated@@139 67)) (and (=> (= (ControlFlow 0 27) (- 0 29)) (and (<= 0 $generated@@139) (< $generated@@139 128))) (=> (and (<= 0 $generated@@139) (< $generated@@139 128)) (and (=> (= (ControlFlow 0 27) (- 0 28)) (bvule ((_ int2bv 7) $generated@@139) #b1000011)) (=> (bvule ((_ int2bv 7) $generated@@139) #b1000011) (=> (= $generated@@150 (bvshl $generated@@151 (concat #b000000000000000000000000000000000000000000000000000000000000 ((_ int2bv 7) $generated@@139)))) (=> (and (= $generated@@144 $generated@@150) (= (ControlFlow 0 27) 4)) $generated@@162)))))))))
(let (($generated@@164  (=> (and (< $generated@@139 ($generated@@2 0)) (= (ControlFlow 0 31) 27)) $generated@@163)))
(let (($generated@@165  (=> (and (<= ($generated@@2 0) $generated@@139) (= (ControlFlow 0 30) 27)) $generated@@163)))
(let (($generated@@166  (and (=> (= (ControlFlow 0 24) (- 0 26)) (and (<= 0 $generated@@149) (< $generated@@149 128))) (=> (and (<= 0 $generated@@149) (< $generated@@149 128)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (bvule ((_ int2bv 7) $generated@@149) #b1000011)) (=> (bvule ((_ int2bv 7) $generated@@149) #b1000011) (=> (= $generated@@152 (bvshl $generated@@151 (concat #b000000000000000000000000000000000000000000000000000000000000 ((_ int2bv 7) $generated@@149)))) (=> (and (= $generated@@144 $generated@@152) (= (ControlFlow 0 24) 4)) $generated@@162))))))))
(let (($generated@@167  (and (=> (= (ControlFlow 0 21) (- 0 23)) (and (<= 0 $generated@@140) (< $generated@@140 128))) (=> (and (<= 0 $generated@@140) (< $generated@@140 128)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (bvule ((_ int2bv 7) $generated@@140) #b1000011)) (=> (bvule ((_ int2bv 7) $generated@@140) #b1000011) (=> (= $generated@@153 (bvshl $generated@@151 (concat #b000000000000000000000000000000000000000000000000000000000000 ((_ int2bv 7) $generated@@140)))) (=> (and (= $generated@@144 $generated@@153) (= (ControlFlow 0 21) 4)) $generated@@162))))))))
(let (($generated@@168  (=> (<= ($generated@@2 0) $generated@@139) (and (=> (= (ControlFlow 0 18) (- 0 20)) (and (<= 0 $generated@@139) (< $generated@@139 128))) (=> (and (<= 0 $generated@@139) (< $generated@@139 128)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (bvule ((_ int2bv 7) $generated@@139) #b1000011)) (=> (bvule ((_ int2bv 7) $generated@@139) #b1000011) (=> (= $generated@@154 (bvshl $generated@@151 (concat #b000000000000000000000000000000000000000000000000000000000000 ((_ int2bv 7) $generated@@139)))) (=> (and (= $generated@@144 $generated@@154) (= (ControlFlow 0 18) 4)) $generated@@162)))))))))
(let (($generated@@169  (=> (< $generated@@139 20) (and (=> (= (ControlFlow 0 15) (- 0 17)) (and (<= 0 $generated@@139) (< $generated@@139 128))) (=> (and (<= 0 $generated@@139) (< $generated@@139 128)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (bvule ((_ int2bv 7) $generated@@139) #b1000011)) (=> (bvule ((_ int2bv 7) $generated@@139) #b1000011) (=> (= $generated@@155 (bvshl $generated@@151 (concat #b000000000000000000000000000000000000000000000000000000000000 ((_ int2bv 7) $generated@@139)))) (=> (and (= $generated@@144 $generated@@155) (= (ControlFlow 0 15) 4)) $generated@@162)))))))))
(let (($generated@@170  (=> (and (and (and (and (and (<= 20 $generated@@139) (< $generated@@139 ($generated@@2 0))) (not (and (<= ($generated@@2 0) $generated@@139) (< $generated@@139 67)))) (not ($generated@@10 ($generated@@34 $generated@@6 ($generated@@9 true))))) (not ($generated@@10 ($generated@@34 $generated@@6 ($generated@@9 true))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@171  (=> (= $generated@@156 ($generated@@77 $generated@@157 $generated@@158 $generated@@159 false)) (and (and (and (and (and (and (=> (= (ControlFlow 0 32) 15) $generated@@169) (=> (= (ControlFlow 0 32) 18) $generated@@168)) (=> (= (ControlFlow 0 32) 21) $generated@@167)) (=> (= (ControlFlow 0 32) 24) $generated@@166)) (=> (= (ControlFlow 0 32) 2) $generated@@170)) (=> (= (ControlFlow 0 32) 30) $generated@@165)) (=> (= (ControlFlow 0 32) 31) $generated@@164)))))
(let (($generated@@172  (=> (and (and ($generated@@160 $generated@@158) ($generated@@161 $generated@@158)) (and (<= ($generated@@2 0) $generated@@140) (= ($generated@@3 $generated@@142 ($generated@@2 2)) ($generated@@2 0)))) (=> (and (and (and (<= ($generated@@4 (- 0.0 4.0)) $generated@@143) (< $generated@@143 300.0)) (= 0 $generated@@148)) (and (and (<= ($generated@@2 0) $generated@@149) (< $generated@@149 80)) (and (= 2 $generated) (= (ControlFlow 0 33) 32)))) $generated@@171))))
$generated@@172))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 21) (- 23))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 21) (- 22))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 15) (- 17))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 24) (- 25))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
