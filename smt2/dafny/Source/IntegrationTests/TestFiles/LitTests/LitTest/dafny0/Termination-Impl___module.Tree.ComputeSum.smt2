(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (Int T@U T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@T T@T) T@T)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@115 (T@U) Int)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@8 $generated@@25) 3))
(assert (forall (($generated@@28 Int) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@26 $generated@@28 $generated@@29 $generated@@30) $generated@@27)  (and (and ($generated@@24 $generated@@10 ($generated@@14 $generated@@28) $generated) ($generated@@24 $generated@@25 $generated@@29 $generated@@27)) ($generated@@24 $generated@@25 $generated@@30 $generated@@27)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@26 $generated@@28 $generated@@29 $generated@@30) $generated@@27))
)))
(assert (= ($generated@@31 $generated) $generated@@0))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! ($generated@@32 $generated@@10 $generated@@34 $generated@@33 $generated@@35)
 :pattern ( ($generated@@32 $generated@@10 $generated@@34 $generated@@33 $generated@@35))
)))
(assert (forall (($generated@@37 Int) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@36 ($generated@@26 $generated@@37 $generated@@38 $generated@@39)) $generated@@5)
 :pattern ( ($generated@@26 $generated@@37 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 Int) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 ($generated@@26 $generated@@41 $generated@@42 $generated@@43)) $generated@@41)
 :pattern ( ($generated@@26 $generated@@41 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 Int) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@44 ($generated@@26 $generated@@45 $generated@@46 $generated@@47)) $generated@@46)
 :pattern ( ($generated@@26 $generated@@45 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 Int) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@48 ($generated@@26 $generated@@49 $generated@@50 $generated@@51)) $generated@@51)
 :pattern ( ($generated@@26 $generated@@49 $generated@@50 $generated@@51))
)))
(assert (= ($generated@@36 $generated@@52) $generated@@4))
(assert ($generated@@24 $generated@@25 $generated@@52 $generated@@27))
(assert  (and (and (and (and (and (and (and (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@54 $generated@@63 $generated@@64 ($generated@@60 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@67) $generated@@65)
 :weight 0
)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (or (= $generated@@72 $generated@@73) (= ($generated@@54 $generated@@68 $generated@@69 ($generated@@60 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@73) ($generated@@54 $generated@@68 $generated@@69 $generated@@71 $generated@@73)))
 :weight 0
))) (= ($generated@@8 $generated@@55) 4)) (= ($generated@@8 $generated@@56) 5)) (= ($generated@@8 $generated@@57) 6)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (= ($generated@@8 ($generated@@58 $generated@@74 $generated@@75)) 7))) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (! (= ($generated@@61 ($generated@@58 $generated@@76 $generated@@77)) $generated@@76)
 :pattern ( ($generated@@58 $generated@@76 $generated@@77))
))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@62 ($generated@@58 $generated@@78 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@58 $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> ($generated@@53 $generated@@80 $generated@@81) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@13 ($generated@@59 $generated@@9 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@57 ($generated@@58 $generated@@55 $generated@@56) $generated@@80 $generated@@82) $generated@@1))) ($generated@@13 ($generated@@59 $generated@@9 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@57 ($generated@@58 $generated@@55 $generated@@56) $generated@@81 $generated@@82) $generated@@1))))
 :pattern ( ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@57 ($generated@@58 $generated@@55 $generated@@56) $generated@@81 $generated@@82) $generated@@1))
)))
 :pattern ( ($generated@@53 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@84 Int) ) (! (= ($generated@@83 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 $generated@@89) (= ($generated@@36 $generated@@89) $generated@@4))
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@90 $generated@@91) (= ($generated@@36 $generated@@91) $generated@@5))
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@59 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@59 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@90 $generated@@95) (exists (($generated@@96 Int) ($generated@@97 T@U) ($generated@@98 T@U) ) (= $generated@@95 ($generated@@26 $generated@@96 $generated@@97 $generated@@98))))
 :pattern ( ($generated@@90 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@88 $generated@@99) (= $generated@@99 $generated@@52))
 :pattern ( ($generated@@88 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@24 $generated@@10 $generated@@100 $generated@@33) (<= ($generated@@83 0) ($generated@@15 $generated@@100)))
 :pattern ( ($generated@@24 $generated@@10 $generated@@100 $generated@@33))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (!  (=> ($generated@@53 $generated@@101 $generated@@102) (=> ($generated@@32 $generated@@105 $generated@@103 $generated@@104 $generated@@101) ($generated@@32 $generated@@105 $generated@@103 $generated@@104 $generated@@102)))
 :pattern ( ($generated@@53 $generated@@101 $generated@@102) ($generated@@32 $generated@@105 $generated@@103 $generated@@104 $generated@@101))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@106 $generated@@27) (or ($generated@@88 $generated@@106) ($generated@@90 $generated@@106)))
 :pattern ( ($generated@@90 $generated@@106) ($generated@@24 $generated@@25 $generated@@106 $generated@@27))
 :pattern ( ($generated@@88 $generated@@106) ($generated@@24 $generated@@25 $generated@@106 $generated@@27))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (or (not (= $generated@@107 $generated@@109)) (not true)) (=> (and ($generated@@53 $generated@@107 $generated@@108) ($generated@@53 $generated@@108 $generated@@109)) ($generated@@53 $generated@@107 $generated@@109)))
 :pattern ( ($generated@@53 $generated@@107 $generated@@108) ($generated@@53 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 Int) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@26 ($generated@@83 $generated@@110) ($generated@@85 $generated@@25 $generated@@111) ($generated@@85 $generated@@25 $generated@@112)) ($generated@@85 $generated@@25 ($generated@@26 $generated@@110 $generated@@111 $generated@@112)))
 :pattern ( ($generated@@26 ($generated@@83 $generated@@110) ($generated@@85 $generated@@25 $generated@@111) ($generated@@85 $generated@@25 $generated@@112)))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@59 $generated@@114 ($generated@@92 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@92 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@116 Int) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (< ($generated@@115 $generated@@117) ($generated@@115 ($generated@@26 $generated@@116 $generated@@117 $generated@@118)))
 :pattern ( ($generated@@26 $generated@@116 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 Int) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (< ($generated@@115 $generated@@121) ($generated@@115 ($generated@@26 $generated@@119 $generated@@120 $generated@@121)))
 :pattern ( ($generated@@26 $generated@@119 $generated@@120 $generated@@121))
)))
(assert  (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@122 $generated@@125 $generated@@126 $generated@@127 ($generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@130 $generated@@131) $generated@@128)
 :weight 0
)) (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@122 $generated@@132 $generated@@133 $generated@@134 ($generated@@124 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@122 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@122 $generated@@141 $generated@@142 $generated@@143 ($generated@@124 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@122 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@13 ($generated@@122 $generated@@57 $generated@@55 $generated@@9 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (or (not (= $generated@@154 $generated@@150)) (not true)) ($generated@@13 ($generated@@59 $generated@@9 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@57 ($generated@@58 $generated@@55 $generated@@56) $generated@@151 $generated@@154) $generated@@152)))) $generated@@153))
 :pattern ( ($generated@@122 $generated@@57 $generated@@55 $generated@@9 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and ($generated@@156 $generated@@158) (and ($generated@@90 $generated@@157) ($generated@@32 $generated@@25 $generated@@157 $generated@@27 $generated@@158))) ($generated@@32 $generated@@10 ($generated@@14 ($generated@@40 $generated@@157)) $generated $generated@@158))
 :pattern ( ($generated@@32 $generated@@10 ($generated@@14 ($generated@@40 $generated@@157)) $generated $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and ($generated@@156 $generated@@160) ($generated@@24 $generated@@25 $generated@@159 $generated@@27)) ($generated@@32 $generated@@25 $generated@@159 $generated@@27 $generated@@160))
 :pattern ( ($generated@@32 $generated@@25 $generated@@159 $generated@@27 $generated@@160))
)))
(assert (= ($generated@@31 $generated@@33) $generated@@2))
(assert (= ($generated@@161 $generated@@33) $generated@@6))
(assert (= ($generated@@31 $generated@@27) $generated@@3))
(assert (= ($generated@@161 $generated@@27) $generated@@7))
(assert (= $generated@@52 ($generated@@85 $generated@@25 $generated@@52)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@156 $generated@@163) (and ($generated@@90 $generated@@162) ($generated@@32 $generated@@25 $generated@@162 $generated@@27 $generated@@163))) ($generated@@32 $generated@@25 ($generated@@44 $generated@@162) $generated@@27 $generated@@163))
 :pattern ( ($generated@@32 $generated@@25 ($generated@@44 $generated@@162) $generated@@27 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@156 $generated@@165) (and ($generated@@90 $generated@@164) ($generated@@32 $generated@@25 $generated@@164 $generated@@27 $generated@@165))) ($generated@@32 $generated@@25 ($generated@@48 $generated@@164) $generated@@27 $generated@@165))
 :pattern ( ($generated@@32 $generated@@25 ($generated@@48 $generated@@164) $generated@@27 $generated@@165))
)))
(assert (forall (($generated@@166 Int) ) (! (= ($generated@@92 $generated@@10 ($generated@@14 ($generated@@83 $generated@@166))) ($generated@@85 $generated@@56 ($generated@@92 $generated@@10 ($generated@@14 $generated@@166))))
 :pattern ( ($generated@@92 $generated@@10 ($generated@@14 ($generated@@83 $generated@@166))))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@T) ) (! (= ($generated@@92 $generated@@168 ($generated@@85 $generated@@168 $generated@@167)) ($generated@@85 $generated@@56 ($generated@@92 $generated@@168 $generated@@167)))
 :pattern ( ($generated@@92 $generated@@168 ($generated@@85 $generated@@168 $generated@@167)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! ($generated@@32 $generated@@10 $generated@@170 $generated $generated@@169)
 :pattern ( ($generated@@32 $generated@@10 $generated@@170 $generated $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (! ($generated@@24 $generated@@10 $generated@@171 $generated)
 :pattern ( ($generated@@24 $generated@@10 $generated@@171 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@192  (=> (or (not (= $generated@@172 ($generated@@83 0))) (not true)) (and (=> (= (ControlFlow 0 11) (- 0 13)) ($generated@@24 $generated@@10 ($generated@@14 (- $generated@@172 1)) $generated@@33)) (=> ($generated@@24 $generated@@10 ($generated@@14 (- $generated@@172 1)) $generated@@33) (=> (= $generated@@173 (- $generated@@172 1)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (or (<= 0 $generated@@172) (< ($generated@@115 $generated@@174) ($generated@@115 $generated@@174))) (= $generated@@173 $generated@@172))) (=> (or (or (<= 0 $generated@@172) (< ($generated@@115 $generated@@174) ($generated@@115 $generated@@174))) (= $generated@@173 $generated@@172)) (=> (= (ControlFlow 0 11) (- 0 10)) (or (< ($generated@@115 $generated@@174) ($generated@@115 $generated@@174)) (and (= ($generated@@115 $generated@@174) ($generated@@115 $generated@@174)) (< $generated@@173 $generated@@172))))))))))))
(let (($generated@@193  (=> (= $generated@@172 ($generated@@83 0)) (and (=> (= (ControlFlow 0 4) (- 0 9)) ($generated@@24 $generated@@10 ($generated@@14 ($generated@@83 28)) $generated@@33)) (=> ($generated@@24 $generated@@10 ($generated@@14 ($generated@@83 28)) $generated@@33) (=> (= $generated@@175 ($generated@@83 28)) (and (=> (= (ControlFlow 0 4) (- 0 8)) (or (or (<= 0 $generated@@172) (< ($generated@@115 $generated@@176) ($generated@@115 $generated@@174))) (= $generated@@175 $generated@@172))) (=> (or (or (<= 0 $generated@@172) (< ($generated@@115 $generated@@176) ($generated@@115 $generated@@174))) (= $generated@@175 $generated@@172)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (< ($generated@@115 $generated@@176) ($generated@@115 $generated@@174)) (and (= ($generated@@115 $generated@@176) ($generated@@115 $generated@@174)) (< $generated@@175 $generated@@172)))) (=> (or (< ($generated@@115 $generated@@176) ($generated@@115 $generated@@174)) (and (= ($generated@@115 $generated@@176) ($generated@@115 $generated@@174)) (< $generated@@175 $generated@@172))) (=> (and (and ($generated@@156 $generated@@177) ($generated@@178 $generated@@177)) (and (forall (($generated@@194 T@U) ) (!  (=> (and (or (not (= $generated@@194 $generated@@179)) (not true)) ($generated@@13 ($generated@@59 $generated@@9 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@57 ($generated@@58 $generated@@55 $generated@@56) $generated@@180 $generated@@194) $generated@@1)))) (= ($generated@@54 $generated@@57 ($generated@@58 $generated@@55 $generated@@56) $generated@@177 $generated@@194) ($generated@@54 $generated@@57 ($generated@@58 $generated@@55 $generated@@56) $generated@@180 $generated@@194)))
 :pattern ( ($generated@@54 $generated@@57 ($generated@@58 $generated@@55 $generated@@56) $generated@@177 $generated@@194))
)) ($generated@@53 $generated@@180 $generated@@177))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@24 $generated@@10 ($generated@@14 ($generated@@83 19)) $generated@@33)) (=> ($generated@@24 $generated@@10 ($generated@@14 ($generated@@83 19)) $generated@@33) (=> (= $generated@@181 ($generated@@83 19)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (or (<= 0 $generated@@172) (< ($generated@@115 $generated@@182) ($generated@@115 $generated@@174))) (= $generated@@181 $generated@@172))) (=> (or (or (<= 0 $generated@@172) (< ($generated@@115 $generated@@182) ($generated@@115 $generated@@174))) (= $generated@@181 $generated@@172)) (=> (= (ControlFlow 0 4) (- 0 3)) (or (< ($generated@@115 $generated@@182) ($generated@@115 $generated@@174)) (and (= ($generated@@115 $generated@@182) ($generated@@115 $generated@@174)) (< $generated@@181 $generated@@172))))))))))))))))))))
(let (($generated@@195  (=> (= $generated@@174 ($generated@@26 $generated@@183 $generated@@184 $generated@@185)) (=> (and (and ($generated@@24 $generated@@25 $generated@@184 $generated@@27) ($generated@@32 $generated@@25 $generated@@184 $generated@@27 $generated@@180)) (and ($generated@@24 $generated@@25 $generated@@185 $generated@@27) ($generated@@32 $generated@@25 $generated@@185 $generated@@27 $generated@@180))) (=> (and (and (and (and ($generated@@24 $generated@@25 $generated@@182 $generated@@27) ($generated@@32 $generated@@25 $generated@@182 $generated@@27 $generated@@180)) (= $generated@@186 $generated@@185)) (and ($generated@@24 $generated@@25 $generated@@186 $generated@@27) (= $generated@@182 $generated@@186))) (and (and (and ($generated@@24 $generated@@25 $generated@@176 $generated@@27) ($generated@@32 $generated@@25 $generated@@176 $generated@@27 $generated@@180)) (and (= $generated@@187 $generated@@184) ($generated@@24 $generated@@25 $generated@@187 $generated@@27))) (and (and (= $generated@@176 $generated@@187) (= $generated@@188 $generated@@183)) (and ($generated@@24 $generated@@10 ($generated@@14 $generated@@188) $generated) (= $generated@@189 $generated@@188))))) (and (=> (= (ControlFlow 0 14) 4) $generated@@193) (=> (= (ControlFlow 0 14) 11) $generated@@192)))))))
(let (($generated@@196 true))
(let (($generated@@197  (=> (or (not (= $generated@@174 $generated@@52)) (not true)) (and (=> (= (ControlFlow 0 15) 14) $generated@@195) (=> (= (ControlFlow 0 15) 2) $generated@@196)))))
(let (($generated@@198 true))
(let (($generated@@199  (=> (= $generated@@190 ($generated@@123 $generated@@179 $generated@@180 $generated@@1 false)) (and (=> (= (ControlFlow 0 16) 1) $generated@@198) (=> (= (ControlFlow 0 16) 15) $generated@@197)))))
(let (($generated@@200  (=> (and ($generated@@156 $generated@@180) ($generated@@178 $generated@@180)) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@174 $generated@@27) ($generated@@32 $generated@@25 $generated@@174 $generated@@27 $generated@@180)) (<= ($generated@@83 0) $generated@@172)) (and (= 1 $generated@@191) (= (ControlFlow 0 17) 16))) $generated@@199))))
$generated@@200)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
