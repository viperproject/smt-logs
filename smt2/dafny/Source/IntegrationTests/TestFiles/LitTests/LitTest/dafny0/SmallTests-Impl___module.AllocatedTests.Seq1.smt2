(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@108 (T@U Int) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated@@24) 0))
(assert (= ($generated@@7 $generated@@26) 3))
(assert (forall (($generated@@30 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@30 $generated@@27)  (or (= $generated@@30 $generated@@28) (= ($generated@@29 $generated@@30) $generated@@27)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 $generated@@27))
)))
(assert (forall (($generated@@32 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@32 $generated@@31)  (or (= $generated@@32 $generated@@28) (= ($generated@@29 $generated@@32) $generated@@31)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@32 $generated@@31))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@33 $generated@@26 $generated@@35 $generated@@34 $generated@@36) ($generated@@33 $generated@@26 $generated@@35 $generated@@27 $generated@@36))
 :pattern ( ($generated@@33 $generated@@26 $generated@@35 $generated@@34 $generated@@36))
 :pattern ( ($generated@@33 $generated@@26 $generated@@35 $generated@@27 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@33 $generated@@26 $generated@@38 $generated@@37 $generated@@39) ($generated@@33 $generated@@26 $generated@@38 $generated@@31 $generated@@39))
 :pattern ( ($generated@@33 $generated@@26 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@33 $generated@@26 $generated@@38 $generated@@31 $generated@@39))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@41 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@41 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@41 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@7 $generated@@42) 4)) (= ($generated@@7 $generated@@43) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@7 ($generated@@44 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@44 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@44 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@44 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@33 $generated@@26 $generated@@65 $generated@@27 $generated@@66)  (or (= $generated@@65 $generated@@28) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@26 ($generated@@44 $generated@@42 $generated@@43) $generated@@66 $generated@@65) $generated@@0)))))
 :pattern ( ($generated@@33 $generated@@26 $generated@@65 $generated@@27 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@33 $generated@@26 $generated@@67 $generated@@31 $generated@@68)  (or (= $generated@@67 $generated@@28) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@26 ($generated@@44 $generated@@42 $generated@@43) $generated@@68 $generated@@67) $generated@@0)))))
 :pattern ( ($generated@@33 $generated@@26 $generated@@67 $generated@@31 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@69 $generated@@70 $generated@@71) (forall (($generated@@72 T@U) ) (!  (=> ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@26 ($generated@@44 $generated@@42 $generated@@43) $generated@@70 $generated@@72) $generated@@0))) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@26 ($generated@@44 $generated@@42 $generated@@43) $generated@@71 $generated@@72) $generated@@0))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@26 ($generated@@44 $generated@@42 $generated@@43) $generated@@71 $generated@@72) $generated@@0))
)))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (= ($generated@@7 $generated@@76) 7))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (and ($generated@@25 $generated@@76 $generated@@80 ($generated@@78 $generated@@82)) ($generated@@79 $generated@@81 $generated@@82)) ($generated@@25 $generated@@76 ($generated@@77 $generated@@80 $generated@@81) ($generated@@78 $generated@@82)))
 :pattern ( ($generated@@25 $generated@@76 ($generated@@77 $generated@@80 $generated@@81) ($generated@@78 $generated@@82)))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 ($generated@@40 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@40 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@23 ($generated@@77 $generated@@86 $generated@@87)) (+ 1 ($generated@@23 $generated@@86)))
 :pattern ( ($generated@@77 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@88 ($generated@@83 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@33 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@88 ($generated@@83 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@69 $generated@@93 $generated@@94) (=> ($generated@@88 $generated@@95 $generated@@96 $generated@@93) ($generated@@88 $generated@@95 $generated@@96 $generated@@94)))
 :pattern ( ($generated@@69 $generated@@93 $generated@@94) ($generated@@88 $generated@@95 $generated@@96 $generated@@93))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (!  (=> ($generated@@69 $generated@@97 $generated@@98) (=> ($generated@@33 $generated@@101 $generated@@99 $generated@@100 $generated@@97) ($generated@@33 $generated@@101 $generated@@99 $generated@@100 $generated@@98)))
 :pattern ( ($generated@@69 $generated@@97 $generated@@98) ($generated@@33 $generated@@101 $generated@@99 $generated@@100 $generated@@97))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@79 $generated@@102 $generated@@34) (and (= ($generated@@83 $generated@@26 ($generated@@40 $generated@@26 $generated@@102)) $generated@@102) ($generated@@25 $generated@@26 ($generated@@40 $generated@@26 $generated@@102) $generated@@34)))
 :pattern ( ($generated@@79 $generated@@102 $generated@@34))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@79 $generated@@103 $generated@@27) (and (= ($generated@@83 $generated@@26 ($generated@@40 $generated@@26 $generated@@103)) $generated@@103) ($generated@@25 $generated@@26 ($generated@@40 $generated@@26 $generated@@103) $generated@@27)))
 :pattern ( ($generated@@79 $generated@@103 $generated@@27))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@79 $generated@@104 $generated@@31) (and (= ($generated@@83 $generated@@26 ($generated@@40 $generated@@26 $generated@@104)) $generated@@104) ($generated@@25 $generated@@26 ($generated@@40 $generated@@26 $generated@@104) $generated@@31)))
 :pattern ( ($generated@@79 $generated@@104 $generated@@31))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@79 $generated@@105 $generated@@37) (and (= ($generated@@83 $generated@@26 ($generated@@40 $generated@@26 $generated@@105)) $generated@@105) ($generated@@25 $generated@@26 ($generated@@40 $generated@@26 $generated@@105) $generated@@37)))
 :pattern ( ($generated@@79 $generated@@105 $generated@@37))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@106 $generated@@34)  (and ($generated@@25 $generated@@26 $generated@@106 $generated@@27) (or (not (= $generated@@106 $generated@@28)) (not true))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@106 $generated@@34))
 :pattern ( ($generated@@25 $generated@@26 $generated@@106 $generated@@27))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@107 $generated@@37)  (and ($generated@@25 $generated@@26 $generated@@107 $generated@@31) (or (not (= $generated@@107 $generated@@28)) (not true))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@107 $generated@@37))
 :pattern ( ($generated@@25 $generated@@26 $generated@@107 $generated@@31))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 Int) ($generated@@111 T@U) ) (!  (and (=> (= $generated@@110 ($generated@@23 $generated@@109)) (= ($generated@@108 ($generated@@77 $generated@@109 $generated@@111) $generated@@110) $generated@@111)) (=> (or (not (= $generated@@110 ($generated@@23 $generated@@109))) (not true)) (= ($generated@@108 ($generated@@77 $generated@@109 $generated@@111) $generated@@110) ($generated@@108 $generated@@109 $generated@@110))))
 :pattern ( ($generated@@108 ($generated@@77 $generated@@109 $generated@@111) $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (or (not (= $generated@@112 $generated@@114)) (not true)) (=> (and ($generated@@69 $generated@@112 $generated@@113) ($generated@@69 $generated@@113 $generated@@114)) ($generated@@69 $generated@@112 $generated@@114)))
 :pattern ( ($generated@@69 $generated@@112 $generated@@113) ($generated@@69 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@79 ($generated@@83 $generated@@117 $generated@@115) $generated@@116) ($generated@@25 $generated@@117 $generated@@115 $generated@@116))
 :pattern ( ($generated@@79 ($generated@@83 $generated@@117 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (<= 0 ($generated@@23 $generated@@118))
 :pattern ( ($generated@@23 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@33 $generated@@76 $generated@@119 ($generated@@78 $generated@@120) $generated@@121) (forall (($generated@@122 Int) ) (!  (=> (and (<= 0 $generated@@122) (< $generated@@122 ($generated@@23 $generated@@119))) ($generated@@88 ($generated@@108 $generated@@119 $generated@@122) $generated@@120 $generated@@121))
 :pattern ( ($generated@@108 $generated@@119 $generated@@122))
)))
 :pattern ( ($generated@@33 $generated@@76 $generated@@119 ($generated@@78 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@78 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@78 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@78 $generated@@126)) $generated)
 :pattern ( ($generated@@78 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@40 $generated@@128 ($generated@@83 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@83 $generated@@128 $generated@@127))
)))
(assert  (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@129 $generated@@132 $generated@@133 $generated@@134 ($generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@129 $generated@@139 $generated@@140 $generated@@141 ($generated@@131 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@129 $generated@@148 $generated@@149 $generated@@150 ($generated@@131 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@129 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@12 ($generated@@129 $generated@@26 $generated@@42 $generated@@8 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@26 ($generated@@44 $generated@@42 $generated@@43) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@129 $generated@@26 $generated@@42 $generated@@8 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (and (= ($generated@@163 ($generated@@77 $generated@@165 $generated@@166)) $generated@@165) (= ($generated@@164 ($generated@@77 $generated@@165 $generated@@166)) $generated@@166))
 :pattern ( ($generated@@77 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@79 $generated@@167 ($generated@@78 $generated@@168)) (and (= ($generated@@83 $generated@@76 ($generated@@40 $generated@@76 $generated@@167)) $generated@@167) ($generated@@25 $generated@@76 ($generated@@40 $generated@@76 $generated@@167) ($generated@@78 $generated@@168))))
 :pattern ( ($generated@@79 $generated@@167 ($generated@@78 $generated@@168)))
)))
(assert (= ($generated@@125 $generated@@34) $generated@@1))
(assert (= ($generated@@169 $generated@@34) $generated@@5))
(assert (= ($generated@@125 $generated@@27) $generated@@2))
(assert (= ($generated@@169 $generated@@27) $generated@@5))
(assert (= ($generated@@125 $generated@@31) $generated@@3))
(assert (= ($generated@@169 $generated@@31) $generated@@6))
(assert (= ($generated@@125 $generated@@37) $generated@@4))
(assert (= ($generated@@169 $generated@@37) $generated@@6))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@83 $generated@@171 ($generated@@73 $generated@@171 $generated@@170)) ($generated@@73 $generated@@43 ($generated@@83 $generated@@171 $generated@@170)))
 :pattern ( ($generated@@83 $generated@@171 ($generated@@73 $generated@@171 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= ($generated@@23 $generated@@172) 0) (= $generated@@172 $generated@@24))
 :pattern ( ($generated@@23 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@25 $generated@@76 $generated@@173 ($generated@@78 $generated@@174)) (forall (($generated@@175 Int) ) (!  (=> (and (<= 0 $generated@@175) (< $generated@@175 ($generated@@23 $generated@@173))) ($generated@@79 ($generated@@108 $generated@@173 $generated@@175) $generated@@174))
 :pattern ( ($generated@@108 $generated@@173 $generated@@175))
)))
 :pattern ( ($generated@@25 $generated@@76 $generated@@173 ($generated@@78 $generated@@174)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@188  (=> (and (and (and (and (and (and (not ($generated@@12 ($generated@@73 $generated@@8 ($generated@@11 true)))) (or (not (= $generated@@176 $generated@@28)) (not true))) (or (not (= $generated@@176 $generated@@28)) (not true))) ($generated@@88 ($generated@@83 $generated@@26 $generated@@176) $generated@@27 $generated@@177)) ($generated@@88 ($generated@@83 $generated@@26 $generated@@176) $generated@@27 $generated@@177)) (not (and (or (not (= $generated@@176 $generated@@28)) (not true)) (not ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@26 ($generated@@44 $generated@@42 $generated@@43) $generated@@177 $generated@@176) $generated@@0))))))) (= (ControlFlow 0 14) (- 0 13))) false)))
(let (($generated@@189  (=> (and (and (or (not (= $generated@@176 $generated@@28)) (not true)) (not ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@26 ($generated@@44 $generated@@42 $generated@@43) $generated@@177 $generated@@176) $generated@@0))))) (= (ControlFlow 0 12) (- 0 11))) (or (not (= $generated@@176 $generated@@28)) (not true)))))
(let (($generated@@190  (=> (and (not ($generated@@88 ($generated@@83 $generated@@26 $generated@@176) $generated@@27 $generated@@177)) (= (ControlFlow 0 10) (- 0 9))) (and (or (not (= $generated@@176 $generated@@28)) (not true)) (not ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@26 ($generated@@44 $generated@@42 $generated@@43) $generated@@177 $generated@@176) $generated@@0))))))))
(let (($generated@@191  (=> (and (not ($generated@@88 ($generated@@83 $generated@@26 $generated@@176) $generated@@27 $generated@@177)) (= (ControlFlow 0 8) (- 0 7))) (or (not (= $generated@@176 $generated@@28)) (not true)))))
(let (($generated@@192  (=> (and (= $generated@@176 $generated@@28) (= (ControlFlow 0 6) (- 0 5))) (forall (($generated@@193 Int) )  (=> (and (<= 0 $generated@@193) (< $generated@@193 ($generated@@23 $generated@@178))) (and (or (not (= ($generated@@40 $generated@@26 ($generated@@108 $generated@@178 $generated@@193)) $generated@@28)) (not true)) (not ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@26 ($generated@@44 $generated@@42 $generated@@43) $generated@@177 ($generated@@40 $generated@@26 ($generated@@108 $generated@@178 $generated@@193))) $generated@@0))))))))))
(let (($generated@@194  (=> (and (= $generated@@176 $generated@@28) (= (ControlFlow 0 4) (- 0 3))) ($generated@@88 ($generated@@83 $generated@@76 $generated@@178) ($generated@@78 $generated@@27) $generated@@177))))
(let (($generated@@195  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@88 ($generated@@83 $generated@@76 $generated@@178) ($generated@@78 $generated@@27) $generated@@177))))
(let (($generated@@196  (=> (= $generated@@179 ($generated@@130 $generated@@28 $generated@@177 $generated@@0 false)) (=> (and (and (and ($generated@@180 $generated@@181) ($generated@@182 $generated@@181)) (and (forall (($generated@@197 T@U) ) (!  (=> (and (or (not (= $generated@@197 $generated@@28)) (not true)) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@26 ($generated@@44 $generated@@42 $generated@@43) $generated@@177 $generated@@197) $generated@@0)))) (= ($generated@@41 $generated@@26 ($generated@@44 $generated@@42 $generated@@43) $generated@@181 $generated@@197) ($generated@@41 $generated@@26 ($generated@@44 $generated@@42 $generated@@43) $generated@@177 $generated@@197)))
 :pattern ( ($generated@@41 $generated@@26 ($generated@@44 $generated@@42 $generated@@43) $generated@@181 $generated@@197))
)) ($generated@@69 $generated@@177 $generated@@181))) (and (and ($generated@@25 $generated@@26 $generated@@176 $generated@@27) ($generated@@33 $generated@@26 $generated@@176 $generated@@27 $generated@@181)) (= $generated@@178 ($generated@@77 ($generated@@77 $generated@@24 ($generated@@83 $generated@@26 $generated@@183)) ($generated@@83 $generated@@26 $generated@@176))))) (and (and (and (and (and (and (=> (= (ControlFlow 0 15) 2) $generated@@195) (=> (= (ControlFlow 0 15) 4) $generated@@194)) (=> (= (ControlFlow 0 15) 6) $generated@@192)) (=> (= (ControlFlow 0 15) 8) $generated@@191)) (=> (= (ControlFlow 0 15) 10) $generated@@190)) (=> (= (ControlFlow 0 15) 12) $generated@@189)) (=> (= (ControlFlow 0 15) 14) $generated@@188))))))
(let (($generated@@198  (=> (and ($generated@@180 $generated@@177) ($generated@@182 $generated@@177)) (=> (and (and (and (and (or (not (= $generated@@184 $generated@@28)) (not true)) (and ($generated@@25 $generated@@26 $generated@@184 $generated@@37) ($generated@@33 $generated@@26 $generated@@184 $generated@@37 $generated@@177))) (and ($generated@@25 $generated@@26 $generated@@183 $generated@@27) ($generated@@33 $generated@@26 $generated@@183 $generated@@27 $generated@@177))) (and (and ($generated@@25 $generated@@26 $generated@@185 $generated@@27) ($generated@@33 $generated@@26 $generated@@185 $generated@@27 $generated@@177)) true)) (and (and (and ($generated@@25 $generated@@76 $generated@@186 ($generated@@78 $generated@@27)) ($generated@@33 $generated@@76 $generated@@186 ($generated@@78 $generated@@27) $generated@@177)) true) (and (= 2 $generated@@187) (= (ControlFlow 0 16) 15)))) $generated@@196))))
$generated@@198))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
