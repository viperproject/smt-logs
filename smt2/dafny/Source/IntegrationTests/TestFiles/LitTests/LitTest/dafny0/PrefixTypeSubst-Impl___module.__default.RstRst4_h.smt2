(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U T@U) Bool)
(declare-fun $generated@@0 (T@T) Int)
(declare-fun $generated@@1 () T@T)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 (Bool) T@U)
(declare-fun $generated@@5 (T@U) Bool)
(declare-fun $generated@@6 (Int) T@U)
(declare-fun $generated@@7 (T@U) Int)
(declare-fun $generated@@8 (Real) T@U)
(declare-fun $generated@@9 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U) T@U)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@25 (Int) Int)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@74 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@78 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@81 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@0 $generated@@1) 0) (= ($generated@@0 $generated@@2) 1)) (= ($generated@@0 $generated@@3) 2)) (forall (($generated@@10 Bool) ) (! (= ($generated@@5 ($generated@@4 $generated@@10)) $generated@@10)
 :pattern ( ($generated@@4 $generated@@10))
))) (forall (($generated@@11 T@U) ) (! (= ($generated@@4 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 Int) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Real) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))))
(assert (forall (($generated@@16 T@U) ($generated@@17 T@U) ($generated@@18 T@U) ) (!  (=> (and ($generated $generated@@16 $generated@@17) ($generated $generated@@17 $generated@@18)) ($generated $generated@@16 $generated@@18))
 :pattern ( ($generated $generated@@16 $generated@@17) ($generated $generated@@17 $generated@@18))
 :pattern ( ($generated $generated@@16 $generated@@17) ($generated $generated@@16 $generated@@18))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 Int) ($generated@@24 Int) ) (!  (=> (and (and (<= 0 $generated@@23) (<= 0 $generated@@24)) (<= (+ $generated@@23 $generated@@24) ($generated@@21 $generated@@22))) (= ($generated@@19 ($generated@@19 $generated@@22 ($generated@@20 $generated@@23)) ($generated@@20 $generated@@24)) ($generated@@19 $generated@@22 ($generated@@20 (+ $generated@@23 $generated@@24)))))
 :pattern ( ($generated@@19 ($generated@@19 $generated@@22 ($generated@@20 $generated@@23)) ($generated@@20 $generated@@24)))
)))
(assert (forall (($generated@@26 Int) ) (! (= ($generated@@25 $generated@@26) $generated@@26)
 :pattern ( ($generated@@25 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@T) ) (! (= ($generated@@27 $generated@@29 $generated@@28) $generated@@28)
 :pattern ( ($generated@@27 $generated@@29 $generated@@28))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@T) ) (! (= ($generated@@31 $generated@@33 ($generated@@30 $generated@@33 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@30 $generated@@33 $generated@@32))
)))
(assert (= ($generated@@0 $generated@@37) 3))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@38 $generated@@39 $generated@@40 $generated@@41 ($generated@@27 $generated@@37 $generated@@43)) (< 1 $generated@@34)) (and (and (=> (< 0 ($generated@@21 $generated@@43)) ($generated@@38 $generated@@40 $generated@@39 $generated@@41 ($generated@@19 $generated@@43 ($generated@@20 1)))) (=> (=> (< 0 ($generated@@21 $generated@@43)) ($generated@@35 $generated@@40 $generated@@39 $generated@@41 ($generated@@36 $generated@@42) ($generated@@19 $generated@@43 ($generated@@20 1)))) (=> (= ($generated@@25 0) ($generated@@21 $generated@@43)) (forall (($generated@@44 T@U) ) (!  (=> ($generated $generated@@44 $generated@@43) ($generated@@38 $generated@@39 $generated@@40 $generated@@41 $generated@@44))
 :pattern ( ($generated@@35 $generated@@39 $generated@@40 $generated@@41 ($generated@@36 $generated@@42) $generated@@44))
))))) (= ($generated@@35 $generated@@39 $generated@@40 $generated@@41 ($generated@@36 $generated@@42) ($generated@@27 $generated@@37 $generated@@43))  (and (=> (< 0 ($generated@@21 $generated@@43)) ($generated@@35 $generated@@40 $generated@@39 $generated@@41 ($generated@@36 $generated@@42) ($generated@@19 $generated@@43 ($generated@@20 1)))) (=> (= ($generated@@25 0) ($generated@@21 $generated@@43)) (forall (($generated@@45 T@U) ) (!  (=> ($generated $generated@@45 $generated@@43) ($generated@@35 $generated@@39 $generated@@40 $generated@@41 ($generated@@36 $generated@@42) $generated@@45))
 :pattern ( ($generated@@35 $generated@@39 $generated@@40 $generated@@41 ($generated@@36 $generated@@42) $generated@@45))
)))))))
 :weight 3
 :pattern ( ($generated@@35 $generated@@39 $generated@@40 $generated@@41 ($generated@@36 $generated@@42) ($generated@@27 $generated@@37 $generated@@43)))
))))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and ($generated@@46 $generated@@48) (<= ($generated@@21 $generated@@48) ($generated@@21 $generated@@47))) (and (= ($generated@@46 ($generated@@19 $generated@@47 $generated@@48)) ($generated@@46 $generated@@47)) (= ($generated@@21 ($generated@@19 $generated@@47 $generated@@48)) (- ($generated@@21 $generated@@47) ($generated@@21 $generated@@48)))))
 :pattern ( ($generated@@19 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@49 Int) ) (!  (=> (<= 0 $generated@@49) (and ($generated@@46 ($generated@@20 $generated@@49)) (= ($generated@@21 ($generated@@20 $generated@@49)) $generated@@49)))
 :pattern ( ($generated@@20 $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@35 $generated@@50 $generated@@51 $generated@@52 ($generated@@36 $generated@@53) $generated@@54) ($generated@@35 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54))
 :pattern ( ($generated@@35 $generated@@50 $generated@@51 $generated@@52 ($generated@@36 $generated@@53) $generated@@54))
)))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (= $generated@@59 ($generated@@20 0)) ($generated@@35 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59))
 :pattern ( ($generated@@35 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (or ($generated $generated@@60 $generated@@61) (= $generated@@60 $generated@@61)) ($generated $generated@@61 $generated@@60))
 :pattern ( ($generated $generated@@60 $generated@@61) ($generated $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (<= 0 ($generated@@21 $generated@@62))
 :pattern ( ($generated@@21 $generated@@62))
)))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@38 $generated@@63 $generated@@64 $generated@@65 $generated@@67) (< 1 $generated@@34)) (and (and (=> (< 0 ($generated@@21 $generated@@67)) ($generated@@38 $generated@@64 $generated@@63 $generated@@65 ($generated@@19 $generated@@67 ($generated@@20 1)))) (=> (=> (< 0 ($generated@@21 $generated@@67)) ($generated@@35 $generated@@64 $generated@@63 $generated@@65 $generated@@66 ($generated@@19 $generated@@67 ($generated@@20 1)))) (=> (= ($generated@@25 0) ($generated@@21 $generated@@67)) (forall (($generated@@68 T@U) ) (!  (=> ($generated $generated@@68 $generated@@67) ($generated@@38 $generated@@63 $generated@@64 $generated@@65 $generated@@68))
 :pattern ( ($generated@@35 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@68))
))))) (= ($generated@@35 $generated@@63 $generated@@64 $generated@@65 ($generated@@36 $generated@@66) $generated@@67)  (and (=> (< 0 ($generated@@21 $generated@@67)) ($generated@@35 $generated@@64 $generated@@63 $generated@@65 $generated@@66 ($generated@@19 $generated@@67 ($generated@@20 1)))) (=> (= ($generated@@25 0) ($generated@@21 $generated@@67)) (forall (($generated@@69 T@U) ) (!  (=> ($generated $generated@@69 $generated@@67) ($generated@@35 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@69))
 :pattern ( ($generated@@35 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@69))
)))))))
 :pattern ( ($generated@@35 $generated@@63 $generated@@64 $generated@@65 ($generated@@36 $generated@@66) $generated@@67))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@30 $generated@@71 ($generated@@31 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@31 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (and (and (and (=> ($generated $generated@@72 $generated@@73) (or (not (= $generated@@72 $generated@@73)) (not true))) (=> (and ($generated@@46 $generated@@72) (not ($generated@@46 $generated@@73))) ($generated $generated@@72 $generated@@73))) (=> (and ($generated@@46 $generated@@72) ($generated@@46 $generated@@73)) (= ($generated $generated@@72 $generated@@73) (< ($generated@@21 $generated@@72) ($generated@@21 $generated@@73))))) (=> (and ($generated $generated@@72 $generated@@73) ($generated@@46 $generated@@73)) ($generated@@46 $generated@@72)))
 :pattern ( ($generated $generated@@72 $generated@@73))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@74 $generated@@84 $generated@@85 $generated@@86 ($generated@@80 $generated@@84 $generated@@85 $generated@@86 $generated@@88 $generated@@89 $generated@@90 $generated@@87) $generated@@89 $generated@@90) $generated@@87)
 :weight 0
)) (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (or (= $generated@@96 $generated@@98) (= ($generated@@74 $generated@@91 $generated@@92 $generated@@93 ($generated@@80 $generated@@91 $generated@@92 $generated@@93 $generated@@95 $generated@@96 $generated@@97 $generated@@94) $generated@@98 $generated@@99) ($generated@@74 $generated@@91 $generated@@92 $generated@@93 $generated@@95 $generated@@98 $generated@@99)))
 :weight 0
)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@106 $generated@@108) (= ($generated@@74 $generated@@100 $generated@@101 $generated@@102 ($generated@@80 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@107 $generated@@108) ($generated@@74 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@107 $generated@@108)))
 :weight 0
)))) (= ($generated@@0 $generated@@75) 4)) (= ($generated@@0 $generated@@76) 5)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@78 $generated@@109 $generated@@110 ($generated@@81 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@111) $generated@@113) $generated@@111)
 :weight 0
))) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 $generated@@114 $generated@@115 ($generated@@81 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@114 $generated@@115 $generated@@117 $generated@@119)))
 :weight 0
))) (forall (($generated@@120 T@T) ($generated@@121 T@T) ) (= ($generated@@0 ($generated@@79 $generated@@120 $generated@@121)) 6))) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@122 $generated@@123)) $generated@@122)
 :pattern ( ($generated@@79 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@124 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@79 $generated@@124 $generated@@125))
))))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 Bool) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@5 ($generated@@74 $generated@@75 $generated@@76 $generated@@1 ($generated@@77 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@130 $generated@@131))  (=> (and (or (not (= $generated@@130 $generated@@126)) (not true)) ($generated@@5 ($generated@@30 $generated@@1 ($generated@@78 $generated@@76 $generated@@37 ($generated@@78 $generated@@75 ($generated@@79 $generated@@76 $generated@@37) $generated@@127 $generated@@130) $generated@@128)))) $generated@@129))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76 $generated@@1 ($generated@@77 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@46 $generated@@132) (= $generated@@132 ($generated@@20 ($generated@@21 $generated@@132))))
 :pattern ( ($generated@@21 $generated@@132))
 :pattern ( ($generated@@46 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and ($generated@@46 $generated@@134) (<= ($generated@@21 $generated@@134) ($generated@@21 $generated@@133))) (or (and (= $generated@@134 ($generated@@20 0)) (= ($generated@@19 $generated@@133 $generated@@134) $generated@@133)) (and (or (not (= $generated@@134 ($generated@@20 0))) (not true)) ($generated ($generated@@19 $generated@@133 $generated@@134) $generated@@133))))
 :pattern ( ($generated@@19 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 Int) ) (! (= ($generated@@31 $generated@@2 ($generated@@6 ($generated@@25 $generated@@135))) ($generated@@27 $generated@@37 ($generated@@31 $generated@@2 ($generated@@6 $generated@@135))))
 :pattern ( ($generated@@31 $generated@@2 ($generated@@6 ($generated@@25 $generated@@135))))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@31 $generated@@137 ($generated@@27 $generated@@137 $generated@@136)) ($generated@@27 $generated@@37 ($generated@@31 $generated@@137 $generated@@136)))
 :pattern ( ($generated@@31 $generated@@137 ($generated@@27 $generated@@137 $generated@@136)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@152  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@38 $generated@@138 $generated@@139 $generated@@140 $generated@@141) (or ($generated@@35 $generated@@138 $generated@@139 $generated@@140 ($generated@@36 $generated@@142) $generated@@141) (=> (< 0 ($generated@@21 $generated@@141)) ($generated@@35 $generated@@139 $generated@@138 $generated@@140 ($generated@@36 ($generated@@36 $generated@@142)) ($generated@@19 $generated@@141 ($generated@@20 1))))))) (=> (=> ($generated@@38 $generated@@138 $generated@@139 $generated@@140 $generated@@141) (or ($generated@@35 $generated@@138 $generated@@139 $generated@@140 ($generated@@36 $generated@@142) $generated@@141) (=> (< 0 ($generated@@21 $generated@@141)) ($generated@@35 $generated@@139 $generated@@138 $generated@@140 ($generated@@36 ($generated@@36 $generated@@142)) ($generated@@19 $generated@@141 ($generated@@20 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@38 $generated@@138 $generated@@139 $generated@@140 $generated@@141) (or ($generated@@35 $generated@@138 $generated@@139 $generated@@140 ($generated@@36 $generated@@142) $generated@@141) (=> (= ($generated@@25 0) ($generated@@21 $generated@@141)) (forall (($generated@@153 T@U) ) (!  (=> ($generated $generated@@153 $generated@@141) ($generated@@35 $generated@@138 $generated@@139 $generated@@140 ($generated@@36 ($generated@@36 $generated@@142)) $generated@@153))
 :pattern ( ($generated@@35 $generated@@138 $generated@@139 $generated@@140 ($generated@@36 ($generated@@36 $generated@@142)) $generated@@153))
))))))))))
(let (($generated@@154  (=> (<= ($generated@@21 $generated@@141) 0) (=> (and (and (and ($generated@@143 $generated@@144) ($generated@@145 $generated@@144)) (= $generated@@146 $generated@@144)) (and (forall (($generated@@155 T@U) ) (!  (=> ($generated $generated@@155 $generated@@141) ($generated@@35 $generated@@138 $generated@@139 $generated@@140 ($generated@@36 $generated@@142) $generated@@155))
 :pattern ( ($generated@@35 $generated@@138 $generated@@139 $generated@@140 ($generated@@36 $generated@@142) $generated@@155))
 :pattern ( ($generated $generated@@155 $generated@@141))
)) (= (ControlFlow 0 7) 2))) $generated@@152))))
(let (($generated@@156  (=> (< 0 ($generated@@21 $generated@@141)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@46 ($generated@@27 $generated@@37 ($generated@@20 1)))) (=> ($generated@@46 ($generated@@27 $generated@@37 ($generated@@20 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@21 ($generated@@27 $generated@@37 ($generated@@20 1))) ($generated@@21 $generated@@141))) (=> (<= ($generated@@21 ($generated@@27 $generated@@37 ($generated@@20 1))) ($generated@@21 $generated@@141)) (=> (= $generated@@147 ($generated@@19 $generated@@141 ($generated@@20 1))) (=> (and (and (and ($generated@@143 $generated@@148) ($generated@@145 $generated@@148)) ($generated@@38 $generated@@139 $generated@@138 $generated@@140 $generated@@147)) (and (and ($generated@@38 $generated@@139 $generated@@138 $generated@@140 $generated@@147) (and ($generated@@35 $generated@@139 $generated@@138 $generated@@140 ($generated@@36 $generated@@142) $generated@@147) (and (=> (< 0 ($generated@@21 $generated@@147)) ($generated@@35 $generated@@138 $generated@@139 $generated@@140 ($generated@@36 $generated@@142) ($generated@@19 $generated@@147 ($generated@@20 1)))) (=> (= ($generated@@25 0) ($generated@@21 $generated@@147)) (forall (($generated@@157 T@U) ) (!  (=> ($generated $generated@@157 $generated@@147) ($generated@@35 $generated@@139 $generated@@138 $generated@@140 ($generated@@36 $generated@@142) $generated@@157))
 :pattern ( ($generated@@35 $generated@@139 $generated@@138 $generated@@140 ($generated@@36 $generated@@142) $generated@@157))
)))))) (and (= $generated@@146 $generated@@148) (= (ControlFlow 0 4) 2)))) $generated@@152)))))))))
(let (($generated@@158  (=> (= $generated@@149 ($generated@@77 $generated@@150 $generated@@146 $generated@@151 false)) (and (=> (= (ControlFlow 0 8) 4) $generated@@156) (=> (= (ControlFlow 0 8) 7) $generated@@154)))))
(let (($generated@@159  (=> (and (and ($generated@@143 $generated@@146) ($generated@@145 $generated@@146)) (and (= 2 $generated@@34) (= (ControlFlow 0 9) 8))) $generated@@158)))
$generated@@159))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
