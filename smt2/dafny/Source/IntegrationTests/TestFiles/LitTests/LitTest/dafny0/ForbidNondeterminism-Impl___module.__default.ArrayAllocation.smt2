(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Int)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T T@T) T@T)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@86 (Int) Int)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@128 (T@U) Bool)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@1))
(assert (= ($generated@@26 $generated@@0) $generated@@2))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and (or (not (= $generated@@33 $generated@@29)) (not true)) (= ($generated@@30 $generated@@33) ($generated@@28 $generated@@32))) ($generated@@31 $generated@@12 ($generated@@16 ($generated@@27 $generated@@33)) $generated@@0))
 :pattern ( ($generated@@27 $generated@@33) ($generated@@28 $generated@@32))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (and (or (not (= $generated@@37 $generated@@29)) (not true)) (= ($generated@@30 $generated@@37) ($generated@@35 $generated@@36))) ($generated@@31 $generated@@12 ($generated@@16 ($generated@@34 $generated@@37)) $generated@@0))
 :pattern ( ($generated@@34 $generated@@37) ($generated@@35 $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (and (or (not (= $generated@@40 $generated@@29)) (not true)) (= ($generated@@30 $generated@@40) ($generated@@35 $generated@@39))) ($generated@@31 $generated@@12 ($generated@@16 ($generated@@38 $generated@@40)) $generated@@0))
 :pattern ( ($generated@@38 $generated@@40) ($generated@@35 $generated@@39))
)))
(assert (= ($generated@@10 $generated@@42) 3))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@45 ($generated@@43 $generated@@44) $generated@@46) ($generated@@41 $generated@@42 $generated@@45 ($generated@@28 $generated@@44) $generated@@46))
 :pattern ( ($generated@@41 $generated@@42 $generated@@45 ($generated@@43 $generated@@44) $generated@@46))
 :pattern ( ($generated@@41 $generated@@42 $generated@@45 ($generated@@28 $generated@@44) $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@49 ($generated@@47 $generated@@48) $generated@@50) ($generated@@41 $generated@@42 $generated@@49 ($generated@@35 $generated@@48) $generated@@50))
 :pattern ( ($generated@@41 $generated@@42 $generated@@49 ($generated@@47 $generated@@48) $generated@@50))
 :pattern ( ($generated@@41 $generated@@42 $generated@@49 ($generated@@35 $generated@@48) $generated@@50))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@52 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@52 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@52 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@10 $generated@@53) 4)) (= ($generated@@10 $generated@@54) 5)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@10 ($generated@@55 $generated@@70 $generated@@71)) 6))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@55 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@55 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@55 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@55 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@77 ($generated@@28 $generated@@76) $generated@@78)  (or (= $generated@@77 $generated@@29) ($generated@@15 ($generated@@51 $generated@@11 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@78 $generated@@77) $generated@@3)))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@77 ($generated@@28 $generated@@76) $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@80 ($generated@@35 $generated@@79) $generated@@81)  (or (= $generated@@80 $generated@@29) ($generated@@15 ($generated@@51 $generated@@11 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@81 $generated@@80) $generated@@3)))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@80 ($generated@@35 $generated@@79) $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@82 $generated@@83 $generated@@84) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@15 ($generated@@51 $generated@@11 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@83 $generated@@85) $generated@@3))) ($generated@@15 ($generated@@51 $generated@@11 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@84 $generated@@85) $generated@@3))))
 :pattern ( ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@84 $generated@@85) $generated@@3))
)))
 :pattern ( ($generated@@82 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@87 Int) ) (! (= ($generated@@86 $generated@@87) $generated@@87)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 $generated@@89) $generated@@89)
 :pattern ( ($generated@@88 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 ($generated@@51 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@51 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@31 $generated@@42 $generated@@95 ($generated@@43 $generated@@94))  (and ($generated@@31 $generated@@42 $generated@@95 ($generated@@28 $generated@@94)) (or (not (= $generated@@95 $generated@@29)) (not true))))
 :pattern ( ($generated@@31 $generated@@42 $generated@@95 ($generated@@43 $generated@@94)))
 :pattern ( ($generated@@31 $generated@@42 $generated@@95 ($generated@@28 $generated@@94)))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@31 $generated@@42 $generated@@97 ($generated@@47 $generated@@96))  (and ($generated@@31 $generated@@42 $generated@@97 ($generated@@35 $generated@@96)) (or (not (= $generated@@97 $generated@@29)) (not true))))
 :pattern ( ($generated@@31 $generated@@42 $generated@@97 ($generated@@47 $generated@@96)))
 :pattern ( ($generated@@31 $generated@@42 $generated@@97 ($generated@@35 $generated@@96)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (!  (=> ($generated@@82 $generated@@98 $generated@@99) (=> ($generated@@41 $generated@@102 $generated@@100 $generated@@101 $generated@@98) ($generated@@41 $generated@@102 $generated@@100 $generated@@101 $generated@@99)))
 :pattern ( ($generated@@82 $generated@@98 $generated@@99) ($generated@@41 $generated@@102 $generated@@100 $generated@@101 $generated@@98))
)))
(assert (forall (($generated@@104 T@U) ) (!  (and (= ($generated@@26 ($generated@@28 $generated@@104)) $generated@@4) (= ($generated@@103 ($generated@@28 $generated@@104)) $generated@@8))
 :pattern ( ($generated@@28 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@26 ($generated@@43 $generated@@105)) $generated@@5) (= ($generated@@103 ($generated@@43 $generated@@105)) $generated@@8))
 :pattern ( ($generated@@43 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (!  (and (= ($generated@@26 ($generated@@35 $generated@@106)) $generated@@6) (= ($generated@@103 ($generated@@35 $generated@@106)) $generated@@9))
 :pattern ( ($generated@@35 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (!  (and (= ($generated@@26 ($generated@@47 $generated@@107)) $generated@@7) (= ($generated@@103 ($generated@@47 $generated@@107)) $generated@@9))
 :pattern ( ($generated@@47 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@31 $generated@@42 $generated@@109 ($generated@@28 $generated@@108))  (or (= $generated@@109 $generated@@29) (= ($generated@@30 $generated@@109) ($generated@@28 $generated@@108))))
 :pattern ( ($generated@@31 $generated@@42 $generated@@109 ($generated@@28 $generated@@108)))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@31 $generated@@42 $generated@@111 ($generated@@35 $generated@@110))  (or (= $generated@@111 $generated@@29) (= ($generated@@30 $generated@@111) ($generated@@35 $generated@@110))))
 :pattern ( ($generated@@31 $generated@@42 $generated@@111 ($generated@@35 $generated@@110)))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (or (not (= $generated@@112 $generated@@114)) (not true)) (=> (and ($generated@@82 $generated@@112 $generated@@113) ($generated@@82 $generated@@113 $generated@@114)) ($generated@@82 $generated@@112 $generated@@114)))
 :pattern ( ($generated@@82 $generated@@112 $generated@@113) ($generated@@82 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (! (<= 0 ($generated@@27 $generated@@115))
 :pattern ( ($generated@@27 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (! (<= 0 ($generated@@34 $generated@@116))
 :pattern ( ($generated@@34 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (! (<= 0 ($generated@@38 $generated@@117))
 :pattern ( ($generated@@38 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@28 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@28 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@43 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@43 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@35 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@35 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@124 ($generated@@47 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@47 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@51 $generated@@127 ($generated@@91 $generated@@127 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@91 $generated@@127 $generated@@126))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (and ($generated@@128 $generated@@130) (and (or (not (= $generated@@131 $generated@@29)) (not true)) (= ($generated@@30 $generated@@131) ($generated@@28 $generated@@129)))) ($generated@@15 ($generated@@51 $generated@@11 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@130 $generated@@131) $generated@@3)))) ($generated@@41 $generated@@12 ($generated@@16 ($generated@@27 $generated@@131)) $generated@@0 $generated@@130))
 :pattern ( ($generated@@27 $generated@@131) ($generated@@51 $generated@@11 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@130 $generated@@131) $generated@@3)) ($generated@@28 $generated@@129))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and ($generated@@128 $generated@@133) (and (or (not (= $generated@@134 $generated@@29)) (not true)) (= ($generated@@30 $generated@@134) ($generated@@35 $generated@@132)))) ($generated@@15 ($generated@@51 $generated@@11 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@133 $generated@@134) $generated@@3)))) ($generated@@41 $generated@@12 ($generated@@16 ($generated@@34 $generated@@134)) $generated@@0 $generated@@133))
 :pattern ( ($generated@@34 $generated@@134) ($generated@@51 $generated@@11 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@133 $generated@@134) $generated@@3)) ($generated@@35 $generated@@132))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and ($generated@@128 $generated@@136) (and (or (not (= $generated@@137 $generated@@29)) (not true)) (= ($generated@@30 $generated@@137) ($generated@@35 $generated@@135)))) ($generated@@15 ($generated@@51 $generated@@11 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@136 $generated@@137) $generated@@3)))) ($generated@@41 $generated@@12 ($generated@@16 ($generated@@38 $generated@@137)) $generated@@0 $generated@@136))
 :pattern ( ($generated@@38 $generated@@137) ($generated@@51 $generated@@11 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@136 $generated@@137) $generated@@3)) ($generated@@35 $generated@@135))
)))
(assert  (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@138 $generated@@141 $generated@@142 $generated@@143 ($generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@146 $generated@@147) $generated@@144)
 :weight 0
)) (and (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@138 $generated@@148 $generated@@149 $generated@@150 ($generated@@140 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@138 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@138 $generated@@157 $generated@@158 $generated@@159 ($generated@@140 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@138 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Bool) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@15 ($generated@@138 $generated@@42 $generated@@53 $generated@@11 ($generated@@139 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))  (=> (and (or (not (= $generated@@170 $generated@@166)) (not true)) ($generated@@15 ($generated@@51 $generated@@11 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@167 $generated@@170) $generated@@168)))) $generated@@169))
 :pattern ( ($generated@@138 $generated@@42 $generated@@53 $generated@@11 ($generated@@139 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@128 ($generated@@56 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@172 $generated@@173 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@172 $generated@@173) $generated@@174 $generated@@175))) ($generated@@82 $generated@@172 ($generated@@56 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@172 $generated@@173 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@172 $generated@@173) $generated@@174 $generated@@175))))
 :pattern ( ($generated@@56 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@172 $generated@@173 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@172 $generated@@173) $generated@@174 $generated@@175)))
)))
(assert (forall (($generated@@176 Int) ) (! (= ($generated@@91 $generated@@12 ($generated@@16 ($generated@@86 $generated@@176))) ($generated@@88 $generated@@54 ($generated@@91 $generated@@12 ($generated@@16 $generated@@176))))
 :pattern ( ($generated@@91 $generated@@12 ($generated@@16 ($generated@@86 $generated@@176))))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@91 $generated@@178 ($generated@@88 $generated@@178 $generated@@177)) ($generated@@88 $generated@@54 ($generated@@91 $generated@@178 $generated@@177)))
 :pattern ( ($generated@@91 $generated@@178 ($generated@@88 $generated@@178 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! ($generated@@41 $generated@@12 $generated@@180 $generated@@0 $generated@@179)
 :pattern ( ($generated@@41 $generated@@12 $generated@@180 $generated@@0 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! ($generated@@41 $generated@@11 $generated@@182 $generated $generated@@181)
 :pattern ( ($generated@@41 $generated@@11 $generated@@182 $generated $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (! ($generated@@31 $generated@@12 $generated@@183 $generated@@0)
 :pattern ( ($generated@@31 $generated@@12 $generated@@183 $generated@@0))
)))
(assert (forall (($generated@@184 T@U) ) (! ($generated@@31 $generated@@11 $generated@@184 $generated)
 :pattern ( ($generated@@31 $generated@@11 $generated@@184 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@196  (=> (= $generated@@185 ($generated@@139 $generated@@29 $generated@@186 $generated@@3 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= 0 $generated@@187)) (=> (<= 0 $generated@@187) (=> (and (and (and (or (not (= $generated@@188 $generated@@29)) (not true)) ($generated@@31 $generated@@42 $generated@@188 ($generated@@28 $generated@@0))) (not ($generated@@15 ($generated@@51 $generated@@11 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@186 $generated@@188) $generated@@3))))) (and (and (= ($generated@@27 $generated@@188) $generated@@187) (= $generated@@189 ($generated@@56 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@186 $generated@@188 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@42 ($generated@@55 $generated@@53 $generated@@54) $generated@@186 $generated@@188) $generated@@3 ($generated@@91 $generated@@11 ($generated@@14 true)))))) (and ($generated@@128 $generated@@189) ($generated@@190 $generated@@189)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= 0 $generated@@191)) (=> (<= 0 $generated@@191) (=> (= (ControlFlow 0 2) (- 0 1)) (<= 0 $generated@@192))))))))))
(let (($generated@@197  (=> (and (and (and (and (and ($generated@@128 $generated@@186) ($generated@@190 $generated@@186)) (<= ($generated@@86 0) $generated@@187)) (and (<= ($generated@@86 0) $generated@@191) (<= ($generated@@86 0) $generated@@192))) (and (and ($generated@@31 $generated@@42 $generated@@193 ($generated@@43 $generated@@0)) ($generated@@41 $generated@@42 $generated@@193 ($generated@@43 $generated@@0) $generated@@186)) true)) (and (and (and ($generated@@31 $generated@@42 $generated@@194 ($generated@@47 $generated)) ($generated@@41 $generated@@42 $generated@@194 ($generated@@47 $generated) $generated@@186)) true) (and (= 0 $generated@@195) (= (ControlFlow 0 5) 2)))) $generated@@196)))
$generated@@197)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
