(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@20 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@T T@T) T@T)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@26 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@27 (T@T) T@T)
(declare-fun $generated@@28 (T@T) T@T)
(declare-fun $generated@@49 (T@U Int) T@U)
(declare-fun $generated@@52 (Int) Int)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U Int) T@U)
(declare-fun $generated@@58 (T@U Int) T@U)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U) Int)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@102 (T@T T@U T@U) Bool)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@121 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (= ($generated@@17 $generated@@18) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@29 T@T) ($generated@@30 T@T) ($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@20 $generated@@29 $generated@@30 ($generated@@26 $generated@@29 $generated@@30 $generated@@32 $generated@@33 $generated@@31) $generated@@33) $generated@@31)
 :weight 0
)) (forall (($generated@@34 T@T) ($generated@@35 T@T) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (or (= $generated@@38 $generated@@39) (= ($generated@@20 $generated@@34 $generated@@35 ($generated@@26 $generated@@34 $generated@@35 $generated@@37 $generated@@38 $generated@@36) $generated@@39) ($generated@@20 $generated@@34 $generated@@35 $generated@@37 $generated@@39)))
 :weight 0
))) (= ($generated@@1 $generated@@21) 3)) (= ($generated@@1 $generated@@22) 4)) (= ($generated@@1 $generated@@23) 5)) (forall (($generated@@40 T@T) ($generated@@41 T@T) ) (= ($generated@@1 ($generated@@24 $generated@@40 $generated@@41)) 6))) (forall (($generated@@42 T@T) ($generated@@43 T@T) ) (! (= ($generated@@27 ($generated@@24 $generated@@42 $generated@@43)) $generated@@42)
 :pattern ( ($generated@@24 $generated@@42 $generated@@43))
))) (forall (($generated@@44 T@T) ($generated@@45 T@T) ) (! (= ($generated@@28 ($generated@@24 $generated@@44 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@24 $generated@@44 $generated@@45))
))))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> ($generated@@19 $generated@@46 $generated@@47) (forall (($generated@@48 T@U) ) (!  (=> ($generated@@6 ($generated@@25 $generated@@2 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@46 $generated@@48) $generated@@0))) ($generated@@6 ($generated@@25 $generated@@2 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@47 $generated@@48) $generated@@0))))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@47 $generated@@48) $generated@@0))
)))
 :pattern ( ($generated@@19 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 Int) ) (!  (=> (= $generated@@51 0) (= ($generated@@49 $generated@@50 $generated@@51) $generated@@50))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@52 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 Int) ($generated@@61 Int) ) (!  (=> (and (and (<= 0 $generated@@61) (< $generated@@61 $generated@@60)) (< $generated@@61 ($generated@@17 $generated@@59))) (= ($generated@@57 ($generated@@58 $generated@@59 $generated@@60) $generated@@61) ($generated@@57 $generated@@59 $generated@@61)))
 :weight 25
 :pattern ( ($generated@@57 ($generated@@58 $generated@@59 $generated@@60) $generated@@61))
 :pattern ( ($generated@@57 $generated@@59 $generated@@61) ($generated@@58 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 Int) ) (!  (=> (and (<= 0 $generated@@63) (<= $generated@@63 ($generated@@17 $generated@@62))) (= ($generated@@17 ($generated@@49 $generated@@62 $generated@@63)) (- ($generated@@17 $generated@@62) $generated@@63)))
 :pattern ( ($generated@@17 ($generated@@49 $generated@@62 $generated@@63)))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@64 $generated@@65 $generated@@66)  (and (= ($generated@@17 $generated@@65) ($generated@@17 $generated@@66)) (forall (($generated@@67 Int) ) (!  (=> (and (<= 0 $generated@@67) (< $generated@@67 ($generated@@17 $generated@@65))) (= ($generated@@57 $generated@@65 $generated@@67) ($generated@@57 $generated@@66 $generated@@67)))
 :pattern ( ($generated@@57 $generated@@65 $generated@@67))
 :pattern ( ($generated@@57 $generated@@66 $generated@@67))
))))
 :pattern ( ($generated@@64 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 ($generated@@25 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@25 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 Int) ) (!  (=> (and (<= 0 $generated@@73) (< $generated@@73 ($generated@@17 $generated@@72))) (< ($generated@@71 ($generated@@58 $generated@@72 $generated@@73)) ($generated@@71 $generated@@72)))
 :pattern ( ($generated@@71 ($generated@@58 $generated@@72 $generated@@73)))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 Int) ) (!  (=> (and (< 0 $generated@@75) (<= $generated@@75 ($generated@@17 $generated@@74))) (< ($generated@@71 ($generated@@49 $generated@@74 $generated@@75)) ($generated@@71 $generated@@74)))
 :pattern ( ($generated@@71 ($generated@@49 $generated@@74 $generated@@75)))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@76 ($generated@@68 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@77 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@76 ($generated@@68 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@19 $generated@@82 $generated@@83) (=> ($generated@@76 $generated@@84 $generated@@85 $generated@@82) ($generated@@76 $generated@@84 $generated@@85 $generated@@83)))
 :pattern ( ($generated@@19 $generated@@82 $generated@@83) ($generated@@76 $generated@@84 $generated@@85 $generated@@82))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (!  (=> ($generated@@19 $generated@@86 $generated@@87) (=> ($generated@@77 $generated@@90 $generated@@88 $generated@@89 $generated@@86) ($generated@@77 $generated@@90 $generated@@88 $generated@@89 $generated@@87)))
 :pattern ( ($generated@@19 $generated@@86 $generated@@87) ($generated@@77 $generated@@90 $generated@@88 $generated@@89 $generated@@86))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 Int) ($generated@@93 Int) ) (!  (=> (and (and (<= 0 $generated@@92) (<= 0 $generated@@93)) (< $generated@@93 (- ($generated@@17 $generated@@91) $generated@@92))) (= ($generated@@57 ($generated@@49 $generated@@91 $generated@@92) $generated@@93) ($generated@@57 $generated@@91 (+ $generated@@93 $generated@@92))))
 :weight 25
 :pattern ( ($generated@@57 ($generated@@49 $generated@@91 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> ($generated@@64 $generated@@94 $generated@@95) (= $generated@@94 $generated@@95))
 :pattern ( ($generated@@64 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 Int) ) (!  (=> (and (<= 0 $generated@@97) (<= $generated@@97 ($generated@@17 $generated@@96))) (= ($generated@@17 ($generated@@58 $generated@@96 $generated@@97)) $generated@@97))
 :pattern ( ($generated@@17 ($generated@@58 $generated@@96 $generated@@97)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (or (not (= $generated@@98 $generated@@100)) (not true)) (=> (and ($generated@@19 $generated@@98 $generated@@99) ($generated@@19 $generated@@99 $generated@@100)) ($generated@@19 $generated@@98 $generated@@100)))
 :pattern ( ($generated@@19 $generated@@98 $generated@@99) ($generated@@19 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@101 ($generated@@68 $generated@@105 $generated@@103) $generated@@104) ($generated@@102 $generated@@105 $generated@@103 $generated@@104))
 :pattern ( ($generated@@101 ($generated@@68 $generated@@105 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (<= 0 ($generated@@17 $generated@@106))
 :pattern ( ($generated@@17 $generated@@106))
)))
(assert (= ($generated@@1 $generated@@107) 7))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@77 $generated@@107 $generated@@109 ($generated@@108 $generated@@110) $generated@@111) (forall (($generated@@112 Int) ) (!  (=> (and (<= 0 $generated@@112) (< $generated@@112 ($generated@@17 $generated@@109))) ($generated@@76 ($generated@@57 $generated@@109 $generated@@112) $generated@@110 $generated@@111))
 :pattern ( ($generated@@57 $generated@@109 $generated@@112))
)))
 :pattern ( ($generated@@77 $generated@@107 $generated@@109 ($generated@@108 $generated@@110) $generated@@111))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 ($generated@@108 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@115 ($generated@@108 $generated@@116)) $generated)
 :pattern ( ($generated@@108 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@25 $generated@@118 ($generated@@68 $generated@@118 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@68 $generated@@118 $generated@@117))
)))
(assert  (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@119 $generated@@122 $generated@@123 $generated@@124 ($generated@@121 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@127 $generated@@128) $generated@@125)
 :weight 0
)) (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@119 $generated@@129 $generated@@130 $generated@@131 ($generated@@121 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@119 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@119 $generated@@138 $generated@@139 $generated@@140 ($generated@@121 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@119 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 Bool) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@6 ($generated@@119 $generated@@23 $generated@@21 $generated@@2 ($generated@@120 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))  (=> (and (or (not (= $generated@@151 $generated@@147)) (not true)) ($generated@@6 ($generated@@25 $generated@@2 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@148 $generated@@151) $generated@@149)))) $generated@@150))
 :pattern ( ($generated@@119 $generated@@23 $generated@@21 $generated@@2 ($generated@@120 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> ($generated@@101 $generated@@153 ($generated@@108 $generated@@154)) (and (= ($generated@@68 $generated@@107 ($generated@@25 $generated@@107 $generated@@153)) $generated@@153) ($generated@@102 $generated@@107 ($generated@@25 $generated@@107 $generated@@153) ($generated@@108 $generated@@154))))
 :pattern ( ($generated@@101 $generated@@153 ($generated@@108 $generated@@154)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 Int) ($generated@@157 Int) ) (!  (=> (and (and (<= 0 $generated@@156) (<= $generated@@156 $generated@@157)) (< $generated@@157 ($generated@@17 $generated@@155))) (= ($generated@@57 ($generated@@49 $generated@@155 $generated@@156) (- $generated@@157 $generated@@156)) ($generated@@57 $generated@@155 $generated@@157)))
 :weight 25
 :pattern ( ($generated@@57 $generated@@155 $generated@@157) ($generated@@49 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 Int) ($generated@@160 Int) ) (!  (=> (and (and (<= 0 $generated@@159) (<= 0 $generated@@160)) (<= (+ $generated@@159 $generated@@160) ($generated@@17 $generated@@158))) (= ($generated@@49 ($generated@@49 $generated@@158 $generated@@159) $generated@@160) ($generated@@49 $generated@@158 (+ $generated@@159 $generated@@160))))
 :pattern ( ($generated@@49 ($generated@@49 $generated@@158 $generated@@159) $generated@@160))
)))
(assert (forall (($generated@@161 Int) ) (! (= ($generated@@68 $generated@@3 ($generated@@7 ($generated@@52 $generated@@161))) ($generated@@54 $generated@@22 ($generated@@68 $generated@@3 ($generated@@7 $generated@@161))))
 :pattern ( ($generated@@68 $generated@@3 ($generated@@7 ($generated@@52 $generated@@161))))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@68 $generated@@163 ($generated@@54 $generated@@163 $generated@@162)) ($generated@@54 $generated@@22 ($generated@@68 $generated@@163 $generated@@162)))
 :pattern ( ($generated@@68 $generated@@163 ($generated@@54 $generated@@163 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= ($generated@@17 $generated@@164) 0) (= $generated@@164 $generated@@18))
 :pattern ( ($generated@@17 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 Int) ) (!  (=> (= $generated@@166 0) (= ($generated@@58 $generated@@165 $generated@@166) $generated@@18))
 :pattern ( ($generated@@58 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@102 $generated@@107 $generated@@167 ($generated@@108 $generated@@168)) (forall (($generated@@169 Int) ) (!  (=> (and (<= 0 $generated@@169) (< $generated@@169 ($generated@@17 $generated@@167))) ($generated@@101 ($generated@@57 $generated@@167 $generated@@169) $generated@@168))
 :pattern ( ($generated@@57 $generated@@167 $generated@@169))
)))
 :pattern ( ($generated@@102 $generated@@107 $generated@@167 ($generated@@108 $generated@@168)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () Bool)
(declare-fun $generated@@171 () Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@187 true))
(let (($generated@@188  (=> (and (not $generated@@170) (= (ControlFlow 0 14) 12)) $generated@@187)))
(let (($generated@@189  (=> (and $generated@@170 (= (ControlFlow 0 13) 12)) $generated@@187)))
(let (($generated@@190  (=> (not $generated@@171) (and (=> (= (ControlFlow 0 15) 13) $generated@@189) (=> (= (ControlFlow 0 15) 14) $generated@@188)))))
(let (($generated@@191  (=> (and (and $generated@@170 (not ($generated@@64 $generated@@172 $generated@@18))) (= $generated@@173 (ite $generated@@170 $generated@@172 $generated@@18))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (and (<= 0 ($generated@@52 0)) (<= ($generated@@52 0) ($generated@@17 $generated@@172)))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@64 ($generated@@58 $generated@@172 ($generated@@52 0)) $generated@@18)) (=> ($generated@@64 ($generated@@58 $generated@@172 ($generated@@52 0)) $generated@@18) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 ($generated@@52 1)) (<= ($generated@@52 1) ($generated@@17 $generated@@172)))) (=> (and (<= 0 ($generated@@52 1)) (<= ($generated@@52 1) ($generated@@17 $generated@@172))) (=> (= $generated@@174 ($generated@@49 $generated@@172 ($generated@@52 1))) (=> (and (= $generated@@175 ($generated@@6 ($generated@@54 $generated@@2 ($generated@@5 true)))) (= (ControlFlow 0 4) (- 0 3))) (< ($generated@@71 (ite $generated@@175 $generated@@174 $generated@@18)) ($generated@@71 $generated@@173))))))))))))
(let (($generated@@192 true))
(let (($generated@@193  (and (=> (= (ControlFlow 0 8) 2) $generated@@192) (=> (= (ControlFlow 0 8) 4) $generated@@191))))
(let (($generated@@194  (=> (and (not $generated@@170) (= (ControlFlow 0 10) 8)) $generated@@193)))
(let (($generated@@195  (=> (and $generated@@170 (= (ControlFlow 0 9) 8)) $generated@@193)))
(let (($generated@@196  (=> $generated@@171 (and (=> (= (ControlFlow 0 11) 9) $generated@@195) (=> (= (ControlFlow 0 11) 10) $generated@@194)))))
(let (($generated@@197  (and (=> (= (ControlFlow 0 16) 15) $generated@@190) (=> (= (ControlFlow 0 16) 11) $generated@@196))))
(let (($generated@@198 true))
(let (($generated@@199  (=> (and (and (and ($generated@@102 $generated@@107 $generated@@172 ($generated@@108 $generated@@176)) ($generated@@77 $generated@@107 $generated@@172 ($generated@@108 $generated@@176) $generated@@177)) (not false)) (and (and (forall (($generated@@200 T@U) ) (!  (=> (and (or (not (= $generated@@200 $generated@@178)) (not true)) ($generated@@6 ($generated@@25 $generated@@2 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@177 $generated@@200) $generated@@0)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@177 $generated@@200) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@177 $generated@@200)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@177 $generated@@200))
)) ($generated@@19 $generated@@177 $generated@@177)) (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (or (not (= $generated@@201 $generated@@178)) (not true)) ($generated@@6 ($generated@@25 $generated@@2 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@177 $generated@@201) $generated@@0)))) (or (= ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@177 $generated@@201) $generated@@202) ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@177 $generated@@201) $generated@@202)) ($generated@@6 ($generated@@119 $generated@@23 $generated@@21 $generated@@2 $generated@@179 $generated@@201 $generated@@202))))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@177 $generated@@201) $generated@@202))
)) (<= ($generated@@71 (ite $generated@@170 $generated@@172 $generated@@18)) ($generated@@71 $generated@@180))))) (and (=> (= (ControlFlow 0 17) 1) $generated@@198) (=> (= (ControlFlow 0 17) 16) $generated@@197)))))
(let (($generated@@203  (=> (= $generated@@179 ($generated@@120 $generated@@178 $generated@@177 $generated@@0 false)) (=> (and (= $generated@@180 (ite $generated@@181 $generated@@182 $generated@@18)) (= (ControlFlow 0 18) 17)) $generated@@199))))
(let (($generated@@204  (=> (and (and ($generated@@183 $generated@@177) ($generated@@184 $generated@@177)) (and ($generated@@102 $generated@@107 $generated@@182 ($generated@@108 $generated@@176)) ($generated@@77 $generated@@107 $generated@@182 ($generated@@108 $generated@@176) $generated@@177))) (=> (and (and (and ($generated@@102 $generated@@107 $generated@@185 ($generated@@108 $generated@@176)) ($generated@@77 $generated@@107 $generated@@185 ($generated@@108 $generated@@176) $generated@@177)) true) (and (= 0 $generated@@186) (= (ControlFlow 0 19) 18))) $generated@@203))))
$generated@@204))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
