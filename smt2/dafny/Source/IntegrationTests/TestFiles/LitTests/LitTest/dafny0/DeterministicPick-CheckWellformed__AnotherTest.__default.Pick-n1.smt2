(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) T@U)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@33 () Int)
(declare-fun $generated@@34 (T@U T@U T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@90 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@94 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@19 T@U) ($generated@@20 T@U) ) (! ($generated@@18 ($generated@@17 $generated@@19 $generated@@20) $generated@@20)
 :pattern ( ($generated@@17 $generated@@19 $generated@@20))
)))
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ($generated@@23 T@U) ) (!  (=> ($generated@@18 $generated@@21 $generated@@23) ($generated@@18 ($generated@@17 $generated@@21 $generated@@22) $generated@@23))
 :pattern ( ($generated@@17 $generated@@21 $generated@@22) ($generated@@18 $generated@@21 $generated@@23))
)))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (! (= ($generated@@18 ($generated@@17 $generated@@24 $generated@@25) $generated@@26)  (or (= $generated@@26 $generated@@25) ($generated@@18 $generated@@24 $generated@@26)))
 :pattern ( ($generated@@18 ($generated@@17 $generated@@24 $generated@@25) $generated@@26))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@30) ($generated@@18 $generated@@30 ($generated@@27 $generated@@29 $generated@@30)))
 :pattern ( ($generated@@27 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ) (!  (not ($generated@@18 $generated@@31 $generated@@32))
 :pattern ( ($generated@@18 $generated@@31 $generated@@32))
)))
(assert (= ($generated@@1 $generated@@38) 3))
(assert  (=> (<= 0 $generated@@33) (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> (and (or ($generated@@36 $generated@@45 $generated@@46) (and (< 0 $generated@@33) (and (and ($generated@@37 $generated@@38 $generated@@46 ($generated@@39 $generated@@45)) ($generated@@40 $generated@@38 $generated@@46 ($generated@@39 $generated@@45) $generated@@44)) (exists (($generated@@47 T@U) ) (!  (and ($generated@@41 $generated@@47 $generated@@45) (and ($generated@@18 $generated@@46 $generated@@47) ($generated@@42 $generated@@46 ($generated@@17 $generated@@31 $generated@@47))))
 :pattern ( ($generated@@17 $generated@@31 $generated@@47))
 :pattern ( ($generated@@18 $generated@@46 $generated@@47))
))))) ($generated@@43 $generated@@44)) ($generated@@34 ($generated@@35 $generated@@45 $generated@@46) $generated@@45 $generated@@44))
 :pattern ( ($generated@@34 ($generated@@35 $generated@@45 $generated@@46) $generated@@45 $generated@@44))
))))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert  (=> (<= 0 $generated@@33) (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (or ($generated@@36 $generated@@51 ($generated@@48 $generated@@38 $generated@@53)) (and (< 0 $generated@@33) (and (and ($generated@@43 $generated@@52) ($generated@@37 $generated@@38 $generated@@53 ($generated@@39 $generated@@51))) (exists (($generated@@54 T@U) ) (!  (and ($generated@@41 $generated@@54 $generated@@51) (and ($generated@@18 ($generated@@48 $generated@@38 $generated@@53) $generated@@54) ($generated@@42 $generated@@53 ($generated@@17 $generated@@31 $generated@@54))))
 :pattern ( ($generated@@17 $generated@@31 $generated@@54))
 :pattern ( ($generated@@18 $generated@@53 $generated@@54))
))))) (and ($generated@@28 $generated@@51 ($generated@@48 $generated@@38 $generated@@53)) (= ($generated@@35 $generated@@51 ($generated@@48 $generated@@38 $generated@@53)) (let (($generated@@55 ($generated@@27 $generated@@51 ($generated@@48 $generated@@38 $generated@@53))))
$generated@@55))))
 :weight 3
 :pattern ( ($generated@@35 $generated@@51 ($generated@@48 $generated@@38 $generated@@53)) ($generated@@43 $generated@@52))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@57 $generated@@59 ($generated@@56 $generated@@59 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@56 $generated@@59 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@60 ($generated@@39 $generated@@61)) (forall (($generated@@62 T@U) ) (!  (=> ($generated@@18 $generated@@60 $generated@@62) ($generated@@41 $generated@@62 $generated@@61))
 :pattern ( ($generated@@18 $generated@@60 $generated@@62))
)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@60 ($generated@@39 $generated@@61)))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@34 ($generated@@57 $generated@@66 $generated@@63) $generated@@64 $generated@@65) ($generated@@40 $generated@@66 $generated@@63 $generated@@64 $generated@@65))
 :pattern ( ($generated@@34 ($generated@@57 $generated@@66 $generated@@63) $generated@@64 $generated@@65))
)))
(assert  (=> (<= 0 $generated@@33) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> (or ($generated@@36 $generated@@67 $generated@@68) (and (< 0 $generated@@33) (and ($generated@@37 $generated@@38 $generated@@68 ($generated@@39 $generated@@67)) (exists (($generated@@69 T@U) ) (!  (and ($generated@@41 $generated@@69 $generated@@67) (and ($generated@@18 $generated@@68 $generated@@69) ($generated@@42 $generated@@68 ($generated@@17 $generated@@31 $generated@@69))))
 :pattern ( ($generated@@17 $generated@@31 $generated@@69))
 :pattern ( ($generated@@18 $generated@@68 $generated@@69))
))))) ($generated@@41 ($generated@@35 $generated@@67 $generated@@68) $generated@@67))
 :pattern ( ($generated@@35 $generated@@67 $generated@@68))
))))
(assert  (=> (<= 0 $generated@@33) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or ($generated@@36 $generated@@70 $generated@@72) (and (< 0 $generated@@33) (and (and ($generated@@43 $generated@@71) ($generated@@37 $generated@@38 $generated@@72 ($generated@@39 $generated@@70))) (exists (($generated@@73 T@U) ) (!  (and ($generated@@41 $generated@@73 $generated@@70) (and ($generated@@18 $generated@@72 $generated@@73) ($generated@@42 $generated@@72 ($generated@@17 $generated@@31 $generated@@73))))
 :pattern ( ($generated@@17 $generated@@31 $generated@@73))
 :pattern ( ($generated@@18 $generated@@72 $generated@@73))
))))) (and ($generated@@28 $generated@@70 $generated@@72) (= ($generated@@35 $generated@@70 $generated@@72) (let (($generated@@74 ($generated@@27 $generated@@70 $generated@@72)))
$generated@@74))))
 :pattern ( ($generated@@35 $generated@@70 $generated@@72) ($generated@@43 $generated@@71))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@42 $generated@@75 $generated@@76) (= $generated@@75 $generated@@76))
 :pattern ( ($generated@@42 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@41 ($generated@@57 $generated@@79 $generated@@77) $generated@@78) ($generated@@37 $generated@@79 $generated@@77 $generated@@78))
 :pattern ( ($generated@@41 ($generated@@57 $generated@@79 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@40 $generated@@38 $generated@@80 ($generated@@39 $generated@@81) $generated@@82) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@18 $generated@@80 $generated@@83) ($generated@@34 $generated@@83 $generated@@81 $generated@@82))
 :pattern ( ($generated@@18 $generated@@80 $generated@@83))
)))
 :pattern ( ($generated@@40 $generated@@38 $generated@@80 ($generated@@39 $generated@@81) $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 ($generated@@39 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@39 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 ($generated@@39 $generated@@87)) $generated)
 :pattern ( ($generated@@39 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@56 $generated@@89 ($generated@@57 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@57 $generated@@89 $generated@@88))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@90 $generated@@101 $generated@@102 $generated@@103 ($generated@@97 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@106 $generated@@107) $generated@@104)
 :weight 0
)) (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@90 $generated@@108 $generated@@109 $generated@@110 ($generated@@97 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@90 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@90 $generated@@117 $generated@@118 $generated@@119 ($generated@@97 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@90 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 4)) (= ($generated@@1 $generated@@92) 5)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@94 $generated@@126 $generated@@127 ($generated@@98 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@128) $generated@@130) $generated@@128)
 :weight 0
))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@94 $generated@@131 $generated@@132 ($generated@@98 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@94 $generated@@131 $generated@@132 $generated@@134 $generated@@136)))
 :weight 0
))) (= ($generated@@1 $generated@@95) 6)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@96 $generated@@137 $generated@@138)) 7))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@96 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@100 ($generated@@96 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@96 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Bool) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@6 ($generated@@90 $generated@@91 $generated@@92 $generated@@2 ($generated@@93 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))  (=> (and (or (not (= $generated@@147 $generated@@143)) (not true)) ($generated@@6 ($generated@@56 $generated@@2 ($generated@@94 $generated@@92 $generated@@95 ($generated@@94 $generated@@91 ($generated@@96 $generated@@92 $generated@@95) $generated@@144 $generated@@147) $generated@@145)))) $generated@@146))
 :pattern ( ($generated@@90 $generated@@91 $generated@@92 $generated@@2 ($generated@@93 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> ($generated@@41 $generated@@149 ($generated@@39 $generated@@150)) (and (= ($generated@@57 $generated@@38 ($generated@@56 $generated@@38 $generated@@149)) $generated@@149) ($generated@@37 $generated@@38 ($generated@@56 $generated@@38 $generated@@149) ($generated@@39 $generated@@150))))
 :pattern ( ($generated@@41 $generated@@149 ($generated@@39 $generated@@150)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@42 $generated@@151 $generated@@152) (forall (($generated@@153 T@U) ) (! (= ($generated@@18 $generated@@151 $generated@@153) ($generated@@18 $generated@@152 $generated@@153))
 :pattern ( ($generated@@18 $generated@@151 $generated@@153))
 :pattern ( ($generated@@18 $generated@@152 $generated@@153))
)))
 :pattern ( ($generated@@42 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@57 $generated@@155 ($generated@@48 $generated@@155 $generated@@154)) ($generated@@48 $generated@@95 ($generated@@57 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@57 $generated@@155 ($generated@@48 $generated@@155 $generated@@154)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@165  (and (=> (= (ControlFlow 0 3) (- 0 4)) (exists (($generated@@166 T@U) )  (and ($generated@@41 $generated@@166 $generated@@156) ($generated@@18 $generated@@157 $generated@@166)))) (=> (exists (($generated@@167 T@U) )  (and ($generated@@41 $generated@@167 $generated@@156) ($generated@@18 $generated@@157 $generated@@167))) (=> (and (and (and ($generated@@41 $generated@@158 $generated@@156) ($generated@@34 $generated@@158 $generated@@156 $generated@@159)) ($generated@@18 $generated@@157 $generated@@158)) (and (and ($generated@@41 $generated@@160 $generated@@156) ($generated@@34 $generated@@160 $generated@@156 $generated@@159)) (and ($generated@@18 $generated@@157 $generated@@160) (= (ControlFlow 0 3) (- 0 2))))) (= $generated@@158 $generated@@160))))))
(let (($generated@@168  (=> (and (not (and ($generated@@41 $generated@@158 $generated@@156) ($generated@@34 $generated@@158 $generated@@156 $generated@@159))) (= (ControlFlow 0 6) 3)) $generated@@165)))
(let (($generated@@169  (=> (and (and ($generated@@41 $generated@@158 $generated@@156) ($generated@@34 $generated@@158 $generated@@156 $generated@@159)) (= (ControlFlow 0 5) 3)) $generated@@165)))
(let (($generated@@170 true))
(let (($generated@@171  (=> (= $generated@@161 ($generated@@93 $generated@@162 $generated@@159 $generated@@0 false)) (=> (and (and ($generated@@41 $generated@@163 $generated@@156) ($generated@@34 $generated@@163 $generated@@156 $generated@@159)) (and ($generated@@18 $generated@@157 $generated@@163) ($generated@@42 $generated@@157 ($generated@@17 $generated@@31 $generated@@163)))) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@170) (=> (= (ControlFlow 0 7) 5) $generated@@169)) (=> (= (ControlFlow 0 7) 6) $generated@@168))))))
(let (($generated@@172  (=> (and (and (and ($generated@@43 $generated@@159) ($generated@@164 $generated@@159)) ($generated@@37 $generated@@38 $generated@@157 ($generated@@39 $generated@@156))) (and (= 0 $generated@@33) (= (ControlFlow 0 8) 7))) $generated@@171)))
$generated@@172)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
