(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 () Int)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@2) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@30 $generated@@2) $generated@@3))
(assert (= ($generated@@12 $generated@@32) 3))
(assert (forall (($generated@@36 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@36 $generated@@33)  (or (= $generated@@36 $generated@@34) (= ($generated@@35 $generated@@36) $generated@@33)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 $generated@@33))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@37 $generated@@32 $generated@@40 $generated@@38 $generated@@41) ($generated@@37 $generated@@32 $generated@@40 $generated@@39 $generated@@41))
 :pattern ( ($generated@@37 $generated@@32 $generated@@40 $generated@@38 $generated@@41))
 :pattern ( ($generated@@37 $generated@@32 $generated@@40 $generated@@39 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@37 $generated@@32 $generated@@43 $generated@@42 $generated@@44) ($generated@@37 $generated@@32 $generated@@43 $generated@@33 $generated@@44))
 :pattern ( ($generated@@37 $generated@@32 $generated@@43 $generated@@42 $generated@@44))
 :pattern ( ($generated@@37 $generated@@32 $generated@@43 $generated@@33 $generated@@44))
)))
(assert (= ($generated@@28 $generated@@45) 0))
(assert (= ($generated@@46 $generated@@6 $generated@@11) $generated@@45))
(assert ($generated@@47 $generated@@45))
(assert  (and (and (and (and (and (and (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@49 $generated@@56 $generated@@57 ($generated@@53 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@60) $generated@@58)
 :weight 0
)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (= $generated@@65 $generated@@66) (= ($generated@@49 $generated@@61 $generated@@62 ($generated@@53 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@66) ($generated@@49 $generated@@61 $generated@@62 $generated@@64 $generated@@66)))
 :weight 0
))) (= ($generated@@12 $generated@@50) 4)) (= ($generated@@12 $generated@@51) 5)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (= ($generated@@12 ($generated@@52 $generated@@67 $generated@@68)) 6))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@54 ($generated@@52 $generated@@69 $generated@@70)) $generated@@69)
 :pattern ( ($generated@@52 $generated@@69 $generated@@70))
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@52 $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@37 $generated@@32 $generated@@73 $generated@@39 $generated@@74)  (or (= $generated@@73 $generated@@34) ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@32 ($generated@@52 $generated@@50 $generated@@51) $generated@@74 $generated@@73) $generated@@2)))))
 :pattern ( ($generated@@37 $generated@@32 $generated@@73 $generated@@39 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@37 $generated@@32 $generated@@75 $generated@@33 $generated@@76)  (or (= $generated@@75 $generated@@34) ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@32 ($generated@@52 $generated@@50 $generated@@51) $generated@@76 $generated@@75) $generated@@2)))))
 :pattern ( ($generated@@37 $generated@@32 $generated@@75 $generated@@33 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 ($generated@@48 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@48 $generated@@79 $generated@@78))
)))
(assert (= ($generated@@12 $generated@@80) 7))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@31 $generated@@80 $generated@@84 ($generated@@81 $generated@@85)) (forall (($generated@@86 T@U) ) (!  (=> ($generated@@82 $generated@@84 $generated@@86) ($generated@@83 $generated@@86 $generated@@85))
 :pattern ( ($generated@@82 $generated@@84 $generated@@86))
)))
 :pattern ( ($generated@@31 $generated@@80 $generated@@84 ($generated@@81 $generated@@85)))
)))
(assert ($generated@@47 $generated@@2))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@87 ($generated@@77 $generated@@91 $generated@@88) $generated@@89 $generated@@90) ($generated@@37 $generated@@91 $generated@@88 $generated@@89 $generated@@90))
 :pattern ( ($generated@@87 ($generated@@77 $generated@@91 $generated@@88) $generated@@89 $generated@@90))
)))
(assert  (=> (<= 0 $generated@@92) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@95 $generated@@96 $generated@@97) (and (< 0 $generated@@92) (and ($generated@@94 $generated@@96) (and (or (not (= $generated@@97 $generated@@34)) (not true)) (and ($generated@@31 $generated@@32 $generated@@97 $generated@@42) ($generated@@37 $generated@@32 $generated@@97 $generated@@42 $generated@@96)))))) (= ($generated@@93 $generated@@96 $generated@@97) ($generated@@82 ($generated@@48 $generated@@80 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@32 ($generated@@52 $generated@@50 $generated@@51) $generated@@96 $generated@@97) $generated@@45)) ($generated@@77 $generated@@32 $generated@@97))))
 :pattern ( ($generated@@93 $generated@@96 $generated@@97) ($generated@@94 $generated@@96))
))))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@83 $generated@@98 $generated@@39) (and (= ($generated@@77 $generated@@32 ($generated@@48 $generated@@32 $generated@@98)) $generated@@98) ($generated@@31 $generated@@32 ($generated@@48 $generated@@32 $generated@@98) $generated@@39)))
 :pattern ( ($generated@@83 $generated@@98 $generated@@39))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@83 $generated@@99 $generated@@38) (and (= ($generated@@77 $generated@@32 ($generated@@48 $generated@@32 $generated@@99)) $generated@@99) ($generated@@31 $generated@@32 ($generated@@48 $generated@@32 $generated@@99) $generated@@38)))
 :pattern ( ($generated@@83 $generated@@99 $generated@@38))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@83 $generated@@100 $generated@@33) (and (= ($generated@@77 $generated@@32 ($generated@@48 $generated@@32 $generated@@100)) $generated@@100) ($generated@@31 $generated@@32 ($generated@@48 $generated@@32 $generated@@100) $generated@@33)))
 :pattern ( ($generated@@83 $generated@@100 $generated@@33))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@83 $generated@@101 $generated@@42) (and (= ($generated@@77 $generated@@32 ($generated@@48 $generated@@32 $generated@@101)) $generated@@101) ($generated@@31 $generated@@32 ($generated@@48 $generated@@32 $generated@@101) $generated@@42)))
 :pattern ( ($generated@@83 $generated@@101 $generated@@42))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@102 $generated@@38)  (and ($generated@@31 $generated@@32 $generated@@102 $generated@@39) (or (not (= $generated@@102 $generated@@34)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@102 $generated@@38))
 :pattern ( ($generated@@31 $generated@@32 $generated@@102 $generated@@39))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@103 $generated@@42)  (and ($generated@@31 $generated@@32 $generated@@103 $generated@@33) (or (not (= $generated@@103 $generated@@34)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@103 $generated@@42))
 :pattern ( ($generated@@31 $generated@@32 $generated@@103 $generated@@33))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (and ($generated@@94 $generated@@104) (and (or (not (= $generated@@105 $generated@@34)) (not true)) (= ($generated@@35 $generated@@105) $generated@@33))) ($generated@@31 $generated@@80 ($generated@@48 $generated@@80 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@32 ($generated@@52 $generated@@50 $generated@@51) $generated@@104 $generated@@105) $generated@@45)) ($generated@@81 $generated@@38)))
 :pattern ( ($generated@@48 $generated@@80 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@32 ($generated@@52 $generated@@50 $generated@@51) $generated@@104 $generated@@105) $generated@@45)))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and (and ($generated@@94 $generated@@106) (and (or (not (= $generated@@107 $generated@@34)) (not true)) (= ($generated@@35 $generated@@107) $generated@@33))) ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@32 ($generated@@52 $generated@@50 $generated@@51) $generated@@106 $generated@@107) $generated@@2)))) ($generated@@37 $generated@@80 ($generated@@48 $generated@@80 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@32 ($generated@@52 $generated@@50 $generated@@51) $generated@@106 $generated@@107) $generated@@45)) ($generated@@81 $generated@@38) $generated@@106))
 :pattern ( ($generated@@48 $generated@@80 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@32 ($generated@@52 $generated@@50 $generated@@51) $generated@@106 $generated@@107) $generated@@45)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (and (= ($generated@@108 ($generated@@46 $generated@@109 $generated@@110)) $generated@@109) (= ($generated@@30 ($generated@@46 $generated@@109 $generated@@110)) $generated@@110))
 :pattern ( ($generated@@46 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@83 $generated@@111 $generated) (and (= ($generated@@77 $generated@@13 ($generated@@48 $generated@@13 $generated@@111)) $generated@@111) ($generated@@31 $generated@@13 ($generated@@48 $generated@@13 $generated@@111) $generated)))
 :pattern ( ($generated@@83 $generated@@111 $generated))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@83 ($generated@@77 $generated@@114 $generated@@112) $generated@@113) ($generated@@31 $generated@@114 $generated@@112 $generated@@113))
 :pattern ( ($generated@@83 ($generated@@77 $generated@@114 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@37 $generated@@80 $generated@@115 ($generated@@81 $generated@@116) $generated@@117) (forall (($generated@@118 T@U) ) (!  (=> ($generated@@82 $generated@@115 $generated@@118) ($generated@@87 $generated@@118 $generated@@116 $generated@@117))
 :pattern ( ($generated@@82 $generated@@115 $generated@@118))
)))
 :pattern ( ($generated@@37 $generated@@80 $generated@@115 ($generated@@81 $generated@@116) $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! ($generated@@31 $generated@@32 $generated@@119 $generated@@39)
 :pattern ( ($generated@@31 $generated@@32 $generated@@119 $generated@@39))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@81 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@81 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@29 ($generated@@81 $generated@@122)) $generated@@1)
 :pattern ( ($generated@@81 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@48 $generated@@124 ($generated@@77 $generated@@124 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@77 $generated@@124 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> ($generated@@83 $generated@@125 ($generated@@81 $generated@@126)) (and (= ($generated@@77 $generated@@80 ($generated@@48 $generated@@80 $generated@@125)) $generated@@125) ($generated@@31 $generated@@80 ($generated@@48 $generated@@80 $generated@@125) ($generated@@81 $generated@@126))))
 :pattern ( ($generated@@83 $generated@@125 ($generated@@81 $generated@@126)))
)))
(assert (= ($generated@@29 $generated@@39) $generated@@4))
(assert (= ($generated@@127 $generated@@39) $generated@@9))
(assert (= ($generated@@29 $generated@@38) $generated@@5))
(assert (= ($generated@@127 $generated@@38) $generated@@9))
(assert (= ($generated@@29 $generated@@33) $generated@@7))
(assert (= ($generated@@127 $generated@@33) $generated@@10))
(assert (= ($generated@@29 $generated@@42) $generated@@8))
(assert (= ($generated@@127 $generated@@42) $generated@@10))
(assert  (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@128 $generated@@131 $generated@@132 $generated@@133 ($generated@@130 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@136 $generated@@137) $generated@@134)
 :weight 0
)) (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@128 $generated@@138 $generated@@139 $generated@@140 ($generated@@130 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@128 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@128 $generated@@147 $generated@@148 $generated@@149 ($generated@@130 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@128 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@17 ($generated@@128 $generated@@32 $generated@@50 $generated@@13 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@156)) (not true)) ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@32 ($generated@@52 $generated@@50 $generated@@51) $generated@@157 $generated@@160) $generated@@158)))) ($generated@@82 $generated@@159 ($generated@@77 $generated@@32 $generated@@160))))
 :pattern ( ($generated@@128 $generated@@32 $generated@@50 $generated@@13 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! ($generated@@37 $generated@@13 $generated@@163 $generated $generated@@162)
 :pattern ( ($generated@@37 $generated@@13 $generated@@163 $generated $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (! ($generated@@31 $generated@@13 $generated@@164 $generated)
 :pattern ( ($generated@@31 $generated@@13 $generated@@164 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@165 () Bool)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () Bool)
(declare-fun $generated@@170 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@171  (=> (and (and (= $generated@@165 ($generated@@17 ($generated@@128 $generated@@32 $generated@@50 $generated@@13 $generated@@166 $generated@@167 $generated@@45))) (= ($generated@@93 $generated@@168 $generated@@167) ($generated@@82 ($generated@@48 $generated@@80 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@32 ($generated@@52 $generated@@50 $generated@@51) $generated@@168 $generated@@167) $generated@@45)) ($generated@@77 $generated@@32 $generated@@167)))) (and ($generated@@31 $generated@@13 ($generated@@16 ($generated@@93 $generated@@168 $generated@@167)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@165)))
(let (($generated@@172 true))
(let (($generated@@173  (=> (and (= $generated@@166 ($generated@@129 $generated@@34 $generated@@168 $generated@@2 ($generated@@48 $generated@@80 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@32 ($generated@@52 $generated@@50 $generated@@51) $generated@@168 $generated@@167) $generated@@45)))) (= $generated@@169 ($generated@@17 ($generated@@128 $generated@@32 $generated@@50 $generated@@13 $generated@@166 $generated@@167 $generated@@45)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) $generated@@169) (=> $generated@@169 (and (=> (= (ControlFlow 0 4) 1) $generated@@172) (=> (= (ControlFlow 0 4) 3) $generated@@171)))))))
(let (($generated@@174  (=> (and ($generated@@94 $generated@@168) ($generated@@170 $generated@@168)) (=> (and (and (or (not (= $generated@@167 $generated@@34)) (not true)) (and ($generated@@31 $generated@@32 $generated@@167 $generated@@42) ($generated@@37 $generated@@32 $generated@@167 $generated@@42 $generated@@168))) (and (= 0 $generated@@92) (= (ControlFlow 0 6) 4))) $generated@@173))))
$generated@@174)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
