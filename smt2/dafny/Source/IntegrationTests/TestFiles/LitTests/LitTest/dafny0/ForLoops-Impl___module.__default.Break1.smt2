(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U T@U) Bool)
(declare-fun $generated@@0 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@1 () T@T)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 (T@T T@T) T@T)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (T@T T@U) T@U)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@17 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@18 (T@T) T@T)
(declare-fun $generated@@19 (T@T) T@T)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (Int Int) Int)
(declare-fun $generated@@62 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@64 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@8) 0) (= ($generated@@9 $generated@@10) 1)) (= ($generated@@9 $generated@@11) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@6 ($generated@@12 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@12 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@12 ($generated@@6 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@6 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@13 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@14 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@15 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@16 $generated@@25))
))) (forall (($generated@@26 T@T) ($generated@@27 T@T) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@0 $generated@@26 $generated@@27 ($generated@@17 $generated@@26 $generated@@27 $generated@@29 $generated@@30 $generated@@28) $generated@@30) $generated@@28)
 :weight 0
))) (forall (($generated@@31 T@T) ($generated@@32 T@T) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (or (= $generated@@35 $generated@@36) (= ($generated@@0 $generated@@31 $generated@@32 ($generated@@17 $generated@@31 $generated@@32 $generated@@34 $generated@@35 $generated@@33) $generated@@36) ($generated@@0 $generated@@31 $generated@@32 $generated@@34 $generated@@36)))
 :weight 0
))) (= ($generated@@9 $generated@@1) 3)) (= ($generated@@9 $generated@@2) 4)) (= ($generated@@9 $generated@@3) 5)) (forall (($generated@@37 T@T) ($generated@@38 T@T) ) (= ($generated@@9 ($generated@@4 $generated@@37 $generated@@38)) 6))) (forall (($generated@@39 T@T) ($generated@@40 T@T) ) (! (= ($generated@@18 ($generated@@4 $generated@@39 $generated@@40)) $generated@@39)
 :pattern ( ($generated@@4 $generated@@39 $generated@@40))
))) (forall (($generated@@41 T@T) ($generated@@42 T@T) ) (! (= ($generated@@19 ($generated@@4 $generated@@41 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@4 $generated@@41 $generated@@42))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated $generated@@43 $generated@@44) (forall (($generated@@45 T@U) ) (!  (=> ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@43 $generated@@45) $generated@@5))) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@44 $generated@@45) $generated@@5))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@44 $generated@@45) $generated@@5))
)))
 :pattern ( ($generated $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@47 Int) ) (! (= ($generated@@46 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 ($generated@@7 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@7 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@55 Int) ($generated@@56 Int) ) (! (= ($generated@@54 $generated@@55 $generated@@56) (div $generated@@55 $generated@@56))
 :pattern ( ($generated@@54 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (or (not (= $generated@@57 $generated@@59)) (not true)) (=> (and ($generated $generated@@57 $generated@@58) ($generated $generated@@58 $generated@@59)) ($generated $generated@@57 $generated@@59)))
 :pattern ( ($generated $generated@@57 $generated@@58) ($generated $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@7 $generated@@61 ($generated@@51 $generated@@61 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@51 $generated@@61 $generated@@60))
)))
(assert  (and (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@62 $generated@@65 $generated@@66 $generated@@67 ($generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@71 $generated@@68) $generated@@70 $generated@@71) $generated@@68)
 :weight 0
)) (and (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (or (= $generated@@77 $generated@@79) (= ($generated@@62 $generated@@72 $generated@@73 $generated@@74 ($generated@@64 $generated@@72 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@78 $generated@@75) $generated@@79 $generated@@80) ($generated@@62 $generated@@72 $generated@@73 $generated@@74 $generated@@76 $generated@@79 $generated@@80)))
 :weight 0
)) (forall (($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (or (= $generated@@87 $generated@@89) (= ($generated@@62 $generated@@81 $generated@@82 $generated@@83 ($generated@@64 $generated@@81 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@87 $generated@@84) $generated@@88 $generated@@89) ($generated@@62 $generated@@81 $generated@@82 $generated@@83 $generated@@85 $generated@@88 $generated@@89)))
 :weight 0
)))))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 Bool) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@6 ($generated@@62 $generated@@3 $generated@@1 $generated@@8 ($generated@@63 $generated@@90 $generated@@91 $generated@@92 $generated@@93) $generated@@94 $generated@@95))  (=> (and (or (not (= $generated@@94 $generated@@90)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@91 $generated@@94) $generated@@92)))) $generated@@93))
 :pattern ( ($generated@@62 $generated@@3 $generated@@1 $generated@@8 ($generated@@63 $generated@@90 $generated@@91 $generated@@92 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 Int) ) (! (= ($generated@@51 $generated@@10 ($generated@@13 ($generated@@46 $generated@@96))) ($generated@@48 $generated@@2 ($generated@@51 $generated@@10 ($generated@@13 $generated@@96))))
 :pattern ( ($generated@@51 $generated@@10 ($generated@@13 ($generated@@46 $generated@@96))))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@51 $generated@@98 ($generated@@48 $generated@@98 $generated@@97)) ($generated@@48 $generated@@2 ($generated@@51 $generated@@98 $generated@@97)))
 :pattern ( ($generated@@51 $generated@@98 ($generated@@48 $generated@@98 $generated@@97)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@99 () Int)
(declare-fun $generated@@100 () Int)
(declare-fun $generated@@101 () Bool)
(declare-fun $generated@@102 () Int)
(declare-fun $generated@@103 () Bool)
(declare-fun $generated@@104 () Int)
(declare-fun $generated@@105 () Int)
(declare-fun $generated@@106 () Int)
(declare-fun $generated@@107 () Int)
(declare-fun $generated@@108 () Int)
(declare-fun $generated@@109 () Int)
(declare-fun $generated@@110 () T@U)
(declare-fun $generated@@111 () T@U)
(declare-fun $generated@@112 () T@U)
(declare-fun $generated@@113 () Int)
(declare-fun $generated@@114 (T@U) Bool)
(declare-fun $generated@@115 (T@U) Bool)
(declare-fun $generated@@116 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 38) (let (($generated@@117 true))
(let (($generated@@118  (=> (and (or (not (= $generated@@99 $generated@@100)) (not true)) (= (ControlFlow 0 30) 27)) $generated@@117)))
(let (($generated@@119  (=> (= $generated@@99 $generated@@100) (and (=> (= (ControlFlow 0 28) (- 0 29)) (or (not (= ($generated@@46 2) 0)) (not true))) (=> (= (ControlFlow 0 28) 27) $generated@@117)))))
(let (($generated@@120  (=> (not $generated@@101) (and (=> (= (ControlFlow 0 31) 28) $generated@@119) (=> (= (ControlFlow 0 31) 30) $generated@@118)))))
(let (($generated@@121 true))
(let (($generated@@122  (=> (and (< $generated@@102 0) (= (ControlFlow 0 19) 16)) $generated@@121)))
(let (($generated@@123  (=> (<= 0 $generated@@102) (and (=> (= (ControlFlow 0 17) (- 0 18)) (or (not (= ($generated@@46 2) 0)) (not true))) (=> (= (ControlFlow 0 17) 16) $generated@@121)))))
(let (($generated@@124  (=> (not $generated@@103) (and (=> (= (ControlFlow 0 20) 17) $generated@@123) (=> (= (ControlFlow 0 20) 19) $generated@@122)))))
(let (($generated@@125  (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (not (= ($generated@@46 2) 0)) (not true))) (=> (= (ControlFlow 0 9) (- 0 8)) (= $generated@@100 ($generated@@54 $generated@@104 ($generated@@46 2)))))))
(let (($generated@@126  (=> (and (= $generated@@99 ($generated@@54 $generated@@104 ($generated@@46 2))) (= (ControlFlow 0 12) 9)) $generated@@125)))
(let (($generated@@127  (=> (and (= $generated@@99 $generated@@104) (= (ControlFlow 0 11) 9)) $generated@@125)))
(let (($generated@@128  (=> (or (not (= $generated@@99 ($generated@@54 $generated@@104 ($generated@@46 2)))) (not true)) (=> (and (and (= $generated@@105 (+ $generated@@102 1)) (= (ControlFlow 0 7) (- 0 6))) $generated@@103) (or (< $generated@@105 0) (< $generated@@99 ($generated@@54 $generated@@104 ($generated@@46 2))))))))
(let (($generated@@129  (=> (or (not (= $generated@@102 $generated@@99)) (not true)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (not (= ($generated@@46 2) 0)) (not true))) (=> (or (not (= ($generated@@46 2) 0)) (not true)) (and (=> (= (ControlFlow 0 13) 12) $generated@@126) (=> (= (ControlFlow 0 13) 7) $generated@@128)))))))
(let (($generated@@130  (=> (= $generated@@102 $generated@@99) (=> (and (= $generated@@106 (+ $generated@@100 1)) (= $generated@@107 (+ $generated@@99 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> $generated@@101 (= $generated@@107 $generated@@106))) (=> (=> $generated@@101 (= $generated@@107 $generated@@106)) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@101 (<= $generated@@106 ($generated@@54 $generated@@104 ($generated@@46 2)))))))))))
(let (($generated@@131  (=> $generated@@103 (and (=> (= (ControlFlow 0 15) 4) $generated@@130) (=> (= (ControlFlow 0 15) 13) $generated@@129)))))
(let (($generated@@132  (and (=> (= (ControlFlow 0 21) 20) $generated@@124) (=> (= (ControlFlow 0 21) 15) $generated@@131))))
(let (($generated@@133 true))
(let (($generated@@134  (=> (and (and (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@100)) (<= 0 $generated@@99)) (= $generated@@108 0)) (<= 0 $generated@@104)) $generated@@101) (<= (- 0 1) $generated@@102)) (= $generated@@109 (- 0 1))) (<= 0 $generated@@99)) (and (<= $generated@@109 $generated@@102) (<= $generated@@102 $generated@@99))) (and (and (=> $generated@@103 (or (< $generated@@102 0) (< $generated@@99 ($generated@@54 $generated@@104 ($generated@@46 2))))) (forall (($generated@@135 T@U) ) (!  (=> (and (or (not (= $generated@@135 $generated@@111)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@135) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@135) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@135)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@135))
))) (and ($generated $generated@@110 $generated@@110) (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (or (not (= $generated@@136 $generated@@111)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@136) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@136) $generated@@137) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@136) $generated@@137)) ($generated@@6 ($generated@@62 $generated@@3 $generated@@1 $generated@@8 $generated@@112 $generated@@136 $generated@@137))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@136) $generated@@137))
))))) (and (=> (= (ControlFlow 0 22) 2) $generated@@133) (=> (= (ControlFlow 0 22) 21) $generated@@132)))))
(let (($generated@@138  (=> (and (or (not (= $generated@@99 $generated@@104)) (not true)) (= $generated@@109 ($generated@@46 (- 0 1)))) (and (=> (= (ControlFlow 0 23) (- 0 25)) (<= $generated@@109 $generated@@99)) (=> (<= $generated@@109 $generated@@99) (and (=> (= (ControlFlow 0 23) (- 0 24)) (=> $generated@@103 (or (< $generated@@109 0) (< $generated@@99 ($generated@@54 $generated@@104 ($generated@@46 2)))))) (=> (=> $generated@@103 (or (< $generated@@109 0) (< $generated@@99 ($generated@@54 $generated@@104 ($generated@@46 2))))) (=> (= (ControlFlow 0 23) 22) $generated@@134))))))))
(let (($generated@@139  (=> $generated@@101 (and (=> (= (ControlFlow 0 26) 11) $generated@@127) (=> (= (ControlFlow 0 26) 23) $generated@@138)))))
(let (($generated@@140  (and (=> (= (ControlFlow 0 32) 31) $generated@@120) (=> (= (ControlFlow 0 32) 26) $generated@@139))))
(let (($generated@@141 true))
(let (($generated@@142  (=> (and (and (and (and (and (not false) (<= 0 $generated@@100)) (<= 0 $generated@@99)) (= $generated@@108 0)) (<= 0 $generated@@104)) (and (and (and (<= $generated@@108 $generated@@99) (<= $generated@@99 $generated@@104)) (=> $generated@@101 (= $generated@@99 $generated@@100))) (and (and (=> $generated@@101 (<= $generated@@100 ($generated@@54 $generated@@104 ($generated@@46 2)))) (forall (($generated@@143 T@U) ) (!  (=> (and (or (not (= $generated@@143 $generated@@111)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@143) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@143) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@143)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@143))
))) (and ($generated $generated@@110 $generated@@110) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (or (not (= $generated@@144 $generated@@111)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@144) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@144) $generated@@145) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@144) $generated@@145)) ($generated@@6 ($generated@@62 $generated@@3 $generated@@1 $generated@@8 $generated@@112 $generated@@144 $generated@@145))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@110 $generated@@144) $generated@@145))
)))))) (and (=> (= (ControlFlow 0 33) 1) $generated@@141) (=> (= (ControlFlow 0 33) 32) $generated@@140)))))
(let (($generated@@146  (=> (= $generated@@112 ($generated@@63 $generated@@111 $generated@@110 $generated@@5 false)) (=> (and (= $generated@@113 ($generated@@46 0)) (= $generated@@108 ($generated@@46 0))) (and (=> (= (ControlFlow 0 34) (- 0 37)) (<= $generated@@108 $generated@@104)) (=> (<= $generated@@108 $generated@@104) (and (=> (= (ControlFlow 0 34) (- 0 36)) (=> $generated@@101 (= $generated@@108 $generated@@113))) (=> (=> $generated@@101 (= $generated@@108 $generated@@113)) (and (=> (= (ControlFlow 0 34) (- 0 35)) (=> $generated@@101 (<= $generated@@113 ($generated@@54 $generated@@104 ($generated@@46 2))))) (=> (=> $generated@@101 (<= $generated@@113 ($generated@@54 $generated@@104 ($generated@@46 2)))) (=> (= (ControlFlow 0 34) 33) $generated@@142)))))))))))
(let (($generated@@147  (=> (and (and (and ($generated@@114 $generated@@110) ($generated@@115 $generated@@110)) (<= ($generated@@46 0) $generated@@104)) (and (= 0 $generated@@116) (= (ControlFlow 0 38) 34))) $generated@@146)))
$generated@@147))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
