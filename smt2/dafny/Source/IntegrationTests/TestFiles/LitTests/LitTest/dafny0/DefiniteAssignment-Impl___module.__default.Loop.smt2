(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U T@U) Bool)
(declare-fun $generated@@0 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@1 () T@T)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 (T@T T@T) T@T)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (T@T T@U) T@U)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@17 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@18 (T@T) T@T)
(declare-fun $generated@@19 (T@T) T@T)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@T T@U T@U) Bool)
(declare-fun $generated@@79 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@81 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@113 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@8) 0) (= ($generated@@9 $generated@@10) 1)) (= ($generated@@9 $generated@@11) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@6 ($generated@@12 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@12 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@12 ($generated@@6 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@6 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@13 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@14 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@15 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@16 $generated@@25))
))) (forall (($generated@@26 T@T) ($generated@@27 T@T) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@0 $generated@@26 $generated@@27 ($generated@@17 $generated@@26 $generated@@27 $generated@@29 $generated@@30 $generated@@28) $generated@@30) $generated@@28)
 :weight 0
))) (forall (($generated@@31 T@T) ($generated@@32 T@T) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (or (= $generated@@35 $generated@@36) (= ($generated@@0 $generated@@31 $generated@@32 ($generated@@17 $generated@@31 $generated@@32 $generated@@34 $generated@@35 $generated@@33) $generated@@36) ($generated@@0 $generated@@31 $generated@@32 $generated@@34 $generated@@36)))
 :weight 0
))) (= ($generated@@9 $generated@@1) 3)) (= ($generated@@9 $generated@@2) 4)) (= ($generated@@9 $generated@@3) 5)) (forall (($generated@@37 T@T) ($generated@@38 T@T) ) (= ($generated@@9 ($generated@@4 $generated@@37 $generated@@38)) 6))) (forall (($generated@@39 T@T) ($generated@@40 T@T) ) (! (= ($generated@@18 ($generated@@4 $generated@@39 $generated@@40)) $generated@@39)
 :pattern ( ($generated@@4 $generated@@39 $generated@@40))
))) (forall (($generated@@41 T@T) ($generated@@42 T@T) ) (! (= ($generated@@19 ($generated@@4 $generated@@41 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@4 $generated@@41 $generated@@42))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated $generated@@43 $generated@@44) (forall (($generated@@45 T@U) ) (!  (=> ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@43 $generated@@45) $generated@@5))) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@44 $generated@@45) $generated@@5))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@44 $generated@@45) $generated@@5))
)))
 :pattern ( ($generated $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@47 Int) ) (! (= ($generated@@46 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 ($generated@@7 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@7 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@59 $generated@@56) $generated@@57 $generated@@58) ($generated@@55 $generated@@59 $generated@@56 $generated@@57 $generated@@58))
 :pattern ( ($generated@@54 ($generated@@51 $generated@@59 $generated@@56) $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> ($generated $generated@@60 $generated@@61) (=> ($generated@@54 $generated@@62 $generated@@63 $generated@@60) ($generated@@54 $generated@@62 $generated@@63 $generated@@61)))
 :pattern ( ($generated $generated@@60 $generated@@61) ($generated@@54 $generated@@62 $generated@@63 $generated@@60))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@T) ) (!  (=> ($generated $generated@@64 $generated@@65) (=> ($generated@@55 $generated@@68 $generated@@66 $generated@@67 $generated@@64) ($generated@@55 $generated@@68 $generated@@66 $generated@@67 $generated@@65)))
 :pattern ( ($generated $generated@@64 $generated@@65) ($generated@@55 $generated@@68 $generated@@66 $generated@@67 $generated@@64))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (or (not (= $generated@@69 $generated@@71)) (not true)) (=> (and ($generated $generated@@69 $generated@@70) ($generated $generated@@70 $generated@@71)) ($generated $generated@@69 $generated@@71)))
 :pattern ( ($generated $generated@@69 $generated@@70) ($generated $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@51 $generated@@76 $generated@@74) $generated@@75) ($generated@@73 $generated@@76 $generated@@74 $generated@@75))
 :pattern ( ($generated@@72 ($generated@@51 $generated@@76 $generated@@74) $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@7 $generated@@78 ($generated@@51 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@51 $generated@@78 $generated@@77))
)))
(assert  (and (forall (($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@T) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@79 $generated@@82 $generated@@83 $generated@@84 ($generated@@81 $generated@@82 $generated@@83 $generated@@84 $generated@@86 $generated@@87 $generated@@88 $generated@@85) $generated@@87 $generated@@88) $generated@@85)
 :weight 0
)) (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (or (= $generated@@94 $generated@@96) (= ($generated@@79 $generated@@89 $generated@@90 $generated@@91 ($generated@@81 $generated@@89 $generated@@90 $generated@@91 $generated@@93 $generated@@94 $generated@@95 $generated@@92) $generated@@96 $generated@@97) ($generated@@79 $generated@@89 $generated@@90 $generated@@91 $generated@@93 $generated@@96 $generated@@97)))
 :weight 0
)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@104 $generated@@106) (= ($generated@@79 $generated@@98 $generated@@99 $generated@@100 ($generated@@81 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@104 $generated@@101) $generated@@105 $generated@@106) ($generated@@79 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@105 $generated@@106)))
 :weight 0
)))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 Bool) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@6 ($generated@@79 $generated@@3 $generated@@1 $generated@@8 ($generated@@80 $generated@@107 $generated@@108 $generated@@109 $generated@@110) $generated@@111 $generated@@112))  (=> (and (or (not (= $generated@@111 $generated@@107)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@108 $generated@@111) $generated@@109)))) $generated@@110))
 :pattern ( ($generated@@79 $generated@@3 $generated@@1 $generated@@8 ($generated@@80 $generated@@107 $generated@@108 $generated@@109 $generated@@110) $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 Int) ($generated@@115 Int) ) (! (= ($generated@@113 $generated@@114 $generated@@115) (mod $generated@@114 $generated@@115))
 :pattern ( ($generated@@113 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 Int) ) (! (= ($generated@@51 $generated@@10 ($generated@@13 ($generated@@46 $generated@@116))) ($generated@@48 $generated@@2 ($generated@@51 $generated@@10 ($generated@@13 $generated@@116))))
 :pattern ( ($generated@@51 $generated@@10 ($generated@@13 ($generated@@46 $generated@@116))))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@51 $generated@@118 ($generated@@48 $generated@@118 $generated@@117)) ($generated@@48 $generated@@2 ($generated@@51 $generated@@118 $generated@@117)))
 :pattern ( ($generated@@51 $generated@@118 ($generated@@48 $generated@@118 $generated@@117)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@119 () T@U)
(declare-fun $generated@@120 () T@U)
(declare-fun $generated@@121 () Int)
(declare-fun $generated@@122 () T@U)
(declare-fun $generated@@123 () Bool)
(declare-fun $generated@@124 () Bool)
(declare-fun $generated@@125 () Int)
(declare-fun $generated@@126 () Int)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 () Bool)
(declare-fun $generated@@129 () Bool)
(declare-fun $generated@@130 () Int)
(declare-fun $generated@@131 () T@U)
(declare-fun $generated@@132 () T@U)
(declare-fun $generated@@133 () T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () Bool)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () Int)
(declare-fun $generated@@141 () Bool)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 () Bool)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () Bool)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () Bool)
(declare-fun $generated@@158 () Bool)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () Bool)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 () Bool)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 54) (let (($generated@@180 true))
(let (($generated@@181  (=> (and (= $generated@@119 $generated@@120) (= (ControlFlow 0 36) 34)) $generated@@180)))
(let (($generated@@182  (=> (and (or (not (= $generated@@119 $generated@@120)) (not true)) (= (ControlFlow 0 35) 34)) $generated@@180)))
(let (($generated@@183  (=> (=> (< 4 $generated@@121) (= $generated@@119 $generated@@122)) (and (=> (= (ControlFlow 0 37) (- 0 38)) $generated@@123) (=> $generated@@123 (and (=> (= (ControlFlow 0 37) 35) $generated@@182) (=> (= (ControlFlow 0 37) 36) $generated@@181)))))))
(let (($generated@@184  (=> (and (<= $generated@@121 4) (= (ControlFlow 0 41) 37)) $generated@@183)))
(let (($generated@@185  (=> (< 4 $generated@@121) (and (=> (= (ControlFlow 0 39) (- 0 40)) $generated@@123) (=> $generated@@123 (=> (= (ControlFlow 0 39) 37) $generated@@183))))))
(let (($generated@@186  (=> (not $generated@@124) (and (=> (= (ControlFlow 0 42) 39) $generated@@185) (=> (= (ControlFlow 0 42) 41) $generated@@184)))))
(let (($generated@@187  (=> (< 0 $generated@@125) (=> (and (= $generated@@126 (- $generated@@125 0)) (= $generated@@127 (- $generated@@125 1))) (and (=> (= (ControlFlow 0 21) (- 0 22)) (or (<= 0 $generated@@126) (= (- $generated@@127 0) $generated@@126))) (=> (or (<= 0 $generated@@126) (= (- $generated@@127 0) $generated@@126)) (=> (= (ControlFlow 0 21) (- 0 20)) (< (- $generated@@127 0) $generated@@126))))))))
(let (($generated@@188  (=> (and (<= $generated@@125 0) (= (ControlFlow 0 19) (- 0 18))) true)))
(let (($generated@@189  (=> $generated@@128 (and (=> (= (ControlFlow 0 23) 19) $generated@@188) (=> (= (ControlFlow 0 23) 21) $generated@@187)))))
(let (($generated@@190 true))
(let (($generated@@191  (and (=> (= (ControlFlow 0 24) 17) $generated@@190) (=> (= (ControlFlow 0 24) 23) $generated@@189))))
(let (($generated@@192 true))
(let (($generated@@193  (=> (and (and (and (and (and (and (and (and (and (and true (not false)) true) $generated@@129) $generated@@123) (<= 0 $generated@@125)) true) true) $generated@@124) (<= 0 $generated@@130)) (and (and (forall (($generated@@194 T@U) ) (!  (=> (and (or (not (= $generated@@194 $generated@@132)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@194) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@194) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@194)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@194))
)) ($generated $generated@@131 $generated@@131)) (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (or (not (= $generated@@195 $generated@@132)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@195) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@195) $generated@@196) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@195) $generated@@196)) ($generated@@6 ($generated@@79 $generated@@3 $generated@@1 $generated@@8 $generated@@133 $generated@@195 $generated@@196))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@195) $generated@@196))
)) (<= (- $generated@@125 0) $generated@@130)))) (and (=> (= (ControlFlow 0 25) 16) $generated@@192) (=> (= (ControlFlow 0 25) 24) $generated@@191)))))
(let (($generated@@197  (=> (=> true (and ($generated@@72 $generated@@134 $generated@@135) ($generated@@54 $generated@@134 $generated@@135 $generated@@131))) (=> (and (and (=> $generated@@136 (and ($generated@@72 $generated@@137 $generated@@135) ($generated@@54 $generated@@137 $generated@@135 $generated@@131))) (=> $generated@@138 (and ($generated@@72 $generated@@139 $generated@@135) ($generated@@54 $generated@@139 $generated@@135 $generated@@131)))) (and (= $generated@@130 (- $generated@@121 0)) (= (ControlFlow 0 26) 25))) $generated@@193))))
(let (($generated@@198  (=> (and (<= 100 $generated@@140) (= (ControlFlow 0 29) 26)) $generated@@197)))
(let (($generated@@199  (=> (< $generated@@140 100) (and (=> (= (ControlFlow 0 27) (- 0 28)) $generated@@141) (=> $generated@@141 (=> (= (ControlFlow 0 27) 26) $generated@@197))))))
(let (($generated@@200  (=> (<= $generated@@142 $generated@@121) (and (=> (= (ControlFlow 0 30) (- 0 32)) true) (and (=> (= (ControlFlow 0 30) (- 0 31)) $generated@@129) (=> $generated@@129 (and (=> (= (ControlFlow 0 30) 27) $generated@@199) (=> (= (ControlFlow 0 30) 29) $generated@@198))))))))
(let (($generated@@201  (and (=> (= (ControlFlow 0 3) (- 0 8)) true) (and (=> (= (ControlFlow 0 3) (- 0 7)) $generated@@143) (=> $generated@@143 (=> (= $generated@@144 (+ $generated@@121 1)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (or (<= 0 $generated@@145) (= (- $generated@@142 $generated@@144) $generated@@145))) (=> (or (<= 0 $generated@@145) (= (- $generated@@142 $generated@@144) $generated@@145)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (< (- $generated@@142 $generated@@144) $generated@@145)) (=> (< (- $generated@@142 $generated@@144) $generated@@145) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@124 (=> (< 4 $generated@@144) (= $generated@@146 $generated@@122)))) (=> (=> $generated@@124 (=> (< 4 $generated@@144) (= $generated@@146 $generated@@122))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@124 (or (= $generated@@146 $generated@@120) (<= $generated@@144 $generated@@142))))))))))))))))
(let (($generated@@202  (=> (or (not (= ($generated@@113 $generated@@121 ($generated@@46 2)) ($generated@@46 0))) (not true)) (=> (and (= $generated@@143 $generated@@129) (= (ControlFlow 0 10) 3)) $generated@@201))))
(let (($generated@@203  (=> (= ($generated@@113 $generated@@121 ($generated@@46 2)) ($generated@@46 0)) (=> (and (= $generated@@143 true) (= (ControlFlow 0 9) 3)) $generated@@201))))
(let (($generated@@204  (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (not (= ($generated@@46 2) 0)) (not true))) (=> (or (not (= ($generated@@46 2) 0)) (not true)) (and (=> (= (ControlFlow 0 11) 9) $generated@@203) (=> (= (ControlFlow 0 11) 10) $generated@@202))))))
(let (($generated@@205  (=> (or (not (= $generated@@121 ($generated@@46 4))) (not true)) (=> (and (= $generated@@146 $generated@@119) (= (ControlFlow 0 14) 11)) $generated@@204))))
(let (($generated@@206  (=> (= $generated@@121 ($generated@@46 4)) (=> (and (= $generated@@146 $generated@@122) (= (ControlFlow 0 13) 11)) $generated@@204))))
(let (($generated@@207  (=> (and (< $generated@@121 $generated@@142) (= $generated@@145 (- $generated@@142 $generated@@121))) (and (=> (= (ControlFlow 0 15) 13) $generated@@206) (=> (= (ControlFlow 0 15) 14) $generated@@205)))))
(let (($generated@@208  (=> $generated@@124 (and (=> (= (ControlFlow 0 33) 30) $generated@@200) (=> (= (ControlFlow 0 33) 15) $generated@@207)))))
(let (($generated@@209  (and (=> (= (ControlFlow 0 43) 42) $generated@@186) (=> (= (ControlFlow 0 43) 33) $generated@@208))))
(let (($generated@@210 true))
(let (($generated@@211  (=> (=> $generated@@147 (and ($generated@@72 $generated@@148 $generated@@135) ($generated@@54 $generated@@148 $generated@@135 $generated@@131))) (=> (and (and (=> $generated@@149 (and ($generated@@72 $generated@@150 $generated@@135) ($generated@@54 $generated@@150 $generated@@135 $generated@@131))) (=> $generated@@129 (and ($generated@@72 $generated@@151 $generated@@135) ($generated@@54 $generated@@151 $generated@@135 $generated@@131)))) (and (=> $generated@@141 (and ($generated@@72 $generated@@152 $generated@@135) ($generated@@54 $generated@@152 $generated@@135 $generated@@131))) (=> $generated@@123 (and ($generated@@72 $generated@@119 $generated@@135) ($generated@@54 $generated@@119 $generated@@135 $generated@@131))))) (=> (and (and (and (and (and (and (and (and (not false) true) $generated@@129) $generated@@123) (<= 0 $generated@@121)) true) true) (=> $generated@@124 (=> (< 4 $generated@@121) (= $generated@@119 $generated@@122)))) (and (and (and (=> $generated@@124 (or (= $generated@@119 $generated@@120) (<= $generated@@121 $generated@@142))) (forall (($generated@@212 T@U) ) (!  (=> (and (or (not (= $generated@@212 $generated@@132)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@212) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@212) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@212)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@212))
))) (and ($generated $generated@@131 $generated@@131) (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (or (not (= $generated@@213 $generated@@132)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@213) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@213) $generated@@214) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@213) $generated@@214)) ($generated@@6 ($generated@@79 $generated@@3 $generated@@1 $generated@@8 $generated@@133 $generated@@213 $generated@@214))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@131 $generated@@213) $generated@@214))
)))) (and (and (=> true $generated@@129) (=> $generated@@153 $generated@@141)) (and (=> true $generated@@123) (<= (- $generated@@142 $generated@@121) $generated@@154))))) (and (=> (= (ControlFlow 0 44) 1) $generated@@210) (=> (= (ControlFlow 0 44) 43) $generated@@209)))))))
(let (($generated@@215  (=> (and (= $generated@@155 ($generated@@46 0)) (= $generated@@154 (- $generated@@142 $generated@@155))) (and (=> (= (ControlFlow 0 45) (- 0 47)) (=> $generated@@124 (=> (< 4 $generated@@155) (= $generated@@156 $generated@@122)))) (=> (=> $generated@@124 (=> (< 4 $generated@@155) (= $generated@@156 $generated@@122))) (and (=> (= (ControlFlow 0 45) (- 0 46)) (=> $generated@@124 (or (= $generated@@156 $generated@@120) (<= $generated@@155 $generated@@142)))) (=> (=> $generated@@124 (or (= $generated@@156 $generated@@120) (<= $generated@@155 $generated@@142))) (=> (= (ControlFlow 0 45) 44) $generated@@211))))))))
(let (($generated@@216  (=> (and (= $generated@@156 $generated@@120) (= (ControlFlow 0 49) 45)) $generated@@215)))
(let (($generated@@217  (=> (and (= $generated@@156 $generated@@122) (= (ControlFlow 0 48) 45)) $generated@@215)))
(let (($generated@@218  (and (=> (= (ControlFlow 0 50) 48) $generated@@217) (=> (= (ControlFlow 0 50) 49) $generated@@216))))
(let (($generated@@219  (=> (<= 100 $generated@@140) (=> (and (= $generated@@153 $generated@@157) (= (ControlFlow 0 52) 50)) $generated@@218))))
(let (($generated@@220  (=> (< $generated@@140 100) (=> (and (= $generated@@153 true) (= (ControlFlow 0 51) 50)) $generated@@218))))
(let (($generated@@221  (=> (= $generated@@133 ($generated@@80 $generated@@132 $generated@@131 $generated@@5 false)) (=> (and (and (=> $generated@@158 (and ($generated@@72 $generated@@159 $generated@@135) ($generated@@54 $generated@@159 $generated@@135 $generated@@131))) (=> $generated@@160 (and ($generated@@72 $generated@@161 $generated@@135) ($generated@@54 $generated@@161 $generated@@135 $generated@@131)))) (and (=> $generated@@162 (and ($generated@@72 $generated@@163 $generated@@135) ($generated@@54 $generated@@163 $generated@@135 $generated@@131))) (=> $generated@@157 (and ($generated@@72 $generated@@164 $generated@@135) ($generated@@54 $generated@@164 $generated@@135 $generated@@131))))) (and (=> (= (ControlFlow 0 53) 51) $generated@@220) (=> (= (ControlFlow 0 53) 52) $generated@@219))))))
(let (($generated@@222  (=> (and ($generated@@165 $generated@@131) ($generated@@166 $generated@@131)) (=> (and (and (and ($generated@@72 $generated@@122 $generated@@135) ($generated@@54 $generated@@122 $generated@@135 $generated@@131)) (and ($generated@@72 $generated@@120 $generated@@135) ($generated@@54 $generated@@120 $generated@@135 $generated@@131))) (and (and (<= ($generated@@46 0) $generated@@142) (=> $generated@@167 (and ($generated@@72 $generated@@168 $generated@@135) ($generated@@54 $generated@@168 $generated@@135 $generated@@131)))) (and (=> $generated@@158 (and ($generated@@72 $generated@@169 $generated@@135) ($generated@@54 $generated@@169 $generated@@135 $generated@@131))) true))) (=> (and (and (and (and (=> $generated@@160 (and ($generated@@72 $generated@@170 $generated@@135) ($generated@@54 $generated@@170 $generated@@135 $generated@@131))) true) (and (=> $generated@@162 (and ($generated@@72 $generated@@171 $generated@@135) ($generated@@54 $generated@@171 $generated@@135 $generated@@131))) true)) (and (and (=> $generated@@157 (and ($generated@@72 $generated@@172 $generated@@135) ($generated@@54 $generated@@172 $generated@@135 $generated@@131))) true) (and (=> $generated@@173 (and ($generated@@72 $generated@@174 $generated@@135) ($generated@@54 $generated@@174 $generated@@135 $generated@@131))) true))) (and (and (and (=> $generated@@175 (and ($generated@@72 $generated@@176 $generated@@135) ($generated@@54 $generated@@176 $generated@@135 $generated@@131))) true) (and (=> $generated@@136 (and ($generated@@72 $generated@@177 $generated@@135) ($generated@@54 $generated@@177 $generated@@135 $generated@@131))) true)) (and (and (=> $generated@@138 (and ($generated@@72 $generated@@178 $generated@@135) ($generated@@54 $generated@@178 $generated@@135 $generated@@131))) true) (and (= 0 $generated@@179) (= (ControlFlow 0 54) 53))))) $generated@@221)))))
$generated@@222))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
