(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 () Int)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@T T@T) T@T)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@64 (T@U) Int)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@70 (T@T T@U T@U) Bool)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@85 (Int) Int)
(declare-fun $generated@@87 (Real) Real)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert  (and (and (and (and (and (and (and (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@32 $generated@@45 $generated@@46 ($generated@@42 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@49) $generated@@47)
 :weight 0
)) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (or (= $generated@@54 $generated@@55) (= ($generated@@32 $generated@@50 $generated@@51 ($generated@@42 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@55) ($generated@@32 $generated@@50 $generated@@51 $generated@@53 $generated@@55)))
 :weight 0
))) (= ($generated@@13 $generated@@33) 3)) (= ($generated@@13 $generated@@34) 4)) (= ($generated@@13 $generated@@35) 5)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (= ($generated@@13 ($generated@@36 $generated@@56 $generated@@57)) 6))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@43 ($generated@@36 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@36 $generated@@58 $generated@@59))
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@44 ($generated@@36 $generated@@60 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@36 $generated@@60 $generated@@61))
))))
(assert  (=> (< 0 $generated@@29) (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (and (and ($generated@@37 $generated@@62) (and (or (not (= $generated@@63 $generated@@38)) (not true)) (= ($generated@@39 $generated@@63) $generated@@40))) ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@62 $generated@@63) $generated@@3)))) ($generated@@41 $generated@@15 ($generated@@19 ($generated@@30 $generated@@63)) $generated $generated@@62))
 :pattern ( ($generated@@30 $generated@@63) ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@62 $generated@@63) $generated@@3)))
))))
(assert (= ($generated@@64 $generated@@3) 0))
(assert (= ($generated@@65 $generated) $generated@@1))
(assert (= ($generated@@65 $generated@@0) $generated@@2))
(assert (= ($generated@@66 $generated@@3) $generated@@4))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! ($generated@@41 $generated@@15 $generated@@68 $generated@@67 $generated@@69)
 :pattern ( ($generated@@41 $generated@@15 $generated@@68 $generated@@67 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@70 $generated@@35 $generated@@71 $generated@@40)  (or (= $generated@@71 $generated@@38) (= ($generated@@39 $generated@@71) $generated@@40)))
 :pattern ( ($generated@@70 $generated@@35 $generated@@71 $generated@@40))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@41 $generated@@35 $generated@@73 $generated@@72 $generated@@74) ($generated@@41 $generated@@35 $generated@@73 $generated@@40 $generated@@74))
 :pattern ( ($generated@@41 $generated@@35 $generated@@73 $generated@@72 $generated@@74))
 :pattern ( ($generated@@41 $generated@@35 $generated@@73 $generated@@40 $generated@@74))
)))
(assert (= ($generated@@64 $generated@@75) 0))
(assert (= ($generated@@76 $generated@@6 $generated@@11) $generated@@75))
(assert  (not ($generated@@77 $generated@@75)))
(assert (= ($generated@@64 $generated@@78) 0))
(assert (= ($generated@@76 $generated@@6 $generated@@12) $generated@@78))
(assert  (not ($generated@@77 $generated@@78)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@41 $generated@@35 $generated@@79 $generated@@40 $generated@@80)  (or (= $generated@@79 $generated@@38) ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@80 $generated@@79) $generated@@3)))))
 :pattern ( ($generated@@41 $generated@@35 $generated@@79 $generated@@40 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@81 $generated@@82 $generated@@83) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@82 $generated@@84) $generated@@3))) ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@83 $generated@@84) $generated@@3))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@83 $generated@@84) $generated@@3))
)))
 :pattern ( ($generated@@81 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 Int) ) (! (= ($generated@@85 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 Real) ) (! (= ($generated@@87 $generated@@88) $generated@@88)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 $generated@@90) $generated@@90)
 :pattern ( ($generated@@89 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@31 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@31 $generated@@94 $generated@@93))
)))
(assert  (=> (< 0 $generated@@29) (forall (($generated@@95 T@U) ) (!  (=> (and (or (not (= $generated@@95 $generated@@38)) (not true)) (= ($generated@@39 $generated@@95) $generated@@40)) ($generated@@70 $generated@@15 ($generated@@19 ($generated@@30 $generated@@95)) $generated))
 :pattern ( ($generated@@30 $generated@@95))
))))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@30 $generated@@96) ($generated@@85 17))
 :pattern ( ($generated@@30 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@70 $generated@@15 $generated@@97 $generated@@67) (<= ($generated@@85 0) ($generated@@20 $generated@@97)))
 :pattern ( ($generated@@70 $generated@@15 $generated@@97 $generated@@67))
)))
(assert ($generated@@77 $generated@@3))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and (and ($generated@@37 $generated@@98) (and (or (not (= $generated@@99 $generated@@38)) (not true)) (= ($generated@@39 $generated@@99) $generated@@40))) ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@98 $generated@@99) $generated@@3)))) ($generated@@41 $generated@@16 ($generated@@31 $generated@@16 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@98 $generated@@99) $generated@@78)) $generated@@0 $generated@@98))
 :pattern ( ($generated@@31 $generated@@16 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@98 $generated@@99) $generated@@78)))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (!  (=> ($generated@@81 $generated@@100 $generated@@101) (=> ($generated@@41 $generated@@104 $generated@@102 $generated@@103 $generated@@100) ($generated@@41 $generated@@104 $generated@@102 $generated@@103 $generated@@101)))
 :pattern ( ($generated@@81 $generated@@100 $generated@@101) ($generated@@41 $generated@@104 $generated@@102 $generated@@103 $generated@@100))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and ($generated@@37 $generated@@105) (and (or (not (= $generated@@106 $generated@@38)) (not true)) (= ($generated@@39 $generated@@106) $generated@@40))) ($generated@@70 $generated@@15 ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@105 $generated@@106) $generated@@75)) $generated@@67))
 :pattern ( ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@105 $generated@@106) $generated@@75)))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@70 $generated@@35 $generated@@107 $generated@@72)  (and ($generated@@70 $generated@@35 $generated@@107 $generated@@40) (or (not (= $generated@@107 $generated@@38)) (not true))))
 :pattern ( ($generated@@70 $generated@@35 $generated@@107 $generated@@72))
 :pattern ( ($generated@@70 $generated@@35 $generated@@107 $generated@@40))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (and (and ($generated@@37 $generated@@108) (and (or (not (= $generated@@109 $generated@@38)) (not true)) (= ($generated@@39 $generated@@109) $generated@@40))) ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@108 $generated@@109) $generated@@3)))) ($generated@@41 $generated@@15 ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@108 $generated@@109) $generated@@75)) $generated@@67 $generated@@108))
 :pattern ( ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@108 $generated@@109) $generated@@75)))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or (not (= $generated@@110 $generated@@112)) (not true)) (=> (and ($generated@@81 $generated@@110 $generated@@111) ($generated@@81 $generated@@111 $generated@@112)) ($generated@@81 $generated@@110 $generated@@112)))
 :pattern ( ($generated@@81 $generated@@110 $generated@@111) ($generated@@81 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (and (= ($generated@@113 ($generated@@76 $generated@@114 $generated@@115)) $generated@@114) (= ($generated@@66 ($generated@@76 $generated@@114 $generated@@115)) $generated@@115))
 :pattern ( ($generated@@76 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@31 $generated@@117 ($generated@@92 $generated@@117 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@92 $generated@@117 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (and ($generated@@37 $generated@@118) (and (or (not (= $generated@@119 $generated@@38)) (not true)) (= ($generated@@39 $generated@@119) $generated@@40))) ($generated@@70 $generated@@16 ($generated@@31 $generated@@16 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@118 $generated@@119) $generated@@78)) $generated@@0))
 :pattern ( ($generated@@31 $generated@@16 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@118 $generated@@119) $generated@@78)))
)))
(assert  (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@120 $generated@@123 $generated@@124 $generated@@125 ($generated@@122 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@128 $generated@@129) $generated@@126)
 :weight 0
)) (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@120 $generated@@130 $generated@@131 $generated@@132 ($generated@@122 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@120 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@120 $generated@@139 $generated@@140 $generated@@141 ($generated@@122 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@120 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 Bool) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@18 ($generated@@120 $generated@@35 $generated@@33 $generated@@14 ($generated@@121 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))  (=> (and (or (not (= $generated@@152 $generated@@148)) (not true)) ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@149 $generated@@152) $generated@@150)))) $generated@@151))
 :pattern ( ($generated@@120 $generated@@35 $generated@@33 $generated@@14 ($generated@@121 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@37 ($generated@@42 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@154 $generated@@155 ($generated@@42 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@154 $generated@@155) $generated@@156 $generated@@157))) ($generated@@81 $generated@@154 ($generated@@42 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@154 $generated@@155 ($generated@@42 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@154 $generated@@155) $generated@@156 $generated@@157))))
 :pattern ( ($generated@@42 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@154 $generated@@155 ($generated@@42 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@154 $generated@@155) $generated@@156 $generated@@157)))
)))
(assert (= ($generated@@65 $generated@@67) $generated@@5))
(assert (= ($generated@@158 $generated@@67) $generated@@9))
(assert (= ($generated@@65 $generated@@40) $generated@@7))
(assert (= ($generated@@158 $generated@@40) $generated@@10))
(assert (= ($generated@@65 $generated@@72) $generated@@8))
(assert (= ($generated@@158 $generated@@72) $generated@@10))
(assert (forall (($generated@@159 Int) ) (! (= ($generated@@92 $generated@@15 ($generated@@19 ($generated@@85 $generated@@159))) ($generated@@89 $generated@@34 ($generated@@92 $generated@@15 ($generated@@19 $generated@@159))))
 :pattern ( ($generated@@92 $generated@@15 ($generated@@19 ($generated@@85 $generated@@159))))
)))
(assert (forall (($generated@@160 Real) ) (! (= ($generated@@92 $generated@@16 ($generated@@21 ($generated@@87 $generated@@160))) ($generated@@89 $generated@@34 ($generated@@92 $generated@@16 ($generated@@21 $generated@@160))))
 :pattern ( ($generated@@92 $generated@@16 ($generated@@21 ($generated@@87 $generated@@160))))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@92 $generated@@162 ($generated@@89 $generated@@162 $generated@@161)) ($generated@@89 $generated@@34 ($generated@@92 $generated@@162 $generated@@161)))
 :pattern ( ($generated@@92 $generated@@162 ($generated@@89 $generated@@162 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! ($generated@@41 $generated@@15 $generated@@164 $generated $generated@@163)
 :pattern ( ($generated@@41 $generated@@15 $generated@@164 $generated $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! ($generated@@41 $generated@@16 $generated@@166 $generated@@0 $generated@@165)
 :pattern ( ($generated@@41 $generated@@16 $generated@@166 $generated@@0 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! ($generated@@70 $generated@@15 $generated@@167 $generated)
 :pattern ( ($generated@@70 $generated@@15 $generated@@167 $generated))
)))
(assert (forall (($generated@@168 T@U) ) (! ($generated@@70 $generated@@16 $generated@@168 $generated@@0)
 :pattern ( ($generated@@70 $generated@@16 $generated@@168 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Real)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@178  (=> (and (= $generated@@169 ($generated@@121 $generated@@38 $generated@@170 $generated@@3 false)) (= $generated@@171 ($generated@@87 3.14))) (=> (and (and (and (or (not (= $generated@@172 $generated@@38)) (not true)) ($generated@@70 $generated@@35 $generated@@172 $generated@@40)) (and (not ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@170 $generated@@172) $generated@@3)))) (= ($generated@@20 ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@170 $generated@@172) $generated@@75))) $generated@@173))) (and (and (= ($generated@@22 ($generated@@31 $generated@@16 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@170 $generated@@172) $generated@@78))) $generated@@171) (= $generated@@174 ($generated@@42 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@170 $generated@@172 ($generated@@42 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@170 $generated@@172) $generated@@3 ($generated@@92 $generated@@14 ($generated@@17 true)))))) (and ($generated@@37 $generated@@174) ($generated@@175 $generated@@174)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@18 ($generated@@120 $generated@@35 $generated@@33 $generated@@14 $generated@@169 $generated@@172 $generated@@75))) (=> ($generated@@18 ($generated@@120 $generated@@35 $generated@@33 $generated@@14 $generated@@169 $generated@@172 $generated@@75)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@70 $generated@@15 ($generated@@19 (+ ($generated@@20 ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@174 $generated@@172) $generated@@75))) ($generated@@30 $generated@@172))) $generated@@67)) (=> ($generated@@70 $generated@@15 ($generated@@19 (+ ($generated@@20 ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@174 $generated@@172) $generated@@75))) ($generated@@30 $generated@@172))) $generated@@67) (=> (= $generated@@176 (+ ($generated@@20 ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@174 $generated@@172) $generated@@75))) ($generated@@30 $generated@@172))) (=> (and (= $generated@@177 ($generated@@42 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@174 $generated@@172 ($generated@@42 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@174 $generated@@172) $generated@@75 ($generated@@92 $generated@@15 ($generated@@19 $generated@@176))))) ($generated@@37 $generated@@177)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@22 ($generated@@31 $generated@@16 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@177 $generated@@172) $generated@@78))) ($generated@@87 3.14))) (=> (= ($generated@@22 ($generated@@31 $generated@@16 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@177 $generated@@172) $generated@@78))) ($generated@@87 3.14)) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@20 ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@177 $generated@@172) $generated@@75))) (+ 17 $generated@@173)))))))))))))))
(let (($generated@@179  (=> (and (and (and ($generated@@37 $generated@@170) ($generated@@175 $generated@@170)) (<= ($generated@@85 0) $generated@@173)) (and (= 1 $generated@@29) (= (ControlFlow 0 6) 2))) $generated@@178)))
$generated@@179)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
