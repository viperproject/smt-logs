(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (T@T T@U) T@U)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@30 (T@U Int) T@U)
(declare-fun $generated@@31 (Int) Int)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (Int) Bool)
(declare-fun $generated@@34 (Int) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U T@U T@U) Bool)
(declare-fun $generated@@47 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@72 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@76 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@80 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@1))
(assert (= ($generated@@21 $generated@@0) $generated@@2))
(assert (= ($generated@@5 $generated@@25) 3))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@35 T@U) ) (!  (=> (or ($generated@@26 ($generated@@24 $generated@@25 $generated@@35)) (and (< 1 $generated@@22) ($generated@@27 $generated@@25 $generated@@35 ($generated@@28 $generated@@0)))) (and (forall (($generated@@36 Int) ) (!  (=> (=> (and (<= ($generated@@31 0) $generated@@36) (< $generated@@36 ($generated@@32 ($generated@@24 $generated@@25 $generated@@35)))) (and (<= ($generated@@31 0) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 ($generated@@24 $generated@@25 $generated@@35) $generated@@36)))) (< ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 ($generated@@24 $generated@@25 $generated@@35) $generated@@36))) 256))) (=> (<= ($generated@@31 0) $generated@@36) (=> (< $generated@@36 ($generated@@32 ($generated@@24 $generated@@25 $generated@@35))) ($generated@@33 ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 ($generated@@24 $generated@@25 $generated@@35) $generated@@36)))))))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@30 $generated@@35 $generated@@36)))
)) (= ($generated@@23 ($generated@@24 $generated@@25 $generated@@35)) (forall (($generated@@37 Int) ) (!  (and (=> (and (<= ($generated@@31 0) $generated@@37) (< $generated@@37 ($generated@@32 ($generated@@24 $generated@@25 $generated@@35)))) (and (<= ($generated@@31 0) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 ($generated@@24 $generated@@25 $generated@@35) $generated@@37)))) (< ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 ($generated@@24 $generated@@25 $generated@@35) $generated@@37))) 256))) (=> (and (<= ($generated@@31 0) $generated@@37) (< $generated@@37 ($generated@@32 ($generated@@24 $generated@@25 $generated@@35)))) ($generated@@34 ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 ($generated@@24 $generated@@25 $generated@@35) $generated@@37))))))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@30 $generated@@35 $generated@@37)))
)))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@24 $generated@@25 $generated@@35)))
))))
(assert (= ($generated@@32 $generated@@38) 0))
(assert (forall (($generated@@39 Int) ) (! (= ($generated@@31 $generated@@39) $generated@@39)
 :pattern ( ($generated@@31 $generated@@39))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@24 $generated@@41 $generated@@40) $generated@@40)
 :pattern ( ($generated@@24 $generated@@41 $generated@@40))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@T) ) (! (= ($generated@@42 $generated@@44 ($generated@@29 $generated@@44 $generated@@43)) $generated@@43)
 :pattern ( ($generated@@29 $generated@@44 $generated@@43))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@45 Int) ) (!  (=> (or ($generated@@33 $generated@@45) (and (< 0 $generated@@22) (and (<= ($generated@@31 0) $generated@@45) (< $generated@@45 256)))) (= ($generated@@34 $generated@@45) ($generated@@10 ($generated@@24 $generated@@6 ($generated@@9 true)))))
 :pattern ( ($generated@@34 $generated@@45))
))))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@46 ($generated@@42 $generated@@51 $generated@@48) $generated@@49 $generated@@50) ($generated@@47 $generated@@51 $generated@@48 $generated@@49 $generated@@50))
 :pattern ( ($generated@@46 ($generated@@42 $generated@@51 $generated@@48) $generated@@49 $generated@@50))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@52 Int) ) (!  (=> (or ($generated@@33 ($generated@@31 $generated@@52)) (and (< 0 $generated@@22) (and (<= ($generated@@31 0) ($generated@@31 $generated@@52)) (< $generated@@52 256)))) (= ($generated@@34 ($generated@@31 $generated@@52)) ($generated@@10 ($generated@@24 $generated@@6 ($generated@@9 true)))))
 :weight 3
 :pattern ( ($generated@@34 ($generated@@31 $generated@@52)))
))))
(assert (forall (($generated@@54 T@U) ) (!  (=> ($generated@@53 $generated@@54 $generated@@0) (and (= ($generated@@42 $generated@@7 ($generated@@29 $generated@@7 $generated@@54)) $generated@@54) ($generated@@27 $generated@@7 ($generated@@29 $generated@@7 $generated@@54) $generated@@0)))
 :pattern ( ($generated@@53 $generated@@54 $generated@@0))
)))
(assert (forall (($generated@@55 T@U) ) (!  (=> ($generated@@53 $generated@@55 $generated) (and (= ($generated@@42 $generated@@6 ($generated@@29 $generated@@6 $generated@@55)) $generated@@55) ($generated@@27 $generated@@6 ($generated@@29 $generated@@6 $generated@@55) $generated)))
 :pattern ( ($generated@@53 $generated@@55 $generated))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@53 ($generated@@42 $generated@@58 $generated@@56) $generated@@57) ($generated@@27 $generated@@58 $generated@@56 $generated@@57))
 :pattern ( ($generated@@53 ($generated@@42 $generated@@58 $generated@@56) $generated@@57))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@59 T@U) ) (!  (=> (or ($generated@@26 $generated@@59) (and (< 1 $generated@@22) ($generated@@27 $generated@@25 $generated@@59 ($generated@@28 $generated@@0)))) (and (forall (($generated@@60 Int) ) (!  (=> (=> (and (<= ($generated@@31 0) $generated@@60) (< $generated@@60 ($generated@@32 $generated@@59))) (and (<= ($generated@@31 0) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@59 $generated@@60)))) (< ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@59 $generated@@60))) 256))) (=> (<= ($generated@@31 0) $generated@@60) (=> (< $generated@@60 ($generated@@32 $generated@@59)) ($generated@@33 ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@59 $generated@@60)))))))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@30 $generated@@59 $generated@@60)))
)) (= ($generated@@23 $generated@@59) (forall (($generated@@61 Int) ) (!  (and (=> (and (<= ($generated@@31 0) $generated@@61) (< $generated@@61 ($generated@@32 $generated@@59))) (and (<= ($generated@@31 0) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@59 $generated@@61)))) (< ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@59 $generated@@61))) 256))) (=> (and (<= ($generated@@31 0) $generated@@61) (< $generated@@61 ($generated@@32 $generated@@59))) ($generated@@34 ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@59 $generated@@61))))))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@30 $generated@@59 $generated@@61)))
)))))
 :pattern ( ($generated@@23 $generated@@59))
))))
(assert (forall (($generated@@62 T@U) ) (! (<= 0 ($generated@@32 $generated@@62))
 :pattern ( ($generated@@32 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@47 $generated@@25 $generated@@63 ($generated@@28 $generated@@64) $generated@@65) (forall (($generated@@66 Int) ) (!  (=> (and (<= 0 $generated@@66) (< $generated@@66 ($generated@@32 $generated@@63))) ($generated@@46 ($generated@@30 $generated@@63 $generated@@66) $generated@@64 $generated@@65))
 :pattern ( ($generated@@30 $generated@@63 $generated@@66))
)))
 :pattern ( ($generated@@47 $generated@@25 $generated@@63 ($generated@@28 $generated@@64) $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 ($generated@@28 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@28 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@21 ($generated@@28 $generated@@69)) $generated@@3)
 :pattern ( ($generated@@28 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@29 $generated@@71 ($generated@@42 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@42 $generated@@71 $generated@@70))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@83 T@T) ($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@72 $generated@@83 $generated@@84 $generated@@85 ($generated@@79 $generated@@83 $generated@@84 $generated@@85 $generated@@87 $generated@@88 $generated@@89 $generated@@86) $generated@@88 $generated@@89) $generated@@86)
 :weight 0
)) (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@95 $generated@@97) (= ($generated@@72 $generated@@90 $generated@@91 $generated@@92 ($generated@@79 $generated@@90 $generated@@91 $generated@@92 $generated@@94 $generated@@95 $generated@@96 $generated@@93) $generated@@97 $generated@@98) ($generated@@72 $generated@@90 $generated@@91 $generated@@92 $generated@@94 $generated@@97 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@105 $generated@@107) (= ($generated@@72 $generated@@99 $generated@@100 $generated@@101 ($generated@@79 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102) $generated@@106 $generated@@107) ($generated@@72 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@106 $generated@@107)))
 :weight 0
)))) (= ($generated@@5 $generated@@73) 4)) (= ($generated@@5 $generated@@74) 5)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@76 $generated@@108 $generated@@109 ($generated@@80 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@110) $generated@@112) $generated@@110)
 :weight 0
))) (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@76 $generated@@113 $generated@@114 ($generated@@80 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@76 $generated@@113 $generated@@114 $generated@@116 $generated@@118)))
 :weight 0
))) (= ($generated@@5 $generated@@77) 6)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (= ($generated@@5 ($generated@@78 $generated@@119 $generated@@120)) 7))) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@121 $generated@@122)) $generated@@121)
 :pattern ( ($generated@@78 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@123 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@78 $generated@@123 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 Bool) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@10 ($generated@@72 $generated@@73 $generated@@74 $generated@@6 ($generated@@75 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))  (=> (and (or (not (= $generated@@129 $generated@@125)) (not true)) ($generated@@10 ($generated@@29 $generated@@6 ($generated@@76 $generated@@74 $generated@@77 ($generated@@76 $generated@@73 ($generated@@78 $generated@@74 $generated@@77) $generated@@126 $generated@@129) $generated@@127)))) $generated@@128))
 :pattern ( ($generated@@72 $generated@@73 $generated@@74 $generated@@6 ($generated@@75 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> ($generated@@53 $generated@@131 ($generated@@28 $generated@@132)) (and (= ($generated@@42 $generated@@25 ($generated@@29 $generated@@25 $generated@@131)) $generated@@131) ($generated@@27 $generated@@25 ($generated@@29 $generated@@25 $generated@@131) ($generated@@28 $generated@@132))))
 :pattern ( ($generated@@53 $generated@@131 ($generated@@28 $generated@@132)))
)))
(assert (forall (($generated@@133 Int) ) (! (= ($generated@@42 $generated@@7 ($generated@@11 ($generated@@31 $generated@@133))) ($generated@@24 $generated@@77 ($generated@@42 $generated@@7 ($generated@@11 $generated@@133))))
 :pattern ( ($generated@@42 $generated@@7 ($generated@@11 ($generated@@31 $generated@@133))))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@42 $generated@@135 ($generated@@24 $generated@@135 $generated@@134)) ($generated@@24 $generated@@77 ($generated@@42 $generated@@135 $generated@@134)))
 :pattern ( ($generated@@42 $generated@@135 ($generated@@24 $generated@@135 $generated@@134)))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= ($generated@@32 $generated@@136) 0) (= $generated@@136 $generated@@38))
 :pattern ( ($generated@@32 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! ($generated@@47 $generated@@7 $generated@@138 $generated@@0 $generated@@137)
 :pattern ( ($generated@@47 $generated@@7 $generated@@138 $generated@@0 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! ($generated@@47 $generated@@6 $generated@@140 $generated $generated@@139)
 :pattern ( ($generated@@47 $generated@@6 $generated@@140 $generated $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@27 $generated@@25 $generated@@141 ($generated@@28 $generated@@142)) (forall (($generated@@143 Int) ) (!  (=> (and (<= 0 $generated@@143) (< $generated@@143 ($generated@@32 $generated@@141))) ($generated@@53 ($generated@@30 $generated@@141 $generated@@143) $generated@@142))
 :pattern ( ($generated@@30 $generated@@141 $generated@@143))
)))
 :pattern ( ($generated@@27 $generated@@25 $generated@@141 ($generated@@28 $generated@@142)))
)))
(assert (forall (($generated@@144 T@U) ) (! ($generated@@27 $generated@@7 $generated@@144 $generated@@0)
 :pattern ( ($generated@@27 $generated@@7 $generated@@144 $generated@@0))
)))
(assert (forall (($generated@@145 T@U) ) (! ($generated@@27 $generated@@6 $generated@@145 $generated)
 :pattern ( ($generated@@27 $generated@@6 $generated@@145 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@154 true))
(let (($generated@@155  (=> (and (not (and (<= ($generated@@31 0) $generated@@146) (< $generated@@146 ($generated@@32 $generated@@147)))) (= (ControlFlow 0 9) 3)) $generated@@154)))
(let (($generated@@156  (=> (and (<= ($generated@@31 0) $generated@@146) (< $generated@@146 ($generated@@32 $generated@@147))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@32 $generated@@147)))) (=> (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@32 $generated@@147))) (=> (and (= $generated@@148 ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@147 $generated@@146)))) ($generated@@47 $generated@@7 ($generated@@11 $generated@@148) $generated@@0 $generated@@149)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (<= ($generated@@31 0) $generated@@148)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< $generated@@148 256)) (=> (and (and (<= ($generated@@31 0) $generated@@148) (< $generated@@148 256)) (and ($generated@@33 ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@147 $generated@@146)))) (= (ControlFlow 0 5) 3))) $generated@@154)))))))))
(let (($generated@@157  (=> (< $generated@@146 ($generated@@31 0)) (and (=> (= (ControlFlow 0 11) 5) $generated@@156) (=> (= (ControlFlow 0 11) 9) $generated@@155)))))
(let (($generated@@158  (=> (<= ($generated@@31 0) $generated@@146) (and (=> (= (ControlFlow 0 10) 5) $generated@@156) (=> (= (ControlFlow 0 10) 9) $generated@@155)))))
(let (($generated@@159  (=> (=> (and (<= ($generated@@31 0) $generated@@146) (< $generated@@146 ($generated@@32 $generated@@147))) (and (<= ($generated@@31 0) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@147 $generated@@146)))) (< ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@147 $generated@@146))) 256))) (and (=> (= (ControlFlow 0 12) 10) $generated@@158) (=> (= (ControlFlow 0 12) 11) $generated@@157)))))
(let (($generated@@160  (=> (and (not (=> (and (<= ($generated@@31 0) $generated@@146) (< $generated@@146 ($generated@@32 $generated@@147))) (and (<= ($generated@@31 0) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@147 $generated@@146)))) (< ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@147 $generated@@146))) 256)))) (= (ControlFlow 0 4) 3)) $generated@@154)))
(let (($generated@@161  (=> (< ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@147 $generated@@146))) ($generated@@31 0)) (and (=> (= (ControlFlow 0 16) 12) $generated@@159) (=> (= (ControlFlow 0 16) 4) $generated@@160)))))
(let (($generated@@162  (=> (<= ($generated@@31 0) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@147 $generated@@146)))) (and (=> (= (ControlFlow 0 14) (- 0 15)) (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@32 $generated@@147)))) (=> (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@32 $generated@@147))) (and (=> (= (ControlFlow 0 14) 12) $generated@@159) (=> (= (ControlFlow 0 14) 4) $generated@@160)))))))
(let (($generated@@163  (=> (and (<= ($generated@@31 0) $generated@@146) (< $generated@@146 ($generated@@32 $generated@@147))) (and (=> (= (ControlFlow 0 17) (- 0 18)) (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@32 $generated@@147)))) (=> (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@32 $generated@@147))) (and (=> (= (ControlFlow 0 17) 14) $generated@@162) (=> (= (ControlFlow 0 17) 16) $generated@@161)))))))
(let (($generated@@164  (=> (not (and (<= ($generated@@31 0) $generated@@146) (< $generated@@146 ($generated@@32 $generated@@147)))) (and (=> (= (ControlFlow 0 13) 12) $generated@@159) (=> (= (ControlFlow 0 13) 4) $generated@@160)))))
(let (($generated@@165  (=> (< $generated@@146 ($generated@@31 0)) (and (=> (= (ControlFlow 0 20) 17) $generated@@163) (=> (= (ControlFlow 0 20) 13) $generated@@164)))))
(let (($generated@@166  (=> (<= ($generated@@31 0) $generated@@146) (and (=> (= (ControlFlow 0 19) 17) $generated@@163) (=> (= (ControlFlow 0 19) 13) $generated@@164)))))
(let (($generated@@167  (and (=> (= (ControlFlow 0 21) 19) $generated@@166) (=> (= (ControlFlow 0 21) 20) $generated@@165))))
(let (($generated@@168 true))
(let (($generated@@169 true))
(let (($generated@@170  (=> (= $generated@@150 ($generated@@75 $generated@@151 $generated@@149 $generated@@4 false)) (and (and (=> (= (ControlFlow 0 22) 1) $generated@@169) (=> (= (ControlFlow 0 22) 21) $generated@@167)) (=> (= (ControlFlow 0 22) 2) $generated@@168)))))
(let (($generated@@171  (=> (and (and (and ($generated@@152 $generated@@149) ($generated@@153 $generated@@149)) ($generated@@27 $generated@@25 $generated@@147 ($generated@@28 $generated@@0))) (and (= 1 $generated@@22) (= (ControlFlow 0 23) 22))) $generated@@170)))
$generated@@171)))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
