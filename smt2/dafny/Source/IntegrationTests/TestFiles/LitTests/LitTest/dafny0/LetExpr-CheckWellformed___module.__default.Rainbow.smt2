(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U) Int)
(declare-fun $generated@@24 (T@T T@U) T@U)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (Int Int) Int)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@51 (Int) Int)
(declare-fun $generated@@55 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 (T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@93 (T@U) Int)
(declare-fun $generated@@94 (T@U) Int)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@106 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T) T@T)
(declare-fun $generated@@112 (T@T) T@T)
(declare-fun $generated@@164 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (= ($generated@@5 $generated@@25) 3))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (or ($generated@@26 $generated@@32 ($generated@@24 $generated@@25 $generated@@33)) (and (< 1 $generated@@22) ($generated@@27 $generated@@25 $generated@@33 ($generated@@28 $generated@@32 $generated)))) (= ($generated@@23 $generated@@32 ($generated@@24 $generated@@25 $generated@@33)) (let (($generated@@34 ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 ($generated@@24 $generated@@25 $generated@@33))))))
($generated@@31 $generated@@34 $generated@@34))))
 :weight 3
 :pattern ( ($generated@@23 $generated@@32 ($generated@@24 $generated@@25 $generated@@33)))
))))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@27 $generated@@25 $generated@@38 ($generated@@28 $generated@@36 $generated@@37)) ($generated@@35 $generated@@38))
 :pattern ( ($generated@@35 $generated@@38) ($generated@@27 $generated@@25 $generated@@38 ($generated@@28 $generated@@36 $generated@@37)))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@39 $generated@@41 $generated@@42)  (and (= ($generated@@40 $generated@@41) ($generated@@40 $generated@@42)) (= ($generated@@30 $generated@@41) ($generated@@30 $generated@@42))))
 :pattern ( ($generated@@39 $generated@@41 $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@27 $generated@@25 ($generated@@43 $generated@@47 $generated@@48) ($generated@@28 $generated@@45 $generated@@46))  (and ($generated@@44 $generated@@47 $generated@@45) ($generated@@44 $generated@@48 $generated@@46)))
 :pattern ( ($generated@@27 $generated@@25 ($generated@@43 $generated@@47 $generated@@48) ($generated@@28 $generated@@45 $generated@@46)))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@39 $generated@@49 $generated@@50) (= $generated@@49 $generated@@50))
 :pattern ( ($generated@@39 $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 Int) ) (! (= ($generated@@51 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@24 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@24 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> ($generated@@56 $generated@@62) (= ($generated@@55 $generated@@25 ($generated@@43 $generated@@60 $generated@@61) ($generated@@28 $generated@@58 $generated@@59) $generated@@62)  (and ($generated@@57 $generated@@60 $generated@@58 $generated@@62) ($generated@@57 $generated@@61 $generated@@59 $generated@@62))))
 :pattern ( ($generated@@55 $generated@@25 ($generated@@43 $generated@@60 $generated@@61) ($generated@@28 $generated@@58 $generated@@59) $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@35 $generated@@64) (= ($generated@@63 $generated@@64) $generated@@3))
 :pattern ( ($generated@@35 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 ($generated@@29 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@29 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@35 $generated@@68) (exists (($generated@@69 T@U) ($generated@@70 T@U) ) (= $generated@@68 ($generated@@43 $generated@@69 $generated@@70))))
 :pattern ( ($generated@@35 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@57 ($generated@@65 $generated@@74 $generated@@71) $generated@@72 $generated@@73) ($generated@@55 $generated@@74 $generated@@71 $generated@@72 $generated@@73))
 :pattern ( ($generated@@57 ($generated@@65 $generated@@74 $generated@@71) $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@44 $generated@@75 $generated) (and (= ($generated@@65 $generated@@7 ($generated@@29 $generated@@7 $generated@@75)) $generated@@75) ($generated@@27 $generated@@7 ($generated@@29 $generated@@7 $generated@@75) $generated)))
 :pattern ( ($generated@@44 $generated@@75 $generated))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@44 ($generated@@65 $generated@@78 $generated@@76) $generated@@77) ($generated@@27 $generated@@78 $generated@@76 $generated@@77))
 :pattern ( ($generated@@44 ($generated@@65 $generated@@78 $generated@@76) $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@79 ($generated@@28 $generated@@80 $generated@@81)) $generated@@80)
 :pattern ( ($generated@@28 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@82 ($generated@@28 $generated@@83 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@28 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@63 ($generated@@43 $generated@@85 $generated@@86)) $generated@@3)
 :pattern ( ($generated@@43 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@40 ($generated@@43 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@43 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@30 ($generated@@43 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@43 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@29 $generated@@92 ($generated@@65 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@65 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (< ($generated@@93 $generated@@95) ($generated@@94 ($generated@@43 $generated@@95 $generated@@96)))
 :pattern ( ($generated@@43 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (< ($generated@@93 $generated@@98) ($generated@@94 ($generated@@43 $generated@@97 $generated@@98)))
 :pattern ( ($generated@@43 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@44 $generated@@101 ($generated@@28 $generated@@99 $generated@@100)) (and (= ($generated@@65 $generated@@25 ($generated@@29 $generated@@25 $generated@@101)) $generated@@101) ($generated@@27 $generated@@25 ($generated@@29 $generated@@25 $generated@@101) ($generated@@28 $generated@@99 $generated@@100))))
 :pattern ( ($generated@@44 $generated@@101 ($generated@@28 $generated@@99 $generated@@100)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@102 $generated@@113 $generated@@114 $generated@@115 ($generated@@109 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@118 $generated@@119) $generated@@116)
 :weight 0
)) (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@102 $generated@@120 $generated@@121 $generated@@122 ($generated@@109 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@102 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@102 $generated@@129 $generated@@130 $generated@@131 ($generated@@109 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)))) (= ($generated@@5 $generated@@103) 4)) (= ($generated@@5 $generated@@104) 5)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@106 $generated@@138 $generated@@139 ($generated@@110 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@140) $generated@@142) $generated@@140)
 :weight 0
))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@147 $generated@@148) (= ($generated@@106 $generated@@143 $generated@@144 ($generated@@110 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@106 $generated@@143 $generated@@144 $generated@@146 $generated@@148)))
 :weight 0
))) (= ($generated@@5 $generated@@107) 6)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (= ($generated@@5 ($generated@@108 $generated@@149 $generated@@150)) 7))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@111 ($generated@@108 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@108 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@112 ($generated@@108 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@108 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@10 ($generated@@102 $generated@@103 $generated@@104 $generated@@6 ($generated@@105 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (or (not (= $generated@@159 $generated@@155)) (not true)) ($generated@@10 ($generated@@29 $generated@@6 ($generated@@106 $generated@@104 $generated@@107 ($generated@@106 $generated@@103 ($generated@@108 $generated@@104 $generated@@107) $generated@@156 $generated@@159) $generated@@157)))) $generated@@158))
 :pattern ( ($generated@@102 $generated@@103 $generated@@104 $generated@@6 ($generated@@105 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (or ($generated@@26 $generated@@161 $generated@@162) (and (< 1 $generated@@22) ($generated@@27 $generated@@25 $generated@@162 ($generated@@28 $generated@@161 $generated)))) (= ($generated@@23 $generated@@161 $generated@@162) (let (($generated@@163 ($generated@@12 ($generated@@29 $generated@@7 ($generated@@30 $generated@@162)))))
($generated@@31 $generated@@163 $generated@@163))))
 :pattern ( ($generated@@23 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (and (= ($generated@@21 ($generated@@28 $generated@@165 $generated@@166)) $generated@@2) (= ($generated@@164 ($generated@@28 $generated@@165 $generated@@166)) $generated@@4))
 :pattern ( ($generated@@28 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 Int) ($generated@@168 Int) ) (! (= ($generated@@31 $generated@@167 $generated@@168) (* $generated@@167 $generated@@168))
 :pattern ( ($generated@@31 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@93 ($generated@@65 $generated@@25 $generated@@169)) ($generated@@94 $generated@@169))
 :pattern ( ($generated@@93 ($generated@@65 $generated@@25 $generated@@169)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and ($generated@@56 $generated@@172) (and ($generated@@35 $generated@@170) (exists (($generated@@173 T@U) ) (! ($generated@@55 $generated@@25 $generated@@170 ($generated@@28 $generated@@171 $generated@@173) $generated@@172)
 :pattern ( ($generated@@55 $generated@@25 $generated@@170 ($generated@@28 $generated@@171 $generated@@173) $generated@@172))
)))) ($generated@@57 ($generated@@40 $generated@@170) $generated@@171 $generated@@172))
 :pattern ( ($generated@@57 ($generated@@40 $generated@@170) $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and ($generated@@56 $generated@@176) (and ($generated@@35 $generated@@174) (exists (($generated@@177 T@U) ) (! ($generated@@55 $generated@@25 $generated@@174 ($generated@@28 $generated@@177 $generated@@175) $generated@@176)
 :pattern ( ($generated@@55 $generated@@25 $generated@@174 ($generated@@28 $generated@@177 $generated@@175) $generated@@176))
)))) ($generated@@57 ($generated@@30 $generated@@174) $generated@@175 $generated@@176))
 :pattern ( ($generated@@57 ($generated@@30 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@43 ($generated@@24 $generated@@107 $generated@@178) ($generated@@24 $generated@@107 $generated@@179)) ($generated@@24 $generated@@25 ($generated@@43 $generated@@178 $generated@@179)))
 :pattern ( ($generated@@43 ($generated@@24 $generated@@107 $generated@@178) ($generated@@24 $generated@@107 $generated@@179)))
)))
(assert (forall (($generated@@180 Int) ) (! (= ($generated@@65 $generated@@7 ($generated@@11 ($generated@@51 $generated@@180))) ($generated@@24 $generated@@107 ($generated@@65 $generated@@7 ($generated@@11 $generated@@180))))
 :pattern ( ($generated@@65 $generated@@7 ($generated@@11 ($generated@@51 $generated@@180))))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@T) ) (! (= ($generated@@65 $generated@@182 ($generated@@24 $generated@@182 $generated@@181)) ($generated@@24 $generated@@107 ($generated@@65 $generated@@182 $generated@@181)))
 :pattern ( ($generated@@65 $generated@@182 ($generated@@24 $generated@@182 $generated@@181)))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (or ($generated@@26 $generated@@183 $generated@@184) (and (< 1 $generated@@22) ($generated@@27 $generated@@25 $generated@@184 ($generated@@28 $generated@@183 $generated)))) (<= ($generated@@51 0) ($generated@@23 $generated@@183 $generated@@184)))
 :pattern ( ($generated@@23 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! ($generated@@55 $generated@@7 $generated@@186 $generated $generated@@185)
 :pattern ( ($generated@@55 $generated@@7 $generated@@186 $generated $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! ($generated@@27 $generated@@7 $generated@@187 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@187 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@197  (=> (= (ControlFlow 0 4) (- 0 3)) (<= ($generated@@51 0) ($generated@@23 $generated@@188 $generated@@189)))))
(let (($generated@@198  (=> (= $generated@@190 $generated@@189) (=> (and ($generated@@27 $generated@@25 $generated@@190 ($generated@@28 $generated@@188 $generated)) ($generated@@35 $generated@@190)) (=> (and (and (= ($generated@@43 $generated@@191 ($generated@@65 $generated@@7 ($generated@@11 $generated@@192))) $generated@@190) (= ($generated@@23 $generated@@188 $generated@@189) ($generated@@31 $generated@@192 $generated@@192))) (and ($generated@@27 $generated@@7 ($generated@@11 ($generated@@23 $generated@@188 $generated@@189)) $generated) (= (ControlFlow 0 5) 4))) $generated@@197)))))
(let (($generated@@199  (=> (and ($generated@@55 $generated@@25 $generated@@189 ($generated@@28 $generated@@188 $generated) $generated@@193) (= (ControlFlow 0 2) (- 0 1))) (or ($generated@@39 $generated@@189 $generated@@189) (< ($generated@@94 $generated@@189) ($generated@@94 $generated@@189))))))
(let (($generated@@200  (=> (= $generated@@194 ($generated@@105 $generated@@195 $generated@@193 $generated@@1 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@199) (=> (= (ControlFlow 0 6) 5) $generated@@198)))))
(let (($generated@@201  (=> (and (and (and ($generated@@56 $generated@@193) ($generated@@196 $generated@@193)) ($generated@@27 $generated@@25 $generated@@189 ($generated@@28 $generated@@188 $generated))) (and (= 1 $generated@@22) (= (ControlFlow 0 7) 6))) $generated@@200)))
$generated@@201))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
