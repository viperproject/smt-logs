(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U) T@U)
(declare-fun $generated@@19 () Int)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 (Int) T@U)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (Int) Int)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@U T@U Int) Bool)
(declare-fun $generated@@51 (Int Int) Int)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@T T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@124 (T@T T@T) T@T)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@128 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (= ($generated@@18 $generated) $generated@@0))
(assert  (=> (< 0 $generated@@19) (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> (and (and ($generated@@23 $generated@@26) ($generated@@24 $generated@@27 $generated@@22)) ($generated@@21 $generated@@27 $generated@@22 $generated@@26)) ($generated@@25 $generated@@4 ($generated@@8 ($generated@@20 $generated@@27)) $generated $generated@@26))
 :pattern ( ($generated@@20 $generated@@27) ($generated@@21 $generated@@27 $generated@@22 $generated@@26))
))))
(assert  (=> (< 0 $generated@@19) (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and (and ($generated@@23 $generated@@29) ($generated@@24 $generated@@30 $generated@@22)) ($generated@@21 $generated@@30 $generated@@22 $generated@@29)) ($generated@@25 $generated@@4 ($generated@@8 ($generated@@28 $generated@@30)) $generated $generated@@29))
 :pattern ( ($generated@@28 $generated@@30) ($generated@@21 $generated@@30 $generated@@22 $generated@@29))
))))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and ($generated@@31 $generated@@32 $generated@@33) ($generated@@31 $generated@@33 $generated@@34)) ($generated@@31 $generated@@32 $generated@@34))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33) ($generated@@31 $generated@@33 $generated@@34))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33) ($generated@@31 $generated@@32 $generated@@34))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 Int) ($generated@@40 Int) ) (!  (=> (and (and (<= 0 $generated@@39) (<= 0 $generated@@40)) (<= (+ $generated@@39 $generated@@40) ($generated@@37 $generated@@38))) (= ($generated@@35 ($generated@@35 $generated@@38 ($generated@@36 $generated@@39)) ($generated@@36 $generated@@40)) ($generated@@35 $generated@@38 ($generated@@36 (+ $generated@@39 $generated@@40)))))
 :pattern ( ($generated@@35 ($generated@@35 $generated@@38 ($generated@@36 $generated@@39)) ($generated@@36 $generated@@40)))
)))
(assert ($generated@@41 $generated@@22))
(assert (forall (($generated@@43 Int) ) (! (= ($generated@@42 $generated@@43) $generated@@43)
 :pattern ( ($generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@46 $generated@@45))
)))
(assert (= ($generated@@2 $generated@@49) 3))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 Int) ) (!  (=> (or ($generated@@50 ($generated@@44 $generated@@49 $generated@@54) ($generated@@44 $generated@@49 $generated@@55) ($generated@@42 $generated@@56)) (and (< 2 $generated@@19) ($generated@@24 $generated@@54 $generated@@22))) (and (and (=> (< 0 ($generated@@37 $generated@@55)) (=> (<= 20 (+ ($generated@@51 100 ($generated@@20 ($generated@@44 $generated@@49 $generated@@54))) ($generated@@28 ($generated@@44 $generated@@49 $generated@@54)))) ($generated@@50 ($generated@@44 $generated@@49 $generated@@54) ($generated@@35 $generated@@55 ($generated@@36 1)) ($generated@@42 (+ $generated@@56 1))))) (=> (=> (< 0 ($generated@@37 $generated@@55)) (or (< (+ ($generated@@51 100 ($generated@@20 ($generated@@44 $generated@@49 $generated@@54))) ($generated@@28 ($generated@@44 $generated@@49 $generated@@54))) 20) ($generated@@47 ($generated@@48 $generated@@53) ($generated@@44 $generated@@49 $generated@@54) ($generated@@35 $generated@@55 ($generated@@36 1)) ($generated@@42 (+ $generated@@56 1))))) (=> (= ($generated@@42 0) ($generated@@37 $generated@@55)) (forall (($generated@@57 T@U) ) (!  (=> ($generated@@52 $generated@@57 $generated@@55) ($generated@@50 $generated@@54 $generated@@57 $generated@@56))
 :pattern ( ($generated@@47 ($generated@@48 $generated@@53) $generated@@54 $generated@@57 $generated@@56))
))))) (= ($generated@@47 ($generated@@48 $generated@@53) ($generated@@44 $generated@@49 $generated@@54) ($generated@@44 $generated@@49 $generated@@55) ($generated@@42 $generated@@56))  (and (=> (< 0 ($generated@@37 $generated@@55)) (or (< (+ ($generated@@51 100 ($generated@@20 ($generated@@44 $generated@@49 $generated@@54))) ($generated@@28 ($generated@@44 $generated@@49 $generated@@54))) 20) ($generated@@47 ($generated@@48 $generated@@53) ($generated@@44 $generated@@49 $generated@@54) ($generated@@35 $generated@@55 ($generated@@36 1)) ($generated@@42 (+ $generated@@56 1))))) (=> (= ($generated@@42 0) ($generated@@37 $generated@@55)) (exists (($generated@@58 T@U) ) (!  (and ($generated@@52 $generated@@58 $generated@@55) ($generated@@47 ($generated@@48 $generated@@53) $generated@@54 $generated@@58 $generated@@56))
 :pattern ( ($generated@@47 ($generated@@48 $generated@@53) $generated@@54 $generated@@58 $generated@@56))
)))))))
 :weight 3
 :pattern ( ($generated@@47 ($generated@@48 $generated@@53) ($generated@@44 $generated@@49 $generated@@54) ($generated@@44 $generated@@49 $generated@@55) ($generated@@42 $generated@@56)))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 ($generated@@59 $generated@@62 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@59 $generated@@62 $generated@@61))
)))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 Int) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@31 $generated@@66 $generated@@67) (=> ($generated@@47 $generated@@63 $generated@@64 $generated@@66 $generated@@65) ($generated@@47 $generated@@63 $generated@@64 $generated@@67 $generated@@65)))
 :pattern ( ($generated@@47 $generated@@63 $generated@@64 $generated@@66 $generated@@65) ($generated@@52 $generated@@66 $generated@@68) ($generated@@52 $generated@@67 $generated@@68))
))))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@28 $generated@@69) ($generated@@42 25))
 :pattern ( ($generated@@28 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@21 ($generated@@60 $generated@@73 $generated@@70) $generated@@71 $generated@@72) ($generated@@25 $generated@@73 $generated@@70 $generated@@71 $generated@@72))
 :pattern ( ($generated@@21 ($generated@@60 $generated@@73 $generated@@70) $generated@@71 $generated@@72))
)))
(assert  (=> (< 0 $generated@@19) (forall (($generated@@75 T@U) ) (!  (=> ($generated@@24 $generated@@75 $generated@@22) ($generated@@74 $generated@@4 ($generated@@8 ($generated@@20 $generated@@75)) $generated))
 :pattern ( ($generated@@20 $generated@@75))
))))
(assert  (=> (< 0 $generated@@19) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@24 $generated@@76 $generated@@22) ($generated@@74 $generated@@4 ($generated@@8 ($generated@@28 $generated@@76)) $generated))
 :pattern ( ($generated@@28 $generated@@76))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and ($generated@@77 $generated@@79) (<= ($generated@@37 $generated@@79) ($generated@@37 $generated@@78))) (and (= ($generated@@77 ($generated@@35 $generated@@78 $generated@@79)) ($generated@@77 $generated@@78)) (= ($generated@@37 ($generated@@35 $generated@@78 $generated@@79)) (- ($generated@@37 $generated@@78) ($generated@@37 $generated@@79)))))
 :pattern ( ($generated@@35 $generated@@78 $generated@@79))
)))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 Int) ) (!  (=> (or ($generated@@50 $generated@@81 ($generated@@44 $generated@@49 $generated@@82) $generated@@83) (and (< 2 $generated@@19) ($generated@@24 $generated@@81 $generated@@22))) (and (and (=> (< 0 ($generated@@37 $generated@@82)) (=> (<= 20 (+ ($generated@@51 100 ($generated@@20 $generated@@81)) ($generated@@28 $generated@@81))) ($generated@@50 $generated@@81 ($generated@@35 $generated@@82 ($generated@@36 1)) (+ $generated@@83 1)))) (=> (=> (< 0 ($generated@@37 $generated@@82)) (or (< (+ ($generated@@51 100 ($generated@@20 $generated@@81)) ($generated@@28 $generated@@81)) 20) ($generated@@47 ($generated@@48 $generated@@80) $generated@@81 ($generated@@35 $generated@@82 ($generated@@36 1)) (+ $generated@@83 1)))) (=> (= ($generated@@42 0) ($generated@@37 $generated@@82)) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@52 $generated@@84 $generated@@82) ($generated@@50 $generated@@81 $generated@@84 $generated@@83))
 :pattern ( ($generated@@47 ($generated@@48 $generated@@80) $generated@@81 $generated@@84 $generated@@83))
))))) (= ($generated@@47 ($generated@@48 $generated@@80) $generated@@81 ($generated@@44 $generated@@49 $generated@@82) $generated@@83)  (and (=> (< 0 ($generated@@37 $generated@@82)) (or (< (+ ($generated@@51 100 ($generated@@20 $generated@@81)) ($generated@@28 $generated@@81)) 20) ($generated@@47 ($generated@@48 $generated@@80) $generated@@81 ($generated@@35 $generated@@82 ($generated@@36 1)) (+ $generated@@83 1)))) (=> (= ($generated@@42 0) ($generated@@37 $generated@@82)) (exists (($generated@@85 T@U) ) (!  (and ($generated@@52 $generated@@85 $generated@@82) ($generated@@47 ($generated@@48 $generated@@80) $generated@@81 $generated@@85 $generated@@83))
 :pattern ( ($generated@@47 ($generated@@48 $generated@@80) $generated@@81 $generated@@85 $generated@@83))
)))))))
 :weight 3
 :pattern ( ($generated@@47 ($generated@@48 $generated@@80) $generated@@81 ($generated@@44 $generated@@49 $generated@@82) $generated@@83))
))))
(assert (forall (($generated@@86 Int) ) (!  (=> (<= 0 $generated@@86) (and ($generated@@77 ($generated@@36 $generated@@86)) (= ($generated@@37 ($generated@@36 $generated@@86)) $generated@@86)))
 :pattern ( ($generated@@36 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (or (or ($generated@@31 $generated@@87 $generated@@88) (= $generated@@87 $generated@@88)) ($generated@@31 $generated@@88 $generated@@87))
 :pattern ( ($generated@@31 $generated@@87 $generated@@88) ($generated@@31 $generated@@88 $generated@@87))
)))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (or ($generated@@50 $generated@@90 $generated@@91 $generated@@92) (and (< 2 $generated@@19) ($generated@@24 $generated@@90 $generated@@22))) (and (and (=> (< 0 ($generated@@37 $generated@@91)) (=> (<= 20 (+ ($generated@@51 100 ($generated@@20 $generated@@90)) ($generated@@28 $generated@@90))) ($generated@@50 $generated@@90 ($generated@@35 $generated@@91 ($generated@@36 1)) (+ $generated@@92 1)))) (=> (=> (< 0 ($generated@@37 $generated@@91)) (or (< (+ ($generated@@51 100 ($generated@@20 $generated@@90)) ($generated@@28 $generated@@90)) 20) ($generated@@47 $generated@@89 $generated@@90 ($generated@@35 $generated@@91 ($generated@@36 1)) (+ $generated@@92 1)))) (=> (= ($generated@@42 0) ($generated@@37 $generated@@91)) (forall (($generated@@93 T@U) ) (!  (=> ($generated@@52 $generated@@93 $generated@@91) ($generated@@50 $generated@@90 $generated@@93 $generated@@92))
 :pattern ( ($generated@@47 $generated@@89 $generated@@90 $generated@@93 $generated@@92))
))))) (= ($generated@@47 ($generated@@48 $generated@@89) $generated@@90 $generated@@91 $generated@@92)  (and (=> (< 0 ($generated@@37 $generated@@91)) (or (< (+ ($generated@@51 100 ($generated@@20 $generated@@90)) ($generated@@28 $generated@@90)) 20) ($generated@@47 $generated@@89 $generated@@90 ($generated@@35 $generated@@91 ($generated@@36 1)) (+ $generated@@92 1)))) (=> (= ($generated@@42 0) ($generated@@37 $generated@@91)) (exists (($generated@@94 T@U) ) (!  (and ($generated@@52 $generated@@94 $generated@@91) ($generated@@47 $generated@@89 $generated@@90 $generated@@94 $generated@@92))
 :pattern ( ($generated@@47 $generated@@89 $generated@@90 $generated@@94 $generated@@92))
)))))))
 :pattern ( ($generated@@47 ($generated@@48 $generated@@89) $generated@@90 $generated@@91 $generated@@92))
))))
(assert (forall (($generated@@95 Int) ($generated@@96 Int) ) (! (= ($generated@@51 $generated@@95 $generated@@96) (div $generated@@95 $generated@@96))
 :pattern ( ($generated@@51 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@52 $generated@@97 $generated@@98) ($generated@@31 $generated@@97 $generated@@98))
 :pattern ( ($generated@@52 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@24 $generated@@99 $generated) (and (= ($generated@@60 $generated@@4 ($generated@@59 $generated@@4 $generated@@99)) $generated@@99) ($generated@@74 $generated@@4 ($generated@@59 $generated@@4 $generated@@99) $generated)))
 :pattern ( ($generated@@24 $generated@@99 $generated))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@24 ($generated@@60 $generated@@102 $generated@@100) $generated@@101) ($generated@@74 $generated@@102 $generated@@100 $generated@@101))
 :pattern ( ($generated@@24 ($generated@@60 $generated@@102 $generated@@100) $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 Int) ) (! (= ($generated@@47 ($generated@@48 $generated@@103) $generated@@104 $generated@@105 $generated@@106) ($generated@@47 $generated@@103 $generated@@104 $generated@@105 $generated@@106))
 :pattern ( ($generated@@47 ($generated@@48 $generated@@103) $generated@@104 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (! (<= 0 ($generated@@37 $generated@@107))
 :pattern ( ($generated@@37 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@41 $generated@@108) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> ($generated@@24 $generated@@110 $generated@@108) ($generated@@21 $generated@@110 $generated@@108 $generated@@109))
 :pattern ( ($generated@@21 $generated@@110 $generated@@108 $generated@@109))
)))
 :pattern ( ($generated@@41 $generated@@108))
)))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 Int) ($generated@@114 T@U) ) (!  (=> (and ($generated@@24 $generated@@112 $generated@@22) (= $generated@@114 ($generated@@36 0))) (not ($generated@@47 $generated@@111 $generated@@112 $generated@@114 $generated@@113)))
 :pattern ( ($generated@@47 $generated@@111 $generated@@112 $generated@@114 $generated@@113))
))))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@59 $generated@@116 ($generated@@60 $generated@@116 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@60 $generated@@116 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (and (and (and (=> ($generated@@31 $generated@@117 $generated@@118) (or (not (= $generated@@117 $generated@@118)) (not true))) (=> (and ($generated@@77 $generated@@117) (not ($generated@@77 $generated@@118))) ($generated@@31 $generated@@117 $generated@@118))) (=> (and ($generated@@77 $generated@@117) ($generated@@77 $generated@@118)) (= ($generated@@31 $generated@@117 $generated@@118) (< ($generated@@37 $generated@@117) ($generated@@37 $generated@@118))))) (=> (and ($generated@@31 $generated@@117 $generated@@118) ($generated@@77 $generated@@118)) ($generated@@77 $generated@@117)))
 :pattern ( ($generated@@31 $generated@@117 $generated@@118))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@119 $generated@@129 $generated@@130 $generated@@131 ($generated@@125 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@134 $generated@@135) $generated@@132)
 :weight 0
)) (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@119 $generated@@136 $generated@@137 $generated@@138 ($generated@@125 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@119 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@119 $generated@@145 $generated@@146 $generated@@147 ($generated@@125 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@119 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)))) (= ($generated@@2 $generated@@120) 4)) (= ($generated@@2 $generated@@121) 5)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@123 $generated@@154 $generated@@155 ($generated@@126 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@156) $generated@@158) $generated@@156)
 :weight 0
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@163 $generated@@164) (= ($generated@@123 $generated@@159 $generated@@160 ($generated@@126 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@164) ($generated@@123 $generated@@159 $generated@@160 $generated@@162 $generated@@164)))
 :weight 0
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@2 ($generated@@124 $generated@@165 $generated@@166)) 6))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@127 ($generated@@124 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@124 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@128 ($generated@@124 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@124 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@7 ($generated@@119 $generated@@120 $generated@@121 $generated@@3 ($generated@@122 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@7 ($generated@@59 $generated@@3 ($generated@@123 $generated@@121 $generated@@49 ($generated@@123 $generated@@120 ($generated@@124 $generated@@121 $generated@@49) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121 $generated@@3 ($generated@@122 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> ($generated@@77 $generated@@177) (= $generated@@177 ($generated@@36 ($generated@@37 $generated@@177))))
 :pattern ( ($generated@@37 $generated@@177))
 :pattern ( ($generated@@77 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and ($generated@@77 $generated@@179) (<= ($generated@@37 $generated@@179) ($generated@@37 $generated@@178))) (or (and (= $generated@@179 ($generated@@36 0)) (= ($generated@@35 $generated@@178 $generated@@179) $generated@@178)) (and (or (not (= $generated@@179 ($generated@@36 0))) (not true)) ($generated@@31 ($generated@@35 $generated@@178 $generated@@179) $generated@@178))))
 :pattern ( ($generated@@35 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 Int) ) (! (= ($generated@@60 $generated@@4 ($generated@@8 ($generated@@42 $generated@@180))) ($generated@@44 $generated@@49 ($generated@@60 $generated@@4 ($generated@@8 $generated@@180))))
 :pattern ( ($generated@@60 $generated@@4 ($generated@@8 ($generated@@42 $generated@@180))))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@T) ) (! (= ($generated@@60 $generated@@182 ($generated@@44 $generated@@182 $generated@@181)) ($generated@@44 $generated@@49 ($generated@@60 $generated@@182 $generated@@181)))
 :pattern ( ($generated@@60 $generated@@182 ($generated@@44 $generated@@182 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! ($generated@@25 $generated@@4 $generated@@184 $generated $generated@@183)
 :pattern ( ($generated@@25 $generated@@4 $generated@@184 $generated $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ) (! ($generated@@74 $generated@@4 $generated@@185 $generated)
 :pattern ( ($generated@@74 $generated@@4 $generated@@185 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@198  (=> (= (ControlFlow 0 2) (- 0 1)) (< (+ ($generated@@51 100 ($generated@@20 $generated@@186)) ($generated@@28 $generated@@186)) 20))))
(let (($generated@@199  (=> (<= ($generated@@37 $generated@@187) 0) (=> (and (and (and ($generated@@23 $generated@@188) ($generated@@189 $generated@@188)) (= $generated@@190 $generated@@188)) (and (forall (($generated@@200 T@U) ($generated@@201 Int) ) (!  (=> (and ($generated@@31 $generated@@200 $generated@@187) (and ($generated@@47 ($generated@@48 $generated@@191) $generated@@186 $generated@@200 $generated@@201) (or (not (= ($generated@@20 $generated@@186) 0)) (not true)))) (< (+ ($generated@@51 100 ($generated@@20 $generated@@186)) ($generated@@28 $generated@@186)) 20))
 :pattern ( ($generated@@47 ($generated@@48 $generated@@191) $generated@@186 $generated@@200 $generated@@201))
)) (= (ControlFlow 0 6) 2))) $generated@@198))))
(let (($generated@@202  (=> (< 0 ($generated@@37 $generated@@187)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (not (= ($generated@@28 $generated@@186) 0)) (not true))) (=> (or (not (= ($generated@@28 $generated@@186) 0)) (not true)) (=> (= $generated@@192 (+ ($generated@@20 $generated@@186) ($generated@@51 20 ($generated@@28 $generated@@186)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= (+ ($generated@@20 $generated@@186) 1) 0)) (not true))) (=> (or (not (= (+ ($generated@@20 $generated@@186) 1) 0)) (not true)) (=> (and (= $generated@@193 ($generated@@51 20 (+ ($generated@@20 $generated@@186) 1))) (= (ControlFlow 0 3) 2)) $generated@@198)))))))))
(let (($generated@@203  (=> (= $generated@@194 ($generated@@122 $generated@@195 $generated@@196 $generated@@1 false)) (=> (and (and ($generated@@23 $generated@@190) ($generated@@189 $generated@@190)) (and (= $generated@@196 $generated@@190) (forall (($generated@@204 T@U) ($generated@@205 Int) ) (!  (=> (and (and ($generated@@47 ($generated@@48 $generated@@191) $generated@@186 $generated@@204 $generated@@205) (or (not (= ($generated@@20 $generated@@186) 0)) (not true))) (or ($generated@@31 $generated@@204 $generated@@187) (and (= $generated@@204 $generated@@187) (and (<= 0 $generated@@205) (< $generated@@205 $generated@@197))))) (< (+ ($generated@@51 100 ($generated@@20 $generated@@186)) ($generated@@28 $generated@@186)) 20))
 :pattern ( ($generated@@47 ($generated@@48 $generated@@191) $generated@@186 $generated@@204 $generated@@205))
)))) (and (=> (= (ControlFlow 0 7) 3) $generated@@202) (=> (= (ControlFlow 0 7) 6) $generated@@199))))))
(let (($generated@@206  (=> (and ($generated@@23 $generated@@196) ($generated@@189 $generated@@196)) (=> (and (and (and ($generated@@24 $generated@@186 $generated@@22) ($generated@@21 $generated@@186 $generated@@22 $generated@@196)) (= 3 $generated@@19)) (and (and ($generated@@50 $generated@@186 $generated@@187 $generated@@197) (and ($generated@@47 ($generated@@48 $generated@@191) $generated@@186 $generated@@187 $generated@@197) (and (=> (< 0 ($generated@@37 $generated@@187)) (or (< (+ ($generated@@51 100 ($generated@@20 $generated@@186)) ($generated@@28 $generated@@186)) 20) ($generated@@47 ($generated@@48 $generated@@191) $generated@@186 ($generated@@35 $generated@@187 ($generated@@36 1)) (+ $generated@@197 1)))) (=> (= ($generated@@42 0) ($generated@@37 $generated@@187)) (exists (($generated@@207 T@U) ) (!  (and ($generated@@52 $generated@@207 $generated@@187) ($generated@@47 ($generated@@48 $generated@@191) $generated@@186 $generated@@207 $generated@@197))
 :pattern ( ($generated@@47 ($generated@@48 $generated@@191) $generated@@186 $generated@@207 $generated@@197))
)))))) (and (or (not (= ($generated@@20 $generated@@186) 0)) (not true)) (= (ControlFlow 0 8) 7)))) $generated@@203))))
$generated@@206))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 4))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
