(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@U T@U) T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@50 () Int)
(declare-fun $generated@@51 (T@U T@U T@U) T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@80 (T@U) Bool)
(declare-fun $generated@@95 (T@U) Int)
(declare-fun $generated@@96 (T@U) Int)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@106 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T) T@T)
(declare-fun $generated@@112 (T@T) T@T)
(declare-fun $generated@@162 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@22) $generated@@2))
(assert (= ($generated@@5 $generated@@24) 3))
(assert ($generated@@23 $generated@@24 $generated@@22 $generated@@25))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@28) (= $generated@@27 $generated@@28))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@T) ) (! (= ($generated@@29 $generated@@31 $generated@@30) $generated@@30)
 :pattern ( ($generated@@29 $generated@@31 $generated@@30))
)))
(assert (forall (($generated@@33 T@U) ) (! (= ($generated@@32 $generated@@33) (= ($generated@@21 $generated@@33) $generated@@0))
 :pattern ( ($generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ) (! (= ($generated@@34 $generated@@35) (= ($generated@@21 $generated@@35) $generated@@2))
 :pattern ( ($generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ) (! (= ($generated@@36 $generated@@37) (= ($generated@@21 $generated@@37) $generated@@3))
 :pattern ( ($generated@@36 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@39 $generated@@41 ($generated@@38 $generated@@41 $generated@@40)) $generated@@40)
 :pattern ( ($generated@@38 $generated@@41 $generated@@40))
)))
(assert (forall (($generated@@43 T@U) ) (!  (=> ($generated@@32 $generated@@43) (exists (($generated@@44 T@U) ($generated@@45 T@U) ) (= $generated@@43 ($generated@@42 $generated@@44 $generated@@45))))
 :pattern ( ($generated@@32 $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ) (!  (=> ($generated@@34 $generated@@46) (= $generated@@46 $generated@@22))
 :pattern ( ($generated@@34 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ) (!  (=> ($generated@@36 $generated@@48) (exists (($generated@@49 T@U) ) (= $generated@@48 ($generated@@47 $generated@@49))))
 :pattern ( ($generated@@36 $generated@@48))
)))
(assert  (=> (<= 1 $generated@@50) (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (or ($generated@@53 ($generated@@29 $generated@@24 $generated@@58) ($generated@@29 $generated@@24 $generated@@59)) (and (< 1 $generated@@50) (and ($generated@@23 $generated@@24 $generated@@58 $generated@@25) ($generated@@23 $generated@@24 $generated@@59 $generated@@25)))) (and (and ($generated@@32 ($generated@@29 $generated@@24 ($generated@@42 ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@58)) ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@59))))) (=> (not ($generated@@10 ($generated@@29 $generated@@6 ($generated@@9 ($generated@@34 ($generated@@29 $generated@@24 ($generated@@38 $generated@@24 ($generated@@54 ($generated@@29 $generated@@24 ($generated@@42 ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@58)) ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@59)))))))))))) (and ($generated@@32 ($generated@@29 $generated@@24 ($generated@@42 ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@58)) ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@59))))) (=> (not ($generated@@10 ($generated@@29 $generated@@6 ($generated@@9 ($generated@@34 ($generated@@29 $generated@@24 ($generated@@38 $generated@@24 ($generated@@55 ($generated@@29 $generated@@24 ($generated@@42 ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@58)) ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@59)))))))))))) (and ($generated@@32 ($generated@@29 $generated@@24 ($generated@@42 ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@58)) ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@59))))) (let (($generated@@60 ($generated@@29 $generated@@24 ($generated@@56 ($generated@@29 $generated@@24 ($generated@@38 $generated@@24 ($generated@@55 ($generated@@29 $generated@@24 ($generated@@42 ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@58)) ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@59)))))))))))
 (and ($generated@@32 ($generated@@29 $generated@@24 ($generated@@42 ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@58)) ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@59))))) (let (($generated@@61 ($generated@@29 $generated@@24 ($generated@@56 ($generated@@29 $generated@@24 ($generated@@38 $generated@@24 ($generated@@54 ($generated@@29 $generated@@24 ($generated@@42 ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@58)) ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@59)))))))))))
($generated@@53 $generated@@61 $generated@@60))))))))) (= ($generated@@51 ($generated@@52 $generated@@57) ($generated@@29 $generated@@24 $generated@@58) ($generated@@29 $generated@@24 $generated@@59)) (ite ($generated@@34 ($generated@@29 $generated@@24 ($generated@@38 $generated@@24 ($generated@@54 ($generated@@29 $generated@@24 ($generated@@42 ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@58)) ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@59)))))))) $generated@@22 (ite ($generated@@34 ($generated@@29 $generated@@24 ($generated@@38 $generated@@24 ($generated@@55 ($generated@@29 $generated@@24 ($generated@@42 ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@58)) ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@59)))))))) $generated@@58 (let (($generated@@62 ($generated@@29 $generated@@24 ($generated@@56 ($generated@@29 $generated@@24 ($generated@@38 $generated@@24 ($generated@@55 ($generated@@29 $generated@@24 ($generated@@42 ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@58)) ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@59)))))))))))
(let (($generated@@63 ($generated@@29 $generated@@24 ($generated@@56 ($generated@@29 $generated@@24 ($generated@@38 $generated@@24 ($generated@@54 ($generated@@29 $generated@@24 ($generated@@42 ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@58)) ($generated@@39 $generated@@24 ($generated@@29 $generated@@24 $generated@@59)))))))))))
($generated@@29 $generated@@24 ($generated@@51 ($generated@@52 $generated@@57) $generated@@63 $generated@@62)))))))))
 :weight 3
 :pattern ( ($generated@@51 ($generated@@52 $generated@@57) ($generated@@29 $generated@@24 $generated@@58) ($generated@@29 $generated@@24 $generated@@59)))
))))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@47 $generated@@64) $generated@@25) ($generated@@23 $generated@@24 $generated@@64 $generated@@25))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@47 $generated@@64) $generated@@25))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (and ($generated@@36 $generated@@65) ($generated@@36 $generated@@66)) (= ($generated@@26 $generated@@65 $generated@@66) ($generated@@26 ($generated@@56 $generated@@65) ($generated@@56 $generated@@66))))
 :pattern ( ($generated@@26 $generated@@65 $generated@@66) ($generated@@36 $generated@@65))
 :pattern ( ($generated@@26 $generated@@65 $generated@@66) ($generated@@36 $generated@@66))
)))
(assert  (=> (<= 1 $generated@@50) (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (or ($generated@@53 $generated@@68 $generated@@69) (and (< 1 $generated@@50) (and ($generated@@23 $generated@@24 $generated@@68 $generated@@25) ($generated@@23 $generated@@24 $generated@@69 $generated@@25)))) ($generated@@23 $generated@@24 ($generated@@51 $generated@@67 $generated@@68 $generated@@69) $generated@@25))
 :pattern ( ($generated@@51 $generated@@67 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@51 ($generated@@52 $generated@@70) $generated@@71 $generated@@72) ($generated@@51 $generated@@70 $generated@@71 $generated@@72))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@70) $generated@@71 $generated@@72))
)))
(assert  (=> (<= 1 $generated@@50) (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (or ($generated@@53 $generated@@74 $generated@@75) (and (< 1 $generated@@50) (and ($generated@@23 $generated@@24 $generated@@74 $generated@@25) ($generated@@23 $generated@@24 $generated@@75 $generated@@25)))) (and (and ($generated@@32 ($generated@@42 ($generated@@39 $generated@@24 $generated@@74) ($generated@@39 $generated@@24 $generated@@75))) (=> (not ($generated@@34 ($generated@@38 $generated@@24 ($generated@@54 ($generated@@42 ($generated@@39 $generated@@24 $generated@@74) ($generated@@39 $generated@@24 $generated@@75)))))) (and ($generated@@32 ($generated@@42 ($generated@@39 $generated@@24 $generated@@74) ($generated@@39 $generated@@24 $generated@@75))) (=> (not ($generated@@34 ($generated@@38 $generated@@24 ($generated@@55 ($generated@@42 ($generated@@39 $generated@@24 $generated@@74) ($generated@@39 $generated@@24 $generated@@75)))))) (and ($generated@@32 ($generated@@42 ($generated@@39 $generated@@24 $generated@@74) ($generated@@39 $generated@@24 $generated@@75))) (let (($generated@@76 ($generated@@56 ($generated@@38 $generated@@24 ($generated@@55 ($generated@@42 ($generated@@39 $generated@@24 $generated@@74) ($generated@@39 $generated@@24 $generated@@75)))))))
 (and ($generated@@32 ($generated@@42 ($generated@@39 $generated@@24 $generated@@74) ($generated@@39 $generated@@24 $generated@@75))) (let (($generated@@77 ($generated@@56 ($generated@@38 $generated@@24 ($generated@@54 ($generated@@42 ($generated@@39 $generated@@24 $generated@@74) ($generated@@39 $generated@@24 $generated@@75)))))))
($generated@@53 $generated@@77 $generated@@76))))))))) (= ($generated@@51 ($generated@@52 $generated@@73) $generated@@74 $generated@@75) (ite ($generated@@34 ($generated@@38 $generated@@24 ($generated@@54 ($generated@@42 ($generated@@39 $generated@@24 $generated@@74) ($generated@@39 $generated@@24 $generated@@75))))) $generated@@22 (ite ($generated@@34 ($generated@@38 $generated@@24 ($generated@@55 ($generated@@42 ($generated@@39 $generated@@24 $generated@@74) ($generated@@39 $generated@@24 $generated@@75))))) $generated@@74 (let (($generated@@78 ($generated@@56 ($generated@@38 $generated@@24 ($generated@@55 ($generated@@42 ($generated@@39 $generated@@24 $generated@@74) ($generated@@39 $generated@@24 $generated@@75)))))))
(let (($generated@@79 ($generated@@56 ($generated@@38 $generated@@24 ($generated@@54 ($generated@@42 ($generated@@39 $generated@@24 $generated@@74) ($generated@@39 $generated@@24 $generated@@75)))))))
($generated@@51 $generated@@73 $generated@@79 $generated@@78))))))))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@73) $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@80 $generated@@81) (or ($generated@@34 $generated@@81) ($generated@@36 $generated@@81)))
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@82 $generated@@25) (or ($generated@@34 $generated@@82) ($generated@@36 $generated@@82)))
 :pattern ( ($generated@@36 $generated@@82) ($generated@@23 $generated@@24 $generated@@82 $generated@@25))
 :pattern ( ($generated@@34 $generated@@82) ($generated@@23 $generated@@24 $generated@@82 $generated@@25))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and ($generated@@34 $generated@@83) ($generated@@34 $generated@@84)) ($generated@@26 $generated@@83 $generated@@84))
 :pattern ( ($generated@@26 $generated@@83 $generated@@84) ($generated@@34 $generated@@83))
 :pattern ( ($generated@@26 $generated@@83 $generated@@84) ($generated@@34 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@21 ($generated@@42 $generated@@85 $generated@@86)) $generated@@0)
 :pattern ( ($generated@@42 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@54 ($generated@@42 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@42 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@55 ($generated@@42 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@42 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@21 ($generated@@47 $generated@@91)) $generated@@3)
 :pattern ( ($generated@@47 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@56 ($generated@@47 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@47 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@38 $generated@@94 ($generated@@39 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@39 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (< ($generated@@95 $generated@@97) ($generated@@96 ($generated@@42 $generated@@97 $generated@@98)))
 :pattern ( ($generated@@42 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (< ($generated@@95 $generated@@100) ($generated@@96 ($generated@@42 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@42 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (! (< ($generated@@96 $generated@@101) ($generated@@96 ($generated@@47 $generated@@101)))
 :pattern ( ($generated@@47 $generated@@101))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@102 $generated@@113 $generated@@114 $generated@@115 ($generated@@109 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@118 $generated@@119) $generated@@116)
 :weight 0
)) (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@102 $generated@@120 $generated@@121 $generated@@122 ($generated@@109 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@102 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@102 $generated@@129 $generated@@130 $generated@@131 ($generated@@109 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)))) (= ($generated@@5 $generated@@103) 4)) (= ($generated@@5 $generated@@104) 5)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@106 $generated@@138 $generated@@139 ($generated@@110 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@140) $generated@@142) $generated@@140)
 :weight 0
))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@147 $generated@@148) (= ($generated@@106 $generated@@143 $generated@@144 ($generated@@110 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@106 $generated@@143 $generated@@144 $generated@@146 $generated@@148)))
 :weight 0
))) (= ($generated@@5 $generated@@107) 6)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (= ($generated@@5 ($generated@@108 $generated@@149 $generated@@150)) 7))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@111 ($generated@@108 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@108 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@112 ($generated@@108 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@108 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@10 ($generated@@102 $generated@@103 $generated@@104 $generated@@6 ($generated@@105 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (or (not (= $generated@@159 $generated@@155)) (not true)) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@106 $generated@@104 $generated@@107 ($generated@@106 $generated@@103 ($generated@@108 $generated@@104 $generated@@107) $generated@@156 $generated@@159) $generated@@157)))) $generated@@158))
 :pattern ( ($generated@@102 $generated@@103 $generated@@104 $generated@@6 ($generated@@105 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@95 ($generated@@39 $generated@@24 $generated@@161)) ($generated@@96 $generated@@161))
 :pattern ( ($generated@@95 ($generated@@39 $generated@@24 $generated@@161)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@163 $generated@@165) ($generated@@23 $generated@@24 $generated@@164 $generated@@25)) ($generated@@162 $generated@@24 $generated@@164 $generated@@25 $generated@@165))
 :pattern ( ($generated@@162 $generated@@24 $generated@@164 $generated@@25 $generated@@165))
)))
(assert (= ($generated@@166 $generated@@25) $generated@@1))
(assert (= ($generated@@167 $generated@@25) $generated@@4))
(assert (= $generated@@22 ($generated@@29 $generated@@24 $generated@@22)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and ($generated@@163 $generated@@169) (and ($generated@@36 $generated@@168) ($generated@@162 $generated@@24 $generated@@168 $generated@@25 $generated@@169))) ($generated@@162 $generated@@24 ($generated@@56 $generated@@168) $generated@@25 $generated@@169))
 :pattern ( ($generated@@162 $generated@@24 ($generated@@56 $generated@@168) $generated@@25 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@42 ($generated@@29 $generated@@107 $generated@@170) ($generated@@29 $generated@@107 $generated@@171)) ($generated@@29 $generated@@24 ($generated@@42 $generated@@170 $generated@@171)))
 :pattern ( ($generated@@42 ($generated@@29 $generated@@107 $generated@@170) ($generated@@29 $generated@@107 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@47 ($generated@@29 $generated@@24 $generated@@172)) ($generated@@29 $generated@@24 ($generated@@47 $generated@@172)))
 :pattern ( ($generated@@47 ($generated@@29 $generated@@24 $generated@@172)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@39 $generated@@174 ($generated@@29 $generated@@174 $generated@@173)) ($generated@@29 $generated@@107 ($generated@@39 $generated@@174 $generated@@173)))
 :pattern ( ($generated@@39 $generated@@174 ($generated@@29 $generated@@174 $generated@@173)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@184  (=> (= $generated@@175 ($generated@@105 $generated@@176 $generated@@177 $generated false)) (=> (and (and (and (and (= $generated@@178 ($generated@@47 $generated@@179)) ($generated@@162 $generated@@24 $generated@@178 $generated@@25 $generated@@177)) (and (= $generated@@180 ($generated@@47 $generated@@181)) ($generated@@162 $generated@@24 $generated@@180 $generated@@25 $generated@@177))) (and (and ($generated@@53 ($generated@@47 $generated@@179) ($generated@@47 $generated@@181)) ($generated@@162 $generated@@24 $generated@@179 $generated@@25 $generated@@177)) (and ($generated@@162 $generated@@24 $generated@@181 $generated@@25 $generated@@177) ($generated@@53 $generated@@179 $generated@@181)))) (and (and (and ($generated@@80 ($generated@@51 ($generated@@52 $generated@@182) ($generated@@47 $generated@@179) ($generated@@47 $generated@@181))) ($generated@@80 ($generated@@51 ($generated@@52 $generated@@182) $generated@@179 $generated@@181))) (and ($generated@@53 ($generated@@47 $generated@@179) ($generated@@47 $generated@@181)) ($generated@@53 $generated@@179 $generated@@181))) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@26 ($generated@@51 ($generated@@52 ($generated@@52 $generated@@182)) ($generated@@47 $generated@@179) ($generated@@47 $generated@@181)) ($generated@@51 ($generated@@52 ($generated@@52 $generated@@182)) $generated@@179 $generated@@181))))))
(let (($generated@@185  (=> (and ($generated@@163 $generated@@177) ($generated@@183 $generated@@177)) (=> (and (and ($generated@@23 $generated@@24 $generated@@179 $generated@@25) ($generated@@162 $generated@@24 $generated@@179 $generated@@25 $generated@@177)) ($generated@@80 $generated@@179)) (=> (and (and (and ($generated@@23 $generated@@24 $generated@@181 $generated@@25) ($generated@@162 $generated@@24 $generated@@181 $generated@@25 $generated@@177)) ($generated@@80 $generated@@181)) (and (= 2 $generated@@50) (= (ControlFlow 0 3) 2))) $generated@@184)))))
$generated@@185)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
