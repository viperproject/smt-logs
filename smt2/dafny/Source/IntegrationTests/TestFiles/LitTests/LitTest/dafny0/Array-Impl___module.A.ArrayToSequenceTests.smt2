(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U Int) T@U)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@49 (T@U Int) T@U)
(declare-fun $generated@@50 (T@U T@U) T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T T@T) T@T)
(declare-fun $generated@@62 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@95 (Int) Int)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@102 (T@U T@U) Bool)
(declare-fun $generated@@106 (T@U Int) T@U)
(declare-fun $generated@@112 (T@U) Bool)
(declare-fun $generated@@113 (T@U T@U T@U) Bool)
(declare-fun $generated@@118 (T@T T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Int)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@179 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated@@2) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and (or (not (= $generated@@33 $generated@@29)) (not true)) (= ($generated@@30 $generated@@33) ($generated@@28 $generated@@32))) ($generated@@31 $generated@@11 ($generated@@15 ($generated@@27 $generated@@33)) $generated))
 :pattern ( ($generated@@27 $generated@@33) ($generated@@28 $generated@@32))
)))
(assert (= ($generated@@9 $generated@@35) 3))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@38 ($generated@@36 $generated@@37) $generated@@39) ($generated@@34 $generated@@35 $generated@@38 ($generated@@28 $generated@@37) $generated@@39))
 :pattern ( ($generated@@34 $generated@@35 $generated@@38 ($generated@@36 $generated@@37) $generated@@39))
 :pattern ( ($generated@@34 $generated@@35 $generated@@38 ($generated@@28 $generated@@37) $generated@@39))
)))
(assert (= ($generated@@40 $generated@@41) 0))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 Int) ) (!  (=> (and (<= 0 $generated@@46) (<= $generated@@46 ($generated@@40 $generated@@44))) (= ($generated@@42 ($generated@@43 $generated@@44 $generated@@45) $generated@@46) ($generated@@43 ($generated@@42 $generated@@44 $generated@@46) $generated@@45)))
 :pattern ( ($generated@@42 ($generated@@43 $generated@@44 $generated@@45) $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@48 $generated@@47)  (or (= $generated@@48 $generated@@29) (= ($generated@@30 $generated@@48) $generated@@47)))
 :pattern ( ($generated@@31 $generated@@35 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 Int) ) (!  (=> (= $generated@@53 ($generated@@40 $generated@@51)) (and (= ($generated@@49 ($generated@@50 $generated@@51 $generated@@52) $generated@@53) $generated@@51) (= ($generated@@42 ($generated@@50 $generated@@51 $generated@@52) $generated@@53) $generated@@52)))
 :pattern ( ($generated@@49 ($generated@@50 $generated@@51 $generated@@52) $generated@@53))
 :pattern ( ($generated@@42 ($generated@@50 $generated@@51 $generated@@52) $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@55 $generated@@54 $generated@@56) ($generated@@34 $generated@@35 $generated@@55 $generated@@47 $generated@@56))
 :pattern ( ($generated@@34 $generated@@35 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@34 $generated@@35 $generated@@55 $generated@@47 $generated@@56))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@58 $generated@@65 $generated@@66 ($generated@@62 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@69) $generated@@67)
 :weight 0
)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (or (= $generated@@74 $generated@@75) (= ($generated@@58 $generated@@70 $generated@@71 ($generated@@62 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@75) ($generated@@58 $generated@@70 $generated@@71 $generated@@73 $generated@@75)))
 :weight 0
))) (= ($generated@@9 $generated@@59) 4)) (= ($generated@@9 $generated@@60) 5)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@9 ($generated@@61 $generated@@76 $generated@@77)) 6))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@63 ($generated@@61 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@61 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@64 ($generated@@61 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@61 $generated@@80 $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@83 ($generated@@28 $generated@@82) $generated@@84)  (or (= $generated@@83 $generated@@29) ($generated@@14 ($generated@@57 $generated@@10 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@84 $generated@@83) $generated@@2)))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@83 ($generated@@28 $generated@@82) $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@85 $generated@@47 $generated@@86)  (or (= $generated@@85 $generated@@29) ($generated@@14 ($generated@@57 $generated@@10 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@86 $generated@@85) $generated@@2)))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@85 $generated@@47 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 Int) ($generated@@92 Int) ) (!  (=> (and (and (= (+ $generated@@91 1) $generated@@92) (<= 0 $generated@@91)) (<= $generated@@92 ($generated@@27 $generated@@90))) (= ($generated@@49 ($generated@@87 $generated@@89 $generated@@90) $generated@@92) ($generated@@43 ($generated@@49 ($generated@@87 $generated@@89 $generated@@90) $generated@@91) ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@89 $generated@@90) ($generated@@88 $generated@@91)))))
 :pattern ( ($generated@@49 ($generated@@87 $generated@@89 $generated@@90) $generated@@91) ($generated@@49 ($generated@@87 $generated@@89 $generated@@90) $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 Int) ) (!  (=> (= $generated@@94 0) (= ($generated@@42 $generated@@93 $generated@@94) $generated@@93))
 :pattern ( ($generated@@42 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 Int) ) (! (= ($generated@@95 $generated@@96) $generated@@96)
 :pattern ( ($generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 $generated@@98) $generated@@98)
 :pattern ( ($generated@@97 $generated@@99 $generated@@98))
)))
(assert (= ($generated@@9 $generated@@100) 7))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (and ($generated@@31 $generated@@100 $generated@@103 ($generated@@101 $generated@@105)) ($generated@@102 $generated@@104 $generated@@105)) ($generated@@31 $generated@@100 ($generated@@43 $generated@@103 $generated@@104) ($generated@@101 $generated@@105)))
 :pattern ( ($generated@@31 $generated@@100 ($generated@@43 $generated@@103 $generated@@104) ($generated@@101 $generated@@105)))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 Int) ($generated@@109 Int) ) (!  (=> (and (and (<= 0 $generated@@109) (< $generated@@109 $generated@@108)) (< $generated@@109 ($generated@@40 $generated@@107))) (= ($generated@@106 ($generated@@49 $generated@@107 $generated@@108) $generated@@109) ($generated@@106 $generated@@107 $generated@@109)))
 :weight 25
 :pattern ( ($generated@@106 ($generated@@49 $generated@@107 $generated@@108) $generated@@109))
 :pattern ( ($generated@@106 $generated@@107 $generated@@109) ($generated@@49 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 Int) ) (!  (=> (and (<= 0 $generated@@111) (<= $generated@@111 ($generated@@40 $generated@@110))) (= ($generated@@40 ($generated@@42 $generated@@110 $generated@@111)) (- ($generated@@40 $generated@@110) $generated@@111)))
 :pattern ( ($generated@@40 ($generated@@42 $generated@@110 $generated@@111)))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 Int) ) (!  (=> (and (and (and ($generated@@112 $generated@@115) (and (or (not (= $generated@@116 $generated@@29)) (not true)) (= ($generated@@30 $generated@@116) ($generated@@28 $generated@@114)))) (and (<= 0 $generated@@117) (< $generated@@117 ($generated@@27 $generated@@116)))) ($generated@@14 ($generated@@57 $generated@@10 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@115 $generated@@116) $generated@@2)))) ($generated@@113 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@115 $generated@@116) ($generated@@88 $generated@@117)) $generated@@114 $generated@@115))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@115 $generated@@116) ($generated@@88 $generated@@117)) ($generated@@28 $generated@@114))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@118 $generated@@120 ($generated@@57 $generated@@120 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@57 $generated@@120 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@40 ($generated@@43 $generated@@121 $generated@@122)) (+ 1 ($generated@@40 $generated@@121)))
 :pattern ( ($generated@@43 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@124 ($generated@@36 $generated@@123))  (and ($generated@@31 $generated@@35 $generated@@124 ($generated@@28 $generated@@123)) (or (not (= $generated@@124 $generated@@29)) (not true))))
 :pattern ( ($generated@@31 $generated@@35 $generated@@124 ($generated@@36 $generated@@123)))
 :pattern ( ($generated@@31 $generated@@35 $generated@@124 ($generated@@28 $generated@@123)))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@113 ($generated@@118 $generated@@128 $generated@@125) $generated@@126 $generated@@127) ($generated@@34 $generated@@128 $generated@@125 $generated@@126 $generated@@127))
 :pattern ( ($generated@@113 ($generated@@118 $generated@@128 $generated@@125) $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 Int) ($generated@@131 Int) ) (!  (=> (and (and (<= 0 $generated@@130) (<= 0 $generated@@131)) (< $generated@@131 (- ($generated@@40 $generated@@129) $generated@@130))) (= ($generated@@106 ($generated@@42 $generated@@129 $generated@@130) $generated@@131) ($generated@@106 $generated@@129 (+ $generated@@131 $generated@@130))))
 :weight 25
 :pattern ( ($generated@@106 ($generated@@42 $generated@@129 $generated@@130) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (and (= ($generated@@26 ($generated@@28 $generated@@133)) $generated@@3) (= ($generated@@132 ($generated@@28 $generated@@133)) $generated@@7))
 :pattern ( ($generated@@28 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ) (!  (and (= ($generated@@26 ($generated@@36 $generated@@134)) $generated@@4) (= ($generated@@132 ($generated@@36 $generated@@134)) $generated@@7))
 :pattern ( ($generated@@36 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@40 ($generated@@50 $generated@@135 $generated@@136)) (+ ($generated@@40 $generated@@135) ($generated@@40 $generated@@136)))
 :pattern ( ($generated@@40 ($generated@@50 $generated@@135 $generated@@136)))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@102 $generated@@137 $generated@@47) (and (= ($generated@@118 $generated@@35 ($generated@@57 $generated@@35 $generated@@137)) $generated@@137) ($generated@@31 $generated@@35 ($generated@@57 $generated@@35 $generated@@137) $generated@@47)))
 :pattern ( ($generated@@102 $generated@@137 $generated@@47))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@102 $generated@@138 $generated@@54) (and (= ($generated@@118 $generated@@35 ($generated@@57 $generated@@35 $generated@@138)) $generated@@138) ($generated@@31 $generated@@35 ($generated@@57 $generated@@35 $generated@@138) $generated@@54)))
 :pattern ( ($generated@@102 $generated@@138 $generated@@54))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@140 ($generated@@28 $generated@@139))  (or (= $generated@@140 $generated@@29) (= ($generated@@30 $generated@@140) ($generated@@28 $generated@@139))))
 :pattern ( ($generated@@31 $generated@@35 $generated@@140 ($generated@@28 $generated@@139)))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@141 $generated@@54)  (and ($generated@@31 $generated@@35 $generated@@141 $generated@@47) (or (not (= $generated@@141 $generated@@29)) (not true))))
 :pattern ( ($generated@@31 $generated@@35 $generated@@141 $generated@@54))
 :pattern ( ($generated@@31 $generated@@35 $generated@@141 $generated@@47))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 Int) ($generated@@144 T@U) ) (!  (and (=> (= $generated@@143 ($generated@@40 $generated@@142)) (= ($generated@@106 ($generated@@43 $generated@@142 $generated@@144) $generated@@143) $generated@@144)) (=> (or (not (= $generated@@143 ($generated@@40 $generated@@142))) (not true)) (= ($generated@@106 ($generated@@43 $generated@@142 $generated@@144) $generated@@143) ($generated@@106 $generated@@142 $generated@@143))))
 :pattern ( ($generated@@106 ($generated@@43 $generated@@142 $generated@@144) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (forall (($generated@@147 Int) ) (!  (=> (and (<= 0 $generated@@147) (< $generated@@147 ($generated@@40 ($generated@@87 $generated@@145 $generated@@146)))) (= ($generated@@106 ($generated@@87 $generated@@145 $generated@@146) $generated@@147) ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@145 $generated@@146) ($generated@@88 $generated@@147))))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@145 $generated@@146) ($generated@@88 $generated@@147)))
 :pattern ( ($generated@@106 ($generated@@87 $generated@@145 $generated@@146) $generated@@147))
))
 :pattern ( ($generated@@87 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 Int) ) (!  (=> (and (<= 0 $generated@@149) (<= $generated@@149 ($generated@@40 $generated@@148))) (= ($generated@@40 ($generated@@49 $generated@@148 $generated@@149)) $generated@@149))
 :pattern ( ($generated@@40 ($generated@@49 $generated@@148 $generated@@149)))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> ($generated@@102 $generated@@150 $generated) (and (= ($generated@@118 $generated@@11 ($generated@@57 $generated@@11 $generated@@150)) $generated@@150) ($generated@@31 $generated@@11 ($generated@@57 $generated@@11 $generated@@150) $generated)))
 :pattern ( ($generated@@102 $generated@@150 $generated))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@102 ($generated@@118 $generated@@153 $generated@@151) $generated@@152) ($generated@@31 $generated@@153 $generated@@151 $generated@@152))
 :pattern ( ($generated@@102 ($generated@@118 $generated@@153 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (! (<= 0 ($generated@@27 $generated@@154))
 :pattern ( ($generated@@27 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (! (<= 0 ($generated@@40 $generated@@155))
 :pattern ( ($generated@@40 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@34 $generated@@100 $generated@@156 ($generated@@101 $generated@@157) $generated@@158) (forall (($generated@@159 Int) ) (!  (=> (and (<= 0 $generated@@159) (< $generated@@159 ($generated@@40 $generated@@156))) ($generated@@113 ($generated@@106 $generated@@156 $generated@@159) $generated@@157 $generated@@158))
 :pattern ( ($generated@@106 $generated@@156 $generated@@159))
)))
 :pattern ( ($generated@@34 $generated@@100 $generated@@156 ($generated@@101 $generated@@157) $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@160 ($generated@@101 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@101 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@26 ($generated@@101 $generated@@162)) $generated@@1)
 :pattern ( ($generated@@101 $generated@@162))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@25 ($generated@@88 $generated@@163)) 1)
 :pattern ( ($generated@@88 $generated@@163))
)))
(assert (forall (($generated@@165 Int) ) (! (= ($generated@@164 ($generated@@88 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@88 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@166 ($generated@@28 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@28 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@168 ($generated@@36 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@36 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@57 $generated@@171 ($generated@@118 $generated@@171 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@118 $generated@@171 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and ($generated@@112 $generated@@173) (and (or (not (= $generated@@174 $generated@@29)) (not true)) (= ($generated@@30 $generated@@174) ($generated@@28 $generated@@172)))) ($generated@@14 ($generated@@57 $generated@@10 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@173 $generated@@174) $generated@@2)))) ($generated@@34 $generated@@11 ($generated@@15 ($generated@@27 $generated@@174)) $generated $generated@@173))
 :pattern ( ($generated@@27 $generated@@174) ($generated@@57 $generated@@10 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@173 $generated@@174) $generated@@2)) ($generated@@28 $generated@@172))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 Int) ) (!  (=> (and (and ($generated@@112 $generated@@176) (and (or (not (= $generated@@177 $generated@@29)) (not true)) (= ($generated@@30 $generated@@177) ($generated@@28 $generated@@175)))) (and (<= 0 $generated@@178) (< $generated@@178 ($generated@@27 $generated@@177)))) ($generated@@102 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@176 $generated@@177) ($generated@@88 $generated@@178)) $generated@@175))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@176 $generated@@177) ($generated@@88 $generated@@178)) ($generated@@28 $generated@@175))
)))
(assert  (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@179 $generated@@182 $generated@@183 $generated@@184 ($generated@@181 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@187 $generated@@188) $generated@@185)
 :weight 0
)) (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@179 $generated@@189 $generated@@190 $generated@@191 ($generated@@181 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@179 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@T) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@179 $generated@@198 $generated@@199 $generated@@200 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@179 $generated@@198 $generated@@199 $generated@@200 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@14 ($generated@@179 $generated@@35 $generated@@59 $generated@@10 ($generated@@180 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (or (not (= $generated@@211 $generated@@207)) (not true)) ($generated@@14 ($generated@@57 $generated@@10 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@35 ($generated@@61 $generated@@59 $generated@@60) $generated@@208 $generated@@211) $generated@@209)))) $generated@@210))
 :pattern ( ($generated@@179 $generated@@35 $generated@@59 $generated@@10 ($generated@@180 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@40 ($generated@@87 $generated@@213 $generated@@214)) ($generated@@27 $generated@@214))
 :pattern ( ($generated@@40 ($generated@@87 $generated@@213 $generated@@214)))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (and (= ($generated@@215 ($generated@@43 $generated@@217 $generated@@218)) $generated@@217) (= ($generated@@216 ($generated@@43 $generated@@217 $generated@@218)) $generated@@218))
 :pattern ( ($generated@@43 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> ($generated@@102 $generated@@219 ($generated@@101 $generated@@220)) (and (= ($generated@@118 $generated@@100 ($generated@@57 $generated@@100 $generated@@219)) $generated@@219) ($generated@@31 $generated@@100 ($generated@@57 $generated@@100 $generated@@219) ($generated@@101 $generated@@220))))
 :pattern ( ($generated@@102 $generated@@219 ($generated@@101 $generated@@220)))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> ($generated@@102 $generated@@222 ($generated@@28 $generated@@221)) (and (= ($generated@@118 $generated@@35 ($generated@@57 $generated@@35 $generated@@222)) $generated@@222) ($generated@@31 $generated@@35 ($generated@@57 $generated@@35 $generated@@222) ($generated@@28 $generated@@221))))
 :pattern ( ($generated@@102 $generated@@222 ($generated@@28 $generated@@221)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> ($generated@@102 $generated@@224 ($generated@@36 $generated@@223)) (and (= ($generated@@118 $generated@@35 ($generated@@57 $generated@@35 $generated@@224)) $generated@@224) ($generated@@31 $generated@@35 ($generated@@57 $generated@@35 $generated@@224) ($generated@@36 $generated@@223))))
 :pattern ( ($generated@@102 $generated@@224 ($generated@@36 $generated@@223)))
)))
(assert (= ($generated@@26 $generated@@47) $generated@@5))
(assert (= ($generated@@132 $generated@@47) $generated@@8))
(assert (= ($generated@@26 $generated@@54) $generated@@6))
(assert (= ($generated@@132 $generated@@54) $generated@@8))
(assert (forall (($generated@@225 T@U) ($generated@@226 Int) ($generated@@227 Int) ) (!  (=> (and (and (<= 0 $generated@@226) (<= $generated@@226 $generated@@227)) (< $generated@@227 ($generated@@40 $generated@@225))) (= ($generated@@106 ($generated@@42 $generated@@225 $generated@@226) (- $generated@@227 $generated@@226)) ($generated@@106 $generated@@225 $generated@@227)))
 :weight 25
 :pattern ( ($generated@@106 $generated@@225 $generated@@227) ($generated@@42 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 Int) ($generated@@230 Int) ) (!  (=> (and (and (<= 0 $generated@@229) (<= 0 $generated@@230)) (<= (+ $generated@@229 $generated@@230) ($generated@@40 $generated@@228))) (= ($generated@@42 ($generated@@42 $generated@@228 $generated@@229) $generated@@230) ($generated@@42 $generated@@228 (+ $generated@@229 $generated@@230))))
 :pattern ( ($generated@@42 ($generated@@42 $generated@@228 $generated@@229) $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Int) ) (!  (and (=> (< $generated@@233 ($generated@@40 $generated@@231)) (= ($generated@@106 ($generated@@50 $generated@@231 $generated@@232) $generated@@233) ($generated@@106 $generated@@231 $generated@@233))) (=> (<= ($generated@@40 $generated@@231) $generated@@233) (= ($generated@@106 ($generated@@50 $generated@@231 $generated@@232) $generated@@233) ($generated@@106 $generated@@232 (- $generated@@233 ($generated@@40 $generated@@231))))))
 :pattern ( ($generated@@106 ($generated@@50 $generated@@231 $generated@@232) $generated@@233))
)))
(assert (forall (($generated@@234 Int) ) (! (= ($generated@@118 $generated@@11 ($generated@@15 ($generated@@95 $generated@@234))) ($generated@@97 $generated@@60 ($generated@@118 $generated@@11 ($generated@@15 $generated@@234))))
 :pattern ( ($generated@@118 $generated@@11 ($generated@@15 ($generated@@95 $generated@@234))))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@T) ) (! (= ($generated@@118 $generated@@236 ($generated@@97 $generated@@236 $generated@@235)) ($generated@@97 $generated@@60 ($generated@@118 $generated@@236 $generated@@235)))
 :pattern ( ($generated@@118 $generated@@236 ($generated@@97 $generated@@236 $generated@@235)))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (= ($generated@@40 $generated@@237) 0) (= $generated@@237 $generated@@41))
 :pattern ( ($generated@@40 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 Int) ) (!  (=> (= $generated@@239 0) (= ($generated@@49 $generated@@238 $generated@@239) $generated@@41))
 :pattern ( ($generated@@49 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! ($generated@@34 $generated@@11 $generated@@241 $generated $generated@@240)
 :pattern ( ($generated@@34 $generated@@11 $generated@@241 $generated $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= ($generated@@31 $generated@@100 $generated@@242 ($generated@@101 $generated@@243)) (forall (($generated@@244 Int) ) (!  (=> (and (<= 0 $generated@@244) (< $generated@@244 ($generated@@40 $generated@@242))) ($generated@@102 ($generated@@106 $generated@@242 $generated@@244) $generated@@243))
 :pattern ( ($generated@@106 $generated@@242 $generated@@244))
)))
 :pattern ( ($generated@@31 $generated@@100 $generated@@242 ($generated@@101 $generated@@243)))
)))
(assert (forall (($generated@@245 T@U) ) (! ($generated@@31 $generated@@11 $generated@@245 $generated)
 :pattern ( ($generated@@31 $generated@@11 $generated@@245 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () Int)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 44) (let (($generated@@262  (=> (and (and (<= ($generated@@95 0) $generated@@246) (<= $generated@@246 ($generated@@27 $generated@@247))) (and (<= ($generated@@95 0) $generated@@248) (<= $generated@@248 ($generated@@27 $generated@@247)))) (and (=> (= (ControlFlow 0 30) (- 0 32)) (or (not (= $generated@@247 $generated@@29)) (not true))) (=> (or (not (= $generated@@247 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (and (<= 0 $generated@@246) (<= $generated@@246 ($generated@@27 $generated@@247)))) (=> (and (<= 0 $generated@@246) (<= $generated@@246 ($generated@@27 $generated@@247))) (=> (= (ControlFlow 0 30) (- 0 29)) (and (<= $generated@@246 $generated@@248) (<= $generated@@248 ($generated@@27 $generated@@247)))))))))))
(let (($generated@@263  (=> (and (< $generated@@248 ($generated@@95 0)) (= (ControlFlow 0 36) 30)) $generated@@262)))
(let (($generated@@264  (=> (<= ($generated@@95 0) $generated@@248) (and (=> (= (ControlFlow 0 34) (- 0 35)) (or (not (= $generated@@247 $generated@@29)) (not true))) (=> (or (not (= $generated@@247 $generated@@29)) (not true)) (=> (= (ControlFlow 0 34) 30) $generated@@262))))))
(let (($generated@@265  (=> (and (<= ($generated@@95 0) $generated@@246) (<= $generated@@246 ($generated@@27 $generated@@247))) (and (=> (= (ControlFlow 0 37) 34) $generated@@264) (=> (= (ControlFlow 0 37) 36) $generated@@263)))))
(let (($generated@@266  (=> (and (not (and (<= ($generated@@95 0) $generated@@246) (<= $generated@@246 ($generated@@27 $generated@@247)))) (= (ControlFlow 0 33) 30)) $generated@@262)))
(let (($generated@@267  (=> (< $generated@@246 ($generated@@95 0)) (and (=> (= (ControlFlow 0 40) 37) $generated@@265) (=> (= (ControlFlow 0 40) 33) $generated@@266)))))
(let (($generated@@268  (=> (<= ($generated@@95 0) $generated@@246) (and (=> (= (ControlFlow 0 38) (- 0 39)) (or (not (= $generated@@247 $generated@@29)) (not true))) (=> (or (not (= $generated@@247 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 38) 37) $generated@@265) (=> (= (ControlFlow 0 38) 33) $generated@@266)))))))
(let (($generated@@269  (=> (and (<= ($generated@@95 0) $generated@@246) (<= $generated@@246 ($generated@@27 $generated@@247))) (and (=> (= (ControlFlow 0 22) (- 0 25)) (or (not (= $generated@@247 $generated@@29)) (not true))) (=> (or (not (= $generated@@247 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 22) (- 0 24)) (and (<= 0 $generated@@246) (<= $generated@@246 ($generated@@27 $generated@@247)))) (=> (and (<= 0 $generated@@246) (<= $generated@@246 ($generated@@27 $generated@@247))) (and (=> (= (ControlFlow 0 22) (- 0 23)) (or (not (= $generated@@247 $generated@@29)) (not true))) (=> (or (not (= $generated@@247 $generated@@29)) (not true)) (=> (= (ControlFlow 0 22) (- 0 21)) (and (<= 0 $generated@@246) (<= $generated@@246 ($generated@@27 $generated@@247)))))))))))))
(let (($generated@@270  (=> (and (< $generated@@246 ($generated@@95 0)) (= (ControlFlow 0 28) 22)) $generated@@269)))
(let (($generated@@271  (=> (<= ($generated@@95 0) $generated@@246) (and (=> (= (ControlFlow 0 26) (- 0 27)) (or (not (= $generated@@247 $generated@@29)) (not true))) (=> (or (not (= $generated@@247 $generated@@29)) (not true)) (=> (= (ControlFlow 0 26) 22) $generated@@269))))))
(let (($generated@@272  (=> (and (and (and (not (and (<= ($generated@@95 0) $generated@@246) (<= $generated@@246 ($generated@@27 $generated@@247)))) (not (and (and (<= ($generated@@95 0) $generated@@246) (<= $generated@@246 ($generated@@27 $generated@@247))) (and (<= ($generated@@95 0) $generated@@248) (<= $generated@@248 ($generated@@27 $generated@@247)))))) (not ($generated@@14 ($generated@@97 $generated@@10 ($generated@@13 true))))) (= (ControlFlow 0 20) (- 0 19))) false)))
(let (($generated@@273 true))
(let (($generated@@274  (=> (or (not (= ($generated@@27 $generated@@247) ($generated@@95 10))) (not true)) (and (and (and (and (and (=> (= (ControlFlow 0 41) 18) $generated@@273) (=> (= (ControlFlow 0 41) 20) $generated@@272)) (=> (= (ControlFlow 0 41) 38) $generated@@268)) (=> (= (ControlFlow 0 41) 40) $generated@@267)) (=> (= (ControlFlow 0 41) 26) $generated@@271)) (=> (= (ControlFlow 0 41) 28) $generated@@270)))))
(let (($generated@@275  (=> (= ($generated@@27 $generated@@247) ($generated@@95 10)) (=> (and ($generated@@31 $generated@@100 $generated@@249 ($generated@@101 $generated)) ($generated@@34 $generated@@100 $generated@@249 ($generated@@101 $generated) $generated@@250)) (and (=> (= (ControlFlow 0 2) (- 0 17)) (or (not (= $generated@@247 $generated@@29)) (not true))) (=> (or (not (= $generated@@247 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 16)) (and (<= 0 ($generated@@95 2)) (<= ($generated@@95 2) ($generated@@27 $generated@@247)))) (=> (and (<= 0 ($generated@@95 2)) (<= ($generated@@95 2) ($generated@@27 $generated@@247))) (and (=> (= (ControlFlow 0 2) (- 0 15)) (and (<= ($generated@@95 2) ($generated@@95 5)) (<= ($generated@@95 5) ($generated@@27 $generated@@247)))) (=> (and (<= ($generated@@95 2) ($generated@@95 5)) (<= ($generated@@95 5) ($generated@@27 $generated@@247))) (=> (= $generated@@251 ($generated@@42 ($generated@@49 ($generated@@87 $generated@@250 $generated@@247) ($generated@@95 5)) ($generated@@95 2))) (and (=> (= (ControlFlow 0 2) (- 0 14)) (= ($generated@@40 $generated@@251) ($generated@@95 3))) (=> (= ($generated@@40 $generated@@251) ($generated@@95 3)) (and (=> (= (ControlFlow 0 2) (- 0 13)) (or (not (= $generated@@247 $generated@@29)) (not true))) (=> (or (not (= $generated@@247 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= 0 ($generated@@95 5)) (<= ($generated@@95 5) ($generated@@27 $generated@@247)))) (=> (and (<= 0 ($generated@@95 5)) (<= ($generated@@95 5) ($generated@@27 $generated@@247))) (=> (= $generated@@252 ($generated@@49 ($generated@@87 $generated@@250 $generated@@247) ($generated@@95 5))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (= ($generated@@40 $generated@@252) ($generated@@95 5))) (=> (= ($generated@@40 $generated@@252) ($generated@@95 5)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (or (not (= $generated@@247 $generated@@29)) (not true))) (=> (or (not (= $generated@@247 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= 0 ($generated@@95 2)) (<= ($generated@@95 2) ($generated@@27 $generated@@247)))) (=> (and (<= 0 ($generated@@95 2)) (<= ($generated@@95 2) ($generated@@27 $generated@@247))) (=> (= $generated@@253 ($generated@@42 ($generated@@87 $generated@@250 $generated@@247) ($generated@@95 2))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (= ($generated@@40 $generated@@253) ($generated@@95 8))) (=> (= ($generated@@40 $generated@@253) ($generated@@95 8)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (not (= $generated@@247 $generated@@29)) (not true))) (=> (or (not (= $generated@@247 $generated@@29)) (not true)) (=> (= $generated@@254 ($generated@@87 $generated@@250 $generated@@247)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (= ($generated@@40 $generated@@254) ($generated@@95 10))) (=> (= ($generated@@40 $generated@@254) ($generated@@95 10)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@247 $generated@@29)) (not true))) (=> (or (not (= $generated@@247 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 ($generated@@95 10)) (<= ($generated@@95 10) ($generated@@27 $generated@@247)))) (=> (and (<= 0 ($generated@@95 10)) (<= ($generated@@95 10) ($generated@@27 $generated@@247))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@247 $generated@@29)) (not true))) (=> (or (not (= $generated@@247 $generated@@29)) (not true)) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 ($generated@@95 0)) (<= ($generated@@95 0) ($generated@@27 $generated@@247))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@276  (=> (= $generated@@255 ($generated@@180 $generated@@29 $generated@@250 $generated@@2 false)) (and (=> (= (ControlFlow 0 42) (- 0 43)) (or (not (= $generated@@247 $generated@@29)) (not true))) (=> (or (not (= $generated@@247 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 42) 2) $generated@@275) (=> (= (ControlFlow 0 42) 41) $generated@@274)))))))
(let (($generated@@277  (=> (and ($generated@@112 $generated@@250) ($generated@@256 $generated@@250)) (=> (and (and (or (not (= $generated@@257 $generated@@29)) (not true)) (and ($generated@@31 $generated@@35 $generated@@257 $generated@@54) ($generated@@34 $generated@@35 $generated@@257 $generated@@54 $generated@@250))) (and ($generated@@31 $generated@@35 $generated@@247 ($generated@@36 $generated)) ($generated@@34 $generated@@35 $generated@@247 ($generated@@36 $generated) $generated@@250))) (=> (and (and (and (and ($generated@@31 $generated@@100 $generated@@258 ($generated@@101 $generated)) ($generated@@34 $generated@@100 $generated@@258 ($generated@@101 $generated) $generated@@250)) true) (and (and ($generated@@31 $generated@@100 $generated@@259 ($generated@@101 $generated)) ($generated@@34 $generated@@100 $generated@@259 ($generated@@101 $generated) $generated@@250)) true)) (and (and (and ($generated@@31 $generated@@100 $generated@@260 ($generated@@101 $generated)) ($generated@@34 $generated@@100 $generated@@260 ($generated@@101 $generated) $generated@@250)) true) (and (= 0 $generated@@261) (= (ControlFlow 0 44) 42)))) $generated@@276)))))
$generated@@277)))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 30) (- 29))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
