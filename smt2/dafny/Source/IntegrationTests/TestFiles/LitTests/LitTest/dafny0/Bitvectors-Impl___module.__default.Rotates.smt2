(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) Bool)
(declare-fun $generated@@18 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 (T@T T@T) T@T)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (T@T T@U) T@U)
(declare-fun $generated@@25 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@26 (T@T) T@T)
(declare-fun $generated@@27 (T@T) T@T)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@63 (Int) T@U)
(declare-fun $generated@@64 (T@U) Int)
(declare-fun $generated@@68 (Int) T@U)
(declare-fun $generated@@69 (T@U) Int)
(declare-fun $generated@@71 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@72 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@73 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (= ($generated $generated@@0) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@28 T@T) ($generated@@29 T@T) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@18 $generated@@28 $generated@@29 ($generated@@25 $generated@@28 $generated@@29 $generated@@31 $generated@@32 $generated@@30) $generated@@32) $generated@@30)
 :weight 0
)) (forall (($generated@@33 T@T) ($generated@@34 T@T) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (or (= $generated@@37 $generated@@38) (= ($generated@@18 $generated@@33 $generated@@34 ($generated@@25 $generated@@33 $generated@@34 $generated@@36 $generated@@37 $generated@@35) $generated@@38) ($generated@@18 $generated@@33 $generated@@34 $generated@@36 $generated@@38)))
 :weight 0
))) (= ($generated@@1 $generated@@19) 3)) (= ($generated@@1 $generated@@20) 4)) (= ($generated@@1 $generated@@21) 5)) (forall (($generated@@39 T@T) ($generated@@40 T@T) ) (= ($generated@@1 ($generated@@22 $generated@@39 $generated@@40)) 6))) (forall (($generated@@41 T@T) ($generated@@42 T@T) ) (! (= ($generated@@26 ($generated@@22 $generated@@41 $generated@@42)) $generated@@41)
 :pattern ( ($generated@@22 $generated@@41 $generated@@42))
))) (forall (($generated@@43 T@T) ($generated@@44 T@T) ) (! (= ($generated@@27 ($generated@@22 $generated@@43 $generated@@44)) $generated@@44)
 :pattern ( ($generated@@22 $generated@@43 $generated@@44))
))))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> ($generated@@17 $generated@@45 $generated@@46) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@6 ($generated@@24 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@45 $generated@@47) $generated@@23))) ($generated@@6 ($generated@@24 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@46 $generated@@47) $generated@@23))))
 :pattern ( ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@46 $generated@@47) $generated@@23))
)))
 :pattern ( ($generated@@17 $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@48 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 ($generated@@24 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@24 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated ($generated@@56 $generated@@57 $generated@@58)) (+ 1 ($generated $generated@@57)))
 :pattern ( ($generated@@56 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (or (not (= $generated@@59 $generated@@61)) (not true)) (=> (and ($generated@@17 $generated@@59 $generated@@60) ($generated@@17 $generated@@60 $generated@@61)) ($generated@@17 $generated@@59 $generated@@61)))
 :pattern ( ($generated@@17 $generated@@59 $generated@@60) ($generated@@17 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ) (! (<= 0 ($generated $generated@@62))
 :pattern ( ($generated $generated@@62))
)))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@64 ($generated@@63 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@63 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@24 $generated@@67 ($generated@@53 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@53 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@70 Int) ) (!  (=> (or (and (<= 0 $generated@@70) (< $generated@@70 55296)) (and (<= 57344 $generated@@70) (< $generated@@70 1114112))) (= ($generated@@69 ($generated@@68 $generated@@70)) $generated@@70))
 :pattern ( ($generated@@68 $generated@@70))
)))
(assert  (and (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@71 $generated@@74 $generated@@75 $generated@@76 ($generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@80 $generated@@77) $generated@@79 $generated@@80) $generated@@77)
 :weight 0
)) (and (forall (($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (or (= $generated@@86 $generated@@88) (= ($generated@@71 $generated@@81 $generated@@82 $generated@@83 ($generated@@73 $generated@@81 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@87 $generated@@84) $generated@@88 $generated@@89) ($generated@@71 $generated@@81 $generated@@82 $generated@@83 $generated@@85 $generated@@88 $generated@@89)))
 :weight 0
)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@96 $generated@@98) (= ($generated@@71 $generated@@90 $generated@@91 $generated@@92 ($generated@@73 $generated@@90 $generated@@91 $generated@@92 $generated@@94 $generated@@95 $generated@@96 $generated@@93) $generated@@97 $generated@@98) ($generated@@71 $generated@@90 $generated@@91 $generated@@92 $generated@@94 $generated@@97 $generated@@98)))
 :weight 0
)))))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 Bool) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@6 ($generated@@71 $generated@@21 $generated@@19 $generated@@2 ($generated@@72 $generated@@99 $generated@@100 $generated@@101 $generated@@102) $generated@@103 $generated@@104))  (=> (and (or (not (= $generated@@103 $generated@@99)) (not true)) ($generated@@6 ($generated@@24 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@100 $generated@@103) $generated@@101)))) $generated@@102))
 :pattern ( ($generated@@71 $generated@@21 $generated@@19 $generated@@2 ($generated@@72 $generated@@99 $generated@@100 $generated@@101 $generated@@102) $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (and (= ($generated@@105 ($generated@@56 $generated@@107 $generated@@108)) $generated@@107) (= ($generated@@106 ($generated@@56 $generated@@107 $generated@@108)) $generated@@108))
 :pattern ( ($generated@@56 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (!  (and (= ($generated@@68 ($generated@@69 $generated@@109)) $generated@@109) (or (and (<= 0 ($generated@@69 $generated@@109)) (< ($generated@@69 $generated@@109) 55296)) (and (<= 57344 ($generated@@69 $generated@@109)) (< ($generated@@69 $generated@@109) 1114112))))
 :pattern ( ($generated@@69 $generated@@109))
)))
(assert (forall (($generated@@110 Int) ) (! (= ($generated@@53 $generated@@3 ($generated@@7 ($generated@@48 $generated@@110))) ($generated@@50 $generated@@20 ($generated@@53 $generated@@3 ($generated@@7 $generated@@110))))
 :pattern ( ($generated@@53 $generated@@3 ($generated@@7 ($generated@@48 $generated@@110))))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@53 $generated@@112 ($generated@@50 $generated@@112 $generated@@111)) ($generated@@50 $generated@@20 ($generated@@53 $generated@@112 $generated@@111)))
 :pattern ( ($generated@@53 $generated@@112 ($generated@@50 $generated@@112 $generated@@111)))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> (= ($generated $generated@@113) 0) (= $generated@@113 $generated@@0))
 :pattern ( ($generated $generated@@113))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@114 () T@U)
(declare-fun $generated@@115 () T@U)
(declare-fun $generated@@116 () T@U)
(declare-fun $generated@@117 () Int)
(declare-fun $generated@@118 () Int)
(declare-fun $generated@@119 () (_ BitVec 12))
(declare-fun $generated@@120 (T@U) (_ BitVec 12))
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 ((_ BitVec 12)) T@U)
(declare-fun $generated@@123 () (_ BitVec 7))
(declare-fun $generated@@124 (T@U) (_ BitVec 7))
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 ((_ BitVec 7)) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 () T@U)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@131 () (_ BitVec 12))
(declare-fun $generated@@132 () T@U)
(declare-fun $generated@@133 () T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@135 (T@U) Bool)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () (_ BitVec 7))
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () (_ BitVec 2))
(declare-fun $generated@@145 (T@U) (_ BitVec 2))
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 ((_ BitVec 2)) T@U)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () (_ BitVec 2))
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 () (_ BitVec 12))
(declare-fun $generated@@164 () (_ BitVec 7))
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () (_ BitVec 12))
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () Int)
(declare-fun $generated@@173 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@121) 7) (forall (($generated@@174 (_ BitVec 12)) ) (! (= ($generated@@120 ($generated@@122 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@122 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= ($generated@@122 ($generated@@120 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@120 $generated@@175))
))) (= ($generated@@1 $generated@@125) 8)) (forall (($generated@@176 (_ BitVec 7)) ) (! (= ($generated@@124 ($generated@@126 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@126 $generated@@176))
))) (forall (($generated@@177 T@U) ) (! (= ($generated@@126 ($generated@@124 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@124 $generated@@177))
))) (= ($generated@@1 $generated@@129) 9)) (= ($generated@@1 $generated@@130) 10)) (= ($generated@@1 $generated@@146) 11)) (forall (($generated@@178 (_ BitVec 2)) ) (! (= ($generated@@145 ($generated@@147 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@147 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= ($generated@@147 ($generated@@145 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@145 $generated@@179))
))))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@180  (=> (= $generated@@114 ($generated@@72 $generated@@115 $generated@@116 $generated@@23 false)) (=> (and (= 0 $generated@@117) (= $generated@@118 ($generated@@48 3))) (=> (and (and (= $generated@@119 ($generated@@120 ($generated@@50 $generated@@121 ($generated@@122 #b000000000101)))) (= $generated@@123 ($generated@@124 ($generated@@50 $generated@@125 ($generated@@126 #b0000101))))) (and (= $generated@@127 ($generated@@48 0)) (= $generated@@128 ($generated@@50 $generated@@129 ($generated@@56 ($generated@@56 ($generated@@56 ($generated@@56 $generated@@0 ($generated@@53 $generated@@130 ($generated@@68 98))) ($generated@@53 $generated@@130 ($generated@@68 118))) ($generated@@53 $generated@@130 ($generated@@68 49))) ($generated@@53 $generated@@130 ($generated@@68 50))))))) (and (=> (= (ControlFlow 0 2) (- 0 25)) (<= 0 $generated@@118)) (=> (<= 0 $generated@@118) (and (=> (= (ControlFlow 0 2) (- 0 24)) (<= $generated@@118 12)) (=> (<= $generated@@118 12) (and (=> (= (ControlFlow 0 2) (- 0 23)) (<= 0 $generated@@118)) (=> (<= 0 $generated@@118) (and (=> (= (ControlFlow 0 2) (- 0 22)) (<= $generated@@118 12)) (=> (<= $generated@@118 12) (=> (and (and (= $generated@@131 (ext_rotate_right (ext_rotate_left $generated@@119 ((_ int2bv 12) $generated@@118)) ((_ int2bv 12) $generated@@118))) (= $generated@@132 ($generated@@63 12))) (and (= $generated@@133 ($generated@@53 $generated@@121 ($generated@@122 $generated@@119))) (= $generated@@134 ($generated@@53 $generated@@121 ($generated@@122 $generated@@131))))) (=> (and (and (and ($generated@@135 $generated@@136) ($generated@@137 $generated@@136)) (forall (($generated@@181 T@U) ) (!  (=> (and (or (not (= $generated@@181 $generated@@115)) (not true)) ($generated@@6 ($generated@@24 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@116 $generated@@181) $generated@@23)))) (= ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@136 $generated@@181) ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@116 $generated@@181)))
 :pattern ( ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@136 $generated@@181))
))) (and ($generated@@17 $generated@@116 $generated@@136) (= $generated@@138 ($generated@@50 $generated@@129 ($generated@@56 ($generated@@56 ($generated@@56 $generated@@0 ($generated@@53 $generated@@130 ($generated@@68 98))) ($generated@@53 $generated@@130 ($generated@@68 118))) ($generated@@53 $generated@@130 ($generated@@68 55))))))) (and (=> (= (ControlFlow 0 2) (- 0 21)) (<= 0 $generated@@118)) (=> (<= 0 $generated@@118) (and (=> (= (ControlFlow 0 2) (- 0 20)) (<= $generated@@118 7)) (=> (<= $generated@@118 7) (and (=> (= (ControlFlow 0 2) (- 0 19)) (<= 0 $generated@@118)) (=> (<= 0 $generated@@118) (and (=> (= (ControlFlow 0 2) (- 0 18)) (<= $generated@@118 7)) (=> (<= $generated@@118 7) (=> (and (and (= $generated@@139 (ext_rotate_right (ext_rotate_left $generated@@123 ((_ int2bv 7) $generated@@118)) ((_ int2bv 7) $generated@@118))) (= $generated@@140 ($generated@@63 7))) (and (= $generated@@141 ($generated@@53 $generated@@125 ($generated@@126 $generated@@123))) (= $generated@@142 ($generated@@53 $generated@@125 ($generated@@126 $generated@@139))))) (=> (and (and (and ($generated@@135 $generated@@143) ($generated@@137 $generated@@143)) (forall (($generated@@182 T@U) ) (!  (=> (and (or (not (= $generated@@182 $generated@@115)) (not true)) ($generated@@6 ($generated@@24 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@136 $generated@@182) $generated@@23)))) (= ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@143 $generated@@182) ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@136 $generated@@182)))
 :pattern ( ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@143 $generated@@182))
))) (and (and ($generated@@17 $generated@@136 $generated@@143) (= $generated@@144 ($generated@@145 ($generated@@50 $generated@@146 ($generated@@147 #b01))))) (and (= $generated@@148 ($generated@@48 1)) (= $generated@@149 ($generated@@50 $generated@@129 ($generated@@56 ($generated@@56 ($generated@@56 $generated@@0 ($generated@@53 $generated@@130 ($generated@@68 98))) ($generated@@53 $generated@@130 ($generated@@68 118))) ($generated@@53 $generated@@130 ($generated@@68 50)))))))) (and (=> (= (ControlFlow 0 2) (- 0 17)) (<= 0 $generated@@148)) (=> (<= 0 $generated@@148) (and (=> (= (ControlFlow 0 2) (- 0 16)) (<= $generated@@148 2)) (=> (<= $generated@@148 2) (and (=> (= (ControlFlow 0 2) (- 0 15)) (<= 0 $generated@@148)) (=> (<= 0 $generated@@148) (and (=> (= (ControlFlow 0 2) (- 0 14)) (<= $generated@@148 2)) (=> (<= $generated@@148 2) (=> (and (= $generated@@150 (ext_rotate_right (ext_rotate_left $generated@@144 ((_ int2bv 2) $generated@@148)) ((_ int2bv 2) $generated@@148))) (= $generated@@151 ($generated@@63 2))) (=> (and (and (and (= $generated@@152 ($generated@@53 $generated@@146 ($generated@@147 $generated@@144))) (= $generated@@153 ($generated@@53 $generated@@146 ($generated@@147 $generated@@150)))) (and ($generated@@135 $generated@@154) ($generated@@137 $generated@@154))) (and (and (forall (($generated@@183 T@U) ) (!  (=> (and (or (not (= $generated@@183 $generated@@115)) (not true)) ($generated@@6 ($generated@@24 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@143 $generated@@183) $generated@@23)))) (= ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@154 $generated@@183) ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@143 $generated@@183)))
 :pattern ( ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@154 $generated@@183))
)) ($generated@@17 $generated@@143 $generated@@154)) (and (= $generated@@155 ($generated@@48 0)) (= $generated@@156 ($generated@@50 $generated@@129 ($generated@@56 ($generated@@56 ($generated@@56 $generated@@0 ($generated@@53 $generated@@130 ($generated@@68 98))) ($generated@@53 $generated@@130 ($generated@@68 118))) ($generated@@53 $generated@@130 ($generated@@68 48)))))))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (<= 0 $generated@@155)) (=> (<= 0 $generated@@155) (and (=> (= (ControlFlow 0 2) (- 0 12)) (<= $generated@@155 0)) (=> (<= $generated@@155 0) (and (=> (= (ControlFlow 0 2) (- 0 11)) (<= 0 $generated@@155)) (=> (<= 0 $generated@@155) (and (=> (= (ControlFlow 0 2) (- 0 10)) (<= $generated@@155 0)) (=> (<= $generated@@155 0) (=> (and (and (= $generated@@157 0) (= $generated@@158 ($generated@@63 0))) (and (= $generated@@159 ($generated@@53 $generated@@3 ($generated@@7 $generated@@127))) (= $generated@@160 ($generated@@53 $generated@@3 ($generated@@7 $generated@@157))))) (=> (and (and (and ($generated@@135 $generated@@161) ($generated@@137 $generated@@161)) (and (forall (($generated@@184 T@U) ) (!  (=> (and (or (not (= $generated@@184 $generated@@115)) (not true)) ($generated@@6 ($generated@@24 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@154 $generated@@184) $generated@@23)))) (= ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@161 $generated@@184) ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@154 $generated@@184)))
 :pattern ( ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@161 $generated@@184))
)) ($generated@@17 $generated@@154 $generated@@161))) (and (and (= $generated@@162 ($generated@@48 5)) (= $generated@@163 ($generated@@120 ($generated@@50 $generated@@121 ($generated@@122 (bvadd #b110000000000 #b011111010000)))))) (and (= $generated@@164 ($generated@@124 ($generated@@50 $generated@@125 ($generated@@126 #b1111111)))) (= $generated@@165 ($generated@@50 $generated@@129 ($generated@@56 ($generated@@56 ($generated@@56 ($generated@@56 ($generated@@56 ($generated@@56 ($generated@@56 ($generated@@56 ($generated@@56 ($generated@@56 $generated@@0 ($generated@@53 $generated@@130 ($generated@@68 98))) ($generated@@53 $generated@@130 ($generated@@68 118))) ($generated@@53 $generated@@130 ($generated@@68 49))) ($generated@@53 $generated@@130 ($generated@@68 50))) ($generated@@53 $generated@@130 ($generated@@68 32))) ($generated@@53 $generated@@130 ($generated@@68 97))) ($generated@@53 $generated@@130 ($generated@@68 103))) ($generated@@53 $generated@@130 ($generated@@68 97))) ($generated@@53 $generated@@130 ($generated@@68 105))) ($generated@@53 $generated@@130 ($generated@@68 110)))))))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (<= 0 $generated@@162)) (=> (<= 0 $generated@@162) (and (=> (= (ControlFlow 0 2) (- 0 8)) (<= $generated@@162 12)) (=> (<= $generated@@162 12) (and (=> (= (ControlFlow 0 2) (- 0 7)) (<= 0 $generated@@162)) (=> (<= 0 $generated@@162) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= $generated@@162 12)) (=> (<= $generated@@162 12) (=> (and (and (= $generated@@166 (ext_rotate_right (ext_rotate_left $generated@@163 ((_ int2bv 12) $generated@@162)) ((_ int2bv 12) $generated@@162))) (= $generated@@167 ($generated@@63 12))) (and (= $generated@@168 ($generated@@53 $generated@@121 ($generated@@122 $generated@@163))) (= $generated@@169 ($generated@@53 $generated@@121 ($generated@@122 $generated@@166))))) (=> (and (and (and ($generated@@135 $generated@@170) ($generated@@137 $generated@@170)) (forall (($generated@@185 T@U) ) (!  (=> (and (or (not (= $generated@@185 $generated@@115)) (not true)) ($generated@@6 ($generated@@24 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@161 $generated@@185) $generated@@23)))) (= ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@170 $generated@@185) ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@161 $generated@@185)))
 :pattern ( ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@170 $generated@@185))
))) (and ($generated@@17 $generated@@161 $generated@@170) (= $generated@@171 ($generated@@50 $generated@@129 ($generated@@56 ($generated@@56 ($generated@@56 ($generated@@56 ($generated@@56 ($generated@@56 ($generated@@56 ($generated@@56 ($generated@@56 $generated@@0 ($generated@@53 $generated@@130 ($generated@@68 98))) ($generated@@53 $generated@@130 ($generated@@68 118))) ($generated@@53 $generated@@130 ($generated@@68 55))) ($generated@@53 $generated@@130 ($generated@@68 32))) ($generated@@53 $generated@@130 ($generated@@68 97))) ($generated@@53 $generated@@130 ($generated@@68 103))) ($generated@@53 $generated@@130 ($generated@@68 97))) ($generated@@53 $generated@@130 ($generated@@68 105))) ($generated@@53 $generated@@130 ($generated@@68 110))))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= 0 $generated@@162)) (=> (<= 0 $generated@@162) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= $generated@@162 7)) (=> (<= $generated@@162 7) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= 0 $generated@@162)) (=> (<= 0 $generated@@162) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@162 7)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@186  (=> (and ($generated@@135 $generated@@116) ($generated@@137 $generated@@116)) (=> (and (and (= 0 $generated@@172) true) (and (= 1 $generated@@173) (= (ControlFlow 0 26) 2))) $generated@@180))))
$generated@@186)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
