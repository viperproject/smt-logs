(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T T@T) T@T)
(declare-fun $generated@@62 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@84 (Int) Int)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@93 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@151 (T@U T@U T@U Int) Int)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@157 (T@U T@U T@U Int) Int)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U T@U Int) Bool)
(declare-fun $generated@@168 (T@U T@U Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@1) 0))
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@28 $generated@@1) $generated@@2))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@30 ($generated@@29 $generated@@31 $generated@@32) $generated@@32)
 :pattern ( ($generated@@29 $generated@@31 $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@30 $generated@@33 $generated@@35) ($generated@@30 ($generated@@29 $generated@@33 $generated@@34) $generated@@35))
 :pattern ( ($generated@@29 $generated@@33 $generated@@34) ($generated@@30 $generated@@33 $generated@@35))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! ($generated@@36 $generated@@12 $generated@@38 $generated@@37 $generated@@39)
 :pattern ( ($generated@@36 $generated@@12 $generated@@38 $generated@@37 $generated@@39))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@30 ($generated@@29 $generated@@40 $generated@@41) $generated@@42)  (or (= $generated@@42 $generated@@41) ($generated@@30 $generated@@40 $generated@@42)))
 :pattern ( ($generated@@30 ($generated@@29 $generated@@40 $generated@@41) $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ) (!  (not ($generated@@30 $generated@@43 $generated@@44))
 :pattern ( ($generated@@30 $generated@@43 $generated@@44))
)))
(assert (= ($generated@@10 $generated@@46) 3))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@50 $generated@@47)  (or (= $generated@@50 $generated@@48) (= ($generated@@49 $generated@@50) $generated@@47)))
 :pattern ( ($generated@@45 $generated@@46 $generated@@50 $generated@@47))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@36 $generated@@46 $generated@@52 $generated@@51 $generated@@53) ($generated@@36 $generated@@46 $generated@@52 $generated@@47 $generated@@53))
 :pattern ( ($generated@@36 $generated@@46 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@36 $generated@@46 $generated@@52 $generated@@47 $generated@@53))
)))
(assert (= ($generated@@26 $generated@@54) 0))
(assert (= ($generated@@55 $generated@@4 $generated@@9) $generated@@54))
(assert  (not ($generated@@56 $generated@@54)))
(assert  (and (and (and (and (and (and (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@58 $generated@@65 $generated@@66 ($generated@@62 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@69) $generated@@67)
 :weight 0
)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (or (= $generated@@74 $generated@@75) (= ($generated@@58 $generated@@70 $generated@@71 ($generated@@62 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@75) ($generated@@58 $generated@@70 $generated@@71 $generated@@73 $generated@@75)))
 :weight 0
))) (= ($generated@@10 $generated@@59) 4)) (= ($generated@@10 $generated@@60) 5)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@10 ($generated@@61 $generated@@76 $generated@@77)) 6))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@63 ($generated@@61 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@61 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@64 ($generated@@61 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@61 $generated@@80 $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@36 $generated@@46 $generated@@82 $generated@@47 $generated@@83)  (or (= $generated@@82 $generated@@48) ($generated@@15 ($generated@@57 $generated@@11 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@46 ($generated@@61 $generated@@59 $generated@@60) $generated@@83 $generated@@82) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@46 $generated@@82 $generated@@47 $generated@@83))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@84 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@86 $generated@@88 $generated@@87) $generated@@87)
 :pattern ( ($generated@@86 $generated@@88 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@89 $generated@@90 $generated@@91) (forall (($generated@@92 T@U) ) (!  (=> ($generated@@30 $generated@@90 $generated@@92) ($generated@@30 $generated@@91 $generated@@92))
 :pattern ( ($generated@@30 $generated@@90 $generated@@92))
 :pattern ( ($generated@@30 $generated@@91 $generated@@92))
)))
 :pattern ( ($generated@@89 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@93 $generated@@95 ($generated@@57 $generated@@95 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@57 $generated@@95 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@45 $generated@@12 $generated@@96 $generated@@37) (<= ($generated@@84 0) ($generated@@17 $generated@@96)))
 :pattern ( ($generated@@45 $generated@@12 $generated@@96 $generated@@37))
)))
(assert ($generated@@56 $generated@@1))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and (and ($generated@@97 $generated@@98) (and (or (not (= $generated@@99 $generated@@48)) (not true)) (= ($generated@@49 $generated@@99) $generated@@47))) ($generated@@15 ($generated@@57 $generated@@11 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@46 ($generated@@61 $generated@@59 $generated@@60) $generated@@98 $generated@@99) $generated@@1)))) ($generated@@36 $generated@@12 ($generated@@57 $generated@@12 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@46 ($generated@@61 $generated@@59 $generated@@60) $generated@@98 $generated@@99) $generated@@54)) $generated $generated@@98))
 :pattern ( ($generated@@57 $generated@@12 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@46 ($generated@@61 $generated@@59 $generated@@60) $generated@@98 $generated@@99) $generated@@54)))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@100 ($generated@@93 $generated@@104 $generated@@101) $generated@@102 $generated@@103) ($generated@@36 $generated@@104 $generated@@101 $generated@@102 $generated@@103))
 :pattern ( ($generated@@100 ($generated@@93 $generated@@104 $generated@@101) $generated@@102 $generated@@103))
)))
(assert  (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@105 $generated@@108 $generated@@109 $generated@@110 ($generated@@107 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@113 $generated@@114) $generated@@111)
 :weight 0
)) (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@120 $generated@@122) (= ($generated@@105 $generated@@115 $generated@@116 $generated@@117 ($generated@@107 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@122 $generated@@123) ($generated@@105 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@122 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@105 $generated@@124 $generated@@125 $generated@@126 ($generated@@107 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@105 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@15 ($generated@@105 $generated@@46 $generated@@59 $generated@@11 ($generated@@106 $generated@@133 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))  (=> (and (or (not (= $generated@@138 $generated@@133)) (not true)) ($generated@@15 ($generated@@57 $generated@@11 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@46 ($generated@@61 $generated@@59 $generated@@60) $generated@@134 $generated@@138) $generated@@135)))) (and (= $generated@@138 $generated@@136) (= $generated@@139 $generated@@137))))
 :pattern ( ($generated@@105 $generated@@46 $generated@@59 $generated@@11 ($generated@@106 $generated@@133 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@140 $generated@@51)  (and ($generated@@45 $generated@@46 $generated@@140 $generated@@47) (or (not (= $generated@@140 $generated@@48)) (not true))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@140 $generated@@51))
 :pattern ( ($generated@@45 $generated@@46 $generated@@140 $generated@@47))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> ($generated@@141 $generated@@142 $generated@@143) (= $generated@@142 $generated@@143))
 :pattern ( ($generated@@141 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (and (= ($generated@@144 ($generated@@55 $generated@@145 $generated@@146)) $generated@@145) (= ($generated@@28 ($generated@@55 $generated@@145 $generated@@146)) $generated@@146))
 :pattern ( ($generated@@55 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@57 $generated@@148 ($generated@@93 $generated@@148 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@93 $generated@@148 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and ($generated@@97 $generated@@149) (and (or (not (= $generated@@150 $generated@@48)) (not true)) (= ($generated@@49 $generated@@150) $generated@@47))) ($generated@@45 $generated@@12 ($generated@@57 $generated@@12 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@46 ($generated@@61 $generated@@59 $generated@@60) $generated@@149 $generated@@150) $generated@@54)) $generated))
 :pattern ( ($generated@@57 $generated@@12 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@46 ($generated@@61 $generated@@59 $generated@@60) $generated@@149 $generated@@150) $generated@@54)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Int) ) (! (= ($generated@@151 ($generated@@152 $generated@@153) $generated@@154 $generated@@155 $generated@@156) ($generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@156))
 :pattern ( ($generated@@151 ($generated@@152 $generated@@153) $generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 Int) ) (! (= ($generated@@157 ($generated@@152 $generated@@158) $generated@@159 $generated@@160 $generated@@161) ($generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@161))
 :pattern ( ($generated@@157 ($generated@@152 $generated@@158) $generated@@159 $generated@@160 $generated@@161))
)))
(assert (= ($generated@@27 $generated@@37) $generated@@3))
(assert (= ($generated@@162 $generated@@37) $generated@@7))
(assert (= ($generated@@27 $generated@@47) $generated@@5))
(assert (= ($generated@@162 $generated@@47) $generated@@8))
(assert (= ($generated@@27 $generated@@51) $generated@@6))
(assert (= ($generated@@162 $generated@@51) $generated@@8))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@141 $generated@@163 $generated@@164) (forall (($generated@@165 T@U) ) (! (= ($generated@@30 $generated@@163 $generated@@165) ($generated@@30 $generated@@164 $generated@@165))
 :pattern ( ($generated@@30 $generated@@163 $generated@@165))
 :pattern ( ($generated@@30 $generated@@164 $generated@@165))
)))
 :pattern ( ($generated@@141 $generated@@163 $generated@@164))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Int) ) (!  (=> (or ($generated@@167 $generated@@170 $generated@@171 $generated@@172) (and (< 0 $generated@@166) (and (and ($generated@@97 $generated@@170) (and (or (not (= $generated@@171 $generated@@48)) (not true)) (and ($generated@@45 $generated@@46 $generated@@171 $generated@@51) ($generated@@36 $generated@@46 $generated@@171 $generated@@51 $generated@@170)))) (<= ($generated@@84 0) $generated@@172)))) (and (=> (<= 2 $generated@@172) ($generated@@168 $generated@@170 $generated@@171 (- $generated@@172 2))) (= ($generated@@157 ($generated@@152 $generated@@169) $generated@@170 $generated@@171 $generated@@172) (ite (< $generated@@172 2) 5 ($generated@@151 $generated@@169 $generated@@170 $generated@@171 (- $generated@@172 2))))))
 :pattern ( ($generated@@157 ($generated@@152 $generated@@169) $generated@@170 $generated@@171 $generated@@172) ($generated@@97 $generated@@170))
))))
(assert (forall (($generated@@173 Int) ) (! (= ($generated@@93 $generated@@12 ($generated@@16 ($generated@@84 $generated@@173))) ($generated@@86 $generated@@60 ($generated@@93 $generated@@12 ($generated@@16 $generated@@173))))
 :pattern ( ($generated@@93 $generated@@12 ($generated@@16 ($generated@@84 $generated@@173))))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@93 $generated@@175 ($generated@@86 $generated@@175 $generated@@174)) ($generated@@86 $generated@@60 ($generated@@93 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@93 $generated@@175 ($generated@@86 $generated@@175 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! ($generated@@36 $generated@@12 $generated@@177 $generated $generated@@176)
 :pattern ( ($generated@@36 $generated@@12 $generated@@177 $generated $generated@@176))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 Int) ) (!  (=> (or ($generated@@168 $generated@@179 $generated@@180 $generated@@181) (and (< 0 $generated@@166) (and (and ($generated@@97 $generated@@179) (and (or (not (= $generated@@180 $generated@@48)) (not true)) (and ($generated@@45 $generated@@46 $generated@@180 $generated@@51) ($generated@@36 $generated@@46 $generated@@180 $generated@@51 $generated@@179)))) (<= ($generated@@84 0) $generated@@181)))) (and ($generated@@167 $generated@@179 $generated@@180 $generated@@181) (= ($generated@@151 ($generated@@152 $generated@@178) $generated@@179 $generated@@180 $generated@@181) ($generated@@157 $generated@@178 $generated@@179 $generated@@180 $generated@@181))))
 :pattern ( ($generated@@151 ($generated@@152 $generated@@178) $generated@@179 $generated@@180 $generated@@181) ($generated@@97 $generated@@179))
))))
(assert (forall (($generated@@182 T@U) ) (! ($generated@@45 $generated@@12 $generated@@182 $generated)
 :pattern ( ($generated@@45 $generated@@12 $generated@@182 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@190  (=> ($generated@@100 ($generated@@93 $generated@@46 $generated@@183) $generated@@47 $generated@@184) (=> (and ($generated@@36 $generated@@12 ($generated@@16 $generated@@185) $generated@@37 $generated@@184) (= $generated@@186 (forall (($generated@@191 T@U) ($generated@@192 T@U) )  (=> (and (and (or (not (= $generated@@191 $generated@@48)) (not true)) ($generated@@15 ($generated@@57 $generated@@11 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@46 ($generated@@61 $generated@@59 $generated@@60) $generated@@184 $generated@@191) $generated@@1)))) (and (= $generated@@191 $generated@@183) (= $generated@@192 $generated@@54))) ($generated@@15 ($generated@@105 $generated@@46 $generated@@59 $generated@@11 $generated@@187 $generated@@191 $generated@@192)))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (or (<= 0 (+ $generated@@185 1)) (and ($generated@@89 ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183)) ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183))) (not ($generated@@89 ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183)) ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183)))))) (= $generated@@185 (+ $generated@@185 1)))) (=> (or (or (<= 0 (+ $generated@@185 1)) (and ($generated@@89 ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183)) ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183))) (not ($generated@@89 ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183)) ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183)))))) (= $generated@@185 (+ $generated@@185 1))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (and ($generated@@89 ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183)) ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183))) (not ($generated@@89 ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183)) ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183))))) (and ($generated@@141 ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183)) ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183))) (< $generated@@185 (+ $generated@@185 1))))) (=> (or (and ($generated@@89 ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183)) ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183))) (not ($generated@@89 ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183)) ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183))))) (and ($generated@@141 ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183)) ($generated@@29 $generated@@43 ($generated@@93 $generated@@46 $generated@@183))) (< $generated@@185 (+ $generated@@185 1)))) (=> ($generated@@167 $generated@@184 $generated@@183 $generated@@185) (=> (and (and (= ($generated@@151 ($generated@@152 $generated@@188) $generated@@184 $generated@@183 $generated@@185) ($generated@@157 ($generated@@152 $generated@@188) $generated@@184 $generated@@183 $generated@@185)) ($generated@@167 $generated@@184 $generated@@183 $generated@@185)) (and ($generated@@45 $generated@@12 ($generated@@16 ($generated@@151 ($generated@@152 $generated@@188) $generated@@184 $generated@@183 $generated@@185)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@186))))))))))
(let (($generated@@193 true))
(let (($generated@@194  (=> (= $generated@@187 ($generated@@106 $generated@@48 $generated@@184 $generated@@1 $generated@@183 $generated@@54)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (not (= $generated@@183 $generated@@48)) (not true))) (=> (or (not (= $generated@@183 $generated@@48)) (not true)) (and (=> (= (ControlFlow 0 6) 1) $generated@@193) (=> (= (ControlFlow 0 6) 3) $generated@@190)))))))
(let (($generated@@195  (=> (and ($generated@@97 $generated@@184) ($generated@@189 $generated@@184)) (=> (and (and (and (or (not (= $generated@@183 $generated@@48)) (not true)) (and ($generated@@45 $generated@@46 $generated@@183 $generated@@51) ($generated@@36 $generated@@46 $generated@@183 $generated@@51 $generated@@184))) (<= ($generated@@84 0) $generated@@185)) (and (= 0 $generated@@166) (= (ControlFlow 0 8) 6))) $generated@@194))))
$generated@@195)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
