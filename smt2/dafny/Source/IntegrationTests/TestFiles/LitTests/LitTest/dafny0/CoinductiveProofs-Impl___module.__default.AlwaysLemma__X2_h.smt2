(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U T@U) Bool)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (Int) T@U)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@42 () Int)
(declare-fun $generated@@43 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@52 (Int) Int)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@135 (T@U) Bool)
(declare-fun $generated@@139 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@143 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@144 (T@T T@T) T@T)
(declare-fun $generated@@145 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@T) T@T)
(declare-fun $generated@@148 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ($generated@@23 T@U) ) (! (= ($generated@@19 $generated@@21 ($generated@@20 $generated@@22) $generated@@23) ($generated@@19 $generated@@21 $generated@@22 $generated@@23))
 :pattern ( ($generated@@19 $generated@@21 ($generated@@20 $generated@@22) $generated@@23))
)))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> (and ($generated@@24 $generated@@25 $generated@@26) ($generated@@24 $generated@@26 $generated@@27)) ($generated@@24 $generated@@25 $generated@@27))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26) ($generated@@24 $generated@@26 $generated@@27))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26) ($generated@@24 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@29 $generated@@30))
 :pattern ( ($generated@@28 $generated@@30))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 Int) ($generated@@36 Int) ) (!  (=> (and (and (<= 0 $generated@@35) (<= 0 $generated@@36)) (<= (+ $generated@@35 $generated@@36) ($generated@@33 $generated@@34))) (= ($generated@@31 ($generated@@31 $generated@@34 ($generated@@32 $generated@@35)) ($generated@@32 $generated@@36)) ($generated@@31 $generated@@34 ($generated@@32 (+ $generated@@35 $generated@@36)))))
 :pattern ( ($generated@@31 ($generated@@31 $generated@@34 ($generated@@32 $generated@@35)) ($generated@@32 $generated@@36)))
)))
(assert (= ($generated@@3 $generated@@38) 3))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@41 ($generated@@39 $generated@@40)) ($generated@@29 $generated@@41))
 :pattern ( ($generated@@29 $generated@@41) ($generated@@37 $generated@@38 $generated@@41 ($generated@@39 $generated@@40)))
)))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> (and ($generated@@37 $generated@@38 $generated@@46 ($generated@@39 $generated@@44)) ($generated@@19 $generated@@44 ($generated@@20 $generated@@45) $generated@@46)) (forall (($generated@@47 T@U) ) (! ($generated@@43 $generated@@44 ($generated@@20 $generated@@45) $generated@@47 $generated@@46)
 :pattern ( ($generated@@43 $generated@@44 ($generated@@20 $generated@@45) $generated@@47 $generated@@46))
)))
 :pattern ( ($generated@@19 $generated@@44 ($generated@@20 $generated@@45) $generated@@46))
))))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (and ($generated@@37 $generated@@38 $generated@@50 ($generated@@39 $generated@@48)) (forall (($generated@@51 T@U) ) (! ($generated@@43 $generated@@48 ($generated@@20 $generated@@49) $generated@@51 $generated@@50)
 :pattern ( ($generated@@43 $generated@@48 ($generated@@20 $generated@@49) $generated@@51 $generated@@50))
))) ($generated@@19 $generated@@48 ($generated@@20 $generated@@49) $generated@@50))
 :pattern ( ($generated@@19 $generated@@48 ($generated@@20 $generated@@49) $generated@@50))
))))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@52 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@56 $generated@@55))
)))
(assert (= ($generated@@3 $generated@@57) 4))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (or ($generated@@58 $generated@@59 ($generated@@54 $generated@@57 $generated@@61) $generated@@62) (and (< 2 $generated@@42) ($generated@@37 $generated@@38 $generated@@62 ($generated@@39 $generated@@59)))) (and (and (=> (< 0 ($generated@@33 $generated@@61)) ($generated@@58 $generated@@59 ($generated@@31 $generated@@61 ($generated@@32 1)) $generated@@62)) (=> (=> (< 0 ($generated@@33 $generated@@61)) ($generated@@43 $generated@@59 ($generated@@20 $generated@@60) ($generated@@31 $generated@@61 ($generated@@32 1)) $generated@@62)) (=> (= ($generated@@52 0) ($generated@@33 $generated@@61)) (forall (($generated@@63 T@U) ) (!  (=> ($generated@@24 $generated@@63 $generated@@61) ($generated@@58 $generated@@59 $generated@@63 $generated@@62))
 :pattern ( ($generated@@43 $generated@@59 ($generated@@20 $generated@@60) $generated@@63 $generated@@62))
))))) (= ($generated@@43 $generated@@59 ($generated@@20 $generated@@60) ($generated@@54 $generated@@57 $generated@@61) $generated@@62)  (and (=> (< 0 ($generated@@33 $generated@@61)) ($generated@@43 $generated@@59 ($generated@@20 $generated@@60) ($generated@@31 $generated@@61 ($generated@@32 1)) $generated@@62)) (=> (= ($generated@@52 0) ($generated@@33 $generated@@61)) (forall (($generated@@64 T@U) ) (!  (=> ($generated@@24 $generated@@64 $generated@@61) ($generated@@43 $generated@@59 ($generated@@20 $generated@@60) $generated@@64 $generated@@62))
 :pattern ( ($generated@@43 $generated@@59 ($generated@@20 $generated@@60) $generated@@64 $generated@@62))
)))))))
 :weight 3
 :pattern ( ($generated@@43 $generated@@59 ($generated@@20 $generated@@60) ($generated@@54 $generated@@57 $generated@@61) $generated@@62))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@37 $generated@@38 ($generated@@65 $generated@@68 $generated@@69) ($generated@@39 $generated@@67))  (and ($generated@@66 $generated@@68 $generated@@67) ($generated@@37 $generated@@38 $generated@@69 ($generated@@39 $generated@@67))))
 :pattern ( ($generated@@37 $generated@@38 ($generated@@65 $generated@@68 $generated@@69) ($generated@@39 $generated@@67)))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@29 $generated@@71) (= ($generated@@70 $generated@@71) $generated@@1))
 :pattern ( ($generated@@29 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@72 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@72 $generated@@75 $generated@@74))
)))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@76 $generated@@77 $generated@@79) (and (< 1 $generated@@42) ($generated@@37 $generated@@38 $generated@@79 ($generated@@39 $generated@@77)))) (and ($generated@@76 $generated@@77 $generated@@79) (= ($generated@@19 $generated@@77 ($generated@@20 $generated@@78) $generated@@79) ($generated@@19 $generated@@77 $generated@@78 $generated@@79))))
 :pattern ( ($generated@@19 $generated@@77 ($generated@@20 $generated@@78) $generated@@79))
))))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (or ($generated@@81 $generated@@83 ($generated@@54 $generated@@38 $generated@@84)) (and (< 2 $generated@@42) ($generated@@37 $generated@@38 $generated@@84 ($generated@@39 $generated@@83)))) (and ($generated@@76 $generated@@83 ($generated@@54 $generated@@38 $generated@@84)) (= ($generated@@80 $generated@@83 ($generated@@54 $generated@@38 $generated@@84)) ($generated@@8 ($generated@@54 $generated@@4 ($generated@@7 ($generated@@19 $generated@@83 ($generated@@20 $generated@@82) ($generated@@54 $generated@@38 $generated@@84))))))))
 :weight 3
 :pattern ( ($generated@@80 $generated@@83 ($generated@@54 $generated@@38 $generated@@84)))
))))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@29 $generated@@85) (exists (($generated@@86 T@U) ($generated@@87 T@U) ) (= $generated@@85 ($generated@@65 $generated@@86 $generated@@87))))
 :pattern ( ($generated@@29 $generated@@85))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@88 ($generated@@73 $generated@@93 $generated@@90) $generated@@91 $generated@@92) ($generated@@89 $generated@@93 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@88 ($generated@@73 $generated@@93 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@96 T@U) ) (!  (and (= ($generated@@94 ($generated@@39 $generated@@96)) $generated@@0) (= ($generated@@95 ($generated@@39 $generated@@96)) $generated@@2))
 :pattern ( ($generated@@39 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and ($generated@@97 $generated@@99) (<= ($generated@@33 $generated@@99) ($generated@@33 $generated@@98))) (and (= ($generated@@97 ($generated@@31 $generated@@98 $generated@@99)) ($generated@@97 $generated@@98)) (= ($generated@@33 ($generated@@31 $generated@@98 $generated@@99)) (- ($generated@@33 $generated@@98) ($generated@@33 $generated@@99)))))
 :pattern ( ($generated@@31 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 Int) ) (!  (=> (<= 0 $generated@@100) (and ($generated@@97 ($generated@@32 $generated@@100)) (= ($generated@@33 ($generated@@32 $generated@@100)) $generated@@100)))
 :pattern ( ($generated@@32 $generated@@100))
)))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@58 $generated@@101 ($generated@@54 $generated@@57 $generated@@103) ($generated@@54 $generated@@38 $generated@@104)) (and (< 2 $generated@@42) ($generated@@37 $generated@@38 $generated@@104 ($generated@@39 $generated@@101)))) (and (and (=> (< 0 ($generated@@33 $generated@@103)) ($generated@@58 $generated@@101 ($generated@@31 $generated@@103 ($generated@@32 1)) ($generated@@54 $generated@@38 $generated@@104))) (=> (=> (< 0 ($generated@@33 $generated@@103)) ($generated@@43 $generated@@101 ($generated@@20 $generated@@102) ($generated@@31 $generated@@103 ($generated@@32 1)) ($generated@@54 $generated@@38 $generated@@104))) (=> (= ($generated@@52 0) ($generated@@33 $generated@@103)) (forall (($generated@@105 T@U) ) (!  (=> ($generated@@24 $generated@@105 $generated@@103) ($generated@@58 $generated@@101 $generated@@105 $generated@@104))
 :pattern ( ($generated@@43 $generated@@101 ($generated@@20 $generated@@102) $generated@@105 $generated@@104))
))))) (= ($generated@@43 $generated@@101 ($generated@@20 $generated@@102) ($generated@@54 $generated@@57 $generated@@103) ($generated@@54 $generated@@38 $generated@@104))  (and (=> (< 0 ($generated@@33 $generated@@103)) ($generated@@43 $generated@@101 ($generated@@20 $generated@@102) ($generated@@31 $generated@@103 ($generated@@32 1)) ($generated@@54 $generated@@38 $generated@@104))) (=> (= ($generated@@52 0) ($generated@@33 $generated@@103)) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@24 $generated@@106 $generated@@103) ($generated@@43 $generated@@101 ($generated@@20 $generated@@102) $generated@@106 $generated@@104))
 :pattern ( ($generated@@43 $generated@@101 ($generated@@20 $generated@@102) $generated@@106 $generated@@104))
)))))))
 :weight 3
 :pattern ( ($generated@@43 $generated@@101 ($generated@@20 $generated@@102) ($generated@@54 $generated@@57 $generated@@103) ($generated@@54 $generated@@38 $generated@@104)))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (or ($generated@@24 $generated@@107 $generated@@108) (= $generated@@107 $generated@@108)) ($generated@@24 $generated@@108 $generated@@107))
 :pattern ( ($generated@@24 $generated@@107 $generated@@108) ($generated@@24 $generated@@108 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@66 ($generated@@73 $generated@@111 $generated@@109) $generated@@110) ($generated@@37 $generated@@111 $generated@@109 $generated@@110))
 :pattern ( ($generated@@66 ($generated@@73 $generated@@111 $generated@@109) $generated@@110))
)))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and ($generated@@37 $generated@@38 $generated@@114 ($generated@@39 $generated@@112)) (= $generated@@115 ($generated@@32 0))) ($generated@@43 $generated@@112 $generated@@113 $generated@@115 $generated@@114))
 :pattern ( ($generated@@43 $generated@@112 $generated@@113 $generated@@115 $generated@@114))
))))
(assert (forall (($generated@@116 T@U) ) (! (<= 0 ($generated@@33 $generated@@116))
 :pattern ( ($generated@@33 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@70 ($generated@@65 $generated@@117 $generated@@118)) $generated@@1)
 :pattern ( ($generated@@65 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@119 ($generated@@65 $generated@@120 $generated@@121)) $generated@@120)
 :pattern ( ($generated@@65 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@122 ($generated@@65 $generated@@123 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@65 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@39 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@39 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@72 $generated@@128 ($generated@@73 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@73 $generated@@128 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (and (and (and (=> ($generated@@24 $generated@@129 $generated@@130) (or (not (= $generated@@129 $generated@@130)) (not true))) (=> (and ($generated@@97 $generated@@129) (not ($generated@@97 $generated@@130))) ($generated@@24 $generated@@129 $generated@@130))) (=> (and ($generated@@97 $generated@@129) ($generated@@97 $generated@@130)) (= ($generated@@24 $generated@@129 $generated@@130) (< ($generated@@33 $generated@@129) ($generated@@33 $generated@@130))))) (=> (and ($generated@@24 $generated@@129 $generated@@130) ($generated@@97 $generated@@130)) ($generated@@97 $generated@@129)))
 :pattern ( ($generated@@24 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@43 $generated@@131 ($generated@@20 $generated@@132) $generated@@133 $generated@@134) ($generated@@43 $generated@@131 $generated@@132 $generated@@133 $generated@@134))
 :pattern ( ($generated@@43 $generated@@131 ($generated@@20 $generated@@132) $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and ($generated@@135 $generated@@138) (and ($generated@@29 $generated@@136) ($generated@@89 $generated@@38 $generated@@136 ($generated@@39 $generated@@137) $generated@@138))) ($generated@@88 ($generated@@119 $generated@@136) $generated@@137 $generated@@138))
 :pattern ( ($generated@@88 ($generated@@119 $generated@@136) $generated@@137 $generated@@138))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@139 $generated@@149 $generated@@150 $generated@@151 ($generated@@145 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@154 $generated@@155) $generated@@152)
 :weight 0
)) (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@139 $generated@@156 $generated@@157 $generated@@158 ($generated@@145 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@139 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@171 $generated@@173) (= ($generated@@139 $generated@@165 $generated@@166 $generated@@167 ($generated@@145 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@139 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)))) (= ($generated@@3 $generated@@140) 5)) (= ($generated@@3 $generated@@141) 6)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@143 $generated@@174 $generated@@175 ($generated@@146 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@176) $generated@@178) $generated@@176)
 :weight 0
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (or (= $generated@@183 $generated@@184) (= ($generated@@143 $generated@@179 $generated@@180 ($generated@@146 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@181) $generated@@184) ($generated@@143 $generated@@179 $generated@@180 $generated@@182 $generated@@184)))
 :weight 0
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (= ($generated@@3 ($generated@@144 $generated@@185 $generated@@186)) 7))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@147 ($generated@@144 $generated@@187 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@144 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@148 ($generated@@144 $generated@@189 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@144 $generated@@189 $generated@@190))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 Bool) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (= ($generated@@8 ($generated@@139 $generated@@140 $generated@@141 $generated@@4 ($generated@@142 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195 $generated@@196))  (=> (and (or (not (= $generated@@195 $generated@@191)) (not true)) ($generated@@8 ($generated@@72 $generated@@4 ($generated@@143 $generated@@141 $generated@@57 ($generated@@143 $generated@@140 ($generated@@144 $generated@@141 $generated@@57) $generated@@192 $generated@@195) $generated@@193)))) $generated@@194))
 :pattern ( ($generated@@139 $generated@@140 $generated@@141 $generated@@4 ($generated@@142 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@66 $generated@@198 ($generated@@39 $generated@@197)) (and (= ($generated@@73 $generated@@38 ($generated@@72 $generated@@38 $generated@@198)) $generated@@198) ($generated@@37 $generated@@38 ($generated@@72 $generated@@38 $generated@@198) ($generated@@39 $generated@@197))))
 :pattern ( ($generated@@66 $generated@@198 ($generated@@39 $generated@@197)))
)))
(assert (forall (($generated@@199 T@U) ) (!  (=> ($generated@@97 $generated@@199) (= $generated@@199 ($generated@@32 ($generated@@33 $generated@@199))))
 :pattern ( ($generated@@33 $generated@@199))
 :pattern ( ($generated@@97 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and ($generated@@135 $generated@@202) (and ($generated@@29 $generated@@200) ($generated@@89 $generated@@38 $generated@@200 ($generated@@39 $generated@@201) $generated@@202))) ($generated@@89 $generated@@38 ($generated@@122 $generated@@200) ($generated@@39 $generated@@201) $generated@@202))
 :pattern ( ($generated@@89 $generated@@38 ($generated@@122 $generated@@200) ($generated@@39 $generated@@201) $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and ($generated@@97 $generated@@204) (<= ($generated@@33 $generated@@204) ($generated@@33 $generated@@203))) (or (and (= $generated@@204 ($generated@@32 0)) (= ($generated@@31 $generated@@203 $generated@@204) $generated@@203)) (and (or (not (= $generated@@204 ($generated@@32 0))) (not true)) ($generated@@24 ($generated@@31 $generated@@203 $generated@@204) $generated@@203))))
 :pattern ( ($generated@@31 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@73 $generated@@5 ($generated@@9 ($generated@@52 $generated@@205))) ($generated@@54 $generated@@57 ($generated@@73 $generated@@5 ($generated@@9 $generated@@205))))
 :pattern ( ($generated@@73 $generated@@5 ($generated@@9 ($generated@@52 $generated@@205))))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@T) ) (! (= ($generated@@73 $generated@@207 ($generated@@54 $generated@@207 $generated@@206)) ($generated@@54 $generated@@57 ($generated@@73 $generated@@207 $generated@@206)))
 :pattern ( ($generated@@73 $generated@@207 ($generated@@54 $generated@@207 $generated@@206)))
)))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (or ($generated@@58 $generated@@208 $generated@@210 $generated@@211) (and (< 2 $generated@@42) ($generated@@37 $generated@@38 $generated@@211 ($generated@@39 $generated@@208)))) (and (and (=> (< 0 ($generated@@33 $generated@@210)) ($generated@@58 $generated@@208 ($generated@@31 $generated@@210 ($generated@@32 1)) $generated@@211)) (=> (=> (< 0 ($generated@@33 $generated@@210)) ($generated@@43 $generated@@208 $generated@@209 ($generated@@31 $generated@@210 ($generated@@32 1)) $generated@@211)) (=> (= ($generated@@52 0) ($generated@@33 $generated@@210)) (forall (($generated@@212 T@U) ) (!  (=> ($generated@@24 $generated@@212 $generated@@210) ($generated@@58 $generated@@208 $generated@@212 $generated@@211))
 :pattern ( ($generated@@43 $generated@@208 $generated@@209 $generated@@212 $generated@@211))
))))) (= ($generated@@43 $generated@@208 ($generated@@20 $generated@@209) $generated@@210 $generated@@211)  (and (=> (< 0 ($generated@@33 $generated@@210)) ($generated@@43 $generated@@208 $generated@@209 ($generated@@31 $generated@@210 ($generated@@32 1)) $generated@@211)) (=> (= ($generated@@52 0) ($generated@@33 $generated@@210)) (forall (($generated@@213 T@U) ) (!  (=> ($generated@@24 $generated@@213 $generated@@210) ($generated@@43 $generated@@208 $generated@@209 $generated@@213 $generated@@211))
 :pattern ( ($generated@@43 $generated@@208 $generated@@209 $generated@@213 $generated@@211))
)))))))
 :pattern ( ($generated@@43 $generated@@208 ($generated@@20 $generated@@209) $generated@@210 $generated@@211))
))))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (or ($generated@@81 $generated@@214 $generated@@215) (and (< 2 $generated@@42) ($generated@@37 $generated@@38 $generated@@215 ($generated@@39 $generated@@214)))) (and ($generated@@76 $generated@@214 $generated@@215) (= ($generated@@80 $generated@@214 $generated@@215) ($generated@@19 $generated@@214 ($generated@@20 $generated@@82) $generated@@215))))
 :pattern ( ($generated@@80 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> ($generated@@135 $generated@@219) (= ($generated@@89 $generated@@38 ($generated@@65 $generated@@217 $generated@@218) ($generated@@39 $generated@@216) $generated@@219)  (and ($generated@@88 $generated@@217 $generated@@216 $generated@@219) ($generated@@89 $generated@@38 $generated@@218 ($generated@@39 $generated@@216) $generated@@219))))
 :pattern ( ($generated@@89 $generated@@38 ($generated@@65 $generated@@217 $generated@@218) ($generated@@39 $generated@@216) $generated@@219))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@230  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@58 $generated@@220 $generated@@221 $generated@@222) (or ($generated@@43 $generated@@220 ($generated@@20 $generated@@82) $generated@@221 $generated@@222) (=> (< 0 ($generated@@33 $generated@@221)) ($generated@@43 $generated@@220 ($generated@@20 ($generated@@20 $generated@@82)) ($generated@@31 $generated@@221 ($generated@@32 1)) $generated@@222))))) (=> (=> ($generated@@58 $generated@@220 $generated@@221 $generated@@222) (or ($generated@@43 $generated@@220 ($generated@@20 $generated@@82) $generated@@221 $generated@@222) (=> (< 0 ($generated@@33 $generated@@221)) ($generated@@43 $generated@@220 ($generated@@20 ($generated@@20 $generated@@82)) ($generated@@31 $generated@@221 ($generated@@32 1)) $generated@@222)))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@58 $generated@@220 $generated@@221 $generated@@222) (or ($generated@@43 $generated@@220 ($generated@@20 $generated@@82) $generated@@221 $generated@@222) (=> (= ($generated@@52 0) ($generated@@33 $generated@@221)) (forall (($generated@@231 T@U) ) (!  (=> ($generated@@24 $generated@@231 $generated@@221) ($generated@@43 $generated@@220 ($generated@@20 ($generated@@20 $generated@@82)) $generated@@231 $generated@@222))
 :pattern ( ($generated@@43 $generated@@220 ($generated@@20 ($generated@@20 $generated@@82)) $generated@@231 $generated@@222))
))))))))))
(let (($generated@@232  (=> ($generated@@89 $generated@@38 $generated@@222 ($generated@@39 $generated@@220) $generated@@223) (=> (and ($generated@@81 $generated@@220 $generated@@222) ($generated@@81 $generated@@220 $generated@@222)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> ($generated@@81 $generated@@220 $generated@@222) (or ($generated@@80 $generated@@220 $generated@@222) (=> ($generated@@76 $generated@@220 $generated@@222) (or ($generated@@19 $generated@@220 ($generated@@20 $generated@@82) $generated@@222) ($generated@@19 $generated@@220 ($generated@@20 ($generated@@20 $generated@@82)) $generated@@222)))))) (=> (and ($generated@@80 $generated@@220 $generated@@222) (= (ControlFlow 0 5) 2)) $generated@@230))))))
(let (($generated@@233  (=> (< 0 ($generated@@33 $generated@@221)) (and (=> (= (ControlFlow 0 7) (- 0 9)) ($generated@@97 ($generated@@54 $generated@@57 ($generated@@32 1)))) (=> ($generated@@97 ($generated@@54 $generated@@57 ($generated@@32 1))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (<= ($generated@@33 ($generated@@54 $generated@@57 ($generated@@32 1))) ($generated@@33 $generated@@221))) (=> (<= ($generated@@33 ($generated@@54 $generated@@57 ($generated@@32 1))) ($generated@@33 $generated@@221)) (=> (= $generated@@224 ($generated@@31 $generated@@221 ($generated@@32 1))) (=> (and (and (and ($generated@@135 $generated@@223) ($generated@@225 $generated@@223)) ($generated@@58 $generated@@220 $generated@@224 $generated@@222)) (and (and ($generated@@58 $generated@@220 $generated@@224 $generated@@222) (and ($generated@@43 $generated@@220 ($generated@@20 $generated@@82) $generated@@224 $generated@@222) (and (=> (< 0 ($generated@@33 $generated@@224)) ($generated@@43 $generated@@220 ($generated@@20 $generated@@82) ($generated@@31 $generated@@224 ($generated@@32 1)) $generated@@222)) (=> (= ($generated@@52 0) ($generated@@33 $generated@@224)) (forall (($generated@@234 T@U) ) (!  (=> ($generated@@24 $generated@@234 $generated@@224) ($generated@@43 $generated@@220 ($generated@@20 $generated@@82) $generated@@234 $generated@@222))
 :pattern ( ($generated@@43 $generated@@220 ($generated@@20 $generated@@82) $generated@@234 $generated@@222))
)))))) (= $generated@@226 $generated@@223))) (and (=> (= (ControlFlow 0 7) 5) $generated@@232) (=> (= (ControlFlow 0 7) 2) $generated@@230)))))))))))
(let (($generated@@235  (=> (<= ($generated@@33 $generated@@221) 0) (=> (and (and (and ($generated@@135 $generated@@227) ($generated@@225 $generated@@227)) (= $generated@@226 $generated@@227)) (and (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and ($generated@@37 $generated@@38 $generated@@237 ($generated@@39 $generated@@220)) ($generated@@24 $generated@@236 $generated@@221)) ($generated@@43 $generated@@220 ($generated@@20 $generated@@82) $generated@@236 $generated@@237))
 :pattern ( ($generated@@43 $generated@@220 ($generated@@20 $generated@@82) $generated@@236 $generated@@237))
)) (= (ControlFlow 0 4) 2))) $generated@@230))))
(let (($generated@@238  (=> (= $generated@@228 ($generated@@142 $generated@@229 $generated@@226 $generated false)) (and (=> (= (ControlFlow 0 10) 7) $generated@@233) (=> (= (ControlFlow 0 10) 4) $generated@@235)))))
(let (($generated@@239  (=> (and ($generated@@135 $generated@@226) ($generated@@225 $generated@@226)) (=> (and (and (and ($generated@@37 $generated@@38 $generated@@222 ($generated@@39 $generated@@220)) ($generated@@89 $generated@@38 $generated@@222 ($generated@@39 $generated@@220) $generated@@226)) ($generated@@28 $generated@@222)) (and (= 4 $generated@@42) (= (ControlFlow 0 11) 10))) $generated@@238))))
$generated@@239)))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 5) (- 6))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
