(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (Int) Int)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@29 () Int)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@U Int) T@U)
(declare-fun $generated@@37 (Int) Bool)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@43 (Int) Bool)
(declare-fun $generated@@45 (T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@70 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@74 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@1))
(assert (= ($generated@@21 $generated@@0) $generated@@2))
(assert (= ($generated@@22 $generated@@23) 0))
(assert (forall (($generated@@25 Int) ) (! (= ($generated@@24 $generated@@25) $generated@@25)
 :pattern ( ($generated@@24 $generated@@25))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@T) ) (! (= ($generated@@26 $generated@@28 $generated@@27) $generated@@27)
 :pattern ( ($generated@@26 $generated@@28 $generated@@27))
)))
(assert (= ($generated@@5 $generated@@33) 3))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@38 T@U) ) (!  (=> (or ($generated@@31 $generated@@38) (and (< 1 $generated@@29) (and ($generated@@32 $generated@@33 $generated@@38 ($generated@@34 $generated@@0)) (forall (($generated@@39 Int) ) (!  (and (=> (and (<= ($generated@@24 0) $generated@@39) (< $generated@@39 ($generated@@22 $generated@@38))) (and (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@38 $generated@@39)))) (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@38 $generated@@39))) 256))) (=> (and (<= ($generated@@24 0) $generated@@39) (< $generated@@39 ($generated@@22 $generated@@38))) ($generated@@37 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@38 $generated@@39))))))
 :pattern ( ($generated@@35 $generated@@7 ($generated@@36 $generated@@38 $generated@@39)))
))))) (= ($generated@@30 $generated@@38) (> ($generated@@22 $generated@@38) 2)))
 :pattern ( ($generated@@30 $generated@@38))
))))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@40 $generated@@42 ($generated@@35 $generated@@42 $generated@@41)) $generated@@41)
 :pattern ( ($generated@@35 $generated@@42 $generated@@41))
)))
(assert  (=> (<= 0 $generated@@29) (forall (($generated@@44 Int) ) (!  (=> (or ($generated@@43 $generated@@44) (and (< 0 $generated@@29) (and (<= ($generated@@24 0) $generated@@44) (< $generated@@44 256)))) (= ($generated@@37 $generated@@44) ($generated@@10 ($generated@@26 $generated@@6 ($generated@@9 true)))))
 :pattern ( ($generated@@37 $generated@@44))
))))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@45 ($generated@@40 $generated@@50 $generated@@47) $generated@@48 $generated@@49) ($generated@@46 $generated@@50 $generated@@47 $generated@@48 $generated@@49))
 :pattern ( ($generated@@45 ($generated@@40 $generated@@50 $generated@@47) $generated@@48 $generated@@49))
)))
(assert  (=> (<= 0 $generated@@29) (forall (($generated@@51 Int) ) (!  (=> (or ($generated@@43 ($generated@@24 $generated@@51)) (and (< 0 $generated@@29) (and (<= ($generated@@24 0) ($generated@@24 $generated@@51)) (< $generated@@51 256)))) (= ($generated@@37 ($generated@@24 $generated@@51)) ($generated@@10 ($generated@@26 $generated@@6 ($generated@@9 true)))))
 :weight 3
 :pattern ( ($generated@@37 ($generated@@24 $generated@@51)))
))))
(assert (forall (($generated@@53 T@U) ) (!  (=> ($generated@@52 $generated@@53 $generated@@0) (and (= ($generated@@40 $generated@@7 ($generated@@35 $generated@@7 $generated@@53)) $generated@@53) ($generated@@32 $generated@@7 ($generated@@35 $generated@@7 $generated@@53) $generated@@0)))
 :pattern ( ($generated@@52 $generated@@53 $generated@@0))
)))
(assert (forall (($generated@@54 T@U) ) (!  (=> ($generated@@52 $generated@@54 $generated) (and (= ($generated@@40 $generated@@6 ($generated@@35 $generated@@6 $generated@@54)) $generated@@54) ($generated@@32 $generated@@6 ($generated@@35 $generated@@6 $generated@@54) $generated)))
 :pattern ( ($generated@@52 $generated@@54 $generated))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@52 ($generated@@40 $generated@@57 $generated@@55) $generated@@56) ($generated@@32 $generated@@57 $generated@@55 $generated@@56))
 :pattern ( ($generated@@52 ($generated@@40 $generated@@57 $generated@@55) $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (! (<= 0 ($generated@@22 $generated@@58))
 :pattern ( ($generated@@22 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@46 $generated@@33 $generated@@59 ($generated@@34 $generated@@60) $generated@@61) (forall (($generated@@62 Int) ) (!  (=> (and (<= 0 $generated@@62) (< $generated@@62 ($generated@@22 $generated@@59))) ($generated@@45 ($generated@@36 $generated@@59 $generated@@62) $generated@@60 $generated@@61))
 :pattern ( ($generated@@36 $generated@@59 $generated@@62))
)))
 :pattern ( ($generated@@46 $generated@@33 $generated@@59 ($generated@@34 $generated@@60) $generated@@61))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@63 T@U) ) (!  (=> (or ($generated@@31 ($generated@@26 $generated@@33 $generated@@63)) (and (< 1 $generated@@29) (and ($generated@@32 $generated@@33 $generated@@63 ($generated@@34 $generated@@0)) (forall (($generated@@64 Int) ) (!  (and (=> (and (<= ($generated@@24 0) $generated@@64) (< $generated@@64 ($generated@@22 ($generated@@26 $generated@@33 $generated@@63)))) (and (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 ($generated@@26 $generated@@33 $generated@@63) $generated@@64)))) (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 ($generated@@26 $generated@@33 $generated@@63) $generated@@64))) 256))) (=> (and (<= ($generated@@24 0) $generated@@64) (< $generated@@64 ($generated@@22 ($generated@@26 $generated@@33 $generated@@63)))) ($generated@@37 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 ($generated@@26 $generated@@33 $generated@@63) $generated@@64))))))
 :pattern ( ($generated@@35 $generated@@7 ($generated@@36 $generated@@63 $generated@@64)))
))))) (= ($generated@@30 ($generated@@26 $generated@@33 $generated@@63)) (> ($generated@@22 ($generated@@26 $generated@@33 $generated@@63)) 2)))
 :weight 3
 :pattern ( ($generated@@30 ($generated@@26 $generated@@33 $generated@@63)))
))))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 ($generated@@34 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@34 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@21 ($generated@@34 $generated@@67)) $generated@@3)
 :pattern ( ($generated@@34 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@35 $generated@@69 ($generated@@40 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@40 $generated@@69 $generated@@68))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@70 $generated@@81 $generated@@82 $generated@@83 ($generated@@77 $generated@@81 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@87 $generated@@84) $generated@@86 $generated@@87) $generated@@84)
 :weight 0
)) (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (or (= $generated@@93 $generated@@95) (= ($generated@@70 $generated@@88 $generated@@89 $generated@@90 ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@92 $generated@@93 $generated@@94 $generated@@91) $generated@@95 $generated@@96) ($generated@@70 $generated@@88 $generated@@89 $generated@@90 $generated@@92 $generated@@95 $generated@@96)))
 :weight 0
)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or (= $generated@@103 $generated@@105) (= ($generated@@70 $generated@@97 $generated@@98 $generated@@99 ($generated@@77 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103 $generated@@100) $generated@@104 $generated@@105) ($generated@@70 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@104 $generated@@105)))
 :weight 0
)))) (= ($generated@@5 $generated@@71) 4)) (= ($generated@@5 $generated@@72) 5)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@74 $generated@@106 $generated@@107 ($generated@@78 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@108) $generated@@110) $generated@@108)
 :weight 0
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@74 $generated@@111 $generated@@112 ($generated@@78 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@74 $generated@@111 $generated@@112 $generated@@114 $generated@@116)))
 :weight 0
))) (= ($generated@@5 $generated@@75) 6)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (= ($generated@@5 ($generated@@76 $generated@@117 $generated@@118)) 7))) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@76 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@121 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@76 $generated@@121 $generated@@122))
))))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 Bool) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@10 ($generated@@70 $generated@@71 $generated@@72 $generated@@6 ($generated@@73 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))  (=> (and (or (not (= $generated@@127 $generated@@123)) (not true)) ($generated@@10 ($generated@@35 $generated@@6 ($generated@@74 $generated@@72 $generated@@75 ($generated@@74 $generated@@71 ($generated@@76 $generated@@72 $generated@@75) $generated@@124 $generated@@127) $generated@@125)))) $generated@@126))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72 $generated@@6 ($generated@@73 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> ($generated@@52 $generated@@129 ($generated@@34 $generated@@130)) (and (= ($generated@@40 $generated@@33 ($generated@@35 $generated@@33 $generated@@129)) $generated@@129) ($generated@@32 $generated@@33 ($generated@@35 $generated@@33 $generated@@129) ($generated@@34 $generated@@130))))
 :pattern ( ($generated@@52 $generated@@129 ($generated@@34 $generated@@130)))
)))
(assert (forall (($generated@@131 Int) ) (! (= ($generated@@40 $generated@@7 ($generated@@11 ($generated@@24 $generated@@131))) ($generated@@26 $generated@@75 ($generated@@40 $generated@@7 ($generated@@11 $generated@@131))))
 :pattern ( ($generated@@40 $generated@@7 ($generated@@11 ($generated@@24 $generated@@131))))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@40 $generated@@133 ($generated@@26 $generated@@133 $generated@@132)) ($generated@@26 $generated@@75 ($generated@@40 $generated@@133 $generated@@132)))
 :pattern ( ($generated@@40 $generated@@133 ($generated@@26 $generated@@133 $generated@@132)))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> (= ($generated@@22 $generated@@134) 0) (= $generated@@134 $generated@@23))
 :pattern ( ($generated@@22 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! ($generated@@46 $generated@@7 $generated@@136 $generated@@0 $generated@@135)
 :pattern ( ($generated@@46 $generated@@7 $generated@@136 $generated@@0 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! ($generated@@46 $generated@@6 $generated@@138 $generated $generated@@137)
 :pattern ( ($generated@@46 $generated@@6 $generated@@138 $generated $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@139 ($generated@@34 $generated@@140)) (forall (($generated@@141 Int) ) (!  (=> (and (<= 0 $generated@@141) (< $generated@@141 ($generated@@22 $generated@@139))) ($generated@@52 ($generated@@36 $generated@@139 $generated@@141) $generated@@140))
 :pattern ( ($generated@@36 $generated@@139 $generated@@141))
)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@139 ($generated@@34 $generated@@140)))
)))
(assert (forall (($generated@@142 T@U) ) (! ($generated@@32 $generated@@7 $generated@@142 $generated@@0)
 :pattern ( ($generated@@32 $generated@@7 $generated@@142 $generated@@0))
)))
(assert (forall (($generated@@143 T@U) ) (! ($generated@@32 $generated@@6 $generated@@143 $generated)
 :pattern ( ($generated@@32 $generated@@6 $generated@@143 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@152 true))
(let (($generated@@153 true))
(let (($generated@@154  (=> (forall (($generated@@155 Int) ) (!  (and (=> (and (<= ($generated@@24 0) $generated@@155) (< $generated@@155 ($generated@@22 $generated@@144))) (and (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@144 $generated@@155)))) (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@144 $generated@@155))) 256))) (=> (and (<= ($generated@@24 0) $generated@@155) (< $generated@@155 ($generated@@22 $generated@@144))) ($generated@@37 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@144 $generated@@155))))))
 :pattern ( ($generated@@35 $generated@@7 ($generated@@36 $generated@@144 $generated@@155)))
)) (and (=> (= (ControlFlow 0 3) 1) $generated@@153) (=> (= (ControlFlow 0 3) 2) $generated@@152)))))
(let (($generated@@156  (=> (and (<= ($generated@@24 0) $generated@@145) (< $generated@@145 ($generated@@22 $generated@@144))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@22 $generated@@144)))) (=> (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@22 $generated@@144))) (=> (and (= $generated@@146 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@144 $generated@@145)))) ($generated@@46 $generated@@7 ($generated@@11 $generated@@146) $generated@@0 $generated@@147)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (<= ($generated@@24 0) $generated@@146)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< $generated@@146 256)) (=> (and (and (and (<= ($generated@@24 0) $generated@@146) (< $generated@@146 256)) ($generated@@43 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@144 $generated@@145))))) (and ($generated@@37 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@144 $generated@@145)))) (= (ControlFlow 0 5) 3))) $generated@@154)))))))))
(let (($generated@@157  (=> (and (< $generated@@145 ($generated@@24 0)) (= (ControlFlow 0 10) 5)) $generated@@156)))
(let (($generated@@158  (=> (and (<= ($generated@@24 0) $generated@@145) (= (ControlFlow 0 9) 5)) $generated@@156)))
(let (($generated@@159  (=> (and (=> (and (<= ($generated@@24 0) $generated@@145) (< $generated@@145 ($generated@@22 $generated@@144))) ($generated@@37 ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@144 $generated@@145))))) (= (ControlFlow 0 4) 3)) $generated@@154)))
(let (($generated@@160  (=> (and (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@144 $generated@@145)))) (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@144 $generated@@145))) 256)) (and (and (=> (= (ControlFlow 0 12) 4) $generated@@159) (=> (= (ControlFlow 0 12) 9) $generated@@158)) (=> (= (ControlFlow 0 12) 10) $generated@@157)))))
(let (($generated@@161  (=> (and (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@144 $generated@@145))) ($generated@@24 0)) (= (ControlFlow 0 15) 12)) $generated@@160)))
(let (($generated@@162  (=> (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@144 $generated@@145)))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@22 $generated@@144)))) (=> (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@22 $generated@@144))) (=> (= (ControlFlow 0 13) 12) $generated@@160))))))
(let (($generated@@163  (=> (and (<= ($generated@@24 0) $generated@@145) (< $generated@@145 ($generated@@22 $generated@@144))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@22 $generated@@144)))) (=> (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@22 $generated@@144))) (and (=> (= (ControlFlow 0 16) 13) $generated@@162) (=> (= (ControlFlow 0 16) 15) $generated@@161)))))))
(let (($generated@@164  (=> (and (< $generated@@145 ($generated@@24 0)) (= (ControlFlow 0 19) 16)) $generated@@163)))
(let (($generated@@165  (=> (and (<= ($generated@@24 0) $generated@@145) (= (ControlFlow 0 18) 16)) $generated@@163)))
(let (($generated@@166  (=> (=> (and (<= ($generated@@24 0) $generated@@145) (< $generated@@145 ($generated@@22 $generated@@144))) (and (<= ($generated@@24 0) ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@144 $generated@@145)))) (< ($generated@@12 ($generated@@35 $generated@@7 ($generated@@36 $generated@@144 $generated@@145))) 256))) (and (and (=> (= (ControlFlow 0 11) 4) $generated@@159) (=> (= (ControlFlow 0 11) 9) $generated@@158)) (=> (= (ControlFlow 0 11) 10) $generated@@157)))))
(let (($generated@@167  (=> (= $generated@@148 ($generated@@73 $generated@@149 $generated@@147 $generated@@4 false)) (and (and (=> (= (ControlFlow 0 20) 11) $generated@@166) (=> (= (ControlFlow 0 20) 18) $generated@@165)) (=> (= (ControlFlow 0 20) 19) $generated@@164)))))
(let (($generated@@168  (=> (and (and (and ($generated@@150 $generated@@147) ($generated@@151 $generated@@147)) ($generated@@32 $generated@@33 $generated@@144 ($generated@@34 $generated@@0))) (and (= 1 $generated@@29) (= (ControlFlow 0 21) 20))) $generated@@167)))
$generated@@168)))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
