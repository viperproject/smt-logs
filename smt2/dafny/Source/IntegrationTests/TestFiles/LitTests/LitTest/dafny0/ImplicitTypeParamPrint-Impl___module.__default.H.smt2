(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@76 (Int) Int)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@115 (T@U) Bool)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@133 (T@U) Int)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@150 (T@U) Int)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@159 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated@@1) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and (or (not (= $generated@@33 $generated@@29)) (not true)) (= ($generated@@30 $generated@@33) ($generated@@28 $generated@@32))) ($generated@@31 $generated@@11 ($generated@@15 ($generated@@27 $generated@@33)) $generated))
 :pattern ( ($generated@@27 $generated@@33) ($generated@@28 $generated@@32))
)))
(assert (= ($generated@@9 $generated@@35) 3))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@38 ($generated@@36 $generated@@37) $generated@@39) ($generated@@34 $generated@@35 $generated@@38 ($generated@@28 $generated@@37) $generated@@39))
 :pattern ( ($generated@@34 $generated@@35 $generated@@38 ($generated@@36 $generated@@37) $generated@@39))
 :pattern ( ($generated@@34 $generated@@35 $generated@@38 ($generated@@28 $generated@@37) $generated@@39))
)))
(assert (= ($generated@@40 $generated@@41) $generated@@5))
(assert (= ($generated@@9 $generated@@42) 4))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> ($generated@@44 $generated@@46) ($generated@@34 $generated@@42 $generated@@41 ($generated@@43 $generated@@45) $generated@@46))
 :pattern ( ($generated@@34 $generated@@42 $generated@@41 ($generated@@43 $generated@@45) $generated@@46))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@48 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@48 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@48 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@9 $generated@@49) 5)) (= ($generated@@9 $generated@@50) 6)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@9 ($generated@@51 $generated@@66 $generated@@67)) 7))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@51 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@51 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@51 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@73 ($generated@@28 $generated@@72) $generated@@74)  (or (= $generated@@73 $generated@@29) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@35 ($generated@@51 $generated@@49 $generated@@50) $generated@@74 $generated@@73) $generated@@1)))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@73 ($generated@@28 $generated@@72) $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ) (! ($generated@@31 $generated@@42 $generated@@41 ($generated@@43 $generated@@75))
 :pattern ( ($generated@@31 $generated@@42 $generated@@41 ($generated@@43 $generated@@75)))
)))
(assert (forall (($generated@@77 Int) ) (! (= ($generated@@76 $generated@@77) $generated@@77)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@31 $generated@@42 ($generated@@81 $generated@@84 $generated@@85) ($generated@@43 $generated@@83))  (and ($generated@@82 $generated@@84 $generated@@83) ($generated@@31 $generated@@42 $generated@@85 ($generated@@43 $generated@@83))))
 :pattern ( ($generated@@31 $generated@@42 ($generated@@81 $generated@@84 $generated@@85) ($generated@@43 $generated@@83)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 Int) ) (!  (=> (and (and (and ($generated@@44 $generated@@89) (and (or (not (= $generated@@90 $generated@@29)) (not true)) (= ($generated@@30 $generated@@90) ($generated@@28 $generated@@88)))) (and (<= 0 $generated@@91) (< $generated@@91 ($generated@@27 $generated@@90)))) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@35 ($generated@@51 $generated@@49 $generated@@50) $generated@@89 $generated@@90) $generated@@1)))) ($generated@@87 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@35 ($generated@@51 $generated@@49 $generated@@50) $generated@@89 $generated@@90) ($generated@@86 $generated@@91)) $generated@@88 $generated@@89))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@35 ($generated@@51 $generated@@49 $generated@@50) $generated@@89 $generated@@90) ($generated@@86 $generated@@91)) ($generated@@28 $generated@@88))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@92 $generated@@93) (= ($generated@@40 $generated@@93) $generated@@5))
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@94 $generated@@95) (= ($generated@@40 $generated@@95) $generated@@6))
 :pattern ( ($generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 ($generated@@47 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@47 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@94 $generated@@99) (exists (($generated@@100 T@U) ($generated@@101 T@U) ) (= $generated@@99 ($generated@@81 $generated@@100 $generated@@101))))
 :pattern ( ($generated@@94 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@92 $generated@@102) (= $generated@@102 $generated@@41))
 :pattern ( ($generated@@92 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@104 ($generated@@36 $generated@@103))  (and ($generated@@31 $generated@@35 $generated@@104 ($generated@@28 $generated@@103)) (or (not (= $generated@@104 $generated@@29)) (not true))))
 :pattern ( ($generated@@31 $generated@@35 $generated@@104 ($generated@@36 $generated@@103)))
 :pattern ( ($generated@@31 $generated@@35 $generated@@104 ($generated@@28 $generated@@103)))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@87 ($generated@@96 $generated@@108 $generated@@105) $generated@@106 $generated@@107) ($generated@@34 $generated@@108 $generated@@105 $generated@@106 $generated@@107))
 :pattern ( ($generated@@87 ($generated@@96 $generated@@108 $generated@@105) $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@110 T@U) ) (!  (and (= ($generated@@26 ($generated@@28 $generated@@110)) $generated@@2) (= ($generated@@109 ($generated@@28 $generated@@110)) $generated@@7))
 :pattern ( ($generated@@28 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (!  (and (= ($generated@@26 ($generated@@36 $generated@@111)) $generated@@3) (= ($generated@@109 ($generated@@36 $generated@@111)) $generated@@7))
 :pattern ( ($generated@@36 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (!  (and (= ($generated@@26 ($generated@@43 $generated@@112)) $generated@@4) (= ($generated@@109 ($generated@@43 $generated@@112)) $generated@@8))
 :pattern ( ($generated@@43 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@114 ($generated@@28 $generated@@113))  (or (= $generated@@114 $generated@@29) (= ($generated@@30 $generated@@114) ($generated@@28 $generated@@113))))
 :pattern ( ($generated@@31 $generated@@35 $generated@@114 ($generated@@28 $generated@@113)))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@115 $generated@@116) (or ($generated@@92 $generated@@116) ($generated@@94 $generated@@116)))
 :pattern ( ($generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@31 $generated@@42 $generated@@118 ($generated@@43 $generated@@117)) (or ($generated@@92 $generated@@118) ($generated@@94 $generated@@118)))
 :pattern ( ($generated@@94 $generated@@118) ($generated@@31 $generated@@42 $generated@@118 ($generated@@43 $generated@@117)))
 :pattern ( ($generated@@92 $generated@@118) ($generated@@31 $generated@@42 $generated@@118 ($generated@@43 $generated@@117)))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@82 $generated@@119 $generated) (and (= ($generated@@96 $generated@@11 ($generated@@47 $generated@@11 $generated@@119)) $generated@@119) ($generated@@31 $generated@@11 ($generated@@47 $generated@@11 $generated@@119) $generated)))
 :pattern ( ($generated@@82 $generated@@119 $generated))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@82 ($generated@@96 $generated@@122 $generated@@120) $generated@@121) ($generated@@31 $generated@@122 $generated@@120 $generated@@121))
 :pattern ( ($generated@@82 ($generated@@96 $generated@@122 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (<= 0 ($generated@@27 $generated@@123))
 :pattern ( ($generated@@27 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@40 ($generated@@81 $generated@@124 $generated@@125)) $generated@@6)
 :pattern ( ($generated@@81 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@126 ($generated@@81 $generated@@127 $generated@@128)) $generated@@127)
 :pattern ( ($generated@@81 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@129 ($generated@@81 $generated@@130 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@81 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 Int) ) (! (= ($generated@@25 ($generated@@86 $generated@@132)) 1)
 :pattern ( ($generated@@86 $generated@@132))
)))
(assert (forall (($generated@@134 Int) ) (! (= ($generated@@133 ($generated@@86 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@86 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@135 ($generated@@28 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@28 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@137 ($generated@@36 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@36 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@43 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@43 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@47 $generated@@142 ($generated@@96 $generated@@142 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@96 $generated@@142 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and ($generated@@44 $generated@@144) (and (or (not (= $generated@@145 $generated@@29)) (not true)) (= ($generated@@30 $generated@@145) ($generated@@28 $generated@@143)))) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@35 ($generated@@51 $generated@@49 $generated@@50) $generated@@144 $generated@@145) $generated@@1)))) ($generated@@34 $generated@@11 ($generated@@15 ($generated@@27 $generated@@145)) $generated $generated@@144))
 :pattern ( ($generated@@27 $generated@@145) ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@35 ($generated@@51 $generated@@49 $generated@@50) $generated@@144 $generated@@145) $generated@@1)) ($generated@@28 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Int) ) (!  (=> (and (and ($generated@@44 $generated@@147) (and (or (not (= $generated@@148 $generated@@29)) (not true)) (= ($generated@@30 $generated@@148) ($generated@@28 $generated@@146)))) (and (<= 0 $generated@@149) (< $generated@@149 ($generated@@27 $generated@@148)))) ($generated@@82 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@35 ($generated@@51 $generated@@49 $generated@@50) $generated@@147 $generated@@148) ($generated@@86 $generated@@149)) $generated@@146))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@35 ($generated@@51 $generated@@49 $generated@@50) $generated@@147 $generated@@148) ($generated@@86 $generated@@149)) ($generated@@28 $generated@@146))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (< ($generated@@150 $generated@@152) ($generated@@151 ($generated@@81 $generated@@152 $generated@@153)))
 :pattern ( ($generated@@81 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (< ($generated@@151 $generated@@155) ($generated@@151 ($generated@@81 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@81 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and ($generated@@44 $generated@@158) (and ($generated@@94 $generated@@156) ($generated@@34 $generated@@42 $generated@@156 ($generated@@43 $generated@@157) $generated@@158))) ($generated@@87 ($generated@@126 $generated@@156) $generated@@157 $generated@@158))
 :pattern ( ($generated@@87 ($generated@@126 $generated@@156) $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@159 $generated@@162 $generated@@163 $generated@@164 ($generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@167 $generated@@168) $generated@@165)
 :weight 0
)) (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@159 $generated@@169 $generated@@170 $generated@@171 ($generated@@161 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@159 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@159 $generated@@178 $generated@@179 $generated@@180 ($generated@@161 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@159 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@14 ($generated@@159 $generated@@35 $generated@@49 $generated@@10 ($generated@@160 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@35 ($generated@@51 $generated@@49 $generated@@50) $generated@@188 $generated@@191) $generated@@189)))) $generated@@190))
 :pattern ( ($generated@@159 $generated@@35 $generated@@49 $generated@@10 ($generated@@160 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ) (! (= ($generated@@150 ($generated@@96 $generated@@42 $generated@@193)) ($generated@@151 $generated@@193))
 :pattern ( ($generated@@150 ($generated@@96 $generated@@42 $generated@@193)))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> ($generated@@82 $generated@@195 ($generated@@28 $generated@@194)) (and (= ($generated@@96 $generated@@35 ($generated@@47 $generated@@35 $generated@@195)) $generated@@195) ($generated@@31 $generated@@35 ($generated@@47 $generated@@35 $generated@@195) ($generated@@28 $generated@@194))))
 :pattern ( ($generated@@82 $generated@@195 ($generated@@28 $generated@@194)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@82 $generated@@197 ($generated@@36 $generated@@196)) (and (= ($generated@@96 $generated@@35 ($generated@@47 $generated@@35 $generated@@197)) $generated@@197) ($generated@@31 $generated@@35 ($generated@@47 $generated@@35 $generated@@197) ($generated@@36 $generated@@196))))
 :pattern ( ($generated@@82 $generated@@197 ($generated@@36 $generated@@196)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@82 $generated@@199 ($generated@@43 $generated@@198)) (and (= ($generated@@96 $generated@@42 ($generated@@47 $generated@@42 $generated@@199)) $generated@@199) ($generated@@31 $generated@@42 ($generated@@47 $generated@@42 $generated@@199) ($generated@@43 $generated@@198))))
 :pattern ( ($generated@@82 $generated@@199 ($generated@@43 $generated@@198)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and ($generated@@44 $generated@@202) (and ($generated@@94 $generated@@200) ($generated@@34 $generated@@42 $generated@@200 ($generated@@43 $generated@@201) $generated@@202))) ($generated@@34 $generated@@42 ($generated@@129 $generated@@200) ($generated@@43 $generated@@201) $generated@@202))
 :pattern ( ($generated@@34 $generated@@42 ($generated@@129 $generated@@200) ($generated@@43 $generated@@201) $generated@@202))
)))
(assert (= $generated@@41 ($generated@@78 $generated@@42 $generated@@41)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@81 ($generated@@78 $generated@@50 $generated@@203) ($generated@@78 $generated@@42 $generated@@204)) ($generated@@78 $generated@@42 ($generated@@81 $generated@@203 $generated@@204)))
 :pattern ( ($generated@@81 ($generated@@78 $generated@@50 $generated@@203) ($generated@@78 $generated@@42 $generated@@204)))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@96 $generated@@11 ($generated@@15 ($generated@@76 $generated@@205))) ($generated@@78 $generated@@50 ($generated@@96 $generated@@11 ($generated@@15 $generated@@205))))
 :pattern ( ($generated@@96 $generated@@11 ($generated@@15 ($generated@@76 $generated@@205))))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@T) ) (! (= ($generated@@96 $generated@@207 ($generated@@78 $generated@@207 $generated@@206)) ($generated@@78 $generated@@50 ($generated@@96 $generated@@207 $generated@@206)))
 :pattern ( ($generated@@96 $generated@@207 ($generated@@78 $generated@@207 $generated@@206)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! ($generated@@34 $generated@@11 $generated@@209 $generated $generated@@208)
 :pattern ( ($generated@@34 $generated@@11 $generated@@209 $generated $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> ($generated@@44 $generated@@213) (= ($generated@@34 $generated@@42 ($generated@@81 $generated@@211 $generated@@212) ($generated@@43 $generated@@210) $generated@@213)  (and ($generated@@87 $generated@@211 $generated@@210 $generated@@213) ($generated@@34 $generated@@42 $generated@@212 ($generated@@43 $generated@@210) $generated@@213))))
 :pattern ( ($generated@@34 $generated@@42 ($generated@@81 $generated@@211 $generated@@212) ($generated@@43 $generated@@210) $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ) (! ($generated@@31 $generated@@11 $generated@@214 $generated)
 :pattern ( ($generated@@31 $generated@@11 $generated@@214 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 (T@U) Bool)
(declare-fun $generated@@227 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@228 true))
(let (($generated@@229 true))
(let (($generated@@230  (and (=> (= (ControlFlow 0 5) 3) $generated@@229) (=> (= (ControlFlow 0 5) 4) $generated@@228))))
(let (($generated@@231  (=> (and (>= 0 ($generated@@27 $generated@@215)) (= (ControlFlow 0 9) 5)) $generated@@230)))
(let (($generated@@232  (=> (> ($generated@@27 $generated@@215) 0) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (not (= $generated@@215 $generated@@29)) (not true))) (=> (or (not (= $generated@@215 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 ($generated@@76 0)) (< ($generated@@76 0) ($generated@@27 $generated@@215)))) (=> (and (<= 0 ($generated@@76 0)) (< ($generated@@76 0) ($generated@@27 $generated@@215))) (=> (= (ControlFlow 0 6) 5) $generated@@230))))))))
(let (($generated@@233  (=> (= $generated@@216 ($generated@@81 $generated@@217 $generated@@218)) (=> (and ($generated@@82 $generated@@217 $generated@@219) ($generated@@31 $generated@@42 $generated@@218 ($generated@@43 $generated@@219))) (=> (and (and (and (and ($generated@@31 $generated@@42 $generated@@220 ($generated@@43 $generated@@219)) ($generated@@34 $generated@@42 $generated@@220 ($generated@@43 $generated@@219) $generated@@221)) (= $generated@@222 $generated@@218)) (and ($generated@@31 $generated@@42 $generated@@222 ($generated@@43 $generated@@219)) (= $generated@@220 $generated@@222))) (and (and (and ($generated@@82 $generated@@223 $generated@@219) ($generated@@87 $generated@@223 $generated@@219 $generated@@221)) (= $generated@@224 $generated@@217)) (and ($generated@@82 $generated@@224 $generated@@219) (= $generated@@223 $generated@@224)))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (not (= $generated@@215 $generated@@29)) (not true))) (=> (or (not (= $generated@@215 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 10) 6) $generated@@232) (=> (= (ControlFlow 0 10) 9) $generated@@231)))))))))
(let (($generated@@234 true))
(let (($generated@@235  (=> (or (not (= $generated@@216 $generated@@41)) (not true)) (and (=> (= (ControlFlow 0 12) 10) $generated@@233) (=> (= (ControlFlow 0 12) 2) $generated@@234)))))
(let (($generated@@236 true))
(let (($generated@@237  (=> (= $generated@@225 ($generated@@160 $generated@@29 $generated@@221 $generated@@1 false)) (and (=> (= (ControlFlow 0 13) 1) $generated@@236) (=> (= (ControlFlow 0 13) 12) $generated@@235)))))
(let (($generated@@238  (=> (and (and ($generated@@44 $generated@@221) ($generated@@226 $generated@@221)) (and ($generated@@31 $generated@@35 $generated@@215 ($generated@@36 $generated@@219)) ($generated@@34 $generated@@35 $generated@@215 ($generated@@36 $generated@@219) $generated@@221))) (=> (and (and (and ($generated@@31 $generated@@42 $generated@@216 ($generated@@43 $generated@@219)) ($generated@@34 $generated@@42 $generated@@216 ($generated@@43 $generated@@219) $generated@@221)) ($generated@@115 $generated@@216)) (and (= 1 $generated@@227) (= (ControlFlow 0 14) 13))) $generated@@237))))
$generated@@238))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
