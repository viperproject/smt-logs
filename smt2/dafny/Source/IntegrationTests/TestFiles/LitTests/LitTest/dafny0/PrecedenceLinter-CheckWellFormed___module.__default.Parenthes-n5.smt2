(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@84 (Int) Int)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@126 (T@U) Bool)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (or (not (= $generated@@31 $generated@@27)) (not true)) (= ($generated@@28 $generated@@31) ($generated@@26 $generated@@30))) ($generated@@29 $generated@@10 ($generated@@14 ($generated@@25 $generated@@31)) $generated))
 :pattern ( ($generated@@25 $generated@@31) ($generated@@26 $generated@@30))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (and (or (not (= $generated@@35 $generated@@27)) (not true)) (= ($generated@@28 $generated@@35) ($generated@@33 $generated@@34))) ($generated@@29 $generated@@10 ($generated@@14 ($generated@@32 $generated@@35)) $generated))
 :pattern ( ($generated@@32 $generated@@35) ($generated@@33 $generated@@34))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (and (or (not (= $generated@@38 $generated@@27)) (not true)) (= ($generated@@28 $generated@@38) ($generated@@33 $generated@@37))) ($generated@@29 $generated@@10 ($generated@@14 ($generated@@36 $generated@@38)) $generated))
 :pattern ( ($generated@@36 $generated@@38) ($generated@@33 $generated@@37))
)))
(assert (= ($generated@@8 $generated@@40) 3))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@43 ($generated@@41 $generated@@42) $generated@@44) ($generated@@39 $generated@@40 $generated@@43 ($generated@@26 $generated@@42) $generated@@44))
 :pattern ( ($generated@@39 $generated@@40 $generated@@43 ($generated@@41 $generated@@42) $generated@@44))
 :pattern ( ($generated@@39 $generated@@40 $generated@@43 ($generated@@26 $generated@@42) $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@47 ($generated@@45 $generated@@46) $generated@@48) ($generated@@39 $generated@@40 $generated@@47 ($generated@@33 $generated@@46) $generated@@48))
 :pattern ( ($generated@@39 $generated@@40 $generated@@47 ($generated@@45 $generated@@46) $generated@@48))
 :pattern ( ($generated@@39 $generated@@40 $generated@@47 ($generated@@33 $generated@@46) $generated@@48))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@50 $generated@@57 $generated@@58 ($generated@@54 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@61) $generated@@59)
 :weight 0
)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (or (= $generated@@66 $generated@@67) (= ($generated@@50 $generated@@62 $generated@@63 ($generated@@54 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@67) ($generated@@50 $generated@@62 $generated@@63 $generated@@65 $generated@@67)))
 :weight 0
))) (= ($generated@@8 $generated@@51) 4)) (= ($generated@@8 $generated@@52) 5)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (= ($generated@@8 ($generated@@53 $generated@@68 $generated@@69)) 6))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@55 ($generated@@53 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@53 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@56 ($generated@@53 $generated@@72 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@53 $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@75 ($generated@@26 $generated@@74) $generated@@76)  (or (= $generated@@75 $generated@@27) ($generated@@13 ($generated@@49 $generated@@9 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@40 ($generated@@53 $generated@@51 $generated@@52) $generated@@76 $generated@@75) $generated@@1)))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@75 ($generated@@26 $generated@@74) $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@78 ($generated@@33 $generated@@77) $generated@@79)  (or (= $generated@@78 $generated@@27) ($generated@@13 ($generated@@49 $generated@@9 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@40 ($generated@@53 $generated@@51 $generated@@52) $generated@@79 $generated@@78) $generated@@1)))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@78 ($generated@@33 $generated@@77) $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> ($generated@@80 $generated@@81 $generated@@82) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@13 ($generated@@49 $generated@@9 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@40 ($generated@@53 $generated@@51 $generated@@52) $generated@@81 $generated@@83) $generated@@1))) ($generated@@13 ($generated@@49 $generated@@9 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@40 ($generated@@53 $generated@@51 $generated@@52) $generated@@82 $generated@@83) $generated@@1))))
 :pattern ( ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@40 ($generated@@53 $generated@@51 $generated@@52) $generated@@82 $generated@@83) $generated@@1))
)))
 :pattern ( ($generated@@80 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@84 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@86 $generated@@88 $generated@@87) $generated@@87)
 :pattern ( ($generated@@86 $generated@@88 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@49 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@49 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@29 $generated@@40 $generated@@93 ($generated@@41 $generated@@92))  (and ($generated@@29 $generated@@40 $generated@@93 ($generated@@26 $generated@@92)) (or (not (= $generated@@93 $generated@@27)) (not true))))
 :pattern ( ($generated@@29 $generated@@40 $generated@@93 ($generated@@41 $generated@@92)))
 :pattern ( ($generated@@29 $generated@@40 $generated@@93 ($generated@@26 $generated@@92)))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@29 $generated@@40 $generated@@95 ($generated@@45 $generated@@94))  (and ($generated@@29 $generated@@40 $generated@@95 ($generated@@33 $generated@@94)) (or (not (= $generated@@95 $generated@@27)) (not true))))
 :pattern ( ($generated@@29 $generated@@40 $generated@@95 ($generated@@45 $generated@@94)))
 :pattern ( ($generated@@29 $generated@@40 $generated@@95 ($generated@@33 $generated@@94)))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (!  (=> ($generated@@80 $generated@@96 $generated@@97) (=> ($generated@@39 $generated@@100 $generated@@98 $generated@@99 $generated@@96) ($generated@@39 $generated@@100 $generated@@98 $generated@@99 $generated@@97)))
 :pattern ( ($generated@@80 $generated@@96 $generated@@97) ($generated@@39 $generated@@100 $generated@@98 $generated@@99 $generated@@96))
)))
(assert (forall (($generated@@102 T@U) ) (!  (and (= ($generated@@24 ($generated@@26 $generated@@102)) $generated@@2) (= ($generated@@101 ($generated@@26 $generated@@102)) $generated@@6))
 :pattern ( ($generated@@26 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (and (= ($generated@@24 ($generated@@41 $generated@@103)) $generated@@3) (= ($generated@@101 ($generated@@41 $generated@@103)) $generated@@6))
 :pattern ( ($generated@@41 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (!  (and (= ($generated@@24 ($generated@@33 $generated@@104)) $generated@@4) (= ($generated@@101 ($generated@@33 $generated@@104)) $generated@@7))
 :pattern ( ($generated@@33 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@24 ($generated@@45 $generated@@105)) $generated@@5) (= ($generated@@101 ($generated@@45 $generated@@105)) $generated@@7))
 :pattern ( ($generated@@45 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@29 $generated@@40 $generated@@107 ($generated@@26 $generated@@106))  (or (= $generated@@107 $generated@@27) (= ($generated@@28 $generated@@107) ($generated@@26 $generated@@106))))
 :pattern ( ($generated@@29 $generated@@40 $generated@@107 ($generated@@26 $generated@@106)))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@29 $generated@@40 $generated@@109 ($generated@@33 $generated@@108))  (or (= $generated@@109 $generated@@27) (= ($generated@@28 $generated@@109) ($generated@@33 $generated@@108))))
 :pattern ( ($generated@@29 $generated@@40 $generated@@109 ($generated@@33 $generated@@108)))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or (not (= $generated@@110 $generated@@112)) (not true)) (=> (and ($generated@@80 $generated@@110 $generated@@111) ($generated@@80 $generated@@111 $generated@@112)) ($generated@@80 $generated@@110 $generated@@112)))
 :pattern ( ($generated@@80 $generated@@110 $generated@@111) ($generated@@80 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (! (<= 0 ($generated@@25 $generated@@113))
 :pattern ( ($generated@@25 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (! (<= 0 ($generated@@32 $generated@@114))
 :pattern ( ($generated@@32 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (! (<= 0 ($generated@@36 $generated@@115))
 :pattern ( ($generated@@36 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@26 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@26 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@41 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@41 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@33 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@33 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@45 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@45 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@49 $generated@@125 ($generated@@89 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@89 $generated@@125 $generated@@124))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and ($generated@@126 $generated@@128) (and (or (not (= $generated@@129 $generated@@27)) (not true)) (= ($generated@@28 $generated@@129) ($generated@@26 $generated@@127)))) ($generated@@13 ($generated@@49 $generated@@9 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@40 ($generated@@53 $generated@@51 $generated@@52) $generated@@128 $generated@@129) $generated@@1)))) ($generated@@39 $generated@@10 ($generated@@14 ($generated@@25 $generated@@129)) $generated $generated@@128))
 :pattern ( ($generated@@25 $generated@@129) ($generated@@49 $generated@@9 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@40 ($generated@@53 $generated@@51 $generated@@52) $generated@@128 $generated@@129) $generated@@1)) ($generated@@26 $generated@@127))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and (and ($generated@@126 $generated@@131) (and (or (not (= $generated@@132 $generated@@27)) (not true)) (= ($generated@@28 $generated@@132) ($generated@@33 $generated@@130)))) ($generated@@13 ($generated@@49 $generated@@9 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@40 ($generated@@53 $generated@@51 $generated@@52) $generated@@131 $generated@@132) $generated@@1)))) ($generated@@39 $generated@@10 ($generated@@14 ($generated@@32 $generated@@132)) $generated $generated@@131))
 :pattern ( ($generated@@32 $generated@@132) ($generated@@49 $generated@@9 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@40 ($generated@@53 $generated@@51 $generated@@52) $generated@@131 $generated@@132) $generated@@1)) ($generated@@33 $generated@@130))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (and ($generated@@126 $generated@@134) (and (or (not (= $generated@@135 $generated@@27)) (not true)) (= ($generated@@28 $generated@@135) ($generated@@33 $generated@@133)))) ($generated@@13 ($generated@@49 $generated@@9 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@40 ($generated@@53 $generated@@51 $generated@@52) $generated@@134 $generated@@135) $generated@@1)))) ($generated@@39 $generated@@10 ($generated@@14 ($generated@@36 $generated@@135)) $generated $generated@@134))
 :pattern ( ($generated@@36 $generated@@135) ($generated@@49 $generated@@9 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@40 ($generated@@53 $generated@@51 $generated@@52) $generated@@134 $generated@@135) $generated@@1)) ($generated@@33 $generated@@133))
)))
(assert  (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@136 $generated@@139 $generated@@140 $generated@@141 ($generated@@138 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@144 $generated@@145) $generated@@142)
 :weight 0
)) (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@136 $generated@@146 $generated@@147 $generated@@148 ($generated@@138 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@136 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@136 $generated@@155 $generated@@156 $generated@@157 ($generated@@138 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@136 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@13 ($generated@@136 $generated@@40 $generated@@51 $generated@@9 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@13 ($generated@@49 $generated@@9 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@40 ($generated@@53 $generated@@51 $generated@@52) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@136 $generated@@40 $generated@@51 $generated@@9 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 Int) ) (! (= ($generated@@89 $generated@@10 ($generated@@14 ($generated@@84 $generated@@170))) ($generated@@86 $generated@@52 ($generated@@89 $generated@@10 ($generated@@14 $generated@@170))))
 :pattern ( ($generated@@89 $generated@@10 ($generated@@14 ($generated@@84 $generated@@170))))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@T) ) (! (= ($generated@@89 $generated@@172 ($generated@@86 $generated@@172 $generated@@171)) ($generated@@86 $generated@@52 ($generated@@89 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@89 $generated@@172 ($generated@@86 $generated@@172 $generated@@171)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! ($generated@@39 $generated@@10 $generated@@174 $generated $generated@@173)
 :pattern ( ($generated@@39 $generated@@10 $generated@@174 $generated $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! ($generated@@29 $generated@@10 $generated@@175 $generated)
 :pattern ( ($generated@@29 $generated@@10 $generated@@175 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@184 true))
(let (($generated@@185  (=> (and (not (and (and (< $generated@@176 $generated@@177) (< $generated@@177 ($generated@@25 $generated@@178))) (<= ($generated@@25 $generated@@178) ($generated@@32 $generated@@179)))) (= (ControlFlow 0 5) 1)) $generated@@184)))
(let (($generated@@186  (=> (and (and (< $generated@@176 $generated@@177) (< $generated@@177 ($generated@@25 $generated@@178))) (<= ($generated@@25 $generated@@178) ($generated@@32 $generated@@179))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@179 $generated@@27)) (not true))) (=> (or (not (= $generated@@179 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@179 $generated@@27)) (not true))) (=> (or (not (= $generated@@179 $generated@@27)) (not true)) (=> (= (ControlFlow 0 2) 1) $generated@@184))))))))
(let (($generated@@187  (=> (not (and (< $generated@@176 $generated@@177) (< $generated@@177 ($generated@@25 $generated@@178)))) (and (=> (= (ControlFlow 0 9) 2) $generated@@186) (=> (= (ControlFlow 0 9) 5) $generated@@185)))))
(let (($generated@@188  (=> (and (< $generated@@176 $generated@@177) (< $generated@@177 ($generated@@25 $generated@@178))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (not (= $generated@@178 $generated@@27)) (not true))) (=> (or (not (= $generated@@178 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (not (= $generated@@179 $generated@@27)) (not true))) (=> (or (not (= $generated@@179 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 6) 2) $generated@@186) (=> (= (ControlFlow 0 6) 5) $generated@@185)))))))))
(let (($generated@@189  (=> (<= $generated@@177 $generated@@176) (and (=> (= (ControlFlow 0 12) 6) $generated@@188) (=> (= (ControlFlow 0 12) 9) $generated@@187)))))
(let (($generated@@190  (=> (< $generated@@176 $generated@@177) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (not (= $generated@@178 $generated@@27)) (not true))) (=> (or (not (= $generated@@178 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 10) 6) $generated@@188) (=> (= (ControlFlow 0 10) 9) $generated@@187)))))))
(let (($generated@@191  (=> (= $generated@@180 ($generated@@137 $generated@@27 $generated@@181 $generated@@1 false)) (and (=> (= (ControlFlow 0 13) 10) $generated@@190) (=> (= (ControlFlow 0 13) 12) $generated@@189)))))
(let (($generated@@192  (=> (and ($generated@@126 $generated@@181) ($generated@@182 $generated@@181)) (=> (and (and (and ($generated@@29 $generated@@40 $generated@@178 ($generated@@41 $generated)) ($generated@@39 $generated@@40 $generated@@178 ($generated@@41 $generated) $generated@@181)) (and ($generated@@29 $generated@@40 $generated@@179 ($generated@@45 $generated)) ($generated@@39 $generated@@40 $generated@@179 ($generated@@45 $generated) $generated@@181))) (and (and (<= ($generated@@84 0) $generated@@176) (<= ($generated@@84 0) $generated@@177)) (and (= 0 $generated@@183) (= (ControlFlow 0 14) 13)))) $generated@@191))))
$generated@@192))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
