(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@T T@T) T@T)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@33 (T@T) T@T)
(declare-fun $generated@@34 (T@T) T@T)
(declare-fun $generated@@55 (Int) Int)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@U T@U) Bool)
(declare-fun $generated@@65 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated) $generated@@0))
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@21 $generated@@6 $generated@@23 $generated@@22 $generated@@24)
 :pattern ( ($generated@@21 $generated@@6 $generated@@23 $generated@@22 $generated@@24))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@35 T@T) ($generated@@36 T@T) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@26 $generated@@35 $generated@@36 ($generated@@32 $generated@@35 $generated@@36 $generated@@38 $generated@@39 $generated@@37) $generated@@39) $generated@@37)
 :weight 0
)) (forall (($generated@@40 T@T) ($generated@@41 T@T) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (or (= $generated@@44 $generated@@45) (= ($generated@@26 $generated@@40 $generated@@41 ($generated@@32 $generated@@40 $generated@@41 $generated@@43 $generated@@44 $generated@@42) $generated@@45) ($generated@@26 $generated@@40 $generated@@41 $generated@@43 $generated@@45)))
 :weight 0
))) (= ($generated@@4 $generated@@27) 3)) (= ($generated@@4 $generated@@28) 4)) (= ($generated@@4 $generated@@29) 5)) (forall (($generated@@46 T@T) ($generated@@47 T@T) ) (= ($generated@@4 ($generated@@30 $generated@@46 $generated@@47)) 6))) (forall (($generated@@48 T@T) ($generated@@49 T@T) ) (! (= ($generated@@33 ($generated@@30 $generated@@48 $generated@@49)) $generated@@48)
 :pattern ( ($generated@@30 $generated@@48 $generated@@49))
))) (forall (($generated@@50 T@T) ($generated@@51 T@T) ) (! (= ($generated@@34 ($generated@@30 $generated@@50 $generated@@51)) $generated@@51)
 :pattern ( ($generated@@30 $generated@@50 $generated@@51))
))))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> ($generated@@25 $generated@@52 $generated@@53) (forall (($generated@@54 T@U) ) (!  (=> ($generated@@9 ($generated@@31 $generated@@5 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@52 $generated@@54) $generated@@1))) ($generated@@9 ($generated@@31 $generated@@5 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@53 $generated@@54) $generated@@1))))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@53 $generated@@54) $generated@@1))
)))
 :pattern ( ($generated@@25 $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@56 Int) ) (! (= ($generated@@55 $generated@@56) $generated@@56)
 :pattern ( ($generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@57 $generated@@59 $generated@@58) $generated@@58)
 :pattern ( ($generated@@57 $generated@@59 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 ($generated@@31 $generated@@62 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@31 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 $generated@@6 $generated@@64 $generated@@22) (<= ($generated@@55 0) ($generated@@11 $generated@@64)))
 :pattern ( ($generated@@63 $generated@@6 $generated@@64 $generated@@22))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@65 ($generated@@60 $generated@@69 $generated@@66) $generated@@67 $generated@@68) ($generated@@21 $generated@@69 $generated@@66 $generated@@67 $generated@@68))
 :pattern ( ($generated@@65 ($generated@@60 $generated@@69 $generated@@66) $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@25 $generated@@70 $generated@@71) (=> ($generated@@65 $generated@@72 $generated@@73 $generated@@70) ($generated@@65 $generated@@72 $generated@@73 $generated@@71)))
 :pattern ( ($generated@@25 $generated@@70 $generated@@71) ($generated@@65 $generated@@72 $generated@@73 $generated@@70))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@T) ) (!  (=> ($generated@@25 $generated@@74 $generated@@75) (=> ($generated@@21 $generated@@78 $generated@@76 $generated@@77 $generated@@74) ($generated@@21 $generated@@78 $generated@@76 $generated@@77 $generated@@75)))
 :pattern ( ($generated@@25 $generated@@74 $generated@@75) ($generated@@21 $generated@@78 $generated@@76 $generated@@77 $generated@@74))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@79 $generated@@80 $generated@@22) (and (= ($generated@@60 $generated@@6 ($generated@@31 $generated@@6 $generated@@80)) $generated@@80) ($generated@@63 $generated@@6 ($generated@@31 $generated@@6 $generated@@80) $generated@@22)))
 :pattern ( ($generated@@79 $generated@@80 $generated@@22))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or (not (= $generated@@81 $generated@@83)) (not true)) (=> (and ($generated@@25 $generated@@81 $generated@@82) ($generated@@25 $generated@@82 $generated@@83)) ($generated@@25 $generated@@81 $generated@@83)))
 :pattern ( ($generated@@25 $generated@@81 $generated@@82) ($generated@@25 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@79 $generated@@84 $generated) (and (= ($generated@@60 $generated@@6 ($generated@@31 $generated@@6 $generated@@84)) $generated@@84) ($generated@@63 $generated@@6 ($generated@@31 $generated@@6 $generated@@84) $generated)))
 :pattern ( ($generated@@79 $generated@@84 $generated))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@79 ($generated@@60 $generated@@87 $generated@@85) $generated@@86) ($generated@@63 $generated@@87 $generated@@85 $generated@@86))
 :pattern ( ($generated@@79 ($generated@@60 $generated@@87 $generated@@85) $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@31 $generated@@89 ($generated@@60 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@60 $generated@@89 $generated@@88))
)))
(assert  (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@90 $generated@@93 $generated@@94 $generated@@95 ($generated@@92 $generated@@93 $generated@@94 $generated@@95 $generated@@97 $generated@@98 $generated@@99 $generated@@96) $generated@@98 $generated@@99) $generated@@96)
 :weight 0
)) (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@105 $generated@@107) (= ($generated@@90 $generated@@100 $generated@@101 $generated@@102 ($generated@@92 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@107 $generated@@108) ($generated@@90 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@107 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@90 $generated@@109 $generated@@110 $generated@@111 ($generated@@92 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@90 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 Bool) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@9 ($generated@@90 $generated@@29 $generated@@27 $generated@@5 ($generated@@91 $generated@@118 $generated@@119 $generated@@120 $generated@@121) $generated@@122 $generated@@123))  (=> (and (or (not (= $generated@@122 $generated@@118)) (not true)) ($generated@@9 ($generated@@31 $generated@@5 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@119 $generated@@122) $generated@@120)))) $generated@@121))
 :pattern ( ($generated@@90 $generated@@29 $generated@@27 $generated@@5 ($generated@@91 $generated@@118 $generated@@119 $generated@@120 $generated@@121) $generated@@122 $generated@@123))
)))
(assert (= ($generated@@20 $generated@@22) $generated@@2))
(assert (= ($generated@@124 $generated@@22) $generated@@3))
(assert (forall (($generated@@125 Int) ) (! (= ($generated@@60 $generated@@6 ($generated@@10 ($generated@@55 $generated@@125))) ($generated@@57 $generated@@28 ($generated@@60 $generated@@6 ($generated@@10 $generated@@125))))
 :pattern ( ($generated@@60 $generated@@6 ($generated@@10 ($generated@@55 $generated@@125))))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@60 $generated@@127 ($generated@@57 $generated@@127 $generated@@126)) ($generated@@57 $generated@@28 ($generated@@60 $generated@@127 $generated@@126)))
 :pattern ( ($generated@@60 $generated@@127 ($generated@@57 $generated@@127 $generated@@126)))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! ($generated@@21 $generated@@6 $generated@@129 $generated $generated@@128)
 :pattern ( ($generated@@21 $generated@@6 $generated@@129 $generated $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (! ($generated@@63 $generated@@6 $generated@@130 $generated)
 :pattern ( ($generated@@63 $generated@@6 $generated@@130 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@131 () Int)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 () Int)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 () Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Bool)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 28) (let (($generated@@185  (=> (and (and (and (and (not ($generated@@9 ($generated@@57 $generated@@5 ($generated@@8 true)))) (not ($generated@@9 ($generated@@57 $generated@@5 ($generated@@8 true))))) (not ($generated@@9 ($generated@@57 $generated@@5 ($generated@@8 true))))) (not ($generated@@9 ($generated@@57 $generated@@5 ($generated@@8 true))))) (= (ControlFlow 0 5) (- 0 4))) false)))
(let (($generated@@186  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@187  (=> (= (ControlFlow 0 6) 2) $generated@@186)))
(let (($generated@@188  (=> (and (= $generated@@131 (- $generated@@132 1)) (= $generated@@133 ($generated@@55 (- 0 4)))) (and (=> (= (ControlFlow 0 21) (- 0 24)) (or (<= 0 $generated@@132) (= $generated@@131 $generated@@132))) (=> (or (<= 0 $generated@@132) (= $generated@@131 $generated@@132)) (and (=> (= (ControlFlow 0 21) (- 0 23)) (< $generated@@131 $generated@@132)) (=> (< $generated@@131 $generated@@132) (=> (and ($generated@@79 $generated@@134 $generated@@135) ($generated@@65 $generated@@134 $generated@@135 $generated@@136)) (=> (and (and (= $generated@@137 ($generated@@60 $generated@@6 ($generated@@10 $generated@@138))) (= $generated@@139 ($generated@@60 $generated@@6 ($generated@@10 $generated@@133)))) (and ($generated@@140 $generated@@141) ($generated@@142 $generated@@141))) (=> (and (and (and ($generated@@79 $generated@@143 $generated) ($generated@@65 $generated@@143 $generated $generated@@141)) (forall (($generated@@189 T@U) ) (!  (=> (and (or (not (= $generated@@189 $generated@@144)) (not true)) ($generated@@9 ($generated@@31 $generated@@5 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@136 $generated@@189) $generated@@1)))) (= ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@141 $generated@@189) ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@136 $generated@@189)))
 :pattern ( ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@141 $generated@@189))
))) (and ($generated@@25 $generated@@136 $generated@@141) (= $generated@@145 ($generated@@11 ($generated@@31 $generated@@6 $generated@@143))))) (and (=> (= (ControlFlow 0 21) (- 0 22)) (<= ($generated@@55 0) $generated@@145)) (=> (<= ($generated@@55 0) $generated@@145) (=> (= (ControlFlow 0 21) 6) $generated@@187)))))))))))))
(let (($generated@@190  (=> (and (= $generated@@146 (- $generated@@132 1)) (= $generated@@147 ($generated@@55 (- 0 4)))) (and (=> (= (ControlFlow 0 17) (- 0 20)) (or (<= 0 $generated@@132) (= $generated@@146 $generated@@132))) (=> (or (<= 0 $generated@@132) (= $generated@@146 $generated@@132)) (and (=> (= (ControlFlow 0 17) (- 0 19)) (< $generated@@146 $generated@@132)) (=> (< $generated@@146 $generated@@132) (=> (and ($generated@@79 $generated@@148 $generated@@149) ($generated@@65 $generated@@148 $generated@@149 $generated@@136)) (=> (and (and (= $generated@@150 ($generated@@60 $generated@@6 ($generated@@10 $generated@@138))) (= $generated@@151 ($generated@@60 $generated@@6 ($generated@@10 $generated@@147)))) (and ($generated@@140 $generated@@152) ($generated@@142 $generated@@152))) (=> (and (and (and ($generated@@79 $generated@@153 $generated) ($generated@@65 $generated@@153 $generated $generated@@152)) (forall (($generated@@191 T@U) ) (!  (=> (and (or (not (= $generated@@191 $generated@@144)) (not true)) ($generated@@9 ($generated@@31 $generated@@5 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@136 $generated@@191) $generated@@1)))) (= ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@152 $generated@@191) ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@136 $generated@@191)))
 :pattern ( ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@152 $generated@@191))
))) (and ($generated@@25 $generated@@136 $generated@@152) (= $generated@@154 ($generated@@11 ($generated@@31 $generated@@6 $generated@@153))))) (and (=> (= (ControlFlow 0 17) (- 0 18)) (<= ($generated@@55 0) $generated@@154)) (=> (<= ($generated@@55 0) $generated@@154) (=> (= (ControlFlow 0 17) 6) $generated@@187)))))))))))))
(let (($generated@@192  (=> (= $generated@@155 (- $generated@@132 1)) (and (=> (= (ControlFlow 0 12) (- 0 16)) ($generated@@63 $generated@@6 ($generated@@10 ($generated@@55 4)) $generated@@22)) (=> ($generated@@63 $generated@@6 ($generated@@10 ($generated@@55 4)) $generated@@22) (=> (= $generated@@156 ($generated@@55 4)) (and (=> (= (ControlFlow 0 12) (- 0 15)) (or (<= 0 $generated@@132) (= $generated@@155 $generated@@132))) (=> (or (<= 0 $generated@@132) (= $generated@@155 $generated@@132)) (and (=> (= (ControlFlow 0 12) (- 0 14)) (< $generated@@155 $generated@@132)) (=> (< $generated@@155 $generated@@132) (=> (and (and (and (and ($generated@@79 $generated@@157 $generated@@158) ($generated@@65 $generated@@157 $generated@@158 $generated@@136)) (= $generated@@159 $generated@@22)) (and (and (= $generated@@160 ($generated@@60 $generated@@6 ($generated@@10 $generated@@138))) (= $generated@@161 ($generated@@60 $generated@@6 ($generated@@10 $generated@@156)))) (and ($generated@@140 $generated@@162) ($generated@@142 $generated@@162)))) (and (and (and ($generated@@79 $generated@@163 $generated@@159) ($generated@@65 $generated@@163 $generated@@159 $generated@@162)) (forall (($generated@@193 T@U) ) (!  (=> (and (or (not (= $generated@@193 $generated@@144)) (not true)) ($generated@@9 ($generated@@31 $generated@@5 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@136 $generated@@193) $generated@@1)))) (= ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@162 $generated@@193) ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@136 $generated@@193)))
 :pattern ( ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@162 $generated@@193))
))) (and ($generated@@25 $generated@@136 $generated@@162) (= $generated@@164 ($generated@@11 ($generated@@31 $generated@@6 $generated@@163)))))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (<= ($generated@@55 0) $generated@@164)) (=> (<= ($generated@@55 0) $generated@@164) (=> (= (ControlFlow 0 12) 6) $generated@@187))))))))))))))
(let (($generated@@194  (=> (= $generated@@165 (- $generated@@132 1)) (and (=> (= (ControlFlow 0 7) (- 0 11)) ($generated@@63 $generated@@6 ($generated@@10 ($generated@@55 (- 0 4))) $generated@@22)) (=> ($generated@@63 $generated@@6 ($generated@@10 ($generated@@55 (- 0 4))) $generated@@22) (=> (= $generated@@166 ($generated@@55 (- 0 4))) (and (=> (= (ControlFlow 0 7) (- 0 10)) (or (<= 0 $generated@@132) (= $generated@@165 $generated@@132))) (=> (or (<= 0 $generated@@132) (= $generated@@165 $generated@@132)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (< $generated@@165 $generated@@132)) (=> (< $generated@@165 $generated@@132) (=> (and (and (and (and ($generated@@79 $generated@@167 $generated@@168) ($generated@@65 $generated@@167 $generated@@168 $generated@@136)) (= $generated@@169 $generated@@22)) (and (and (= $generated@@170 ($generated@@60 $generated@@6 ($generated@@10 $generated@@138))) (= $generated@@171 ($generated@@60 $generated@@6 ($generated@@10 $generated@@166)))) (and ($generated@@140 $generated@@172) ($generated@@142 $generated@@172)))) (and (and (and ($generated@@79 $generated@@173 $generated@@169) ($generated@@65 $generated@@173 $generated@@169 $generated@@172)) (forall (($generated@@195 T@U) ) (!  (=> (and (or (not (= $generated@@195 $generated@@144)) (not true)) ($generated@@9 ($generated@@31 $generated@@5 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@136 $generated@@195) $generated@@1)))) (= ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@172 $generated@@195) ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@136 $generated@@195)))
 :pattern ( ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@172 $generated@@195))
))) (and ($generated@@25 $generated@@136 $generated@@172) (= $generated@@174 ($generated@@11 ($generated@@31 $generated@@6 $generated@@173)))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (<= ($generated@@55 0) $generated@@174)) (=> (<= ($generated@@55 0) $generated@@174) (=> (= (ControlFlow 0 7) 6) $generated@@187))))))))))))))
(let (($generated@@196  (=> (< 0 $generated@@132) (and (=> (= (ControlFlow 0 25) (- 0 26)) ($generated@@63 $generated@@6 ($generated@@10 ($generated@@55 5)) $generated@@22)) (=> ($generated@@63 $generated@@6 ($generated@@10 ($generated@@55 5)) $generated@@22) (=> (= $generated@@138 ($generated@@55 5)) (and (and (and (and (=> (= (ControlFlow 0 25) 7) $generated@@194) (=> (= (ControlFlow 0 25) 12) $generated@@192)) (=> (= (ControlFlow 0 25) 17) $generated@@190)) (=> (= (ControlFlow 0 25) 21) $generated@@188)) (=> (= (ControlFlow 0 25) 5) $generated@@185))))))))
(let (($generated@@197  (=> (and (<= $generated@@132 0) (= (ControlFlow 0 3) 2)) $generated@@186)))
(let (($generated@@198  (=> (= $generated@@175 ($generated@@91 $generated@@144 $generated@@136 $generated@@1 false)) (and (=> (= (ControlFlow 0 27) 25) $generated@@196) (=> (= (ControlFlow 0 27) 3) $generated@@197)))))
(let (($generated@@199  (=> (and (and (and (and ($generated@@140 $generated@@136) ($generated@@142 $generated@@136)) (and ($generated@@79 $generated@@176 $generated@@177) ($generated@@65 $generated@@176 $generated@@177 $generated@@136))) (and (and ($generated@@79 $generated@@178 $generated@@177) ($generated@@65 $generated@@178 $generated@@177 $generated@@136)) (=> $generated@@179 (and ($generated@@79 $generated@@180 $generated@@177) ($generated@@65 $generated@@180 $generated@@177 $generated@@136))))) (and (and (and (<= ($generated@@55 0) $generated@@181) true) (and (<= ($generated@@55 0) $generated@@182) true)) (and (and (<= ($generated@@55 0) $generated@@183) true) (and (= 0 $generated@@184) (= (ControlFlow 0 28) 27))))) $generated@@198)))
$generated@@199))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 7) (- 11))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 17) (- 18))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 21) (- 22))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
