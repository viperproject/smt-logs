(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (Int) T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@U T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@49 (T@U) Int)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@63 (T@U T@U T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@81 (Int T@U) T@U)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@123 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@135 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@136 (T@T T@T) T@T)
(declare-fun $generated@@137 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@189 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@196 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (and ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28)) ($generated@@25 $generated@@26 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 Int) ($generated@@34 Int) ) (!  (=> (and (and (<= 0 $generated@@33) (<= 0 $generated@@34)) (<= (+ $generated@@33 $generated@@34) ($generated@@31 $generated@@32))) (= ($generated@@29 ($generated@@29 $generated@@32 ($generated@@30 $generated@@33)) ($generated@@30 $generated@@34)) ($generated@@29 $generated@@32 ($generated@@30 (+ $generated@@33 $generated@@34)))))
 :pattern ( ($generated@@29 ($generated@@29 $generated@@32 ($generated@@30 $generated@@33)) ($generated@@30 $generated@@34)))
)))
(assert (= ($generated@@35 $generated@@36) $generated@@5))
(assert  (and (= ($generated@@8 $generated@@41) 3) (= ($generated@@8 $generated@@42) 4)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (or ($generated@@43 ($generated@@40 $generated@@41 $generated@@52) ($generated@@40 $generated@@42 $generated@@53) ($generated@@40 $generated@@42 $generated@@54)) (and (< 2 $generated@@37) (and ($generated@@44 $generated@@42 $generated@@53 $generated@@45) ($generated@@44 $generated@@42 $generated@@54 $generated@@45)))) (and (and (=> (< 0 ($generated@@31 $generated@@52)) (=> (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@12 ($generated@@46 ($generated@@40 $generated@@42 $generated@@53)))))) (let (($generated@@55 ($generated@@40 $generated@@42 ($generated@@47 ($generated@@40 $generated@@42 $generated@@53)))))
(let (($generated@@56 ($generated@@48 ($generated@@49 ($generated@@40 $generated@@42 $generated@@53)))))
 (=> ($generated@@13 ($generated@@40 $generated@@9 ($generated@@12 ($generated@@50 ($generated@@40 $generated@@42 $generated@@54))))) (=> (<= $generated@@56 ($generated@@48 ($generated@@49 ($generated@@40 $generated@@42 $generated@@54)))) ($generated@@43 ($generated@@29 $generated@@52 ($generated@@30 1)) $generated@@55 ($generated@@40 $generated@@42 ($generated@@47 ($generated@@40 $generated@@42 $generated@@54)))))))))) (=> (=> (< 0 ($generated@@31 $generated@@52)) (ite ($generated@@46 ($generated@@40 $generated@@42 $generated@@53)) true (let (($generated@@57 ($generated@@40 $generated@@42 ($generated@@47 ($generated@@40 $generated@@42 $generated@@53)))))
(let (($generated@@58 ($generated@@48 ($generated@@49 ($generated@@40 $generated@@42 $generated@@53)))))
 (and (and ($generated@@50 ($generated@@40 $generated@@42 $generated@@54)) (<= $generated@@58 ($generated@@48 ($generated@@49 ($generated@@40 $generated@@42 $generated@@54))))) ($generated@@38 ($generated@@39 $generated@@51) ($generated@@29 $generated@@52 ($generated@@30 1)) $generated@@57 ($generated@@40 $generated@@42 ($generated@@47 ($generated@@40 $generated@@42 $generated@@54))))))))) (=> (= ($generated@@48 0) ($generated@@31 $generated@@52)) (forall (($generated@@59 T@U) ) (!  (=> ($generated@@25 $generated@@59 $generated@@52) ($generated@@43 $generated@@59 $generated@@53 $generated@@54))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@51) $generated@@59 $generated@@53 $generated@@54))
))))) (= ($generated@@38 ($generated@@39 $generated@@51) ($generated@@40 $generated@@41 $generated@@52) ($generated@@40 $generated@@42 $generated@@53) ($generated@@40 $generated@@42 $generated@@54))  (and (=> (< 0 ($generated@@31 $generated@@52)) (ite ($generated@@46 ($generated@@40 $generated@@42 $generated@@53)) true (let (($generated@@60 ($generated@@40 $generated@@42 ($generated@@47 ($generated@@40 $generated@@42 $generated@@53)))))
(let (($generated@@61 ($generated@@48 ($generated@@49 ($generated@@40 $generated@@42 $generated@@53)))))
 (and (and ($generated@@50 ($generated@@40 $generated@@42 $generated@@54)) (<= $generated@@61 ($generated@@48 ($generated@@49 ($generated@@40 $generated@@42 $generated@@54))))) ($generated@@38 ($generated@@39 $generated@@51) ($generated@@29 $generated@@52 ($generated@@30 1)) $generated@@60 ($generated@@40 $generated@@42 ($generated@@47 ($generated@@40 $generated@@42 $generated@@54))))))))) (=> (= ($generated@@48 0) ($generated@@31 $generated@@52)) (forall (($generated@@62 T@U) ) (!  (=> ($generated@@25 $generated@@62 $generated@@52) ($generated@@38 ($generated@@39 $generated@@51) $generated@@62 $generated@@53 $generated@@54))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@51) $generated@@62 $generated@@53 $generated@@54))
)))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@51) ($generated@@40 $generated@@41 $generated@@52) ($generated@@40 $generated@@42 $generated@@53) ($generated@@40 $generated@@42 $generated@@54)))
))))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (and (and ($generated@@44 $generated@@42 $generated@@65 $generated@@45) ($generated@@44 $generated@@42 $generated@@66 $generated@@45)) ($generated@@63 ($generated@@39 $generated@@64) $generated@@65 $generated@@66)) (forall (($generated@@67 T@U) ) (! ($generated@@38 ($generated@@39 $generated@@64) $generated@@67 $generated@@65 $generated@@66)
 :pattern ( ($generated@@38 ($generated@@39 $generated@@64) $generated@@67 $generated@@65 $generated@@66))
)))
 :pattern ( ($generated@@63 ($generated@@39 $generated@@64) $generated@@65 $generated@@66))
))))
(assert ($generated@@44 $generated@@42 $generated@@36 $generated@@45))
(assert (forall (($generated@@68 Int) ) (! (= ($generated@@48 $generated@@68) $generated@@68)
 :pattern ( ($generated@@48 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@40 $generated@@70 $generated@@69) $generated@@69)
 :pattern ( ($generated@@40 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@46 $generated@@71) (= ($generated@@35 $generated@@71) $generated@@5))
 :pattern ( ($generated@@46 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@50 $generated@@72) (= ($generated@@35 $generated@@72) $generated@@6))
 :pattern ( ($generated@@50 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@73 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@73 $generated@@76 $generated@@75))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and (and ($generated@@44 $generated@@42 $generated@@78 $generated@@45) ($generated@@44 $generated@@42 $generated@@79 $generated@@45)) (forall (($generated@@80 T@U) ) (! ($generated@@38 ($generated@@39 $generated@@77) $generated@@80 $generated@@78 $generated@@79)
 :pattern ( ($generated@@38 ($generated@@39 $generated@@77) $generated@@80 $generated@@78 $generated@@79))
))) ($generated@@63 ($generated@@39 $generated@@77) $generated@@78 $generated@@79))
 :pattern ( ($generated@@63 ($generated@@39 $generated@@77) $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@50 $generated@@82) (exists (($generated@@83 Int) ($generated@@84 T@U) ) (= $generated@@82 ($generated@@81 $generated@@83 $generated@@84))))
 :pattern ( ($generated@@50 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@46 $generated@@85) (= $generated@@85 $generated@@36))
 :pattern ( ($generated@@46 $generated@@85))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (or ($generated@@43 $generated@@87 $generated@@88 $generated@@89) (and (< 2 $generated@@37) (and ($generated@@44 $generated@@42 $generated@@88 $generated@@45) ($generated@@44 $generated@@42 $generated@@89 $generated@@45)))) (and (and (=> (< 0 ($generated@@31 $generated@@87)) (=> (not ($generated@@46 $generated@@88)) (let (($generated@@90 ($generated@@47 $generated@@88)))
(let (($generated@@91 ($generated@@49 $generated@@88)))
 (=> ($generated@@50 $generated@@89) (=> (<= $generated@@91 ($generated@@49 $generated@@89)) ($generated@@43 ($generated@@29 $generated@@87 ($generated@@30 1)) $generated@@90 ($generated@@47 $generated@@89)))))))) (=> (=> (< 0 ($generated@@31 $generated@@87)) (ite ($generated@@46 $generated@@88) true (let (($generated@@92 ($generated@@47 $generated@@88)))
(let (($generated@@93 ($generated@@49 $generated@@88)))
 (and (and ($generated@@50 $generated@@89) (<= $generated@@93 ($generated@@49 $generated@@89))) ($generated@@38 $generated@@86 ($generated@@29 $generated@@87 ($generated@@30 1)) $generated@@92 ($generated@@47 $generated@@89))))))) (=> (= ($generated@@48 0) ($generated@@31 $generated@@87)) (forall (($generated@@94 T@U) ) (!  (=> ($generated@@25 $generated@@94 $generated@@87) ($generated@@43 $generated@@94 $generated@@88 $generated@@89))
 :pattern ( ($generated@@38 $generated@@86 $generated@@94 $generated@@88 $generated@@89))
))))) (= ($generated@@38 ($generated@@39 $generated@@86) $generated@@87 $generated@@88 $generated@@89)  (and (=> (< 0 ($generated@@31 $generated@@87)) (ite ($generated@@46 $generated@@88) true (let (($generated@@95 ($generated@@47 $generated@@88)))
(let (($generated@@96 ($generated@@49 $generated@@88)))
 (and (and ($generated@@50 $generated@@89) (<= $generated@@96 ($generated@@49 $generated@@89))) ($generated@@38 $generated@@86 ($generated@@29 $generated@@87 ($generated@@30 1)) $generated@@95 ($generated@@47 $generated@@89))))))) (=> (= ($generated@@48 0) ($generated@@31 $generated@@87)) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@25 $generated@@97 $generated@@87) ($generated@@38 $generated@@86 $generated@@97 $generated@@88 $generated@@89))
 :pattern ( ($generated@@38 $generated@@86 $generated@@97 $generated@@88 $generated@@89))
)))))))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@86) $generated@@87 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@63 ($generated@@39 $generated@@98) $generated@@99 $generated@@100) ($generated@@63 $generated@@98 $generated@@99 $generated@@100))
 :pattern ( ($generated@@63 ($generated@@39 $generated@@98) $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@101 $generated@@103) (<= ($generated@@31 $generated@@103) ($generated@@31 $generated@@102))) (and (= ($generated@@101 ($generated@@29 $generated@@102 $generated@@103)) ($generated@@101 $generated@@102)) (= ($generated@@31 ($generated@@29 $generated@@102 $generated@@103)) (- ($generated@@31 $generated@@102) ($generated@@31 $generated@@103)))))
 :pattern ( ($generated@@29 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 Int) ) (!  (=> (<= 0 $generated@@104) (and ($generated@@101 ($generated@@30 $generated@@104)) (= ($generated@@31 ($generated@@30 $generated@@104)) $generated@@104)))
 :pattern ( ($generated@@30 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (or ($generated@@25 $generated@@105 $generated@@106) (= $generated@@105 $generated@@106)) ($generated@@25 $generated@@106 $generated@@105))
 :pattern ( ($generated@@25 $generated@@105 $generated@@106) ($generated@@25 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@44 $generated@@42 $generated@@107 $generated@@45) (or ($generated@@46 $generated@@107) ($generated@@50 $generated@@107)))
 :pattern ( ($generated@@50 $generated@@107) ($generated@@44 $generated@@42 $generated@@107 $generated@@45))
 :pattern ( ($generated@@46 $generated@@107) ($generated@@44 $generated@@42 $generated@@107 $generated@@45))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@38 ($generated@@39 $generated@@108) $generated@@109 $generated@@110 $generated@@111) ($generated@@38 $generated@@108 $generated@@109 $generated@@110 $generated@@111))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@108) $generated@@109 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (! (<= 0 ($generated@@31 $generated@@112))
 :pattern ( ($generated@@31 $generated@@112))
)))
(assert (forall (($generated@@113 Int) ($generated@@114 T@U) ) (! (= ($generated@@35 ($generated@@81 $generated@@113 $generated@@114)) $generated@@6)
 :pattern ( ($generated@@81 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 Int) ($generated@@116 T@U) ) (! (= ($generated@@49 ($generated@@81 $generated@@115 $generated@@116)) $generated@@115)
 :pattern ( ($generated@@81 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 Int) ($generated@@118 T@U) ) (! (= ($generated@@47 ($generated@@81 $generated@@117 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@81 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@73 $generated@@120 ($generated@@74 $generated@@120 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@74 $generated@@120 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@121 $generated@@122) (or (not (= $generated@@121 $generated@@122)) (not true))) (=> (and ($generated@@101 $generated@@121) (not ($generated@@101 $generated@@122))) ($generated@@25 $generated@@121 $generated@@122))) (=> (and ($generated@@101 $generated@@121) ($generated@@101 $generated@@122)) (= ($generated@@25 $generated@@121 $generated@@122) (< ($generated@@31 $generated@@121) ($generated@@31 $generated@@122))))) (=> (and ($generated@@25 $generated@@121 $generated@@122) ($generated@@101 $generated@@122)) ($generated@@101 $generated@@121)))
 :pattern ( ($generated@@25 $generated@@121 $generated@@122))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (or ($generated@@123 $generated@@125 $generated@@126) (and (< 1 $generated@@37) (and ($generated@@44 $generated@@42 $generated@@125 $generated@@45) ($generated@@44 $generated@@42 $generated@@126 $generated@@45)))) (and (=> (not ($generated@@46 $generated@@125)) (let (($generated@@127 ($generated@@47 $generated@@125)))
(let (($generated@@128 ($generated@@49 $generated@@125)))
 (=> ($generated@@50 $generated@@126) (=> (<= $generated@@128 ($generated@@49 $generated@@126)) ($generated@@123 $generated@@127 ($generated@@47 $generated@@126))))))) (= ($generated@@63 ($generated@@39 $generated@@124) $generated@@125 $generated@@126) (ite ($generated@@46 $generated@@125) true (let (($generated@@129 ($generated@@47 $generated@@125)))
(let (($generated@@130 ($generated@@49 $generated@@125)))
 (and (and ($generated@@50 $generated@@126) (<= $generated@@130 ($generated@@49 $generated@@126))) ($generated@@63 $generated@@124 $generated@@129 ($generated@@47 $generated@@126)))))))))
 :pattern ( ($generated@@63 ($generated@@39 $generated@@124) $generated@@125 $generated@@126))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@131 $generated@@141 $generated@@142 $generated@@143 ($generated@@137 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@146 $generated@@147) $generated@@144)
 :weight 0
)) (and (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@131 $generated@@148 $generated@@149 $generated@@150 ($generated@@137 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@131 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@131 $generated@@157 $generated@@158 $generated@@159 ($generated@@137 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@131 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)))) (= ($generated@@8 $generated@@132) 5)) (= ($generated@@8 $generated@@133) 6)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@135 $generated@@166 $generated@@167 ($generated@@138 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@168) $generated@@170) $generated@@168)
 :weight 0
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or (= $generated@@175 $generated@@176) (= ($generated@@135 $generated@@171 $generated@@172 ($generated@@138 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@173) $generated@@176) ($generated@@135 $generated@@171 $generated@@172 $generated@@174 $generated@@176)))
 :weight 0
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@8 ($generated@@136 $generated@@177 $generated@@178)) 7))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@139 ($generated@@136 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@136 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@140 ($generated@@136 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@136 $generated@@181 $generated@@182))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 Bool) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@13 ($generated@@131 $generated@@132 $generated@@133 $generated@@9 ($generated@@134 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))  (=> (and (or (not (= $generated@@187 $generated@@183)) (not true)) ($generated@@13 ($generated@@73 $generated@@9 ($generated@@135 $generated@@133 $generated@@41 ($generated@@135 $generated@@132 ($generated@@136 $generated@@133 $generated@@41) $generated@@184 $generated@@187) $generated@@185)))) $generated@@186))
 :pattern ( ($generated@@131 $generated@@132 $generated@@133 $generated@@9 ($generated@@134 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and ($generated@@190 $generated@@192) (and ($generated@@50 $generated@@191) ($generated@@189 $generated@@42 $generated@@191 $generated@@45 $generated@@192))) ($generated@@189 $generated@@10 ($generated@@14 ($generated@@49 $generated@@191)) $generated@@0 $generated@@192))
 :pattern ( ($generated@@189 $generated@@10 ($generated@@14 ($generated@@49 $generated@@191)) $generated@@0 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ) (!  (=> ($generated@@101 $generated@@193) (= $generated@@193 ($generated@@30 ($generated@@31 $generated@@193))))
 :pattern ( ($generated@@31 $generated@@193))
 :pattern ( ($generated@@101 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and ($generated@@190 $generated@@195) ($generated@@44 $generated@@42 $generated@@194 $generated@@45)) ($generated@@189 $generated@@42 $generated@@194 $generated@@45 $generated@@195))
 :pattern ( ($generated@@189 $generated@@42 $generated@@194 $generated@@45 $generated@@195))
)))
(assert (= ($generated@@24 $generated@@45) $generated@@4))
(assert (= ($generated@@196 $generated@@45) $generated@@7))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and ($generated@@44 $generated@@42 $generated@@198 $generated@@45) ($generated@@44 $generated@@42 $generated@@199 $generated@@45)) (= $generated@@200 ($generated@@30 0))) ($generated@@38 $generated@@197 $generated@@200 $generated@@198 $generated@@199))
 :pattern ( ($generated@@38 $generated@@197 $generated@@200 $generated@@198 $generated@@199))
))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and ($generated@@101 $generated@@202) (<= ($generated@@31 $generated@@202) ($generated@@31 $generated@@201))) (or (and (= $generated@@202 ($generated@@30 0)) (= ($generated@@29 $generated@@201 $generated@@202) $generated@@201)) (and (or (not (= $generated@@202 ($generated@@30 0))) (not true)) ($generated@@25 ($generated@@29 $generated@@201 $generated@@202) $generated@@201))))
 :pattern ( ($generated@@29 $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and ($generated@@190 $generated@@204) (and ($generated@@50 $generated@@203) ($generated@@189 $generated@@42 $generated@@203 $generated@@45 $generated@@204))) ($generated@@189 $generated@@42 ($generated@@47 $generated@@203) $generated@@45 $generated@@204))
 :pattern ( ($generated@@189 $generated@@42 ($generated@@47 $generated@@203) $generated@@45 $generated@@204))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@74 $generated@@10 ($generated@@14 ($generated@@48 $generated@@205))) ($generated@@40 $generated@@41 ($generated@@74 $generated@@10 ($generated@@14 $generated@@205))))
 :pattern ( ($generated@@74 $generated@@10 ($generated@@14 ($generated@@48 $generated@@205))))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@T) ) (! (= ($generated@@74 $generated@@207 ($generated@@40 $generated@@207 $generated@@206)) ($generated@@40 $generated@@41 ($generated@@74 $generated@@207 $generated@@206)))
 :pattern ( ($generated@@74 $generated@@207 ($generated@@40 $generated@@207 $generated@@206)))
)))
(assert (forall (($generated@@208 Int) ($generated@@209 T@U) ) (! (= ($generated@@44 $generated@@42 ($generated@@81 $generated@@208 $generated@@209) $generated@@45)  (and ($generated@@44 $generated@@10 ($generated@@14 $generated@@208) $generated@@0) ($generated@@44 $generated@@42 $generated@@209 $generated@@45)))
 :pattern ( ($generated@@44 $generated@@42 ($generated@@81 $generated@@208 $generated@@209) $generated@@45))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! ($generated@@189 $generated@@10 $generated@@211 $generated@@0 $generated@@210)
 :pattern ( ($generated@@189 $generated@@10 $generated@@211 $generated@@0 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! ($generated@@189 $generated@@9 $generated@@213 $generated $generated@@212)
 :pattern ( ($generated@@189 $generated@@9 $generated@@213 $generated $generated@@212))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (or ($generated@@43 ($generated@@40 $generated@@41 $generated@@215) $generated@@216 $generated@@217) (and (< 2 $generated@@37) (and ($generated@@44 $generated@@42 $generated@@216 $generated@@45) ($generated@@44 $generated@@42 $generated@@217 $generated@@45)))) (and (and (=> (< 0 ($generated@@31 $generated@@215)) (=> (not ($generated@@46 $generated@@216)) (let (($generated@@218 ($generated@@47 $generated@@216)))
(let (($generated@@219 ($generated@@49 $generated@@216)))
 (=> ($generated@@50 $generated@@217) (=> (<= $generated@@219 ($generated@@49 $generated@@217)) ($generated@@43 ($generated@@29 $generated@@215 ($generated@@30 1)) $generated@@218 ($generated@@47 $generated@@217)))))))) (=> (=> (< 0 ($generated@@31 $generated@@215)) (ite ($generated@@46 $generated@@216) true (let (($generated@@220 ($generated@@47 $generated@@216)))
(let (($generated@@221 ($generated@@49 $generated@@216)))
 (and (and ($generated@@50 $generated@@217) (<= $generated@@221 ($generated@@49 $generated@@217))) ($generated@@38 ($generated@@39 $generated@@214) ($generated@@29 $generated@@215 ($generated@@30 1)) $generated@@220 ($generated@@47 $generated@@217))))))) (=> (= ($generated@@48 0) ($generated@@31 $generated@@215)) (forall (($generated@@222 T@U) ) (!  (=> ($generated@@25 $generated@@222 $generated@@215) ($generated@@43 $generated@@222 $generated@@216 $generated@@217))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@214) $generated@@222 $generated@@216 $generated@@217))
))))) (= ($generated@@38 ($generated@@39 $generated@@214) ($generated@@40 $generated@@41 $generated@@215) $generated@@216 $generated@@217)  (and (=> (< 0 ($generated@@31 $generated@@215)) (ite ($generated@@46 $generated@@216) true (let (($generated@@223 ($generated@@47 $generated@@216)))
(let (($generated@@224 ($generated@@49 $generated@@216)))
 (and (and ($generated@@50 $generated@@217) (<= $generated@@224 ($generated@@49 $generated@@217))) ($generated@@38 ($generated@@39 $generated@@214) ($generated@@29 $generated@@215 ($generated@@30 1)) $generated@@223 ($generated@@47 $generated@@217))))))) (=> (= ($generated@@48 0) ($generated@@31 $generated@@215)) (forall (($generated@@225 T@U) ) (!  (=> ($generated@@25 $generated@@225 $generated@@215) ($generated@@38 ($generated@@39 $generated@@214) $generated@@225 $generated@@216 $generated@@217))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@214) $generated@@225 $generated@@216 $generated@@217))
)))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@214) ($generated@@40 $generated@@41 $generated@@215) $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@226 T@U) ) (! ($generated@@44 $generated@@10 $generated@@226 $generated@@0)
 :pattern ( ($generated@@44 $generated@@10 $generated@@226 $generated@@0))
)))
(assert (forall (($generated@@227 T@U) ) (! ($generated@@44 $generated@@9 $generated@@227 $generated)
 :pattern ( ($generated@@44 $generated@@9 $generated@@227 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@241 true))
(let (($generated@@242  (=> (and (not (and ($generated@@50 $generated@@228) (<= $generated@@229 ($generated@@49 $generated@@228)))) (= (ControlFlow 0 7) 4)) $generated@@241)))
(let (($generated@@243  (=> (and (and ($generated@@50 $generated@@228) (<= $generated@@229 ($generated@@49 $generated@@228))) ($generated@@189 $generated@@42 $generated@@230 $generated@@45 $generated@@231)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@50 $generated@@228)) (=> ($generated@@50 $generated@@228) (=> (and (and (= $generated@@232 ($generated@@47 $generated@@228)) ($generated@@189 $generated@@42 $generated@@232 $generated@@45 $generated@@231)) (and ($generated@@123 $generated@@230 ($generated@@47 $generated@@228)) (= (ControlFlow 0 5) 4))) $generated@@241))))))
(let (($generated@@244  (=> (not ($generated@@50 $generated@@228)) (and (=> (= (ControlFlow 0 10) 5) $generated@@243) (=> (= (ControlFlow 0 10) 7) $generated@@242)))))
(let (($generated@@245  (=> ($generated@@50 $generated@@228) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@50 $generated@@228)) (=> ($generated@@50 $generated@@228) (and (=> (= (ControlFlow 0 8) 5) $generated@@243) (=> (= (ControlFlow 0 8) 7) $generated@@242)))))))
(let (($generated@@246  (=> (and (and (and (= $generated@@233 ($generated@@81 $generated@@234 $generated@@235)) ($generated@@44 $generated@@42 $generated@@235 $generated@@45)) (and (= $generated@@236 $generated@@235) ($generated@@44 $generated@@42 $generated@@236 $generated@@45))) (and (and (= $generated@@230 $generated@@236) (= $generated@@237 $generated@@234)) (and ($generated@@44 $generated@@10 ($generated@@14 $generated@@237) $generated@@0) (= $generated@@229 $generated@@237)))) (and (=> (= (ControlFlow 0 11) 8) $generated@@245) (=> (= (ControlFlow 0 11) 10) $generated@@244)))))
(let (($generated@@247 true))
(let (($generated@@248  (=> (or (not (= $generated@@233 $generated@@36)) (not true)) (and (=> (= (ControlFlow 0 12) 11) $generated@@246) (=> (= (ControlFlow 0 12) 3) $generated@@247)))))
(let (($generated@@249 true))
(let (($generated@@250 true))
(let (($generated@@251  (=> (= $generated@@238 ($generated@@134 $generated@@239 $generated@@231 $generated@@3 false)) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@250) (=> (= (ControlFlow 0 13) 2) $generated@@249)) (=> (= (ControlFlow 0 13) 12) $generated@@248)))))
(let (($generated@@252  (=> (and ($generated@@190 $generated@@231) ($generated@@240 $generated@@231)) (=> (and (and ($generated@@44 $generated@@42 $generated@@233 $generated@@45) ($generated@@44 $generated@@42 $generated@@228 $generated@@45)) (and (= 1 $generated@@37) (= (ControlFlow 0 14) 13))) $generated@@251))))
$generated@@252)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
