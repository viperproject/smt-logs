(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@45 (Int) Int)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 (T@U T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@93 (T@U) Int)
(declare-fun $generated@@94 (T@U) Int)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@106 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T) T@T)
(declare-fun $generated@@112 (T@T) T@T)
(declare-fun $generated@@161 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@1))
(assert (= ($generated@@25 $generated@@0) $generated@@2))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29)
 :pattern ( ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29))
)))
(assert (forall (($generated@@32 T@U) ) (!  (=> ($generated@@30 $generated@@32) ($generated@@31 $generated@@32))
 :pattern ( ($generated@@30 $generated@@32))
)))
(assert (= ($generated@@9 $generated@@34) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@38 ($generated@@35 $generated@@36 $generated@@37)) ($generated@@31 $generated@@38))
 :pattern ( ($generated@@31 $generated@@38) ($generated@@33 $generated@@34 $generated@@38 ($generated@@35 $generated@@36 $generated@@37)))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@33 $generated@@34 ($generated@@39 $generated@@43 $generated@@44) ($generated@@35 $generated@@41 $generated@@42))  (and ($generated@@40 $generated@@43 $generated@@41) ($generated@@40 $generated@@44 $generated@@42)))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@39 $generated@@43 $generated@@44) ($generated@@35 $generated@@41 $generated@@42)))
)))
(assert (forall (($generated@@46 Int) ) (! (= ($generated@@45 $generated@@46) $generated@@46)
 :pattern ( ($generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 $generated@@48) $generated@@48)
 :pattern ( ($generated@@47 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@50 $generated@@56) (= ($generated@@26 $generated@@34 ($generated@@39 $generated@@54 $generated@@55) ($generated@@35 $generated@@52 $generated@@53) $generated@@56)  (and ($generated@@51 $generated@@54 $generated@@52 $generated@@56) ($generated@@51 $generated@@55 $generated@@53 $generated@@56))))
 :pattern ( ($generated@@26 $generated@@34 ($generated@@39 $generated@@54 $generated@@55) ($generated@@35 $generated@@52 $generated@@53) $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@31 $generated@@58) (= ($generated@@57 $generated@@58) $generated@@6))
 :pattern ( ($generated@@31 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 ($generated@@59 $generated@@62 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@59 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (!  (=> ($generated@@31 $generated@@63) (exists (($generated@@64 T@U) ($generated@@65 T@U) ) (= $generated@@63 ($generated@@39 $generated@@64 $generated@@65))))
 :pattern ( ($generated@@31 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@33 $generated@@11 $generated@@66 $generated@@27) (<= ($generated@@45 0) ($generated@@16 $generated@@66)))
 :pattern ( ($generated@@33 $generated@@11 $generated@@66 $generated@@27))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@51 ($generated@@60 $generated@@70 $generated@@67) $generated@@68 $generated@@69) ($generated@@26 $generated@@70 $generated@@67 $generated@@68 $generated@@69))
 :pattern ( ($generated@@51 ($generated@@60 $generated@@70 $generated@@67) $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@40 $generated@@71 $generated@@27) (and (= ($generated@@60 $generated@@11 ($generated@@59 $generated@@11 $generated@@71)) $generated@@71) ($generated@@33 $generated@@11 ($generated@@59 $generated@@11 $generated@@71) $generated@@27)))
 :pattern ( ($generated@@40 $generated@@71 $generated@@27))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@40 $generated@@72 $generated@@0) (and (= ($generated@@60 $generated@@11 ($generated@@59 $generated@@11 $generated@@72)) $generated@@72) ($generated@@33 $generated@@11 ($generated@@59 $generated@@11 $generated@@72) $generated@@0)))
 :pattern ( ($generated@@40 $generated@@72 $generated@@0))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@40 $generated@@73 $generated) (and (= ($generated@@60 $generated@@10 ($generated@@59 $generated@@10 $generated@@73)) $generated@@73) ($generated@@33 $generated@@10 ($generated@@59 $generated@@10 $generated@@73) $generated)))
 :pattern ( ($generated@@40 $generated@@73 $generated))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@40 ($generated@@60 $generated@@76 $generated@@74) $generated@@75) ($generated@@33 $generated@@76 $generated@@74 $generated@@75))
 :pattern ( ($generated@@40 ($generated@@60 $generated@@76 $generated@@74) $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@77 ($generated@@35 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@35 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@80 ($generated@@35 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@35 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@57 ($generated@@39 $generated@@83 $generated@@84)) $generated@@6)
 :pattern ( ($generated@@39 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@85 ($generated@@39 $generated@@86 $generated@@87)) $generated@@86)
 :pattern ( ($generated@@39 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 ($generated@@39 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@39 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@59 $generated@@92 ($generated@@60 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@60 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (< ($generated@@93 $generated@@95) ($generated@@94 ($generated@@39 $generated@@95 $generated@@96)))
 :pattern ( ($generated@@39 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (< ($generated@@93 $generated@@98) ($generated@@94 ($generated@@39 $generated@@97 $generated@@98)))
 :pattern ( ($generated@@39 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@40 $generated@@101 ($generated@@35 $generated@@99 $generated@@100)) (and (= ($generated@@60 $generated@@34 ($generated@@59 $generated@@34 $generated@@101)) $generated@@101) ($generated@@33 $generated@@34 ($generated@@59 $generated@@34 $generated@@101) ($generated@@35 $generated@@99 $generated@@100))))
 :pattern ( ($generated@@40 $generated@@101 ($generated@@35 $generated@@99 $generated@@100)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@102 $generated@@113 $generated@@114 $generated@@115 ($generated@@109 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@118 $generated@@119) $generated@@116)
 :weight 0
)) (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@102 $generated@@120 $generated@@121 $generated@@122 ($generated@@109 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@102 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@102 $generated@@129 $generated@@130 $generated@@131 ($generated@@109 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)))) (= ($generated@@9 $generated@@103) 4)) (= ($generated@@9 $generated@@104) 5)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@106 $generated@@138 $generated@@139 ($generated@@110 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@140) $generated@@142) $generated@@140)
 :weight 0
))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@147 $generated@@148) (= ($generated@@106 $generated@@143 $generated@@144 ($generated@@110 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@106 $generated@@143 $generated@@144 $generated@@146 $generated@@148)))
 :weight 0
))) (= ($generated@@9 $generated@@107) 6)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (= ($generated@@9 ($generated@@108 $generated@@149 $generated@@150)) 7))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@111 ($generated@@108 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@108 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@112 ($generated@@108 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@108 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@14 ($generated@@102 $generated@@103 $generated@@104 $generated@@10 ($generated@@105 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (or (not (= $generated@@159 $generated@@155)) (not true)) ($generated@@14 ($generated@@59 $generated@@10 ($generated@@106 $generated@@104 $generated@@107 ($generated@@106 $generated@@103 ($generated@@108 $generated@@104 $generated@@107) $generated@@156 $generated@@159) $generated@@157)))) $generated@@158))
 :pattern ( ($generated@@102 $generated@@103 $generated@@104 $generated@@10 ($generated@@105 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (and (= ($generated@@25 ($generated@@35 $generated@@162 $generated@@163)) $generated@@5) (= ($generated@@161 ($generated@@35 $generated@@162 $generated@@163)) $generated@@8))
 :pattern ( ($generated@@35 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@93 ($generated@@60 $generated@@34 $generated@@164)) ($generated@@94 $generated@@164))
 :pattern ( ($generated@@93 ($generated@@60 $generated@@34 $generated@@164)))
)))
(assert (= ($generated@@25 $generated@@27) $generated@@4))
(assert (= ($generated@@161 $generated@@27) $generated@@7))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@50 $generated@@167) (and ($generated@@31 $generated@@165) (exists (($generated@@168 T@U) ) (! ($generated@@26 $generated@@34 $generated@@165 ($generated@@35 $generated@@166 $generated@@168) $generated@@167)
 :pattern ( ($generated@@26 $generated@@34 $generated@@165 ($generated@@35 $generated@@166 $generated@@168) $generated@@167))
)))) ($generated@@51 ($generated@@85 $generated@@165) $generated@@166 $generated@@167))
 :pattern ( ($generated@@51 ($generated@@85 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and ($generated@@50 $generated@@171) (and ($generated@@31 $generated@@169) (exists (($generated@@172 T@U) ) (! ($generated@@26 $generated@@34 $generated@@169 ($generated@@35 $generated@@172 $generated@@170) $generated@@171)
 :pattern ( ($generated@@26 $generated@@34 $generated@@169 ($generated@@35 $generated@@172 $generated@@170) $generated@@171))
)))) ($generated@@51 ($generated@@88 $generated@@169) $generated@@170 $generated@@171))
 :pattern ( ($generated@@51 ($generated@@88 $generated@@169) $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@39 ($generated@@47 $generated@@107 $generated@@173) ($generated@@47 $generated@@107 $generated@@174)) ($generated@@47 $generated@@34 ($generated@@39 $generated@@173 $generated@@174)))
 :pattern ( ($generated@@39 ($generated@@47 $generated@@107 $generated@@173) ($generated@@47 $generated@@107 $generated@@174)))
)))
(assert (forall (($generated@@175 Int) ) (! (= ($generated@@60 $generated@@11 ($generated@@15 ($generated@@45 $generated@@175))) ($generated@@47 $generated@@107 ($generated@@60 $generated@@11 ($generated@@15 $generated@@175))))
 :pattern ( ($generated@@60 $generated@@11 ($generated@@15 ($generated@@45 $generated@@175))))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@T) ) (! (= ($generated@@60 $generated@@177 ($generated@@47 $generated@@177 $generated@@176)) ($generated@@47 $generated@@107 ($generated@@60 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@60 $generated@@177 ($generated@@47 $generated@@177 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! ($generated@@26 $generated@@11 $generated@@179 $generated@@0 $generated@@178)
 :pattern ( ($generated@@26 $generated@@11 $generated@@179 $generated@@0 $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! ($generated@@26 $generated@@10 $generated@@181 $generated $generated@@180)
 :pattern ( ($generated@@26 $generated@@10 $generated@@181 $generated $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ) (! ($generated@@33 $generated@@11 $generated@@182 $generated@@0)
 :pattern ( ($generated@@33 $generated@@11 $generated@@182 $generated@@0))
)))
(assert (forall (($generated@@183 T@U) ) (! ($generated@@33 $generated@@10 $generated@@183 $generated)
 :pattern ( ($generated@@33 $generated@@10 $generated@@183 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@193  (=> (and (= $generated@@184 ($generated@@105 $generated@@185 $generated@@186 $generated@@3 false)) (<= ($generated@@45 0) $generated@@187)) (=> (and (and (= $generated@@188 $generated@@189) ($generated@@33 $generated@@34 $generated@@188 ($generated@@35 $generated@@0 $generated))) (and ($generated@@31 $generated@@188) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@33 $generated@@11 ($generated@@59 $generated@@11 ($generated@@85 $generated@@188)) $generated@@27)))))
(let (($generated@@194  (=> (and ($generated@@50 $generated@@186) ($generated@@190 $generated@@186)) (=> (and (and ($generated@@33 $generated@@34 $generated@@191 ($generated@@35 $generated@@27 $generated)) ($generated@@26 $generated@@34 $generated@@191 ($generated@@35 $generated@@27 $generated) $generated@@186)) ($generated@@30 $generated@@191)) (=> (and (and (and ($generated@@33 $generated@@34 $generated@@189 ($generated@@35 $generated@@0 $generated)) ($generated@@26 $generated@@34 $generated@@189 ($generated@@35 $generated@@0 $generated) $generated@@186)) ($generated@@30 $generated@@189)) (and (= 1 $generated@@192) (= (ControlFlow 0 3) 2))) $generated@@193)))))
$generated@@194)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
