(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () Int)
(declare-fun $generated@@0 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@1 (Int) Int)
(declare-fun $generated@@2 (Real) Real)
(declare-fun $generated@@3 (T@U) (_ BitVec 67))
(declare-fun $generated@@4 (T@T T@U) T@U)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (T@U) (_ BitVec 32))
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (T@U) (_ BitVec 7))
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@11 (Int Int) Int)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@22 ((_ BitVec 67)) T@U)
(declare-fun $generated@@23 ((_ BitVec 32)) T@U)
(declare-fun $generated@@24 ((_ BitVec 7)) T@U)
(declare-fun $generated@@46 (Real) Int)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@56 ((_ BitVec 7)) Int)
(declare-fun $generated@@67 (Int) Real)
(declare-fun $generated@@72 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@76 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@80 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@13) 0) (= ($generated@@15 $generated@@16) 1)) (= ($generated@@15 $generated@@17) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@12 ($generated@@14 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@14 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@14 ($generated@@12 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@12 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@18 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@19 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@20 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@21 $generated@@30))
))) (= ($generated@@15 $generated@@5) 3)) (forall (($generated@@31 (_ BitVec 67)) ) (! (= ($generated@@3 ($generated@@22 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@22 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@22 ($generated@@3 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@3 $generated@@32))
))) (= ($generated@@15 $generated@@7) 4)) (forall (($generated@@33 (_ BitVec 32)) ) (! (= ($generated@@6 ($generated@@23 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@23 $generated@@33))
))) (forall (($generated@@34 T@U) ) (! (= ($generated@@23 ($generated@@6 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@6 $generated@@34))
))) (= ($generated@@15 $generated@@9) 5)) (forall (($generated@@35 (_ BitVec 7)) ) (! (= ($generated@@8 ($generated@@24 $generated@@35)) $generated@@35)
 :pattern ( ($generated@@24 $generated@@35))
))) (forall (($generated@@36 T@U) ) (! (= ($generated@@24 ($generated@@8 $generated@@36)) $generated@@36)
 :pattern ( ($generated@@8 $generated@@36))
))))
(assert  (=> (<= 1 $generated) (forall (($generated@@37 Int) ($generated@@38 Int) ($generated@@39 Real) ($generated@@40 Int) ($generated@@41 Real) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 Int) ) (!  (=> (or ($generated@@10 ($generated@@1 $generated@@37) ($generated@@1 $generated@@38) ($generated@@2 $generated@@39) ($generated@@1 $generated@@40) ($generated@@2 $generated@@41) ($generated@@3 ($generated@@4 $generated@@5 $generated@@42)) ($generated@@6 ($generated@@4 $generated@@7 $generated@@43)) ($generated@@8 ($generated@@4 $generated@@9 $generated@@44)) ($generated@@1 $generated@@45)) (and (< 1 $generated) (and (and (and (<= ($generated@@1 0) $generated@@38) (= ($generated@@11 $generated@@40 ($generated@@1 2)) ($generated@@1 0))) (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@41) (< $generated@@41 300.0))) (= 0 $generated@@45)))) (= ($generated@@0 ($generated@@1 $generated@@37) ($generated@@1 $generated@@38) ($generated@@2 $generated@@39) ($generated@@1 $generated@@40) ($generated@@2 $generated@@41) ($generated@@3 ($generated@@4 $generated@@5 $generated@@42)) ($generated@@6 ($generated@@4 $generated@@7 $generated@@43)) ($generated@@8 ($generated@@4 $generated@@9 $generated@@44)) ($generated@@1 $generated@@45)) ($generated@@12 ($generated@@4 $generated@@13 ($generated@@14 true)))))
 :weight 3
 :pattern ( ($generated@@0 ($generated@@1 $generated@@37) ($generated@@1 $generated@@38) ($generated@@2 $generated@@39) ($generated@@1 $generated@@40) ($generated@@2 $generated@@41) ($generated@@3 ($generated@@4 $generated@@5 $generated@@42)) ($generated@@6 ($generated@@4 $generated@@7 $generated@@43)) ($generated@@8 ($generated@@4 $generated@@9 $generated@@44)) ($generated@@1 $generated@@45)))
))))
(assert (forall (($generated@@47 Real) ) (! (= ($generated@@46 $generated@@47) (to_int $generated@@47))
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@48 Int) ) (! (= ($generated@@1 $generated@@48) $generated@@48)
 :pattern ( ($generated@@1 $generated@@48))
)))
(assert (forall (($generated@@49 Real) ) (! (= ($generated@@2 $generated@@49) $generated@@49)
 :pattern ( ($generated@@2 $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@4 $generated@@51 $generated@@50) $generated@@50)
 :pattern ( ($generated@@4 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 ($generated@@52 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@52 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@57 (_ BitVec 7)) ) (!  (and (and (<= 0 ($generated@@56 $generated@@57)) (< ($generated@@56 $generated@@57) 128)) (= ($generated@@56 $generated@@57) (bv2int $generated@@57)))
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert  (=> (<= 1 $generated) (forall (($generated@@58 Int) ($generated@@59 Int) ($generated@@60 Real) ($generated@@61 Int) ($generated@@62 Real) ($generated@@63 (_ BitVec 67)) ($generated@@64 (_ BitVec 32)) ($generated@@65 (_ BitVec 7)) ($generated@@66 Int) ) (!  (=> (or ($generated@@10 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66) (and (< 1 $generated) (and (and (and (<= ($generated@@1 0) $generated@@59) (= ($generated@@11 $generated@@61 ($generated@@1 2)) ($generated@@1 0))) (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@62) (< $generated@@62 300.0))) (= 0 $generated@@66)))) (= ($generated@@0 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66) ($generated@@12 ($generated@@4 $generated@@13 ($generated@@14 true)))))
 :pattern ( ($generated@@0 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@68 Int) ) (! (= ($generated@@67 $generated@@68) (to_real $generated@@68))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@69 Int) ) (! (= ($generated@@46 ($generated@@67 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@46 ($generated@@67 $generated@@69)))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@52 $generated@@71 ($generated@@53 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@53 $generated@@71 $generated@@70))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@83 T@T) ($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@72 $generated@@83 $generated@@84 $generated@@85 ($generated@@79 $generated@@83 $generated@@84 $generated@@85 $generated@@87 $generated@@88 $generated@@89 $generated@@86) $generated@@88 $generated@@89) $generated@@86)
 :weight 0
)) (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@95 $generated@@97) (= ($generated@@72 $generated@@90 $generated@@91 $generated@@92 ($generated@@79 $generated@@90 $generated@@91 $generated@@92 $generated@@94 $generated@@95 $generated@@96 $generated@@93) $generated@@97 $generated@@98) ($generated@@72 $generated@@90 $generated@@91 $generated@@92 $generated@@94 $generated@@97 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@105 $generated@@107) (= ($generated@@72 $generated@@99 $generated@@100 $generated@@101 ($generated@@79 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102) $generated@@106 $generated@@107) ($generated@@72 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@106 $generated@@107)))
 :weight 0
)))) (= ($generated@@15 $generated@@73) 6)) (= ($generated@@15 $generated@@74) 7)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@76 $generated@@108 $generated@@109 ($generated@@80 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@110) $generated@@112) $generated@@110)
 :weight 0
))) (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@76 $generated@@113 $generated@@114 ($generated@@80 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@76 $generated@@113 $generated@@114 $generated@@116 $generated@@118)))
 :weight 0
))) (= ($generated@@15 $generated@@77) 8)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (= ($generated@@15 ($generated@@78 $generated@@119 $generated@@120)) 9))) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@121 $generated@@122)) $generated@@121)
 :pattern ( ($generated@@78 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@123 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@78 $generated@@123 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 Bool) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@12 ($generated@@72 $generated@@73 $generated@@74 $generated@@13 ($generated@@75 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))  (=> (and (or (not (= $generated@@129 $generated@@125)) (not true)) ($generated@@12 ($generated@@52 $generated@@13 ($generated@@76 $generated@@74 $generated@@77 ($generated@@76 $generated@@73 ($generated@@78 $generated@@74 $generated@@77) $generated@@126 $generated@@129) $generated@@127)))) $generated@@128))
 :pattern ( ($generated@@72 $generated@@73 $generated@@74 $generated@@13 ($generated@@75 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 Int) ($generated@@132 Int) ) (! (= ($generated@@11 $generated@@131 $generated@@132) (mod $generated@@131 $generated@@132))
 :pattern ( ($generated@@11 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 Int) ) (! (= ($generated@@53 $generated@@16 ($generated@@18 ($generated@@1 $generated@@133))) ($generated@@4 $generated@@77 ($generated@@53 $generated@@16 ($generated@@18 $generated@@133))))
 :pattern ( ($generated@@53 $generated@@16 ($generated@@18 ($generated@@1 $generated@@133))))
)))
(assert (forall (($generated@@134 Real) ) (! (= ($generated@@53 $generated@@17 ($generated@@20 ($generated@@2 $generated@@134))) ($generated@@4 $generated@@77 ($generated@@53 $generated@@17 ($generated@@20 $generated@@134))))
 :pattern ( ($generated@@53 $generated@@17 ($generated@@20 ($generated@@2 $generated@@134))))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@53 $generated@@136 ($generated@@4 $generated@@136 $generated@@135)) ($generated@@4 $generated@@77 ($generated@@53 $generated@@136 $generated@@135)))
 :pattern ( ($generated@@53 $generated@@136 ($generated@@4 $generated@@136 $generated@@135)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@137 () Int)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 () Real)
(declare-fun $generated@@140 () Int)
(declare-fun $generated@@141 () Real)
(declare-fun $generated@@142 () (_ BitVec 7))
(declare-fun $generated@@143 () (_ BitVec 32))
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 () Real)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () Real)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 () Real)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 () Real)
(declare-fun $generated@@157 () Real)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 40) (let (($generated@@171  (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@10 $generated@@137 $generated@@138 $generated@@139 $generated@@140 $generated@@141 (concat #b000000000000000000000000000000000000000000000000000000000000 $generated@@142) $generated@@143 $generated@@142 $generated@@144) (or ($generated@@0 $generated@@137 $generated@@138 $generated@@139 $generated@@140 $generated@@141 (concat #b000000000000000000000000000000000000000000000000000000000000 $generated@@142) $generated@@143 $generated@@142 $generated@@144) ($generated@@12 ($generated@@4 $generated@@13 ($generated@@14 true))))))))
(let (($generated@@172  (=> (and (= $generated@@145 ($generated@@67 ($generated@@46 $generated@@145))) (= ($generated@@11 ($generated@@46 $generated@@145) ($generated@@1 2)) ($generated@@1 0))) (and (=> (= (ControlFlow 0 28) (- 0 31)) (= ($generated@@67 ($generated@@46 $generated@@145)) $generated@@145)) (=> (= ($generated@@67 ($generated@@46 $generated@@145)) $generated@@145) (and (=> (= (ControlFlow 0 28) (- 0 30)) (= ($generated@@11 ($generated@@46 $generated@@145) ($generated@@1 2)) ($generated@@1 0))) (=> (= ($generated@@11 ($generated@@46 $generated@@145) ($generated@@1 2)) ($generated@@1 0)) (=> (= $generated@@146 ($generated@@46 $generated@@145)) (and (=> (= (ControlFlow 0 28) (- 0 29)) (= ($generated@@11 $generated@@146 ($generated@@1 2)) ($generated@@1 0))) (=> (= ($generated@@11 $generated@@146 ($generated@@1 2)) ($generated@@1 0)) (=> (and (and (= $generated@@147 ($generated@@46 $generated@@145)) (= $generated@@140 $generated@@147)) (and (= $generated@@141 $generated@@145) (= (ControlFlow 0 28) 4))) $generated@@171)))))))))))
(let (($generated@@173  (=> (and (or (not (= $generated@@145 ($generated@@67 ($generated@@46 $generated@@145)))) (not true)) (= (ControlFlow 0 35) 28)) $generated@@172)))
(let (($generated@@174  (=> (= $generated@@145 ($generated@@67 ($generated@@46 $generated@@145))) (and (=> (= (ControlFlow 0 32) (- 0 34)) (= ($generated@@67 ($generated@@46 $generated@@145)) $generated@@145)) (=> (= ($generated@@67 ($generated@@46 $generated@@145)) $generated@@145) (and (=> (= (ControlFlow 0 32) (- 0 33)) (or (not (= ($generated@@1 2) 0)) (not true))) (=> (or (not (= ($generated@@1 2) 0)) (not true)) (=> (= (ControlFlow 0 32) 28) $generated@@172))))))))
(let (($generated@@175  (=> (= $generated@@148 ($generated@@46 $generated@@145)) (and (=> (= (ControlFlow 0 36) (- 0 38)) (and (<= ($generated@@2 (- 0.0 4.0)) ($generated@@67 $generated@@148)) (< ($generated@@67 $generated@@148) 300.0))) (=> (and (<= ($generated@@2 (- 0.0 4.0)) ($generated@@67 $generated@@148)) (< ($generated@@67 $generated@@148) 300.0)) (=> (= $generated@@149 ($generated@@67 ($generated@@46 $generated@@145))) (and (=> (= (ControlFlow 0 36) (- 0 37)) (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@149) (< $generated@@149 300.0))) (=> (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@149) (< $generated@@149 300.0)) (and (=> (= (ControlFlow 0 36) 32) $generated@@174) (=> (= (ControlFlow 0 36) 35) $generated@@173))))))))))
(let (($generated@@176  (=> (= $generated@@150 ($generated@@46 $generated@@145)) (and (=> (= (ControlFlow 0 22) (- 0 27)) (and (<= ($generated@@2 (- 0.0 4.0)) ($generated@@67 $generated@@150)) (< ($generated@@67 $generated@@150) 300.0))) (=> (and (<= ($generated@@2 (- 0.0 4.0)) ($generated@@67 $generated@@150)) (< ($generated@@67 $generated@@150) 300.0)) (=> (= $generated@@151 ($generated@@67 ($generated@@46 $generated@@145))) (and (=> (= (ControlFlow 0 22) (- 0 26)) (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@151) (< $generated@@151 300.0))) (=> (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@151) (< $generated@@151 300.0)) (=> (= $generated@@145 ($generated@@67 ($generated@@46 $generated@@145))) (and (=> (= (ControlFlow 0 22) (- 0 25)) (= ($generated@@67 ($generated@@46 $generated@@145)) $generated@@145)) (=> (= ($generated@@67 ($generated@@46 $generated@@145)) $generated@@145) (and (=> (= (ControlFlow 0 22) (- 0 24)) (= ($generated@@11 ($generated@@46 $generated@@145) ($generated@@1 2)) ($generated@@1 0))) (=> (= ($generated@@11 ($generated@@46 $generated@@145) ($generated@@1 2)) ($generated@@1 0)) (=> (= $generated@@152 ($generated@@46 $generated@@145)) (and (=> (= (ControlFlow 0 22) (- 0 23)) (= ($generated@@11 $generated@@152 ($generated@@1 2)) ($generated@@1 0))) (=> (= ($generated@@11 $generated@@152 ($generated@@1 2)) ($generated@@1 0)) (=> (and (and (= $generated@@153 ($generated@@46 $generated@@145)) (= $generated@@140 $generated@@153)) (and (= $generated@@141 $generated@@145) (= (ControlFlow 0 22) 4))) $generated@@171)))))))))))))))))
(let (($generated@@177  (and (=> (= (ControlFlow 0 18) (- 0 21)) (= ($generated@@67 ($generated@@46 $generated@@145)) $generated@@145)) (=> (= ($generated@@67 ($generated@@46 $generated@@145)) $generated@@145) (and (=> (= (ControlFlow 0 18) (- 0 20)) (= ($generated@@11 ($generated@@46 $generated@@145) ($generated@@1 2)) ($generated@@1 0))) (=> (= ($generated@@11 ($generated@@46 $generated@@145) ($generated@@1 2)) ($generated@@1 0)) (=> (= $generated@@154 ($generated@@46 $generated@@145)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (= ($generated@@11 $generated@@154 ($generated@@1 2)) ($generated@@1 0))) (=> (= ($generated@@11 $generated@@154 ($generated@@1 2)) ($generated@@1 0)) (=> (and (and (= $generated@@155 ($generated@@46 $generated@@145)) (= $generated@@140 $generated@@155)) (and (= $generated@@141 $generated@@145) (= (ControlFlow 0 18) 4))) $generated@@171))))))))))
(let (($generated@@178  (and (=> (= (ControlFlow 0 15) (- 0 17)) (and (<= ($generated@@2 (- 0.0 4.0)) ($generated@@67 ($generated@@56 $generated@@142))) (< ($generated@@67 ($generated@@56 $generated@@142)) 300.0))) (=> (and (<= ($generated@@2 (- 0.0 4.0)) ($generated@@67 ($generated@@56 $generated@@142))) (< ($generated@@67 ($generated@@56 $generated@@142)) 300.0)) (=> (= $generated@@156 ($generated@@67 ($generated@@56 $generated@@142))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@156) (< $generated@@156 300.0))) (=> (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@156) (< $generated@@156 300.0)) (=> (and (and (= $generated@@157 ($generated@@67 ($generated@@56 $generated@@142))) (= $generated@@140 $generated@@158)) (and (= $generated@@141 $generated@@157) (= (ControlFlow 0 15) 4))) $generated@@171))))))))
(let (($generated@@179  (and (=> (= (ControlFlow 0 11) (- 0 14)) (or (not (= ($generated@@1 2) 0)) (not true))) (=> (or (not (= ($generated@@1 2) 0)) (not true)) (=> (= ($generated@@11 ($generated@@56 $generated@@142) ($generated@@1 2)) ($generated@@1 0)) (and (=> (= (ControlFlow 0 11) (- 0 13)) (= ($generated@@11 ($generated@@56 $generated@@142) ($generated@@1 2)) ($generated@@1 0))) (=> (= ($generated@@11 ($generated@@56 $generated@@142) ($generated@@1 2)) ($generated@@1 0)) (=> (= $generated@@159 ($generated@@56 $generated@@142)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (= ($generated@@11 $generated@@159 ($generated@@1 2)) ($generated@@1 0))) (=> (= ($generated@@11 $generated@@159 ($generated@@1 2)) ($generated@@1 0)) (=> (and (and (= $generated@@160 ($generated@@56 $generated@@142)) (= $generated@@140 $generated@@160)) (and (= $generated@@141 $generated@@145) (= (ControlFlow 0 11) 4))) $generated@@171)))))))))))
(let (($generated@@180  (and (=> (= (ControlFlow 0 8) (- 0 10)) (= ($generated@@11 ($generated@@56 $generated@@142) ($generated@@1 2)) ($generated@@1 0))) (=> (= ($generated@@11 ($generated@@56 $generated@@142) ($generated@@1 2)) ($generated@@1 0)) (=> (= $generated@@161 ($generated@@56 $generated@@142)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (= ($generated@@11 $generated@@161 ($generated@@1 2)) ($generated@@1 0))) (=> (= ($generated@@11 $generated@@161 ($generated@@1 2)) ($generated@@1 0)) (=> (and (and (= $generated@@162 ($generated@@56 $generated@@142)) (= $generated@@140 $generated@@162)) (and (= $generated@@141 $generated@@145) (= (ControlFlow 0 8) 4))) $generated@@171))))))))
(let (($generated@@181  (and (=> (= (ControlFlow 0 5) (- 0 7)) (= ($generated@@11 0 ($generated@@1 2)) ($generated@@1 0))) (=> (= ($generated@@11 0 ($generated@@1 2)) ($generated@@1 0)) (=> (= $generated@@163 0) (and (=> (= (ControlFlow 0 5) (- 0 6)) (= ($generated@@11 $generated@@163 ($generated@@1 2)) ($generated@@1 0))) (=> (= ($generated@@11 $generated@@163 ($generated@@1 2)) ($generated@@1 0)) (=> (and (and (= $generated@@164 0) (= $generated@@140 $generated@@164)) (and (= $generated@@141 $generated@@145) (= (ControlFlow 0 5) 4))) $generated@@171))))))))
(let (($generated@@182  (=> (and (and (and (and (and (and (and (not ($generated@@12 ($generated@@4 $generated@@13 ($generated@@14 true)))) (not ($generated@@12 ($generated@@4 $generated@@13 ($generated@@14 true))))) (or (not (= ($generated@@11 ($generated@@56 $generated@@142) ($generated@@1 2)) ($generated@@1 0))) (not true))) (not ($generated@@12 ($generated@@4 $generated@@13 ($generated@@14 true))))) (not ($generated@@12 ($generated@@4 $generated@@13 ($generated@@14 true))))) (or (not (= $generated@@145 ($generated@@67 ($generated@@46 $generated@@145)))) (not true))) (not (and (= $generated@@145 ($generated@@67 ($generated@@46 $generated@@145))) (= ($generated@@11 ($generated@@46 $generated@@145) ($generated@@1 2)) ($generated@@1 0))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@183  (=> (= $generated@@165 ($generated@@75 $generated@@166 $generated@@167 $generated@@168 false)) (and (and (and (and (and (and (and (=> (= (ControlFlow 0 39) 5) $generated@@181) (=> (= (ControlFlow 0 39) 8) $generated@@180)) (=> (= (ControlFlow 0 39) 11) $generated@@179)) (=> (= (ControlFlow 0 39) 15) $generated@@178)) (=> (= (ControlFlow 0 39) 18) $generated@@177)) (=> (= (ControlFlow 0 39) 22) $generated@@176)) (=> (= (ControlFlow 0 39) 36) $generated@@175)) (=> (= (ControlFlow 0 39) 2) $generated@@182)))))
(let (($generated@@184  (=> (and (and ($generated@@169 $generated@@167) ($generated@@170 $generated@@167)) (and (<= ($generated@@1 0) $generated@@138) (= ($generated@@11 $generated@@158 ($generated@@1 2)) ($generated@@1 0)))) (=> (and (and (and (<= ($generated@@2 (- 0.0 4.0)) $generated@@145) (< $generated@@145 300.0)) (= 0 $generated@@144)) (and (= 2 $generated) (= (ControlFlow 0 40) 39))) $generated@@183))))
$generated@@184)))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 8) (- 10))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 18) (- 21))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 18) (- 20))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 22) (- 24))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
