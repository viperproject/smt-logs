(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@44 (T@U) Int)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T T@T) T@T)
(declare-fun $generated@@50 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@77 (Int) Int)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@120 (T@U Int) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@159 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated@@2) 0))
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and (or (not (= $generated@@30 $generated@@26)) (not true)) (= ($generated@@27 $generated@@30) ($generated@@25 $generated@@29))) ($generated@@28 $generated@@8 ($generated@@12 ($generated@@24 $generated@@30)) $generated))
 :pattern ( ($generated@@24 $generated@@30) ($generated@@25 $generated@@29))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@31 ($generated@@32 $generated@@33 $generated@@34) $generated@@35)  (or (= $generated@@34 $generated@@35) ($generated@@31 $generated@@33 $generated@@35)))
 :pattern ( ($generated@@31 ($generated@@32 $generated@@33 $generated@@34) $generated@@35))
)))
(assert (= ($generated@@6 $generated@@37) 3))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@40 ($generated@@38 $generated@@39) $generated@@41) ($generated@@36 $generated@@37 $generated@@40 ($generated@@25 $generated@@39) $generated@@41))
 :pattern ( ($generated@@36 $generated@@37 $generated@@40 ($generated@@38 $generated@@39) $generated@@41))
 :pattern ( ($generated@@36 $generated@@37 $generated@@40 ($generated@@25 $generated@@39) $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ) (!  (not ($generated@@31 $generated@@42 $generated@@43))
 :pattern ( ($generated@@31 $generated@@42 $generated@@43))
)))
(assert (= ($generated@@44 $generated@@42) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@46 $generated@@53 $generated@@54 ($generated@@50 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@57) $generated@@55)
 :weight 0
)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (or (= $generated@@62 $generated@@63) (= ($generated@@46 $generated@@58 $generated@@59 ($generated@@50 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@63) ($generated@@46 $generated@@58 $generated@@59 $generated@@61 $generated@@63)))
 :weight 0
))) (= ($generated@@6 $generated@@47) 4)) (= ($generated@@6 $generated@@48) 5)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (= ($generated@@6 ($generated@@49 $generated@@64 $generated@@65)) 6))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@51 ($generated@@49 $generated@@66 $generated@@67)) $generated@@66)
 :pattern ( ($generated@@49 $generated@@66 $generated@@67))
))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@52 ($generated@@49 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@49 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@71 ($generated@@25 $generated@@70) $generated@@72)  (or (= $generated@@71 $generated@@26) ($generated@@11 ($generated@@45 $generated@@7 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@72 $generated@@71) $generated@@2)))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@71 ($generated@@25 $generated@@70) $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@73 $generated@@74 $generated@@75) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@11 ($generated@@45 $generated@@7 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@74 $generated@@76) $generated@@2))) ($generated@@11 ($generated@@45 $generated@@7 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@75 $generated@@76) $generated@@2))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@75 $generated@@76) $generated@@2))
)))
 :pattern ( ($generated@@73 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@77 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@81 $generated@@80))
)))
(assert (= ($generated@@6 $generated@@82) 7))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and ($generated@@28 $generated@@82 $generated@@85 ($generated@@83 $generated@@87)) ($generated@@84 $generated@@86 $generated@@87)) ($generated@@28 $generated@@82 ($generated@@32 $generated@@85 $generated@@86) ($generated@@83 $generated@@87)))
 :pattern ( ($generated@@28 $generated@@82 ($generated@@32 $generated@@85 $generated@@86) ($generated@@83 $generated@@87)))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 Int) ) (!  (=> (and (and (and ($generated@@89 $generated@@92) (and (or (not (= $generated@@93 $generated@@26)) (not true)) (= ($generated@@27 $generated@@93) ($generated@@25 $generated@@91)))) (and (<= 0 $generated@@94) (< $generated@@94 ($generated@@24 $generated@@93)))) ($generated@@11 ($generated@@45 $generated@@7 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@92 $generated@@93) $generated@@2)))) ($generated@@90 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@92 $generated@@93) ($generated@@88 $generated@@94)) $generated@@91 $generated@@92))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@92 $generated@@93) ($generated@@88 $generated@@94)) ($generated@@25 $generated@@91))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 ($generated@@45 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@45 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@44 ($generated@@32 $generated@@98 $generated@@99)) (+ 1 ($generated@@44 $generated@@98)))
 :pattern ( ($generated@@32 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@28 $generated@@37 $generated@@101 ($generated@@38 $generated@@100))  (and ($generated@@28 $generated@@37 $generated@@101 ($generated@@25 $generated@@100)) (or (not (= $generated@@101 $generated@@26)) (not true))))
 :pattern ( ($generated@@28 $generated@@37 $generated@@101 ($generated@@38 $generated@@100)))
 :pattern ( ($generated@@28 $generated@@37 $generated@@101 ($generated@@25 $generated@@100)))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@90 ($generated@@95 $generated@@105 $generated@@102) $generated@@103 $generated@@104) ($generated@@36 $generated@@105 $generated@@102 $generated@@103 $generated@@104))
 :pattern ( ($generated@@90 ($generated@@95 $generated@@105 $generated@@102) $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> ($generated@@73 $generated@@106 $generated@@107) (=> ($generated@@90 $generated@@108 $generated@@109 $generated@@106) ($generated@@90 $generated@@108 $generated@@109 $generated@@107)))
 :pattern ( ($generated@@73 $generated@@106 $generated@@107) ($generated@@90 $generated@@108 $generated@@109 $generated@@106))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (!  (=> ($generated@@73 $generated@@110 $generated@@111) (=> ($generated@@36 $generated@@114 $generated@@112 $generated@@113 $generated@@110) ($generated@@36 $generated@@114 $generated@@112 $generated@@113 $generated@@111)))
 :pattern ( ($generated@@73 $generated@@110 $generated@@111) ($generated@@36 $generated@@114 $generated@@112 $generated@@113 $generated@@110))
)))
(assert (forall (($generated@@116 T@U) ) (!  (and (= ($generated@@23 ($generated@@25 $generated@@116)) $generated@@3) (= ($generated@@115 ($generated@@25 $generated@@116)) $generated@@5))
 :pattern ( ($generated@@25 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (!  (and (= ($generated@@23 ($generated@@38 $generated@@117)) $generated@@4) (= ($generated@@115 ($generated@@38 $generated@@117)) $generated@@5))
 :pattern ( ($generated@@38 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@28 $generated@@37 $generated@@119 ($generated@@25 $generated@@118))  (or (= $generated@@119 $generated@@26) (= ($generated@@27 $generated@@119) ($generated@@25 $generated@@118))))
 :pattern ( ($generated@@28 $generated@@37 $generated@@119 ($generated@@25 $generated@@118)))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 Int) ($generated@@123 T@U) ) (!  (and (=> (= $generated@@122 ($generated@@44 $generated@@121)) (= ($generated@@120 ($generated@@32 $generated@@121 $generated@@123) $generated@@122) $generated@@123)) (=> (or (not (= $generated@@122 ($generated@@44 $generated@@121))) (not true)) (= ($generated@@120 ($generated@@32 $generated@@121 $generated@@123) $generated@@122) ($generated@@120 $generated@@121 $generated@@122))))
 :pattern ( ($generated@@120 ($generated@@32 $generated@@121 $generated@@123) $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@31 $generated@@124 $generated@@125) (exists (($generated@@126 Int) ) (!  (and (and (<= 0 $generated@@126) (< $generated@@126 ($generated@@44 $generated@@124))) (= ($generated@@120 $generated@@124 $generated@@126) $generated@@125))
 :pattern ( ($generated@@120 $generated@@124 $generated@@126))
)))
 :pattern ( ($generated@@31 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (or (not (= $generated@@127 $generated@@129)) (not true)) (=> (and ($generated@@73 $generated@@127 $generated@@128) ($generated@@73 $generated@@128 $generated@@129)) ($generated@@73 $generated@@127 $generated@@129)))
 :pattern ( ($generated@@73 $generated@@127 $generated@@128) ($generated@@73 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@84 $generated@@130 $generated) (and (= ($generated@@95 $generated@@8 ($generated@@45 $generated@@8 $generated@@130)) $generated@@130) ($generated@@28 $generated@@8 ($generated@@45 $generated@@8 $generated@@130) $generated)))
 :pattern ( ($generated@@84 $generated@@130 $generated))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@84 ($generated@@95 $generated@@133 $generated@@131) $generated@@132) ($generated@@28 $generated@@133 $generated@@131 $generated@@132))
 :pattern ( ($generated@@84 ($generated@@95 $generated@@133 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (! (<= 0 ($generated@@24 $generated@@134))
 :pattern ( ($generated@@24 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ) (! (<= 0 ($generated@@44 $generated@@135))
 :pattern ( ($generated@@44 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@36 $generated@@82 $generated@@136 ($generated@@83 $generated@@137) $generated@@138) (forall (($generated@@139 Int) ) (!  (=> (and (<= 0 $generated@@139) (< $generated@@139 ($generated@@44 $generated@@136))) ($generated@@90 ($generated@@120 $generated@@136 $generated@@139) $generated@@137 $generated@@138))
 :pattern ( ($generated@@120 $generated@@136 $generated@@139))
)))
 :pattern ( ($generated@@36 $generated@@82 $generated@@136 ($generated@@83 $generated@@137) $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@140 ($generated@@83 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@83 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@23 ($generated@@83 $generated@@142)) $generated@@1)
 :pattern ( ($generated@@83 $generated@@142))
)))
(assert (forall (($generated@@143 Int) ) (! (= ($generated@@22 ($generated@@88 $generated@@143)) 1)
 :pattern ( ($generated@@88 $generated@@143))
)))
(assert (forall (($generated@@145 Int) ) (! (= ($generated@@144 ($generated@@88 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@88 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@25 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@25 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@38 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@38 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@45 $generated@@151 ($generated@@95 $generated@@151 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@95 $generated@@151 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and ($generated@@89 $generated@@153) (and (or (not (= $generated@@154 $generated@@26)) (not true)) (= ($generated@@27 $generated@@154) ($generated@@25 $generated@@152)))) ($generated@@11 ($generated@@45 $generated@@7 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@153 $generated@@154) $generated@@2)))) ($generated@@36 $generated@@8 ($generated@@12 ($generated@@24 $generated@@154)) $generated $generated@@153))
 :pattern ( ($generated@@24 $generated@@154) ($generated@@45 $generated@@7 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@153 $generated@@154) $generated@@2)) ($generated@@25 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Int) ) (!  (=> (and (and ($generated@@89 $generated@@156) (and (or (not (= $generated@@157 $generated@@26)) (not true)) (= ($generated@@27 $generated@@157) ($generated@@25 $generated@@155)))) (and (<= 0 $generated@@158) (< $generated@@158 ($generated@@24 $generated@@157)))) ($generated@@84 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@156 $generated@@157) ($generated@@88 $generated@@158)) $generated@@155))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@156 $generated@@157) ($generated@@88 $generated@@158)) ($generated@@25 $generated@@155))
)))
(assert  (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@159 $generated@@162 $generated@@163 $generated@@164 ($generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@167 $generated@@168) $generated@@165)
 :weight 0
)) (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@159 $generated@@169 $generated@@170 $generated@@171 ($generated@@161 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@159 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@159 $generated@@178 $generated@@179 $generated@@180 ($generated@@161 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@159 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@11 ($generated@@159 $generated@@37 $generated@@47 $generated@@7 ($generated@@160 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@11 ($generated@@45 $generated@@7 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@188 $generated@@191) $generated@@189)))) $generated@@190))
 :pattern ( ($generated@@159 $generated@@37 $generated@@47 $generated@@7 ($generated@@160 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (and (= ($generated@@193 ($generated@@32 $generated@@195 $generated@@196)) $generated@@195) (= ($generated@@194 ($generated@@32 $generated@@195 $generated@@196)) $generated@@196))
 :pattern ( ($generated@@32 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@84 $generated@@197 ($generated@@83 $generated@@198)) (and (= ($generated@@95 $generated@@82 ($generated@@45 $generated@@82 $generated@@197)) $generated@@197) ($generated@@28 $generated@@82 ($generated@@45 $generated@@82 $generated@@197) ($generated@@83 $generated@@198))))
 :pattern ( ($generated@@84 $generated@@197 ($generated@@83 $generated@@198)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@84 $generated@@200 ($generated@@25 $generated@@199)) (and (= ($generated@@95 $generated@@37 ($generated@@45 $generated@@37 $generated@@200)) $generated@@200) ($generated@@28 $generated@@37 ($generated@@45 $generated@@37 $generated@@200) ($generated@@25 $generated@@199))))
 :pattern ( ($generated@@84 $generated@@200 ($generated@@25 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> ($generated@@84 $generated@@202 ($generated@@38 $generated@@201)) (and (= ($generated@@95 $generated@@37 ($generated@@45 $generated@@37 $generated@@202)) $generated@@202) ($generated@@28 $generated@@37 ($generated@@45 $generated@@37 $generated@@202) ($generated@@38 $generated@@201))))
 :pattern ( ($generated@@84 $generated@@202 ($generated@@38 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> ($generated@@89 ($generated@@50 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@203 $generated@@204 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@203 $generated@@204) $generated@@205 $generated@@206))) ($generated@@73 $generated@@203 ($generated@@50 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@203 $generated@@204 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@203 $generated@@204) $generated@@205 $generated@@206))))
 :pattern ( ($generated@@50 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@203 $generated@@204 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@203 $generated@@204) $generated@@205 $generated@@206)))
)))
(assert (forall (($generated@@207 Int) ) (! (= ($generated@@95 $generated@@8 ($generated@@12 ($generated@@77 $generated@@207))) ($generated@@79 $generated@@48 ($generated@@95 $generated@@8 ($generated@@12 $generated@@207))))
 :pattern ( ($generated@@95 $generated@@8 ($generated@@12 ($generated@@77 $generated@@207))))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@T) ) (! (= ($generated@@95 $generated@@209 ($generated@@79 $generated@@209 $generated@@208)) ($generated@@79 $generated@@48 ($generated@@95 $generated@@209 $generated@@208)))
 :pattern ( ($generated@@95 $generated@@209 ($generated@@79 $generated@@209 $generated@@208)))
)))
(assert (forall (($generated@@210 T@U) ) (!  (=> (= ($generated@@44 $generated@@210) 0) (= $generated@@210 $generated@@42))
 :pattern ( ($generated@@44 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (! ($generated@@36 $generated@@8 $generated@@212 $generated $generated@@211)
 :pattern ( ($generated@@36 $generated@@8 $generated@@212 $generated $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@28 $generated@@82 $generated@@213 ($generated@@83 $generated@@214)) (forall (($generated@@215 Int) ) (!  (=> (and (<= 0 $generated@@215) (< $generated@@215 ($generated@@44 $generated@@213))) ($generated@@84 ($generated@@120 $generated@@213 $generated@@215) $generated@@214))
 :pattern ( ($generated@@120 $generated@@213 $generated@@215))
)))
 :pattern ( ($generated@@28 $generated@@82 $generated@@213 ($generated@@83 $generated@@214)))
)))
(assert (forall (($generated@@216 T@U) ) (! ($generated@@28 $generated@@8 $generated@@216 $generated)
 :pattern ( ($generated@@28 $generated@@8 $generated@@216 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () Int)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () Int)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 () Int)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () Int)
(declare-fun $generated@@227 () Int)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@234  (=> (and (and ($generated@@31 $generated@@217 ($generated@@95 $generated@@8 ($generated@@12 $generated@@218))) (< $generated@@218 4)) (and (<= ($generated@@77 10) $generated@@219) (< $generated@@219 (+ 10 $generated@@218)))) (and (=> (= (ControlFlow 0 14) (- 0 17)) (or (not (= $generated@@220 $generated@@26)) (not true))) (=> (or (not (= $generated@@220 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 14) (- 0 16)) (and (<= 0 $generated@@219) (< $generated@@219 ($generated@@24 $generated@@220)))) (and (=> (= (ControlFlow 0 14) (- 0 15)) ($generated@@11 ($generated@@159 $generated@@37 $generated@@47 $generated@@7 $generated@@221 $generated@@220 ($generated@@88 $generated@@219)))) (=> ($generated@@11 ($generated@@159 $generated@@37 $generated@@47 $generated@@7 $generated@@221 $generated@@220 ($generated@@88 $generated@@219))) (=> (and (and (and ($generated@@31 $generated@@217 ($generated@@95 $generated@@8 ($generated@@12 $generated@@222))) (< $generated@@222 4)) (and (<= ($generated@@77 10) $generated@@223) (< $generated@@223 (+ 10 $generated@@222)))) (and (not (and (= $generated@@218 $generated@@222) (= $generated@@219 $generated@@223))) (= (ControlFlow 0 14) (- 0 13)))) (or (or (or (not (= $generated@@220 $generated@@220)) (not true)) (or (not (= ($generated@@88 $generated@@219) ($generated@@88 $generated@@223))) (not true))) (= (+ 6000 $generated@@218) (+ 6000 $generated@@222))))))))))))
(let (($generated@@235  (=> (and (< $generated@@219 ($generated@@77 10)) (= (ControlFlow 0 20) 14)) $generated@@234)))
(let (($generated@@236  (=> (and (<= ($generated@@77 10) $generated@@219) (= (ControlFlow 0 19) 14)) $generated@@234)))
(let (($generated@@237  (=> (and ($generated@@31 $generated@@217 ($generated@@95 $generated@@8 ($generated@@12 $generated@@218))) (< $generated@@218 4)) (and (=> (= (ControlFlow 0 21) 19) $generated@@236) (=> (= (ControlFlow 0 21) 20) $generated@@235)))))
(let (($generated@@238  (=> (and (not (and ($generated@@31 $generated@@217 ($generated@@95 $generated@@8 ($generated@@12 $generated@@218))) (< $generated@@218 4))) (= (ControlFlow 0 18) 14)) $generated@@234)))
(let (($generated@@239  (=> (not ($generated@@31 $generated@@217 ($generated@@95 $generated@@8 ($generated@@12 $generated@@218)))) (and (=> (= (ControlFlow 0 23) 21) $generated@@237) (=> (= (ControlFlow 0 23) 18) $generated@@238)))))
(let (($generated@@240  (=> ($generated@@31 $generated@@217 ($generated@@95 $generated@@8 ($generated@@12 $generated@@218))) (and (=> (= (ControlFlow 0 22) 21) $generated@@237) (=> (= (ControlFlow 0 22) 18) $generated@@238)))))
(let (($generated@@241  (and (=> (= (ControlFlow 0 24) 22) $generated@@240) (=> (= (ControlFlow 0 24) 23) $generated@@239))))
(let (($generated@@242  (=> (and ($generated@@31 $generated@@217 ($generated@@95 $generated@@8 ($generated@@12 $generated@@224))) (and (<= ($generated@@77 10) $generated@@225) (< $generated@@225 (+ 10 $generated@@224)))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (not (= $generated@@220 $generated@@26)) (not true))) (=> (or (not (= $generated@@220 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= 0 $generated@@225) (< $generated@@225 ($generated@@24 $generated@@220)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@11 ($generated@@159 $generated@@37 $generated@@47 $generated@@7 $generated@@221 $generated@@220 ($generated@@88 $generated@@225)))) (=> ($generated@@11 ($generated@@159 $generated@@37 $generated@@47 $generated@@7 $generated@@221 $generated@@220 ($generated@@88 $generated@@225))) (=> (and (and ($generated@@31 $generated@@217 ($generated@@95 $generated@@8 ($generated@@12 $generated@@226))) (and (<= ($generated@@77 10) $generated@@227) (< $generated@@227 (+ 10 $generated@@226)))) (and (not (and (= $generated@@224 $generated@@226) (= $generated@@225 $generated@@227))) (= (ControlFlow 0 4) (- 0 3)))) (or (or (or (not (= $generated@@220 $generated@@220)) (not true)) (or (not (= ($generated@@88 $generated@@225) ($generated@@88 $generated@@227))) (not true))) (= (+ 6000 $generated@@224) (+ 6000 $generated@@226))))))))))))
(let (($generated@@243  (=> (and (< $generated@@225 ($generated@@77 10)) (= (ControlFlow 0 10) 4)) $generated@@242)))
(let (($generated@@244  (=> (and (<= ($generated@@77 10) $generated@@225) (= (ControlFlow 0 9) 4)) $generated@@242)))
(let (($generated@@245  (=> ($generated@@31 $generated@@217 ($generated@@95 $generated@@8 ($generated@@12 $generated@@224))) (and (=> (= (ControlFlow 0 11) 9) $generated@@244) (=> (= (ControlFlow 0 11) 10) $generated@@243)))))
(let (($generated@@246  (=> (and (not ($generated@@31 $generated@@217 ($generated@@95 $generated@@8 ($generated@@12 $generated@@224)))) (= (ControlFlow 0 8) 4)) $generated@@242)))
(let (($generated@@247  (and (=> (= (ControlFlow 0 12) 11) $generated@@245) (=> (= (ControlFlow 0 12) 8) $generated@@246))))
(let (($generated@@248 true))
(let (($generated@@249 true))
(let (($generated@@250  (=> (= $generated@@221 ($generated@@160 $generated@@26 $generated@@228 $generated@@2 false)) (and (=> (= (ControlFlow 0 25) (- 0 26)) (<= 0 ($generated@@77 180))) (=> (<= 0 ($generated@@77 180)) (=> (and (and (and (or (not (= $generated@@220 $generated@@26)) (not true)) ($generated@@28 $generated@@37 $generated@@220 ($generated@@25 $generated))) (and (not ($generated@@11 ($generated@@45 $generated@@7 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@228 $generated@@220) $generated@@2)))) (= ($generated@@24 $generated@@220) ($generated@@77 180)))) (and (and (= $generated@@229 ($generated@@50 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@228 $generated@@220 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@228 $generated@@220) $generated@@2 ($generated@@95 $generated@@7 ($generated@@10 true))))) ($generated@@89 $generated@@229)) (and ($generated@@230 $generated@@229) (= $generated@@217 ($generated@@79 $generated@@82 ($generated@@32 ($generated@@32 ($generated@@32 ($generated@@32 ($generated@@32 ($generated@@32 ($generated@@32 ($generated@@32 ($generated@@32 $generated@@42 ($generated@@95 $generated@@8 ($generated@@12 ($generated@@77 0)))) ($generated@@95 $generated@@8 ($generated@@12 ($generated@@77 0)))) ($generated@@95 $generated@@8 ($generated@@12 ($generated@@77 0)))) ($generated@@95 $generated@@8 ($generated@@12 ($generated@@77 2)))) ($generated@@95 $generated@@8 ($generated@@12 ($generated@@77 2)))) ($generated@@95 $generated@@8 ($generated@@12 ($generated@@77 2)))) ($generated@@95 $generated@@8 ($generated@@12 ($generated@@77 5)))) ($generated@@95 $generated@@8 ($generated@@12 ($generated@@77 5)))) ($generated@@95 $generated@@8 ($generated@@12 ($generated@@77 5))))))))) (and (and (and (=> (= (ControlFlow 0 25) 24) $generated@@241) (=> (= (ControlFlow 0 25) 1) $generated@@249)) (=> (= (ControlFlow 0 25) 12) $generated@@247)) (=> (= (ControlFlow 0 25) 2) $generated@@248))))))))
(let (($generated@@251  (=> (and ($generated@@89 $generated@@228) ($generated@@230 $generated@@228)) (=> (and (and ($generated@@28 $generated@@37 $generated@@231 ($generated@@38 $generated)) ($generated@@36 $generated@@37 $generated@@231 ($generated@@38 $generated) $generated@@228)) true) (=> (and (and (and ($generated@@28 $generated@@82 $generated@@232 ($generated@@83 $generated)) ($generated@@36 $generated@@82 $generated@@232 ($generated@@83 $generated) $generated@@228)) true) (and (= 0 $generated@@233) (= (ControlFlow 0 27) 25))) $generated@@250)))))
$generated@@251)))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
