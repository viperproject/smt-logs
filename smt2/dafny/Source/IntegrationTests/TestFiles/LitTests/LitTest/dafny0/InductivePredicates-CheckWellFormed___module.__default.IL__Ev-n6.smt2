(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U T@U) Bool)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (Int) T@U)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@T T@U T@U) Bool)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@U) Int)
(declare-fun $generated@@61 (Int) T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@122 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@123 (T@T T@T) T@T)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@176 (Int Int) Int)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@28 $generated@@29) (=> ($generated@@23 $generated@@26 $generated@@28 $generated@@27) ($generated@@23 $generated@@26 $generated@@29 $generated@@27)))
 :pattern ( ($generated@@23 $generated@@26 $generated@@28 $generated@@27) ($generated@@24 $generated@@28 $generated@@30) ($generated@@24 $generated@@29 $generated@@30))
))))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@32 $generated@@33)) ($generated@@25 $generated@@31 $generated@@33))
 :pattern ( ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@32 $generated@@33))
 :pattern ( ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@31 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! ($generated@@34 $generated@@8 $generated@@36 $generated@@35 $generated@@37)
 :pattern ( ($generated@@34 $generated@@8 $generated@@36 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 Int) ($generated@@43 Int) ) (!  (=> (and (and (<= 0 $generated@@42) (<= 0 $generated@@43)) (<= (+ $generated@@42 $generated@@43) ($generated@@40 $generated@@41))) (= ($generated@@38 ($generated@@38 $generated@@41 ($generated@@39 $generated@@42)) ($generated@@39 $generated@@43)) ($generated@@38 $generated@@41 ($generated@@39 (+ $generated@@42 $generated@@43)))))
 :pattern ( ($generated@@38 ($generated@@38 $generated@@41 ($generated@@39 $generated@@42)) ($generated@@39 $generated@@43)))
)))
(assert (= ($generated@@44 $generated@@45) $generated@@3))
(assert (= ($generated@@6 $generated@@47) 3))
(assert ($generated@@46 $generated@@47 $generated@@45 $generated@@48))
(assert (forall (($generated@@50 Int) ) (! (= ($generated@@49 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@54 $generated@@55) (= ($generated@@44 $generated@@55) $generated@@2))
 :pattern ( ($generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@56 $generated@@57) (= ($generated@@44 $generated@@57) $generated@@3))
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@59 $generated@@63 $generated@@64) (and (< 2 $generated@@22) ($generated@@46 $generated@@47 $generated@@64 $generated@@48))) (and (and (=> (< 0 ($generated@@40 $generated@@63)) (=> (not (and ($generated@@54 $generated@@64) (= ($generated@@60 $generated@@64) ($generated@@49 0)))) (=> ($generated@@54 $generated@@64) (=> (<= ($generated@@49 2) ($generated@@60 $generated@@64)) ($generated@@59 ($generated@@38 $generated@@63 ($generated@@39 1)) ($generated@@61 (- ($generated@@60 $generated@@64) 2))))))) (=> (=> (< 0 ($generated@@40 $generated@@63)) (or (and ($generated@@54 $generated@@64) (= ($generated@@60 $generated@@64) ($generated@@49 0))) (and (and ($generated@@54 $generated@@64) (<= ($generated@@49 2) ($generated@@60 $generated@@64))) ($generated@@23 $generated@@62 ($generated@@38 $generated@@63 ($generated@@39 1)) ($generated@@61 (- ($generated@@60 $generated@@64) 2)))))) (=> (= ($generated@@49 0) ($generated@@40 $generated@@63)) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@24 $generated@@65 $generated@@63) ($generated@@59 $generated@@65 $generated@@64))
 :pattern ( ($generated@@23 $generated@@62 $generated@@65 $generated@@64))
))))) (= ($generated@@23 ($generated@@58 $generated@@62) $generated@@63 $generated@@64)  (and (=> (< 0 ($generated@@40 $generated@@63)) (or (and ($generated@@54 $generated@@64) (= ($generated@@60 $generated@@64) ($generated@@49 0))) (and (and ($generated@@54 $generated@@64) (<= ($generated@@49 2) ($generated@@60 $generated@@64))) ($generated@@23 $generated@@62 ($generated@@38 $generated@@63 ($generated@@39 1)) ($generated@@61 (- ($generated@@60 $generated@@64) 2)))))) (=> (= ($generated@@49 0) ($generated@@40 $generated@@63)) (exists (($generated@@66 T@U) ) (!  (and ($generated@@24 $generated@@66 $generated@@63) ($generated@@23 $generated@@62 $generated@@66 $generated@@64))
 :pattern ( ($generated@@23 $generated@@62 $generated@@66 $generated@@64))
)))))))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@62) $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 ($generated@@67 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@67 $generated@@70 $generated@@69))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and ($generated@@46 $generated@@47 $generated@@73 $generated@@48) (exists (($generated@@74 T@U) ) (! ($generated@@23 ($generated@@58 $generated@@72) $generated@@74 $generated@@73)
 :pattern ( ($generated@@23 ($generated@@58 $generated@@72) $generated@@74 $generated@@73))
))) ($generated@@71 ($generated@@58 $generated@@72) $generated@@73))
 :pattern ( ($generated@@71 ($generated@@58 $generated@@72) $generated@@73))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (and ($generated@@46 $generated@@47 $generated@@76 $generated@@48) (= $generated@@77 ($generated@@39 0))) (not ($generated@@23 $generated@@75 $generated@@77 $generated@@76)))
 :pattern ( ($generated@@23 $generated@@75 $generated@@77 $generated@@76))
))))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@56 $generated@@78) (= $generated@@78 $generated@@45))
 :pattern ( ($generated@@56 $generated@@78))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@79 $generated@@81) (and (< 1 $generated@@22) ($generated@@46 $generated@@47 $generated@@81 $generated@@48))) (and (=> (not (and ($generated@@54 $generated@@81) (= ($generated@@60 $generated@@81) ($generated@@49 0)))) (=> ($generated@@54 $generated@@81) (=> (<= ($generated@@49 2) ($generated@@60 $generated@@81)) ($generated@@79 ($generated@@61 (- ($generated@@60 $generated@@81) 2)))))) (= ($generated@@71 ($generated@@58 $generated@@80) $generated@@81)  (or (and ($generated@@54 $generated@@81) (= ($generated@@60 $generated@@81) ($generated@@49 0))) (and (and ($generated@@54 $generated@@81) (<= ($generated@@49 2) ($generated@@60 $generated@@81))) ($generated@@71 $generated@@80 ($generated@@61 (- ($generated@@60 $generated@@81) 2))))))))
 :pattern ( ($generated@@71 ($generated@@58 $generated@@80) $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@54 $generated@@82) (exists (($generated@@83 Int) ) (= $generated@@82 ($generated@@61 $generated@@83))))
 :pattern ( ($generated@@54 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@46 $generated@@8 $generated@@84 $generated@@35) (<= ($generated@@49 0) ($generated@@13 $generated@@84)))
 :pattern ( ($generated@@46 $generated@@8 $generated@@84 $generated@@35))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@23 ($generated@@58 $generated@@85) $generated@@86 $generated@@87) ($generated@@23 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@85) $generated@@86 $generated@@87))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and ($generated@@46 $generated@@47 $generated@@89 $generated@@48) ($generated@@71 ($generated@@58 $generated@@88) $generated@@89)) (exists (($generated@@90 T@U) ) (! ($generated@@23 ($generated@@58 $generated@@88) $generated@@90 $generated@@89)
 :pattern ( ($generated@@23 ($generated@@58 $generated@@88) $generated@@90 $generated@@89))
)))
 :pattern ( ($generated@@71 ($generated@@58 $generated@@88) $generated@@89))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (and ($generated@@91 $generated@@93) (<= ($generated@@40 $generated@@93) ($generated@@40 $generated@@92))) (and (= ($generated@@91 ($generated@@38 $generated@@92 $generated@@93)) ($generated@@91 $generated@@92)) (= ($generated@@40 ($generated@@38 $generated@@92 $generated@@93)) (- ($generated@@40 $generated@@92) ($generated@@40 $generated@@93)))))
 :pattern ( ($generated@@38 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 Int) ) (!  (=> (<= 0 $generated@@94) (and ($generated@@91 ($generated@@39 $generated@@94)) (= ($generated@@40 ($generated@@39 $generated@@94)) $generated@@94)))
 :pattern ( ($generated@@39 $generated@@94))
)))
(assert (forall (($generated@@95 Int) ) (! (= ($generated@@46 $generated@@47 ($generated@@61 $generated@@95) $generated@@48) ($generated@@46 $generated@@8 ($generated@@12 $generated@@95) $generated@@35))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@61 $generated@@95) $generated@@48))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@96 $generated@@97) (or ($generated@@54 $generated@@97) ($generated@@56 $generated@@97)))
 :pattern ( ($generated@@96 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (or (or ($generated@@25 $generated@@98 $generated@@99) (= $generated@@98 $generated@@99)) ($generated@@25 $generated@@99 $generated@@98))
 :pattern ( ($generated@@25 $generated@@98 $generated@@99) ($generated@@25 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@24 $generated@@100 $generated@@101) ($generated@@25 $generated@@100 $generated@@101))
 :pattern ( ($generated@@24 $generated@@100 $generated@@101))
)))
(assert (= ($generated@@6 $generated@@102) 4))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (or ($generated@@59 ($generated@@51 $generated@@102 $generated@@104) $generated@@105) (and (< 2 $generated@@22) ($generated@@46 $generated@@47 $generated@@105 $generated@@48))) (and (and (=> (< 0 ($generated@@40 $generated@@104)) (=> (not (and ($generated@@54 $generated@@105) (= ($generated@@60 $generated@@105) ($generated@@49 0)))) (=> ($generated@@54 $generated@@105) (=> (<= ($generated@@49 2) ($generated@@60 $generated@@105)) ($generated@@59 ($generated@@38 $generated@@104 ($generated@@39 1)) ($generated@@61 (- ($generated@@60 $generated@@105) 2))))))) (=> (=> (< 0 ($generated@@40 $generated@@104)) (or (and ($generated@@54 $generated@@105) (= ($generated@@60 $generated@@105) ($generated@@49 0))) (and (and ($generated@@54 $generated@@105) (<= ($generated@@49 2) ($generated@@60 $generated@@105))) ($generated@@23 ($generated@@58 $generated@@103) ($generated@@38 $generated@@104 ($generated@@39 1)) ($generated@@61 (- ($generated@@60 $generated@@105) 2)))))) (=> (= ($generated@@49 0) ($generated@@40 $generated@@104)) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@24 $generated@@106 $generated@@104) ($generated@@59 $generated@@106 $generated@@105))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@103) $generated@@106 $generated@@105))
))))) (= ($generated@@23 ($generated@@58 $generated@@103) ($generated@@51 $generated@@102 $generated@@104) $generated@@105)  (and (=> (< 0 ($generated@@40 $generated@@104)) (or (and ($generated@@54 $generated@@105) (= ($generated@@60 $generated@@105) ($generated@@49 0))) (and (and ($generated@@54 $generated@@105) (<= ($generated@@49 2) ($generated@@60 $generated@@105))) ($generated@@23 ($generated@@58 $generated@@103) ($generated@@38 $generated@@104 ($generated@@39 1)) ($generated@@61 (- ($generated@@60 $generated@@105) 2)))))) (=> (= ($generated@@49 0) ($generated@@40 $generated@@104)) (exists (($generated@@107 T@U) ) (!  (and ($generated@@24 $generated@@107 $generated@@104) ($generated@@23 ($generated@@58 $generated@@103) $generated@@107 $generated@@105))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@103) $generated@@107 $generated@@105))
)))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@58 $generated@@103) ($generated@@51 $generated@@102 $generated@@104) $generated@@105))
))))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@46 $generated@@47 $generated@@108 $generated@@48) (or ($generated@@54 $generated@@108) ($generated@@56 $generated@@108)))
 :pattern ( ($generated@@56 $generated@@108) ($generated@@46 $generated@@47 $generated@@108 $generated@@48))
 :pattern ( ($generated@@54 $generated@@108) ($generated@@46 $generated@@47 $generated@@108 $generated@@48))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@71 ($generated@@58 $generated@@109) $generated@@110) ($generated@@71 $generated@@109 $generated@@110))
 :pattern ( ($generated@@71 ($generated@@58 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (<= 0 ($generated@@40 $generated@@111))
 :pattern ( ($generated@@40 $generated@@111))
)))
(assert (forall (($generated@@112 Int) ) (! (= ($generated@@44 ($generated@@61 $generated@@112)) $generated@@2)
 :pattern ( ($generated@@61 $generated@@112))
)))
(assert (forall (($generated@@113 Int) ) (! (= ($generated@@60 ($generated@@61 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@61 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@67 $generated@@115 ($generated@@68 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@68 $generated@@115 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@116 $generated@@117) (or (not (= $generated@@116 $generated@@117)) (not true))) (=> (and ($generated@@91 $generated@@116) (not ($generated@@91 $generated@@117))) ($generated@@25 $generated@@116 $generated@@117))) (=> (and ($generated@@91 $generated@@116) ($generated@@91 $generated@@117)) (= ($generated@@25 $generated@@116 $generated@@117) (< ($generated@@40 $generated@@116) ($generated@@40 $generated@@117))))) (=> (and ($generated@@25 $generated@@116 $generated@@117) ($generated@@91 $generated@@117)) ($generated@@91 $generated@@116)))
 :pattern ( ($generated@@25 $generated@@116 $generated@@117))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@118 $generated@@128 $generated@@129 $generated@@130 ($generated@@124 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@133 $generated@@134) $generated@@131)
 :weight 0
)) (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@118 $generated@@135 $generated@@136 $generated@@137 ($generated@@124 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@118 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@118 $generated@@144 $generated@@145 $generated@@146 ($generated@@124 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@118 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)))) (= ($generated@@6 $generated@@119) 5)) (= ($generated@@6 $generated@@120) 6)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@122 $generated@@153 $generated@@154 ($generated@@125 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@155) $generated@@157) $generated@@155)
 :weight 0
))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@162 $generated@@163) (= ($generated@@122 $generated@@158 $generated@@159 ($generated@@125 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@160) $generated@@163) ($generated@@122 $generated@@158 $generated@@159 $generated@@161 $generated@@163)))
 :weight 0
))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@6 ($generated@@123 $generated@@164 $generated@@165)) 7))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@126 ($generated@@123 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@123 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@127 ($generated@@123 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@123 $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Bool) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@11 ($generated@@118 $generated@@119 $generated@@120 $generated@@7 ($generated@@121 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))  (=> (and (or (not (= $generated@@174 $generated@@170)) (not true)) ($generated@@11 ($generated@@67 $generated@@7 ($generated@@122 $generated@@120 $generated@@102 ($generated@@122 $generated@@119 ($generated@@123 $generated@@120 $generated@@102) $generated@@171 $generated@@174) $generated@@172)))) $generated@@173))
 :pattern ( ($generated@@118 $generated@@119 $generated@@120 $generated@@7 ($generated@@121 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@177 Int) ($generated@@178 Int) ) (! (= ($generated@@176 $generated@@177 $generated@@178) (mod $generated@@177 $generated@@178))
 :pattern ( ($generated@@176 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> ($generated@@91 $generated@@179) (= $generated@@179 ($generated@@39 ($generated@@40 $generated@@179))))
 :pattern ( ($generated@@40 $generated@@179))
 :pattern ( ($generated@@91 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and ($generated@@180 $generated@@182) ($generated@@46 $generated@@47 $generated@@181 $generated@@48)) ($generated@@34 $generated@@47 $generated@@181 $generated@@48 $generated@@182))
 :pattern ( ($generated@@34 $generated@@47 $generated@@181 $generated@@48 $generated@@182))
)))
(assert (= ($generated@@183 $generated@@35) $generated@@0))
(assert (= ($generated@@184 $generated@@35) $generated@@4))
(assert (= ($generated@@183 $generated@@48) $generated@@1))
(assert (= ($generated@@184 $generated@@48) $generated@@5))
(assert (= $generated@@45 ($generated@@51 $generated@@47 $generated@@45)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and ($generated@@91 $generated@@186) (<= ($generated@@40 $generated@@186) ($generated@@40 $generated@@185))) (or (and (= $generated@@186 ($generated@@39 0)) (= ($generated@@38 $generated@@185 $generated@@186) $generated@@185)) (and (or (not (= $generated@@186 ($generated@@39 0))) (not true)) ($generated@@25 ($generated@@38 $generated@@185 $generated@@186) $generated@@185))))
 :pattern ( ($generated@@38 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@180 $generated@@188) (and ($generated@@54 $generated@@187) ($generated@@34 $generated@@47 $generated@@187 $generated@@48 $generated@@188))) ($generated@@34 $generated@@8 ($generated@@12 ($generated@@60 $generated@@187)) $generated@@35 $generated@@188))
 :pattern ( ($generated@@34 $generated@@8 ($generated@@12 ($generated@@60 $generated@@187)) $generated@@35 $generated@@188))
)))
(assert (forall (($generated@@189 Int) ) (! (= ($generated@@68 $generated@@8 ($generated@@12 ($generated@@49 $generated@@189))) ($generated@@51 $generated@@102 ($generated@@68 $generated@@8 ($generated@@12 $generated@@189))))
 :pattern ( ($generated@@68 $generated@@8 ($generated@@12 ($generated@@49 $generated@@189))))
)))
(assert (forall (($generated@@190 Int) ) (! (= ($generated@@61 ($generated@@49 $generated@@190)) ($generated@@51 $generated@@47 ($generated@@61 $generated@@190)))
 :pattern ( ($generated@@61 ($generated@@49 $generated@@190)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@T) ) (! (= ($generated@@68 $generated@@192 ($generated@@51 $generated@@192 $generated@@191)) ($generated@@51 $generated@@102 ($generated@@68 $generated@@192 $generated@@191)))
 :pattern ( ($generated@@68 $generated@@192 ($generated@@51 $generated@@192 $generated@@191)))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (or ($generated@@59 ($generated@@51 $generated@@102 $generated@@194) ($generated@@51 $generated@@47 $generated@@195)) (and (< 2 $generated@@22) ($generated@@46 $generated@@47 $generated@@195 $generated@@48))) (and (and (=> (< 0 ($generated@@40 $generated@@194)) (=> (not (and ($generated@@54 ($generated@@51 $generated@@47 $generated@@195)) (= ($generated@@49 ($generated@@60 ($generated@@51 $generated@@47 $generated@@195))) ($generated@@49 0)))) (=> ($generated@@11 ($generated@@51 $generated@@7 ($generated@@10 ($generated@@54 ($generated@@51 $generated@@47 $generated@@195))))) (=> (<= ($generated@@49 2) ($generated@@49 ($generated@@60 ($generated@@51 $generated@@47 $generated@@195)))) ($generated@@59 ($generated@@38 $generated@@194 ($generated@@39 1)) ($generated@@51 $generated@@47 ($generated@@61 ($generated@@49 (- ($generated@@60 ($generated@@51 $generated@@47 $generated@@195)) 2))))))))) (=> (=> (< 0 ($generated@@40 $generated@@194)) (or (and ($generated@@54 ($generated@@51 $generated@@47 $generated@@195)) (= ($generated@@49 ($generated@@60 ($generated@@51 $generated@@47 $generated@@195))) ($generated@@49 0))) (and (and ($generated@@54 ($generated@@51 $generated@@47 $generated@@195)) (<= ($generated@@49 2) ($generated@@49 ($generated@@60 ($generated@@51 $generated@@47 $generated@@195))))) ($generated@@23 ($generated@@58 $generated@@193) ($generated@@38 $generated@@194 ($generated@@39 1)) ($generated@@51 $generated@@47 ($generated@@61 ($generated@@49 (- ($generated@@60 ($generated@@51 $generated@@47 $generated@@195)) 2)))))))) (=> (= ($generated@@49 0) ($generated@@40 $generated@@194)) (forall (($generated@@196 T@U) ) (!  (=> ($generated@@24 $generated@@196 $generated@@194) ($generated@@59 $generated@@196 $generated@@195))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@193) $generated@@196 $generated@@195))
))))) (= ($generated@@23 ($generated@@58 $generated@@193) ($generated@@51 $generated@@102 $generated@@194) ($generated@@51 $generated@@47 $generated@@195))  (and (=> (< 0 ($generated@@40 $generated@@194)) (or (and ($generated@@54 ($generated@@51 $generated@@47 $generated@@195)) (= ($generated@@49 ($generated@@60 ($generated@@51 $generated@@47 $generated@@195))) ($generated@@49 0))) (and (and ($generated@@54 ($generated@@51 $generated@@47 $generated@@195)) (<= ($generated@@49 2) ($generated@@49 ($generated@@60 ($generated@@51 $generated@@47 $generated@@195))))) ($generated@@23 ($generated@@58 $generated@@193) ($generated@@38 $generated@@194 ($generated@@39 1)) ($generated@@51 $generated@@47 ($generated@@61 ($generated@@49 (- ($generated@@60 ($generated@@51 $generated@@47 $generated@@195)) 2)))))))) (=> (= ($generated@@49 0) ($generated@@40 $generated@@194)) (exists (($generated@@197 T@U) ) (!  (and ($generated@@24 $generated@@197 $generated@@194) ($generated@@23 ($generated@@58 $generated@@193) $generated@@197 $generated@@195))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@193) $generated@@197 $generated@@195))
)))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@58 $generated@@193) ($generated@@51 $generated@@102 $generated@@194) ($generated@@51 $generated@@47 $generated@@195)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@205  (=> (and (and (and (= $generated@@198 ($generated@@121 $generated@@199 $generated@@200 $generated false)) ($generated@@34 $generated@@47 $generated@@201 $generated@@48 $generated@@200)) (and ($generated@@79 $generated@@201) ($generated@@71 ($generated@@58 $generated@@202) $generated@@201))) (and (and ($generated@@180 $generated@@203) ($generated@@204 $generated@@203)) (and (= $generated@@200 $generated@@203) ($generated@@54 $generated@@201)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@54 $generated@@201)) (=> ($generated@@54 $generated@@201) (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= ($generated@@49 2) 0)) (not true))))))))
(let (($generated@@206  (=> (and ($generated@@180 $generated@@200) ($generated@@204 $generated@@200)) (=> (and (and (and ($generated@@46 $generated@@47 $generated@@201 $generated@@48) ($generated@@34 $generated@@47 $generated@@201 $generated@@48 $generated@@200)) ($generated@@96 $generated@@201)) (and (= 2 $generated@@22) (= (ControlFlow 0 4) 2))) $generated@@205))))
$generated@@206)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
