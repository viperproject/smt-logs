(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@33 () Int)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) Bool)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@3) 0))
(assert (= ($generated@@27 $generated) $generated@@1))
(assert (= ($generated@@27 $generated@@0) $generated@@2))
(assert (= ($generated@@28 $generated@@3) $generated@@4))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@30 ($generated@@29 $generated@@31 $generated@@32) $generated@@32)
 :pattern ( ($generated@@29 $generated@@31 $generated@@32))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@10 $generated@@39) 3) (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@43 $generated@@52 $generated@@53 ($generated@@49 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@56) $generated@@54)
 :weight 0
))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (or (= $generated@@61 $generated@@62) (= ($generated@@43 $generated@@57 $generated@@58 ($generated@@49 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@62) ($generated@@43 $generated@@57 $generated@@58 $generated@@60 $generated@@62)))
 :weight 0
))) (= ($generated@@10 $generated@@44) 4)) (= ($generated@@10 $generated@@45) 5)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@10 ($generated@@46 $generated@@63 $generated@@64)) 6))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@50 ($generated@@46 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@51 ($generated@@46 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@46 $generated@@67 $generated@@68))
))))
(assert  (=> (<= 0 $generated@@33) (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (or ($generated@@36 $generated@@69 $generated@@70) (and (< 0 $generated@@33) (and ($generated@@35 $generated@@69) (and (or (not (= $generated@@70 $generated@@37)) (not true)) (and ($generated@@38 $generated@@39 $generated@@70 $generated@@40) ($generated@@41 $generated@@39 $generated@@70 $generated@@40 $generated@@69)))))) (= ($generated@@34 $generated@@69 $generated@@70) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@69 $generated@@70) $generated@@47))) ($generated@@48 8))))
 :pattern ( ($generated@@34 $generated@@69 $generated@@70) ($generated@@35 $generated@@69))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@30 $generated@@71 $generated@@73) ($generated@@30 ($generated@@29 $generated@@71 $generated@@72) $generated@@73))
 :pattern ( ($generated@@29 $generated@@71 $generated@@72) ($generated@@30 $generated@@71 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@30 ($generated@@29 $generated@@74 $generated@@75) $generated@@76)  (or (= $generated@@76 $generated@@75) ($generated@@30 $generated@@74 $generated@@76)))
 :pattern ( ($generated@@30 ($generated@@29 $generated@@74 $generated@@75) $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (!  (not ($generated@@30 $generated@@77 $generated@@78))
 :pattern ( ($generated@@30 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@81 $generated@@79)  (or (= $generated@@81 $generated@@37) (= ($generated@@80 $generated@@81) $generated@@79)))
 :pattern ( ($generated@@38 $generated@@39 $generated@@81 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@41 $generated@@39 $generated@@82 $generated@@40 $generated@@83) ($generated@@41 $generated@@39 $generated@@82 $generated@@79 $generated@@83))
 :pattern ( ($generated@@41 $generated@@39 $generated@@82 $generated@@40 $generated@@83))
 :pattern ( ($generated@@41 $generated@@39 $generated@@82 $generated@@79 $generated@@83))
)))
(assert (= ($generated@@26 $generated@@47) 0))
(assert (= ($generated@@84 $generated@@5 $generated@@9) $generated@@47))
(assert  (not ($generated@@85 $generated@@47)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@41 $generated@@39 $generated@@86 $generated@@79 $generated@@87)  (or (= $generated@@86 $generated@@37) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@87 $generated@@86) $generated@@3)))))
 :pattern ( ($generated@@41 $generated@@39 $generated@@86 $generated@@79 $generated@@87))
)))
(assert (forall (($generated@@88 Int) ) (! (= ($generated@@48 $generated@@88) $generated@@88)
 :pattern ( ($generated@@48 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 $generated@@90) $generated@@90)
 :pattern ( ($generated@@89 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@92 $generated@@93 $generated@@94) (forall (($generated@@95 T@U) ) (!  (=> ($generated@@30 $generated@@93 $generated@@95) ($generated@@30 $generated@@94 $generated@@95))
 :pattern ( ($generated@@30 $generated@@93 $generated@@95))
 :pattern ( ($generated@@30 $generated@@94 $generated@@95))
)))
 :pattern ( ($generated@@92 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 ($generated@@42 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@42 $generated@@98 $generated@@97))
)))
(assert ($generated@@85 $generated@@3))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and (and ($generated@@35 $generated@@99) (and (or (not (= $generated@@100 $generated@@37)) (not true)) (= ($generated@@80 $generated@@100) $generated@@79))) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@99 $generated@@100) $generated@@3)))) ($generated@@41 $generated@@12 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@99 $generated@@100) $generated@@47)) $generated@@0 $generated@@99))
 :pattern ( ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@99 $generated@@100) $generated@@47)))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@101 ($generated@@96 $generated@@105 $generated@@102) $generated@@103 $generated@@104) ($generated@@41 $generated@@105 $generated@@102 $generated@@103 $generated@@104))
 :pattern ( ($generated@@101 ($generated@@96 $generated@@105 $generated@@102) $generated@@103 $generated@@104))
)))
(assert  (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@106 $generated@@109 $generated@@110 $generated@@111 ($generated@@108 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@114 $generated@@115) $generated@@112)
 :weight 0
)) (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@106 $generated@@116 $generated@@117 $generated@@118 ($generated@@108 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@106 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@106 $generated@@125 $generated@@126 $generated@@127 ($generated@@108 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@106 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@15 ($generated@@106 $generated@@39 $generated@@44 $generated@@11 ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))  (=> (and (or (not (= $generated@@138 $generated@@134)) (not true)) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@135 $generated@@138) $generated@@136)))) (= $generated@@138 $generated@@137)))
 :pattern ( ($generated@@106 $generated@@39 $generated@@44 $generated@@11 ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@140 $generated@@40)  (and ($generated@@38 $generated@@39 $generated@@140 $generated@@79) (or (not (= $generated@@140 $generated@@37)) (not true))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@140 $generated@@40))
 :pattern ( ($generated@@38 $generated@@39 $generated@@140 $generated@@79))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (and (= ($generated@@141 ($generated@@84 $generated@@142 $generated@@143)) $generated@@142) (= ($generated@@28 ($generated@@84 $generated@@142 $generated@@143)) $generated@@143))
 :pattern ( ($generated@@84 $generated@@142 $generated@@143))
)))
(assert  (=> (<= 0 $generated@@33) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (or ($generated@@36 $generated@@144 $generated@@145) (and (< 0 $generated@@33) (and ($generated@@35 $generated@@144) (and (or (not (= $generated@@145 $generated@@37)) (not true)) (and ($generated@@38 $generated@@39 $generated@@145 $generated@@40) ($generated@@41 $generated@@39 $generated@@145 $generated@@40 $generated@@144)))))) (and (=> ($generated@@34 $generated@@144 $generated@@145) (<= ($generated@@48 0) ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@144 $generated@@145) $generated@@47))))) (=> (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@144 $generated@@145) $generated@@47))) ($generated@@48 8)) ($generated@@34 $generated@@144 $generated@@145))))
 :pattern ( ($generated@@34 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@42 $generated@@147 ($generated@@96 $generated@@147 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@96 $generated@@147 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and ($generated@@35 $generated@@148) (and (or (not (= $generated@@149 $generated@@37)) (not true)) (= ($generated@@80 $generated@@149) $generated@@79))) ($generated@@38 $generated@@12 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@148 $generated@@149) $generated@@47)) $generated@@0))
 :pattern ( ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@148 $generated@@149) $generated@@47)))
)))
(assert (= ($generated@@27 $generated@@79) $generated@@6))
(assert (= ($generated@@150 $generated@@79) $generated@@8))
(assert (= ($generated@@27 $generated@@40) $generated@@7))
(assert (= ($generated@@150 $generated@@40) $generated@@8))
(assert (forall (($generated@@151 Int) ) (! (= ($generated@@96 $generated@@12 ($generated@@16 ($generated@@48 $generated@@151))) ($generated@@89 $generated@@45 ($generated@@96 $generated@@12 ($generated@@16 $generated@@151))))
 :pattern ( ($generated@@96 $generated@@12 ($generated@@16 ($generated@@48 $generated@@151))))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@96 $generated@@153 ($generated@@89 $generated@@153 $generated@@152)) ($generated@@89 $generated@@45 ($generated@@96 $generated@@153 $generated@@152)))
 :pattern ( ($generated@@96 $generated@@153 ($generated@@89 $generated@@153 $generated@@152)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! ($generated@@41 $generated@@12 $generated@@155 $generated@@0 $generated@@154)
 :pattern ( ($generated@@41 $generated@@12 $generated@@155 $generated@@0 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! ($generated@@41 $generated@@11 $generated@@157 $generated $generated@@156)
 :pattern ( ($generated@@41 $generated@@11 $generated@@157 $generated $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! ($generated@@38 $generated@@12 $generated@@158 $generated@@0)
 :pattern ( ($generated@@38 $generated@@12 $generated@@158 $generated@@0))
)))
(assert (forall (($generated@@159 T@U) ) (! ($generated@@38 $generated@@11 $generated@@159 $generated)
 :pattern ( ($generated@@38 $generated@@11 $generated@@159 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@165  (and (=> (= (ControlFlow 0 9) (- 0 10)) (=> ($generated@@34 $generated@@160 $generated@@161) (<= ($generated@@48 0) ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@161) $generated@@47)))))) (=> (=> ($generated@@34 $generated@@160 $generated@@161) (<= ($generated@@48 0) ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@161) $generated@@47))))) (=> (= (ControlFlow 0 9) (- 0 8)) (=> (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@161) $generated@@47))) ($generated@@48 8)) ($generated@@34 $generated@@160 $generated@@161)))))))
(let (($generated@@166  (=> (= $generated@@162 ($generated@@15 ($generated@@106 $generated@@39 $generated@@44 $generated@@11 $generated@@163 $generated@@161 $generated@@47))) (=> (and (= ($generated@@34 $generated@@160 $generated@@161) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@161) $generated@@47))) ($generated@@48 8))) ($generated@@38 $generated@@11 ($generated@@14 ($generated@@34 $generated@@160 $generated@@161)) $generated)) (and (=> (= (ControlFlow 0 11) (- 0 12)) $generated@@162) (=> $generated@@162 (=> (= (ControlFlow 0 11) 9) $generated@@165)))))))
(let (($generated@@167 true))
(let (($generated@@168  (=> (and (=> (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@161) $generated@@47))) ($generated@@48 8)) ($generated@@34 $generated@@160 $generated@@161)) (= (ControlFlow 0 4) 1)) $generated@@167)))
(let (($generated@@169  (=> (and (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@161) $generated@@47))) ($generated@@48 8)) ($generated@@101 ($generated@@96 $generated@@39 $generated@@161) $generated@@79 $generated@@160)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= $generated@@161 $generated@@161) (and ($generated@@92 ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161)) ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161))) (not ($generated@@92 ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161)) ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161))))))) (=> (or (= $generated@@161 $generated@@161) (and ($generated@@92 ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161)) ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161))) (not ($generated@@92 ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161)) ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161)))))) (=> (or (= $generated@@161 $generated@@161) ($generated@@36 $generated@@160 $generated@@161)) (=> (and ($generated@@34 $generated@@160 $generated@@161) (= (ControlFlow 0 2) 1)) $generated@@167)))))))
(let (($generated@@170  (=> (=> ($generated@@34 $generated@@160 $generated@@161) (<= ($generated@@48 0) ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@161) $generated@@47))))) (and (=> (= (ControlFlow 0 7) 2) $generated@@169) (=> (= (ControlFlow 0 7) 4) $generated@@168)))))
(let (($generated@@171  (=> ($generated@@101 ($generated@@96 $generated@@39 $generated@@161) $generated@@79 $generated@@160) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (= $generated@@161 $generated@@161) (and ($generated@@92 ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161)) ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161))) (not ($generated@@92 ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161)) ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161))))))) (=> (or (= $generated@@161 $generated@@161) (and ($generated@@92 ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161)) ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161))) (not ($generated@@92 ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161)) ($generated@@29 $generated@@77 ($generated@@96 $generated@@39 $generated@@161)))))) (=> (or (= $generated@@161 $generated@@161) ($generated@@36 $generated@@160 $generated@@161)) (=> (and ($generated@@34 $generated@@160 $generated@@161) (<= ($generated@@48 0) ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@161) $generated@@47))))) (and (=> (= (ControlFlow 0 5) 2) $generated@@169) (=> (= (ControlFlow 0 5) 4) $generated@@168)))))))))
(let (($generated@@172  (=> (= $generated@@163 ($generated@@107 $generated@@37 $generated@@160 $generated@@3 $generated@@161)) (and (and (=> (= (ControlFlow 0 13) 11) $generated@@166) (=> (= (ControlFlow 0 13) 5) $generated@@171)) (=> (= (ControlFlow 0 13) 7) $generated@@170)))))
(let (($generated@@173  (=> (and ($generated@@35 $generated@@160) ($generated@@164 $generated@@160)) (=> (and (and (or (not (= $generated@@161 $generated@@37)) (not true)) (and ($generated@@38 $generated@@39 $generated@@161 $generated@@40) ($generated@@41 $generated@@39 $generated@@161 $generated@@40 $generated@@160))) (and (= 0 $generated@@33) (= (ControlFlow 0 14) 13))) $generated@@172))))
$generated@@173))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
