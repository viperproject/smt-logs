(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@T T@T) T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@79 (T@T T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@97 (Int) Int)
(declare-fun $generated@@99 (T@T T@U) T@U)
(declare-fun $generated@@102 (T@T T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@107 (T@U T@U) Bool)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated@@0) 0))
(assert (= ($generated@@31 $generated@@0) $generated@@1))
(assert  (and (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@32 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@32 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@32 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@14 $generated@@33) 3)) (= ($generated@@14 $generated@@34) 4)) (= ($generated@@14 $generated@@35) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@14 ($generated@@36 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@36 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@36 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@36 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@36 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (and ($generated@@39 $generated@@64) (and (or (not (= $generated@@65 $generated@@40)) (not true)) (= ($generated@@41 $generated@@65) ($generated@@38 $generated@@63)))) ($generated@@42 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@64 $generated@@65) $generated@@37) $generated@@63))
 :pattern ( ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@64 $generated@@65) $generated@@37) ($generated@@38 $generated@@63))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and (and ($generated@@39 $generated@@69) (and (or (not (= $generated@@70 $generated@@40)) (not true)) (= ($generated@@41 $generated@@70) ($generated@@38 $generated@@68)))) ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@69 $generated@@70) $generated@@0)))) ($generated@@67 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@69 $generated@@70) $generated@@37) $generated@@68 $generated@@69))
 :pattern ( ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@69 $generated@@70) $generated@@37) ($generated@@38 $generated@@68))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! ($generated@@71 $generated@@16 $generated@@73 $generated@@72 $generated@@74)
 :pattern ( ($generated@@71 $generated@@16 $generated@@73 $generated@@72 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@71 $generated@@35 $generated@@77 ($generated@@75 $generated@@76) $generated@@78) ($generated@@71 $generated@@35 $generated@@77 ($generated@@38 $generated@@76) $generated@@78))
 :pattern ( ($generated@@71 $generated@@35 $generated@@77 ($generated@@75 $generated@@76) $generated@@78))
 :pattern ( ($generated@@71 $generated@@35 $generated@@77 ($generated@@38 $generated@@76) $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@79 $generated@@35 $generated@@81 $generated@@80)  (or (= $generated@@81 $generated@@40) (= ($generated@@41 $generated@@81) $generated@@80)))
 :pattern ( ($generated@@79 $generated@@35 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@71 $generated@@35 $generated@@83 $generated@@82 $generated@@84) ($generated@@71 $generated@@35 $generated@@83 $generated@@80 $generated@@84))
 :pattern ( ($generated@@71 $generated@@35 $generated@@83 $generated@@82 $generated@@84))
 :pattern ( ($generated@@71 $generated@@35 $generated@@83 $generated@@80 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@71 $generated@@35 $generated@@86 ($generated@@38 $generated@@85) $generated@@87)  (or (= $generated@@86 $generated@@40) ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@87 $generated@@86) $generated@@0)))))
 :pattern ( ($generated@@71 $generated@@35 $generated@@86 ($generated@@38 $generated@@85) $generated@@87))
)))
(assert (= ($generated@@30 $generated@@88) 0))
(assert (= ($generated@@89 $generated@@6 $generated@@12) $generated@@88))
(assert  (not ($generated@@90 $generated@@88)))
(assert (= ($generated@@30 $generated@@37) 0))
(assert (= ($generated@@89 $generated@@7 $generated@@13) $generated@@37))
(assert  (not ($generated@@90 $generated@@37)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@71 $generated@@35 $generated@@91 $generated@@80 $generated@@92)  (or (= $generated@@91 $generated@@40) ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@92 $generated@@91) $generated@@0)))))
 :pattern ( ($generated@@71 $generated@@35 $generated@@91 $generated@@80 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> ($generated@@93 $generated@@94 $generated@@95) (forall (($generated@@96 T@U) ) (!  (=> ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@94 $generated@@96) $generated@@0))) ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@95 $generated@@96) $generated@@0))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@95 $generated@@96) $generated@@0))
)))
 :pattern ( ($generated@@93 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@98 Int) ) (! (= ($generated@@97 $generated@@98) $generated@@98)
 :pattern ( ($generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@99 $generated@@101 $generated@@100) $generated@@100)
 :pattern ( ($generated@@99 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@102 $generated@@104 ($generated@@66 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@66 $generated@@104 $generated@@103))
)))
(assert (= ($generated@@14 $generated@@105) 7))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@79 $generated@@105 $generated@@108 ($generated@@106 $generated@@109)) (forall (($generated@@110 T@U) ) (!  (=> ($generated@@107 $generated@@108 $generated@@110) ($generated@@42 $generated@@110 $generated@@109))
 :pattern ( ($generated@@107 $generated@@108 $generated@@110))
)))
 :pattern ( ($generated@@79 $generated@@105 $generated@@108 ($generated@@106 $generated@@109)))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@79 $generated@@16 $generated@@111 $generated@@72) (<= ($generated@@97 0) ($generated@@21 $generated@@111)))
 :pattern ( ($generated@@79 $generated@@16 $generated@@111 $generated@@72))
)))
(assert ($generated@@90 $generated@@0))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@79 $generated@@35 $generated@@113 ($generated@@75 $generated@@112))  (and ($generated@@79 $generated@@35 $generated@@113 ($generated@@38 $generated@@112)) (or (not (= $generated@@113 $generated@@40)) (not true))))
 :pattern ( ($generated@@79 $generated@@35 $generated@@113 ($generated@@75 $generated@@112)))
 :pattern ( ($generated@@79 $generated@@35 $generated@@113 ($generated@@38 $generated@@112)))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@67 ($generated@@102 $generated@@117 $generated@@114) $generated@@115 $generated@@116) ($generated@@71 $generated@@117 $generated@@114 $generated@@115 $generated@@116))
 :pattern ( ($generated@@67 ($generated@@102 $generated@@117 $generated@@114) $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> ($generated@@93 $generated@@118 $generated@@119) (=> ($generated@@67 $generated@@120 $generated@@121 $generated@@118) ($generated@@67 $generated@@120 $generated@@121 $generated@@119)))
 :pattern ( ($generated@@93 $generated@@118 $generated@@119) ($generated@@67 $generated@@120 $generated@@121 $generated@@118))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@T) ) (!  (=> ($generated@@93 $generated@@122 $generated@@123) (=> ($generated@@71 $generated@@126 $generated@@124 $generated@@125 $generated@@122) ($generated@@71 $generated@@126 $generated@@124 $generated@@125 $generated@@123)))
 :pattern ( ($generated@@93 $generated@@122 $generated@@123) ($generated@@71 $generated@@126 $generated@@124 $generated@@125 $generated@@122))
)))
(assert (forall (($generated@@129 T@U) ) (!  (and (= ($generated@@127 ($generated@@75 $generated@@129)) $generated@@5) (= ($generated@@128 ($generated@@75 $generated@@129)) $generated@@11))
 :pattern ( ($generated@@75 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (!  (and (= ($generated@@127 ($generated@@38 $generated@@130)) $generated@@8) (= ($generated@@128 ($generated@@38 $generated@@130)) $generated@@11))
 :pattern ( ($generated@@38 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@39 $generated@@131) (and (or (not (= $generated@@132 $generated@@40)) (not true)) (= ($generated@@41 $generated@@132) $generated@@80))) ($generated@@79 $generated@@35 ($generated@@66 $generated@@35 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@131 $generated@@132) $generated@@88)) $generated@@82))
 :pattern ( ($generated@@66 $generated@@35 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@131 $generated@@132) $generated@@88)))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@42 $generated@@133 $generated@@72) (and (= ($generated@@102 $generated@@16 ($generated@@66 $generated@@16 $generated@@133)) $generated@@133) ($generated@@79 $generated@@16 ($generated@@66 $generated@@16 $generated@@133) $generated@@72)))
 :pattern ( ($generated@@42 $generated@@133 $generated@@72))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@42 $generated@@134 $generated@@82) (and (= ($generated@@102 $generated@@35 ($generated@@66 $generated@@35 $generated@@134)) $generated@@134) ($generated@@79 $generated@@35 ($generated@@66 $generated@@35 $generated@@134) $generated@@82)))
 :pattern ( ($generated@@42 $generated@@134 $generated@@82))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> ($generated@@42 $generated@@135 $generated@@80) (and (= ($generated@@102 $generated@@35 ($generated@@66 $generated@@35 $generated@@135)) $generated@@135) ($generated@@79 $generated@@35 ($generated@@66 $generated@@35 $generated@@135) $generated@@80)))
 :pattern ( ($generated@@42 $generated@@135 $generated@@80))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@79 $generated@@35 $generated@@137 ($generated@@38 $generated@@136))  (or (= $generated@@137 $generated@@40) (= ($generated@@41 $generated@@137) ($generated@@38 $generated@@136))))
 :pattern ( ($generated@@79 $generated@@35 $generated@@137 ($generated@@38 $generated@@136)))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@79 $generated@@35 $generated@@138 $generated@@82)  (and ($generated@@79 $generated@@35 $generated@@138 $generated@@80) (or (not (= $generated@@138 $generated@@40)) (not true))))
 :pattern ( ($generated@@79 $generated@@35 $generated@@138 $generated@@82))
 :pattern ( ($generated@@79 $generated@@35 $generated@@138 $generated@@80))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and ($generated@@39 $generated@@139) (and (or (not (= $generated@@140 $generated@@40)) (not true)) (= ($generated@@41 $generated@@140) $generated@@80))) ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@139 $generated@@140) $generated@@0)))) ($generated@@71 $generated@@35 ($generated@@66 $generated@@35 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@139 $generated@@140) $generated@@88)) $generated@@82 $generated@@139))
 :pattern ( ($generated@@66 $generated@@35 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@139 $generated@@140) $generated@@88)))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (or (not (= $generated@@141 $generated@@143)) (not true)) (=> (and ($generated@@93 $generated@@141 $generated@@142) ($generated@@93 $generated@@142 $generated@@143)) ($generated@@93 $generated@@141 $generated@@143)))
 :pattern ( ($generated@@93 $generated@@141 $generated@@142) ($generated@@93 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (and (= ($generated@@144 ($generated@@89 $generated@@145 $generated@@146)) $generated@@145) (= ($generated@@31 ($generated@@89 $generated@@145 $generated@@146)) $generated@@146))
 :pattern ( ($generated@@89 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@42 ($generated@@102 $generated@@149 $generated@@147) $generated@@148) ($generated@@79 $generated@@149 $generated@@147 $generated@@148))
 :pattern ( ($generated@@42 ($generated@@102 $generated@@149 $generated@@147) $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@71 $generated@@105 $generated@@150 ($generated@@106 $generated@@151) $generated@@152) (forall (($generated@@153 T@U) ) (!  (=> ($generated@@107 $generated@@150 $generated@@153) ($generated@@67 $generated@@153 $generated@@151 $generated@@152))
 :pattern ( ($generated@@107 $generated@@150 $generated@@153))
)))
 :pattern ( ($generated@@71 $generated@@105 $generated@@150 ($generated@@106 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@154 ($generated@@106 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@106 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@127 ($generated@@106 $generated@@156)) $generated)
 :pattern ( ($generated@@106 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@75 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@75 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@159 ($generated@@38 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@38 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@66 $generated@@162 ($generated@@102 $generated@@162 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@102 $generated@@162 $generated@@161))
)))
(assert  (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@163 $generated@@166 $generated@@167 $generated@@168 ($generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@171 $generated@@172) $generated@@169)
 :weight 0
)) (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@163 $generated@@173 $generated@@174 $generated@@175 ($generated@@165 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@163 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@163 $generated@@182 $generated@@183 $generated@@184 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@163 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 Bool) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (= ($generated@@19 ($generated@@163 $generated@@35 $generated@@33 $generated@@15 ($generated@@164 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195 $generated@@196))  (=> (and (or (not (= $generated@@195 $generated@@191)) (not true)) ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@192 $generated@@195) $generated@@193)))) $generated@@194))
 :pattern ( ($generated@@163 $generated@@35 $generated@@33 $generated@@15 ($generated@@164 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@42 $generated@@197 ($generated@@106 $generated@@198)) (and (= ($generated@@102 $generated@@105 ($generated@@66 $generated@@105 $generated@@197)) $generated@@197) ($generated@@79 $generated@@105 ($generated@@66 $generated@@105 $generated@@197) ($generated@@106 $generated@@198))))
 :pattern ( ($generated@@42 $generated@@197 ($generated@@106 $generated@@198)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@42 $generated@@200 ($generated@@75 $generated@@199)) (and (= ($generated@@102 $generated@@35 ($generated@@66 $generated@@35 $generated@@200)) $generated@@200) ($generated@@79 $generated@@35 ($generated@@66 $generated@@35 $generated@@200) ($generated@@75 $generated@@199))))
 :pattern ( ($generated@@42 $generated@@200 ($generated@@75 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> ($generated@@42 $generated@@202 ($generated@@38 $generated@@201)) (and (= ($generated@@102 $generated@@35 ($generated@@66 $generated@@35 $generated@@202)) $generated@@202) ($generated@@79 $generated@@35 ($generated@@66 $generated@@35 $generated@@202) ($generated@@38 $generated@@201))))
 :pattern ( ($generated@@42 $generated@@202 ($generated@@38 $generated@@201)))
)))
(assert (= ($generated@@127 $generated@@72) $generated@@2))
(assert (= ($generated@@128 $generated@@72) $generated@@9))
(assert (= ($generated@@127 $generated@@82) $generated@@3))
(assert (= ($generated@@128 $generated@@82) $generated@@10))
(assert (= ($generated@@127 $generated@@80) $generated@@4))
(assert (= ($generated@@128 $generated@@80) $generated@@10))
(assert (forall (($generated@@203 Int) ) (! (= ($generated@@102 $generated@@16 ($generated@@20 ($generated@@97 $generated@@203))) ($generated@@99 $generated@@34 ($generated@@102 $generated@@16 ($generated@@20 $generated@@203))))
 :pattern ( ($generated@@102 $generated@@16 ($generated@@20 ($generated@@97 $generated@@203))))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@T) ) (! (= ($generated@@102 $generated@@205 ($generated@@99 $generated@@205 $generated@@204)) ($generated@@99 $generated@@34 ($generated@@102 $generated@@205 $generated@@204)))
 :pattern ( ($generated@@102 $generated@@205 ($generated@@99 $generated@@205 $generated@@204)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@206 () Int)
(declare-fun $generated@@207 () Bool)
(declare-fun $generated@@208 () Bool)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () Bool)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () Bool)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () Bool)
(declare-fun $generated@@231 () Bool)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () Bool)
(declare-fun $generated@@234 () Bool)
(declare-fun $generated@@235 () Bool)
(declare-fun $generated@@236 () Bool)
(declare-fun $generated@@237 () Bool)
(declare-fun $generated@@238 () Bool)
(declare-fun $generated@@239 () Bool)
(declare-fun $generated@@240 () Bool)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () Int)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () Int)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () Int)
(declare-fun $generated@@252 () Bool)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () Int)
(declare-fun $generated@@255 () Bool)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () Bool)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 28) (let (($generated@@260 true))
(let (($generated@@261  (=> (and (< ($generated@@97 0) $generated@@206) (= (ControlFlow 0 23) 21)) $generated@@260)))
(let (($generated@@262  (=> (and (<= $generated@@206 ($generated@@97 0)) (= (ControlFlow 0 22) 21)) $generated@@260)))
(let (($generated@@263  (=> (not $generated@@207) (and (=> (= (ControlFlow 0 24) 22) $generated@@262) (=> (= (ControlFlow 0 24) 23) $generated@@261)))))
(let (($generated@@264  (=> (= $generated@@208 (forall (($generated@@265 T@U) ) (!  (=> ($generated@@79 $generated@@35 $generated@@265 $generated@@82) (=> ($generated@@107 $generated@@209 ($generated@@102 $generated@@35 $generated@@265)) (or (not (= $generated@@265 $generated@@40)) (not true))))
 :pattern ( ($generated@@107 $generated@@209 ($generated@@102 $generated@@35 $generated@@265)))
))) (=> (and (or (not (= $generated@@210 $generated@@40)) (not true)) (and ($generated@@79 $generated@@35 $generated@@210 ($generated@@75 $generated@@211)) ($generated@@71 $generated@@35 $generated@@210 ($generated@@75 $generated@@211) $generated@@212))) (=> (and (and (and (= $generated@@213 $generated@@80) (= $generated@@214 ($generated@@102 $generated@@35 $generated@@215))) (and ($generated@@39 $generated@@216) ($generated@@217 $generated@@216))) (and (and (or (not (= $generated@@218 $generated@@40)) (not true)) (and ($generated@@79 $generated@@35 $generated@@218 ($generated@@75 $generated@@213)) ($generated@@71 $generated@@35 $generated@@218 ($generated@@75 $generated@@213) $generated@@216))) (not ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@219 $generated@@218) $generated@@0)))))) (=> (and (and (and (and (forall (($generated@@266 T@U) ) (!  (=> (and (or (not (= $generated@@266 $generated@@40)) (not true)) ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@219 $generated@@266) $generated@@0)))) (= ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@216 $generated@@266) ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@219 $generated@@266)))
 :pattern ( ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@216 $generated@@266))
)) ($generated@@93 $generated@@219 $generated@@216)) (and (or (not (= $generated@@220 $generated@@40)) (not true)) (and ($generated@@79 $generated@@35 $generated@@220 ($generated@@75 $generated@@221)) ($generated@@71 $generated@@35 $generated@@220 ($generated@@75 $generated@@221) $generated@@212)))) (and (and (= $generated@@222 $generated@@82) (= $generated@@223 ($generated@@102 $generated@@35 $generated@@215))) (and ($generated@@39 $generated@@224) ($generated@@217 $generated@@224)))) (and (and (and (or (not (= $generated@@225 $generated@@40)) (not true)) (and ($generated@@79 $generated@@35 $generated@@225 ($generated@@75 $generated@@222)) ($generated@@71 $generated@@35 $generated@@225 ($generated@@75 $generated@@222) $generated@@224))) (not ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@216 $generated@@225) $generated@@0))))) (and (forall (($generated@@267 T@U) ) (!  (=> (and (or (not (= $generated@@267 $generated@@40)) (not true)) ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@216 $generated@@267) $generated@@0)))) (= ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@224 $generated@@267) ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@216 $generated@@267)))
 :pattern ( ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@224 $generated@@267))
)) ($generated@@93 $generated@@216 $generated@@224)))) (and (=> (= (ControlFlow 0 7) (- 0 10)) true) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (not (= $generated@@218 $generated@@40)) (not true))) (=> (or (not (= $generated@@218 $generated@@40)) (not true)) (=> (= $generated@@226  (or (not (= $generated@@40 ($generated@@66 $generated@@35 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@224 $generated@@218) $generated@@37)))) (not true))) (and (=> (= (ControlFlow 0 7) (- 0 8)) true) (=> (= (ControlFlow 0 7) (- 0 6)) (or (not (= $generated@@225 $generated@@40)) (not true))))))))))))))
(let (($generated@@268  (=> (and (not ($generated@@107 $generated@@209 ($generated@@102 $generated@@35 $generated@@227))) (= (ControlFlow 0 13) 7)) $generated@@264)))
(let (($generated@@269  (=> (and ($generated@@107 $generated@@209 ($generated@@102 $generated@@35 $generated@@227)) (= (ControlFlow 0 12) 7)) $generated@@264)))
(let (($generated@@270  (=> (and ($generated@@79 $generated@@35 $generated@@227 $generated@@82) ($generated@@71 $generated@@35 $generated@@227 $generated@@82 $generated@@219)) (and (=> (= (ControlFlow 0 14) 12) $generated@@269) (=> (= (ControlFlow 0 14) 13) $generated@@268)))))
(let (($generated@@271  (=> (and (not (and ($generated@@79 $generated@@35 $generated@@227 $generated@@82) ($generated@@71 $generated@@35 $generated@@227 $generated@@82 $generated@@219))) (= (ControlFlow 0 11) 7)) $generated@@264)))
(let (($generated@@272  (=> (and (= $generated@@206 0) (= $generated@@228 (= $generated@@229 $generated@@40))) (and (=> (= (ControlFlow 0 15) (- 0 19)) $generated@@230) (=> $generated@@230 (=> (= $generated@@231 (= $generated@@232 $generated@@40)) (and (=> (= (ControlFlow 0 15) (- 0 18)) (or (not (= $generated@@215 $generated@@40)) (not true))) (=> (or (not (= $generated@@215 $generated@@40)) (not true)) (=> (and (= $generated@@233 (= ($generated@@66 $generated@@35 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@219 $generated@@215) $generated@@88)) $generated@@40)) (= $generated@@234  (or (not (= $generated@@229 $generated@@40)) (not true)))) (and (=> (= (ControlFlow 0 15) (- 0 17)) $generated@@230) (=> $generated@@230 (=> (= $generated@@235  (or (not (= $generated@@232 $generated@@40)) (not true))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (not (= $generated@@215 $generated@@40)) (not true))) (=> (or (not (= $generated@@215 $generated@@40)) (not true)) (=> (= $generated@@236  (or (not (= ($generated@@66 $generated@@35 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@219 $generated@@215) $generated@@88)) $generated@@40)) (not true))) (=> (and (and (= $generated@@237 (= $generated@@40 $generated@@229)) (= $generated@@238 (= $generated@@229 $generated@@40))) (and (= $generated@@239 ($generated@@107 $generated@@209 ($generated@@102 $generated@@35 $generated@@40))) (= $generated@@240  (not ($generated@@107 $generated@@209 ($generated@@102 $generated@@35 $generated@@40)))))) (and (=> (= (ControlFlow 0 15) 14) $generated@@270) (=> (= (ControlFlow 0 15) 11) $generated@@271))))))))))))))))))
(let (($generated@@273  (=> (and (or (not (= $generated@@206 0)) (not true)) (= $generated@@241 (ite (<= $generated@@206 ($generated@@97 0)) (- 0 $generated@@206) (- $generated@@206 0)))) (=> (and (and (or (not (= $generated@@242 $generated@@40)) (not true)) (and ($generated@@79 $generated@@35 $generated@@242 $generated@@82) ($generated@@71 $generated@@35 $generated@@242 $generated@@82 $generated@@212))) (and ($generated@@39 $generated@@243) ($generated@@217 $generated@@243))) (=> (and (and (and (or (not (= $generated@@244 $generated@@40)) (not true)) (and ($generated@@79 $generated@@35 $generated@@244 $generated@@82) ($generated@@71 $generated@@35 $generated@@244 $generated@@82 $generated@@243))) (not ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@219 $generated@@244) $generated@@0))))) (and (forall (($generated@@274 T@U) ) (!  (=> (and (or (not (= $generated@@274 $generated@@40)) (not true)) ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@219 $generated@@274) $generated@@0)))) (= ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@243 $generated@@274) ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@219 $generated@@274)))
 :pattern ( ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@243 $generated@@274))
)) ($generated@@93 $generated@@219 $generated@@243))) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@79 $generated@@16 ($generated@@20 (- $generated@@206 1)) $generated@@72)) (=> ($generated@@79 $generated@@16 ($generated@@20 (- $generated@@206 1)) $generated@@72) (=> (= $generated@@245 (- $generated@@206 1)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (<= 0 $generated@@241) (= (ite (<= $generated@@245 ($generated@@97 0)) (- 0 $generated@@245) (- $generated@@245 0)) $generated@@241))) (=> (or (<= 0 $generated@@241) (= (ite (<= $generated@@245 ($generated@@97 0)) (- 0 $generated@@245) (- $generated@@245 0)) $generated@@241)) (=> (= (ControlFlow 0 3) (- 0 2)) (< (ite (<= $generated@@245 ($generated@@97 0)) (- 0 $generated@@245) (- $generated@@245 0)) $generated@@241))))))))))))
(let (($generated@@275  (=> $generated@@207 (and (=> (= (ControlFlow 0 20) 15) $generated@@272) (=> (= (ControlFlow 0 20) 3) $generated@@273)))))
(let (($generated@@276  (and (=> (= (ControlFlow 0 25) 24) $generated@@263) (=> (= (ControlFlow 0 25) 20) $generated@@275))))
(let (($generated@@277 true))
(let (($generated@@278  (=> (and (and ($generated@@39 $generated@@219) ($generated@@217 $generated@@219)) (and (=> $generated@@230 (and ($generated@@79 $generated@@35 $generated@@232 $generated@@82) ($generated@@71 $generated@@35 $generated@@232 $generated@@82 $generated@@219))) (<= ($generated@@97 0) $generated@@206))) (=> (and (and (and (and (not false) $generated@@230) true) (forall (($generated@@279 T@U) ) (!  (=> (and (or (not (= $generated@@279 $generated@@40)) (not true)) ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@212 $generated@@279) $generated@@0)))) (= ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@219 $generated@@279) ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@246 $generated@@279)))
 :pattern ( ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@219 $generated@@279))
))) (and (and ($generated@@93 $generated@@246 $generated@@219) (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (or (not (= $generated@@280 $generated@@40)) (not true)) ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@246 $generated@@280) $generated@@0)))) (or (= ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@219 $generated@@280) $generated@@281) ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@246 $generated@@280) $generated@@281)) ($generated@@19 ($generated@@163 $generated@@35 $generated@@33 $generated@@15 $generated@@247 $generated@@280 $generated@@281))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@219 $generated@@280) $generated@@281))
))) (and (=> true $generated@@230) (<= (ite (<= $generated@@206 ($generated@@97 0)) (- 0 $generated@@206) (- $generated@@206 0)) $generated@@248)))) (and (=> (= (ControlFlow 0 26) 1) $generated@@277) (=> (= (ControlFlow 0 26) 25) $generated@@276))))))
(let (($generated@@282  (=> (= $generated@@247 ($generated@@164 $generated@@40 $generated@@212 $generated@@0 false)) (=> (and (and (or (not (= $generated@@249 $generated@@40)) (not true)) (and ($generated@@79 $generated@@35 $generated@@249 $generated@@82) ($generated@@71 $generated@@35 $generated@@249 $generated@@82 $generated@@212))) (and ($generated@@39 $generated@@246) ($generated@@217 $generated@@246))) (=> (and (and (and (or (not (= $generated@@250 $generated@@40)) (not true)) (and ($generated@@79 $generated@@35 $generated@@250 $generated@@82) ($generated@@71 $generated@@35 $generated@@250 $generated@@82 $generated@@246))) (not ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@212 $generated@@250) $generated@@0))))) (and (and (forall (($generated@@283 T@U) ) (!  (=> (and (or (not (= $generated@@283 $generated@@40)) (not true)) ($generated@@19 ($generated@@66 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@212 $generated@@283) $generated@@0)))) (= ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@246 $generated@@283) ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@212 $generated@@283)))
 :pattern ( ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@246 $generated@@283))
)) ($generated@@93 $generated@@212 $generated@@246)) (and (= $generated@@248 (ite (<= $generated@@251 ($generated@@97 0)) (- 0 $generated@@251) (- $generated@@251 0))) (= (ControlFlow 0 27) 26)))) $generated@@278)))))
(let (($generated@@284  (=> (and (and ($generated@@39 $generated@@212) ($generated@@217 $generated@@212)) (and ($generated@@79 $generated@@35 $generated@@229 $generated@@82) ($generated@@71 $generated@@35 $generated@@229 $generated@@82 $generated@@212))) (=> (and (and (and (and ($generated@@79 $generated@@35 $generated@@215 $generated@@82) ($generated@@71 $generated@@35 $generated@@215 $generated@@82 $generated@@212)) (<= ($generated@@97 0) $generated@@251)) (and (and ($generated@@79 $generated@@105 $generated@@209 ($generated@@106 $generated@@82)) ($generated@@71 $generated@@105 $generated@@209 ($generated@@106 $generated@@82) $generated@@212)) (and (=> $generated@@252 (and ($generated@@79 $generated@@35 $generated@@253 $generated@@82) ($generated@@71 $generated@@35 $generated@@253 $generated@@82 $generated@@212))) true))) (and (and (and (<= ($generated@@97 0) $generated@@254) true) (and (=> $generated@@255 (and ($generated@@79 $generated@@35 $generated@@256 ($generated@@75 $generated@@80)) ($generated@@71 $generated@@35 $generated@@256 ($generated@@75 $generated@@80) $generated@@212))) true)) (and (and (=> $generated@@257 (and ($generated@@79 $generated@@35 $generated@@258 ($generated@@75 $generated@@82)) ($generated@@71 $generated@@35 $generated@@258 ($generated@@75 $generated@@82) $generated@@212))) true) (and (= 1 $generated@@259) (= (ControlFlow 0 28) 27))))) $generated@@282))))
$generated@@284))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
