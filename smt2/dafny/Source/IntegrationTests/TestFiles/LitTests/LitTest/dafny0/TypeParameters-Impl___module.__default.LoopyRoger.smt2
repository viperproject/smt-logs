(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 () Int)
(declare-fun $generated@@19 (T@U T@U) T@U)
(declare-fun $generated@@20 (T@T T@U) T@U)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@T T@T) T@T)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@36 (T@T) T@T)
(declare-fun $generated@@37 (T@T) T@T)
(declare-fun $generated@@58 (Int) Int)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@U T@U T@U) Bool)
(declare-fun $generated@@66 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@U T@U) Bool)
(declare-fun $generated@@90 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (= ($generated@@2 $generated@@21) 3))
(assert  (=> (<= 0 $generated@@18) (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (!  (=> (or ($generated@@22 $generated@@24 ($generated@@20 $generated@@21 $generated@@25)) (and (< 0 $generated@@18) ($generated@@23 $generated@@25 $generated@@24))) (= ($generated@@19 $generated@@24 ($generated@@20 $generated@@21 $generated@@25)) ($generated@@20 $generated@@21 $generated@@25)))
 :weight 3
 :pattern ( ($generated@@19 $generated@@24 ($generated@@20 $generated@@21 $generated@@25)))
))))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert  (=> (<= 0 $generated@@18) (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (or ($generated@@22 $generated@@27 $generated@@28) (and (< 0 $generated@@18) ($generated@@23 $generated@@28 $generated@@27))) ($generated@@23 ($generated@@19 $generated@@27 $generated@@28) $generated@@27))
 :pattern ( ($generated@@19 $generated@@27 $generated@@28))
))))
(assert  (and (and (and (and (and (and (forall (($generated@@38 T@T) ($generated@@39 T@T) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@30 $generated@@38 $generated@@39 ($generated@@35 $generated@@38 $generated@@39 $generated@@41 $generated@@42 $generated@@40) $generated@@42) $generated@@40)
 :weight 0
)) (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (or (= $generated@@47 $generated@@48) (= ($generated@@30 $generated@@43 $generated@@44 ($generated@@35 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@48) ($generated@@30 $generated@@43 $generated@@44 $generated@@46 $generated@@48)))
 :weight 0
))) (= ($generated@@2 $generated@@31) 4)) (= ($generated@@2 $generated@@32) 5)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ) (= ($generated@@2 ($generated@@33 $generated@@49 $generated@@50)) 6))) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (! (= ($generated@@36 ($generated@@33 $generated@@51 $generated@@52)) $generated@@51)
 :pattern ( ($generated@@33 $generated@@51 $generated@@52))
))) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (! (= ($generated@@37 ($generated@@33 $generated@@53 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@33 $generated@@53 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@29 $generated@@55 $generated@@56) (forall (($generated@@57 T@U) ) (!  (=> ($generated@@7 ($generated@@34 $generated@@3 ($generated@@30 $generated@@31 $generated@@21 ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@55 $generated@@57) $generated@@1))) ($generated@@7 ($generated@@34 $generated@@3 ($generated@@30 $generated@@31 $generated@@21 ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@56 $generated@@57) $generated@@1))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@21 ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@56 $generated@@57) $generated@@1))
)))
 :pattern ( ($generated@@29 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@59 Int) ) (! (= ($generated@@58 $generated@@59) $generated@@59)
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@20 $generated@@61 $generated@@60) $generated@@60)
 :pattern ( ($generated@@20 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 ($generated@@34 $generated@@64 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@34 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@65 ($generated@@62 $generated@@70 $generated@@67) $generated@@68 $generated@@69) ($generated@@66 $generated@@70 $generated@@67 $generated@@68 $generated@@69))
 :pattern ( ($generated@@65 ($generated@@62 $generated@@70 $generated@@67) $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> ($generated@@29 $generated@@71 $generated@@72) (=> ($generated@@65 $generated@@73 $generated@@74 $generated@@71) ($generated@@65 $generated@@73 $generated@@74 $generated@@72)))
 :pattern ( ($generated@@29 $generated@@71 $generated@@72) ($generated@@65 $generated@@73 $generated@@74 $generated@@71))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (!  (=> ($generated@@29 $generated@@75 $generated@@76) (=> ($generated@@66 $generated@@79 $generated@@77 $generated@@78 $generated@@75) ($generated@@66 $generated@@79 $generated@@77 $generated@@78 $generated@@76)))
 :pattern ( ($generated@@29 $generated@@75 $generated@@76) ($generated@@66 $generated@@79 $generated@@77 $generated@@78 $generated@@75))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (or (not (= $generated@@80 $generated@@82)) (not true)) (=> (and ($generated@@29 $generated@@80 $generated@@81) ($generated@@29 $generated@@81 $generated@@82)) ($generated@@29 $generated@@80 $generated@@82)))
 :pattern ( ($generated@@29 $generated@@80 $generated@@81) ($generated@@29 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@23 $generated@@84 $generated) (and (= ($generated@@62 $generated@@3 ($generated@@34 $generated@@3 $generated@@84)) $generated@@84) ($generated@@83 $generated@@3 ($generated@@34 $generated@@3 $generated@@84) $generated)))
 :pattern ( ($generated@@23 $generated@@84 $generated))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@23 ($generated@@62 $generated@@87 $generated@@85) $generated@@86) ($generated@@83 $generated@@87 $generated@@85 $generated@@86))
 :pattern ( ($generated@@23 ($generated@@62 $generated@@87 $generated@@85) $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@34 $generated@@89 ($generated@@62 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@62 $generated@@89 $generated@@88))
)))
(assert  (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@90 $generated@@93 $generated@@94 $generated@@95 ($generated@@92 $generated@@93 $generated@@94 $generated@@95 $generated@@97 $generated@@98 $generated@@99 $generated@@96) $generated@@98 $generated@@99) $generated@@96)
 :weight 0
)) (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@105 $generated@@107) (= ($generated@@90 $generated@@100 $generated@@101 $generated@@102 ($generated@@92 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@107 $generated@@108) ($generated@@90 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@107 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@90 $generated@@109 $generated@@110 $generated@@111 ($generated@@92 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@90 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 Bool) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@7 ($generated@@90 $generated@@32 $generated@@31 $generated@@3 ($generated@@91 $generated@@118 $generated@@119 $generated@@120 $generated@@121) $generated@@122 $generated@@123))  (=> (and (or (not (= $generated@@122 $generated@@118)) (not true)) ($generated@@7 ($generated@@34 $generated@@3 ($generated@@30 $generated@@31 $generated@@21 ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@119 $generated@@122) $generated@@120)))) $generated@@121))
 :pattern ( ($generated@@90 $generated@@32 $generated@@31 $generated@@3 ($generated@@91 $generated@@118 $generated@@119 $generated@@120 $generated@@121) $generated@@122 $generated@@123))
)))
(assert  (=> (<= 0 $generated@@18) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (or ($generated@@22 $generated@@124 $generated@@125) (and (< 0 $generated@@18) ($generated@@23 $generated@@125 $generated@@124))) (= ($generated@@19 $generated@@124 $generated@@125) $generated@@125))
 :pattern ( ($generated@@19 $generated@@124 $generated@@125))
))))
(assert  (=> (<= 0 $generated@@18) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (or ($generated@@22 $generated@@128 $generated@@129) (and (< 0 $generated@@18) (and ($generated@@23 $generated@@129 $generated@@128) ($generated@@65 $generated@@129 $generated@@128 $generated@@127)))) ($generated@@126 $generated@@127)) ($generated@@65 ($generated@@19 $generated@@128 $generated@@129) $generated@@128 $generated@@127))
 :pattern ( ($generated@@65 ($generated@@19 $generated@@128 $generated@@129) $generated@@128 $generated@@127))
))))
(assert (forall (($generated@@130 Int) ) (! (= ($generated@@62 $generated@@4 ($generated@@8 ($generated@@58 $generated@@130))) ($generated@@20 $generated@@21 ($generated@@62 $generated@@4 ($generated@@8 $generated@@130))))
 :pattern ( ($generated@@62 $generated@@4 ($generated@@8 ($generated@@58 $generated@@130))))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@62 $generated@@132 ($generated@@20 $generated@@132 $generated@@131)) ($generated@@20 $generated@@21 ($generated@@62 $generated@@132 $generated@@131)))
 :pattern ( ($generated@@62 $generated@@132 ($generated@@20 $generated@@132 $generated@@131)))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! ($generated@@66 $generated@@3 $generated@@134 $generated $generated@@133)
 :pattern ( ($generated@@66 $generated@@3 $generated@@134 $generated $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (! ($generated@@83 $generated@@3 $generated@@135 $generated)
 :pattern ( ($generated@@83 $generated@@3 $generated@@135 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 () Bool)
(declare-fun $generated@@138 () Bool)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 () Int)
(declare-fun $generated@@141 () Int)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () Int)
(declare-fun $generated@@157 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@158 true))
(let (($generated@@159  (=> (and (< $generated@@136 ($generated@@58 0)) (= (ControlFlow 0 24) 22)) $generated@@158)))
(let (($generated@@160  (=> (and (<= ($generated@@58 0) $generated@@136) (= (ControlFlow 0 23) 22)) $generated@@158)))
(let (($generated@@161  (=> (not $generated@@137) (and (=> (= (ControlFlow 0 25) 23) $generated@@160) (=> (= (ControlFlow 0 25) 24) $generated@@159)))))
(let (($generated@@162 true))
(let (($generated@@163  (=> (and (< $generated@@136 ($generated@@58 0)) (= (ControlFlow 0 15) 13)) $generated@@162)))
(let (($generated@@164  (=> (and (<= ($generated@@58 0) $generated@@136) (= (ControlFlow 0 14) 13)) $generated@@162)))
(let (($generated@@165  (=> (not $generated@@138) (and (=> (= (ControlFlow 0 16) 14) $generated@@164) (=> (= (ControlFlow 0 16) 15) $generated@@163)))))
(let (($generated@@166  (=> (< $generated@@139 $generated@@136) (=> (and (= $generated@@140 (- $generated@@136 $generated@@139)) (= $generated@@141 (+ $generated@@139 2))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (or (<= 0 $generated@@140) (= (- $generated@@136 $generated@@141) $generated@@140))) (=> (or (<= 0 $generated@@140) (= (- $generated@@136 $generated@@141) $generated@@140)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (< (- $generated@@136 $generated@@141) $generated@@140)) (=> (< (- $generated@@136 $generated@@141) $generated@@140) (=> (and (and (and ($generated@@22 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@141 $generated@@136))))) (= (ControlFlow 0 9) (- 0 8))) $generated@@138) ($generated@@22 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@141 $generated@@136)))))) (or ($generated@@7 ($generated@@34 $generated@@3 ($generated@@19 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@141 $generated@@136))))))) (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@141 $generated@@136))))))))))))
(let (($generated@@167 true))
(let (($generated@@168  (=> $generated@@138 (and (=> (= (ControlFlow 0 12) 7) $generated@@167) (=> (= (ControlFlow 0 12) 9) $generated@@166)))))
(let (($generated@@169  (and (=> (= (ControlFlow 0 17) 16) $generated@@165) (=> (= (ControlFlow 0 17) 12) $generated@@168))))
(let (($generated@@170 true))
(let (($generated@@171  (=> (and (and (and (and (and (not false) (<= 0 $generated@@139)) $generated@@137) (=> $generated@@138 ($generated@@22 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@139 $generated@@136))))))) (and (=> $generated@@138 (=> ($generated@@22 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@139 $generated@@136))))) (or ($generated@@7 ($generated@@34 $generated@@3 ($generated@@19 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@139 $generated@@136))))))) (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@139 $generated@@136))))) (=> $generated@@138 (and ($generated@@22 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@139 $generated@@136))))) (and ($generated@@7 ($generated@@34 $generated@@3 ($generated@@19 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@139 $generated@@136))))))) (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@139 $generated@@136))))))) (and (and (forall (($generated@@172 T@U) ) (!  (=> (and (or (not (= $generated@@172 $generated@@143)) (not true)) ($generated@@7 ($generated@@34 $generated@@3 ($generated@@30 $generated@@31 $generated@@21 ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@172) $generated@@1)))) (= ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@172) ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@172)))
 :pattern ( ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@172))
)) ($generated@@29 $generated@@142 $generated@@142)) (and (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (or (not (= $generated@@173 $generated@@143)) (not true)) ($generated@@7 ($generated@@34 $generated@@3 ($generated@@30 $generated@@31 $generated@@21 ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@173) $generated@@1)))) (or (= ($generated@@30 $generated@@31 $generated@@21 ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@173) $generated@@174) ($generated@@30 $generated@@31 $generated@@21 ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@173) $generated@@174)) ($generated@@7 ($generated@@90 $generated@@32 $generated@@31 $generated@@3 $generated@@144 $generated@@173 $generated@@174))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@21 ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@173) $generated@@174))
)) (<= (- $generated@@136 $generated@@139) $generated@@145)))) (and (=> (= (ControlFlow 0 18) 6) $generated@@170) (=> (= (ControlFlow 0 18) 17) $generated@@169)))))
(let (($generated@@175  (=> (<= $generated@@136 $generated@@146) (=> (and (= $generated@@147 ($generated@@58 0)) (= $generated@@145 (- $generated@@136 $generated@@147))) (and (=> (= (ControlFlow 0 19) (- 0 20)) (=> $generated@@138 (=> ($generated@@22 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@147 $generated@@136))))) (or ($generated@@7 ($generated@@34 $generated@@3 ($generated@@19 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@147 $generated@@136))))))) (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@147 $generated@@136)))))) (=> (=> $generated@@138 (=> ($generated@@22 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@147 $generated@@136))))) (or ($generated@@7 ($generated@@34 $generated@@3 ($generated@@19 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@147 $generated@@136))))))) (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@147 $generated@@136))))) (=> (= (ControlFlow 0 19) 18) $generated@@171)))))))
(let (($generated@@176  (=> (< $generated@@146 $generated@@136) (=> (and (= $generated@@148 (- $generated@@136 $generated@@146)) (= $generated@@149 (+ $generated@@146 1))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (<= 0 $generated@@148) (= (- $generated@@136 $generated@@149) $generated@@148))) (=> (or (<= 0 $generated@@148) (= (- $generated@@136 $generated@@149) $generated@@148)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (< (- $generated@@136 $generated@@149) $generated@@148)) (=> (< (- $generated@@136 $generated@@149) $generated@@148) (=> (and (and (and ($generated@@22 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@149 $generated@@136))))) (= (ControlFlow 0 3) (- 0 2))) $generated@@137) ($generated@@22 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@149 $generated@@136)))))) (or ($generated@@7 ($generated@@34 $generated@@3 ($generated@@19 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@149 $generated@@136))))))) (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@149 $generated@@136))))))))))))
(let (($generated@@177  (=> $generated@@137 (and (=> (= (ControlFlow 0 21) 19) $generated@@175) (=> (= (ControlFlow 0 21) 3) $generated@@176)))))
(let (($generated@@178  (and (=> (= (ControlFlow 0 26) 25) $generated@@161) (=> (= (ControlFlow 0 26) 21) $generated@@177))))
(let (($generated@@179 true))
(let (($generated@@180  (=> (and (and (and (and (not false) (<= 0 $generated@@146)) (=> $generated@@137 ($generated@@22 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@146 $generated@@136))))))) (and (=> $generated@@137 (=> ($generated@@22 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@146 $generated@@136))))) (or ($generated@@7 ($generated@@34 $generated@@3 ($generated@@19 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@146 $generated@@136))))))) (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@146 $generated@@136))))) (=> $generated@@137 (and ($generated@@22 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@146 $generated@@136))))) (and ($generated@@7 ($generated@@34 $generated@@3 ($generated@@19 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@146 $generated@@136))))))) (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@146 $generated@@136))))))) (and (and (forall (($generated@@181 T@U) ) (!  (=> (and (or (not (= $generated@@181 $generated@@143)) (not true)) ($generated@@7 ($generated@@34 $generated@@3 ($generated@@30 $generated@@31 $generated@@21 ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@181) $generated@@1)))) (= ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@181) ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@181)))
 :pattern ( ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@181))
)) ($generated@@29 $generated@@142 $generated@@142)) (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (or (not (= $generated@@182 $generated@@143)) (not true)) ($generated@@7 ($generated@@34 $generated@@3 ($generated@@30 $generated@@31 $generated@@21 ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@182) $generated@@1)))) (or (= ($generated@@30 $generated@@31 $generated@@21 ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@182) $generated@@183) ($generated@@30 $generated@@31 $generated@@21 ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@182) $generated@@183)) ($generated@@7 ($generated@@90 $generated@@32 $generated@@31 $generated@@3 $generated@@144 $generated@@182 $generated@@183))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@21 ($generated@@30 $generated@@32 ($generated@@33 $generated@@31 $generated@@21) $generated@@142 $generated@@182) $generated@@183))
)) (<= (- $generated@@136 $generated@@146) $generated@@150)))) (and (=> (= (ControlFlow 0 27) 1) $generated@@179) (=> (= (ControlFlow 0 27) 26) $generated@@178)))))
(let (($generated@@184  (=> (and (= $generated@@151 ($generated@@152 $generated@@153)) (= $generated@@154 ($generated@@152 ($generated@@152 $generated@@153)))) (=> (and (and (= ($generated@@155 $generated@@153) $generated@@153) (= $generated@@144 ($generated@@91 $generated@@143 $generated@@142 $generated@@1 false))) (and (= $generated@@156 ($generated@@58 0)) (= $generated@@150 (- $generated@@136 $generated@@156)))) (and (=> (= (ControlFlow 0 28) (- 0 29)) (=> $generated@@137 (=> ($generated@@22 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@156 $generated@@136))))) (or ($generated@@7 ($generated@@34 $generated@@3 ($generated@@19 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@156 $generated@@136))))))) (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@156 $generated@@136)))))) (=> (=> $generated@@137 (=> ($generated@@22 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@156 $generated@@136))))) (or ($generated@@7 ($generated@@34 $generated@@3 ($generated@@19 $generated ($generated@@62 $generated@@3 ($generated@@6  (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@156 $generated@@136))))))) (=> (<= ($generated@@58 0) $generated@@136) (<= $generated@@156 $generated@@136))))) (=> (= (ControlFlow 0 28) 27) $generated@@180)))))))
(let (($generated@@185  (=> (and (and ($generated@@126 $generated@@142) ($generated@@157 $generated@@142)) (and (= 1 $generated@@18) (= (ControlFlow 0 30) 28))) $generated@@184)))
$generated@@185)))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 9) (- 8))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
