(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@U T@U) Bool)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@55 (T@U T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@74 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@78 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@135 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@23 ($generated@@22 $generated@@24 $generated@@25) $generated@@25)
 :pattern ( ($generated@@22 $generated@@24 $generated@@25))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@23 $generated@@26 $generated@@28) ($generated@@23 ($generated@@22 $generated@@26 $generated@@27) $generated@@28))
 :pattern ( ($generated@@22 $generated@@26 $generated@@27) ($generated@@23 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@29 $generated@@7 $generated@@31 $generated@@30 $generated@@32)
 :pattern ( ($generated@@29 $generated@@7 $generated@@31 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@23 ($generated@@22 $generated@@33 $generated@@34) $generated@@35)  (or (= $generated@@35 $generated@@34) ($generated@@23 $generated@@33 $generated@@35)))
 :pattern ( ($generated@@23 ($generated@@22 $generated@@33 $generated@@34) $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ) (!  (not ($generated@@23 $generated@@36 $generated@@37))
 :pattern ( ($generated@@23 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@39 Int) ) (! (= ($generated@@38 $generated@@39) $generated@@39)
 :pattern ( ($generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@40 $generated@@42 $generated@@41) $generated@@41)
 :pattern ( ($generated@@40 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 ($generated@@43 $generated@@46 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@43 $generated@@46 $generated@@45))
)))
(assert (= ($generated@@5 $generated@@48) 3))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@47 $generated@@48 $generated@@51 ($generated@@49 $generated@@52)) (forall (($generated@@53 T@U) ) (!  (=> ($generated@@23 $generated@@51 $generated@@53) ($generated@@50 $generated@@53 $generated@@52))
 :pattern ( ($generated@@23 $generated@@51 $generated@@53))
)))
 :pattern ( ($generated@@47 $generated@@48 $generated@@51 ($generated@@49 $generated@@52)))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@47 $generated@@7 $generated@@54 $generated@@30) (<= ($generated@@38 0) ($generated@@12 $generated@@54)))
 :pattern ( ($generated@@47 $generated@@7 $generated@@54 $generated@@30))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@55 ($generated@@44 $generated@@59 $generated@@56) $generated@@57 $generated@@58) ($generated@@29 $generated@@59 $generated@@56 $generated@@57 $generated@@58))
 :pattern ( ($generated@@55 ($generated@@44 $generated@@59 $generated@@56) $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@50 $generated@@60 $generated@@30) (and (= ($generated@@44 $generated@@7 ($generated@@43 $generated@@7 $generated@@60)) $generated@@60) ($generated@@47 $generated@@7 ($generated@@43 $generated@@7 $generated@@60) $generated@@30)))
 :pattern ( ($generated@@50 $generated@@60 $generated@@30))
)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@50 $generated@@61 $generated) (and (= ($generated@@44 $generated@@7 ($generated@@43 $generated@@7 $generated@@61)) $generated@@61) ($generated@@47 $generated@@7 ($generated@@43 $generated@@7 $generated@@61) $generated)))
 :pattern ( ($generated@@50 $generated@@61 $generated))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@50 ($generated@@44 $generated@@64 $generated@@62) $generated@@63) ($generated@@47 $generated@@64 $generated@@62 $generated@@63))
 :pattern ( ($generated@@50 ($generated@@44 $generated@@64 $generated@@62) $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@29 $generated@@48 $generated@@65 ($generated@@49 $generated@@66) $generated@@67) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@23 $generated@@65 $generated@@68) ($generated@@55 $generated@@68 $generated@@66 $generated@@67))
 :pattern ( ($generated@@23 $generated@@65 $generated@@68))
)))
 :pattern ( ($generated@@29 $generated@@48 $generated@@65 ($generated@@49 $generated@@66) $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 ($generated@@49 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@49 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@21 ($generated@@49 $generated@@71)) $generated@@1)
 :pattern ( ($generated@@49 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@43 $generated@@73 ($generated@@44 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@44 $generated@@73 $generated@@72))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@74 $generated@@85 $generated@@86 $generated@@87 ($generated@@81 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@90 $generated@@91 $generated@@88) $generated@@90 $generated@@91) $generated@@88)
 :weight 0
)) (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or (= $generated@@97 $generated@@99) (= ($generated@@74 $generated@@92 $generated@@93 $generated@@94 ($generated@@81 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@99 $generated@@100) ($generated@@74 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@99 $generated@@100)))
 :weight 0
)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@107 $generated@@109) (= ($generated@@74 $generated@@101 $generated@@102 $generated@@103 ($generated@@81 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@108 $generated@@109) ($generated@@74 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@108 $generated@@109)))
 :weight 0
)))) (= ($generated@@5 $generated@@75) 4)) (= ($generated@@5 $generated@@76) 5)) (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@78 $generated@@110 $generated@@111 ($generated@@82 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@112) $generated@@114) $generated@@112)
 :weight 0
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@78 $generated@@115 $generated@@116 ($generated@@82 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@78 $generated@@115 $generated@@116 $generated@@118 $generated@@120)))
 :weight 0
))) (= ($generated@@5 $generated@@79) 6)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@5 ($generated@@80 $generated@@121 $generated@@122)) 7))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@80 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@80 $generated@@125 $generated@@126))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 Bool) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@10 ($generated@@74 $generated@@75 $generated@@76 $generated@@6 ($generated@@77 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))  (=> (and (or (not (= $generated@@131 $generated@@127)) (not true)) ($generated@@10 ($generated@@43 $generated@@6 ($generated@@78 $generated@@76 $generated@@79 ($generated@@78 $generated@@75 ($generated@@80 $generated@@76 $generated@@79) $generated@@128 $generated@@131) $generated@@129)))) $generated@@130))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76 $generated@@6 ($generated@@77 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> ($generated@@50 $generated@@133 ($generated@@49 $generated@@134)) (and (= ($generated@@44 $generated@@48 ($generated@@43 $generated@@48 $generated@@133)) $generated@@133) ($generated@@47 $generated@@48 ($generated@@43 $generated@@48 $generated@@133) ($generated@@49 $generated@@134))))
 :pattern ( ($generated@@50 $generated@@133 ($generated@@49 $generated@@134)))
)))
(assert (= ($generated@@21 $generated@@30) $generated@@3))
(assert (= ($generated@@135 $generated@@30) $generated@@4))
(assert (forall (($generated@@136 Int) ) (! (= ($generated@@44 $generated@@7 ($generated@@11 ($generated@@38 $generated@@136))) ($generated@@40 $generated@@79 ($generated@@44 $generated@@7 ($generated@@11 $generated@@136))))
 :pattern ( ($generated@@44 $generated@@7 ($generated@@11 ($generated@@38 $generated@@136))))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@44 $generated@@138 ($generated@@40 $generated@@138 $generated@@137)) ($generated@@40 $generated@@79 ($generated@@44 $generated@@138 $generated@@137)))
 :pattern ( ($generated@@44 $generated@@138 ($generated@@40 $generated@@138 $generated@@137)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! ($generated@@29 $generated@@7 $generated@@140 $generated $generated@@139)
 :pattern ( ($generated@@29 $generated@@7 $generated@@140 $generated $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! ($generated@@47 $generated@@7 $generated@@141 $generated)
 :pattern ( ($generated@@47 $generated@@7 $generated@@141 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@153  (=> (= $generated@@142 ($generated@@77 $generated@@143 $generated@@144 $generated@@2 false)) (=> (and ($generated@@47 $generated@@48 $generated@@145 ($generated@@49 $generated)) ($generated@@29 $generated@@48 $generated@@145 ($generated@@49 $generated) $generated@@144)) (=> (and (and ($generated@@47 $generated@@48 $generated@@146 ($generated@@49 $generated@@30)) ($generated@@29 $generated@@48 $generated@@146 ($generated@@49 $generated@@30) $generated@@144)) (and (= $generated@@147 ($generated@@40 $generated@@48 ($generated@@22 ($generated@@22 $generated@@36 ($generated@@44 $generated@@7 ($generated@@11 ($generated@@38 5)))) ($generated@@44 $generated@@7 ($generated@@11 ($generated@@38 7)))))) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@47 $generated@@48 $generated@@147 ($generated@@49 $generated@@30)))))))
(let (($generated@@154  (=> (and ($generated@@148 $generated@@144) ($generated@@149 $generated@@144)) (=> (and (and ($generated@@47 $generated@@48 $generated@@150 ($generated@@49 $generated)) ($generated@@29 $generated@@48 $generated@@150 ($generated@@49 $generated) $generated@@144)) true) (=> (and (and (and ($generated@@47 $generated@@48 $generated@@151 ($generated@@49 $generated@@30)) ($generated@@29 $generated@@48 $generated@@151 ($generated@@49 $generated@@30) $generated@@144)) true) (and (= 0 $generated@@152) (= (ControlFlow 0 3) 2))) $generated@@153)))))
$generated@@154)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
