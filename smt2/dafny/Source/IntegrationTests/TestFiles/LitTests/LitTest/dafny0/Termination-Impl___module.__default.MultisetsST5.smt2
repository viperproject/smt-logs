(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (T@U T@U) T@U)
(declare-fun $generated@@19 (T@U T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@23 (Int Int) Int)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) Int)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@T T@T) T@T)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@68 (Int) Int)
(declare-fun $generated@@70 (Int) Int)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@108 (T@U T@U) Bool)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@124 () T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (!  (and (= (+ (+ ($generated@@17 ($generated@@18 $generated@@21 $generated@@22)) ($generated@@17 ($generated@@18 $generated@@22 $generated@@21))) (* 2 ($generated@@17 ($generated@@19 $generated@@21 $generated@@22)))) ($generated@@17 ($generated@@20 $generated@@21 $generated@@22))) (= ($generated@@17 ($generated@@18 $generated@@21 $generated@@22)) (- ($generated@@17 $generated@@21) ($generated@@17 ($generated@@19 $generated@@21 $generated@@22)))))
 :pattern ( ($generated@@17 ($generated@@18 $generated@@21 $generated@@22)))
)))
(assert (forall (($generated@@24 Int) ($generated@@25 Int) ) (!  (or (= ($generated@@23 $generated@@24 $generated@@25) $generated@@24) (= ($generated@@23 $generated@@24 $generated@@25) $generated@@25))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25))
)))
(assert (= ($generated@@1 $generated@@27) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@29 $generated@@30))
 :pattern ( ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31)))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (<= ($generated@@32 $generated@@33 $generated@@35) ($generated@@32 $generated@@34 $generated@@35)) (= ($generated@@32 ($generated@@18 $generated@@33 $generated@@34) $generated@@35) 0))
 :pattern ( ($generated@@18 $generated@@33 $generated@@34) ($generated@@32 $generated@@34 $generated@@35) ($generated@@32 $generated@@33 $generated@@35))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@19 ($generated@@19 $generated@@36 $generated@@37) $generated@@37) ($generated@@19 $generated@@36 $generated@@37))
 :pattern ( ($generated@@19 ($generated@@19 $generated@@36 $generated@@37) $generated@@37))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@39 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@39 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@39 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@1 $generated@@40) 4)) (= ($generated@@1 $generated@@41) 5)) (= ($generated@@1 $generated@@42) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@1 ($generated@@43 $generated@@59 $generated@@60)) 7))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@43 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@43 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@43 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@43 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> ($generated@@38 $generated@@65 $generated@@66) (forall (($generated@@67 T@U) ) (!  (=> ($generated@@6 ($generated@@44 $generated@@2 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@42 ($generated@@43 $generated@@40 $generated@@41) $generated@@65 $generated@@67) $generated@@0))) ($generated@@6 ($generated@@44 $generated@@2 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@42 ($generated@@43 $generated@@40 $generated@@41) $generated@@66 $generated@@67) $generated@@0))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@42 ($generated@@43 $generated@@40 $generated@@41) $generated@@66 $generated@@67) $generated@@0))
)))
 :pattern ( ($generated@@38 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 Int) ) (!  (=> (<= 0 $generated@@69) (= ($generated@@68 $generated@@69) $generated@@69))
 :pattern ( ($generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 Int) ) (! (= ($generated@@70 $generated@@71) $generated@@71)
 :pattern ( ($generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@32 ($generated@@19 $generated@@75 $generated@@76) $generated@@77) ($generated@@23 ($generated@@32 $generated@@75 $generated@@77) ($generated@@32 $generated@@76 $generated@@77)))
 :pattern ( ($generated@@32 ($generated@@19 $generated@@75 $generated@@76) $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 ($generated@@44 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@44 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (or (not (= $generated@@83 $generated@@84)) (not true)) (= ($generated@@32 $generated@@82 $generated@@84) ($generated@@32 ($generated@@81 $generated@@82 $generated@@83) $generated@@84)))
 :pattern ( ($generated@@81 $generated@@82 $generated@@83) ($generated@@32 $generated@@82 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@17 ($generated@@81 $generated@@85 $generated@@86)) (+ ($generated@@17 $generated@@85) 1))
 :pattern ( ($generated@@17 ($generated@@81 $generated@@85 $generated@@86)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@87 $generated@@88 $generated@@89) (forall (($generated@@90 T@U) ) (!  (or (= ($generated@@32 $generated@@88 $generated@@90) 0) (= ($generated@@32 $generated@@89 $generated@@90) 0))
 :pattern ( ($generated@@32 $generated@@88 $generated@@90))
 :pattern ( ($generated@@32 $generated@@89 $generated@@90))
)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@91 ($generated@@78 $generated@@96 $generated@@93) $generated@@94 $generated@@95) ($generated@@92 $generated@@96 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@91 ($generated@@78 $generated@@96 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@38 $generated@@97 $generated@@98) (=> ($generated@@91 $generated@@99 $generated@@100 $generated@@97) ($generated@@91 $generated@@99 $generated@@100 $generated@@98)))
 :pattern ( ($generated@@38 $generated@@97 $generated@@98) ($generated@@91 $generated@@99 $generated@@100 $generated@@97))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (!  (=> ($generated@@38 $generated@@101 $generated@@102) (=> ($generated@@92 $generated@@105 $generated@@103 $generated@@104 $generated@@101) ($generated@@92 $generated@@105 $generated@@103 $generated@@104 $generated@@102)))
 :pattern ( ($generated@@38 $generated@@101 $generated@@102) ($generated@@92 $generated@@105 $generated@@103 $generated@@104 $generated@@101))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@17 ($generated@@20 $generated@@106 $generated@@107)) (+ ($generated@@17 $generated@@106) ($generated@@17 $generated@@107)))
 :pattern ( ($generated@@17 ($generated@@20 $generated@@106 $generated@@107)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> ($generated@@108 $generated@@109 $generated@@110) (= $generated@@109 $generated@@110))
 :pattern ( ($generated@@108 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@112 ($generated@@28 $generated@@113)) (forall (($generated@@114 T@U) ) (!  (=> (< 0 ($generated@@32 $generated@@112 $generated@@114)) ($generated@@111 $generated@@114 $generated@@113))
 :pattern ( ($generated@@32 $generated@@112 $generated@@114))
)))
 :pattern ( ($generated@@26 $generated@@27 $generated@@112 ($generated@@28 $generated@@113)))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or (not (= $generated@@115 $generated@@117)) (not true)) (=> (and ($generated@@38 $generated@@115 $generated@@116) ($generated@@38 $generated@@116 $generated@@117)) ($generated@@38 $generated@@115 $generated@@117)))
 :pattern ( ($generated@@38 $generated@@115 $generated@@116) ($generated@@38 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@111 ($generated@@78 $generated@@120 $generated@@118) $generated@@119) ($generated@@26 $generated@@120 $generated@@118 $generated@@119))
 :pattern ( ($generated@@111 ($generated@@78 $generated@@120 $generated@@118) $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@29 $generated@@121) (forall (($generated@@122 T@U) ) (!  (and (<= 0 ($generated@@32 $generated@@121 $generated@@122)) (<= ($generated@@32 $generated@@121 $generated@@122) ($generated@@17 $generated@@121)))
 :pattern ( ($generated@@32 $generated@@121 $generated@@122))
)))
 :pattern ( ($generated@@29 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (<= 0 ($generated@@17 $generated@@123))
 :pattern ( ($generated@@17 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@32 $generated@@124 $generated@@125) 0)
 :pattern ( ($generated@@32 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@32 ($generated@@81 $generated@@126 $generated@@127) $generated@@127) (+ ($generated@@32 $generated@@126 $generated@@127) 1))
 :pattern ( ($generated@@81 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@28 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@28 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@28 $generated@@131)) $generated)
 :pattern ( ($generated@@28 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@44 $generated@@133 ($generated@@78 $generated@@133 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@78 $generated@@133 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@19 $generated@@134 ($generated@@19 $generated@@134 $generated@@135)) ($generated@@19 $generated@@134 $generated@@135))
 :pattern ( ($generated@@19 $generated@@134 ($generated@@19 $generated@@134 $generated@@135)))
)))
(assert (forall (($generated@@136 T@U) ) (!  (and (= (= ($generated@@17 $generated@@136) 0) (= $generated@@136 $generated@@124)) (=> (or (not (= ($generated@@17 $generated@@136) 0)) (not true)) (exists (($generated@@137 T@U) ) (! (< 0 ($generated@@32 $generated@@136 $generated@@137))
 :pattern ( ($generated@@32 $generated@@136 $generated@@137))
))))
 :pattern ( ($generated@@17 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@32 ($generated@@20 $generated@@138 $generated@@139) $generated@@140) (+ ($generated@@32 $generated@@138 $generated@@140) ($generated@@32 $generated@@139 $generated@@140)))
 :pattern ( ($generated@@32 ($generated@@20 $generated@@138 $generated@@139) $generated@@140))
)))
(assert  (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@141 $generated@@144 $generated@@145 $generated@@146 ($generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@141 $generated@@151 $generated@@152 $generated@@153 ($generated@@143 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@141 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@141 $generated@@160 $generated@@161 $generated@@162 ($generated@@143 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@141 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@6 ($generated@@141 $generated@@42 $generated@@40 $generated@@2 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@6 ($generated@@44 $generated@@2 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@42 ($generated@@43 $generated@@40 $generated@@41) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@141 $generated@@42 $generated@@40 $generated@@2 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 Int) ($generated@@176 Int) ) (! (= (<= $generated@@175 $generated@@176) (= ($generated@@23 $generated@@175 $generated@@176) $generated@@175))
 :pattern ( ($generated@@23 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 Int) ($generated@@178 Int) ) (! (= (<= $generated@@178 $generated@@177) (= ($generated@@23 $generated@@177 $generated@@178) $generated@@178))
 :pattern ( ($generated@@23 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@111 $generated@@179 ($generated@@28 $generated@@180)) (and (= ($generated@@78 $generated@@27 ($generated@@44 $generated@@27 $generated@@179)) $generated@@179) ($generated@@26 $generated@@27 ($generated@@44 $generated@@27 $generated@@179) ($generated@@28 $generated@@180))))
 :pattern ( ($generated@@111 $generated@@179 ($generated@@28 $generated@@180)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@32 ($generated@@18 $generated@@181 $generated@@182) $generated@@183) ($generated@@68 (- ($generated@@32 $generated@@181 $generated@@183) ($generated@@32 $generated@@182 $generated@@183))))
 :pattern ( ($generated@@32 ($generated@@18 $generated@@181 $generated@@182) $generated@@183))
)))
(assert (forall (($generated@@184 Int) ) (!  (=> (< $generated@@184 0) (= ($generated@@68 $generated@@184) 0))
 :pattern ( ($generated@@68 $generated@@184))
)))
(assert (forall (($generated@@185 Int) ) (! (= ($generated@@78 $generated@@3 ($generated@@7 ($generated@@70 $generated@@185))) ($generated@@72 $generated@@41 ($generated@@78 $generated@@3 ($generated@@7 $generated@@185))))
 :pattern ( ($generated@@78 $generated@@3 ($generated@@7 ($generated@@70 $generated@@185))))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@T) ) (! (= ($generated@@78 $generated@@187 ($generated@@72 $generated@@187 $generated@@186)) ($generated@@72 $generated@@41 ($generated@@78 $generated@@187 $generated@@186)))
 :pattern ( ($generated@@78 $generated@@187 ($generated@@72 $generated@@187 $generated@@186)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (< 0 ($generated@@32 $generated@@188 $generated@@190)) (< 0 ($generated@@32 ($generated@@81 $generated@@188 $generated@@189) $generated@@190)))
 :pattern ( ($generated@@81 $generated@@188 $generated@@189) ($generated@@32 $generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= (< 0 ($generated@@32 ($generated@@81 $generated@@191 $generated@@192) $generated@@193))  (or (= $generated@@193 $generated@@192) (< 0 ($generated@@32 $generated@@191 $generated@@193))))
 :pattern ( ($generated@@32 ($generated@@81 $generated@@191 $generated@@192) $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@108 $generated@@194 $generated@@195) (forall (($generated@@196 T@U) ) (! (= ($generated@@32 $generated@@194 $generated@@196) ($generated@@32 $generated@@195 $generated@@196))
 :pattern ( ($generated@@32 $generated@@194 $generated@@196))
 :pattern ( ($generated@@32 $generated@@195 $generated@@196))
)))
 :pattern ( ($generated@@108 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@197 $generated@@198 $generated@@199) (forall (($generated@@200 T@U) ) (! (<= ($generated@@32 $generated@@198 $generated@@200) ($generated@@32 $generated@@199 $generated@@200))
 :pattern ( ($generated@@32 $generated@@198 $generated@@200))
 :pattern ( ($generated@@32 $generated@@199 $generated@@200))
)))
 :pattern ( ($generated@@197 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@92 $generated@@27 $generated@@201 ($generated@@28 $generated@@202) $generated@@203) (forall (($generated@@204 T@U) ) (!  (=> (< 0 ($generated@@32 $generated@@201 $generated@@204)) ($generated@@91 $generated@@204 $generated@@202 $generated@@203))
 :pattern ( ($generated@@32 $generated@@201 $generated@@204))
)))
 :pattern ( ($generated@@92 $generated@@27 $generated@@201 ($generated@@28 $generated@@202) $generated@@203))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () Bool)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () Bool)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () Bool)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () Bool)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () Bool)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 38) (let (($generated@@240  (=> (and (and (and ($generated@@197 ($generated@@19 $generated@@205 $generated@@206) $generated@@207) ($generated@@197 $generated@@207 $generated@@205)) (<= ($generated@@32 $generated@@205 $generated@@208) ($generated@@32 $generated@@207 $generated@@208))) (= $generated@@209 ($generated@@17 ($generated@@18 $generated@@205 $generated@@207)))) (and (=> (= (ControlFlow 0 25) (- 0 26)) (<= ($generated@@70 0) $generated@@209)) (=> (<= ($generated@@70 0) $generated@@209) (=> (and (= $generated@@210 ($generated@@17 ($generated@@18 $generated@@207 $generated@@205))) (= (ControlFlow 0 25) (- 0 24))) (<= ($generated@@70 0) $generated@@210)))))))
(let (($generated@@241  (=> (and (not (and ($generated@@197 ($generated@@19 $generated@@205 $generated@@206) $generated@@207) ($generated@@197 $generated@@207 $generated@@205))) (= (ControlFlow 0 28) 25)) $generated@@240)))
(let (($generated@@242  (=> (and (and ($generated@@197 ($generated@@19 $generated@@205 $generated@@206) $generated@@207) ($generated@@197 $generated@@207 $generated@@205)) (= (ControlFlow 0 27) 25)) $generated@@240)))
(let (($generated@@243  (=> (not ($generated@@197 ($generated@@19 $generated@@205 $generated@@206) $generated@@207)) (and (=> (= (ControlFlow 0 30) 27) $generated@@242) (=> (= (ControlFlow 0 30) 28) $generated@@241)))))
(let (($generated@@244  (=> ($generated@@197 ($generated@@19 $generated@@205 $generated@@206) $generated@@207) (and (=> (= (ControlFlow 0 29) 27) $generated@@242) (=> (= (ControlFlow 0 29) 28) $generated@@241)))))
(let (($generated@@245  (=> (not $generated@@211) (and (=> (= (ControlFlow 0 31) 29) $generated@@244) (=> (= (ControlFlow 0 31) 30) $generated@@243)))))
(let (($generated@@246  (and (=> (= (ControlFlow 0 4) (- 0 10)) (exists (($generated@@247 T@U) )  (and ($generated@@111 $generated@@247 $generated@@212) (and (> ($generated@@32 $generated@@213 $generated@@247) 0) (< ($generated@@32 $generated@@214 $generated@@247) ($generated@@32 $generated@@213 $generated@@247)))))) (=> (exists (($generated@@248 T@U) )  (and ($generated@@111 $generated@@248 $generated@@212) (and (> ($generated@@32 $generated@@213 $generated@@248) 0) (< ($generated@@32 $generated@@214 $generated@@248) ($generated@@32 $generated@@213 $generated@@248))))) (=> (=> true (and ($generated@@111 $generated@@215 $generated@@212) ($generated@@91 $generated@@215 $generated@@212 $generated@@216))) (=> (and (> ($generated@@32 $generated@@213 $generated@@215) 0) (< ($generated@@32 $generated@@214 $generated@@215) ($generated@@32 $generated@@213 $generated@@215))) (and (=> (= (ControlFlow 0 4) (- 0 9)) true) (=> (= $generated@@217 ($generated@@18 $generated@@213 ($generated@@81 $generated@@124 $generated@@215))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (or (<= 0 $generated@@218) (= (+ ($generated@@17 ($generated@@18 $generated@@217 $generated@@214)) ($generated@@17 ($generated@@18 $generated@@214 $generated@@217))) $generated@@218))) (=> (or (<= 0 $generated@@218) (= (+ ($generated@@17 ($generated@@18 $generated@@217 $generated@@214)) ($generated@@17 ($generated@@18 $generated@@214 $generated@@217))) $generated@@218)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (< (+ ($generated@@17 ($generated@@18 $generated@@217 $generated@@214)) ($generated@@17 ($generated@@18 $generated@@214 $generated@@217))) $generated@@218)) (=> (< (+ ($generated@@17 ($generated@@18 $generated@@217 $generated@@214)) ($generated@@17 ($generated@@18 $generated@@214 $generated@@217))) $generated@@218) (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> $generated@@211 ($generated@@197 ($generated@@19 $generated@@217 $generated@@206) $generated@@214))) (=> (=> $generated@@211 ($generated@@197 ($generated@@19 $generated@@217 $generated@@206) $generated@@214)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> $generated@@211 ($generated@@197 $generated@@214 $generated@@217))) (=> (=> $generated@@211 ($generated@@197 $generated@@214 $generated@@217)) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@211 (<= ($generated@@32 $generated@@217 $generated@@208) ($generated@@32 $generated@@214 $generated@@208))))))))))))))))))))
(let (($generated@@249  (=> (= (ControlFlow 0 12) 4) $generated@@246)))
(let (($generated@@250  (=> (and (>= 0 ($generated@@32 $generated@@213 $generated@@219)) (= (ControlFlow 0 14) 12)) $generated@@249)))
(let (($generated@@251  (=> (and (> ($generated@@32 $generated@@213 $generated@@219) 0) (= (ControlFlow 0 13) 12)) $generated@@249)))
(let (($generated@@252  (=> (and ($generated@@111 $generated@@219 $generated@@212) ($generated@@91 $generated@@219 $generated@@212 $generated@@216)) (and (=> (= (ControlFlow 0 15) 13) $generated@@251) (=> (= (ControlFlow 0 15) 14) $generated@@250)))))
(let (($generated@@253  (=> (and (not (and ($generated@@111 $generated@@219 $generated@@212) ($generated@@91 $generated@@219 $generated@@212 $generated@@216))) (= (ControlFlow 0 11) 4)) $generated@@246)))
(let (($generated@@254  (and (=> (= (ControlFlow 0 16) (- 0 19)) (exists (($generated@@255 T@U) )  (and ($generated@@111 $generated@@255 $generated@@212) (> ($generated@@32 $generated@@206 $generated@@255) 0)))) (=> (exists (($generated@@256 T@U) )  (and ($generated@@111 $generated@@256 $generated@@212) (> ($generated@@32 $generated@@206 $generated@@256) 0))) (=> (and (=> true (and ($generated@@111 $generated@@220 $generated@@212) ($generated@@91 $generated@@220 $generated@@212 $generated@@216))) (> ($generated@@32 $generated@@206 $generated@@220) 0)) (and (=> (= (ControlFlow 0 16) (- 0 18)) true) (=> (= $generated@@213 ($generated@@20 $generated@@205 ($generated@@81 $generated@@124 $generated@@220))) (and (=> (= (ControlFlow 0 16) (- 0 17)) true) (=> (= $generated@@214 ($generated@@20 $generated@@207 ($generated@@81 $generated@@124 $generated@@220))) (and (=> (= (ControlFlow 0 16) 15) $generated@@252) (=> (= (ControlFlow 0 16) 11) $generated@@253)))))))))))
(let (($generated@@257  (=> (and (not (and ($generated@@111 $generated@@221 $generated@@212) ($generated@@91 $generated@@221 $generated@@212 $generated@@216))) (= (ControlFlow 0 21) 16)) $generated@@254)))
(let (($generated@@258  (=> (and (and ($generated@@111 $generated@@221 $generated@@212) ($generated@@91 $generated@@221 $generated@@212 $generated@@216)) (= (ControlFlow 0 20) 16)) $generated@@254)))
(let (($generated@@259  (=> (and (not ($generated@@108 $generated@@205 $generated@@207)) (= $generated@@218 (+ ($generated@@17 ($generated@@18 $generated@@205 $generated@@207)) ($generated@@17 ($generated@@18 $generated@@207 $generated@@205))))) (and (=> (= (ControlFlow 0 22) 20) $generated@@258) (=> (= (ControlFlow 0 22) 21) $generated@@257)))))
(let (($generated@@260 true))
(let (($generated@@261  (=> $generated@@211 (and (=> (= (ControlFlow 0 23) 2) $generated@@260) (=> (= (ControlFlow 0 23) 22) $generated@@259)))))
(let (($generated@@262  (and (=> (= (ControlFlow 0 32) 31) $generated@@245) (=> (= (ControlFlow 0 32) 23) $generated@@261))))
(let (($generated@@263 true))
(let (($generated@@264  (=> (=> $generated@@222 (and ($generated@@111 $generated@@223 $generated@@212) ($generated@@91 $generated@@223 $generated@@212 $generated@@216))) (=> (and (and (and (and ($generated@@26 $generated@@27 $generated@@205 ($generated@@28 $generated@@212)) ($generated@@92 $generated@@27 $generated@@205 ($generated@@28 $generated@@212) $generated@@216)) (=> $generated@@224 (and ($generated@@111 $generated@@225 $generated@@212) ($generated@@91 $generated@@225 $generated@@212 $generated@@216)))) (and ($generated@@26 $generated@@27 $generated@@207 ($generated@@28 $generated@@212)) ($generated@@92 $generated@@27 $generated@@207 ($generated@@28 $generated@@212) $generated@@216))) (and (and (and (not false) (=> $generated@@211 ($generated@@197 ($generated@@19 $generated@@205 $generated@@206) $generated@@207))) (and (=> $generated@@211 ($generated@@197 $generated@@207 $generated@@205)) (=> $generated@@211 (<= ($generated@@32 $generated@@205 $generated@@208) ($generated@@32 $generated@@207 $generated@@208))))) (and (and (forall (($generated@@265 T@U) ) (!  (=> (and (or (not (= $generated@@265 $generated@@226)) (not true)) ($generated@@6 ($generated@@44 $generated@@2 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@42 ($generated@@43 $generated@@40 $generated@@41) $generated@@216 $generated@@265) $generated@@0)))) (= ($generated@@39 $generated@@42 ($generated@@43 $generated@@40 $generated@@41) $generated@@216 $generated@@265) ($generated@@39 $generated@@42 ($generated@@43 $generated@@40 $generated@@41) $generated@@216 $generated@@265)))
 :pattern ( ($generated@@39 $generated@@42 ($generated@@43 $generated@@40 $generated@@41) $generated@@216 $generated@@265))
)) ($generated@@38 $generated@@216 $generated@@216)) (and (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (or (not (= $generated@@266 $generated@@226)) (not true)) ($generated@@6 ($generated@@44 $generated@@2 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@42 ($generated@@43 $generated@@40 $generated@@41) $generated@@216 $generated@@266) $generated@@0)))) (or (= ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@42 ($generated@@43 $generated@@40 $generated@@41) $generated@@216 $generated@@266) $generated@@267) ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@42 ($generated@@43 $generated@@40 $generated@@41) $generated@@216 $generated@@266) $generated@@267)) ($generated@@6 ($generated@@141 $generated@@42 $generated@@40 $generated@@2 $generated@@227 $generated@@266 $generated@@267))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@42 ($generated@@43 $generated@@40 $generated@@41) $generated@@216 $generated@@266) $generated@@267))
)) (<= (+ ($generated@@17 ($generated@@18 $generated@@205 $generated@@207)) ($generated@@17 ($generated@@18 $generated@@207 $generated@@205))) $generated@@228))))) (and (=> (= (ControlFlow 0 33) 1) $generated@@263) (=> (= (ControlFlow 0 33) 32) $generated@@262))))))
(let (($generated@@268  (=> (= $generated@@227 ($generated@@142 $generated@@226 $generated@@216 $generated@@0 false)) (=> (and (= $generated@@229 ($generated@@81 $generated@@124 $generated@@208)) (= $generated@@228 (+ ($generated@@17 ($generated@@18 $generated@@230 $generated@@229)) ($generated@@17 ($generated@@18 $generated@@229 $generated@@230))))) (and (=> (= (ControlFlow 0 34) (- 0 37)) (=> $generated@@211 ($generated@@197 ($generated@@19 $generated@@230 $generated@@206) $generated@@229))) (=> (=> $generated@@211 ($generated@@197 ($generated@@19 $generated@@230 $generated@@206) $generated@@229)) (and (=> (= (ControlFlow 0 34) (- 0 36)) (=> $generated@@211 ($generated@@197 $generated@@229 $generated@@230))) (=> (=> $generated@@211 ($generated@@197 $generated@@229 $generated@@230)) (and (=> (= (ControlFlow 0 34) (- 0 35)) (=> $generated@@211 (<= ($generated@@32 $generated@@230 $generated@@208) ($generated@@32 $generated@@229 $generated@@208)))) (=> (=> $generated@@211 (<= ($generated@@32 $generated@@230 $generated@@208) ($generated@@32 $generated@@229 $generated@@208))) (=> (= (ControlFlow 0 34) 33) $generated@@264)))))))))))
(let (($generated@@269  (=> (and (and ($generated@@231 $generated@@216) ($generated@@232 $generated@@216)) (and ($generated@@26 $generated@@27 $generated@@230 ($generated@@28 $generated@@212)) ($generated@@92 $generated@@27 $generated@@230 ($generated@@28 $generated@@212) $generated@@216))) (=> (and (and (and ($generated@@111 $generated@@208 $generated@@212) ($generated@@91 $generated@@208 $generated@@212 $generated@@216)) (and ($generated@@26 $generated@@27 $generated@@206 ($generated@@28 $generated@@212)) ($generated@@92 $generated@@27 $generated@@206 ($generated@@28 $generated@@212) $generated@@216))) (and (and ($generated@@26 $generated@@27 $generated@@233 ($generated@@28 $generated@@212)) ($generated@@92 $generated@@27 $generated@@233 ($generated@@28 $generated@@212) $generated@@216)) true)) (=> (and (and (and (and ($generated@@26 $generated@@27 $generated@@234 ($generated@@28 $generated@@212)) ($generated@@92 $generated@@27 $generated@@234 ($generated@@28 $generated@@212) $generated@@216)) true) (and (=> $generated@@235 (and ($generated@@111 $generated@@236 $generated@@212) ($generated@@91 $generated@@236 $generated@@212 $generated@@216))) true)) (and (and (and (=> $generated@@237 (and ($generated@@111 $generated@@238 $generated@@212) ($generated@@91 $generated@@238 $generated@@212 $generated@@216))) true) (= 0 $generated@@239)) (and (and (= ($generated@@32 $generated@@230 $generated@@208) ($generated@@70 1)) (not ($generated@@108 $generated@@206 $generated@@124))) (and ($generated@@87 $generated@@230 $generated@@206) (= (ControlFlow 0 38) 34))))) $generated@@268)))))
$generated@@269))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
