(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@22 (T@T T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@51 (T@U T@U T@U) Bool)
(declare-fun $generated@@52 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@57 () Int)
(declare-fun $generated@@58 (T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@66 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@U)
(declare-fun $generated@@100 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@T T@T) T@T)
(declare-fun $generated@@104 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ) (!  (not ($generated@@19 $generated@@20 $generated@@21))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21))
)))
(assert (= ($generated@@3 $generated@@23) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and (and ($generated@@22 $generated@@23 $generated@@26 ($generated@@24 $generated@@27 $generated@@28)) (forall (($generated@@31 T@U) ) (!  (=> ($generated@@25 $generated@@31 $generated@@29) ($generated@@25 $generated@@31 $generated@@27))
 :pattern ( ($generated@@25 $generated@@31 $generated@@29))
 :pattern ( ($generated@@25 $generated@@31 $generated@@27))
))) (forall (($generated@@32 T@U) ) (!  (=> ($generated@@25 $generated@@32 $generated@@28) ($generated@@25 $generated@@32 $generated@@30))
 :pattern ( ($generated@@25 $generated@@32 $generated@@28))
 :pattern ( ($generated@@25 $generated@@32 $generated@@30))
))) ($generated@@22 $generated@@23 $generated@@26 ($generated@@24 $generated@@29 $generated@@30)))
 :pattern ( ($generated@@22 $generated@@23 $generated@@26 ($generated@@24 $generated@@27 $generated@@28)) ($generated@@22 $generated@@23 $generated@@26 ($generated@@24 $generated@@29 $generated@@30)))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (and ($generated@@35 $generated@@39) (and ($generated@@25 $generated@@41 $generated@@37) ($generated@@22 $generated@@23 $generated@@40 ($generated@@24 $generated@@37 $generated@@38)))) (= ($generated@@36 ($generated@@33 $generated@@37 $generated@@38 $generated@@34 $generated@@40 $generated@@41) $generated@@20) ($generated@@36 ($generated@@33 $generated@@37 $generated@@38 $generated@@39 $generated@@40 $generated@@41) $generated@@20)))
 :pattern ( ($generated@@33 $generated@@37 $generated@@38 $generated@@34 $generated@@40 $generated@@41) ($generated@@35 $generated@@39))
 :pattern ( ($generated@@33 $generated@@37 $generated@@38 $generated@@39 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 ($generated@@42 $generated@@45 $generated@@44)) $generated@@44)
 :pattern ( ($generated@@42 $generated@@45 $generated@@44))
)))
(assert (= ($generated@@3 $generated@@46) 4))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@22 $generated@@46 $generated@@48 ($generated@@47 $generated@@49)) (forall (($generated@@50 T@U) ) (!  (=> ($generated@@19 $generated@@48 $generated@@50) ($generated@@25 $generated@@50 $generated@@49))
 :pattern ( ($generated@@19 $generated@@48 $generated@@50))
)))
 :pattern ( ($generated@@22 $generated@@46 $generated@@48 ($generated@@47 $generated@@49)))
)))
(assert ($generated@@35 $generated@@34))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@51 ($generated@@43 $generated@@56 $generated@@53) $generated@@54 $generated@@55) ($generated@@52 $generated@@56 $generated@@53 $generated@@54 $generated@@55))
 :pattern ( ($generated@@51 ($generated@@43 $generated@@56 $generated@@53) $generated@@54 $generated@@55))
)))
(assert  (=> (<= 0 $generated@@57) (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@59 $generated@@61 $generated@@63 $generated@@64) (and (< 0 $generated@@57) (and (and (and ($generated@@35 $generated@@62) (and ($generated@@22 $generated@@46 $generated@@63 ($generated@@47 $generated@@61)) ($generated@@52 $generated@@46 $generated@@63 ($generated@@47 $generated@@61) $generated@@62))) (and ($generated@@22 $generated@@23 $generated@@64 ($generated@@24 $generated@@61 $generated@@61)) ($generated@@52 $generated@@23 $generated@@64 ($generated@@24 $generated@@61 $generated@@61) $generated@@62))) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@25 $generated@@65 $generated@@61) (and (=> ($generated@@19 $generated@@63 $generated@@65) ($generated@@60 $generated@@61 $generated@@61 $generated@@62 $generated@@64 $generated@@65)) (=> ($generated@@19 $generated@@63 $generated@@65) ($generated@@36 ($generated@@33 $generated@@61 $generated@@61 $generated@@62 $generated@@64 $generated@@65) $generated@@20))))
 :pattern ( ($generated@@33 $generated@@61 $generated@@61 $generated@@62 $generated@@64 $generated@@65))
 :pattern ( ($generated@@60 $generated@@61 $generated@@61 $generated@@62 $generated@@64 $generated@@65))
 :pattern ( ($generated@@19 $generated@@63 $generated@@65))
))))) ($generated@@22 $generated@@46 ($generated@@58 $generated@@61 $generated@@63 $generated@@64) ($generated@@47 $generated@@61)))
 :pattern ( ($generated@@58 $generated@@61 $generated@@63 $generated@@64) ($generated@@35 $generated@@62))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and ($generated@@35 $generated@@70) ($generated@@52 $generated@@23 $generated@@67 ($generated@@24 $generated@@68 $generated@@69) $generated@@70)) (forall (($generated@@71 T@U) ) (!  (=> (and ($generated@@51 $generated@@71 $generated@@68 $generated@@70) ($generated@@60 $generated@@68 $generated@@69 $generated@@70 $generated@@67 $generated@@71)) ($generated@@51 ($generated@@66 $generated@@68 $generated@@69 $generated@@70 $generated@@67 $generated@@71) $generated@@69 $generated@@70))
 :pattern ( ($generated@@66 $generated@@68 $generated@@69 $generated@@70 $generated@@67 $generated@@71))
)))
 :pattern ( ($generated@@52 $generated@@23 $generated@@67 ($generated@@24 $generated@@68 $generated@@69) $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@36 $generated@@72 $generated@@73) (= $generated@@72 $generated@@73))
 :pattern ( ($generated@@36 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@74 ($generated@@24 $generated@@75 $generated@@76)) (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (and (and ($generated@@35 $generated@@77) ($generated@@25 $generated@@78 $generated@@75)) ($generated@@60 $generated@@75 $generated@@76 $generated@@77 $generated@@74 $generated@@78)) ($generated@@25 ($generated@@66 $generated@@75 $generated@@76 $generated@@77 $generated@@74 $generated@@78) $generated@@76))
 :pattern ( ($generated@@66 $generated@@75 $generated@@76 $generated@@77 $generated@@74 $generated@@78))
)))
 :pattern ( ($generated@@22 $generated@@23 $generated@@74 ($generated@@24 $generated@@75 $generated@@76)))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@25 ($generated@@43 $generated@@81 $generated@@79) $generated@@80) ($generated@@22 $generated@@81 $generated@@79 $generated@@80))
 :pattern ( ($generated@@25 ($generated@@43 $generated@@81 $generated@@79) $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@52 $generated@@46 $generated@@82 ($generated@@47 $generated@@83) $generated@@84) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@19 $generated@@82 $generated@@85) ($generated@@51 $generated@@85 $generated@@83 $generated@@84))
 :pattern ( ($generated@@19 $generated@@82 $generated@@85))
)))
 :pattern ( ($generated@@52 $generated@@46 $generated@@82 ($generated@@47 $generated@@83) $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@86 ($generated@@24 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@24 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@89 ($generated@@24 $generated@@90 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@24 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@92 ($generated@@47 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@47 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@94 ($generated@@47 $generated@@95)) $generated)
 :pattern ( ($generated@@47 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@42 $generated@@97 ($generated@@43 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@43 $generated@@97 $generated@@96))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@3 $generated@@98) 5) (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@100 $generated@@107 $generated@@108 ($generated@@104 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@109) $generated@@111) $generated@@109)
 :weight 0
))) (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@100 $generated@@112 $generated@@113 ($generated@@104 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@100 $generated@@112 $generated@@113 $generated@@115 $generated@@117)))
 :weight 0
))) (= ($generated@@3 $generated@@101) 6)) (= ($generated@@3 $generated@@102) 7)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (= ($generated@@3 ($generated@@103 $generated@@118 $generated@@119)) 8))) (forall (($generated@@120 T@T) ($generated@@121 T@T) ) (! (= ($generated@@105 ($generated@@103 $generated@@120 $generated@@121)) $generated@@120)
 :pattern ( ($generated@@103 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (! (= ($generated@@106 ($generated@@103 $generated@@122 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@103 $generated@@122 $generated@@123))
))))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@35 $generated@@127) (= ($generated@@52 $generated@@23 $generated@@124 ($generated@@24 $generated@@125 $generated@@126) $generated@@127) (forall (($generated@@128 T@U) ) (!  (=> (and (and ($generated@@25 $generated@@128 $generated@@125) ($generated@@51 $generated@@128 $generated@@125 $generated@@127)) ($generated@@60 $generated@@125 $generated@@126 $generated@@127 $generated@@124 $generated@@128)) (forall (($generated@@129 T@U) ) (!  (=> (and (or (not (= $generated@@129 $generated@@99)) (not true)) ($generated@@19 ($generated@@33 $generated@@125 $generated@@126 $generated@@127 $generated@@124 $generated@@128) ($generated@@43 $generated@@98 $generated@@129))) ($generated@@8 ($generated@@42 $generated@@4 ($generated@@100 $generated@@101 $generated@@102 ($generated@@100 $generated@@98 ($generated@@103 $generated@@101 $generated@@102) $generated@@127 $generated@@129) $generated@@0))))
 :pattern ( ($generated@@19 ($generated@@33 $generated@@125 $generated@@126 $generated@@127 $generated@@124 $generated@@128) ($generated@@43 $generated@@98 $generated@@129)))
)))
 :pattern ( ($generated@@66 $generated@@125 $generated@@126 $generated@@127 $generated@@124 $generated@@128))
 :pattern ( ($generated@@33 $generated@@125 $generated@@126 $generated@@127 $generated@@124 $generated@@128))
))))
 :pattern ( ($generated@@52 $generated@@23 $generated@@124 ($generated@@24 $generated@@125 $generated@@126) $generated@@127))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> ($generated@@25 $generated@@132 ($generated@@24 $generated@@130 $generated@@131)) (and (= ($generated@@43 $generated@@23 ($generated@@42 $generated@@23 $generated@@132)) $generated@@132) ($generated@@22 $generated@@23 ($generated@@42 $generated@@23 $generated@@132) ($generated@@24 $generated@@130 $generated@@131))))
 :pattern ( ($generated@@25 $generated@@132 ($generated@@24 $generated@@130 $generated@@131)))
)))
(assert  (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@133 $generated@@136 $generated@@137 $generated@@138 ($generated@@135 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@141 $generated@@142) $generated@@139)
 :weight 0
)) (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@133 $generated@@143 $generated@@144 $generated@@145 ($generated@@135 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@133 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@133 $generated@@152 $generated@@153 $generated@@154 ($generated@@135 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@133 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@8 ($generated@@133 $generated@@98 $generated@@101 $generated@@4 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))  (=> (and (or (not (= $generated@@165 $generated@@161)) (not true)) ($generated@@8 ($generated@@42 $generated@@4 ($generated@@100 $generated@@101 $generated@@102 ($generated@@100 $generated@@98 ($generated@@103 $generated@@101 $generated@@102) $generated@@162 $generated@@165) $generated@@163)))) $generated@@164))
 :pattern ( ($generated@@133 $generated@@98 $generated@@101 $generated@@4 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (and (= ($generated@@94 ($generated@@24 $generated@@168 $generated@@169)) $generated@@1) (= ($generated@@167 ($generated@@24 $generated@@168 $generated@@169)) $generated@@2))
 :pattern ( ($generated@@24 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and ($generated@@35 $generated@@172) (and ($generated@@25 $generated@@174 $generated@@170) ($generated@@22 $generated@@23 $generated@@173 ($generated@@24 $generated@@170 $generated@@171)))) ($generated@@36 ($generated@@33 $generated@@170 $generated@@171 $generated@@34 $generated@@173 $generated@@174) $generated@@20)) (= ($generated@@60 $generated@@170 $generated@@171 $generated@@34 $generated@@173 $generated@@174) ($generated@@60 $generated@@170 $generated@@171 $generated@@172 $generated@@173 $generated@@174)))
 :pattern ( ($generated@@60 $generated@@170 $generated@@171 $generated@@34 $generated@@173 $generated@@174) ($generated@@35 $generated@@172))
 :pattern ( ($generated@@60 $generated@@170 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@25 $generated@@175 ($generated@@47 $generated@@176)) (and (= ($generated@@43 $generated@@46 ($generated@@42 $generated@@46 $generated@@175)) $generated@@175) ($generated@@22 $generated@@46 ($generated@@42 $generated@@46 $generated@@175) ($generated@@47 $generated@@176))))
 :pattern ( ($generated@@25 $generated@@175 ($generated@@47 $generated@@176)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@36 $generated@@177 $generated@@178) (forall (($generated@@179 T@U) ) (! (= ($generated@@19 $generated@@177 $generated@@179) ($generated@@19 $generated@@178 $generated@@179))
 :pattern ( ($generated@@19 $generated@@177 $generated@@179))
 :pattern ( ($generated@@19 $generated@@178 $generated@@179))
)))
 :pattern ( ($generated@@36 $generated@@177 $generated@@178))
)))
(assert  (=> (<= 0 $generated@@57) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (or ($generated@@59 $generated@@180 $generated@@182 $generated@@183) (and (< 0 $generated@@57) (and (and (and ($generated@@22 $generated@@46 $generated@@182 ($generated@@47 $generated@@180)) ($generated@@52 $generated@@46 $generated@@182 ($generated@@47 $generated@@180) $generated@@181)) (and ($generated@@22 $generated@@23 $generated@@183 ($generated@@24 $generated@@180 $generated@@180)) ($generated@@52 $generated@@23 $generated@@183 ($generated@@24 $generated@@180 $generated@@180) $generated@@181))) (forall (($generated@@184 T@U) ) (!  (=> ($generated@@25 $generated@@184 $generated@@180) (and (=> ($generated@@19 $generated@@182 $generated@@184) ($generated@@60 $generated@@180 $generated@@180 $generated@@181 $generated@@183 $generated@@184)) (=> ($generated@@19 $generated@@182 $generated@@184) ($generated@@36 ($generated@@33 $generated@@180 $generated@@180 $generated@@181 $generated@@183 $generated@@184) $generated@@20))))
 :pattern ( ($generated@@33 $generated@@180 $generated@@180 $generated@@181 $generated@@183 $generated@@184))
 :pattern ( ($generated@@60 $generated@@180 $generated@@180 $generated@@181 $generated@@183 $generated@@184))
 :pattern ( ($generated@@19 $generated@@182 $generated@@184))
))))) ($generated@@52 $generated@@46 ($generated@@58 $generated@@180 $generated@@182 $generated@@183) ($generated@@47 $generated@@180) $generated@@181))
 :pattern ( ($generated@@52 $generated@@46 ($generated@@58 $generated@@180 $generated@@182 $generated@@183) ($generated@@47 $generated@@180) $generated@@181))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () Bool)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Bool)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () Bool)
(declare-fun $generated@@195 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@196 true))
(let (($generated@@197 true))
(let (($generated@@198  (=> (forall (($generated@@199 T@U) ) (!  (=> ($generated@@25 $generated@@199 $generated@@185) (and (=> ($generated@@19 $generated@@188 $generated@@199) ($generated@@60 $generated@@185 $generated@@185 $generated@@186 $generated@@187 $generated@@199)) (=> ($generated@@19 $generated@@188 $generated@@199) ($generated@@36 ($generated@@33 $generated@@185 $generated@@185 $generated@@186 $generated@@187 $generated@@199) $generated@@20))))
 :pattern ( ($generated@@33 $generated@@185 $generated@@185 $generated@@186 $generated@@187 $generated@@199))
 :pattern ( ($generated@@60 $generated@@185 $generated@@185 $generated@@186 $generated@@187 $generated@@199))
 :pattern ( ($generated@@19 $generated@@188 $generated@@199))
)) (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@189) (=> $generated@@189 (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@190) (=> $generated@@190 (and (=> (= (ControlFlow 0 3) 1) $generated@@197) (=> (= (ControlFlow 0 3) 2) $generated@@196)))))))))
(let (($generated@@200  (=> (and (and (=> ($generated@@19 $generated@@188 $generated@@191) (and ($generated@@60 $generated@@185 $generated@@185 $generated@@186 $generated@@187 $generated@@191) ($generated@@36 ($generated@@33 $generated@@185 $generated@@185 $generated@@186 $generated@@187 $generated@@191) $generated@@20))) (= $generated@@189 true)) (and (= $generated@@190 true) (= (ControlFlow 0 8) 3))) $generated@@198)))
(let (($generated@@201  (=> ($generated@@19 $generated@@188 $generated@@191) (=> (and ($generated@@51 ($generated@@43 $generated@@23 $generated@@187) ($generated@@24 $generated@@185 $generated@@185) $generated@@186) ($generated@@51 $generated@@191 $generated@@185 $generated@@186)) (=> (and (and (= $generated@@192 (forall (($generated@@202 T@U) ($generated@@203 T@U) )  (=> (and (and (or (not (= $generated@@202 $generated@@99)) (not true)) ($generated@@8 ($generated@@42 $generated@@4 ($generated@@100 $generated@@101 $generated@@102 ($generated@@100 $generated@@98 ($generated@@103 $generated@@101 $generated@@102) $generated@@186 $generated@@202) $generated@@0)))) ($generated@@19 ($generated@@33 $generated@@185 $generated@@185 $generated@@186 $generated@@187 $generated@@191) ($generated@@43 $generated@@98 $generated@@202))) ($generated@@8 ($generated@@133 $generated@@98 $generated@@101 $generated@@4 $generated@@193 $generated@@202 $generated@@203))))) ($generated@@60 $generated@@185 $generated@@185 $generated@@186 $generated@@187 $generated@@191)) (and ($generated@@51 ($generated@@43 $generated@@23 $generated@@187) ($generated@@24 $generated@@185 $generated@@185) $generated@@186) ($generated@@51 $generated@@191 $generated@@185 $generated@@186))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@60 $generated@@185 $generated@@185 $generated@@186 $generated@@187 $generated@@191)) (=> ($generated@@60 $generated@@185 $generated@@185 $generated@@186 $generated@@187 $generated@@191) (=> (= $generated@@194 (forall (($generated@@204 T@U) ($generated@@205 T@U) )  (=> (and (and (or (not (= $generated@@204 $generated@@99)) (not true)) ($generated@@8 ($generated@@42 $generated@@4 ($generated@@100 $generated@@101 $generated@@102 ($generated@@100 $generated@@98 ($generated@@103 $generated@@101 $generated@@102) $generated@@186 $generated@@204) $generated@@0)))) ($generated@@19 ($generated@@33 $generated@@185 $generated@@185 $generated@@186 $generated@@187 $generated@@191) ($generated@@43 $generated@@98 $generated@@204))) ($generated@@8 ($generated@@133 $generated@@98 $generated@@101 $generated@@4 $generated@@193 $generated@@204 $generated@@205))))) (=> (and (and ($generated@@36 ($generated@@33 $generated@@185 $generated@@185 $generated@@186 $generated@@187 $generated@@191) $generated@@20) (= $generated@@189 $generated@@192)) (and (= $generated@@190 $generated@@194) (= (ControlFlow 0 6) 3))) $generated@@198)))))))))
(let (($generated@@206  (=> (= $generated@@193 ($generated@@134 $generated@@99 $generated@@186 $generated@@0 false)) (=> (and ($generated@@25 $generated@@191 $generated@@185) ($generated@@51 $generated@@191 $generated@@185 $generated@@186)) (and (=> (= (ControlFlow 0 9) 6) $generated@@201) (=> (= (ControlFlow 0 9) 8) $generated@@200))))))
(let (($generated@@207  (=> (and ($generated@@35 $generated@@186) ($generated@@195 $generated@@186)) (=> (and (and ($generated@@22 $generated@@46 $generated@@188 ($generated@@47 $generated@@185)) ($generated@@22 $generated@@23 $generated@@187 ($generated@@24 $generated@@185 $generated@@185))) (and (= 0 $generated@@57) (= (ControlFlow 0 10) 9))) $generated@@206))))
$generated@@207))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
