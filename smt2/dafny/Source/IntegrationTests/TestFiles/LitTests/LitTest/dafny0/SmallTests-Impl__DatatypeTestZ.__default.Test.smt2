(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@87 (T@U) Int)
(declare-fun $generated@@88 (T@U) Int)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@100 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@T T@T) T@T)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@23 $generated@@24) $generated@@3))
(assert (= ($generated@@6 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
 :pattern ( ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ) (! ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32))
 :pattern ( ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32)))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@35) (= $generated@@34 $generated@@35))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (and ($generated@@36 $generated@@39) ($generated@@36 $generated@@40)) (= ($generated@@33 $generated@@39 $generated@@40)  (and (= ($generated@@37 $generated@@39) ($generated@@37 $generated@@40)) ($generated@@33 ($generated@@38 $generated@@39) ($generated@@38 $generated@@40)))))
 :pattern ( ($generated@@33 $generated@@39 $generated@@40) ($generated@@36 $generated@@39))
 :pattern ( ($generated@@33 $generated@@39 $generated@@40) ($generated@@36 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@31 $generated@@26 ($generated@@44 $generated@@47 $generated@@48) ($generated@@27 $generated@@46))  (and ($generated@@45 $generated@@47 $generated@@46) ($generated@@31 $generated@@26 $generated@@48 ($generated@@27 $generated@@46))))
 :pattern ( ($generated@@31 $generated@@26 ($generated@@44 $generated@@47 $generated@@48) ($generated@@27 $generated@@46)))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@49 $generated@@50) (= ($generated@@23 $generated@@50) $generated@@3))
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@36 $generated@@51) (= ($generated@@23 $generated@@51) $generated@@4))
 :pattern ( ($generated@@36 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 ($generated@@52 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@52 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@36 $generated@@56) (exists (($generated@@57 T@U) ($generated@@58 T@U) ) (= $generated@@56 ($generated@@44 $generated@@57 $generated@@58))))
 :pattern ( ($generated@@36 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@49 $generated@@59) (= $generated@@59 $generated@@24))
 :pattern ( ($generated@@49 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@60 ($generated@@53 $generated@@64 $generated@@61) $generated@@62 $generated@@63) ($generated@@25 $generated@@64 $generated@@61 $generated@@62 $generated@@63))
 :pattern ( ($generated@@60 ($generated@@53 $generated@@64 $generated@@61) $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ) (!  (and (= ($generated@@22 ($generated@@27 $generated@@66)) $generated@@2) (= ($generated@@65 ($generated@@27 $generated@@66)) $generated@@5))
 :pattern ( ($generated@@27 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@67 $generated@@68) (or ($generated@@49 $generated@@68) ($generated@@36 $generated@@68)))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@31 $generated@@26 $generated@@70 ($generated@@27 $generated@@69)) (or ($generated@@49 $generated@@70) ($generated@@36 $generated@@70)))
 :pattern ( ($generated@@36 $generated@@70) ($generated@@31 $generated@@26 $generated@@70 ($generated@@27 $generated@@69)))
 :pattern ( ($generated@@49 $generated@@70) ($generated@@31 $generated@@26 $generated@@70 ($generated@@27 $generated@@69)))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@45 $generated@@71 $generated) (and (= ($generated@@53 $generated@@9 ($generated@@52 $generated@@9 $generated@@71)) $generated@@71) ($generated@@31 $generated@@9 ($generated@@52 $generated@@9 $generated@@71) $generated)))
 :pattern ( ($generated@@45 $generated@@71 $generated))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@45 ($generated@@53 $generated@@74 $generated@@72) $generated@@73) ($generated@@31 $generated@@74 $generated@@72 $generated@@73))
 :pattern ( ($generated@@45 ($generated@@53 $generated@@74 $generated@@72) $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (and ($generated@@49 $generated@@75) ($generated@@49 $generated@@76)) ($generated@@33 $generated@@75 $generated@@76))
 :pattern ( ($generated@@33 $generated@@75 $generated@@76) ($generated@@49 $generated@@75))
 :pattern ( ($generated@@33 $generated@@75 $generated@@76) ($generated@@49 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@23 ($generated@@44 $generated@@77 $generated@@78)) $generated@@4)
 :pattern ( ($generated@@44 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@37 ($generated@@44 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@44 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@38 ($generated@@44 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@44 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@83 ($generated@@27 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@27 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@52 $generated@@86 ($generated@@53 $generated@@86 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@53 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (< ($generated@@87 $generated@@89) ($generated@@88 ($generated@@44 $generated@@89 $generated@@90)))
 :pattern ( ($generated@@44 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (< ($generated@@88 $generated@@92) ($generated@@88 ($generated@@44 $generated@@91 $generated@@92)))
 :pattern ( ($generated@@44 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (and ($generated@@28 $generated@@95) (and ($generated@@36 $generated@@93) ($generated@@25 $generated@@26 $generated@@93 ($generated@@27 $generated@@94) $generated@@95))) ($generated@@60 ($generated@@37 $generated@@93) $generated@@94 $generated@@95))
 :pattern ( ($generated@@60 ($generated@@37 $generated@@93) $generated@@94 $generated@@95))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@96 $generated@@107 $generated@@108 $generated@@109 ($generated@@103 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@112 $generated@@113) $generated@@110)
 :weight 0
)) (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@96 $generated@@114 $generated@@115 $generated@@116 ($generated@@103 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@96 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@96 $generated@@123 $generated@@124 $generated@@125 ($generated@@103 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)))) (= ($generated@@6 $generated@@97) 4)) (= ($generated@@6 $generated@@98) 5)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@100 $generated@@132 $generated@@133 ($generated@@104 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@134) $generated@@136) $generated@@134)
 :weight 0
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@100 $generated@@137 $generated@@138 ($generated@@104 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@100 $generated@@137 $generated@@138 $generated@@140 $generated@@142)))
 :weight 0
))) (= ($generated@@6 $generated@@101) 6)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (= ($generated@@6 ($generated@@102 $generated@@143 $generated@@144)) 7))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@105 ($generated@@102 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@102 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@106 ($generated@@102 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@102 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 Bool) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@11 ($generated@@96 $generated@@97 $generated@@98 $generated@@7 ($generated@@99 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@153 $generated@@154))  (=> (and (or (not (= $generated@@153 $generated@@149)) (not true)) ($generated@@11 ($generated@@52 $generated@@7 ($generated@@100 $generated@@98 $generated@@101 ($generated@@100 $generated@@97 ($generated@@102 $generated@@98 $generated@@101) $generated@@150 $generated@@153) $generated@@151)))) $generated@@152))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98 $generated@@7 ($generated@@99 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@87 ($generated@@53 $generated@@26 $generated@@155)) ($generated@@88 $generated@@155))
 :pattern ( ($generated@@87 ($generated@@53 $generated@@26 $generated@@155)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@45 $generated@@157 ($generated@@27 $generated@@156)) (and (= ($generated@@53 $generated@@26 ($generated@@52 $generated@@26 $generated@@157)) $generated@@157) ($generated@@31 $generated@@26 ($generated@@52 $generated@@26 $generated@@157) ($generated@@27 $generated@@156))))
 :pattern ( ($generated@@45 $generated@@157 ($generated@@27 $generated@@156)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and ($generated@@28 $generated@@160) (and ($generated@@36 $generated@@158) ($generated@@25 $generated@@26 $generated@@158 ($generated@@27 $generated@@159) $generated@@160))) ($generated@@25 $generated@@26 ($generated@@38 $generated@@158) ($generated@@27 $generated@@159) $generated@@160))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@38 $generated@@158) ($generated@@27 $generated@@159) $generated@@160))
)))
(assert (= $generated@@24 ($generated@@41 $generated@@26 $generated@@24)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@44 ($generated@@41 $generated@@101 $generated@@161) ($generated@@41 $generated@@26 $generated@@162)) ($generated@@41 $generated@@26 ($generated@@44 $generated@@161 $generated@@162)))
 :pattern ( ($generated@@44 ($generated@@41 $generated@@101 $generated@@161) ($generated@@41 $generated@@26 $generated@@162)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@53 $generated@@164 ($generated@@41 $generated@@164 $generated@@163)) ($generated@@41 $generated@@101 ($generated@@53 $generated@@164 $generated@@163)))
 :pattern ( ($generated@@53 $generated@@164 ($generated@@41 $generated@@164 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! ($generated@@25 $generated@@9 $generated@@166 $generated $generated@@165)
 :pattern ( ($generated@@25 $generated@@9 $generated@@166 $generated $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@28 $generated@@170) (= ($generated@@25 $generated@@26 ($generated@@44 $generated@@168 $generated@@169) ($generated@@27 $generated@@167) $generated@@170)  (and ($generated@@60 $generated@@168 $generated@@167 $generated@@170) ($generated@@25 $generated@@26 $generated@@169 ($generated@@27 $generated@@167) $generated@@170))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@44 $generated@@168 $generated@@169) ($generated@@27 $generated@@167) $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ) (! ($generated@@31 $generated@@9 $generated@@171 $generated)
 :pattern ( ($generated@@31 $generated@@9 $generated@@171 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (= $generated@@172 ($generated@@99 $generated@@173 $generated@@174 $generated@@1 false)) (=> (and (= $generated@@175 ($generated@@41 $generated@@26 $generated@@24)) (= $generated@@176 ($generated@@41 $generated@@26 $generated@@24))) (=> (and (and ($generated@@67 $generated@@175) ($generated@@67 $generated@@176)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@33 $generated@@175 $generated@@176))))))
(let (($generated@@182  (=> (and ($generated@@28 $generated@@174) ($generated@@177 $generated@@174)) (=> (and (and ($generated@@31 $generated@@26 $generated@@178 ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@178 ($generated@@27 $generated) $generated@@174)) true) (=> (and (and (and ($generated@@31 $generated@@26 $generated@@179 ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@179 ($generated@@27 $generated) $generated@@174)) true) (and (= 0 $generated@@180) (= (ControlFlow 0 3) 2))) $generated@@181)))))
$generated@@182)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
