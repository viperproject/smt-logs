(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U Int Int) Bool)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@33 (T@U Int Int) Bool)
(declare-fun $generated@@34 (Int) T@U)
(declare-fun $generated@@38 (Int Int) Bool)
(declare-fun $generated@@42 (Int Int) Bool)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@U Int Int) Bool)
(declare-fun $generated@@56 (T@U) Int)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@U Int Int) Bool)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@96 (Int Int) Bool)
(declare-fun $generated@@99 (Int Int) Bool)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@119 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@120 (T@T T@T) T@T)
(declare-fun $generated@@121 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@122 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@T) T@T)
(declare-fun $generated@@124 (T@T) T@T)
(declare-fun $generated@@177 (T@T T@U T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@24 Int) ($generated@@25 Int) ($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@23 $generated@@26 $generated@@27) (=> ($generated@@21 $generated@@26 $generated@@24 $generated@@25) ($generated@@21 $generated@@27 $generated@@24 $generated@@25)))
 :pattern ( ($generated@@21 $generated@@26 $generated@@24 $generated@@25) ($generated@@22 $generated@@26 $generated@@28) ($generated@@22 $generated@@27 $generated@@28))
))))
(assert (= ($generated@@29 $generated) $generated@@1))
(assert (= ($generated@@29 $generated@@0) $generated@@2))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@31 $generated@@32)) ($generated@@23 $generated@@30 $generated@@32))
 :pattern ( ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@31 $generated@@32))
 :pattern ( ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@30 $generated@@32))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@35 Int) ($generated@@36 Int) ($generated@@37 T@U) ) (!  (=> (= $generated@@37 ($generated@@34 0)) ($generated@@33 $generated@@37 $generated@@35 $generated@@36))
 :pattern ( ($generated@@33 $generated@@37 $generated@@35 $generated@@36))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@39 Int) ($generated@@40 Int) ) (!  (=> ($generated@@38 $generated@@39 $generated@@40) (forall (($generated@@41 T@U) ) (! ($generated@@33 $generated@@41 $generated@@39 $generated@@40)
 :pattern ( ($generated@@33 $generated@@41 $generated@@39 $generated@@40))
)))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@43 Int) ($generated@@44 Int) ) (!  (=> ($generated@@42 $generated@@43 $generated@@44) (exists (($generated@@45 T@U) ) (! ($generated@@21 $generated@@45 $generated@@43 $generated@@44)
 :pattern ( ($generated@@21 $generated@@45 $generated@@43 $generated@@44))
)))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@46 Int) ($generated@@47 Int) ($generated@@48 T@U) ) (!  (=> (= $generated@@48 ($generated@@34 0)) (not ($generated@@21 $generated@@48 $generated@@46 $generated@@47)))
 :pattern ( ($generated@@21 $generated@@48 $generated@@46 $generated@@47))
))))
(assert (forall (($generated@@50 Int) ) (! (= ($generated@@49 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@53 $generated@@52))
)))
(assert (= ($generated@@4 $generated@@54) 3))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@57 T@U) ($generated@@58 Int) ($generated@@59 Int) ) (!  (=> (or ($generated@@55 ($generated@@51 $generated@@54 $generated@@57) $generated@@58 $generated@@59) (< 1 $generated@@20)) (and (=> (=> (< 0 ($generated@@56 $generated@@57)) (= $generated@@58 $generated@@59)) (=> (= ($generated@@49 0) ($generated@@56 $generated@@57)) (forall (($generated@@60 T@U) ) (!  (=> ($generated@@23 $generated@@60 $generated@@57) ($generated@@55 $generated@@60 $generated@@58 $generated@@59))
 :pattern ( ($generated@@33 $generated@@60 $generated@@58 $generated@@59))
)))) (= ($generated@@33 ($generated@@51 $generated@@54 $generated@@57) $generated@@58 $generated@@59)  (and (=> (< 0 ($generated@@56 $generated@@57)) (= $generated@@58 $generated@@59)) (=> (= ($generated@@49 0) ($generated@@56 $generated@@57)) (forall (($generated@@61 T@U) ) (!  (=> ($generated@@23 $generated@@61 $generated@@57) ($generated@@33 $generated@@61 $generated@@58 $generated@@59))
 :pattern ( ($generated@@33 $generated@@61 $generated@@58 $generated@@59))
)))))))
 :weight 3
 :pattern ( ($generated@@33 ($generated@@51 $generated@@54 $generated@@57) $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@63 $generated@@65 ($generated@@62 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@62 $generated@@65 $generated@@64))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@67 T@U) ($generated@@68 Int) ($generated@@69 Int) ) (!  (=> (or ($generated@@66 ($generated@@51 $generated@@54 $generated@@67) $generated@@68 $generated@@69) (< 1 $generated@@20)) (and (=> (=> (< 0 ($generated@@56 $generated@@67)) (= $generated@@68 $generated@@69)) (=> (= ($generated@@49 0) ($generated@@56 $generated@@67)) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@22 $generated@@70 $generated@@67) ($generated@@66 $generated@@70 $generated@@68 $generated@@69))
 :pattern ( ($generated@@21 $generated@@70 $generated@@68 $generated@@69))
)))) (= ($generated@@21 ($generated@@51 $generated@@54 $generated@@67) $generated@@68 $generated@@69)  (and (=> (< 0 ($generated@@56 $generated@@67)) (= $generated@@68 $generated@@69)) (=> (= ($generated@@49 0) ($generated@@56 $generated@@67)) (exists (($generated@@71 T@U) ) (!  (and ($generated@@22 $generated@@71 $generated@@67) ($generated@@21 $generated@@71 $generated@@68 $generated@@69))
 :pattern ( ($generated@@21 $generated@@71 $generated@@68 $generated@@69))
)))))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@51 $generated@@54 $generated@@67) $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@73 Int) ) (!  (=> (<= 0 $generated@@73) (and ($generated@@72 ($generated@@34 $generated@@73)) (= ($generated@@56 ($generated@@34 $generated@@73)) $generated@@73)))
 :pattern ( ($generated@@34 $generated@@73))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@74 T@U) ($generated@@75 Int) ($generated@@76 Int) ) (!  (=> (or ($generated@@55 ($generated@@51 $generated@@54 $generated@@74) ($generated@@49 $generated@@75) ($generated@@49 $generated@@76)) (< 1 $generated@@20)) (and (=> (=> (< 0 ($generated@@56 $generated@@74)) (= ($generated@@49 $generated@@75) ($generated@@49 $generated@@76))) (=> (= ($generated@@49 0) ($generated@@56 $generated@@74)) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@23 $generated@@77 $generated@@74) ($generated@@55 $generated@@77 $generated@@75 $generated@@76))
 :pattern ( ($generated@@33 $generated@@77 $generated@@75 $generated@@76))
)))) (= ($generated@@33 ($generated@@51 $generated@@54 $generated@@74) ($generated@@49 $generated@@75) ($generated@@49 $generated@@76))  (and (=> (< 0 ($generated@@56 $generated@@74)) (= ($generated@@49 $generated@@75) ($generated@@49 $generated@@76))) (=> (= ($generated@@49 0) ($generated@@56 $generated@@74)) (forall (($generated@@78 T@U) ) (!  (=> ($generated@@23 $generated@@78 $generated@@74) ($generated@@33 $generated@@78 $generated@@75 $generated@@76))
 :pattern ( ($generated@@33 $generated@@78 $generated@@75 $generated@@76))
)))))))
 :weight 3
 :pattern ( ($generated@@33 ($generated@@51 $generated@@54 $generated@@74) ($generated@@49 $generated@@75) ($generated@@49 $generated@@76)))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@79 T@U) ($generated@@80 Int) ($generated@@81 Int) ) (!  (=> (or ($generated@@55 $generated@@79 $generated@@80 $generated@@81) (< 1 $generated@@20)) (and (=> (=> (< 0 ($generated@@56 $generated@@79)) (= $generated@@80 $generated@@81)) (=> (= ($generated@@49 0) ($generated@@56 $generated@@79)) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@23 $generated@@82 $generated@@79) ($generated@@55 $generated@@82 $generated@@80 $generated@@81))
 :pattern ( ($generated@@33 $generated@@82 $generated@@80 $generated@@81))
)))) (= ($generated@@33 $generated@@79 $generated@@80 $generated@@81)  (and (=> (< 0 ($generated@@56 $generated@@79)) (= $generated@@80 $generated@@81)) (=> (= ($generated@@49 0) ($generated@@56 $generated@@79)) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@23 $generated@@83 $generated@@79) ($generated@@33 $generated@@83 $generated@@80 $generated@@81))
 :pattern ( ($generated@@33 $generated@@83 $generated@@80 $generated@@81))
)))))))
 :pattern ( ($generated@@33 $generated@@79 $generated@@80 $generated@@81))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@84 T@U) ($generated@@85 Int) ($generated@@86 Int) ) (!  (=> (or ($generated@@66 ($generated@@51 $generated@@54 $generated@@84) ($generated@@49 $generated@@85) ($generated@@49 $generated@@86)) (< 1 $generated@@20)) (and (=> (=> (< 0 ($generated@@56 $generated@@84)) (= ($generated@@49 $generated@@85) ($generated@@49 $generated@@86))) (=> (= ($generated@@49 0) ($generated@@56 $generated@@84)) (forall (($generated@@87 T@U) ) (!  (=> ($generated@@22 $generated@@87 $generated@@84) ($generated@@66 $generated@@87 $generated@@85 $generated@@86))
 :pattern ( ($generated@@21 $generated@@87 $generated@@85 $generated@@86))
)))) (= ($generated@@21 ($generated@@51 $generated@@54 $generated@@84) ($generated@@49 $generated@@85) ($generated@@49 $generated@@86))  (and (=> (< 0 ($generated@@56 $generated@@84)) (= ($generated@@49 $generated@@85) ($generated@@49 $generated@@86))) (=> (= ($generated@@49 0) ($generated@@56 $generated@@84)) (exists (($generated@@88 T@U) ) (!  (and ($generated@@22 $generated@@88 $generated@@84) ($generated@@21 $generated@@88 $generated@@85 $generated@@86))
 :pattern ( ($generated@@21 $generated@@88 $generated@@85 $generated@@86))
)))))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@51 $generated@@54 $generated@@84) ($generated@@49 $generated@@85) ($generated@@49 $generated@@86)))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@89 T@U) ($generated@@90 Int) ($generated@@91 Int) ) (!  (=> (or ($generated@@66 $generated@@89 $generated@@90 $generated@@91) (< 1 $generated@@20)) (and (=> (=> (< 0 ($generated@@56 $generated@@89)) (= $generated@@90 $generated@@91)) (=> (= ($generated@@49 0) ($generated@@56 $generated@@89)) (forall (($generated@@92 T@U) ) (!  (=> ($generated@@22 $generated@@92 $generated@@89) ($generated@@66 $generated@@92 $generated@@90 $generated@@91))
 :pattern ( ($generated@@21 $generated@@92 $generated@@90 $generated@@91))
)))) (= ($generated@@21 $generated@@89 $generated@@90 $generated@@91)  (and (=> (< 0 ($generated@@56 $generated@@89)) (= $generated@@90 $generated@@91)) (=> (= ($generated@@49 0) ($generated@@56 $generated@@89)) (exists (($generated@@93 T@U) ) (!  (and ($generated@@22 $generated@@93 $generated@@89) ($generated@@21 $generated@@93 $generated@@90 $generated@@91))
 :pattern ( ($generated@@21 $generated@@93 $generated@@90 $generated@@91))
)))))))
 :pattern ( ($generated@@21 $generated@@89 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (or (or ($generated@@23 $generated@@94 $generated@@95) (= $generated@@94 $generated@@95)) ($generated@@23 $generated@@95 $generated@@94))
 :pattern ( ($generated@@23 $generated@@94 $generated@@95) ($generated@@23 $generated@@95 $generated@@94))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@97 Int) ($generated@@98 Int) ) (!  (=> (or ($generated@@96 $generated@@97 $generated@@98) (< 0 $generated@@20)) (= ($generated@@38 $generated@@97 $generated@@98) (= $generated@@97 $generated@@98)))
 :pattern ( ($generated@@38 $generated@@97 $generated@@98))
))))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@100 Int) ($generated@@101 Int) ) (!  (=> (or ($generated@@99 $generated@@100 $generated@@101) (< 0 $generated@@20)) (= ($generated@@42 $generated@@100 $generated@@101) (= $generated@@100 $generated@@101)))
 :pattern ( ($generated@@42 $generated@@100 $generated@@101))
))))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@22 $generated@@102 $generated@@103) ($generated@@23 $generated@@102 $generated@@103))
 :pattern ( ($generated@@22 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (! (<= 0 ($generated@@56 $generated@@104))
 :pattern ( ($generated@@56 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@62 $generated@@106 ($generated@@63 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@63 $generated@@106 $generated@@105))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@107 Int) ($generated@@108 Int) ) (!  (=> (forall (($generated@@109 T@U) ) (! ($generated@@33 $generated@@109 $generated@@107 $generated@@108)
 :pattern ( ($generated@@33 $generated@@109 $generated@@107 $generated@@108))
)) ($generated@@38 $generated@@107 $generated@@108))
 :pattern ( ($generated@@38 $generated@@107 $generated@@108))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@110 Int) ($generated@@111 Int) ) (!  (=> (exists (($generated@@112 T@U) ) (! ($generated@@21 $generated@@112 $generated@@110 $generated@@111)
 :pattern ( ($generated@@21 $generated@@112 $generated@@110 $generated@@111))
)) ($generated@@42 $generated@@110 $generated@@111))
 :pattern ( ($generated@@42 $generated@@110 $generated@@111))
))))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (and (and (and (=> ($generated@@23 $generated@@113 $generated@@114) (or (not (= $generated@@113 $generated@@114)) (not true))) (=> (and ($generated@@72 $generated@@113) (not ($generated@@72 $generated@@114))) ($generated@@23 $generated@@113 $generated@@114))) (=> (and ($generated@@72 $generated@@113) ($generated@@72 $generated@@114)) (= ($generated@@23 $generated@@113 $generated@@114) (< ($generated@@56 $generated@@113) ($generated@@56 $generated@@114))))) (=> (and ($generated@@23 $generated@@113 $generated@@114) ($generated@@72 $generated@@114)) ($generated@@72 $generated@@113)))
 :pattern ( ($generated@@23 $generated@@113 $generated@@114))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@115 $generated@@125 $generated@@126 $generated@@127 ($generated@@121 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@130 $generated@@131) $generated@@128)
 :weight 0
)) (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@115 $generated@@132 $generated@@133 $generated@@134 ($generated@@121 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@115 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@115 $generated@@141 $generated@@142 $generated@@143 ($generated@@121 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@115 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)))) (= ($generated@@4 $generated@@116) 4)) (= ($generated@@4 $generated@@117) 5)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@119 $generated@@150 $generated@@151 ($generated@@122 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@152) $generated@@154) $generated@@152)
 :weight 0
))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@159 $generated@@160) (= ($generated@@119 $generated@@155 $generated@@156 ($generated@@122 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@157) $generated@@160) ($generated@@119 $generated@@155 $generated@@156 $generated@@158 $generated@@160)))
 :weight 0
))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@4 ($generated@@120 $generated@@161 $generated@@162)) 6))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@123 ($generated@@120 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@120 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@124 ($generated@@120 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@120 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 Bool) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@9 ($generated@@115 $generated@@116 $generated@@117 $generated@@5 ($generated@@118 $generated@@167 $generated@@168 $generated@@169 $generated@@170) $generated@@171 $generated@@172))  (=> (and (or (not (= $generated@@171 $generated@@167)) (not true)) ($generated@@9 ($generated@@62 $generated@@5 ($generated@@119 $generated@@117 $generated@@54 ($generated@@119 $generated@@116 ($generated@@120 $generated@@117 $generated@@54) $generated@@168 $generated@@171) $generated@@169)))) $generated@@170))
 :pattern ( ($generated@@115 $generated@@116 $generated@@117 $generated@@5 ($generated@@118 $generated@@167 $generated@@168 $generated@@169 $generated@@170) $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> ($generated@@72 $generated@@173) (= $generated@@173 ($generated@@34 ($generated@@56 $generated@@173))))
 :pattern ( ($generated@@56 $generated@@173))
 :pattern ( ($generated@@72 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@63 $generated@@6 ($generated@@10 ($generated@@49 $generated@@174))) ($generated@@51 $generated@@54 ($generated@@63 $generated@@6 ($generated@@10 $generated@@174))))
 :pattern ( ($generated@@63 $generated@@6 ($generated@@10 ($generated@@49 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@63 $generated@@176 ($generated@@51 $generated@@176 $generated@@175)) ($generated@@51 $generated@@54 ($generated@@63 $generated@@176 $generated@@175)))
 :pattern ( ($generated@@63 $generated@@176 ($generated@@51 $generated@@176 $generated@@175)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! ($generated@@177 $generated@@6 $generated@@179 $generated $generated@@178)
 :pattern ( ($generated@@177 $generated@@6 $generated@@179 $generated $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! ($generated@@177 $generated@@54 $generated@@181 $generated@@0 $generated@@180)
 :pattern ( ($generated@@177 $generated@@54 $generated@@181 $generated@@0 $generated@@180))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@196  (=> (= $generated@@182 ($generated@@118 $generated@@183 $generated@@184 $generated@@3 false)) (=> (and (and ($generated@@177 $generated@@6 ($generated@@10 $generated@@185) $generated $generated@@184) ($generated@@177 $generated@@6 ($generated@@10 $generated@@185) $generated $generated@@184)) (and ($generated@@96 $generated@@185 $generated@@185) ($generated@@96 $generated@@185 $generated@@185))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (=> ($generated@@96 $generated@@185 $generated@@185) (or ($generated@@38 $generated@@185 $generated@@185) (= $generated@@185 $generated@@185)))) (=> (and ($generated@@38 $generated@@185 $generated@@185) ($generated@@177 $generated@@54 $generated@@186 $generated@@0 $generated@@184)) (=> (and (and ($generated@@177 $generated@@6 ($generated@@10 $generated@@187) $generated $generated@@184) ($generated@@177 $generated@@6 ($generated@@10 $generated@@187) $generated $generated@@184)) (and ($generated@@55 $generated@@186 $generated@@187 $generated@@187) ($generated@@55 $generated@@186 $generated@@187 $generated@@187))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (=> ($generated@@55 $generated@@186 $generated@@187 $generated@@187) (or ($generated@@33 $generated@@186 $generated@@187 $generated@@187) (=> (< 0 ($generated@@56 $generated@@186)) (= $generated@@187 $generated@@187))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (=> ($generated@@55 $generated@@186 $generated@@187 $generated@@187) (or ($generated@@33 $generated@@186 $generated@@187 $generated@@187) (=> (= ($generated@@49 0) ($generated@@56 $generated@@186)) (forall (($generated@@197 T@U) ) (!  (=> ($generated@@23 $generated@@197 $generated@@186) ($generated@@33 $generated@@197 $generated@@187 $generated@@187))
 :pattern ( ($generated@@33 $generated@@197 $generated@@187 $generated@@187))
)))))) (=> ($generated@@33 $generated@@186 $generated@@187 $generated@@187) (and (=> (= (ControlFlow 0 2) (- 0 6)) (= $generated@@188 $generated@@188)) (=> (= $generated@@188 $generated@@188) (=> (and (and ($generated@@189 $generated@@190) ($generated@@191 $generated@@190)) (= $generated@@184 $generated@@190)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= $generated@@192 $generated@@192)) (=> (= $generated@@192 $generated@@192) (=> (and (and (and ($generated@@189 $generated@@193) ($generated@@191 $generated@@193)) (= $generated@@190 $generated@@193)) (and (and ($generated@@177 $generated@@6 ($generated@@10 $generated@@194) $generated $generated@@193) ($generated@@177 $generated@@6 ($generated@@10 $generated@@194) $generated $generated@@193)) (and ($generated@@99 $generated@@194 $generated@@194) ($generated@@99 $generated@@194 $generated@@194)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@99 $generated@@194 $generated@@194) (or ($generated@@42 $generated@@194 $generated@@194) (= $generated@@194 $generated@@194)))) (=> (and ($generated@@42 $generated@@194 $generated@@194) ($generated@@177 $generated@@54 $generated@@186 $generated@@0 $generated@@193)) (=> (and (and ($generated@@177 $generated@@6 ($generated@@10 $generated@@195) $generated $generated@@193) ($generated@@177 $generated@@6 ($generated@@10 $generated@@195) $generated $generated@@193)) (and ($generated@@66 $generated@@186 $generated@@195 $generated@@195) ($generated@@66 $generated@@186 $generated@@195 $generated@@195))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@66 $generated@@186 $generated@@195 $generated@@195) (or ($generated@@21 $generated@@186 $generated@@195 $generated@@195) (=> (< 0 ($generated@@56 $generated@@186)) (= $generated@@195 $generated@@195))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@66 $generated@@186 $generated@@195 $generated@@195) (or ($generated@@21 $generated@@186 $generated@@195 $generated@@195) (=> (= ($generated@@49 0) ($generated@@56 $generated@@186)) (exists (($generated@@198 T@U) ) (!  (and ($generated@@22 $generated@@198 $generated@@186) ($generated@@21 $generated@@198 $generated@@195 $generated@@195))
 :pattern ( ($generated@@21 $generated@@198 $generated@@195 $generated@@195))
))))))))))))))))))))))))))
(let (($generated@@199  (=> (and (and (and ($generated@@189 $generated@@184) ($generated@@191 $generated@@184)) (= 2 $generated@@20)) (and (not (= ($generated@@56 $generated@@186) 0)) (= (ControlFlow 0 10) 2))) $generated@@196)))
$generated@@199)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
