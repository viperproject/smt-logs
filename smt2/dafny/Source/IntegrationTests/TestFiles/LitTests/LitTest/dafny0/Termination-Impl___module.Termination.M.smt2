(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U Int) T@U)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@47 (T@T T@U T@U) Bool)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@56 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@93 (Int) Int)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) Bool)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@110 (T@T T@U) T@U)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@118 (T@U) Int)
(declare-fun $generated@@123 (T@U T@U T@U) Bool)
(declare-fun $generated@@137 (T@U Int) T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@25 ($generated@@24 $generated@@26 $generated@@27) $generated@@27)
 :pattern ( ($generated@@24 $generated@@26 $generated@@27))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@28 $generated@@30) ($generated@@25 ($generated@@24 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@24 $generated@@28 $generated@@29) ($generated@@25 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@25 ($generated@@24 $generated@@31 $generated@@32) $generated@@33)  (or (= $generated@@33 $generated@@32) ($generated@@25 $generated@@31 $generated@@33)))
 :pattern ( ($generated@@25 ($generated@@24 $generated@@31 $generated@@32) $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@25 $generated@@36 $generated@@37) (not ($generated@@25 ($generated@@34 $generated@@35 $generated@@36) $generated@@37)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36) ($generated@@25 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ) (!  (not ($generated@@25 $generated@@38 $generated@@39))
 :pattern ( ($generated@@25 $generated@@38 $generated@@39))
)))
(assert (= ($generated@@40 $generated@@41) 0))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 Int) ) (!  (=> (and (<= 0 $generated@@46) (<= $generated@@46 ($generated@@40 $generated@@44))) (= ($generated@@42 ($generated@@43 $generated@@44 $generated@@45) $generated@@46) ($generated@@43 ($generated@@42 $generated@@44 $generated@@46) $generated@@45)))
 :pattern ( ($generated@@42 ($generated@@43 $generated@@44 $generated@@45) $generated@@46))
)))
(assert (= ($generated@@7 $generated@@48) 3))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@47 $generated@@48 $generated@@52 $generated@@49)  (or (= $generated@@52 $generated@@50) (= ($generated@@51 $generated@@52) $generated@@49)))
 :pattern ( ($generated@@47 $generated@@48 $generated@@52 $generated@@49))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@25 ($generated@@34 $generated@@53 $generated@@54) $generated@@55)  (and ($generated@@25 $generated@@53 $generated@@55) (not ($generated@@25 $generated@@54 $generated@@55))))
 :pattern ( ($generated@@25 ($generated@@34 $generated@@53 $generated@@54) $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@56 $generated@@48 $generated@@58 $generated@@57 $generated@@59) ($generated@@56 $generated@@48 $generated@@58 $generated@@49 $generated@@59))
 :pattern ( ($generated@@56 $generated@@48 $generated@@58 $generated@@57 $generated@@59))
 :pattern ( ($generated@@56 $generated@@48 $generated@@58 $generated@@49 $generated@@59))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@61 $generated@@68 $generated@@69 ($generated@@65 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@72) $generated@@70)
 :weight 0
)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@61 $generated@@73 $generated@@74 ($generated@@65 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@61 $generated@@73 $generated@@74 $generated@@76 $generated@@78)))
 :weight 0
))) (= ($generated@@7 $generated@@62) 4)) (= ($generated@@7 $generated@@63) 5)) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (= ($generated@@7 ($generated@@64 $generated@@79 $generated@@80)) 6))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@66 ($generated@@64 $generated@@81 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@64 $generated@@81 $generated@@82))
))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@83 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@64 $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@56 $generated@@48 $generated@@85 $generated@@49 $generated@@86)  (or (= $generated@@85 $generated@@50) ($generated@@12 ($generated@@60 $generated@@8 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@86 $generated@@85) $generated@@3)))))
 :pattern ( ($generated@@56 $generated@@48 $generated@@85 $generated@@49 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@87 $generated@@88 $generated@@89) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@12 ($generated@@60 $generated@@8 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@88 $generated@@90) $generated@@3))) ($generated@@12 ($generated@@60 $generated@@8 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@89 $generated@@90) $generated@@3))))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@89 $generated@@90) $generated@@3))
)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (= $generated@@92 0) (= ($generated@@42 $generated@@91 $generated@@92) $generated@@91))
 :pattern ( ($generated@@42 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 Int) ) (! (= ($generated@@93 $generated@@94) $generated@@94)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 $generated@@96) $generated@@96)
 :pattern ( ($generated@@95 $generated@@97 $generated@@96))
)))
(assert (= ($generated@@7 $generated@@98) 7))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@47 $generated@@98 $generated@@101 ($generated@@99 $generated@@103)) ($generated@@100 $generated@@102 $generated@@103)) ($generated@@47 $generated@@98 ($generated@@43 $generated@@101 $generated@@102) ($generated@@99 $generated@@103)))
 :pattern ( ($generated@@47 $generated@@98 ($generated@@43 $generated@@101 $generated@@102) ($generated@@99 $generated@@103)))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@104 $generated@@105 $generated@@106) (forall (($generated@@107 T@U) ) (!  (=> ($generated@@25 $generated@@105 $generated@@107) ($generated@@25 $generated@@106 $generated@@107))
 :pattern ( ($generated@@25 $generated@@105 $generated@@107))
 :pattern ( ($generated@@25 $generated@@106 $generated@@107))
)))
 :pattern ( ($generated@@104 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 Int) ) (!  (=> (and (<= 0 $generated@@109) (<= $generated@@109 ($generated@@40 $generated@@108))) (= ($generated@@40 ($generated@@42 $generated@@108 $generated@@109)) (- ($generated@@40 $generated@@108) $generated@@109)))
 :pattern ( ($generated@@40 ($generated@@42 $generated@@108 $generated@@109)))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@110 $generated@@112 ($generated@@60 $generated@@112 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@60 $generated@@112 $generated@@111))
)))
(assert (= ($generated@@7 $generated@@113) 8))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@47 $generated@@113 $generated@@115 ($generated@@114 $generated@@116)) (forall (($generated@@117 T@U) ) (!  (=> ($generated@@25 $generated@@115 $generated@@117) ($generated@@100 $generated@@117 $generated@@116))
 :pattern ( ($generated@@25 $generated@@115 $generated@@117))
)))
 :pattern ( ($generated@@47 $generated@@113 $generated@@115 ($generated@@114 $generated@@116)))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 Int) ) (!  (=> (and (< 0 $generated@@120) (<= $generated@@120 ($generated@@40 $generated@@119))) (< ($generated@@118 ($generated@@42 $generated@@119 $generated@@120)) ($generated@@118 $generated@@119)))
 :pattern ( ($generated@@118 ($generated@@42 $generated@@119 $generated@@120)))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@40 ($generated@@43 $generated@@121 $generated@@122)) (+ 1 ($generated@@40 $generated@@121)))
 :pattern ( ($generated@@43 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@123 ($generated@@110 $generated@@127 $generated@@124) $generated@@125 $generated@@126) ($generated@@56 $generated@@127 $generated@@124 $generated@@125 $generated@@126))
 :pattern ( ($generated@@123 ($generated@@110 $generated@@127 $generated@@124) $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> ($generated@@87 $generated@@128 $generated@@129) (=> ($generated@@123 $generated@@130 $generated@@131 $generated@@128) ($generated@@123 $generated@@130 $generated@@131 $generated@@129)))
 :pattern ( ($generated@@87 $generated@@128 $generated@@129) ($generated@@123 $generated@@130 $generated@@131 $generated@@128))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@T) ) (!  (=> ($generated@@87 $generated@@132 $generated@@133) (=> ($generated@@56 $generated@@136 $generated@@134 $generated@@135 $generated@@132) ($generated@@56 $generated@@136 $generated@@134 $generated@@135 $generated@@133)))
 :pattern ( ($generated@@87 $generated@@132 $generated@@133) ($generated@@56 $generated@@136 $generated@@134 $generated@@135 $generated@@132))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 Int) ($generated@@140 Int) ) (!  (=> (and (and (<= 0 $generated@@139) (<= 0 $generated@@140)) (< $generated@@140 (- ($generated@@40 $generated@@138) $generated@@139))) (= ($generated@@137 ($generated@@42 $generated@@138 $generated@@139) $generated@@140) ($generated@@137 $generated@@138 (+ $generated@@140 $generated@@139))))
 :weight 25
 :pattern ( ($generated@@137 ($generated@@42 $generated@@138 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> ($generated@@100 $generated@@141 $generated@@49) (and (= ($generated@@110 $generated@@48 ($generated@@60 $generated@@48 $generated@@141)) $generated@@141) ($generated@@47 $generated@@48 ($generated@@60 $generated@@48 $generated@@141) $generated@@49)))
 :pattern ( ($generated@@100 $generated@@141 $generated@@49))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> ($generated@@100 $generated@@142 $generated@@57) (and (= ($generated@@110 $generated@@48 ($generated@@60 $generated@@48 $generated@@142)) $generated@@142) ($generated@@47 $generated@@48 ($generated@@60 $generated@@48 $generated@@142) $generated@@57)))
 :pattern ( ($generated@@100 $generated@@142 $generated@@57))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@47 $generated@@48 $generated@@143 $generated@@57)  (and ($generated@@47 $generated@@48 $generated@@143 $generated@@49) (or (not (= $generated@@143 $generated@@50)) (not true))))
 :pattern ( ($generated@@47 $generated@@48 $generated@@143 $generated@@57))
 :pattern ( ($generated@@47 $generated@@48 $generated@@143 $generated@@49))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 T@U) ) (!  (and (=> (= $generated@@145 ($generated@@40 $generated@@144)) (= ($generated@@137 ($generated@@43 $generated@@144 $generated@@146) $generated@@145) $generated@@146)) (=> (or (not (= $generated@@145 ($generated@@40 $generated@@144))) (not true)) (= ($generated@@137 ($generated@@43 $generated@@144 $generated@@146) $generated@@145) ($generated@@137 $generated@@144 $generated@@145))))
 :pattern ( ($generated@@137 ($generated@@43 $generated@@144 $generated@@146) $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> ($generated@@147 $generated@@148 $generated@@149) (= $generated@@148 $generated@@149))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (or (not (= $generated@@150 $generated@@152)) (not true)) (=> (and ($generated@@87 $generated@@150 $generated@@151) ($generated@@87 $generated@@151 $generated@@152)) ($generated@@87 $generated@@150 $generated@@152)))
 :pattern ( ($generated@@87 $generated@@150 $generated@@151) ($generated@@87 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@100 $generated@@153 $generated) (and (= ($generated@@110 $generated@@9 ($generated@@60 $generated@@9 $generated@@153)) $generated@@153) ($generated@@47 $generated@@9 ($generated@@60 $generated@@9 $generated@@153) $generated)))
 :pattern ( ($generated@@100 $generated@@153 $generated))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@100 ($generated@@110 $generated@@156 $generated@@154) $generated@@155) ($generated@@47 $generated@@156 $generated@@154 $generated@@155))
 :pattern ( ($generated@@100 ($generated@@110 $generated@@156 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (! (<= 0 ($generated@@40 $generated@@157))
 :pattern ( ($generated@@40 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@56 $generated@@113 $generated@@158 ($generated@@114 $generated@@159) $generated@@160) (forall (($generated@@161 T@U) ) (!  (=> ($generated@@25 $generated@@158 $generated@@161) ($generated@@123 $generated@@161 $generated@@159 $generated@@160))
 :pattern ( ($generated@@25 $generated@@158 $generated@@161))
)))
 :pattern ( ($generated@@56 $generated@@113 $generated@@158 ($generated@@114 $generated@@159) $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@56 $generated@@98 $generated@@162 ($generated@@99 $generated@@163) $generated@@164) (forall (($generated@@165 Int) ) (!  (=> (and (<= 0 $generated@@165) (< $generated@@165 ($generated@@40 $generated@@162))) ($generated@@123 ($generated@@137 $generated@@162 $generated@@165) $generated@@163 $generated@@164))
 :pattern ( ($generated@@137 $generated@@162 $generated@@165))
)))
 :pattern ( ($generated@@56 $generated@@98 $generated@@162 ($generated@@99 $generated@@163) $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@166 ($generated@@114 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@114 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@23 ($generated@@114 $generated@@168)) $generated@@1)
 :pattern ( ($generated@@114 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (! (= ($generated@@169 ($generated@@99 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@99 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@23 ($generated@@99 $generated@@171)) $generated@@2)
 :pattern ( ($generated@@99 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@T) ) (! (= ($generated@@60 $generated@@173 ($generated@@110 $generated@@173 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@110 $generated@@173 $generated@@172))
)))
(assert  (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@174 $generated@@177 $generated@@178 $generated@@179 ($generated@@176 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@182 $generated@@183) $generated@@180)
 :weight 0
)) (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@174 $generated@@184 $generated@@185 $generated@@186 ($generated@@176 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@174 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@174 $generated@@193 $generated@@194 $generated@@195 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@174 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@12 ($generated@@174 $generated@@48 $generated@@62 $generated@@8 ($generated@@175 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))  (=> (and (or (not (= $generated@@206 $generated@@202)) (not true)) ($generated@@12 ($generated@@60 $generated@@8 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@203 $generated@@206) $generated@@204)))) $generated@@205))
 :pattern ( ($generated@@174 $generated@@48 $generated@@62 $generated@@8 ($generated@@175 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (and (= ($generated@@208 ($generated@@43 $generated@@210 $generated@@211)) $generated@@210) (= ($generated@@209 ($generated@@43 $generated@@210 $generated@@211)) $generated@@211))
 :pattern ( ($generated@@43 $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> ($generated@@100 $generated@@212 ($generated@@114 $generated@@213)) (and (= ($generated@@110 $generated@@113 ($generated@@60 $generated@@113 $generated@@212)) $generated@@212) ($generated@@47 $generated@@113 ($generated@@60 $generated@@113 $generated@@212) ($generated@@114 $generated@@213))))
 :pattern ( ($generated@@100 $generated@@212 ($generated@@114 $generated@@213)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> ($generated@@100 $generated@@214 ($generated@@99 $generated@@215)) (and (= ($generated@@110 $generated@@98 ($generated@@60 $generated@@98 $generated@@214)) $generated@@214) ($generated@@47 $generated@@98 ($generated@@60 $generated@@98 $generated@@214) ($generated@@99 $generated@@215))))
 :pattern ( ($generated@@100 $generated@@214 ($generated@@99 $generated@@215)))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> ($generated@@216 ($generated@@65 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@217 $generated@@218 ($generated@@65 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@217 $generated@@218) $generated@@219 $generated@@220))) ($generated@@87 $generated@@217 ($generated@@65 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@217 $generated@@218 ($generated@@65 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@217 $generated@@218) $generated@@219 $generated@@220))))
 :pattern ( ($generated@@65 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@217 $generated@@218 ($generated@@65 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@217 $generated@@218) $generated@@219 $generated@@220)))
)))
(assert (= ($generated@@23 $generated@@49) $generated@@4))
(assert (= ($generated@@221 $generated@@49) $generated@@6))
(assert (= ($generated@@23 $generated@@57) $generated@@5))
(assert (= ($generated@@221 $generated@@57) $generated@@6))
(assert (forall (($generated@@222 T@U) ($generated@@223 Int) ($generated@@224 Int) ) (!  (=> (and (and (<= 0 $generated@@223) (<= $generated@@223 $generated@@224)) (< $generated@@224 ($generated@@40 $generated@@222))) (= ($generated@@137 ($generated@@42 $generated@@222 $generated@@223) (- $generated@@224 $generated@@223)) ($generated@@137 $generated@@222 $generated@@224)))
 :weight 25
 :pattern ( ($generated@@137 $generated@@222 $generated@@224) ($generated@@42 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@147 $generated@@225 $generated@@226) (forall (($generated@@227 T@U) ) (! (= ($generated@@25 $generated@@225 $generated@@227) ($generated@@25 $generated@@226 $generated@@227))
 :pattern ( ($generated@@25 $generated@@225 $generated@@227))
 :pattern ( ($generated@@25 $generated@@226 $generated@@227))
)))
 :pattern ( ($generated@@147 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 Int) ($generated@@230 Int) ) (!  (=> (and (and (<= 0 $generated@@229) (<= 0 $generated@@230)) (<= (+ $generated@@229 $generated@@230) ($generated@@40 $generated@@228))) (= ($generated@@42 ($generated@@42 $generated@@228 $generated@@229) $generated@@230) ($generated@@42 $generated@@228 (+ $generated@@229 $generated@@230))))
 :pattern ( ($generated@@42 ($generated@@42 $generated@@228 $generated@@229) $generated@@230))
)))
(assert (forall (($generated@@231 Int) ) (! (= ($generated@@110 $generated@@9 ($generated@@13 ($generated@@93 $generated@@231))) ($generated@@95 $generated@@63 ($generated@@110 $generated@@9 ($generated@@13 $generated@@231))))
 :pattern ( ($generated@@110 $generated@@9 ($generated@@13 ($generated@@93 $generated@@231))))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@T) ) (! (= ($generated@@110 $generated@@233 ($generated@@95 $generated@@233 $generated@@232)) ($generated@@95 $generated@@63 ($generated@@110 $generated@@233 $generated@@232)))
 :pattern ( ($generated@@110 $generated@@233 ($generated@@95 $generated@@233 $generated@@232)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= ($generated@@40 $generated@@234) 0) (= $generated@@234 $generated@@41))
 :pattern ( ($generated@@40 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! ($generated@@56 $generated@@9 $generated@@236 $generated $generated@@235)
 :pattern ( ($generated@@56 $generated@@9 $generated@@236 $generated $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= ($generated@@47 $generated@@98 $generated@@237 ($generated@@99 $generated@@238)) (forall (($generated@@239 Int) ) (!  (=> (and (<= 0 $generated@@239) (< $generated@@239 ($generated@@40 $generated@@237))) ($generated@@100 ($generated@@137 $generated@@237 $generated@@239) $generated@@238))
 :pattern ( ($generated@@137 $generated@@237 $generated@@239))
)))
 :pattern ( ($generated@@47 $generated@@98 $generated@@237 ($generated@@99 $generated@@238)))
)))
(assert (forall (($generated@@240 T@U) ) (! ($generated@@47 $generated@@9 $generated@@240 $generated)
 :pattern ( ($generated@@47 $generated@@9 $generated@@240 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 () Bool)
(declare-fun $generated@@243 () Bool)
(declare-fun $generated@@244 () Int)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () Bool)
(declare-fun $generated@@254 () Int)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () Bool)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () Bool)
(declare-fun $generated@@259 () Int)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@271  (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (or (<= 0 $generated@@241) (and (not $generated@@242) $generated@@243)) (= $generated@@244 $generated@@241))) (=> (or (or (<= 0 $generated@@241) (and (not $generated@@242) $generated@@243)) (= $generated@@244 $generated@@241)) (=> (= (ControlFlow 0 6) (- 0 5)) (or (and (not $generated@@242) $generated@@243) (and (= $generated@@242 $generated@@243) (or (< $generated@@244 $generated@@241) (and (= $generated@@244 $generated@@241) (or (and (= $generated@@245 $generated@@50) (or (not (= $generated@@246 $generated@@50)) (not true))) (and (=  (or (not (= $generated@@245 $generated@@50)) (not true))  (or (not (= $generated@@246 $generated@@50)) (not true))) (or (and ($generated@@104 $generated@@247 $generated@@248) (not ($generated@@104 $generated@@248 $generated@@247))) (and ($generated@@147 $generated@@247 $generated@@248) (< ($generated@@118 $generated@@249) ($generated@@118 $generated@@250)))))))))))))))
(let (($generated@@272  (=> (or (not (= ($generated@@40 $generated@@250) 0)) (not true)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (and (<= 0 ($generated@@93 1)) (<= ($generated@@93 1) ($generated@@40 $generated@@250)))) (=> (and (<= 0 ($generated@@93 1)) (<= ($generated@@93 1) ($generated@@40 $generated@@250))) (=> (= $generated@@251 ($generated@@42 $generated@@250 ($generated@@93 1))) (=> (and (= $generated@@245 $generated@@246) (= $generated@@249 $generated@@251)) (=> (and (and (= $generated@@244 $generated@@241) (= $generated@@242 $generated@@243)) (and (= $generated@@247 $generated@@248) (= (ControlFlow 0 12) 6))) $generated@@271))))))))
(let (($generated@@273  (=> (or (not (= $generated@@246 $generated@@50)) (not true)) (=> (and (= $generated@@245 $generated@@50) (= $generated@@249 $generated@@250)) (=> (and (and (= $generated@@244 $generated@@241) (= $generated@@242 $generated@@243)) (and (= $generated@@247 $generated@@248) (= (ControlFlow 0 11) 6))) $generated@@271)))))
(let (($generated@@274  (=> (and (and (and (<= ($generated@@93 20) $generated@@241) (= $generated@@252 (- $generated@@241 20))) (and (= $generated@@245 $generated@@246) (= $generated@@249 $generated@@250))) (and (and (= $generated@@244 $generated@@252) (= $generated@@242 $generated@@243)) (and (= $generated@@247 $generated@@248) (= (ControlFlow 0 10) 6)))) $generated@@271)))
(let (($generated@@275  (=> $generated@@243 (=> (and (and (and (= $generated@@253  (not $generated@@243)) (= $generated@@254 (+ $generated@@241 1))) (and (= $generated@@245 $generated@@246) (= $generated@@249 $generated@@250))) (and (and (= $generated@@244 $generated@@254) (= $generated@@242 $generated@@253)) (and (= $generated@@247 $generated@@248) (= (ControlFlow 0 9) 6)))) $generated@@271))))
(let (($generated@@276  (=> (and (and (and ($generated@@25 $generated@@248 ($generated@@110 $generated@@9 ($generated@@13 ($generated@@93 12)))) (= $generated@@255 ($generated@@34 $generated@@248 ($generated@@24 $generated@@38 ($generated@@110 $generated@@9 ($generated@@13 ($generated@@93 12))))))) (and (= $generated@@245 $generated@@246) (= $generated@@249 $generated@@250))) (and (and (= $generated@@244 $generated@@241) (= $generated@@242 $generated@@243)) (and (= $generated@@247 $generated@@255) (= (ControlFlow 0 8) 6)))) $generated@@271)))
(let (($generated@@277 true))
(let (($generated@@278  (=> (= $generated@@246 $generated@@50) (and (=> (= (ControlFlow 0 14) 12) $generated@@272) (=> (= (ControlFlow 0 14) 4) $generated@@277)))))
(let (($generated@@279  (=> (< $generated@@241 ($generated@@93 20)) (and (=> (= (ControlFlow 0 15) 11) $generated@@273) (=> (= (ControlFlow 0 15) 14) $generated@@278)))))
(let (($generated@@280  (=> (not $generated@@243) (and (=> (= (ControlFlow 0 16) 10) $generated@@274) (=> (= (ControlFlow 0 16) 15) $generated@@279)))))
(let (($generated@@281  (=> (not ($generated@@25 $generated@@248 ($generated@@110 $generated@@9 ($generated@@13 ($generated@@93 12))))) (and (=> (= (ControlFlow 0 17) 9) $generated@@275) (=> (= (ControlFlow 0 17) 16) $generated@@280)))))
(let (($generated@@282  (=> ($generated@@12 ($generated@@95 $generated@@8 ($generated@@11 true))) (and (=> (= (ControlFlow 0 18) 8) $generated@@276) (=> (= (ControlFlow 0 18) 17) $generated@@281)))))
(let (($generated@@283 true))
(let (($generated@@284  (=> $generated@@256 (and (=> (= (ControlFlow 0 19) 3) $generated@@283) (=> (= (ControlFlow 0 19) 18) $generated@@282)))))
(let (($generated@@285 true))
(let (($generated@@286  (and (=> (= (ControlFlow 0 20) 2) $generated@@285) (=> (= (ControlFlow 0 20) 19) $generated@@284))))
(let (($generated@@287 true))
(let (($generated@@288  (=> (and ($generated@@47 $generated@@98 $generated@@250 ($generated@@99 $generated)) ($generated@@56 $generated@@98 $generated@@250 ($generated@@99 $generated) $generated@@257)) (=> (and (and ($generated@@47 $generated@@48 $generated@@246 $generated@@49) ($generated@@56 $generated@@48 $generated@@246 $generated@@49 $generated@@257)) (and ($generated@@47 $generated@@113 $generated@@248 ($generated@@114 $generated)) ($generated@@56 $generated@@113 $generated@@248 ($generated@@114 $generated) $generated@@257))) (=> (and (and (and (and (and (not false) (<= 0 $generated@@241)) $generated@@258) (= $generated@@259 500)) (forall (($generated@@289 T@U) ) (!  (=> (and (or (not (= $generated@@289 $generated@@50)) (not true)) ($generated@@12 ($generated@@60 $generated@@8 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@260 $generated@@289) $generated@@3)))) (= ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@257 $generated@@289) ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@257 $generated@@289)))
 :pattern ( ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@257 $generated@@289))
))) (and (and ($generated@@87 $generated@@257 $generated@@257) (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (or (not (= $generated@@290 $generated@@50)) (not true)) ($generated@@12 ($generated@@60 $generated@@8 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@257 $generated@@290) $generated@@3)))) (or (= ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@257 $generated@@290) $generated@@291) ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@257 $generated@@290) $generated@@291)) ($generated@@12 ($generated@@174 $generated@@48 $generated@@62 $generated@@8 $generated@@261 $generated@@290 $generated@@291))))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@257 $generated@@290) $generated@@291))
))) (and (=> $generated@@243 $generated@@258) (=> (= $generated@@243 $generated@@258) (and (<= $generated@@241 $generated@@259) (=> (= $generated@@241 $generated@@259) (and (=> (or (not (= $generated@@246 $generated@@50)) (not true)) (or (not (= $generated@@262 $generated@@50)) (not true))) (=> (=  (or (not (= $generated@@246 $generated@@50)) (not true))  (or (not (= $generated@@262 $generated@@50)) (not true))) (and ($generated@@104 $generated@@248 $generated@@263) (=> ($generated@@147 $generated@@248 $generated@@263) (<= ($generated@@118 $generated@@250) ($generated@@118 $generated@@264)))))))))))) (and (=> (= (ControlFlow 0 21) 1) $generated@@287) (=> (= (ControlFlow 0 21) 20) $generated@@286)))))))
(let (($generated@@292  (=> (= $generated@@261 ($generated@@175 $generated@@50 $generated@@260 $generated@@3 false)) (=> (and (= $generated@@258 ($generated@@12 ($generated@@95 $generated@@8 ($generated@@11 true)))) (= $generated@@259 ($generated@@93 500))) (=> (and (and (and (and (or (not (= $generated@@262 $generated@@50)) (not true)) ($generated@@47 $generated@@48 $generated@@262 $generated@@49)) (not ($generated@@12 ($generated@@60 $generated@@8 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@260 $generated@@262) $generated@@3))))) (and (= $generated@@257 ($generated@@65 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@260 $generated@@262 ($generated@@65 $generated@@62 $generated@@63 ($generated@@61 $generated@@48 ($generated@@64 $generated@@62 $generated@@63) $generated@@260 $generated@@262) $generated@@3 ($generated@@110 $generated@@8 ($generated@@11 true))))) ($generated@@216 $generated@@257))) (and (and ($generated@@265 $generated@@257) (= $generated@@263 ($generated@@95 $generated@@113 ($generated@@24 ($generated@@24 $generated@@38 ($generated@@110 $generated@@9 ($generated@@13 ($generated@@93 12)))) ($generated@@110 $generated@@9 ($generated@@13 ($generated@@93 200))))))) (and (= $generated@@264 ($generated@@95 $generated@@98 ($generated@@43 ($generated@@43 ($generated@@43 $generated@@41 ($generated@@110 $generated@@9 ($generated@@13 ($generated@@93 5)))) ($generated@@110 $generated@@9 ($generated@@13 ($generated@@93 8)))) ($generated@@110 $generated@@9 ($generated@@13 ($generated@@93 13)))))) (= (ControlFlow 0 22) 21)))) $generated@@288)))))
(let (($generated@@293  (=> (and (and ($generated@@216 $generated@@260) ($generated@@265 $generated@@260)) (and (or (not (= $generated@@266 $generated@@50)) (not true)) (and ($generated@@47 $generated@@48 $generated@@266 $generated@@57) ($generated@@56 $generated@@48 $generated@@266 $generated@@57 $generated@@260)))) (=> (and (and (and (and ($generated@@47 $generated@@48 $generated@@267 $generated@@49) ($generated@@56 $generated@@48 $generated@@267 $generated@@49 $generated@@260)) true) (and (and ($generated@@47 $generated@@113 $generated@@268 ($generated@@114 $generated)) ($generated@@56 $generated@@113 $generated@@268 ($generated@@114 $generated) $generated@@260)) true)) (and (and (and ($generated@@47 $generated@@98 $generated@@269 ($generated@@99 $generated)) ($generated@@56 $generated@@98 $generated@@269 ($generated@@99 $generated) $generated@@260)) true) (and (= 1 $generated@@270) (= (ControlFlow 0 23) 22)))) $generated@@292))))
$generated@@293)))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
