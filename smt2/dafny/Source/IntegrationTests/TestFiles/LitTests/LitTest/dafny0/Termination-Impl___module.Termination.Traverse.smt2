(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) T@U)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@105 (T@U) Bool)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@124 (T@U) Int)
(declare-fun $generated@@125 (T@U) Int)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated@@24) $generated@@3))
(assert (= ($generated@@7 $generated@@26) 3))
(assert (forall (($generated@@30 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@30 $generated@@27)  (or (= $generated@@30 $generated@@28) (= ($generated@@29 $generated@@30) $generated@@27)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 $generated@@27))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@31 $generated@@26 $generated@@33 $generated@@32 $generated@@34) ($generated@@31 $generated@@26 $generated@@33 $generated@@27 $generated@@34))
 :pattern ( ($generated@@31 $generated@@26 $generated@@33 $generated@@32 $generated@@34))
 :pattern ( ($generated@@31 $generated@@26 $generated@@33 $generated@@27 $generated@@34))
)))
(assert (= ($generated@@7 $generated@@35) 4))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> ($generated@@37 $generated@@39) ($generated@@31 $generated@@35 $generated@@24 ($generated@@36 $generated@@38) $generated@@39))
 :pattern ( ($generated@@31 $generated@@35 $generated@@24 ($generated@@36 $generated@@38) $generated@@39))
)))
(assert (forall (($generated@@40 T@U) ) (! ($generated@@25 $generated@@35 $generated@@24 ($generated@@36 $generated@@40))
 :pattern ( ($generated@@25 $generated@@35 $generated@@24 ($generated@@36 $generated@@40)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@42 $generated@@49 $generated@@50 ($generated@@46 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@53) $generated@@51)
 :weight 0
)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@58 $generated@@59) (= ($generated@@42 $generated@@54 $generated@@55 ($generated@@46 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@59) ($generated@@42 $generated@@54 $generated@@55 $generated@@57 $generated@@59)))
 :weight 0
))) (= ($generated@@7 $generated@@43) 5)) (= ($generated@@7 $generated@@44) 6)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (= ($generated@@7 ($generated@@45 $generated@@60 $generated@@61)) 7))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@47 ($generated@@45 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@62 $generated@@63))
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@64 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@45 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@31 $generated@@26 $generated@@66 $generated@@27 $generated@@67)  (or (= $generated@@66 $generated@@28) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@26 ($generated@@45 $generated@@43 $generated@@44) $generated@@67 $generated@@66) $generated)))))
 :pattern ( ($generated@@31 $generated@@26 $generated@@66 $generated@@27 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@68 $generated@@69 $generated@@70) (= $generated@@69 $generated@@70))
 :pattern ( ($generated@@68 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (and ($generated@@71 $generated@@74) ($generated@@71 $generated@@75)) (= ($generated@@68 $generated@@74 $generated@@75)  (and (= ($generated@@72 $generated@@74) ($generated@@72 $generated@@75)) ($generated@@68 ($generated@@73 $generated@@74) ($generated@@73 $generated@@75)))))
 :pattern ( ($generated@@68 $generated@@74 $generated@@75) ($generated@@71 $generated@@74))
 :pattern ( ($generated@@68 $generated@@74 $generated@@75) ($generated@@71 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 $generated@@77) $generated@@77)
 :pattern ( ($generated@@76 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@25 $generated@@35 ($generated@@79 $generated@@82 $generated@@83) ($generated@@36 $generated@@81))  (and ($generated@@80 $generated@@82 $generated@@81) ($generated@@25 $generated@@35 $generated@@83 ($generated@@36 $generated@@81))))
 :pattern ( ($generated@@25 $generated@@35 ($generated@@79 $generated@@82 $generated@@83) ($generated@@36 $generated@@81)))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 $generated@@85) (= ($generated@@23 $generated@@85) $generated@@3))
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@71 $generated@@86) (= ($generated@@23 $generated@@86) $generated@@4))
 :pattern ( ($generated@@71 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@41 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@41 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@71 $generated@@90) (exists (($generated@@91 T@U) ($generated@@92 T@U) ) (= $generated@@90 ($generated@@79 $generated@@91 $generated@@92))))
 :pattern ( ($generated@@71 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@84 $generated@@93) (= $generated@@93 $generated@@24))
 :pattern ( ($generated@@84 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@94 ($generated@@87 $generated@@98 $generated@@95) $generated@@96 $generated@@97) ($generated@@31 $generated@@98 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@94 ($generated@@87 $generated@@98 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@101 T@U) ) (!  (and (= ($generated@@99 ($generated@@36 $generated@@101)) $generated@@0) (= ($generated@@100 ($generated@@36 $generated@@101)) $generated@@5))
 :pattern ( ($generated@@36 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@80 $generated@@102 $generated@@27) (and (= ($generated@@87 $generated@@26 ($generated@@41 $generated@@26 $generated@@102)) $generated@@102) ($generated@@25 $generated@@26 ($generated@@41 $generated@@26 $generated@@102) $generated@@27)))
 :pattern ( ($generated@@80 $generated@@102 $generated@@27))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@80 $generated@@103 $generated@@32) (and (= ($generated@@87 $generated@@26 ($generated@@41 $generated@@26 $generated@@103)) $generated@@103) ($generated@@25 $generated@@26 ($generated@@41 $generated@@26 $generated@@103) $generated@@32)))
 :pattern ( ($generated@@80 $generated@@103 $generated@@32))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@104 $generated@@32)  (and ($generated@@25 $generated@@26 $generated@@104 $generated@@27) (or (not (= $generated@@104 $generated@@28)) (not true))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@104 $generated@@32))
 :pattern ( ($generated@@25 $generated@@26 $generated@@104 $generated@@27))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@105 $generated@@106) (or ($generated@@84 $generated@@106) ($generated@@71 $generated@@106)))
 :pattern ( ($generated@@105 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> ($generated@@25 $generated@@35 $generated@@108 ($generated@@36 $generated@@107)) (or ($generated@@84 $generated@@108) ($generated@@71 $generated@@108)))
 :pattern ( ($generated@@71 $generated@@108) ($generated@@25 $generated@@35 $generated@@108 ($generated@@36 $generated@@107)))
 :pattern ( ($generated@@84 $generated@@108) ($generated@@25 $generated@@35 $generated@@108 ($generated@@36 $generated@@107)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@80 ($generated@@87 $generated@@111 $generated@@109) $generated@@110) ($generated@@25 $generated@@111 $generated@@109 $generated@@110))
 :pattern ( ($generated@@80 ($generated@@87 $generated@@111 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and ($generated@@84 $generated@@112) ($generated@@84 $generated@@113)) ($generated@@68 $generated@@112 $generated@@113))
 :pattern ( ($generated@@68 $generated@@112 $generated@@113) ($generated@@84 $generated@@112))
 :pattern ( ($generated@@68 $generated@@112 $generated@@113) ($generated@@84 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@23 ($generated@@79 $generated@@114 $generated@@115)) $generated@@4)
 :pattern ( ($generated@@79 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@72 ($generated@@79 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@79 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@73 ($generated@@79 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@79 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@36 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@36 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@41 $generated@@123 ($generated@@87 $generated@@123 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@87 $generated@@123 $generated@@122))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (< ($generated@@124 $generated@@126) ($generated@@125 ($generated@@79 $generated@@126 $generated@@127)))
 :pattern ( ($generated@@79 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (< ($generated@@125 $generated@@129) ($generated@@125 ($generated@@79 $generated@@128 $generated@@129)))
 :pattern ( ($generated@@79 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@37 $generated@@132) (and ($generated@@71 $generated@@130) ($generated@@31 $generated@@35 $generated@@130 ($generated@@36 $generated@@131) $generated@@132))) ($generated@@94 ($generated@@72 $generated@@130) $generated@@131 $generated@@132))
 :pattern ( ($generated@@94 ($generated@@72 $generated@@130) $generated@@131 $generated@@132))
)))
(assert  (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@133 $generated@@136 $generated@@137 $generated@@138 ($generated@@135 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@141 $generated@@142) $generated@@139)
 :weight 0
)) (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@133 $generated@@143 $generated@@144 $generated@@145 ($generated@@135 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@133 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@133 $generated@@152 $generated@@153 $generated@@154 ($generated@@135 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@133 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@12 ($generated@@133 $generated@@26 $generated@@43 $generated@@8 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))  (=> (and (or (not (= $generated@@165 $generated@@161)) (not true)) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@26 ($generated@@45 $generated@@43 $generated@@44) $generated@@162 $generated@@165) $generated@@163)))) $generated@@164))
 :pattern ( ($generated@@133 $generated@@26 $generated@@43 $generated@@8 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@124 ($generated@@87 $generated@@35 $generated@@167)) ($generated@@125 $generated@@167))
 :pattern ( ($generated@@124 ($generated@@87 $generated@@35 $generated@@167)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@80 $generated@@169 ($generated@@36 $generated@@168)) (and (= ($generated@@87 $generated@@35 ($generated@@41 $generated@@35 $generated@@169)) $generated@@169) ($generated@@25 $generated@@35 ($generated@@41 $generated@@35 $generated@@169) ($generated@@36 $generated@@168))))
 :pattern ( ($generated@@80 $generated@@169 ($generated@@36 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and ($generated@@37 $generated@@172) (and ($generated@@71 $generated@@170) ($generated@@31 $generated@@35 $generated@@170 ($generated@@36 $generated@@171) $generated@@172))) ($generated@@31 $generated@@35 ($generated@@73 $generated@@170) ($generated@@36 $generated@@171) $generated@@172))
 :pattern ( ($generated@@31 $generated@@35 ($generated@@73 $generated@@170) ($generated@@36 $generated@@171) $generated@@172))
)))
(assert (= ($generated@@99 $generated@@27) $generated@@1))
(assert (= ($generated@@100 $generated@@27) $generated@@6))
(assert (= ($generated@@99 $generated@@32) $generated@@2))
(assert (= ($generated@@100 $generated@@32) $generated@@6))
(assert (= $generated@@24 ($generated@@76 $generated@@35 $generated@@24)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@79 ($generated@@76 $generated@@44 $generated@@173) ($generated@@76 $generated@@35 $generated@@174)) ($generated@@76 $generated@@35 ($generated@@79 $generated@@173 $generated@@174)))
 :pattern ( ($generated@@79 ($generated@@76 $generated@@44 $generated@@173) ($generated@@76 $generated@@35 $generated@@174)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@87 $generated@@176 ($generated@@76 $generated@@176 $generated@@175)) ($generated@@76 $generated@@44 ($generated@@87 $generated@@176 $generated@@175)))
 :pattern ( ($generated@@87 $generated@@176 ($generated@@76 $generated@@176 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@37 $generated@@180) (= ($generated@@31 $generated@@35 ($generated@@79 $generated@@178 $generated@@179) ($generated@@36 $generated@@177) $generated@@180)  (and ($generated@@94 $generated@@178 $generated@@177 $generated@@180) ($generated@@31 $generated@@35 $generated@@179 ($generated@@36 $generated@@177) $generated@@180))))
 :pattern ( ($generated@@31 $generated@@35 ($generated@@79 $generated@@178 $generated@@179) ($generated@@36 $generated@@177) $generated@@180))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Bool)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@199  (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@68 $generated@@181 ($generated@@79 $generated@@182 $generated@@183)))))
(let (($generated@@200  (=> (= $generated@@181 ($generated@@79 $generated@@184 $generated@@185)) (=> (and (and ($generated@@80 $generated@@184 $generated@@186) ($generated@@94 $generated@@184 $generated@@186 $generated@@187)) (and ($generated@@25 $generated@@35 $generated@@185 ($generated@@36 $generated@@186)) ($generated@@31 $generated@@35 $generated@@185 ($generated@@36 $generated@@186) $generated@@187))) (=> (and (and (and (and ($generated@@25 $generated@@35 $generated@@188 ($generated@@36 $generated@@186)) ($generated@@31 $generated@@35 $generated@@188 ($generated@@36 $generated@@186) $generated@@187)) (= $generated@@189 $generated@@185)) (and ($generated@@25 $generated@@35 $generated@@189 ($generated@@36 $generated@@186)) (= $generated@@188 $generated@@189))) (and (and (and ($generated@@80 $generated@@190 $generated@@186) ($generated@@94 $generated@@190 $generated@@186 $generated@@187)) (= $generated@@191 $generated@@184)) (and ($generated@@80 $generated@@191 $generated@@186) (= $generated@@190 $generated@@191)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) true) (=> (= $generated@@182 $generated@@190) (=> (and (= $generated@@183 $generated@@188) (= (ControlFlow 0 7) 6)) $generated@@199))))))))
(let (($generated@@201 true))
(let (($generated@@202  (=> (and (= $generated@@181 $generated@@24) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@203  (=> (or (not (= $generated@@181 ($generated@@79 $generated@@184 $generated@@185))) (not true)) (and (=> (= (ControlFlow 0 4) 2) $generated@@202) (=> (= (ControlFlow 0 4) 3) $generated@@201)))))
(let (($generated@@204  (=> (= $generated@@192 ($generated@@134 $generated@@28 $generated@@187 $generated false)) (and (=> (= (ControlFlow 0 9) 7) $generated@@200) (=> (= (ControlFlow 0 9) 4) $generated@@203)))))
(let (($generated@@205  (=> (and (and ($generated@@37 $generated@@187) ($generated@@193 $generated@@187)) (and (or (not (= $generated@@194 $generated@@28)) (not true)) (and ($generated@@25 $generated@@26 $generated@@194 $generated@@32) ($generated@@31 $generated@@26 $generated@@194 $generated@@32 $generated@@187)))) (=> (and (and (and (and ($generated@@25 $generated@@35 $generated@@181 ($generated@@36 $generated@@186)) ($generated@@31 $generated@@35 $generated@@181 ($generated@@36 $generated@@186) $generated@@187)) ($generated@@105 $generated@@181)) (=> $generated@@195 (and ($generated@@80 $generated@@196 $generated@@186) ($generated@@94 $generated@@196 $generated@@186 $generated@@187)))) (and (and (and ($generated@@25 $generated@@35 $generated@@197 ($generated@@36 $generated@@186)) ($generated@@31 $generated@@35 $generated@@197 ($generated@@36 $generated@@186) $generated@@187)) (= 1 $generated@@198)) (and (not ($generated@@68 $generated@@181 $generated@@24)) (= (ControlFlow 0 10) 9)))) $generated@@204))))
$generated@@205))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
