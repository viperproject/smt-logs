(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@50 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T T@T) T@T)
(declare-fun $generated@@67 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@95 (Int) Int)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@109 (T@U) Bool)
(declare-fun $generated@@112 (T@U T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 (T@U T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated@@2) 0))
(assert (= ($generated@@30 $generated) $generated@@0))
(assert (= ($generated@@31 $generated@@2) $generated@@3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! ($generated@@33 ($generated@@32 $generated@@34 $generated@@35) $generated@@35)
 :pattern ( ($generated@@32 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@33 $generated@@36 $generated@@38) ($generated@@33 ($generated@@32 $generated@@36 $generated@@37) $generated@@38))
 :pattern ( ($generated@@32 $generated@@36 $generated@@37) ($generated@@33 $generated@@36 $generated@@38))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@33 ($generated@@32 $generated@@39 $generated@@40) $generated@@41)  (or (= $generated@@41 $generated@@40) ($generated@@33 $generated@@39 $generated@@41)))
 :pattern ( ($generated@@33 ($generated@@32 $generated@@39 $generated@@40) $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ) (!  (not ($generated@@33 $generated@@42 $generated@@43))
 :pattern ( ($generated@@33 $generated@@42 $generated@@43))
)))
(assert (= ($generated@@13 $generated@@45) 3))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@49 $generated@@46)  (or (= $generated@@49 $generated@@47) (= ($generated@@48 $generated@@49) $generated@@46)))
 :pattern ( ($generated@@44 $generated@@45 $generated@@49 $generated@@46))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@50 $generated@@45 $generated@@53 $generated@@51 $generated@@54) ($generated@@50 $generated@@45 $generated@@53 $generated@@52 $generated@@54))
 :pattern ( ($generated@@50 $generated@@45 $generated@@53 $generated@@51 $generated@@54))
 :pattern ( ($generated@@50 $generated@@45 $generated@@53 $generated@@52 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@50 $generated@@45 $generated@@56 $generated@@55 $generated@@57) ($generated@@50 $generated@@45 $generated@@56 $generated@@46 $generated@@57))
 :pattern ( ($generated@@50 $generated@@45 $generated@@56 $generated@@55 $generated@@57))
 :pattern ( ($generated@@50 $generated@@45 $generated@@56 $generated@@46 $generated@@57))
)))
(assert (= ($generated@@29 $generated@@58) 0))
(assert (= ($generated@@59 $generated@@6 $generated@@11) $generated@@58))
(assert ($generated@@60 $generated@@58))
(assert (= ($generated@@29 $generated@@61) 0))
(assert (= ($generated@@59 $generated@@6 $generated@@12) $generated@@61))
(assert ($generated@@60 $generated@@61))
(assert  (and (and (and (and (and (and (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@63 $generated@@70 $generated@@71 ($generated@@67 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@74) $generated@@72)
 :weight 0
)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (or (= $generated@@79 $generated@@80) (= ($generated@@63 $generated@@75 $generated@@76 ($generated@@67 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@77) $generated@@80) ($generated@@63 $generated@@75 $generated@@76 $generated@@78 $generated@@80)))
 :weight 0
))) (= ($generated@@13 $generated@@64) 4)) (= ($generated@@13 $generated@@65) 5)) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (= ($generated@@13 ($generated@@66 $generated@@81 $generated@@82)) 6))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@68 ($generated@@66 $generated@@83 $generated@@84)) $generated@@83)
 :pattern ( ($generated@@66 $generated@@83 $generated@@84))
))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@69 ($generated@@66 $generated@@85 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@66 $generated@@85 $generated@@86))
))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@50 $generated@@45 $generated@@87 $generated@@52 $generated@@88)  (or (= $generated@@87 $generated@@47) ($generated@@18 ($generated@@62 $generated@@14 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@88 $generated@@87) $generated@@2)))))
 :pattern ( ($generated@@50 $generated@@45 $generated@@87 $generated@@52 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@50 $generated@@45 $generated@@89 $generated@@46 $generated@@90)  (or (= $generated@@89 $generated@@47) ($generated@@18 ($generated@@62 $generated@@14 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@90 $generated@@89) $generated@@2)))))
 :pattern ( ($generated@@50 $generated@@45 $generated@@89 $generated@@46 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@91 $generated@@92 $generated@@93) (forall (($generated@@94 T@U) ) (!  (=> ($generated@@18 ($generated@@62 $generated@@14 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@92 $generated@@94) $generated@@2))) ($generated@@18 ($generated@@62 $generated@@14 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@93 $generated@@94) $generated@@2))))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@93 $generated@@94) $generated@@2))
)))
 :pattern ( ($generated@@91 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@96 Int) ) (! (= ($generated@@95 $generated@@96) $generated@@96)
 :pattern ( ($generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 $generated@@98) $generated@@98)
 :pattern ( ($generated@@97 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@100 $generated@@102 ($generated@@62 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@62 $generated@@102 $generated@@101))
)))
(assert (= ($generated@@13 $generated@@103) 7))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@44 $generated@@103 $generated@@106 ($generated@@104 $generated@@107)) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@33 $generated@@106 $generated@@108) ($generated@@105 $generated@@108 $generated@@107))
 :pattern ( ($generated@@33 $generated@@106 $generated@@108))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@106 ($generated@@104 $generated@@107)))
)))
(assert ($generated@@60 $generated@@2))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (and (and ($generated@@109 $generated@@110) (and (or (not (= $generated@@111 $generated@@47)) (not true)) (= ($generated@@48 $generated@@111) $generated@@46))) ($generated@@18 ($generated@@62 $generated@@14 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@110 $generated@@111) $generated@@2)))) ($generated@@50 $generated@@15 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@110 $generated@@111) $generated@@58)) $generated $generated@@110))
 :pattern ( ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@110 $generated@@111) $generated@@58)))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@112 ($generated@@100 $generated@@116 $generated@@113) $generated@@114 $generated@@115) ($generated@@50 $generated@@116 $generated@@113 $generated@@114 $generated@@115))
 :pattern ( ($generated@@112 ($generated@@100 $generated@@116 $generated@@113) $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@91 $generated@@117 $generated@@118) (=> ($generated@@112 $generated@@119 $generated@@120 $generated@@117) ($generated@@112 $generated@@119 $generated@@120 $generated@@118)))
 :pattern ( ($generated@@91 $generated@@117 $generated@@118) ($generated@@112 $generated@@119 $generated@@120 $generated@@117))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (!  (=> ($generated@@91 $generated@@121 $generated@@122) (=> ($generated@@50 $generated@@125 $generated@@123 $generated@@124 $generated@@121) ($generated@@50 $generated@@125 $generated@@123 $generated@@124 $generated@@122)))
 :pattern ( ($generated@@91 $generated@@121 $generated@@122) ($generated@@50 $generated@@125 $generated@@123 $generated@@124 $generated@@121))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@105 $generated@@126 $generated@@52) (and (= ($generated@@100 $generated@@45 ($generated@@62 $generated@@45 $generated@@126)) $generated@@126) ($generated@@44 $generated@@45 ($generated@@62 $generated@@45 $generated@@126) $generated@@52)))
 :pattern ( ($generated@@105 $generated@@126 $generated@@52))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@105 $generated@@127 $generated@@51) (and (= ($generated@@100 $generated@@45 ($generated@@62 $generated@@45 $generated@@127)) $generated@@127) ($generated@@44 $generated@@45 ($generated@@62 $generated@@45 $generated@@127) $generated@@51)))
 :pattern ( ($generated@@105 $generated@@127 $generated@@51))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@105 $generated@@128 $generated@@46) (and (= ($generated@@100 $generated@@45 ($generated@@62 $generated@@45 $generated@@128)) $generated@@128) ($generated@@44 $generated@@45 ($generated@@62 $generated@@45 $generated@@128) $generated@@46)))
 :pattern ( ($generated@@105 $generated@@128 $generated@@46))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@105 $generated@@129 $generated@@55) (and (= ($generated@@100 $generated@@45 ($generated@@62 $generated@@45 $generated@@129)) $generated@@129) ($generated@@44 $generated@@45 ($generated@@62 $generated@@45 $generated@@129) $generated@@55)))
 :pattern ( ($generated@@105 $generated@@129 $generated@@55))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@130 $generated@@51)  (and ($generated@@44 $generated@@45 $generated@@130 $generated@@52) (or (not (= $generated@@130 $generated@@47)) (not true))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@130 $generated@@51))
 :pattern ( ($generated@@44 $generated@@45 $generated@@130 $generated@@52))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@131 $generated@@55)  (and ($generated@@44 $generated@@45 $generated@@131 $generated@@46) (or (not (= $generated@@131 $generated@@47)) (not true))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@131 $generated@@55))
 :pattern ( ($generated@@44 $generated@@45 $generated@@131 $generated@@46))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and ($generated@@109 $generated@@132) (and (or (not (= $generated@@133 $generated@@47)) (not true)) (= ($generated@@48 $generated@@133) $generated@@46))) ($generated@@44 $generated@@103 ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@132 $generated@@133) $generated@@61)) ($generated@@104 $generated@@51)))
 :pattern ( ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@132 $generated@@133) $generated@@61)))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (and ($generated@@109 $generated@@134) (and (or (not (= $generated@@135 $generated@@47)) (not true)) (= ($generated@@48 $generated@@135) $generated@@46))) ($generated@@18 ($generated@@62 $generated@@14 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@134 $generated@@135) $generated@@2)))) ($generated@@50 $generated@@103 ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@134 $generated@@135) $generated@@61)) ($generated@@104 $generated@@51) $generated@@134))
 :pattern ( ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@134 $generated@@135) $generated@@61)))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (or (not (= $generated@@136 $generated@@138)) (not true)) (=> (and ($generated@@91 $generated@@136 $generated@@137) ($generated@@91 $generated@@137 $generated@@138)) ($generated@@91 $generated@@136 $generated@@138)))
 :pattern ( ($generated@@91 $generated@@136 $generated@@137) ($generated@@91 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (and (= ($generated@@139 ($generated@@59 $generated@@140 $generated@@141)) $generated@@140) (= ($generated@@31 ($generated@@59 $generated@@140 $generated@@141)) $generated@@141))
 :pattern ( ($generated@@59 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> ($generated@@105 $generated@@142 $generated) (and (= ($generated@@100 $generated@@15 ($generated@@62 $generated@@15 $generated@@142)) $generated@@142) ($generated@@44 $generated@@15 ($generated@@62 $generated@@15 $generated@@142) $generated)))
 :pattern ( ($generated@@105 $generated@@142 $generated))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@105 ($generated@@100 $generated@@145 $generated@@143) $generated@@144) ($generated@@44 $generated@@145 $generated@@143 $generated@@144))
 :pattern ( ($generated@@105 ($generated@@100 $generated@@145 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@50 $generated@@103 $generated@@146 ($generated@@104 $generated@@147) $generated@@148) (forall (($generated@@149 T@U) ) (!  (=> ($generated@@33 $generated@@146 $generated@@149) ($generated@@112 $generated@@149 $generated@@147 $generated@@148))
 :pattern ( ($generated@@33 $generated@@146 $generated@@149))
)))
 :pattern ( ($generated@@50 $generated@@103 $generated@@146 ($generated@@104 $generated@@147) $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (! ($generated@@44 $generated@@45 $generated@@150 $generated@@52)
 :pattern ( ($generated@@44 $generated@@45 $generated@@150 $generated@@52))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@151 ($generated@@104 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@104 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@30 ($generated@@104 $generated@@153)) $generated@@1)
 :pattern ( ($generated@@104 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@62 $generated@@155 ($generated@@100 $generated@@155 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@100 $generated@@155 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and ($generated@@109 $generated@@156) (and (or (not (= $generated@@157 $generated@@47)) (not true)) (= ($generated@@48 $generated@@157) $generated@@46))) ($generated@@44 $generated@@15 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@156 $generated@@157) $generated@@58)) $generated))
 :pattern ( ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@156 $generated@@157) $generated@@58)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and ($generated@@109 $generated@@160) ($generated@@109 $generated@@161)) (and (or (not (= $generated@@162 $generated@@47)) (not true)) ($generated@@44 $generated@@45 $generated@@162 $generated@@55))) (and ($generated@@158 $generated@@160) ($generated@@91 $generated@@160 $generated@@161))) (=> (forall (($generated@@163 T@U) ($generated@@164 T@U) )  (=> (and (or (not (= $generated@@163 $generated@@47)) (not true)) (or (= $generated@@163 $generated@@162) ($generated@@33 ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@160 $generated@@162) $generated@@61)) ($generated@@100 $generated@@45 $generated@@163)))) (= ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@160 $generated@@163) $generated@@164) ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@161 $generated@@163) $generated@@164)))) (= ($generated@@159 $generated@@160 $generated@@162) ($generated@@159 $generated@@161 $generated@@162))))
 :pattern ( ($generated@@158 $generated@@160) ($generated@@91 $generated@@160 $generated@@161) ($generated@@159 $generated@@161 $generated@@162))
)))
(assert  (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@165 $generated@@168 $generated@@169 $generated@@170 ($generated@@167 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@173 $generated@@174) $generated@@171)
 :weight 0
)) (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@165 $generated@@175 $generated@@176 $generated@@177 ($generated@@167 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@165 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@165 $generated@@184 $generated@@185 $generated@@186 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@165 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)))))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 Bool) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@18 ($generated@@165 $generated@@45 $generated@@64 $generated@@14 ($generated@@166 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@197 $generated@@198))  (=> (and (or (not (= $generated@@197 $generated@@193)) (not true)) ($generated@@18 ($generated@@62 $generated@@14 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@194 $generated@@197) $generated@@195)))) $generated@@196))
 :pattern ( ($generated@@165 $generated@@45 $generated@@64 $generated@@14 ($generated@@166 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@105 $generated@@199 ($generated@@104 $generated@@200)) (and (= ($generated@@100 $generated@@103 ($generated@@62 $generated@@103 $generated@@199)) $generated@@199) ($generated@@44 $generated@@103 ($generated@@62 $generated@@103 $generated@@199) ($generated@@104 $generated@@200))))
 :pattern ( ($generated@@105 $generated@@199 ($generated@@104 $generated@@200)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> ($generated@@109 ($generated@@67 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@201 $generated@@202 ($generated@@67 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@201 $generated@@202) $generated@@203 $generated@@204))) ($generated@@91 $generated@@201 ($generated@@67 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@201 $generated@@202 ($generated@@67 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@201 $generated@@202) $generated@@203 $generated@@204))))
 :pattern ( ($generated@@67 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@201 $generated@@202 ($generated@@67 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@201 $generated@@202) $generated@@203 $generated@@204)))
)))
(assert  (=> (<= 0 $generated@@205) (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (or ($generated@@206 $generated@@207 $generated@@208) (and (< 0 $generated@@205) (and ($generated@@109 $generated@@207) (and (or (not (= $generated@@208 $generated@@47)) (not true)) (and ($generated@@44 $generated@@45 $generated@@208 $generated@@55) ($generated@@50 $generated@@45 $generated@@208 $generated@@55 $generated@@207)))))) (=> ($generated@@159 $generated@@207 $generated@@208) ($generated@@33 ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@207 $generated@@208) $generated@@61)) ($generated@@100 $generated@@45 $generated@@208))))
 :pattern ( ($generated@@159 $generated@@207 $generated@@208))
))))
(assert (= ($generated@@30 $generated@@52) $generated@@4))
(assert (= ($generated@@209 $generated@@52) $generated@@9))
(assert (= ($generated@@30 $generated@@51) $generated@@5))
(assert (= ($generated@@209 $generated@@51) $generated@@9))
(assert (= ($generated@@30 $generated@@46) $generated@@7))
(assert (= ($generated@@209 $generated@@46) $generated@@10))
(assert (= ($generated@@30 $generated@@55) $generated@@8))
(assert (= ($generated@@209 $generated@@55) $generated@@10))
(assert (forall (($generated@@210 Int) ) (! (= ($generated@@100 $generated@@15 ($generated@@19 ($generated@@95 $generated@@210))) ($generated@@97 $generated@@65 ($generated@@100 $generated@@15 ($generated@@19 $generated@@210))))
 :pattern ( ($generated@@100 $generated@@15 ($generated@@19 ($generated@@95 $generated@@210))))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@T) ) (! (= ($generated@@100 $generated@@212 ($generated@@97 $generated@@212 $generated@@211)) ($generated@@97 $generated@@65 ($generated@@100 $generated@@212 $generated@@211)))
 :pattern ( ($generated@@100 $generated@@212 ($generated@@97 $generated@@212 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! ($generated@@50 $generated@@15 $generated@@214 $generated $generated@@213)
 :pattern ( ($generated@@50 $generated@@15 $generated@@214 $generated $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ) (! ($generated@@44 $generated@@15 $generated@@215 $generated)
 :pattern ( ($generated@@44 $generated@@15 $generated@@215 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@222  (=> (= $generated@@216 ($generated@@166 $generated@@47 $generated@@217 $generated@@2 false)) (=> (and (= $generated@@218 ($generated@@95 0)) (= $generated@@219 ($generated@@32 $generated@@42 ($generated@@100 $generated@@45 $generated@@220)))) (=> (and (and (or (not (= $generated@@220 $generated@@47)) (not true)) ($generated@@44 $generated@@45 $generated@@220 $generated@@46)) (and (not ($generated@@18 ($generated@@62 $generated@@14 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@217 $generated@@220) $generated@@2)))) (= ($generated@@20 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@217 $generated@@220) $generated@@58))) $generated@@218))) (=> (and (and (and (= ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@217 $generated@@220) $generated@@61)) $generated@@219) (= $generated@@221 ($generated@@67 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@217 $generated@@220 ($generated@@67 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@217 $generated@@220) $generated@@2 ($generated@@100 $generated@@14 ($generated@@17 true)))))) (and ($generated@@109 $generated@@221) ($generated@@158 $generated@@221))) (and (and ($generated@@112 ($generated@@100 $generated@@45 $generated@@220) $generated@@46 $generated@@221) ($generated@@206 $generated@@221 $generated@@220)) (and ($generated@@206 $generated@@221 $generated@@220) ($generated@@159 $generated@@221 $generated@@220)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@20 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@221 $generated@@220) $generated@@58))) ($generated@@95 0))) (=> (= ($generated@@20 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@221 $generated@@220) $generated@@58))) ($generated@@95 0)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@159 $generated@@221 $generated@@220)) (=> ($generated@@159 $generated@@221 $generated@@220) (=> (= (ControlFlow 0 2) (- 0 1)) (and (forall (($generated@@223 T@U) ) (!  (=> ($generated@@33 ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@221 $generated@@220) $generated@@61)) ($generated@@100 $generated@@45 $generated@@223)) (or (not (= $generated@@223 $generated@@47)) (not true)))
 :pattern (  (or (not (= $generated@@223 $generated@@47)) (not true)))
)) (forall (($generated@@224 T@U) ) (!  (=> ($generated@@33 ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@221 $generated@@220) $generated@@61)) ($generated@@100 $generated@@45 $generated@@224)) (not ($generated@@18 ($generated@@62 $generated@@14 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@217 $generated@@224) $generated@@2)))))
 :pattern ( ($generated@@33 ($generated@@62 $generated@@103 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@221 $generated@@220) $generated@@61)) ($generated@@100 $generated@@45 $generated@@224)))
))))))))))))))
(let (($generated@@225  (=> (and (and ($generated@@109 $generated@@217) ($generated@@158 $generated@@217)) (and (= 1 $generated@@205) (= (ControlFlow 0 5) 2))) $generated@@222)))
$generated@@225)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
