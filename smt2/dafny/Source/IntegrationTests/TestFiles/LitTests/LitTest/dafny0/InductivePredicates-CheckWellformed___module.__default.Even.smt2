(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (Int) T@U)
(declare-fun $generated@@43 (T@U) Int)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@T T@U T@U) Bool)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (Int) Int)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) Int)
(declare-fun $generated@@64 (Int) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@124 (T@T T@T) T@T)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@128 (T@T) T@T)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@181 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@27 $generated@@30 $generated@@31) (=> ($generated@@25 $generated@@28 $generated@@30 $generated@@29) ($generated@@25 $generated@@28 $generated@@31 $generated@@29)))
 :pattern ( ($generated@@25 $generated@@28 $generated@@30 $generated@@29) ($generated@@26 $generated@@30 $generated@@32) ($generated@@26 $generated@@31 $generated@@32))
))))
(assert (= ($generated@@33 $generated) $generated@@0))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and ($generated@@27 $generated@@34 $generated@@35) ($generated@@27 $generated@@35 $generated@@36)) ($generated@@27 $generated@@34 $generated@@36))
 :pattern ( ($generated@@27 $generated@@34 $generated@@35) ($generated@@27 $generated@@35 $generated@@36))
 :pattern ( ($generated@@27 $generated@@34 $generated@@35) ($generated@@27 $generated@@34 $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! ($generated@@37 $generated@@10 $generated@@39 $generated@@38 $generated@@40)
 :pattern ( ($generated@@37 $generated@@10 $generated@@39 $generated@@38 $generated@@40))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 Int) ($generated@@46 Int) ) (!  (=> (and (and (<= 0 $generated@@45) (<= 0 $generated@@46)) (<= (+ $generated@@45 $generated@@46) ($generated@@43 $generated@@44))) (= ($generated@@41 ($generated@@41 $generated@@44 ($generated@@42 $generated@@45)) ($generated@@42 $generated@@46)) ($generated@@41 $generated@@44 ($generated@@42 (+ $generated@@45 $generated@@46)))))
 :pattern ( ($generated@@41 ($generated@@41 $generated@@44 ($generated@@42 $generated@@45)) ($generated@@42 $generated@@46)))
)))
(assert (= ($generated@@47 $generated@@48) $generated@@5))
(assert (= ($generated@@8 $generated@@50) 3))
(assert ($generated@@49 $generated@@50 $generated@@48 $generated@@51))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@52 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@57 $generated@@58) (= ($generated@@47 $generated@@58) $generated@@4))
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@59 $generated@@60) (= ($generated@@47 $generated@@60) $generated@@5))
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@62 $generated@@66 $generated@@67) (and (< 2 $generated@@24) ($generated@@49 $generated@@50 $generated@@67 $generated@@51))) (and (and (=> (< 0 ($generated@@43 $generated@@66)) (=> (not (and ($generated@@57 $generated@@67) (= ($generated@@63 $generated@@67) ($generated@@52 0)))) (=> ($generated@@57 $generated@@67) (=> (<= ($generated@@52 2) ($generated@@63 $generated@@67)) ($generated@@62 ($generated@@41 $generated@@66 ($generated@@42 1)) ($generated@@64 (- ($generated@@63 $generated@@67) 2))))))) (=> (=> (< 0 ($generated@@43 $generated@@66)) (or (and ($generated@@57 $generated@@67) (= ($generated@@63 $generated@@67) ($generated@@52 0))) (and (and ($generated@@57 $generated@@67) (<= ($generated@@52 2) ($generated@@63 $generated@@67))) ($generated@@25 $generated@@65 ($generated@@41 $generated@@66 ($generated@@42 1)) ($generated@@64 (- ($generated@@63 $generated@@67) 2)))))) (=> (= ($generated@@52 0) ($generated@@43 $generated@@66)) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@26 $generated@@68 $generated@@66) ($generated@@62 $generated@@68 $generated@@67))
 :pattern ( ($generated@@25 $generated@@65 $generated@@68 $generated@@67))
))))) (= ($generated@@25 ($generated@@61 $generated@@65) $generated@@66 $generated@@67)  (and (=> (< 0 ($generated@@43 $generated@@66)) (or (and ($generated@@57 $generated@@67) (= ($generated@@63 $generated@@67) ($generated@@52 0))) (and (and ($generated@@57 $generated@@67) (<= ($generated@@52 2) ($generated@@63 $generated@@67))) ($generated@@25 $generated@@65 ($generated@@41 $generated@@66 ($generated@@42 1)) ($generated@@64 (- ($generated@@63 $generated@@67) 2)))))) (=> (= ($generated@@52 0) ($generated@@43 $generated@@66)) (exists (($generated@@69 T@U) ) (!  (and ($generated@@26 $generated@@69 $generated@@66) ($generated@@25 $generated@@65 $generated@@69 $generated@@67))
 :pattern ( ($generated@@25 $generated@@65 $generated@@69 $generated@@67))
)))))))
 :pattern ( ($generated@@25 ($generated@@61 $generated@@65) $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 ($generated@@70 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@70 $generated@@73 $generated@@72))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (and ($generated@@49 $generated@@50 $generated@@76 $generated@@51) (exists (($generated@@77 T@U) ) (! ($generated@@25 ($generated@@61 $generated@@75) $generated@@77 $generated@@76)
 :pattern ( ($generated@@25 ($generated@@61 $generated@@75) $generated@@77 $generated@@76))
))) ($generated@@74 ($generated@@61 $generated@@75) $generated@@76))
 :pattern ( ($generated@@74 ($generated@@61 $generated@@75) $generated@@76))
))))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and ($generated@@49 $generated@@50 $generated@@79 $generated@@51) (= $generated@@80 ($generated@@42 0))) (not ($generated@@25 $generated@@78 $generated@@80 $generated@@79)))
 :pattern ( ($generated@@25 $generated@@78 $generated@@80 $generated@@79))
))))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@59 $generated@@81) (= $generated@@81 $generated@@48))
 :pattern ( ($generated@@59 $generated@@81))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (or ($generated@@82 $generated@@84) (and (< 1 $generated@@24) ($generated@@49 $generated@@50 $generated@@84 $generated@@51))) (and (=> (not (and ($generated@@57 $generated@@84) (= ($generated@@63 $generated@@84) ($generated@@52 0)))) (=> ($generated@@57 $generated@@84) (=> (<= ($generated@@52 2) ($generated@@63 $generated@@84)) ($generated@@82 ($generated@@64 (- ($generated@@63 $generated@@84) 2)))))) (= ($generated@@74 ($generated@@61 $generated@@83) $generated@@84)  (or (and ($generated@@57 $generated@@84) (= ($generated@@63 $generated@@84) ($generated@@52 0))) (and (and ($generated@@57 $generated@@84) (<= ($generated@@52 2) ($generated@@63 $generated@@84))) ($generated@@74 $generated@@83 ($generated@@64 (- ($generated@@63 $generated@@84) 2))))))))
 :pattern ( ($generated@@74 ($generated@@61 $generated@@83) $generated@@84))
))))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@57 $generated@@85) (exists (($generated@@86 Int) ) (= $generated@@85 ($generated@@64 $generated@@86))))
 :pattern ( ($generated@@57 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@49 $generated@@10 $generated@@87 $generated@@38) (<= ($generated@@52 0) ($generated@@15 $generated@@87)))
 :pattern ( ($generated@@49 $generated@@10 $generated@@87 $generated@@38))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@25 ($generated@@61 $generated@@88) $generated@@89 $generated@@90) ($generated@@25 $generated@@88 $generated@@89 $generated@@90))
 :pattern ( ($generated@@25 ($generated@@61 $generated@@88) $generated@@89 $generated@@90))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (and ($generated@@49 $generated@@50 $generated@@92 $generated@@51) ($generated@@74 ($generated@@61 $generated@@91) $generated@@92)) (exists (($generated@@93 T@U) ) (! ($generated@@25 ($generated@@61 $generated@@91) $generated@@93 $generated@@92)
 :pattern ( ($generated@@25 ($generated@@61 $generated@@91) $generated@@93 $generated@@92))
)))
 :pattern ( ($generated@@74 ($generated@@61 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and ($generated@@94 $generated@@96) (<= ($generated@@43 $generated@@96) ($generated@@43 $generated@@95))) (and (= ($generated@@94 ($generated@@41 $generated@@95 $generated@@96)) ($generated@@94 $generated@@95)) (= ($generated@@43 ($generated@@41 $generated@@95 $generated@@96)) (- ($generated@@43 $generated@@95) ($generated@@43 $generated@@96)))))
 :pattern ( ($generated@@41 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 Int) ) (!  (=> (<= 0 $generated@@97) (and ($generated@@94 ($generated@@42 $generated@@97)) (= ($generated@@43 ($generated@@42 $generated@@97)) $generated@@97)))
 :pattern ( ($generated@@42 $generated@@97))
)))
(assert (forall (($generated@@98 Int) ) (! (= ($generated@@49 $generated@@50 ($generated@@64 $generated@@98) $generated@@51) ($generated@@49 $generated@@10 ($generated@@14 $generated@@98) $generated@@38))
 :pattern ( ($generated@@49 $generated@@50 ($generated@@64 $generated@@98) $generated@@51))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or (or ($generated@@27 $generated@@99 $generated@@100) (= $generated@@99 $generated@@100)) ($generated@@27 $generated@@100 $generated@@99))
 :pattern ( ($generated@@27 $generated@@99 $generated@@100) ($generated@@27 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@26 $generated@@101 $generated@@102) ($generated@@27 $generated@@101 $generated@@102))
 :pattern ( ($generated@@26 $generated@@101 $generated@@102))
)))
(assert (= ($generated@@8 $generated@@103) 4))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or ($generated@@62 ($generated@@54 $generated@@103 $generated@@105) $generated@@106) (and (< 2 $generated@@24) ($generated@@49 $generated@@50 $generated@@106 $generated@@51))) (and (and (=> (< 0 ($generated@@43 $generated@@105)) (=> (not (and ($generated@@57 $generated@@106) (= ($generated@@63 $generated@@106) ($generated@@52 0)))) (=> ($generated@@57 $generated@@106) (=> (<= ($generated@@52 2) ($generated@@63 $generated@@106)) ($generated@@62 ($generated@@41 $generated@@105 ($generated@@42 1)) ($generated@@64 (- ($generated@@63 $generated@@106) 2))))))) (=> (=> (< 0 ($generated@@43 $generated@@105)) (or (and ($generated@@57 $generated@@106) (= ($generated@@63 $generated@@106) ($generated@@52 0))) (and (and ($generated@@57 $generated@@106) (<= ($generated@@52 2) ($generated@@63 $generated@@106))) ($generated@@25 ($generated@@61 $generated@@104) ($generated@@41 $generated@@105 ($generated@@42 1)) ($generated@@64 (- ($generated@@63 $generated@@106) 2)))))) (=> (= ($generated@@52 0) ($generated@@43 $generated@@105)) (forall (($generated@@107 T@U) ) (!  (=> ($generated@@26 $generated@@107 $generated@@105) ($generated@@62 $generated@@107 $generated@@106))
 :pattern ( ($generated@@25 ($generated@@61 $generated@@104) $generated@@107 $generated@@106))
))))) (= ($generated@@25 ($generated@@61 $generated@@104) ($generated@@54 $generated@@103 $generated@@105) $generated@@106)  (and (=> (< 0 ($generated@@43 $generated@@105)) (or (and ($generated@@57 $generated@@106) (= ($generated@@63 $generated@@106) ($generated@@52 0))) (and (and ($generated@@57 $generated@@106) (<= ($generated@@52 2) ($generated@@63 $generated@@106))) ($generated@@25 ($generated@@61 $generated@@104) ($generated@@41 $generated@@105 ($generated@@42 1)) ($generated@@64 (- ($generated@@63 $generated@@106) 2)))))) (=> (= ($generated@@52 0) ($generated@@43 $generated@@105)) (exists (($generated@@108 T@U) ) (!  (and ($generated@@26 $generated@@108 $generated@@105) ($generated@@25 ($generated@@61 $generated@@104) $generated@@108 $generated@@106))
 :pattern ( ($generated@@25 ($generated@@61 $generated@@104) $generated@@108 $generated@@106))
)))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@61 $generated@@104) ($generated@@54 $generated@@103 $generated@@105) $generated@@106))
))))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@49 $generated@@50 $generated@@109 $generated@@51) (or ($generated@@57 $generated@@109) ($generated@@59 $generated@@109)))
 :pattern ( ($generated@@59 $generated@@109) ($generated@@49 $generated@@50 $generated@@109 $generated@@51))
 :pattern ( ($generated@@57 $generated@@109) ($generated@@49 $generated@@50 $generated@@109 $generated@@51))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@74 ($generated@@61 $generated@@110) $generated@@111) ($generated@@74 $generated@@110 $generated@@111))
 :pattern ( ($generated@@74 ($generated@@61 $generated@@110) $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (! (<= 0 ($generated@@43 $generated@@112))
 :pattern ( ($generated@@43 $generated@@112))
)))
(assert (forall (($generated@@113 Int) ) (! (= ($generated@@47 ($generated@@64 $generated@@113)) $generated@@4)
 :pattern ( ($generated@@64 $generated@@113))
)))
(assert (forall (($generated@@114 Int) ) (! (= ($generated@@63 ($generated@@64 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@64 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@70 $generated@@116 ($generated@@71 $generated@@116 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@71 $generated@@116 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (and (and (and (=> ($generated@@27 $generated@@117 $generated@@118) (or (not (= $generated@@117 $generated@@118)) (not true))) (=> (and ($generated@@94 $generated@@117) (not ($generated@@94 $generated@@118))) ($generated@@27 $generated@@117 $generated@@118))) (=> (and ($generated@@94 $generated@@117) ($generated@@94 $generated@@118)) (= ($generated@@27 $generated@@117 $generated@@118) (< ($generated@@43 $generated@@117) ($generated@@43 $generated@@118))))) (=> (and ($generated@@27 $generated@@117 $generated@@118) ($generated@@94 $generated@@118)) ($generated@@94 $generated@@117)))
 :pattern ( ($generated@@27 $generated@@117 $generated@@118))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@119 $generated@@129 $generated@@130 $generated@@131 ($generated@@125 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@134 $generated@@135) $generated@@132)
 :weight 0
)) (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@119 $generated@@136 $generated@@137 $generated@@138 ($generated@@125 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@119 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@119 $generated@@145 $generated@@146 $generated@@147 ($generated@@125 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@119 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)))) (= ($generated@@8 $generated@@120) 5)) (= ($generated@@8 $generated@@121) 6)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@123 $generated@@154 $generated@@155 ($generated@@126 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@156) $generated@@158) $generated@@156)
 :weight 0
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@163 $generated@@164) (= ($generated@@123 $generated@@159 $generated@@160 ($generated@@126 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@164) ($generated@@123 $generated@@159 $generated@@160 $generated@@162 $generated@@164)))
 :weight 0
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@8 ($generated@@124 $generated@@165 $generated@@166)) 7))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@127 ($generated@@124 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@124 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@128 ($generated@@124 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@124 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@13 ($generated@@119 $generated@@120 $generated@@121 $generated@@9 ($generated@@122 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@13 ($generated@@70 $generated@@9 ($generated@@123 $generated@@121 $generated@@103 ($generated@@123 $generated@@120 ($generated@@124 $generated@@121 $generated@@103) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121 $generated@@9 ($generated@@122 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> ($generated@@94 $generated@@177) (= $generated@@177 ($generated@@42 ($generated@@43 $generated@@177))))
 :pattern ( ($generated@@43 $generated@@177))
 :pattern ( ($generated@@94 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and ($generated@@178 $generated@@180) ($generated@@49 $generated@@50 $generated@@179 $generated@@51)) ($generated@@37 $generated@@50 $generated@@179 $generated@@51 $generated@@180))
 :pattern ( ($generated@@37 $generated@@50 $generated@@179 $generated@@51 $generated@@180))
)))
(assert (= ($generated@@33 $generated@@38) $generated@@2))
(assert (= ($generated@@181 $generated@@38) $generated@@6))
(assert (= ($generated@@33 $generated@@51) $generated@@3))
(assert (= ($generated@@181 $generated@@51) $generated@@7))
(assert (= $generated@@48 ($generated@@54 $generated@@50 $generated@@48)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and ($generated@@94 $generated@@183) (<= ($generated@@43 $generated@@183) ($generated@@43 $generated@@182))) (or (and (= $generated@@183 ($generated@@42 0)) (= ($generated@@41 $generated@@182 $generated@@183) $generated@@182)) (and (or (not (= $generated@@183 ($generated@@42 0))) (not true)) ($generated@@27 ($generated@@41 $generated@@182 $generated@@183) $generated@@182))))
 :pattern ( ($generated@@41 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and ($generated@@178 $generated@@185) (and ($generated@@57 $generated@@184) ($generated@@37 $generated@@50 $generated@@184 $generated@@51 $generated@@185))) ($generated@@37 $generated@@10 ($generated@@14 ($generated@@63 $generated@@184)) $generated@@38 $generated@@185))
 :pattern ( ($generated@@37 $generated@@10 ($generated@@14 ($generated@@63 $generated@@184)) $generated@@38 $generated@@185))
)))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@71 $generated@@10 ($generated@@14 ($generated@@52 $generated@@186))) ($generated@@54 $generated@@103 ($generated@@71 $generated@@10 ($generated@@14 $generated@@186))))
 :pattern ( ($generated@@71 $generated@@10 ($generated@@14 ($generated@@52 $generated@@186))))
)))
(assert (forall (($generated@@187 Int) ) (! (= ($generated@@64 ($generated@@52 $generated@@187)) ($generated@@54 $generated@@50 ($generated@@64 $generated@@187)))
 :pattern ( ($generated@@64 ($generated@@52 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@T) ) (! (= ($generated@@71 $generated@@189 ($generated@@54 $generated@@189 $generated@@188)) ($generated@@54 $generated@@103 ($generated@@71 $generated@@189 $generated@@188)))
 :pattern ( ($generated@@71 $generated@@189 ($generated@@54 $generated@@189 $generated@@188)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! ($generated@@37 $generated@@9 $generated@@191 $generated $generated@@190)
 :pattern ( ($generated@@37 $generated@@9 $generated@@191 $generated $generated@@190))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (or ($generated@@62 ($generated@@54 $generated@@103 $generated@@193) ($generated@@54 $generated@@50 $generated@@194)) (and (< 2 $generated@@24) ($generated@@49 $generated@@50 $generated@@194 $generated@@51))) (and (and (=> (< 0 ($generated@@43 $generated@@193)) (=> (not (and ($generated@@57 ($generated@@54 $generated@@50 $generated@@194)) (= ($generated@@52 ($generated@@63 ($generated@@54 $generated@@50 $generated@@194))) ($generated@@52 0)))) (=> ($generated@@13 ($generated@@54 $generated@@9 ($generated@@12 ($generated@@57 ($generated@@54 $generated@@50 $generated@@194))))) (=> (<= ($generated@@52 2) ($generated@@52 ($generated@@63 ($generated@@54 $generated@@50 $generated@@194)))) ($generated@@62 ($generated@@41 $generated@@193 ($generated@@42 1)) ($generated@@54 $generated@@50 ($generated@@64 ($generated@@52 (- ($generated@@63 ($generated@@54 $generated@@50 $generated@@194)) 2))))))))) (=> (=> (< 0 ($generated@@43 $generated@@193)) (or (and ($generated@@57 ($generated@@54 $generated@@50 $generated@@194)) (= ($generated@@52 ($generated@@63 ($generated@@54 $generated@@50 $generated@@194))) ($generated@@52 0))) (and (and ($generated@@57 ($generated@@54 $generated@@50 $generated@@194)) (<= ($generated@@52 2) ($generated@@52 ($generated@@63 ($generated@@54 $generated@@50 $generated@@194))))) ($generated@@25 ($generated@@61 $generated@@192) ($generated@@41 $generated@@193 ($generated@@42 1)) ($generated@@54 $generated@@50 ($generated@@64 ($generated@@52 (- ($generated@@63 ($generated@@54 $generated@@50 $generated@@194)) 2)))))))) (=> (= ($generated@@52 0) ($generated@@43 $generated@@193)) (forall (($generated@@195 T@U) ) (!  (=> ($generated@@26 $generated@@195 $generated@@193) ($generated@@62 $generated@@195 $generated@@194))
 :pattern ( ($generated@@25 ($generated@@61 $generated@@192) $generated@@195 $generated@@194))
))))) (= ($generated@@25 ($generated@@61 $generated@@192) ($generated@@54 $generated@@103 $generated@@193) ($generated@@54 $generated@@50 $generated@@194))  (and (=> (< 0 ($generated@@43 $generated@@193)) (or (and ($generated@@57 ($generated@@54 $generated@@50 $generated@@194)) (= ($generated@@52 ($generated@@63 ($generated@@54 $generated@@50 $generated@@194))) ($generated@@52 0))) (and (and ($generated@@57 ($generated@@54 $generated@@50 $generated@@194)) (<= ($generated@@52 2) ($generated@@52 ($generated@@63 ($generated@@54 $generated@@50 $generated@@194))))) ($generated@@25 ($generated@@61 $generated@@192) ($generated@@41 $generated@@193 ($generated@@42 1)) ($generated@@54 $generated@@50 ($generated@@64 ($generated@@52 (- ($generated@@63 ($generated@@54 $generated@@50 $generated@@194)) 2)))))))) (=> (= ($generated@@52 0) ($generated@@43 $generated@@193)) (exists (($generated@@196 T@U) ) (!  (and ($generated@@26 $generated@@196 $generated@@193) ($generated@@25 ($generated@@61 $generated@@192) $generated@@196 $generated@@194))
 :pattern ( ($generated@@25 ($generated@@61 $generated@@192) $generated@@196 $generated@@194))
)))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@61 $generated@@192) ($generated@@54 $generated@@103 $generated@@193) ($generated@@54 $generated@@50 $generated@@194)))
))))
(assert (forall (($generated@@197 T@U) ) (! ($generated@@49 $generated@@9 $generated@@197 $generated)
 :pattern ( ($generated@@49 $generated@@9 $generated@@197 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@204 true))
(let (($generated@@205  (=> (and (not (and ($generated@@57 $generated@@198) (<= ($generated@@52 2) ($generated@@63 $generated@@198)))) (= (ControlFlow 0 7) 2)) $generated@@204)))
(let (($generated@@206  (=> (and ($generated@@57 $generated@@198) (<= ($generated@@52 2) ($generated@@63 $generated@@198))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@57 $generated@@198)) (=> ($generated@@57 $generated@@198) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@49 $generated@@10 ($generated@@14 (- ($generated@@63 $generated@@198) 2)) $generated@@38)) (=> ($generated@@49 $generated@@10 ($generated@@14 (- ($generated@@63 $generated@@198) 2)) $generated@@38) (=> (and (and (= $generated@@199 ($generated@@64 (- ($generated@@63 $generated@@198) 2))) ($generated@@37 $generated@@50 $generated@@199 $generated@@51 $generated@@200)) (and ($generated@@82 ($generated@@64 (- ($generated@@63 $generated@@198) 2))) (= (ControlFlow 0 4) 2))) $generated@@204))))))))
(let (($generated@@207  (=> (not ($generated@@57 $generated@@198)) (and (=> (= (ControlFlow 0 10) 4) $generated@@206) (=> (= (ControlFlow 0 10) 7) $generated@@205)))))
(let (($generated@@208  (=> ($generated@@57 $generated@@198) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@57 $generated@@198)) (=> ($generated@@57 $generated@@198) (and (=> (= (ControlFlow 0 8) 4) $generated@@206) (=> (= (ControlFlow 0 8) 7) $generated@@205)))))))
(let (($generated@@209  (=> (not (and ($generated@@57 $generated@@198) (= ($generated@@63 $generated@@198) ($generated@@52 0)))) (and (=> (= (ControlFlow 0 11) 8) $generated@@208) (=> (= (ControlFlow 0 11) 10) $generated@@207)))))
(let (($generated@@210  (=> (and (and ($generated@@57 $generated@@198) (= ($generated@@63 $generated@@198) ($generated@@52 0))) (= (ControlFlow 0 3) 2)) $generated@@204)))
(let (($generated@@211  (=> (not ($generated@@57 $generated@@198)) (and (=> (= (ControlFlow 0 14) 11) $generated@@209) (=> (= (ControlFlow 0 14) 3) $generated@@210)))))
(let (($generated@@212  (=> ($generated@@57 $generated@@198) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@57 $generated@@198)) (=> ($generated@@57 $generated@@198) (and (=> (= (ControlFlow 0 12) 11) $generated@@209) (=> (= (ControlFlow 0 12) 3) $generated@@210)))))))
(let (($generated@@213 true))
(let (($generated@@214  (=> (= $generated@@201 ($generated@@122 $generated@@202 $generated@@200 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 15) 1) $generated@@213) (=> (= (ControlFlow 0 15) 12) $generated@@212)) (=> (= (ControlFlow 0 15) 14) $generated@@211)))))
(let (($generated@@215  (=> (and (and (and ($generated@@178 $generated@@200) ($generated@@203 $generated@@200)) ($generated@@49 $generated@@50 $generated@@198 $generated@@51)) (and (= 1 $generated@@24) (= (ControlFlow 0 16) 15))) $generated@@214)))
$generated@@215)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
