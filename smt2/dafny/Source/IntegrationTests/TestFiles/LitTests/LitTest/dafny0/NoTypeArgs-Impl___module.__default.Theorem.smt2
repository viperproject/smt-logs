(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@131 (T@U) Int)
(declare-fun $generated@@132 (T@U) Int)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@147 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@148 (T@T T@T) T@T)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (and (= ($generated@@4 $generated@@24) 3) (= ($generated@@4 $generated@@30) 4)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@25 $generated@@33 ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@35 ($generated@@27 $generated@@33)) ($generated@@26 $generated@@24 $generated@@36 ($generated@@27 $generated@@33))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)))))) (let (($generated@@37 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@25 $generated@@33 $generated@@37 ($generated@@23 $generated@@24 $generated@@36)))) (= ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)) $generated@@36 (let (($generated@@38 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
(let (($generated@@39 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@23 $generated@@24 ($generated@@32 $generated@@39 ($generated@@23 $generated@@24 ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) $generated@@38 ($generated@@23 $generated@@24 $generated@@36)))))))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)))
))))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 $generated@@41 ($generated@@22 $generated@@42) $generated@@43) ($generated@@40 $generated@@41 $generated@@42 $generated@@43))
 :pattern ( ($generated@@40 $generated@@41 ($generated@@22 $generated@@42) $generated@@43))
)))
(assert (= ($generated@@44 $generated@@45) $generated@@1))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> ($generated@@47 $generated@@49) ($generated@@46 $generated@@24 $generated@@45 ($generated@@27 $generated@@48) $generated@@49))
 :pattern ( ($generated@@46 $generated@@24 $generated@@45 ($generated@@27 $generated@@48) $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ) (! ($generated@@26 $generated@@24 $generated@@45 ($generated@@27 $generated@@50))
 :pattern ( ($generated@@26 $generated@@24 $generated@@45 ($generated@@27 $generated@@50)))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@51 $generated@@52 $generated@@53) (= $generated@@52 $generated@@53))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (and ($generated@@54 $generated@@55) ($generated@@54 $generated@@56)) (= ($generated@@51 $generated@@55 $generated@@56)  (and (= ($generated@@31 $generated@@55) ($generated@@31 $generated@@56)) ($generated@@51 ($generated@@29 $generated@@55) ($generated@@29 $generated@@56)))))
 :pattern ( ($generated@@51 $generated@@55 $generated@@56) ($generated@@54 $generated@@55))
 :pattern ( ($generated@@51 $generated@@55 $generated@@56) ($generated@@54 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@23 $generated@@58 $generated@@57) $generated@@57)
 :pattern ( ($generated@@23 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@26 $generated@@24 ($generated@@32 $generated@@61 $generated@@62) ($generated@@27 $generated@@60))  (and ($generated@@59 $generated@@61 $generated@@60) ($generated@@26 $generated@@24 $generated@@62 ($generated@@27 $generated@@60))))
 :pattern ( ($generated@@26 $generated@@24 ($generated@@32 $generated@@61 $generated@@62) ($generated@@27 $generated@@60)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (or ($generated@@25 $generated@@63 $generated@@65 $generated@@66) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@65 ($generated@@27 $generated@@63)) ($generated@@26 $generated@@24 $generated@@66 ($generated@@27 $generated@@63))))) (and (=> (not ($generated@@28 $generated@@65)) (let (($generated@@67 ($generated@@29 $generated@@65)))
($generated@@25 $generated@@63 $generated@@67 $generated@@66))) (= ($generated@@21 $generated@@63 ($generated@@22 $generated@@64) $generated@@65 $generated@@66) (ite ($generated@@28 $generated@@65) $generated@@66 (let (($generated@@68 ($generated@@29 $generated@@65)))
(let (($generated@@69 ($generated@@31 $generated@@65)))
($generated@@32 $generated@@69 ($generated@@21 $generated@@63 $generated@@64 $generated@@68 $generated@@66))))))))
 :pattern ( ($generated@@21 $generated@@63 ($generated@@22 $generated@@64) $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@28 $generated@@70) (= ($generated@@44 $generated@@70) $generated@@1))
 :pattern ( ($generated@@28 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@54 $generated@@71) (= ($generated@@44 $generated@@71) $generated@@2))
 :pattern ( ($generated@@54 $generated@@71))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (or ($generated@@72 $generated@@74 $generated@@76) (and (< 2 $generated@@20) ($generated@@26 $generated@@24 $generated@@76 ($generated@@27 $generated@@74)))) (and (=> (not ($generated@@28 $generated@@76)) (let (($generated@@77 ($generated@@29 $generated@@76)))
(let (($generated@@78 ($generated@@31 $generated@@76)))
 (and ($generated@@72 $generated@@74 $generated@@77) ($generated@@25 $generated@@74 ($generated@@40 $generated@@74 $generated@@75 $generated@@77) ($generated@@32 $generated@@78 ($generated@@23 $generated@@24 $generated@@45))))))) (= ($generated@@40 $generated@@74 ($generated@@22 $generated@@75) $generated@@76) (ite ($generated@@28 $generated@@76) $generated@@45 (let (($generated@@79 ($generated@@29 $generated@@76)))
(let (($generated@@80 ($generated@@31 $generated@@76)))
($generated@@21 $generated@@74 ($generated@@22 $generated@@73) ($generated@@40 $generated@@74 $generated@@75 $generated@@79) ($generated@@32 $generated@@80 ($generated@@23 $generated@@24 $generated@@45)))))))))
 :pattern ( ($generated@@40 $generated@@74 ($generated@@22 $generated@@75) $generated@@76))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@81 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@81 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@54 $generated@@85) (exists (($generated@@86 T@U) ($generated@@87 T@U) ) (= $generated@@85 ($generated@@32 $generated@@86 $generated@@87))))
 :pattern ( ($generated@@54 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@28 $generated@@88) (= $generated@@88 $generated@@45))
 :pattern ( ($generated@@28 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@89 ($generated@@82 $generated@@93 $generated@@90) $generated@@91 $generated@@92) ($generated@@46 $generated@@93 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@89 ($generated@@82 $generated@@93 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@96 T@U) ) (!  (and (= ($generated@@94 ($generated@@27 $generated@@96)) $generated@@0) (= ($generated@@95 ($generated@@27 $generated@@96)) $generated@@3))
 :pattern ( ($generated@@27 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@97 $generated@@98) (or ($generated@@28 $generated@@98) ($generated@@54 $generated@@98)))
 :pattern ( ($generated@@97 $generated@@98))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@72 $generated@@99 ($generated@@23 $generated@@24 $generated@@101)) (and (< 2 $generated@@20) ($generated@@26 $generated@@24 $generated@@101 ($generated@@27 $generated@@99)))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@101)))))) (let (($generated@@102 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@101)))))
(let (($generated@@103 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@101)))))
 (and ($generated@@72 $generated@@99 $generated@@102) ($generated@@25 $generated@@99 ($generated@@40 $generated@@99 ($generated@@22 $generated@@100) $generated@@102) ($generated@@32 $generated@@103 ($generated@@23 $generated@@24 $generated@@45))))))) (= ($generated@@40 $generated@@99 ($generated@@22 $generated@@100) ($generated@@23 $generated@@24 $generated@@101)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@101)) $generated@@45 (let (($generated@@104 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@101)))))
(let (($generated@@105 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@101)))))
($generated@@23 $generated@@24 ($generated@@21 $generated@@99 ($generated@@22 $generated@@73) ($generated@@23 $generated@@24 ($generated@@40 $generated@@99 ($generated@@22 $generated@@100) $generated@@104)) ($generated@@23 $generated@@24 ($generated@@32 $generated@@105 ($generated@@23 $generated@@24 $generated@@45)))))))))))
 :weight 3
 :pattern ( ($generated@@40 $generated@@99 ($generated@@22 $generated@@100) ($generated@@23 $generated@@24 $generated@@101)))
))))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@26 $generated@@24 $generated@@107 ($generated@@27 $generated@@106)) (or ($generated@@28 $generated@@107) ($generated@@54 $generated@@107)))
 :pattern ( ($generated@@54 $generated@@107) ($generated@@26 $generated@@24 $generated@@107 ($generated@@27 $generated@@106)))
 :pattern ( ($generated@@28 $generated@@107) ($generated@@26 $generated@@24 $generated@@107 ($generated@@27 $generated@@106)))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@59 ($generated@@82 $generated@@110 $generated@@108) $generated@@109) ($generated@@26 $generated@@110 $generated@@108 $generated@@109))
 :pattern ( ($generated@@59 ($generated@@82 $generated@@110 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (and ($generated@@28 $generated@@111) ($generated@@28 $generated@@112)) ($generated@@51 $generated@@111 $generated@@112))
 :pattern ( ($generated@@51 $generated@@111 $generated@@112) ($generated@@28 $generated@@111))
 :pattern ( ($generated@@51 $generated@@111 $generated@@112) ($generated@@28 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@44 ($generated@@32 $generated@@113 $generated@@114)) $generated@@2)
 :pattern ( ($generated@@32 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@31 ($generated@@32 $generated@@115 $generated@@116)) $generated@@115)
 :pattern ( ($generated@@32 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@29 ($generated@@32 $generated@@117 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@32 $generated@@117 $generated@@118))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (or ($generated@@25 $generated@@119 $generated@@121 $generated@@122) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@121 ($generated@@27 $generated@@119)) ($generated@@26 $generated@@24 $generated@@122 ($generated@@27 $generated@@119))))) ($generated@@26 $generated@@24 ($generated@@21 $generated@@119 $generated@@120 $generated@@121 $generated@@122) ($generated@@27 $generated@@119)))
 :pattern ( ($generated@@21 $generated@@119 $generated@@120 $generated@@121 $generated@@122))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (or ($generated@@72 $generated@@124 $generated@@126) (and (< 2 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@126 ($generated@@27 $generated@@124)) ($generated@@46 $generated@@24 $generated@@126 ($generated@@27 $generated@@124) $generated@@123)))) ($generated@@47 $generated@@123)) ($generated@@46 $generated@@24 ($generated@@40 $generated@@124 $generated@@125 $generated@@126) ($generated@@27 $generated@@124) $generated@@123))
 :pattern ( ($generated@@46 $generated@@24 ($generated@@40 $generated@@124 $generated@@125 $generated@@126) ($generated@@27 $generated@@124) $generated@@123))
))))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@27 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@27 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@81 $generated@@130 ($generated@@82 $generated@@130 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@82 $generated@@130 $generated@@129))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (< ($generated@@131 $generated@@133) ($generated@@132 ($generated@@32 $generated@@133 $generated@@134)))
 :pattern ( ($generated@@32 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (< ($generated@@132 $generated@@136) ($generated@@132 ($generated@@32 $generated@@135 $generated@@136)))
 :pattern ( ($generated@@32 $generated@@135 $generated@@136))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (or ($generated@@72 $generated@@137 $generated@@139) (and (< 2 $generated@@20) ($generated@@26 $generated@@24 $generated@@139 ($generated@@27 $generated@@137)))) ($generated@@26 $generated@@24 ($generated@@40 $generated@@137 $generated@@138 $generated@@139) ($generated@@27 $generated@@137)))
 :pattern ( ($generated@@40 $generated@@137 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and ($generated@@47 $generated@@142) (and ($generated@@54 $generated@@140) ($generated@@46 $generated@@24 $generated@@140 ($generated@@27 $generated@@141) $generated@@142))) ($generated@@89 ($generated@@31 $generated@@140) $generated@@141 $generated@@142))
 :pattern ( ($generated@@89 ($generated@@31 $generated@@140) $generated@@141 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@143 $generated@@153 $generated@@154 $generated@@155 ($generated@@149 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@158 $generated@@159) $generated@@156)
 :weight 0
)) (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@143 $generated@@160 $generated@@161 $generated@@162 ($generated@@149 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@143 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@143 $generated@@169 $generated@@170 $generated@@171 ($generated@@149 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@143 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)))) (= ($generated@@4 $generated@@144) 5)) (= ($generated@@4 $generated@@145) 6)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@147 $generated@@178 $generated@@179 ($generated@@150 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@180) $generated@@182) $generated@@180)
 :weight 0
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@187 $generated@@188) (= ($generated@@147 $generated@@183 $generated@@184 ($generated@@150 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@185) $generated@@188) ($generated@@147 $generated@@183 $generated@@184 $generated@@186 $generated@@188)))
 :weight 0
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@4 ($generated@@148 $generated@@189 $generated@@190)) 7))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@151 ($generated@@148 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@148 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@152 ($generated@@148 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@148 $generated@@193 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 Bool) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@9 ($generated@@143 $generated@@144 $generated@@145 $generated@@5 ($generated@@146 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))  (=> (and (or (not (= $generated@@199 $generated@@195)) (not true)) ($generated@@9 ($generated@@81 $generated@@5 ($generated@@147 $generated@@145 $generated@@30 ($generated@@147 $generated@@144 ($generated@@148 $generated@@145 $generated@@30) $generated@@196 $generated@@199) $generated@@197)))) $generated@@198))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145 $generated@@5 ($generated@@146 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (or ($generated@@25 $generated@@202 $generated@@204 $generated@@205) (and (< 1 $generated@@20) (and (and ($generated@@26 $generated@@24 $generated@@204 ($generated@@27 $generated@@202)) ($generated@@46 $generated@@24 $generated@@204 ($generated@@27 $generated@@202) $generated@@201)) (and ($generated@@26 $generated@@24 $generated@@205 ($generated@@27 $generated@@202)) ($generated@@46 $generated@@24 $generated@@205 ($generated@@27 $generated@@202) $generated@@201))))) ($generated@@47 $generated@@201)) ($generated@@46 $generated@@24 ($generated@@21 $generated@@202 $generated@@203 $generated@@204 $generated@@205) ($generated@@27 $generated@@202) $generated@@201))
 :pattern ( ($generated@@46 $generated@@24 ($generated@@21 $generated@@202 $generated@@203 $generated@@204 $generated@@205) ($generated@@27 $generated@@202) $generated@@201))
))))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@131 ($generated@@82 $generated@@24 $generated@@206)) ($generated@@132 $generated@@206))
 :pattern ( ($generated@@131 ($generated@@82 $generated@@24 $generated@@206)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@21 $generated@@207 ($generated@@22 $generated@@208) $generated@@209 $generated@@210) ($generated@@21 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
 :pattern ( ($generated@@21 $generated@@207 ($generated@@22 $generated@@208) $generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> ($generated@@59 $generated@@212 ($generated@@27 $generated@@211)) (and (= ($generated@@82 $generated@@24 ($generated@@81 $generated@@24 $generated@@212)) $generated@@212) ($generated@@26 $generated@@24 ($generated@@81 $generated@@24 $generated@@212) ($generated@@27 $generated@@211))))
 :pattern ( ($generated@@59 $generated@@212 ($generated@@27 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and ($generated@@47 $generated@@215) (and ($generated@@54 $generated@@213) ($generated@@46 $generated@@24 $generated@@213 ($generated@@27 $generated@@214) $generated@@215))) ($generated@@46 $generated@@24 ($generated@@29 $generated@@213) ($generated@@27 $generated@@214) $generated@@215))
 :pattern ( ($generated@@46 $generated@@24 ($generated@@29 $generated@@213) ($generated@@27 $generated@@214) $generated@@215))
)))
(assert (= $generated@@45 ($generated@@23 $generated@@24 $generated@@45)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@32 ($generated@@23 $generated@@30 $generated@@216) ($generated@@23 $generated@@24 $generated@@217)) ($generated@@23 $generated@@24 ($generated@@32 $generated@@216 $generated@@217)))
 :pattern ( ($generated@@32 ($generated@@23 $generated@@30 $generated@@216) ($generated@@23 $generated@@24 $generated@@217)))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@T) ) (! (= ($generated@@82 $generated@@219 ($generated@@23 $generated@@219 $generated@@218)) ($generated@@23 $generated@@30 ($generated@@82 $generated@@219 $generated@@218)))
 :pattern ( ($generated@@82 $generated@@219 ($generated@@23 $generated@@219 $generated@@218)))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> ($generated@@47 $generated@@223) (= ($generated@@46 $generated@@24 ($generated@@32 $generated@@221 $generated@@222) ($generated@@27 $generated@@220) $generated@@223)  (and ($generated@@89 $generated@@221 $generated@@220 $generated@@223) ($generated@@46 $generated@@24 $generated@@222 ($generated@@27 $generated@@220) $generated@@223))))
 :pattern ( ($generated@@46 $generated@@24 ($generated@@32 $generated@@221 $generated@@222) ($generated@@27 $generated@@220) $generated@@223))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@240  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@51 ($generated@@40 $generated@@224 ($generated@@22 ($generated@@22 $generated@@73)) ($generated@@40 $generated@@224 ($generated@@22 ($generated@@22 $generated@@73)) $generated@@225)) $generated@@225))))
(let (($generated@@241  (=> (= $generated@@225 ($generated@@32 $generated@@226 $generated@@227)) (=> (and ($generated@@59 $generated@@226 $generated@@224) ($generated@@26 $generated@@24 $generated@@227 ($generated@@27 $generated@@224))) (=> (and (and (and (and (and (and ($generated@@26 $generated@@24 $generated@@228 ($generated@@27 $generated@@224)) ($generated@@46 $generated@@24 $generated@@228 ($generated@@27 $generated@@224) $generated@@229)) (= $generated@@230 $generated@@227)) (and ($generated@@26 $generated@@24 $generated@@230 ($generated@@27 $generated@@224)) (= $generated@@228 $generated@@230))) (and (and ($generated@@59 $generated@@231 $generated@@224) ($generated@@89 $generated@@231 $generated@@224 $generated@@229)) (and (= $generated@@232 $generated@@226) ($generated@@59 $generated@@232 $generated@@224)))) (and (and (and (= $generated@@231 $generated@@232) ($generated@@46 $generated@@24 $generated@@228 ($generated@@27 $generated@@224) $generated@@229)) (and ($generated@@72 $generated@@224 $generated@@228) ($generated@@72 $generated@@224 $generated@@228))) (and (and (= $generated@@233 ($generated@@40 $generated@@224 ($generated@@22 $generated@@73) $generated@@228)) (= $generated@@234 ($generated@@32 $generated@@231 ($generated@@23 $generated@@24 $generated@@45)))) (and ($generated@@47 $generated@@235) ($generated@@236 $generated@@235))))) (and (and (and (and ($generated@@97 ($generated@@40 $generated@@224 ($generated@@22 $generated@@73) ($generated@@21 $generated@@224 ($generated@@22 $generated@@73) $generated@@233 $generated@@234))) ($generated@@97 ($generated@@21 $generated@@224 ($generated@@22 $generated@@73) ($generated@@40 $generated@@224 ($generated@@22 $generated@@73) $generated@@234) ($generated@@40 $generated@@224 ($generated@@22 $generated@@73) $generated@@233)))) (and (and ($generated@@25 $generated@@224 $generated@@233 $generated@@234) ($generated@@72 $generated@@224 ($generated@@21 $generated@@224 ($generated@@22 $generated@@73) $generated@@233 $generated@@234))) (and (and ($generated@@72 $generated@@224 $generated@@234) ($generated@@72 $generated@@224 $generated@@233)) ($generated@@25 $generated@@224 ($generated@@40 $generated@@224 ($generated@@22 $generated@@73) $generated@@234) ($generated@@40 $generated@@224 ($generated@@22 $generated@@73) $generated@@233))))) ($generated@@51 ($generated@@40 $generated@@224 ($generated@@22 ($generated@@22 $generated@@73)) ($generated@@21 $generated@@224 ($generated@@22 ($generated@@22 $generated@@73)) $generated@@233 $generated@@234)) ($generated@@21 $generated@@224 ($generated@@22 ($generated@@22 $generated@@73)) ($generated@@40 $generated@@224 ($generated@@22 ($generated@@22 $generated@@73)) $generated@@234) ($generated@@40 $generated@@224 ($generated@@22 ($generated@@22 $generated@@73)) $generated@@233)))) (and (= $generated@@229 $generated@@235) (= (ControlFlow 0 5) 3)))) $generated@@240)))))
(let (($generated@@242  (=> (and (= $generated@@225 $generated@@45) (= (ControlFlow 0 4) 3)) $generated@@240)))
(let (($generated@@243 true))
(let (($generated@@244  (=> (or (not (= $generated@@225 $generated@@45)) (not true)) (and (=> (= (ControlFlow 0 6) 5) $generated@@241) (=> (= (ControlFlow 0 6) 1) $generated@@243)))))
(let (($generated@@245  (=> (and (= $generated@@237 ($generated@@146 $generated@@238 $generated@@239 $generated false)) ($generated@@97 $generated@@225)) (=> (and (and ($generated@@47 $generated@@229) ($generated@@236 $generated@@229)) (and (= $generated@@239 $generated@@229) (forall (($generated@@246 T@U) ) (!  (=> (and (and ($generated@@26 $generated@@24 $generated@@246 ($generated@@27 $generated@@224)) ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 true)))) (< ($generated@@132 $generated@@246) ($generated@@132 $generated@@225))) ($generated@@51 ($generated@@40 $generated@@224 ($generated@@22 $generated@@73) ($generated@@40 $generated@@224 ($generated@@22 $generated@@73) $generated@@246)) $generated@@246))
 :pattern ( ($generated@@40 $generated@@224 ($generated@@22 $generated@@73) ($generated@@40 $generated@@224 ($generated@@22 $generated@@73) $generated@@246)))
)))) (and (=> (= (ControlFlow 0 7) 4) $generated@@242) (=> (= (ControlFlow 0 7) 6) $generated@@244))))))
(let (($generated@@247  (=> (and ($generated@@47 $generated@@239) ($generated@@236 $generated@@239)) (=> (and (and (and ($generated@@26 $generated@@24 $generated@@225 ($generated@@27 $generated@@224)) ($generated@@46 $generated@@24 $generated@@225 ($generated@@27 $generated@@224) $generated@@239)) ($generated@@97 $generated@@225)) (and (= 4 $generated@@20) (= (ControlFlow 0 8) 7))) $generated@@245))))
$generated@@247))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
