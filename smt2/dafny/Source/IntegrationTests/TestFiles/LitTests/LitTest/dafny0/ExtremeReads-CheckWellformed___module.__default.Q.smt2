(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (Int) T@U)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@43 () Int)
(declare-fun $generated@@44 (T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@52 (T@U T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 (Int) Int)
(declare-fun $generated@@60 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@86 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@87 () T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@112 (T@U) Bool)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@116 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@29 $generated@@30)) ($generated@@27 $generated@@28 $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@29 $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 Int) ($generated@@36 Int) ) (!  (=> (and (and (<= 0 $generated@@35) (<= 0 $generated@@36)) (<= (+ $generated@@35 $generated@@36) ($generated@@33 $generated@@34))) (= ($generated@@31 ($generated@@31 $generated@@34 ($generated@@32 $generated@@35)) ($generated@@32 $generated@@36)) ($generated@@31 $generated@@34 ($generated@@32 (+ $generated@@35 $generated@@36)))))
 :pattern ( ($generated@@31 ($generated@@31 $generated@@34 ($generated@@32 $generated@@35)) ($generated@@32 $generated@@36)))
)))
(assert (= ($generated@@8 $generated@@38) 3))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@42 $generated@@39)  (or (= $generated@@42 $generated@@40) (= ($generated@@41 $generated@@42) $generated@@39)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@42 $generated@@39))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@49) ($generated@@37 $generated@@38 $generated@@50 $generated@@39)) ($generated@@44 ($generated@@45 $generated@@48) $generated@@49 $generated@@50)) (forall (($generated@@51 T@U) ) (! ($generated@@47 ($generated@@45 $generated@@48) $generated@@49 $generated@@51 $generated@@50)
 :pattern ( ($generated@@47 ($generated@@45 $generated@@48) $generated@@49 $generated@@51 $generated@@50))
)))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@48) $generated@@49 $generated@@50))
))))
(assert  (and (and (and (and (and (and (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@54 $generated@@63 $generated@@64 ($generated@@60 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@67) $generated@@65)
 :weight 0
)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (or (= $generated@@72 $generated@@73) (= ($generated@@54 $generated@@68 $generated@@69 ($generated@@60 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@73) ($generated@@54 $generated@@68 $generated@@69 $generated@@71 $generated@@73)))
 :weight 0
))) (= ($generated@@8 $generated@@55) 4)) (= ($generated@@8 $generated@@56) 5)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (= ($generated@@8 ($generated@@57 $generated@@74 $generated@@75)) 6))) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (! (= ($generated@@61 ($generated@@57 $generated@@76 $generated@@77)) $generated@@76)
 :pattern ( ($generated@@57 $generated@@76 $generated@@77))
))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@62 ($generated@@57 $generated@@78 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@57 $generated@@78 $generated@@79))
))))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@52 $generated@@81 $generated@@82 $generated@@83) (and (< 1 $generated@@43) (and (and ($generated@@46 $generated@@81) ($generated@@37 $generated@@38 $generated@@83 $generated@@39)) (or (not (= $generated@@83 $generated@@40)) (not true))))) (and (and (=> (< 0 ($generated@@33 $generated@@82)) (=> (or (not (= ($generated@@53 $generated@@38 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@81 $generated@@83) $generated@@58)) $generated@@40)) (not true)) ($generated@@52 $generated@@81 ($generated@@31 $generated@@82 ($generated@@32 1)) $generated@@83))) (=> (=> (< 0 ($generated@@33 $generated@@82)) (and (or (not (= ($generated@@53 $generated@@38 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@81 $generated@@83) $generated@@58)) $generated@@40)) (not true)) ($generated@@47 $generated@@80 $generated@@81 ($generated@@31 $generated@@82 ($generated@@32 1)) $generated@@83))) (=> (= ($generated@@59 0) ($generated@@33 $generated@@82)) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@27 $generated@@84 $generated@@82) ($generated@@52 $generated@@81 $generated@@84 $generated@@83))
 :pattern ( ($generated@@47 $generated@@80 $generated@@81 $generated@@84 $generated@@83))
))))) (= ($generated@@47 ($generated@@45 $generated@@80) $generated@@81 $generated@@82 $generated@@83)  (and (=> (< 0 ($generated@@33 $generated@@82)) (and (or (not (= ($generated@@53 $generated@@38 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@81 $generated@@83) $generated@@58)) $generated@@40)) (not true)) ($generated@@47 $generated@@80 $generated@@81 ($generated@@31 $generated@@82 ($generated@@32 1)) $generated@@83))) (=> (= ($generated@@59 0) ($generated@@33 $generated@@82)) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@27 $generated@@85 $generated@@82) ($generated@@47 $generated@@80 $generated@@81 $generated@@85 $generated@@83))
 :pattern ( ($generated@@47 $generated@@80 $generated@@81 $generated@@85 $generated@@83))
)))))))
 :pattern ( ($generated@@47 ($generated@@45 $generated@@80) $generated@@81 $generated@@82 $generated@@83) ($generated@@46 $generated@@81))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@86 $generated@@38 $generated@@88 $generated@@87 $generated@@89) ($generated@@86 $generated@@38 $generated@@88 $generated@@39 $generated@@89))
 :pattern ( ($generated@@86 $generated@@38 $generated@@88 $generated@@87 $generated@@89))
 :pattern ( ($generated@@86 $generated@@38 $generated@@88 $generated@@39 $generated@@89))
)))
(assert (= ($generated@@24 $generated@@58) 0))
(assert (= ($generated@@90 $generated@@5 $generated@@7) $generated@@58))
(assert  (not ($generated@@91 $generated@@58)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@86 $generated@@38 $generated@@92 $generated@@39 $generated@@93)  (or (= $generated@@92 $generated@@40) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@93 $generated@@92) $generated@@1)))))
 :pattern ( ($generated@@86 $generated@@38 $generated@@92 $generated@@39 $generated@@93))
)))
(assert (forall (($generated@@94 Int) ) (! (= ($generated@@59 $generated@@94) $generated@@94)
 :pattern ( ($generated@@59 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 $generated@@96) $generated@@96)
 :pattern ( ($generated@@95 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 ($generated@@53 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@53 $generated@@100 $generated@@99))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@102) ($generated@@37 $generated@@38 $generated@@103 $generated@@39)) (forall (($generated@@104 T@U) ) (! ($generated@@47 ($generated@@45 $generated@@101) $generated@@102 $generated@@104 $generated@@103)
 :pattern ( ($generated@@47 ($generated@@45 $generated@@101) $generated@@102 $generated@@104 $generated@@103))
))) ($generated@@44 ($generated@@45 $generated@@101) $generated@@102 $generated@@103))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@101) $generated@@102 $generated@@103))
))))
(assert ($generated@@91 $generated@@1))
(assert  (=> (<= 0 $generated@@43) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (or ($generated@@105 $generated@@107 $generated@@108) (and (< 0 $generated@@43) (and (and ($generated@@46 $generated@@107) ($generated@@37 $generated@@38 $generated@@108 $generated@@39)) (or (not (= $generated@@108 $generated@@40)) (not true))))) (and (=> (or (not (= ($generated@@53 $generated@@38 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@107 $generated@@108) $generated@@58)) $generated@@40)) (not true)) ($generated@@105 $generated@@107 $generated@@108)) (= ($generated@@44 ($generated@@45 $generated@@106) $generated@@107 $generated@@108)  (and (or (not (= ($generated@@53 $generated@@38 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@107 $generated@@108) $generated@@58)) $generated@@40)) (not true)) ($generated@@44 $generated@@106 $generated@@107 $generated@@108)))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@106) $generated@@107 $generated@@108) ($generated@@46 $generated@@107))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@44 ($generated@@45 $generated@@109) $generated@@110 $generated@@111) ($generated@@44 $generated@@109 $generated@@110 $generated@@111))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@109) $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (and ($generated@@112 $generated@@114) (<= ($generated@@33 $generated@@114) ($generated@@33 $generated@@113))) (and (= ($generated@@112 ($generated@@31 $generated@@113 $generated@@114)) ($generated@@112 $generated@@113)) (= ($generated@@33 ($generated@@31 $generated@@113 $generated@@114)) (- ($generated@@33 $generated@@113) ($generated@@33 $generated@@114)))))
 :pattern ( ($generated@@31 $generated@@113 $generated@@114))
)))
(assert  (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@115 $generated@@118 $generated@@119 $generated@@120 ($generated@@117 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@123 $generated@@124) $generated@@121)
 :weight 0
)) (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@115 $generated@@125 $generated@@126 $generated@@127 ($generated@@117 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@115 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@115 $generated@@134 $generated@@135 $generated@@136 ($generated@@117 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@115 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@13 ($generated@@115 $generated@@38 $generated@@55 $generated@@9 ($generated@@116 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))  (=> (and (or (not (= $generated@@147 $generated@@143)) (not true)) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@144 $generated@@147) $generated@@145)))) (= $generated@@147 $generated@@146)))
 :pattern ( ($generated@@115 $generated@@38 $generated@@55 $generated@@9 ($generated@@116 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and ($generated@@46 $generated@@149) (and (or (not (= $generated@@150 $generated@@40)) (not true)) (= ($generated@@41 $generated@@150) $generated@@39))) ($generated@@37 $generated@@38 ($generated@@53 $generated@@38 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@149 $generated@@150) $generated@@58)) $generated@@39))
 :pattern ( ($generated@@53 $generated@@38 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@149 $generated@@150) $generated@@58)))
)))
(assert (forall (($generated@@151 Int) ) (!  (=> (<= 0 $generated@@151) (and ($generated@@112 ($generated@@32 $generated@@151)) (= ($generated@@33 ($generated@@32 $generated@@151)) $generated@@151)))
 :pattern ( ($generated@@32 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@152 $generated@@87)  (and ($generated@@37 $generated@@38 $generated@@152 $generated@@39) (or (not (= $generated@@152 $generated@@40)) (not true))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@152 $generated@@87))
 :pattern ( ($generated@@37 $generated@@38 $generated@@152 $generated@@39))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@153) (and (or (not (= $generated@@154 $generated@@40)) (not true)) (= ($generated@@41 $generated@@154) $generated@@39))) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@153 $generated@@154) $generated@@1)))) ($generated@@86 $generated@@38 ($generated@@53 $generated@@38 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@153 $generated@@154) $generated@@58)) $generated@@39 $generated@@153))
 :pattern ( ($generated@@53 $generated@@38 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@153 $generated@@154) $generated@@58)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (or ($generated@@27 $generated@@155 $generated@@156) (= $generated@@155 $generated@@156)) ($generated@@27 $generated@@156 $generated@@155))
 :pattern ( ($generated@@27 $generated@@155 $generated@@156) ($generated@@27 $generated@@156 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (and (= ($generated@@157 ($generated@@90 $generated@@158 $generated@@159)) $generated@@158) (= ($generated@@26 ($generated@@90 $generated@@158 $generated@@159)) $generated@@159))
 :pattern ( ($generated@@90 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@47 ($generated@@45 $generated@@160) $generated@@161 $generated@@162 $generated@@163) ($generated@@47 $generated@@160 $generated@@161 $generated@@162 $generated@@163))
 :pattern ( ($generated@@47 ($generated@@45 $generated@@160) $generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (! (<= 0 ($generated@@33 $generated@@164))
 :pattern ( ($generated@@33 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@53 $generated@@166 ($generated@@98 $generated@@166 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@98 $generated@@166 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (and (and (and (=> ($generated@@27 $generated@@167 $generated@@168) (or (not (= $generated@@167 $generated@@168)) (not true))) (=> (and ($generated@@112 $generated@@167) (not ($generated@@112 $generated@@168))) ($generated@@27 $generated@@167 $generated@@168))) (=> (and ($generated@@112 $generated@@167) ($generated@@112 $generated@@168)) (= ($generated@@27 $generated@@167 $generated@@168) (< ($generated@@33 $generated@@167) ($generated@@33 $generated@@168))))) (=> (and ($generated@@27 $generated@@167 $generated@@168) ($generated@@112 $generated@@168)) ($generated@@112 $generated@@167)))
 :pattern ( ($generated@@27 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> ($generated@@112 $generated@@169) (= $generated@@169 ($generated@@32 ($generated@@33 $generated@@169))))
 :pattern ( ($generated@@33 $generated@@169))
 :pattern ( ($generated@@112 $generated@@169))
)))
(assert (= ($generated@@25 $generated@@39) $generated@@3))
(assert (= ($generated@@170 $generated@@39) $generated@@6))
(assert (= ($generated@@25 $generated@@87) $generated@@4))
(assert (= ($generated@@170 $generated@@87) $generated@@6))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and ($generated@@112 $generated@@172) (<= ($generated@@33 $generated@@172) ($generated@@33 $generated@@171))) (or (and (= $generated@@172 ($generated@@32 0)) (= ($generated@@31 $generated@@171 $generated@@172) $generated@@171)) (and (or (not (= $generated@@172 ($generated@@32 0))) (not true)) ($generated@@27 ($generated@@31 $generated@@171 $generated@@172) $generated@@171))))
 :pattern ( ($generated@@31 $generated@@171 $generated@@172))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@174) ($generated@@37 $generated@@38 $generated@@175 $generated@@39)) (= $generated@@176 ($generated@@32 0))) ($generated@@47 $generated@@173 $generated@@174 $generated@@176 $generated@@175))
 :pattern ( ($generated@@47 $generated@@173 $generated@@174 $generated@@176 $generated@@175))
))))
(assert (forall (($generated@@177 Int) ) (! (= ($generated@@98 $generated@@10 ($generated@@14 ($generated@@59 $generated@@177))) ($generated@@95 $generated@@56 ($generated@@98 $generated@@10 ($generated@@14 $generated@@177))))
 :pattern ( ($generated@@98 $generated@@10 ($generated@@14 ($generated@@59 $generated@@177))))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@T) ) (! (= ($generated@@98 $generated@@179 ($generated@@95 $generated@@179 $generated@@178)) ($generated@@95 $generated@@56 ($generated@@98 $generated@@179 $generated@@178)))
 :pattern ( ($generated@@98 $generated@@179 ($generated@@95 $generated@@179 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! ($generated@@86 $generated@@9 $generated@@181 $generated $generated@@180)
 :pattern ( ($generated@@86 $generated@@9 $generated@@181 $generated $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ) (! ($generated@@37 $generated@@9 $generated@@182 $generated)
 :pattern ( ($generated@@37 $generated@@9 $generated@@182 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () Bool)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@191  (=> (= ($generated@@44 ($generated@@45 $generated@@183) $generated@@184 $generated@@185)  (and (or (not (= ($generated@@53 $generated@@38 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@184 $generated@@185) $generated@@58)) $generated@@40)) (not true)) ($generated@@44 ($generated@@45 $generated@@183) $generated@@184 $generated@@185))) (=> (and (=> (or (not (= ($generated@@53 $generated@@38 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@184 $generated@@185) $generated@@58)) $generated@@40)) (not true)) ($generated@@105 $generated@@184 $generated@@185)) ($generated@@37 $generated@@9 ($generated@@12 ($generated@@44 ($generated@@45 $generated@@183) $generated@@184 $generated@@185)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@186) (=> $generated@@186 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@187)))))))
(let (($generated@@192  (=> (= ($generated@@53 $generated@@38 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@184 $generated@@185) $generated@@58)) $generated@@40) (=> (and (= $generated@@187 true) (= (ControlFlow 0 7) 3)) $generated@@191))))
(let (($generated@@193  (=> (and (or (not (= ($generated@@53 $generated@@38 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@184 $generated@@185) $generated@@58)) $generated@@40)) (not true)) ($generated@@86 $generated@@38 $generated@@185 $generated@@39 $generated@@184)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= $generated@@185 $generated@@40)) (not true))) (=> (or (not (= $generated@@185 $generated@@40)) (not true)) (=> (and (and (= $generated@@188 (forall (($generated@@194 T@U) ($generated@@195 T@U) )  (=> (and (and (or (not (= $generated@@194 $generated@@40)) (not true)) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@38 ($generated@@57 $generated@@55 $generated@@56) $generated@@184 $generated@@194) $generated@@1)))) (= $generated@@194 $generated@@185)) ($generated@@13 ($generated@@115 $generated@@38 $generated@@55 $generated@@9 $generated@@189 $generated@@194 $generated@@195))))) ($generated@@105 $generated@@184 $generated@@185)) (and (= $generated@@187 $generated@@188) (= (ControlFlow 0 5) 3))) $generated@@191))))))
(let (($generated@@196  (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= $generated@@185 $generated@@40)) (not true))) (=> (or (not (= $generated@@185 $generated@@40)) (not true)) (=> (= $generated@@186 ($generated@@13 ($generated@@115 $generated@@38 $generated@@55 $generated@@9 $generated@@189 $generated@@185 $generated@@58))) (and (=> (= (ControlFlow 0 8) 5) $generated@@193) (=> (= (ControlFlow 0 8) 7) $generated@@192)))))))
(let (($generated@@197 true))
(let (($generated@@198  (=> (and (= $generated@@189 ($generated@@116 $generated@@40 $generated@@184 $generated@@1 $generated@@185)) (or (not (= $generated@@185 $generated@@40)) (not true))) (and (=> (= (ControlFlow 0 10) 1) $generated@@197) (=> (= (ControlFlow 0 10) 8) $generated@@196)))))
(let (($generated@@199  (=> (and (and (and ($generated@@46 $generated@@184) ($generated@@190 $generated@@184)) ($generated@@37 $generated@@38 $generated@@185 $generated@@39)) (and (= 0 $generated@@43) (= (ControlFlow 0 11) 10))) $generated@@198)))
$generated@@199))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
