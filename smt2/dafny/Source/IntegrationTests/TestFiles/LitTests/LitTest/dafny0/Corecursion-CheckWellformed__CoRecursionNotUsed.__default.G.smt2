(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U T@U T@U Int) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U Int) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (Int) Int)
(declare-fun $generated@@29 (T@U T@U Int) Bool)
(declare-fun $generated@@30 (T@U T@U T@U Int) T@U)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@64 (T@U T@U) T@U)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@98 (T@U) Bool)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@146 (T@T T@T) T@T)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@T) T@T)
(declare-fun $generated@@150 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@5 $generated@@26) 3))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 Int) ) (!  (=> (or ($generated@@24 $generated@@31 $generated@@33 $generated@@34) (and (< 2 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@33 ($generated@@27 $generated@@31)) (<= ($generated@@28 0) $generated@@34)))) (and ($generated@@29 $generated@@31 $generated@@33 $generated@@34) (= ($generated@@22 $generated@@31 ($generated@@23 $generated@@32) $generated@@33 $generated@@34) ($generated@@30 $generated@@31 $generated@@32 $generated@@33 $generated@@34))))
 :pattern ( ($generated@@22 $generated@@31 ($generated@@23 $generated@@32) $generated@@33 $generated@@34))
))))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! ($generated@@35 $generated@@7 $generated@@37 $generated@@36 $generated@@38)
 :pattern ( ($generated@@35 $generated@@7 $generated@@37 $generated@@36 $generated@@38))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 Int) ) (!  (=> (or ($generated@@24 $generated@@40 ($generated@@39 $generated@@26 $generated@@42) ($generated@@28 $generated@@43)) (and (< 2 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@42 ($generated@@27 $generated@@40)) (<= ($generated@@28 0) $generated@@43)))) (and ($generated@@29 $generated@@40 ($generated@@39 $generated@@26 $generated@@42) ($generated@@28 $generated@@43)) (= ($generated@@22 $generated@@40 ($generated@@23 $generated@@41) ($generated@@39 $generated@@26 $generated@@42) ($generated@@28 $generated@@43)) ($generated@@39 $generated@@26 ($generated@@30 $generated@@40 ($generated@@23 $generated@@41) ($generated@@39 $generated@@26 $generated@@42) ($generated@@28 $generated@@43))))))
 :weight 3
 :pattern ( ($generated@@22 $generated@@40 ($generated@@23 $generated@@41) ($generated@@39 $generated@@26 $generated@@42) ($generated@@28 $generated@@43)))
))))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@46 ($generated@@27 $generated@@45)) ($generated@@44 $generated@@46))
 :pattern ( ($generated@@44 $generated@@46) ($generated@@25 $generated@@26 $generated@@46 ($generated@@27 $generated@@45)))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (or ($generated@@48 $generated@@50 $generated@@51) (and (< 1 $generated@@21) ($generated@@25 $generated@@26 $generated@@51 ($generated@@27 $generated@@50)))) (and (and ($generated@@44 $generated@@51) ($generated@@44 $generated@@51)) (= ($generated@@47 $generated@@50 $generated@@51) (let (($generated@@52 ($generated@@49 $generated@@51)))
$generated@@52))))
 :pattern ( ($generated@@47 $generated@@50 $generated@@51))
))))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@28 $generated@@53) $generated@@53)
 :pattern ( ($generated@@28 $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@39 $generated@@55 $generated@@54) $generated@@54)
 :pattern ( ($generated@@39 $generated@@55 $generated@@54))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 Int) ) (!  (=> (or ($generated@@24 $generated@@56 $generated@@58 $generated@@59) (and (< 2 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@58 ($generated@@27 $generated@@56)) (<= ($generated@@28 0) $generated@@59)))) ($generated@@25 $generated@@26 ($generated@@22 $generated@@56 $generated@@57 $generated@@58 $generated@@59) ($generated@@27 $generated@@56)))
 :pattern ( ($generated@@22 $generated@@56 $generated@@57 $generated@@58 $generated@@59))
))))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 Int) ) (!  (=> (or ($generated@@29 $generated@@60 $generated@@62 $generated@@63) (and (< 2 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@62 ($generated@@27 $generated@@60)) (<= ($generated@@28 0) $generated@@63)))) ($generated@@25 $generated@@26 ($generated@@30 $generated@@60 $generated@@61 $generated@@62 $generated@@63) ($generated@@27 $generated@@60)))
 :pattern ( ($generated@@30 $generated@@60 $generated@@61 $generated@@62 $generated@@63))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@64 $generated@@67 $generated@@68) ($generated@@27 $generated@@66))  (and ($generated@@65 $generated@@67 $generated@@66) ($generated@@25 $generated@@26 $generated@@68 ($generated@@27 $generated@@66))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@64 $generated@@67 $generated@@68) ($generated@@27 $generated@@66)))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@44 $generated@@70) (= ($generated@@69 $generated@@70) $generated@@2))
 :pattern ( ($generated@@44 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@71 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@71 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@44 $generated@@75) (exists (($generated@@76 T@U) ($generated@@77 T@U) ) (= $generated@@75 ($generated@@64 $generated@@76 $generated@@77))))
 :pattern ( ($generated@@44 $generated@@75))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@48 $generated@@78 $generated@@79) (and (< 1 $generated@@21) ($generated@@25 $generated@@26 $generated@@79 ($generated@@27 $generated@@78)))) ($generated@@25 $generated@@26 ($generated@@47 $generated@@78 $generated@@79) ($generated@@27 $generated@@78)))
 :pattern ( ($generated@@47 $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@25 $generated@@7 $generated@@80 $generated@@36) (<= ($generated@@28 0) ($generated@@12 $generated@@80)))
 :pattern ( ($generated@@25 $generated@@7 $generated@@80 $generated@@36))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 Int) ) (!  (=> (or ($generated@@24 $generated@@81 $generated@@83 ($generated@@28 $generated@@84)) (and (< 2 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@83 ($generated@@27 $generated@@81)) (<= ($generated@@28 0) $generated@@84)))) (and ($generated@@29 $generated@@81 $generated@@83 ($generated@@28 $generated@@84)) (= ($generated@@22 $generated@@81 ($generated@@23 $generated@@82) $generated@@83 ($generated@@28 $generated@@84)) ($generated@@30 $generated@@81 ($generated@@23 $generated@@82) $generated@@83 ($generated@@28 $generated@@84)))))
 :weight 3
 :pattern ( ($generated@@22 $generated@@81 ($generated@@23 $generated@@82) $generated@@83 ($generated@@28 $generated@@84)))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@85 ($generated@@72 $generated@@89 $generated@@86) $generated@@87 $generated@@88) ($generated@@35 $generated@@89 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@85 ($generated@@72 $generated@@89 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@92 T@U) ) (!  (and (= ($generated@@90 ($generated@@27 $generated@@92)) $generated@@1) (= ($generated@@91 ($generated@@27 $generated@@92)) $generated@@4))
 :pattern ( ($generated@@27 $generated@@92))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 Int) ) (!  (=> (or ($generated@@29 $generated@@93 $generated@@95 ($generated@@28 $generated@@96)) (and (< 2 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@95 ($generated@@27 $generated@@93)) (<= ($generated@@28 0) $generated@@96)))) (and (=> (or (not (= ($generated@@28 $generated@@96) ($generated@@28 0))) (not true)) (and ($generated@@24 $generated@@93 $generated@@95 ($generated@@28 (- $generated@@96 1))) ($generated@@48 $generated@@93 ($generated@@22 $generated@@93 ($generated@@23 $generated@@94) $generated@@95 ($generated@@28 (- $generated@@96 1)))))) (= ($generated@@30 $generated@@93 ($generated@@23 $generated@@94) $generated@@95 ($generated@@28 $generated@@96)) (ite (= ($generated@@28 $generated@@96) ($generated@@28 0)) $generated@@95 ($generated@@47 $generated@@93 ($generated@@22 $generated@@93 ($generated@@23 $generated@@94) $generated@@95 ($generated@@28 (- $generated@@96 1))))))))
 :weight 3
 :pattern ( ($generated@@30 $generated@@93 ($generated@@23 $generated@@94) $generated@@95 ($generated@@28 $generated@@96)))
))))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@65 $generated@@97 $generated@@36) (and (= ($generated@@72 $generated@@7 ($generated@@71 $generated@@7 $generated@@97)) $generated@@97) ($generated@@25 $generated@@7 ($generated@@71 $generated@@7 $generated@@97) $generated@@36)))
 :pattern ( ($generated@@65 $generated@@97 $generated@@36))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 Int) ) (!  (=> (and (or ($generated@@24 $generated@@100 $generated@@102 $generated@@103) (and (< 2 $generated@@21) (and (and ($generated@@25 $generated@@26 $generated@@102 ($generated@@27 $generated@@100)) ($generated@@35 $generated@@26 $generated@@102 ($generated@@27 $generated@@100) $generated@@99)) (<= ($generated@@28 0) $generated@@103)))) ($generated@@98 $generated@@99)) ($generated@@35 $generated@@26 ($generated@@22 $generated@@100 $generated@@101 $generated@@102 $generated@@103) ($generated@@27 $generated@@100) $generated@@99))
 :pattern ( ($generated@@35 $generated@@26 ($generated@@22 $generated@@100 $generated@@101 $generated@@102 $generated@@103) ($generated@@27 $generated@@100) $generated@@99))
))))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 Int) ) (!  (=> (and (or ($generated@@29 $generated@@105 $generated@@107 $generated@@108) (and (< 2 $generated@@21) (and (and ($generated@@25 $generated@@26 $generated@@107 ($generated@@27 $generated@@105)) ($generated@@35 $generated@@26 $generated@@107 ($generated@@27 $generated@@105) $generated@@104)) (<= ($generated@@28 0) $generated@@108)))) ($generated@@98 $generated@@104)) ($generated@@35 $generated@@26 ($generated@@30 $generated@@105 $generated@@106 $generated@@107 $generated@@108) ($generated@@27 $generated@@105) $generated@@104))
 :pattern ( ($generated@@35 $generated@@26 ($generated@@30 $generated@@105 $generated@@106 $generated@@107 $generated@@108) ($generated@@27 $generated@@105) $generated@@104))
))))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 Int) ) (!  (=> (or ($generated@@29 $generated@@109 ($generated@@39 $generated@@26 $generated@@111) ($generated@@28 $generated@@112)) (and (< 2 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@111 ($generated@@27 $generated@@109)) (<= ($generated@@28 0) $generated@@112)))) (and (=> (or (not (= ($generated@@28 $generated@@112) ($generated@@28 0))) (not true)) (and ($generated@@24 $generated@@109 ($generated@@39 $generated@@26 $generated@@111) ($generated@@28 (- $generated@@112 1))) ($generated@@48 $generated@@109 ($generated@@39 $generated@@26 ($generated@@22 $generated@@109 ($generated@@23 $generated@@110) ($generated@@39 $generated@@26 $generated@@111) ($generated@@28 (- $generated@@112 1))))))) (= ($generated@@30 $generated@@109 ($generated@@23 $generated@@110) ($generated@@39 $generated@@26 $generated@@111) ($generated@@28 $generated@@112)) (ite (= ($generated@@28 $generated@@112) ($generated@@28 0)) $generated@@111 ($generated@@47 $generated@@109 ($generated@@39 $generated@@26 ($generated@@22 $generated@@109 ($generated@@23 $generated@@110) ($generated@@39 $generated@@26 $generated@@111) ($generated@@28 (- $generated@@112 1)))))))))
 :weight 3
 :pattern ( ($generated@@30 $generated@@109 ($generated@@23 $generated@@110) ($generated@@39 $generated@@26 $generated@@111) ($generated@@28 $generated@@112)))
))))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@65 ($generated@@72 $generated@@115 $generated@@113) $generated@@114) ($generated@@25 $generated@@115 $generated@@113 $generated@@114))
 :pattern ( ($generated@@65 ($generated@@72 $generated@@115 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@69 ($generated@@64 $generated@@116 $generated@@117)) $generated@@2)
 :pattern ( ($generated@@64 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 ($generated@@64 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@64 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@49 ($generated@@64 $generated@@121 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@64 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@27 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@27 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@71 $generated@@126 ($generated@@72 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@72 $generated@@126 $generated@@125))
)))
(assert (= ($generated@@5 $generated@@127) 4))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (or ($generated@@48 $generated@@128 ($generated@@39 $generated@@26 $generated@@129)) (and (< 1 $generated@@21) ($generated@@25 $generated@@26 $generated@@129 ($generated@@27 $generated@@128)))) (and (and ($generated@@44 ($generated@@39 $generated@@26 $generated@@129)) ($generated@@44 ($generated@@39 $generated@@26 $generated@@129))) (= ($generated@@47 $generated@@128 ($generated@@39 $generated@@26 $generated@@129)) (let (($generated@@130 ($generated@@39 $generated@@26 ($generated@@49 ($generated@@39 $generated@@26 $generated@@129)))))
$generated@@130))))
 :weight 3
 :pattern ( ($generated@@47 $generated@@128 ($generated@@39 $generated@@26 $generated@@129)))
))))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 Int) ) (!  (=> (or ($generated@@29 $generated@@131 $generated@@133 $generated@@134) (and (< 2 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@133 ($generated@@27 $generated@@131)) (<= ($generated@@28 0) $generated@@134)))) (and (=> (or (not (= $generated@@134 ($generated@@28 0))) (not true)) (and ($generated@@24 $generated@@131 $generated@@133 (- $generated@@134 1)) ($generated@@48 $generated@@131 ($generated@@22 $generated@@131 $generated@@132 $generated@@133 (- $generated@@134 1))))) (= ($generated@@30 $generated@@131 ($generated@@23 $generated@@132) $generated@@133 $generated@@134) (ite (= $generated@@134 ($generated@@28 0)) $generated@@133 ($generated@@47 $generated@@131 ($generated@@22 $generated@@131 $generated@@132 $generated@@133 (- $generated@@134 1)))))))
 :pattern ( ($generated@@30 $generated@@131 ($generated@@23 $generated@@132) $generated@@133 $generated@@134))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (or ($generated@@48 $generated@@136 $generated@@137) (and (< 1 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@137 ($generated@@27 $generated@@136)) ($generated@@35 $generated@@26 $generated@@137 ($generated@@27 $generated@@136) $generated@@135)))) ($generated@@98 $generated@@135)) ($generated@@35 $generated@@26 ($generated@@47 $generated@@136 $generated@@137) ($generated@@27 $generated@@136) $generated@@135))
 :pattern ( ($generated@@35 $generated@@26 ($generated@@47 $generated@@136 $generated@@137) ($generated@@27 $generated@@136) $generated@@135))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and ($generated@@98 $generated@@140) (and ($generated@@44 $generated@@138) ($generated@@35 $generated@@26 $generated@@138 ($generated@@27 $generated@@139) $generated@@140))) ($generated@@85 ($generated@@118 $generated@@138) $generated@@139 $generated@@140))
 :pattern ( ($generated@@85 ($generated@@118 $generated@@138) $generated@@139 $generated@@140))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@141 $generated@@151 $generated@@152 $generated@@153 ($generated@@147 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@156 $generated@@157) $generated@@154)
 :weight 0
)) (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@141 $generated@@158 $generated@@159 $generated@@160 ($generated@@147 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@141 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@141 $generated@@167 $generated@@168 $generated@@169 ($generated@@147 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@141 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)))) (= ($generated@@5 $generated@@142) 5)) (= ($generated@@5 $generated@@143) 6)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@145 $generated@@176 $generated@@177 ($generated@@148 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@178) $generated@@180) $generated@@178)
 :weight 0
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@185 $generated@@186) (= ($generated@@145 $generated@@181 $generated@@182 ($generated@@148 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@183) $generated@@186) ($generated@@145 $generated@@181 $generated@@182 $generated@@184 $generated@@186)))
 :weight 0
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@5 ($generated@@146 $generated@@187 $generated@@188)) 7))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@149 ($generated@@146 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@146 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@150 ($generated@@146 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@146 $generated@@191 $generated@@192))
))))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 Bool) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@10 ($generated@@141 $generated@@142 $generated@@143 $generated@@6 ($generated@@144 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@197 $generated@@198))  (=> (and (or (not (= $generated@@197 $generated@@193)) (not true)) ($generated@@10 ($generated@@71 $generated@@6 ($generated@@145 $generated@@143 $generated@@127 ($generated@@145 $generated@@142 ($generated@@146 $generated@@143 $generated@@127) $generated@@194 $generated@@197) $generated@@195)))) $generated@@196))
 :pattern ( ($generated@@141 $generated@@142 $generated@@143 $generated@@6 ($generated@@144 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 Int) ) (! (= ($generated@@22 $generated@@199 ($generated@@23 $generated@@200) $generated@@201 $generated@@202) ($generated@@22 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
 :pattern ( ($generated@@22 $generated@@199 ($generated@@23 $generated@@200) $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Int) ) (! (= ($generated@@30 $generated@@203 ($generated@@23 $generated@@204) $generated@@205 $generated@@206) ($generated@@30 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
 :pattern ( ($generated@@30 $generated@@203 ($generated@@23 $generated@@204) $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@65 $generated@@208 ($generated@@27 $generated@@207)) (and (= ($generated@@72 $generated@@26 ($generated@@71 $generated@@26 $generated@@208)) $generated@@208) ($generated@@25 $generated@@26 ($generated@@71 $generated@@26 $generated@@208) ($generated@@27 $generated@@207))))
 :pattern ( ($generated@@65 $generated@@208 ($generated@@27 $generated@@207)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and ($generated@@98 $generated@@211) (and ($generated@@44 $generated@@209) ($generated@@35 $generated@@26 $generated@@209 ($generated@@27 $generated@@210) $generated@@211))) ($generated@@35 $generated@@26 ($generated@@49 $generated@@209) ($generated@@27 $generated@@210) $generated@@211))
 :pattern ( ($generated@@35 $generated@@26 ($generated@@49 $generated@@209) ($generated@@27 $generated@@210) $generated@@211))
)))
(assert (= ($generated@@90 $generated@@36) $generated@@0))
(assert (= ($generated@@91 $generated@@36) $generated@@3))
(assert (forall (($generated@@212 Int) ) (! (= ($generated@@72 $generated@@7 ($generated@@11 ($generated@@28 $generated@@212))) ($generated@@39 $generated@@127 ($generated@@72 $generated@@7 ($generated@@11 $generated@@212))))
 :pattern ( ($generated@@72 $generated@@7 ($generated@@11 ($generated@@28 $generated@@212))))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@T) ) (! (= ($generated@@72 $generated@@214 ($generated@@39 $generated@@214 $generated@@213)) ($generated@@39 $generated@@127 ($generated@@72 $generated@@214 $generated@@213)))
 :pattern ( ($generated@@72 $generated@@214 ($generated@@39 $generated@@214 $generated@@213)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> ($generated@@98 $generated@@218) (= ($generated@@35 $generated@@26 ($generated@@64 $generated@@216 $generated@@217) ($generated@@27 $generated@@215) $generated@@218)  (and ($generated@@85 $generated@@216 $generated@@215 $generated@@218) ($generated@@35 $generated@@26 $generated@@217 ($generated@@27 $generated@@215) $generated@@218))))
 :pattern ( ($generated@@35 $generated@@26 ($generated@@64 $generated@@216 $generated@@217) ($generated@@27 $generated@@215) $generated@@218))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@219 () Int)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@227  (=> (and (or (not (= $generated@@219 ($generated@@28 0))) (not true)) ($generated@@35 $generated@@26 $generated@@220 ($generated@@27 $generated@@221) $generated@@222)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@25 $generated@@7 ($generated@@11 (- $generated@@219 1)) $generated@@36)) (=> ($generated@@25 $generated@@7 ($generated@@11 (- $generated@@219 1)) $generated@@36) (=> (and (= $generated@@223 (- $generated@@219 1)) ($generated@@35 $generated@@7 ($generated@@11 $generated@@223) $generated@@36 $generated@@222)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@219) (= $generated@@223 $generated@@219))) (=> (or (<= 0 $generated@@219) (= $generated@@223 $generated@@219)) (=> (= (ControlFlow 0 4) (- 0 3)) (or (< $generated@@223 $generated@@219) (and (= $generated@@223 $generated@@219) (and (not ($generated@@10 ($generated@@39 $generated@@6 ($generated@@9 true)))) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@9 false)))))))))))))))
(let (($generated@@228 true))
(let (($generated@@229 true))
(let (($generated@@230  (=> (= $generated@@224 ($generated@@144 $generated@@225 $generated@@222 $generated false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@229) (=> (= (ControlFlow 0 7) 2) $generated@@228)) (=> (= (ControlFlow 0 7) 4) $generated@@227)))))
(let (($generated@@231  (=> (and ($generated@@98 $generated@@222) ($generated@@226 $generated@@222)) (=> (and (and ($generated@@25 $generated@@26 $generated@@220 ($generated@@27 $generated@@221)) (<= ($generated@@28 0) $generated@@219)) (and (= 2 $generated@@21) (= (ControlFlow 0 8) 7))) $generated@@230))))
$generated@@231))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
