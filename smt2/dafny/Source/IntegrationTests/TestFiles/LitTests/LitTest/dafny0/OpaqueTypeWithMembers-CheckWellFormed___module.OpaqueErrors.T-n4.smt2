(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T T@T) T@T)
(declare-fun $generated@@50 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@77 (Int) Int)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@123 (T@U) Int)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert  (=> (< 0 $generated@@23) (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@30) ($generated@@28 $generated@@31 $generated@@26)) ($generated@@25 $generated@@31 $generated@@26 $generated@@30)) ($generated@@29 $generated@@7 ($generated@@11 ($generated@@24 $generated@@31)) $generated $generated@@30))
 :pattern ( ($generated@@24 $generated@@31) ($generated@@25 $generated@@31 $generated@@26 $generated@@30))
))))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (and (or (not (= $generated@@38 $generated@@34)) (not true)) (= ($generated@@35 $generated@@38) ($generated@@33 $generated@@37))) ($generated@@36 $generated@@7 ($generated@@11 ($generated@@32 $generated@@38)) $generated))
 :pattern ( ($generated@@32 $generated@@38) ($generated@@33 $generated@@37))
)))
(assert (= ($generated@@5 $generated@@39) 3))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@29 $generated@@39 $generated@@42 ($generated@@40 $generated@@41) $generated@@43) ($generated@@29 $generated@@39 $generated@@42 ($generated@@33 $generated@@41) $generated@@43))
 :pattern ( ($generated@@29 $generated@@39 $generated@@42 ($generated@@40 $generated@@41) $generated@@43))
 :pattern ( ($generated@@29 $generated@@39 $generated@@42 ($generated@@33 $generated@@41) $generated@@43))
)))
(assert ($generated@@44 $generated@@26))
(assert  (and (and (and (and (and (and (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@46 $generated@@53 $generated@@54 ($generated@@50 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@57) $generated@@55)
 :weight 0
)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (or (= $generated@@62 $generated@@63) (= ($generated@@46 $generated@@58 $generated@@59 ($generated@@50 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@63) ($generated@@46 $generated@@58 $generated@@59 $generated@@61 $generated@@63)))
 :weight 0
))) (= ($generated@@5 $generated@@47) 4)) (= ($generated@@5 $generated@@48) 5)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (= ($generated@@5 ($generated@@49 $generated@@64 $generated@@65)) 6))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@51 ($generated@@49 $generated@@66 $generated@@67)) $generated@@66)
 :pattern ( ($generated@@49 $generated@@66 $generated@@67))
))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@52 ($generated@@49 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@49 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@29 $generated@@39 $generated@@71 ($generated@@33 $generated@@70) $generated@@72)  (or (= $generated@@71 $generated@@34) ($generated@@10 ($generated@@45 $generated@@6 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@39 ($generated@@49 $generated@@47 $generated@@48) $generated@@72 $generated@@71) $generated@@1)))))
 :pattern ( ($generated@@29 $generated@@39 $generated@@71 ($generated@@33 $generated@@70) $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@73 $generated@@74 $generated@@75) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@10 ($generated@@45 $generated@@6 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@39 ($generated@@49 $generated@@47 $generated@@48) $generated@@74 $generated@@76) $generated@@1))) ($generated@@10 ($generated@@45 $generated@@6 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@39 ($generated@@49 $generated@@47 $generated@@48) $generated@@75 $generated@@76) $generated@@1))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@39 ($generated@@49 $generated@@47 $generated@@48) $generated@@75 $generated@@76) $generated@@1))
)))
 :pattern ( ($generated@@73 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@77 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 Int) ) (!  (=> (and (and (and ($generated@@27 $generated@@84) (and (or (not (= $generated@@85 $generated@@34)) (not true)) (= ($generated@@35 $generated@@85) ($generated@@33 $generated@@83)))) (and (<= 0 $generated@@86) (< $generated@@86 ($generated@@32 $generated@@85)))) ($generated@@10 ($generated@@45 $generated@@6 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@39 ($generated@@49 $generated@@47 $generated@@48) $generated@@84 $generated@@85) $generated@@1)))) ($generated@@25 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@39 ($generated@@49 $generated@@47 $generated@@48) $generated@@84 $generated@@85) ($generated@@82 $generated@@86)) $generated@@83 $generated@@84))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@39 ($generated@@49 $generated@@47 $generated@@48) $generated@@84 $generated@@85) ($generated@@82 $generated@@86)) ($generated@@33 $generated@@83))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@45 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@45 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@36 $generated@@39 $generated@@91 ($generated@@40 $generated@@90))  (and ($generated@@36 $generated@@39 $generated@@91 ($generated@@33 $generated@@90)) (or (not (= $generated@@91 $generated@@34)) (not true))))
 :pattern ( ($generated@@36 $generated@@39 $generated@@91 ($generated@@40 $generated@@90)))
 :pattern ( ($generated@@36 $generated@@39 $generated@@91 ($generated@@33 $generated@@90)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@25 ($generated@@87 $generated@@95 $generated@@92) $generated@@93 $generated@@94) ($generated@@29 $generated@@95 $generated@@92 $generated@@93 $generated@@94))
 :pattern ( ($generated@@25 ($generated@@87 $generated@@95 $generated@@92) $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@73 $generated@@96 $generated@@97) (=> ($generated@@25 $generated@@98 $generated@@99 $generated@@96) ($generated@@25 $generated@@98 $generated@@99 $generated@@97)))
 :pattern ( ($generated@@73 $generated@@96 $generated@@97) ($generated@@25 $generated@@98 $generated@@99 $generated@@96))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (!  (=> ($generated@@73 $generated@@100 $generated@@101) (=> ($generated@@29 $generated@@104 $generated@@102 $generated@@103 $generated@@100) ($generated@@29 $generated@@104 $generated@@102 $generated@@103 $generated@@101)))
 :pattern ( ($generated@@73 $generated@@100 $generated@@101) ($generated@@29 $generated@@104 $generated@@102 $generated@@103 $generated@@100))
)))
(assert (forall (($generated@@106 T@U) ) (!  (and (= ($generated@@22 ($generated@@33 $generated@@106)) $generated@@2) (= ($generated@@105 ($generated@@33 $generated@@106)) $generated@@4))
 :pattern ( ($generated@@33 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (!  (and (= ($generated@@22 ($generated@@40 $generated@@107)) $generated@@3) (= ($generated@@105 ($generated@@40 $generated@@107)) $generated@@4))
 :pattern ( ($generated@@40 $generated@@107))
)))
(assert  (=> (< 0 $generated@@23) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@28 $generated@@108 $generated@@26) ($generated@@36 $generated@@7 ($generated@@11 ($generated@@24 $generated@@108)) $generated))
 :pattern ( ($generated@@24 $generated@@108))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@36 $generated@@39 $generated@@110 ($generated@@33 $generated@@109))  (or (= $generated@@110 $generated@@34) (= ($generated@@35 $generated@@110) ($generated@@33 $generated@@109))))
 :pattern ( ($generated@@36 $generated@@39 $generated@@110 ($generated@@33 $generated@@109)))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or (not (= $generated@@111 $generated@@113)) (not true)) (=> (and ($generated@@73 $generated@@111 $generated@@112) ($generated@@73 $generated@@112 $generated@@113)) ($generated@@73 $generated@@111 $generated@@113)))
 :pattern ( ($generated@@73 $generated@@111 $generated@@112) ($generated@@73 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@28 $generated@@114 $generated) (and (= ($generated@@87 $generated@@7 ($generated@@45 $generated@@7 $generated@@114)) $generated@@114) ($generated@@36 $generated@@7 ($generated@@45 $generated@@7 $generated@@114) $generated)))
 :pattern ( ($generated@@28 $generated@@114 $generated))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@28 ($generated@@87 $generated@@117 $generated@@115) $generated@@116) ($generated@@36 $generated@@117 $generated@@115 $generated@@116))
 :pattern ( ($generated@@28 ($generated@@87 $generated@@117 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (<= 0 ($generated@@32 $generated@@118))
 :pattern ( ($generated@@32 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@44 $generated@@119) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> ($generated@@28 $generated@@121 $generated@@119) ($generated@@25 $generated@@121 $generated@@119 $generated@@120))
 :pattern ( ($generated@@25 $generated@@121 $generated@@119 $generated@@120))
)))
 :pattern ( ($generated@@44 $generated@@119))
)))
(assert (forall (($generated@@122 Int) ) (! (= ($generated@@21 ($generated@@82 $generated@@122)) 1)
 :pattern ( ($generated@@82 $generated@@122))
)))
(assert (forall (($generated@@124 Int) ) (! (= ($generated@@123 ($generated@@82 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@82 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@33 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@33 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@40 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@40 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@45 $generated@@130 ($generated@@87 $generated@@130 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@87 $generated@@130 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@132) (and (or (not (= $generated@@133 $generated@@34)) (not true)) (= ($generated@@35 $generated@@133) ($generated@@33 $generated@@131)))) ($generated@@10 ($generated@@45 $generated@@6 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@39 ($generated@@49 $generated@@47 $generated@@48) $generated@@132 $generated@@133) $generated@@1)))) ($generated@@29 $generated@@7 ($generated@@11 ($generated@@32 $generated@@133)) $generated $generated@@132))
 :pattern ( ($generated@@32 $generated@@133) ($generated@@45 $generated@@6 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@39 ($generated@@49 $generated@@47 $generated@@48) $generated@@132 $generated@@133) $generated@@1)) ($generated@@33 $generated@@131))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 Int) ) (!  (=> (and (and ($generated@@27 $generated@@135) (and (or (not (= $generated@@136 $generated@@34)) (not true)) (= ($generated@@35 $generated@@136) ($generated@@33 $generated@@134)))) (and (<= 0 $generated@@137) (< $generated@@137 ($generated@@32 $generated@@136)))) ($generated@@28 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@39 ($generated@@49 $generated@@47 $generated@@48) $generated@@135 $generated@@136) ($generated@@82 $generated@@137)) $generated@@134))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@39 ($generated@@49 $generated@@47 $generated@@48) $generated@@135 $generated@@136) ($generated@@82 $generated@@137)) ($generated@@33 $generated@@134))
)))
(assert  (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@138 $generated@@141 $generated@@142 $generated@@143 ($generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@146 $generated@@147) $generated@@144)
 :weight 0
)) (and (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@138 $generated@@148 $generated@@149 $generated@@150 ($generated@@140 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@138 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@138 $generated@@157 $generated@@158 $generated@@159 ($generated@@140 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@138 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Bool) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@10 ($generated@@138 $generated@@39 $generated@@47 $generated@@6 ($generated@@139 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))  (=> (and (or (not (= $generated@@170 $generated@@166)) (not true)) ($generated@@10 ($generated@@45 $generated@@6 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@39 ($generated@@49 $generated@@47 $generated@@48) $generated@@167 $generated@@170) $generated@@168)))) $generated@@169))
 :pattern ( ($generated@@138 $generated@@39 $generated@@47 $generated@@6 ($generated@@139 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@28 $generated@@173 ($generated@@33 $generated@@172)) (and (= ($generated@@87 $generated@@39 ($generated@@45 $generated@@39 $generated@@173)) $generated@@173) ($generated@@36 $generated@@39 ($generated@@45 $generated@@39 $generated@@173) ($generated@@33 $generated@@172))))
 :pattern ( ($generated@@28 $generated@@173 ($generated@@33 $generated@@172)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@28 $generated@@175 ($generated@@40 $generated@@174)) (and (= ($generated@@87 $generated@@39 ($generated@@45 $generated@@39 $generated@@175)) $generated@@175) ($generated@@36 $generated@@39 ($generated@@45 $generated@@39 $generated@@175) ($generated@@40 $generated@@174))))
 :pattern ( ($generated@@28 $generated@@175 ($generated@@40 $generated@@174)))
)))
(assert (forall (($generated@@176 Int) ) (! (= ($generated@@87 $generated@@7 ($generated@@11 ($generated@@77 $generated@@176))) ($generated@@79 $generated@@48 ($generated@@87 $generated@@7 ($generated@@11 $generated@@176))))
 :pattern ( ($generated@@87 $generated@@7 ($generated@@11 ($generated@@77 $generated@@176))))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@87 $generated@@178 ($generated@@79 $generated@@178 $generated@@177)) ($generated@@79 $generated@@48 ($generated@@87 $generated@@178 $generated@@177)))
 :pattern ( ($generated@@87 $generated@@178 ($generated@@79 $generated@@178 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! ($generated@@29 $generated@@7 $generated@@180 $generated $generated@@179)
 :pattern ( ($generated@@29 $generated@@7 $generated@@180 $generated $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (! ($generated@@36 $generated@@7 $generated@@181 $generated)
 :pattern ( ($generated@@36 $generated@@7 $generated@@181 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@188 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@189  (=> (= $generated@@182 ($generated@@139 $generated@@34 $generated@@183 $generated@@1 false)) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@25 $generated@@184 $generated@@26 $generated@@185)) (=> ($generated@@25 $generated@@184 $generated@@26 $generated@@185) (and (=> (= (ControlFlow 0 2) (- 0 8)) (or (not (= $generated@@186 $generated@@34)) (not true))) (=> (or (not (= $generated@@186 $generated@@34)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@29 $generated@@39 $generated@@186 ($generated@@33 $generated) $generated@@185)) (=> ($generated@@29 $generated@@39 $generated@@186 ($generated@@33 $generated) $generated@@185) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 ($generated@@77 3)) (< ($generated@@77 3) ($generated@@32 $generated@@186)))) (=> (and (<= 0 ($generated@@77 3)) (< ($generated@@77 3) ($generated@@32 $generated@@186))) (=> (= (+ ($generated@@24 $generated@@184) ($generated@@12 ($generated@@45 $generated@@7 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@39 ($generated@@49 $generated@@47 $generated@@48) $generated@@185 $generated@@186) ($generated@@82 ($generated@@77 3)))))) ($generated@@24 $generated@@184)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@186 $generated@@34)) (not true))) (=> (or (not (= $generated@@186 $generated@@34)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@29 $generated@@39 $generated@@186 ($generated@@33 $generated) $generated@@185)) (=> ($generated@@29 $generated@@39 $generated@@186 ($generated@@33 $generated) $generated@@185) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@77 3)) (< ($generated@@77 3) ($generated@@32 $generated@@186)))) (=> (and (<= 0 ($generated@@77 3)) (< ($generated@@77 3) ($generated@@32 $generated@@186))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@25 $generated@@184 $generated@@26 $generated@@185))))))))))))))))))))
(let (($generated@@190  (=> (and (and ($generated@@27 $generated@@185) ($generated@@187 $generated@@185)) (and ($generated@@28 $generated@@184 $generated@@26) ($generated@@25 $generated@@184 $generated@@26 $generated@@188))) (=> (and (and (and ($generated@@36 $generated@@39 $generated@@186 ($generated@@40 $generated)) ($generated@@29 $generated@@39 $generated@@186 ($generated@@40 $generated) $generated@@188)) (= 2 $generated@@23)) (and (and (= $generated@@188 $generated@@185) (and ($generated@@73 $generated@@188 $generated@@183) ($generated@@27 $generated@@183))) (and ($generated@@29 $generated@@39 $generated@@186 ($generated@@40 $generated) $generated@@188) (= (ControlFlow 0 10) 2)))) $generated@@189))))
$generated@@190)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 6))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
