(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@28 () Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 (Int) Int)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@U T@U Bool T@U) Int)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@54 () Bool)
(declare-fun $generated@@63 (T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@97 (T@U) Int)
(declare-fun $generated@@98 (T@U) Int)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@110 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@T T@T) T@T)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T) T@T)
(declare-fun $generated@@116 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated@@21) $generated@@1))
(assert (= ($generated@@4 $generated@@23) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@25 $generated@@27) ($generated@@22 $generated@@23 $generated@@21 ($generated@@24 $generated@@26) $generated@@27))
 :pattern ( ($generated@@22 $generated@@23 $generated@@21 ($generated@@24 $generated@@26) $generated@@27))
)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@32 T@U) ) (!  (=> (or ($generated@@30 $generated@@32) (< 1 $generated@@28)) ($generated@@31 $generated@@23 ($generated@@29 $generated@@32) ($generated@@24 $generated@@32)))
 :pattern ( ($generated@@29 $generated@@32))
))))
(assert (forall (($generated@@33 T@U) ) (! ($generated@@31 $generated@@23 $generated@@21 ($generated@@24 $generated@@33))
 :pattern ( ($generated@@31 $generated@@23 $generated@@21 ($generated@@24 $generated@@33)))
)))
(assert (forall (($generated@@35 Int) ) (! (= ($generated@@34 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@T) ) (! (= ($generated@@36 $generated@@38 $generated@@37) $generated@@37)
 :pattern ( ($generated@@36 $generated@@38 $generated@@37))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@31 $generated@@23 ($generated@@39 $generated@@42 $generated@@43) ($generated@@24 $generated@@41))  (and ($generated@@40 $generated@@42 $generated@@41) ($generated@@31 $generated@@23 $generated@@43 ($generated@@24 $generated@@41))))
 :pattern ( ($generated@@31 $generated@@23 ($generated@@39 $generated@@42 $generated@@43) ($generated@@24 $generated@@41)))
)))
(assert (forall (($generated@@45 T@U) ) (! (= ($generated@@44 $generated@@45) (= ($generated@@20 $generated@@45) $generated@@1))
 :pattern ( ($generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ) (! (= ($generated@@46 $generated@@47) (= ($generated@@20 $generated@@47) $generated@@2))
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 ($generated@@48 $generated@@51 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@48 $generated@@51 $generated@@50))
)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 Bool) ($generated@@58 T@U) ) (!  (=> (or ($generated@@53 $generated@@55 $generated@@58) (and (< 1 $generated@@28) ($generated@@31 $generated@@23 $generated@@58 ($generated@@24 $generated@@55)))) (<= ($generated@@34 0) ($generated@@52 $generated@@55 $generated@@56 $generated@@54 $generated@@58)))
 :pattern ( ($generated@@52 $generated@@55 $generated@@56 $generated@@57 $generated@@58))
))))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@46 $generated@@59) (exists (($generated@@60 T@U) ($generated@@61 T@U) ) (= $generated@@59 ($generated@@39 $generated@@60 $generated@@61))))
 :pattern ( ($generated@@46 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@44 $generated@@62) (= $generated@@62 $generated@@21))
 :pattern ( ($generated@@44 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@63 ($generated@@49 $generated@@67 $generated@@64) $generated@@65 $generated@@66) ($generated@@22 $generated@@67 $generated@@64 $generated@@65 $generated@@66))
 :pattern ( ($generated@@63 ($generated@@49 $generated@@67 $generated@@64) $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@70 T@U) ) (!  (and (= ($generated@@68 ($generated@@24 $generated@@70)) $generated@@0) (= ($generated@@69 ($generated@@24 $generated@@70)) $generated@@3))
 :pattern ( ($generated@@24 $generated@@70))
)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@71 T@U) ) (!  (=> (or ($generated@@30 $generated@@71) (< 1 $generated@@28)) (= ($generated@@29 $generated@@71) ($generated@@36 $generated@@23 $generated@@21)))
 :pattern ( ($generated@@29 $generated@@71))
))))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@72 T@U) ) (!  (=> (or ($generated@@30 $generated@@72) (< 1 $generated@@28)) (= ($generated@@29 $generated@@72) ($generated@@36 $generated@@23 $generated@@21)))
 :weight 3
 :pattern ( ($generated@@29 $generated@@72))
))))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or ($generated@@53 $generated@@75 ($generated@@36 $generated@@23 $generated@@77)) (and (< 1 $generated@@28) ($generated@@31 $generated@@23 $generated@@77 ($generated@@24 $generated@@75)))) (and (=> ($generated@@9 ($generated@@36 $generated@@5 ($generated@@8 ($generated@@46 ($generated@@36 $generated@@23 $generated@@77))))) ($generated@@53 $generated@@75 ($generated@@36 $generated@@23 ($generated@@74 ($generated@@36 $generated@@23 $generated@@77))))) (= ($generated@@52 $generated@@75 ($generated@@73 $generated@@76) true ($generated@@36 $generated@@23 $generated@@77)) (ite ($generated@@46 ($generated@@36 $generated@@23 $generated@@77)) (+ 1 ($generated@@52 $generated@@75 ($generated@@73 $generated@@76) $generated@@54 ($generated@@36 $generated@@23 ($generated@@74 ($generated@@36 $generated@@23 $generated@@77))))) 0))))
 :weight 3
 :pattern ( ($generated@@52 $generated@@75 ($generated@@73 $generated@@76) true ($generated@@36 $generated@@23 $generated@@77)))
))))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (or ($generated@@53 $generated@@78 $generated@@80) (and (< 1 $generated@@28) ($generated@@31 $generated@@23 $generated@@80 ($generated@@24 $generated@@78)))) (and (=> ($generated@@46 $generated@@80) ($generated@@53 $generated@@78 ($generated@@74 $generated@@80))) (= ($generated@@52 $generated@@78 ($generated@@73 $generated@@79) true $generated@@80) (ite ($generated@@46 $generated@@80) (+ 1 ($generated@@52 $generated@@78 $generated@@79 $generated@@54 ($generated@@74 $generated@@80))) 0))))
 :pattern ( ($generated@@52 $generated@@78 ($generated@@73 $generated@@79) true $generated@@80))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> ($generated@@31 $generated@@23 $generated@@82 ($generated@@24 $generated@@81)) (or ($generated@@44 $generated@@82) ($generated@@46 $generated@@82)))
 :pattern ( ($generated@@46 $generated@@82) ($generated@@31 $generated@@23 $generated@@82 ($generated@@24 $generated@@81)))
 :pattern ( ($generated@@44 $generated@@82) ($generated@@31 $generated@@23 $generated@@82 ($generated@@24 $generated@@81)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@40 ($generated@@49 $generated@@85 $generated@@83) $generated@@84) ($generated@@31 $generated@@85 $generated@@83 $generated@@84))
 :pattern ( ($generated@@40 ($generated@@49 $generated@@85 $generated@@83) $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@20 ($generated@@39 $generated@@86 $generated@@87)) $generated@@2)
 :pattern ( ($generated@@39 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 ($generated@@39 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@39 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@74 ($generated@@39 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@39 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@93 ($generated@@24 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@24 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@48 $generated@@96 ($generated@@49 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@49 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (< ($generated@@97 $generated@@99) ($generated@@98 ($generated@@39 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@39 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (< ($generated@@98 $generated@@102) ($generated@@98 ($generated@@39 $generated@@101 $generated@@102)))
 :pattern ( ($generated@@39 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (and ($generated@@25 $generated@@105) (and ($generated@@46 $generated@@103) ($generated@@22 $generated@@23 $generated@@103 ($generated@@24 $generated@@104) $generated@@105))) ($generated@@63 ($generated@@88 $generated@@103) $generated@@104 $generated@@105))
 :pattern ( ($generated@@63 ($generated@@88 $generated@@103) $generated@@104 $generated@@105))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@106 $generated@@117 $generated@@118 $generated@@119 ($generated@@113 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@122 $generated@@123) $generated@@120)
 :weight 0
)) (and (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@106 $generated@@124 $generated@@125 $generated@@126 ($generated@@113 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@106 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@106 $generated@@133 $generated@@134 $generated@@135 ($generated@@113 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@106 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)))) (= ($generated@@4 $generated@@107) 4)) (= ($generated@@4 $generated@@108) 5)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@110 $generated@@142 $generated@@143 ($generated@@114 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@144) $generated@@146) $generated@@144)
 :weight 0
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@151 $generated@@152) (= ($generated@@110 $generated@@147 $generated@@148 ($generated@@114 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@152) ($generated@@110 $generated@@147 $generated@@148 $generated@@150 $generated@@152)))
 :weight 0
))) (= ($generated@@4 $generated@@111) 6)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (= ($generated@@4 ($generated@@112 $generated@@153 $generated@@154)) 7))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@115 ($generated@@112 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@112 $generated@@155 $generated@@156))
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@116 ($generated@@112 $generated@@157 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@112 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Bool) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@9 ($generated@@106 $generated@@107 $generated@@108 $generated@@5 ($generated@@109 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))  (=> (and (or (not (= $generated@@163 $generated@@159)) (not true)) ($generated@@9 ($generated@@48 $generated@@5 ($generated@@110 $generated@@108 $generated@@111 ($generated@@110 $generated@@107 ($generated@@112 $generated@@108 $generated@@111) $generated@@160 $generated@@163) $generated@@161)))) $generated@@162))
 :pattern ( ($generated@@106 $generated@@107 $generated@@108 $generated@@5 ($generated@@109 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@97 ($generated@@49 $generated@@23 $generated@@165)) ($generated@@98 $generated@@165))
 :pattern ( ($generated@@97 ($generated@@49 $generated@@23 $generated@@165)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ) (! (= ($generated@@52 $generated@@166 ($generated@@73 $generated@@167) $generated@@168 $generated@@169) ($generated@@52 $generated@@166 $generated@@167 $generated@@168 $generated@@169))
 :pattern ( ($generated@@52 $generated@@166 ($generated@@73 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@40 $generated@@171 ($generated@@24 $generated@@170)) (and (= ($generated@@49 $generated@@23 ($generated@@48 $generated@@23 $generated@@171)) $generated@@171) ($generated@@31 $generated@@23 ($generated@@48 $generated@@23 $generated@@171) ($generated@@24 $generated@@170))))
 :pattern ( ($generated@@40 $generated@@171 ($generated@@24 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and ($generated@@25 $generated@@174) (and ($generated@@46 $generated@@172) ($generated@@22 $generated@@23 $generated@@172 ($generated@@24 $generated@@173) $generated@@174))) ($generated@@22 $generated@@23 ($generated@@74 $generated@@172) ($generated@@24 $generated@@173) $generated@@174))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@74 $generated@@172) ($generated@@24 $generated@@173) $generated@@174))
)))
(assert (= $generated@@21 ($generated@@36 $generated@@23 $generated@@21)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (or ($generated@@30 $generated@@176) (< 1 $generated@@28)) ($generated@@25 $generated@@175)) ($generated@@22 $generated@@23 ($generated@@29 $generated@@176) ($generated@@24 $generated@@176) $generated@@175))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@29 $generated@@176) ($generated@@24 $generated@@176) $generated@@175))
))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@39 ($generated@@36 $generated@@111 $generated@@177) ($generated@@36 $generated@@23 $generated@@178)) ($generated@@36 $generated@@23 ($generated@@39 $generated@@177 $generated@@178)))
 :pattern ( ($generated@@39 ($generated@@36 $generated@@111 $generated@@177) ($generated@@36 $generated@@23 $generated@@178)))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@49 $generated@@6 ($generated@@10 ($generated@@34 $generated@@179))) ($generated@@36 $generated@@111 ($generated@@49 $generated@@6 ($generated@@10 $generated@@179))))
 :pattern ( ($generated@@49 $generated@@6 ($generated@@10 ($generated@@34 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@49 $generated@@181 ($generated@@36 $generated@@181 $generated@@180)) ($generated@@36 $generated@@111 ($generated@@49 $generated@@181 $generated@@180)))
 :pattern ( ($generated@@49 $generated@@181 ($generated@@36 $generated@@181 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> ($generated@@25 $generated@@185) (= ($generated@@22 $generated@@23 ($generated@@39 $generated@@183 $generated@@184) ($generated@@24 $generated@@182) $generated@@185)  (and ($generated@@63 $generated@@183 $generated@@182 $generated@@185) ($generated@@22 $generated@@23 $generated@@184 ($generated@@24 $generated@@182) $generated@@185))))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@39 $generated@@183 $generated@@184) ($generated@@24 $generated@@182) $generated@@185))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@193  (=> (= $generated@@186 ($generated@@109 $generated@@187 $generated@@188 $generated false)) (=> (and (and (and ($generated@@25 $generated@@189) ($generated@@190 $generated@@189)) (= $generated@@188 $generated@@189)) (and $generated@@54 (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@52 $generated@@191 ($generated@@73 ($generated@@73 $generated@@192)) $generated@@54 ($generated@@36 $generated@@23 ($generated@@29 $generated@@191))) ($generated@@34 0))))))
(let (($generated@@194  (=> (and (and ($generated@@25 $generated@@188) ($generated@@190 $generated@@188)) (and (= 2 $generated@@28) (= (ControlFlow 0 3) 2))) $generated@@193)))
$generated@@194)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
