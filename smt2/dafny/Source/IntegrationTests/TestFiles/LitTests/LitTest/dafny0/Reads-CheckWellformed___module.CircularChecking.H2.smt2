(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 (T@T) Int)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 (Bool) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (Int) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (Real) T@U)
(declare-fun $generated@@26 (T@U) Real)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@90 (Int) Int)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) Bool)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@17 $generated@@18) 0) (= ($generated@@17 $generated@@19) 1)) (= ($generated@@17 $generated@@20) 2)) (forall (($generated@@27 Bool) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Int) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 Real) ) (! (= ($generated@@26 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16)
)
(assert (= ($generated@@33 $generated@@2) 0))
(assert (= ($generated@@34 $generated) $generated@@0))
(assert (= ($generated@@35 $generated@@2) $generated@@3))
(assert (= ($generated@@17 $generated@@37) 3))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@41 $generated@@38)  (or (= $generated@@41 $generated@@39) (= ($generated@@40 $generated@@41) $generated@@38)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@41 $generated@@38))
)))
(assert (forall (($generated@@43 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@43 $generated@@42)  (or (= $generated@@43 $generated@@39) (= ($generated@@40 $generated@@43) $generated@@42)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@44 $generated@@37 $generated@@47 $generated@@45 $generated@@48) ($generated@@44 $generated@@37 $generated@@47 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@37 $generated@@47 $generated@@45 $generated@@48))
 :pattern ( ($generated@@44 $generated@@37 $generated@@47 $generated@@46 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@44 $generated@@37 $generated@@50 $generated@@49 $generated@@51) ($generated@@44 $generated@@37 $generated@@50 $generated@@38 $generated@@51))
 :pattern ( ($generated@@44 $generated@@37 $generated@@50 $generated@@49 $generated@@51))
 :pattern ( ($generated@@44 $generated@@37 $generated@@50 $generated@@38 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@44 $generated@@37 $generated@@53 $generated@@52 $generated@@54) ($generated@@44 $generated@@37 $generated@@53 $generated@@42 $generated@@54))
 :pattern ( ($generated@@44 $generated@@37 $generated@@53 $generated@@52 $generated@@54))
 :pattern ( ($generated@@44 $generated@@37 $generated@@53 $generated@@42 $generated@@54))
)))
(assert (= ($generated@@33 $generated@@55) 0))
(assert (= ($generated@@56 $generated@@6 $generated@@15) $generated@@55))
(assert ($generated@@57 $generated@@55))
(assert (= ($generated@@33 $generated@@58) 0))
(assert (= ($generated@@56 $generated@@10 $generated@@16) $generated@@58))
(assert  (not ($generated@@57 $generated@@58)))
(assert  (and (and (and (and (and (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@60 $generated@@67 $generated@@68 ($generated@@64 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@71) $generated@@69)
 :weight 0
)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@76 $generated@@77) (= ($generated@@60 $generated@@72 $generated@@73 ($generated@@64 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@77) ($generated@@60 $generated@@72 $generated@@73 $generated@@75 $generated@@77)))
 :weight 0
))) (= ($generated@@17 $generated@@61) 4)) (= ($generated@@17 $generated@@62) 5)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (= ($generated@@17 ($generated@@63 $generated@@78 $generated@@79)) 6))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@65 ($generated@@63 $generated@@80 $generated@@81)) $generated@@80)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@66 ($generated@@63 $generated@@82 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@63 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@44 $generated@@37 $generated@@84 $generated@@46 $generated@@85)  (or (= $generated@@84 $generated@@39) ($generated@@22 ($generated@@59 $generated@@18 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@85 $generated@@84) $generated@@2)))))
 :pattern ( ($generated@@44 $generated@@37 $generated@@84 $generated@@46 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@44 $generated@@37 $generated@@86 $generated@@38 $generated@@87)  (or (= $generated@@86 $generated@@39) ($generated@@22 ($generated@@59 $generated@@18 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@87 $generated@@86) $generated@@2)))))
 :pattern ( ($generated@@44 $generated@@37 $generated@@86 $generated@@38 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@44 $generated@@37 $generated@@88 $generated@@42 $generated@@89)  (or (= $generated@@88 $generated@@39) ($generated@@22 ($generated@@59 $generated@@18 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@89 $generated@@88) $generated@@2)))))
 :pattern ( ($generated@@44 $generated@@37 $generated@@88 $generated@@42 $generated@@89))
)))
(assert (forall (($generated@@91 Int) ) (! (= ($generated@@90 $generated@@91) $generated@@91)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 $generated@@93) $generated@@93)
 :pattern ( ($generated@@92 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 ($generated@@59 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@59 $generated@@97 $generated@@96))
)))
(assert (= ($generated@@17 $generated@@98) 7))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@36 $generated@@98 $generated@@102 ($generated@@99 $generated@@103)) (forall (($generated@@104 T@U) ) (!  (=> ($generated@@100 $generated@@102 $generated@@104) ($generated@@101 $generated@@104 $generated@@103))
 :pattern ( ($generated@@100 $generated@@102 $generated@@104))
)))
 :pattern ( ($generated@@36 $generated@@98 $generated@@102 ($generated@@99 $generated@@103)))
)))
(assert  (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@105 $generated@@108 $generated@@109 $generated@@110 ($generated@@107 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@113 $generated@@114) $generated@@111)
 :weight 0
)) (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@120 $generated@@122) (= ($generated@@105 $generated@@115 $generated@@116 $generated@@117 ($generated@@107 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@122 $generated@@123) ($generated@@105 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@122 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@105 $generated@@124 $generated@@125 $generated@@126 ($generated@@107 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@105 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@22 ($generated@@105 $generated@@37 $generated@@61 $generated@@18 ($generated@@106 $generated@@133 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))  (=> (and (or (not (= $generated@@138 $generated@@133)) (not true)) ($generated@@22 ($generated@@59 $generated@@18 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@134 $generated@@138) $generated@@135)))) (or (= $generated@@138 $generated@@136) ($generated@@100 $generated@@137 ($generated@@95 $generated@@37 $generated@@138)))))
 :pattern ( ($generated@@105 $generated@@37 $generated@@61 $generated@@18 ($generated@@106 $generated@@133 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))
)))
(assert ($generated@@57 $generated@@2))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and ($generated@@140 $generated@@141) (and (or (not (= $generated@@142 $generated@@39)) (not true)) (= ($generated@@40 $generated@@142) $generated@@42))) ($generated@@22 ($generated@@59 $generated@@18 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@141 $generated@@142) $generated@@2)))) ($generated@@44 $generated@@19 ($generated@@59 $generated@@19 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@141 $generated@@142) $generated@@58)) $generated $generated@@141))
 :pattern ( ($generated@@59 $generated@@19 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@141 $generated@@142) $generated@@58)))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@143 ($generated@@95 $generated@@147 $generated@@144) $generated@@145 $generated@@146) ($generated@@44 $generated@@147 $generated@@144 $generated@@145 $generated@@146))
 :pattern ( ($generated@@143 ($generated@@95 $generated@@147 $generated@@144) $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> ($generated@@101 $generated@@148 $generated@@46) (and (= ($generated@@95 $generated@@37 ($generated@@59 $generated@@37 $generated@@148)) $generated@@148) ($generated@@36 $generated@@37 ($generated@@59 $generated@@37 $generated@@148) $generated@@46)))
 :pattern ( ($generated@@101 $generated@@148 $generated@@46))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> ($generated@@101 $generated@@149 $generated@@45) (and (= ($generated@@95 $generated@@37 ($generated@@59 $generated@@37 $generated@@149)) $generated@@149) ($generated@@36 $generated@@37 ($generated@@59 $generated@@37 $generated@@149) $generated@@45)))
 :pattern ( ($generated@@101 $generated@@149 $generated@@45))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> ($generated@@101 $generated@@150 $generated@@38) (and (= ($generated@@95 $generated@@37 ($generated@@59 $generated@@37 $generated@@150)) $generated@@150) ($generated@@36 $generated@@37 ($generated@@59 $generated@@37 $generated@@150) $generated@@38)))
 :pattern ( ($generated@@101 $generated@@150 $generated@@38))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> ($generated@@101 $generated@@151 $generated@@49) (and (= ($generated@@95 $generated@@37 ($generated@@59 $generated@@37 $generated@@151)) $generated@@151) ($generated@@36 $generated@@37 ($generated@@59 $generated@@37 $generated@@151) $generated@@49)))
 :pattern ( ($generated@@101 $generated@@151 $generated@@49))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@101 $generated@@152 $generated@@52) (and (= ($generated@@95 $generated@@37 ($generated@@59 $generated@@37 $generated@@152)) $generated@@152) ($generated@@36 $generated@@37 ($generated@@59 $generated@@37 $generated@@152) $generated@@52)))
 :pattern ( ($generated@@101 $generated@@152 $generated@@52))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@101 $generated@@153 $generated@@42) (and (= ($generated@@95 $generated@@37 ($generated@@59 $generated@@37 $generated@@153)) $generated@@153) ($generated@@36 $generated@@37 ($generated@@59 $generated@@37 $generated@@153) $generated@@42)))
 :pattern ( ($generated@@101 $generated@@153 $generated@@42))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@154 $generated@@45)  (and ($generated@@36 $generated@@37 $generated@@154 $generated@@46) (or (not (= $generated@@154 $generated@@39)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@154 $generated@@45))
 :pattern ( ($generated@@36 $generated@@37 $generated@@154 $generated@@46))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@155 $generated@@49)  (and ($generated@@36 $generated@@37 $generated@@155 $generated@@38) (or (not (= $generated@@155 $generated@@39)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@155 $generated@@49))
 :pattern ( ($generated@@36 $generated@@37 $generated@@155 $generated@@38))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@156 $generated@@52)  (and ($generated@@36 $generated@@37 $generated@@156 $generated@@42) (or (not (= $generated@@156 $generated@@39)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@156 $generated@@52))
 :pattern ( ($generated@@36 $generated@@37 $generated@@156 $generated@@42))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and ($generated@@140 $generated@@157) (and (or (not (= $generated@@158 $generated@@39)) (not true)) (= ($generated@@40 $generated@@158) $generated@@38))) ($generated@@36 $generated@@98 ($generated@@59 $generated@@98 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@157 $generated@@158) $generated@@55)) ($generated@@99 $generated@@45)))
 :pattern ( ($generated@@59 $generated@@98 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@157 $generated@@158) $generated@@55)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and ($generated@@140 $generated@@159) (and (or (not (= $generated@@160 $generated@@39)) (not true)) (= ($generated@@40 $generated@@160) $generated@@38))) ($generated@@22 ($generated@@59 $generated@@18 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@159 $generated@@160) $generated@@2)))) ($generated@@44 $generated@@98 ($generated@@59 $generated@@98 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@159 $generated@@160) $generated@@55)) ($generated@@99 $generated@@45) $generated@@159))
 :pattern ( ($generated@@59 $generated@@98 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@159 $generated@@160) $generated@@55)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (and (= ($generated@@161 ($generated@@56 $generated@@162 $generated@@163)) $generated@@162) (= ($generated@@35 ($generated@@56 $generated@@162 $generated@@163)) $generated@@163))
 :pattern ( ($generated@@56 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> ($generated@@101 $generated@@164 $generated) (and (= ($generated@@95 $generated@@19 ($generated@@59 $generated@@19 $generated@@164)) $generated@@164) ($generated@@36 $generated@@19 ($generated@@59 $generated@@19 $generated@@164) $generated)))
 :pattern ( ($generated@@101 $generated@@164 $generated))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@101 ($generated@@95 $generated@@167 $generated@@165) $generated@@166) ($generated@@36 $generated@@167 $generated@@165 $generated@@166))
 :pattern ( ($generated@@101 ($generated@@95 $generated@@167 $generated@@165) $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@44 $generated@@98 $generated@@168 ($generated@@99 $generated@@169) $generated@@170) (forall (($generated@@171 T@U) ) (!  (=> ($generated@@100 $generated@@168 $generated@@171) ($generated@@143 $generated@@171 $generated@@169 $generated@@170))
 :pattern ( ($generated@@100 $generated@@168 $generated@@171))
)))
 :pattern ( ($generated@@44 $generated@@98 $generated@@168 ($generated@@99 $generated@@169) $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ) (! ($generated@@36 $generated@@37 $generated@@172 $generated@@46)
 :pattern ( ($generated@@36 $generated@@37 $generated@@172 $generated@@46))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@173 ($generated@@99 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@99 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@34 ($generated@@99 $generated@@175)) $generated@@1)
 :pattern ( ($generated@@99 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@T) ) (! (= ($generated@@59 $generated@@177 ($generated@@95 $generated@@177 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@95 $generated@@177 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and ($generated@@140 $generated@@178) (and (or (not (= $generated@@179 $generated@@39)) (not true)) (= ($generated@@40 $generated@@179) $generated@@42))) ($generated@@36 $generated@@19 ($generated@@59 $generated@@19 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@178 $generated@@179) $generated@@58)) $generated))
 :pattern ( ($generated@@59 $generated@@19 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@178 $generated@@179) $generated@@58)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@101 $generated@@180 ($generated@@99 $generated@@181)) (and (= ($generated@@95 $generated@@98 ($generated@@59 $generated@@98 $generated@@180)) $generated@@180) ($generated@@36 $generated@@98 ($generated@@59 $generated@@98 $generated@@180) ($generated@@99 $generated@@181))))
 :pattern ( ($generated@@101 $generated@@180 ($generated@@99 $generated@@181)))
)))
(assert (= ($generated@@34 $generated@@46) $generated@@4))
(assert (= ($generated@@182 $generated@@46) $generated@@12))
(assert (= ($generated@@34 $generated@@45) $generated@@5))
(assert (= ($generated@@182 $generated@@45) $generated@@12))
(assert (= ($generated@@34 $generated@@38) $generated@@7))
(assert (= ($generated@@182 $generated@@38) $generated@@13))
(assert (= ($generated@@34 $generated@@49) $generated@@8))
(assert (= ($generated@@182 $generated@@49) $generated@@13))
(assert (= ($generated@@34 $generated@@52) $generated@@9))
(assert (= ($generated@@182 $generated@@52) $generated@@14))
(assert (= ($generated@@34 $generated@@42) $generated@@11))
(assert (= ($generated@@182 $generated@@42) $generated@@14))
(assert (forall (($generated@@183 Int) ) (! (= ($generated@@95 $generated@@19 ($generated@@23 ($generated@@90 $generated@@183))) ($generated@@92 $generated@@62 ($generated@@95 $generated@@19 ($generated@@23 $generated@@183))))
 :pattern ( ($generated@@95 $generated@@19 ($generated@@23 ($generated@@90 $generated@@183))))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@T) ) (! (= ($generated@@95 $generated@@185 ($generated@@92 $generated@@185 $generated@@184)) ($generated@@92 $generated@@62 ($generated@@95 $generated@@185 $generated@@184)))
 :pattern ( ($generated@@95 $generated@@185 ($generated@@92 $generated@@185 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! ($generated@@44 $generated@@19 $generated@@187 $generated $generated@@186)
 :pattern ( ($generated@@44 $generated@@19 $generated@@187 $generated $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! ($generated@@36 $generated@@19 $generated@@188 $generated)
 :pattern ( ($generated@@36 $generated@@19 $generated@@188 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Bool)
(declare-fun $generated@@194 () Bool)
(declare-fun $generated@@195 () Bool)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@197 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@198 true))
(let (($generated@@199 true))
(let (($generated@@200  (=> (= $generated@@189 ($generated@@106 $generated@@39 $generated@@190 $generated@@2 $generated@@191 ($generated@@59 $generated@@98 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@190 $generated@@191) $generated@@55)))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (or (not (= $generated@@192 $generated@@39)) (not true))) (=> (or (not (= $generated@@192 $generated@@39)) (not true)) (=> (and (and (= $generated@@193 ($generated@@22 ($generated@@105 $generated@@37 $generated@@61 $generated@@18 $generated@@189 $generated@@192 $generated@@58))) (= ($generated@@24 ($generated@@59 $generated@@19 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@190 $generated@@192) $generated@@58))) ($generated@@90 10))) (and (= $generated@@194 ($generated@@22 ($generated@@105 $generated@@37 $generated@@61 $generated@@18 $generated@@189 $generated@@191 $generated@@55))) ($generated@@100 ($generated@@59 $generated@@98 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@37 ($generated@@63 $generated@@61 $generated@@62) $generated@@190 $generated@@191) $generated@@55)) ($generated@@95 $generated@@37 $generated@@192)))) (and (=> (= (ControlFlow 0 3) (- 0 6)) $generated@@193) (=> $generated@@193 (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@194) (=> $generated@@194 (=> (= $generated@@195 ($generated@@22 ($generated@@105 $generated@@37 $generated@@61 $generated@@18 $generated@@189 $generated@@191 $generated@@55))) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@195) (=> $generated@@195 (and (=> (= (ControlFlow 0 3) 1) $generated@@199) (=> (= (ControlFlow 0 3) 2) $generated@@198)))))))))))))))
(let (($generated@@201  (=> (and ($generated@@140 $generated@@190) ($generated@@196 $generated@@190)) (=> (and (and (and (or (not (= $generated@@191 $generated@@39)) (not true)) (and ($generated@@36 $generated@@37 $generated@@191 $generated@@49) ($generated@@44 $generated@@37 $generated@@191 $generated@@49 $generated@@190))) ($generated@@36 $generated@@37 $generated@@192 $generated@@52)) (and (= 1 $generated@@197) (= (ControlFlow 0 8) 3))) $generated@@200))))
$generated@@201)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
