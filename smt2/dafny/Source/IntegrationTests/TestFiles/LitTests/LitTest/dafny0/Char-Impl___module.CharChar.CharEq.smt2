(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@62 (Int) Int)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@U T@U) T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (T@U Int) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@106 (Int) T@U)
(declare-fun $generated@@107 (T@U) Int)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U T@U Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@23 $generated@@24) 0))
(assert (= ($generated@@6 $generated@@26) 3))
(assert (forall (($generated@@30 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@30 $generated@@27)  (or (= $generated@@30 $generated@@28) (= ($generated@@29 $generated@@30) $generated@@27)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 $generated@@27))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@31 $generated@@26 $generated@@33 $generated@@32 $generated@@34) ($generated@@31 $generated@@26 $generated@@33 $generated@@27 $generated@@34))
 :pattern ( ($generated@@31 $generated@@26 $generated@@33 $generated@@32 $generated@@34))
 :pattern ( ($generated@@31 $generated@@26 $generated@@33 $generated@@27 $generated@@34))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@36 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@36 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@36 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@6 $generated@@37) 4)) (= ($generated@@6 $generated@@38) 5)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@6 ($generated@@39 $generated@@54 $generated@@55)) 6))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@39 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@39 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@39 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@31 $generated@@26 $generated@@60 $generated@@27 $generated@@61)  (or (= $generated@@60 $generated@@28) ($generated@@11 ($generated@@35 $generated@@7 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@61 $generated@@60) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@26 $generated@@60 $generated@@27 $generated@@61))
)))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@62 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@66 $generated@@65))
)))
(assert (= ($generated@@6 $generated@@67) 7))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and ($generated@@25 $generated@@67 $generated@@71 ($generated@@69 $generated@@73)) ($generated@@70 $generated@@72 $generated@@73)) ($generated@@25 $generated@@67 ($generated@@68 $generated@@71 $generated@@72) ($generated@@69 $generated@@73)))
 :pattern ( ($generated@@25 $generated@@67 ($generated@@68 $generated@@71 $generated@@72) ($generated@@69 $generated@@73)))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@35 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@35 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@23 ($generated@@68 $generated@@77 $generated@@78)) (+ 1 ($generated@@23 $generated@@77)))
 :pattern ( ($generated@@68 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@79 ($generated@@74 $generated@@83 $generated@@80) $generated@@81 $generated@@82) ($generated@@31 $generated@@83 $generated@@80 $generated@@81 $generated@@82))
 :pattern ( ($generated@@79 ($generated@@74 $generated@@83 $generated@@80) $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@70 $generated@@84 $generated@@27) (and (= ($generated@@74 $generated@@26 ($generated@@35 $generated@@26 $generated@@84)) $generated@@84) ($generated@@25 $generated@@26 ($generated@@35 $generated@@26 $generated@@84) $generated@@27)))
 :pattern ( ($generated@@70 $generated@@84 $generated@@27))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@70 $generated@@85 $generated@@32) (and (= ($generated@@74 $generated@@26 ($generated@@35 $generated@@26 $generated@@85)) $generated@@85) ($generated@@25 $generated@@26 ($generated@@35 $generated@@26 $generated@@85) $generated@@32)))
 :pattern ( ($generated@@70 $generated@@85 $generated@@32))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@86 $generated@@32)  (and ($generated@@25 $generated@@26 $generated@@86 $generated@@27) (or (not (= $generated@@86 $generated@@28)) (not true))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@86 $generated@@32))
 :pattern ( ($generated@@25 $generated@@26 $generated@@86 $generated@@27))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 Int) ($generated@@90 T@U) ) (!  (and (=> (= $generated@@89 ($generated@@23 $generated@@88)) (= ($generated@@87 ($generated@@68 $generated@@88 $generated@@90) $generated@@89) $generated@@90)) (=> (or (not (= $generated@@89 ($generated@@23 $generated@@88))) (not true)) (= ($generated@@87 ($generated@@68 $generated@@88 $generated@@90) $generated@@89) ($generated@@87 $generated@@88 $generated@@89))))
 :pattern ( ($generated@@87 ($generated@@68 $generated@@88 $generated@@90) $generated@@89))
)))
(assert (= ($generated@@6 $generated@@91) 8))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@70 $generated@@92 $generated) (and (= ($generated@@74 $generated@@91 ($generated@@35 $generated@@91 $generated@@92)) $generated@@92) ($generated@@25 $generated@@91 ($generated@@35 $generated@@91 $generated@@92) $generated)))
 :pattern ( ($generated@@70 $generated@@92 $generated))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@70 ($generated@@74 $generated@@95 $generated@@93) $generated@@94) ($generated@@25 $generated@@95 $generated@@93 $generated@@94))
 :pattern ( ($generated@@70 ($generated@@74 $generated@@95 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (<= 0 ($generated@@23 $generated@@96))
 :pattern ( ($generated@@23 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@31 $generated@@67 $generated@@97 ($generated@@69 $generated@@98) $generated@@99) (forall (($generated@@100 Int) ) (!  (=> (and (<= 0 $generated@@100) (< $generated@@100 ($generated@@23 $generated@@97))) ($generated@@79 ($generated@@87 $generated@@97 $generated@@100) $generated@@98 $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@100))
)))
 :pattern ( ($generated@@31 $generated@@67 $generated@@97 ($generated@@69 $generated@@98) $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@101 ($generated@@69 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@69 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@22 ($generated@@69 $generated@@103)) $generated@@1)
 :pattern ( ($generated@@69 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@35 $generated@@105 ($generated@@74 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@74 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@108 Int) ) (!  (=> (or (and (<= 0 $generated@@108) (< $generated@@108 55296)) (and (<= 57344 $generated@@108) (< $generated@@108 1114112))) (= ($generated@@107 ($generated@@106 $generated@@108)) $generated@@108))
 :pattern ( ($generated@@106 $generated@@108))
)))
(assert  (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@109 $generated@@112 $generated@@113 $generated@@114 ($generated@@111 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@117 $generated@@118) $generated@@115)
 :weight 0
)) (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@109 $generated@@119 $generated@@120 $generated@@121 ($generated@@111 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@109 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@109 $generated@@128 $generated@@129 $generated@@130 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@109 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 Bool) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@11 ($generated@@109 $generated@@26 $generated@@37 $generated@@7 ($generated@@110 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))  (=> (and (or (not (= $generated@@141 $generated@@137)) (not true)) ($generated@@11 ($generated@@35 $generated@@7 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@138 $generated@@141) $generated@@139)))) $generated@@140))
 :pattern ( ($generated@@109 $generated@@26 $generated@@37 $generated@@7 ($generated@@110 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (and (= ($generated@@143 ($generated@@68 $generated@@145 $generated@@146)) $generated@@145) (= ($generated@@144 ($generated@@68 $generated@@145 $generated@@146)) $generated@@146))
 :pattern ( ($generated@@68 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> ($generated@@70 $generated@@147 ($generated@@69 $generated@@148)) (and (= ($generated@@74 $generated@@67 ($generated@@35 $generated@@67 $generated@@147)) $generated@@147) ($generated@@25 $generated@@67 ($generated@@35 $generated@@67 $generated@@147) ($generated@@69 $generated@@148))))
 :pattern ( ($generated@@70 $generated@@147 ($generated@@69 $generated@@148)))
)))
(assert (forall (($generated@@149 T@U) ) (!  (and (= ($generated@@106 ($generated@@107 $generated@@149)) $generated@@149) (or (and (<= 0 ($generated@@107 $generated@@149)) (< ($generated@@107 $generated@@149) 55296)) (and (<= 57344 ($generated@@107 $generated@@149)) (< ($generated@@107 $generated@@149) 1114112))))
 :pattern ( ($generated@@107 $generated@@149))
)))
(assert (= ($generated@@22 $generated@@27) $generated@@3))
(assert (= ($generated@@150 $generated@@27) $generated@@5))
(assert (= ($generated@@22 $generated@@32) $generated@@4))
(assert (= ($generated@@150 $generated@@32) $generated@@5))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Int) ) (! (= ($generated@@151 $generated@@152 $generated@@153 $generated@@154) (forall (($generated@@155 Int) ) (!  (=> (and (<= 0 $generated@@155) (< $generated@@155 $generated@@154)) (= ($generated@@87 $generated@@152 $generated@@155) ($generated@@87 $generated@@153 $generated@@155)))
 :pattern ( ($generated@@87 $generated@@152 $generated@@155))
 :pattern ( ($generated@@87 $generated@@153 $generated@@155))
)))
 :pattern ( ($generated@@151 $generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 Int) ) (! (= ($generated@@74 $generated@@8 ($generated@@12 ($generated@@62 $generated@@156))) ($generated@@64 $generated@@38 ($generated@@74 $generated@@8 ($generated@@12 $generated@@156))))
 :pattern ( ($generated@@74 $generated@@8 ($generated@@12 ($generated@@62 $generated@@156))))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@T) ) (! (= ($generated@@74 $generated@@158 ($generated@@64 $generated@@158 $generated@@157)) ($generated@@64 $generated@@38 ($generated@@74 $generated@@158 $generated@@157)))
 :pattern ( ($generated@@74 $generated@@158 ($generated@@64 $generated@@158 $generated@@157)))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> (= ($generated@@23 $generated@@159) 0) (= $generated@@159 $generated@@24))
 :pattern ( ($generated@@23 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! ($generated@@31 $generated@@91 $generated@@161 $generated $generated@@160)
 :pattern ( ($generated@@31 $generated@@91 $generated@@161 $generated $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@25 $generated@@67 $generated@@162 ($generated@@69 $generated@@163)) (forall (($generated@@164 Int) ) (!  (=> (and (<= 0 $generated@@164) (< $generated@@164 ($generated@@23 $generated@@162))) ($generated@@70 ($generated@@87 $generated@@162 $generated@@164) $generated@@163))
 :pattern ( ($generated@@87 $generated@@162 $generated@@164))
)))
 :pattern ( ($generated@@25 $generated@@67 $generated@@162 ($generated@@69 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ) (! ($generated@@25 $generated@@91 $generated@@165 $generated)
 :pattern ( ($generated@@25 $generated@@91 $generated@@165 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@173  (and (=> (= (ControlFlow 0 10) (- 0 11)) (< ($generated@@107 ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 1)))) ($generated@@107 ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 2)))))) (=> (= (ControlFlow 0 10) (- 0 9)) (<= ($generated@@107 ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 2)))) ($generated@@107 ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 3)))))))))
(let (($generated@@174  (=> (and (<= ($generated@@107 ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 2)))) ($generated@@107 ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 1))))) (= (ControlFlow 0 15) 10)) $generated@@173)))
(let (($generated@@175  (=> (< ($generated@@107 ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 1)))) ($generated@@107 ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 2))))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (and (<= 0 ($generated@@62 2)) (< ($generated@@62 2) ($generated@@23 $generated@@166)))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (and (<= 0 ($generated@@62 3)) (< ($generated@@62 3) ($generated@@23 $generated@@166)))) (=> (= (ControlFlow 0 12) 10) $generated@@173))))))
(let (($generated@@176  (and (=> (= (ControlFlow 0 16) (- 0 18)) (and (<= 0 ($generated@@62 1)) (< ($generated@@62 1) ($generated@@23 $generated@@166)))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (and (<= 0 ($generated@@62 2)) (< ($generated@@62 2) ($generated@@23 $generated@@166)))) (and (=> (= (ControlFlow 0 16) 12) $generated@@175) (=> (= (ControlFlow 0 16) 15) $generated@@174))))))
(let (($generated@@177  (and (=> (= (ControlFlow 0 6) (- 0 8)) (and (<= 0 ($generated@@62 0)) (< ($generated@@62 0) ($generated@@23 $generated@@166)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 ($generated@@62 5)) (< ($generated@@62 5) ($generated@@23 $generated@@166)))) (=> (= (ControlFlow 0 6) (- 0 5)) (<= ($generated@@107 ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 0)))) ($generated@@107 ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 5))))))))))
(let (($generated@@178  (and (=> (= (ControlFlow 0 19) 16) $generated@@176) (=> (= (ControlFlow 0 19) 6) $generated@@177))))
(let (($generated@@179  (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 ($generated@@62 9)) (< ($generated@@62 9) ($generated@@23 $generated@@166)))) (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 9))) ($generated@@64 $generated@@91 ($generated@@106 10)))))))
(let (($generated@@180  (=> (and (<= ($generated@@23 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 $generated@@24 ($generated@@74 $generated@@91 ($generated@@106 104))) ($generated@@74 $generated@@91 ($generated@@106 101))) ($generated@@74 $generated@@91 ($generated@@106 108))) ($generated@@74 $generated@@91 ($generated@@106 108))) ($generated@@74 $generated@@91 ($generated@@106 111))) ($generated@@74 $generated@@91 ($generated@@106 32))) ($generated@@74 $generated@@91 ($generated@@106 68))) ($generated@@74 $generated@@91 ($generated@@106 97))) ($generated@@74 $generated@@91 ($generated@@106 102))) ($generated@@74 $generated@@91 ($generated@@106 110))) ($generated@@74 $generated@@91 ($generated@@106 121)))) ($generated@@23 $generated@@166)) ($generated@@151 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 $generated@@24 ($generated@@74 $generated@@91 ($generated@@106 104))) ($generated@@74 $generated@@91 ($generated@@106 101))) ($generated@@74 $generated@@91 ($generated@@106 108))) ($generated@@74 $generated@@91 ($generated@@106 108))) ($generated@@74 $generated@@91 ($generated@@106 111))) ($generated@@74 $generated@@91 ($generated@@106 32))) ($generated@@74 $generated@@91 ($generated@@106 68))) ($generated@@74 $generated@@91 ($generated@@106 97))) ($generated@@74 $generated@@91 ($generated@@106 102))) ($generated@@74 $generated@@91 ($generated@@106 110))) ($generated@@74 $generated@@91 ($generated@@106 121))) $generated@@166 ($generated@@23 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 ($generated@@68 $generated@@24 ($generated@@74 $generated@@91 ($generated@@106 104))) ($generated@@74 $generated@@91 ($generated@@106 101))) ($generated@@74 $generated@@91 ($generated@@106 108))) ($generated@@74 $generated@@91 ($generated@@106 108))) ($generated@@74 $generated@@91 ($generated@@106 111))) ($generated@@74 $generated@@91 ($generated@@106 32))) ($generated@@74 $generated@@91 ($generated@@106 68))) ($generated@@74 $generated@@91 ($generated@@106 97))) ($generated@@74 $generated@@91 ($generated@@106 102))) ($generated@@74 $generated@@91 ($generated@@106 110))) ($generated@@74 $generated@@91 ($generated@@106 121)))))) (and (=> (= (ControlFlow 0 20) (- 0 24)) (and (<= 0 ($generated@@62 6)) (< ($generated@@62 6) ($generated@@23 $generated@@166)))) (and (=> (= (ControlFlow 0 20) (- 0 23)) (= ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 6))) ($generated@@64 $generated@@91 ($generated@@106 68)))) (=> (= ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 6))) ($generated@@64 $generated@@91 ($generated@@106 68))) (and (=> (= (ControlFlow 0 20) (- 0 22)) (and (<= 0 ($generated@@62 7)) (< ($generated@@62 7) ($generated@@23 $generated@@166)))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (= ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 7))) ($generated@@64 $generated@@91 ($generated@@106 97)))) (=> (= ($generated@@35 $generated@@91 ($generated@@87 $generated@@166 ($generated@@62 7))) ($generated@@64 $generated@@91 ($generated@@106 97))) (and (=> (= (ControlFlow 0 20) 3) $generated@@179) (=> (= (ControlFlow 0 20) 19) $generated@@178)))))))))))
(let (($generated@@181 true))
(let (($generated@@182  (=> (= $generated@@167 ($generated@@110 $generated@@28 $generated@@168 $generated@@2 false)) (and (=> (= (ControlFlow 0 25) 20) $generated@@180) (=> (= (ControlFlow 0 25) 1) $generated@@181)))))
(let (($generated@@183  (=> (and (and (and ($generated@@169 $generated@@168) ($generated@@170 $generated@@168)) (and (or (not (= $generated@@171 $generated@@28)) (not true)) (and ($generated@@25 $generated@@26 $generated@@171 $generated@@32) ($generated@@31 $generated@@26 $generated@@171 $generated@@32 $generated@@168)))) (and (and ($generated@@25 $generated@@67 $generated@@166 ($generated@@69 $generated)) ($generated@@31 $generated@@67 $generated@@166 ($generated@@69 $generated) $generated@@168)) (and (= 0 $generated@@172) (= (ControlFlow 0 26) 25)))) $generated@@182)))
$generated@@183))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
