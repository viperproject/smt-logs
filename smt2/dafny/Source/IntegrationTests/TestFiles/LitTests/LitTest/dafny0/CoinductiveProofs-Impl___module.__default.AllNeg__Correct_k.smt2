(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U Int) Bool)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U Int) Bool)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (Int) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@85 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@89 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@149 (T@T T@U T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@24 T@U) ($generated@@25 Int) ($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@23 $generated@@26 $generated@@27) (=> ($generated@@21 $generated@@24 $generated@@26 $generated@@25) ($generated@@21 $generated@@24 $generated@@27 $generated@@25)))
 :pattern ( ($generated@@21 $generated@@24 $generated@@26 $generated@@25) ($generated@@22 $generated@@26 $generated@@28) ($generated@@22 $generated@@27 $generated@@28))
))))
(assert (= ($generated@@29 $generated) $generated@@1))
(assert (= ($generated@@29 $generated@@0) $generated@@2))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@31 $generated@@32)) ($generated@@23 $generated@@30 $generated@@32))
 :pattern ( ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@31 $generated@@32))
 :pattern ( ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@30 $generated@@32))
)))
(assert (= ($generated@@4 $generated@@35) 3))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 Int) ) (!  (=> (or ($generated@@36 ($generated@@34 $generated@@35 $generated@@42) $generated@@43) (< 1 $generated@@20)) (and (and (=> (< 0 ($generated@@37 $generated@@42)) (=> (or (not (= $generated@@43 ($generated@@38 0))) (not true)) ($generated@@36 ($generated@@39 $generated@@42 ($generated@@40 1)) (+ $generated@@43 1)))) (=> (=> (< 0 ($generated@@37 $generated@@42)) (or (= $generated@@43 ($generated@@38 0)) ($generated@@21 ($generated@@33 $generated@@41) ($generated@@39 $generated@@42 ($generated@@40 1)) (+ $generated@@43 1)))) (=> (= ($generated@@38 0) ($generated@@37 $generated@@42)) (forall (($generated@@44 T@U) ) (!  (=> ($generated@@22 $generated@@44 $generated@@42) ($generated@@36 $generated@@44 $generated@@43))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@41) $generated@@44 $generated@@43))
))))) (= ($generated@@21 ($generated@@33 $generated@@41) ($generated@@34 $generated@@35 $generated@@42) $generated@@43)  (and (=> (< 0 ($generated@@37 $generated@@42)) (or (= $generated@@43 ($generated@@38 0)) ($generated@@21 ($generated@@33 $generated@@41) ($generated@@39 $generated@@42 ($generated@@40 1)) (+ $generated@@43 1)))) (=> (= ($generated@@38 0) ($generated@@37 $generated@@42)) (exists (($generated@@45 T@U) ) (!  (and ($generated@@22 $generated@@45 $generated@@42) ($generated@@21 ($generated@@33 $generated@@41) $generated@@45 $generated@@43))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@41) $generated@@45 $generated@@43))
)))))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@33 $generated@@41) ($generated@@34 $generated@@35 $generated@@42) $generated@@43))
))))
(assert (forall (($generated@@46 T@U) ($generated@@47 Int) ($generated@@48 Int) ) (!  (=> (and (and (<= 0 $generated@@47) (<= 0 $generated@@48)) (<= (+ $generated@@47 $generated@@48) ($generated@@37 $generated@@46))) (= ($generated@@39 ($generated@@39 $generated@@46 ($generated@@40 $generated@@47)) ($generated@@40 $generated@@48)) ($generated@@39 $generated@@46 ($generated@@40 (+ $generated@@47 $generated@@48)))))
 :pattern ( ($generated@@39 ($generated@@39 $generated@@46 ($generated@@40 $generated@@47)) ($generated@@40 $generated@@48)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@49 T@U) ($generated@@50 Int) ($generated@@51 T@U) ) (!  (=> (= $generated@@51 ($generated@@40 0)) (not ($generated@@21 $generated@@49 $generated@@51 $generated@@50)))
 :pattern ( ($generated@@21 $generated@@49 $generated@@51 $generated@@50))
))))
(assert (forall (($generated@@52 Int) ) (! (= ($generated@@38 $generated@@52) $generated@@52)
 :pattern ( ($generated@@38 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@34 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@34 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 ($generated@@55 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@55 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 Int) ) (! (= ($generated@@21 ($generated@@33 $generated@@59) $generated@@60 $generated@@61) ($generated@@21 $generated@@59 $generated@@60 $generated@@61))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@59) $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and ($generated@@62 $generated@@64) (<= ($generated@@37 $generated@@64) ($generated@@37 $generated@@63))) (and (= ($generated@@62 ($generated@@39 $generated@@63 $generated@@64)) ($generated@@62 $generated@@63)) (= ($generated@@37 ($generated@@39 $generated@@63 $generated@@64)) (- ($generated@@37 $generated@@63) ($generated@@37 $generated@@64)))))
 :pattern ( ($generated@@39 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@65 Int) ) (!  (=> (<= 0 $generated@@65) (and ($generated@@62 ($generated@@40 $generated@@65)) (= ($generated@@37 ($generated@@40 $generated@@65)) $generated@@65)))
 :pattern ( ($generated@@40 $generated@@65))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 Int) ) (!  (=> (or ($generated@@36 ($generated@@34 $generated@@35 $generated@@67) ($generated@@38 $generated@@68)) (< 1 $generated@@20)) (and (and (=> (< 0 ($generated@@37 $generated@@67)) (=> (or (not (= ($generated@@38 $generated@@68) ($generated@@38 0))) (not true)) ($generated@@36 ($generated@@39 $generated@@67 ($generated@@40 1)) ($generated@@38 (+ $generated@@68 1))))) (=> (=> (< 0 ($generated@@37 $generated@@67)) (or (= ($generated@@38 $generated@@68) ($generated@@38 0)) ($generated@@21 ($generated@@33 $generated@@66) ($generated@@39 $generated@@67 ($generated@@40 1)) ($generated@@38 (+ $generated@@68 1))))) (=> (= ($generated@@38 0) ($generated@@37 $generated@@67)) (forall (($generated@@69 T@U) ) (!  (=> ($generated@@22 $generated@@69 $generated@@67) ($generated@@36 $generated@@69 $generated@@68))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@66) $generated@@69 $generated@@68))
))))) (= ($generated@@21 ($generated@@33 $generated@@66) ($generated@@34 $generated@@35 $generated@@67) ($generated@@38 $generated@@68))  (and (=> (< 0 ($generated@@37 $generated@@67)) (or (= ($generated@@38 $generated@@68) ($generated@@38 0)) ($generated@@21 ($generated@@33 $generated@@66) ($generated@@39 $generated@@67 ($generated@@40 1)) ($generated@@38 (+ $generated@@68 1))))) (=> (= ($generated@@38 0) ($generated@@37 $generated@@67)) (exists (($generated@@70 T@U) ) (!  (and ($generated@@22 $generated@@70 $generated@@67) ($generated@@21 ($generated@@33 $generated@@66) $generated@@70 $generated@@68))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@66) $generated@@70 $generated@@68))
)))))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@33 $generated@@66) ($generated@@34 $generated@@35 $generated@@67) ($generated@@38 $generated@@68)))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (or (or ($generated@@23 $generated@@71 $generated@@72) (= $generated@@71 $generated@@72)) ($generated@@23 $generated@@72 $generated@@71))
 :pattern ( ($generated@@23 $generated@@71 $generated@@72) ($generated@@23 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@22 $generated@@73 $generated@@74) ($generated@@23 $generated@@73 $generated@@74))
 :pattern ( ($generated@@22 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ) (! (<= 0 ($generated@@37 $generated@@75))
 :pattern ( ($generated@@37 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@55 $generated@@77 ($generated@@56 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@56 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (and (and (and (=> ($generated@@23 $generated@@78 $generated@@79) (or (not (= $generated@@78 $generated@@79)) (not true))) (=> (and ($generated@@62 $generated@@78) (not ($generated@@62 $generated@@79))) ($generated@@23 $generated@@78 $generated@@79))) (=> (and ($generated@@62 $generated@@78) ($generated@@62 $generated@@79)) (= ($generated@@23 $generated@@78 $generated@@79) (< ($generated@@37 $generated@@78) ($generated@@37 $generated@@79))))) (=> (and ($generated@@23 $generated@@78 $generated@@79) ($generated@@62 $generated@@79)) ($generated@@62 $generated@@78)))
 :pattern ( ($generated@@23 $generated@@78 $generated@@79))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 Int) ) (!  (=> (or ($generated@@36 $generated@@81 $generated@@82) (< 1 $generated@@20)) (and (and (=> (< 0 ($generated@@37 $generated@@81)) (=> (or (not (= $generated@@82 ($generated@@38 0))) (not true)) ($generated@@36 ($generated@@39 $generated@@81 ($generated@@40 1)) (+ $generated@@82 1)))) (=> (=> (< 0 ($generated@@37 $generated@@81)) (or (= $generated@@82 ($generated@@38 0)) ($generated@@21 $generated@@80 ($generated@@39 $generated@@81 ($generated@@40 1)) (+ $generated@@82 1)))) (=> (= ($generated@@38 0) ($generated@@37 $generated@@81)) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@22 $generated@@83 $generated@@81) ($generated@@36 $generated@@83 $generated@@82))
 :pattern ( ($generated@@21 $generated@@80 $generated@@83 $generated@@82))
))))) (= ($generated@@21 ($generated@@33 $generated@@80) $generated@@81 $generated@@82)  (and (=> (< 0 ($generated@@37 $generated@@81)) (or (= $generated@@82 ($generated@@38 0)) ($generated@@21 $generated@@80 ($generated@@39 $generated@@81 ($generated@@40 1)) (+ $generated@@82 1)))) (=> (= ($generated@@38 0) ($generated@@37 $generated@@81)) (exists (($generated@@84 T@U) ) (!  (and ($generated@@22 $generated@@84 $generated@@81) ($generated@@21 $generated@@80 $generated@@84 $generated@@82))
 :pattern ( ($generated@@21 $generated@@80 $generated@@84 $generated@@82))
)))))))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@80) $generated@@81 $generated@@82))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@85 $generated@@95 $generated@@96 $generated@@97 ($generated@@91 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@100 $generated@@101 $generated@@98) $generated@@100 $generated@@101) $generated@@98)
 :weight 0
)) (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@107 $generated@@109) (= ($generated@@85 $generated@@102 $generated@@103 $generated@@104 ($generated@@91 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@109 $generated@@110) ($generated@@85 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@109 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@85 $generated@@111 $generated@@112 $generated@@113 ($generated@@91 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@85 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)))) (= ($generated@@4 $generated@@86) 4)) (= ($generated@@4 $generated@@87) 5)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@89 $generated@@120 $generated@@121 ($generated@@92 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@122) $generated@@124) $generated@@122)
 :weight 0
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 $generated@@125 $generated@@126 ($generated@@92 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@125 $generated@@126 $generated@@128 $generated@@130)))
 :weight 0
))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ) (= ($generated@@4 ($generated@@90 $generated@@131 $generated@@132)) 6))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@133 $generated@@134)) $generated@@133)
 :pattern ( ($generated@@90 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@135 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@90 $generated@@135 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 Bool) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@9 ($generated@@85 $generated@@86 $generated@@87 $generated@@5 ($generated@@88 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))  (=> (and (or (not (= $generated@@141 $generated@@137)) (not true)) ($generated@@9 ($generated@@55 $generated@@5 ($generated@@89 $generated@@87 $generated@@35 ($generated@@89 $generated@@86 ($generated@@90 $generated@@87 $generated@@35) $generated@@138 $generated@@141) $generated@@139)))) $generated@@140))
 :pattern ( ($generated@@85 $generated@@86 $generated@@87 $generated@@5 ($generated@@88 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@62 $generated@@143) (= $generated@@143 ($generated@@40 ($generated@@37 $generated@@143))))
 :pattern ( ($generated@@37 $generated@@143))
 :pattern ( ($generated@@62 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and ($generated@@62 $generated@@145) (<= ($generated@@37 $generated@@145) ($generated@@37 $generated@@144))) (or (and (= $generated@@145 ($generated@@40 0)) (= ($generated@@39 $generated@@144 $generated@@145) $generated@@144)) (and (or (not (= $generated@@145 ($generated@@40 0))) (not true)) ($generated@@23 ($generated@@39 $generated@@144 $generated@@145) $generated@@144))))
 :pattern ( ($generated@@39 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 Int) ) (! (= ($generated@@56 $generated@@6 ($generated@@10 ($generated@@38 $generated@@146))) ($generated@@34 $generated@@35 ($generated@@56 $generated@@6 ($generated@@10 $generated@@146))))
 :pattern ( ($generated@@56 $generated@@6 ($generated@@10 ($generated@@38 $generated@@146))))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@56 $generated@@148 ($generated@@34 $generated@@148 $generated@@147)) ($generated@@34 $generated@@35 ($generated@@56 $generated@@148 $generated@@147)))
 :pattern ( ($generated@@56 $generated@@148 ($generated@@34 $generated@@148 $generated@@147)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! ($generated@@149 $generated@@6 $generated@@151 $generated $generated@@150)
 :pattern ( ($generated@@149 $generated@@6 $generated@@151 $generated $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! ($generated@@149 $generated@@35 $generated@@153 $generated@@0 $generated@@152)
 :pattern ( ($generated@@149 $generated@@35 $generated@@153 $generated@@0 $generated@@152))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@169 true))
(let (($generated@@170  (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@154 ($generated@@38 0)))))
(let (($generated@@171  (=> (=> ($generated@@23 $generated@@155 $generated@@156) ($generated@@36 $generated@@155 $generated@@154)) (and (=> (= (ControlFlow 0 12) (- 0 17)) (exists (($generated@@172 T@U) )  (and ($generated@@23 $generated@@172 $generated@@156) ($generated@@21 ($generated@@33 $generated@@157) $generated@@172 $generated@@154)))) (=> (exists (($generated@@173 T@U) )  (and ($generated@@23 $generated@@173 $generated@@156) ($generated@@21 ($generated@@33 $generated@@157) $generated@@173 $generated@@154))) (=> (and ($generated@@23 $generated@@158 $generated@@156) ($generated@@21 ($generated@@33 $generated@@157) $generated@@158 $generated@@154)) (and (=> (= (ControlFlow 0 12) (- 0 16)) (or (or (<= 0 $generated@@154) ($generated@@23 $generated@@158 $generated@@156)) (= $generated@@154 $generated@@154))) (=> (or (or (<= 0 $generated@@154) ($generated@@23 $generated@@158 $generated@@156)) (= $generated@@154 $generated@@154)) (and (=> (= (ControlFlow 0 12) (- 0 15)) (or ($generated@@23 $generated@@158 $generated@@156) (and (= $generated@@158 $generated@@156) (< $generated@@154 $generated@@154)))) (=> (or ($generated@@23 $generated@@158 $generated@@156) (and (= $generated@@158 $generated@@156) (< $generated@@154 $generated@@154))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (=> ($generated@@36 $generated@@158 $generated@@154) (or ($generated@@21 ($generated@@33 $generated@@157) $generated@@158 $generated@@154) (=> (< 0 ($generated@@37 $generated@@158)) (or (= $generated@@154 ($generated@@38 0)) ($generated@@21 ($generated@@33 ($generated@@33 $generated@@157)) ($generated@@39 $generated@@158 ($generated@@40 1)) (+ $generated@@154 1))))))) (=> (=> ($generated@@36 $generated@@158 $generated@@154) (or ($generated@@21 ($generated@@33 $generated@@157) $generated@@158 $generated@@154) (=> (< 0 ($generated@@37 $generated@@158)) (or (= $generated@@154 ($generated@@38 0)) ($generated@@21 ($generated@@33 ($generated@@33 $generated@@157)) ($generated@@39 $generated@@158 ($generated@@40 1)) (+ $generated@@154 1)))))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (=> ($generated@@36 $generated@@158 $generated@@154) (or ($generated@@21 ($generated@@33 $generated@@157) $generated@@158 $generated@@154) (=> (= ($generated@@38 0) ($generated@@37 $generated@@158)) (exists (($generated@@174 T@U) ) (!  (and ($generated@@22 $generated@@174 $generated@@158) ($generated@@21 ($generated@@33 $generated@@157) $generated@@174 $generated@@154))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@157) $generated@@174 $generated@@154))
)))))) (=> (=> ($generated@@36 $generated@@158 $generated@@154) (or ($generated@@21 ($generated@@33 $generated@@157) $generated@@158 $generated@@154) (=> (= ($generated@@38 0) ($generated@@37 $generated@@158)) (exists (($generated@@175 T@U) ) (!  (and ($generated@@22 $generated@@175 $generated@@158) ($generated@@21 ($generated@@33 $generated@@157) $generated@@175 $generated@@154))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@157) $generated@@175 $generated@@154))
))))) (=> (and (and (and ($generated@@159 $generated@@160) ($generated@@161 $generated@@160)) (<= $generated@@154 ($generated@@38 0))) (and (= $generated@@162 $generated@@160) (= (ControlFlow 0 12) 2))) $generated@@170)))))))))))))))
(let (($generated@@176  (=> (and (not ($generated@@23 $generated@@155 $generated@@156)) (= (ControlFlow 0 19) 12)) $generated@@171)))
(let (($generated@@177  (=> ($generated@@23 $generated@@155 $generated@@156) (=> (and (and ($generated@@149 $generated@@35 $generated@@155 $generated@@0 $generated@@162) ($generated@@149 $generated@@6 ($generated@@10 $generated@@154) $generated $generated@@162)) (and ($generated@@36 $generated@@155 $generated@@154) (= (ControlFlow 0 18) 12))) $generated@@171))))
(let (($generated@@178  (and (=> (= (ControlFlow 0 20) 18) $generated@@177) (=> (= (ControlFlow 0 20) 19) $generated@@176))))
(let (($generated@@179  (=> (= ($generated@@37 $generated@@156) ($generated@@38 0)) (and (=> (= (ControlFlow 0 21) 20) $generated@@178) (=> (= (ControlFlow 0 21) 11) $generated@@169)))))
(let (($generated@@180  (=> (or (not (= ($generated@@37 $generated@@156) ($generated@@38 0))) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 10)) ($generated@@62 ($generated@@34 $generated@@35 ($generated@@40 1)))) (=> ($generated@@62 ($generated@@34 $generated@@35 ($generated@@40 1))) (and (=> (= (ControlFlow 0 4) (- 0 9)) (<= ($generated@@37 ($generated@@34 $generated@@35 ($generated@@40 1))) ($generated@@37 $generated@@156))) (=> (<= ($generated@@37 ($generated@@34 $generated@@35 ($generated@@40 1))) ($generated@@37 $generated@@156)) (=> (and (= $generated@@163 ($generated@@39 $generated@@156 ($generated@@40 1))) (= $generated@@164 (+ $generated@@154 1))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (or (or (<= 0 $generated@@154) ($generated@@23 $generated@@163 $generated@@156)) (= $generated@@164 $generated@@154))) (=> (or (or (<= 0 $generated@@154) ($generated@@23 $generated@@163 $generated@@156)) (= $generated@@164 $generated@@154)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or ($generated@@23 $generated@@163 $generated@@156) (and (= $generated@@163 $generated@@156) (< $generated@@164 $generated@@154)))) (=> (or ($generated@@23 $generated@@163 $generated@@156) (and (= $generated@@163 $generated@@156) (< $generated@@164 $generated@@154))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> ($generated@@36 $generated@@163 $generated@@164) (or ($generated@@21 ($generated@@33 $generated@@157) $generated@@163 $generated@@164) (=> (< 0 ($generated@@37 $generated@@163)) (or (= $generated@@164 ($generated@@38 0)) ($generated@@21 ($generated@@33 ($generated@@33 $generated@@157)) ($generated@@39 $generated@@163 ($generated@@40 1)) (+ $generated@@164 1))))))) (=> (=> ($generated@@36 $generated@@163 $generated@@164) (or ($generated@@21 ($generated@@33 $generated@@157) $generated@@163 $generated@@164) (=> (< 0 ($generated@@37 $generated@@163)) (or (= $generated@@164 ($generated@@38 0)) ($generated@@21 ($generated@@33 ($generated@@33 $generated@@157)) ($generated@@39 $generated@@163 ($generated@@40 1)) (+ $generated@@164 1)))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@36 $generated@@163 $generated@@164) (or ($generated@@21 ($generated@@33 $generated@@157) $generated@@163 $generated@@164) (=> (= ($generated@@38 0) ($generated@@37 $generated@@163)) (exists (($generated@@181 T@U) ) (!  (and ($generated@@22 $generated@@181 $generated@@163) ($generated@@21 ($generated@@33 $generated@@157) $generated@@181 $generated@@164))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@157) $generated@@181 $generated@@164))
)))))) (=> (=> ($generated@@36 $generated@@163 $generated@@164) (or ($generated@@21 ($generated@@33 $generated@@157) $generated@@163 $generated@@164) (=> (= ($generated@@38 0) ($generated@@37 $generated@@163)) (exists (($generated@@182 T@U) ) (!  (and ($generated@@22 $generated@@182 $generated@@163) ($generated@@21 ($generated@@33 $generated@@157) $generated@@182 $generated@@164))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@157) $generated@@182 $generated@@164))
))))) (=> (and (and (and ($generated@@159 $generated@@165) ($generated@@161 $generated@@165)) (<= $generated@@164 ($generated@@38 0))) (and (= $generated@@162 $generated@@165) (= (ControlFlow 0 4) 2))) $generated@@170)))))))))))))))))
(let (($generated@@183  (=> (or (not (= $generated@@154 ($generated@@38 0))) (not true)) (and (=> (= (ControlFlow 0 22) 21) $generated@@179) (=> (= (ControlFlow 0 22) 4) $generated@@180)))))
(let (($generated@@184  (=> (and (= $generated@@154 ($generated@@38 0)) (= (ControlFlow 0 3) 2)) $generated@@170)))
(let (($generated@@185  (=> (= $generated@@166 ($generated@@88 $generated@@167 $generated@@168 $generated@@3 false)) (=> (and (and ($generated@@159 $generated@@162) ($generated@@161 $generated@@162)) (and (= $generated@@168 $generated@@162) (forall (($generated@@186 T@U) ($generated@@187 Int) ) (!  (=> (and ($generated@@21 ($generated@@33 $generated@@157) $generated@@186 $generated@@187) (or ($generated@@23 $generated@@186 $generated@@156) (and (= $generated@@186 $generated@@156) (and (<= 0 $generated@@187) (< $generated@@187 $generated@@154))))) (<= $generated@@187 ($generated@@38 0)))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@157) $generated@@186 $generated@@187))
)))) (and (=> (= (ControlFlow 0 23) 3) $generated@@184) (=> (= (ControlFlow 0 23) 22) $generated@@183))))))
(let (($generated@@188  (=> (and (and (and ($generated@@159 $generated@@168) ($generated@@161 $generated@@168)) (= 2 $generated@@20)) (and (and ($generated@@36 $generated@@156 $generated@@154) (and ($generated@@21 ($generated@@33 $generated@@157) $generated@@156 $generated@@154) (and (=> (< 0 ($generated@@37 $generated@@156)) (or (= $generated@@154 ($generated@@38 0)) ($generated@@21 ($generated@@33 $generated@@157) ($generated@@39 $generated@@156 ($generated@@40 1)) (+ $generated@@154 1)))) (=> (= ($generated@@38 0) ($generated@@37 $generated@@156)) (exists (($generated@@189 T@U) ) (!  (and ($generated@@22 $generated@@189 $generated@@156) ($generated@@21 ($generated@@33 $generated@@157) $generated@@189 $generated@@154))
 :pattern ( ($generated@@21 ($generated@@33 $generated@@157) $generated@@189 $generated@@154))
)))))) (= (ControlFlow 0 24) 23))) $generated@@185)))
$generated@@188)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
