(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U T@U T@U Bool) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U T@U Bool) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@51 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@110 (T@U) Int)
(declare-fun $generated@@111 (T@U) Int)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@124 (T@T T@T) T@T)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@128 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert  (and (= ($generated@@6 $generated@@27) 3) (= ($generated@@6 $generated@@33) 4)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (or ($generated@@28 $generated@@36 ($generated@@26 $generated@@27 $generated@@38) ($generated@@26 $generated@@27 $generated@@39) ($generated@@11 ($generated@@26 $generated@@7 $generated@@40))) (and (< 1 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@38 ($generated@@30 $generated@@36)) ($generated@@29 $generated@@27 $generated@@39 ($generated@@30 $generated@@36))))) (and (=> (not ($generated@@11 ($generated@@26 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@26 $generated@@27 $generated@@38)))))) (let (($generated@@41 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@38)))))
($generated@@28 $generated@@36 ($generated@@26 $generated@@27 $generated@@39) $generated@@41  (not ($generated@@11 ($generated@@26 $generated@@7 $generated@@40)))))) (= ($generated@@24 $generated@@36 ($generated@@25 $generated@@37) ($generated@@26 $generated@@27 $generated@@38) ($generated@@26 $generated@@27 $generated@@39) ($generated@@11 ($generated@@26 $generated@@7 $generated@@40))) (ite ($generated@@31 ($generated@@26 $generated@@27 $generated@@38)) $generated@@39 (let (($generated@@42 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@38)))))
(let (($generated@@43 ($generated@@26 $generated@@33 ($generated@@34 ($generated@@26 $generated@@27 $generated@@38)))))
($generated@@35 $generated@@43 ($generated@@24 $generated@@36 ($generated@@25 $generated@@37) ($generated@@26 $generated@@27 $generated@@39) $generated@@42  (not ($generated@@11 ($generated@@26 $generated@@7 $generated@@40)))))))))))
 :weight 3
 :pattern ( ($generated@@24 $generated@@36 ($generated@@25 $generated@@37) ($generated@@26 $generated@@27 $generated@@38) ($generated@@26 $generated@@27 $generated@@39) ($generated@@11 ($generated@@26 $generated@@7 $generated@@40))))
))))
(assert (= ($generated@@44 $generated@@45) $generated@@3))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 Bool) ) (!  (=> (or ($generated@@28 $generated@@46 $generated@@48 $generated@@49 $generated@@50) (and (< 1 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@48 ($generated@@30 $generated@@46)) ($generated@@29 $generated@@27 $generated@@49 ($generated@@30 $generated@@46))))) ($generated@@29 $generated@@27 ($generated@@24 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50) ($generated@@30 $generated@@46)))
 :pattern ( ($generated@@24 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50))
))))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> ($generated@@52 $generated@@54) ($generated@@51 $generated@@27 $generated@@45 ($generated@@30 $generated@@53) $generated@@54))
 :pattern ( ($generated@@51 $generated@@27 $generated@@45 ($generated@@30 $generated@@53) $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ) (! ($generated@@29 $generated@@27 $generated@@45 ($generated@@30 $generated@@55))
 :pattern ( ($generated@@29 $generated@@27 $generated@@45 ($generated@@30 $generated@@55)))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@26 $generated@@57 $generated@@56) $generated@@56)
 :pattern ( ($generated@@26 $generated@@57 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@29 $generated@@27 ($generated@@35 $generated@@60 $generated@@61) ($generated@@30 $generated@@59))  (and ($generated@@58 $generated@@60 $generated@@59) ($generated@@29 $generated@@27 $generated@@61 ($generated@@30 $generated@@59))))
 :pattern ( ($generated@@29 $generated@@27 ($generated@@35 $generated@@60 $generated@@61) ($generated@@30 $generated@@59)))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@31 $generated@@62) (= ($generated@@44 $generated@@62) $generated@@3))
 :pattern ( ($generated@@31 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 $generated@@64) (= ($generated@@44 $generated@@64) $generated@@4))
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 ($generated@@65 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@65 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@63 $generated@@69) (exists (($generated@@70 T@U) ($generated@@71 T@U) ) (= $generated@@69 ($generated@@35 $generated@@70 $generated@@71))))
 :pattern ( ($generated@@63 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@31 $generated@@72) (= $generated@@72 $generated@@45))
 :pattern ( ($generated@@31 $generated@@72))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 Bool) ) (!  (=> (and (or ($generated@@28 $generated@@74 $generated@@76 $generated@@77 $generated@@78) (and (< 1 $generated@@23) (and (and ($generated@@29 $generated@@27 $generated@@76 ($generated@@30 $generated@@74)) ($generated@@51 $generated@@27 $generated@@76 ($generated@@30 $generated@@74) $generated@@73)) (and ($generated@@29 $generated@@27 $generated@@77 ($generated@@30 $generated@@74)) ($generated@@51 $generated@@27 $generated@@77 ($generated@@30 $generated@@74) $generated@@73))))) ($generated@@52 $generated@@73)) ($generated@@51 $generated@@27 ($generated@@24 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78) ($generated@@30 $generated@@74) $generated@@73))
 :pattern ( ($generated@@51 $generated@@27 ($generated@@24 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78) ($generated@@30 $generated@@74) $generated@@73))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@79 ($generated@@66 $generated@@83 $generated@@80) $generated@@81 $generated@@82) ($generated@@51 $generated@@83 $generated@@80 $generated@@81 $generated@@82))
 :pattern ( ($generated@@79 ($generated@@66 $generated@@83 $generated@@80) $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (!  (and (= ($generated@@22 ($generated@@30 $generated@@85)) $generated@@2) (= ($generated@@84 ($generated@@30 $generated@@85)) $generated@@5))
 :pattern ( ($generated@@30 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@29 $generated@@27 $generated@@87 ($generated@@30 $generated@@86)) (or ($generated@@31 $generated@@87) ($generated@@63 $generated@@87)))
 :pattern ( ($generated@@63 $generated@@87) ($generated@@29 $generated@@27 $generated@@87 ($generated@@30 $generated@@86)))
 :pattern ( ($generated@@31 $generated@@87) ($generated@@29 $generated@@27 $generated@@87 ($generated@@30 $generated@@86)))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@58 $generated@@88 $generated) (and (= ($generated@@66 $generated@@7 ($generated@@65 $generated@@7 $generated@@88)) $generated@@88) ($generated@@29 $generated@@7 ($generated@@65 $generated@@7 $generated@@88) $generated)))
 :pattern ( ($generated@@58 $generated@@88 $generated))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@58 ($generated@@66 $generated@@91 $generated@@89) $generated@@90) ($generated@@29 $generated@@91 $generated@@89 $generated@@90))
 :pattern ( ($generated@@58 ($generated@@66 $generated@@91 $generated@@89) $generated@@90))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 Bool) ) (!  (=> (or ($generated@@28 $generated@@92 $generated@@94 $generated@@95 $generated@@96) (and (< 1 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@94 ($generated@@30 $generated@@92)) ($generated@@29 $generated@@27 $generated@@95 ($generated@@30 $generated@@92))))) (and (=> (not ($generated@@31 $generated@@94)) (let (($generated@@97 ($generated@@32 $generated@@94)))
($generated@@28 $generated@@92 $generated@@95 $generated@@97  (not $generated@@96)))) (= ($generated@@24 $generated@@92 ($generated@@25 $generated@@93) $generated@@94 $generated@@95 $generated@@96) (ite ($generated@@31 $generated@@94) $generated@@95 (let (($generated@@98 ($generated@@32 $generated@@94)))
(let (($generated@@99 ($generated@@34 $generated@@94)))
($generated@@35 $generated@@99 ($generated@@24 $generated@@92 $generated@@93 $generated@@95 $generated@@98  (not $generated@@96)))))))))
 :pattern ( ($generated@@24 $generated@@92 ($generated@@25 $generated@@93) $generated@@94 $generated@@95 $generated@@96))
))))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@44 ($generated@@35 $generated@@100 $generated@@101)) $generated@@4)
 :pattern ( ($generated@@35 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@34 ($generated@@35 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@35 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@32 ($generated@@35 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@35 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 ($generated@@30 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@30 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@65 $generated@@109 ($generated@@66 $generated@@109 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@66 $generated@@109 $generated@@108))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (< ($generated@@110 $generated@@112) ($generated@@111 ($generated@@35 $generated@@112 $generated@@113)))
 :pattern ( ($generated@@35 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (< ($generated@@111 $generated@@115) ($generated@@111 ($generated@@35 $generated@@114 $generated@@115)))
 :pattern ( ($generated@@35 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and ($generated@@52 $generated@@118) (and ($generated@@63 $generated@@116) ($generated@@51 $generated@@27 $generated@@116 ($generated@@30 $generated@@117) $generated@@118))) ($generated@@79 ($generated@@34 $generated@@116) $generated@@117 $generated@@118))
 :pattern ( ($generated@@79 ($generated@@34 $generated@@116) $generated@@117 $generated@@118))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@119 $generated@@129 $generated@@130 $generated@@131 ($generated@@125 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@134 $generated@@135) $generated@@132)
 :weight 0
)) (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@119 $generated@@136 $generated@@137 $generated@@138 ($generated@@125 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@119 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@119 $generated@@145 $generated@@146 $generated@@147 ($generated@@125 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@119 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)))) (= ($generated@@6 $generated@@120) 5)) (= ($generated@@6 $generated@@121) 6)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@123 $generated@@154 $generated@@155 ($generated@@126 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@156) $generated@@158) $generated@@156)
 :weight 0
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@163 $generated@@164) (= ($generated@@123 $generated@@159 $generated@@160 ($generated@@126 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@164) ($generated@@123 $generated@@159 $generated@@160 $generated@@162 $generated@@164)))
 :weight 0
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@6 ($generated@@124 $generated@@165 $generated@@166)) 7))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@127 ($generated@@124 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@124 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@128 ($generated@@124 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@124 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@11 ($generated@@119 $generated@@120 $generated@@121 $generated@@7 ($generated@@122 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@11 ($generated@@65 $generated@@7 ($generated@@123 $generated@@121 $generated@@33 ($generated@@123 $generated@@120 ($generated@@124 $generated@@121 $generated@@33) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121 $generated@@7 ($generated@@122 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@110 ($generated@@66 $generated@@27 $generated@@177)) ($generated@@111 $generated@@177))
 :pattern ( ($generated@@110 ($generated@@66 $generated@@27 $generated@@177)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@58 $generated@@179 ($generated@@30 $generated@@178)) (and (= ($generated@@66 $generated@@27 ($generated@@65 $generated@@27 $generated@@179)) $generated@@179) ($generated@@29 $generated@@27 ($generated@@65 $generated@@27 $generated@@179) ($generated@@30 $generated@@178))))
 :pattern ( ($generated@@58 $generated@@179 ($generated@@30 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and ($generated@@52 $generated@@182) (and ($generated@@63 $generated@@180) ($generated@@51 $generated@@27 $generated@@180 ($generated@@30 $generated@@181) $generated@@182))) ($generated@@51 $generated@@27 ($generated@@32 $generated@@180) ($generated@@30 $generated@@181) $generated@@182))
 :pattern ( ($generated@@51 $generated@@27 ($generated@@32 $generated@@180) ($generated@@30 $generated@@181) $generated@@182))
)))
(assert (= $generated@@45 ($generated@@26 $generated@@27 $generated@@45)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@35 ($generated@@26 $generated@@33 $generated@@183) ($generated@@26 $generated@@27 $generated@@184)) ($generated@@26 $generated@@27 ($generated@@35 $generated@@183 $generated@@184)))
 :pattern ( ($generated@@35 ($generated@@26 $generated@@33 $generated@@183) ($generated@@26 $generated@@27 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ) (! (= ($generated@@24 $generated@@185 ($generated@@25 $generated@@186) $generated@@187 $generated@@188 $generated@@189) ($generated@@24 $generated@@185 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
 :pattern ( ($generated@@24 $generated@@185 ($generated@@25 $generated@@186) $generated@@187 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@T) ) (! (= ($generated@@66 $generated@@191 ($generated@@26 $generated@@191 $generated@@190)) ($generated@@26 $generated@@33 ($generated@@66 $generated@@191 $generated@@190)))
 :pattern ( ($generated@@66 $generated@@191 ($generated@@26 $generated@@191 $generated@@190)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! ($generated@@51 $generated@@7 $generated@@193 $generated $generated@@192)
 :pattern ( ($generated@@51 $generated@@7 $generated@@193 $generated $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@52 $generated@@197) (= ($generated@@51 $generated@@27 ($generated@@35 $generated@@195 $generated@@196) ($generated@@30 $generated@@194) $generated@@197)  (and ($generated@@79 $generated@@195 $generated@@194 $generated@@197) ($generated@@51 $generated@@27 $generated@@196 ($generated@@30 $generated@@194) $generated@@197))))
 :pattern ( ($generated@@51 $generated@@27 ($generated@@35 $generated@@195 $generated@@196) ($generated@@30 $generated@@194) $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ) (! ($generated@@29 $generated@@7 $generated@@198 $generated)
 :pattern ( ($generated@@29 $generated@@7 $generated@@198 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () Bool)
(declare-fun $generated@@210 () Bool)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@214 true))
(let (($generated@@215  (=> (and (= $generated@@199 ($generated@@35 $generated@@200 $generated@@201)) ($generated@@58 $generated@@200 $generated@@202)) (=> (and (and ($generated@@29 $generated@@27 $generated@@201 ($generated@@30 $generated@@202)) (= $generated@@203 $generated@@201)) (and ($generated@@29 $generated@@27 $generated@@203 ($generated@@30 $generated@@202)) (= $generated@@204 $generated@@203))) (=> (and (and (and (= $generated@@205 $generated@@200) ($generated@@58 $generated@@205 $generated@@202)) (and (= $generated@@206 $generated@@205) ($generated@@51 $generated@@27 $generated@@207 ($generated@@30 $generated@@202) $generated@@208))) (and (and ($generated@@51 $generated@@27 $generated@@204 ($generated@@30 $generated@@202) $generated@@208) (= $generated@@209  (not $generated@@210))) (and ($generated@@51 $generated@@7 ($generated@@10 $generated@@209) $generated $generated@@208) (= (ControlFlow 0 4) (- 0 3))))) (or (< ($generated@@111 (ite $generated@@209 $generated@@207 $generated@@204)) ($generated@@111 (ite $generated@@210 $generated@@199 $generated@@207))) (and (= ($generated@@111 (ite $generated@@209 $generated@@207 $generated@@204)) ($generated@@111 (ite $generated@@210 $generated@@199 $generated@@207))) (< ($generated@@111 (ite $generated@@209 $generated@@204 $generated@@207)) ($generated@@111 (ite $generated@@210 $generated@@207 $generated@@199))))))))))
(let (($generated@@216  (=> (or (not (= $generated@@199 $generated@@45)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@215) (=> (= (ControlFlow 0 6) 5) $generated@@214)))))
(let (($generated@@217 true))
(let (($generated@@218 true))
(let (($generated@@219  (=> (not $generated@@210) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@218) (=> (= (ControlFlow 0 8) 2) $generated@@217)) (=> (= (ControlFlow 0 8) 6) $generated@@216)))))
(let (($generated@@220  (=> $generated@@210 (and (and (=> (= (ControlFlow 0 7) 1) $generated@@218) (=> (= (ControlFlow 0 7) 2) $generated@@217)) (=> (= (ControlFlow 0 7) 6) $generated@@216)))))
(let (($generated@@221  (=> (not $generated@@210) (and (=> (= (ControlFlow 0 10) 7) $generated@@220) (=> (= (ControlFlow 0 10) 8) $generated@@219)))))
(let (($generated@@222  (=> $generated@@210 (and (=> (= (ControlFlow 0 9) 7) $generated@@220) (=> (= (ControlFlow 0 9) 8) $generated@@219)))))
(let (($generated@@223  (=> (= $generated@@211 ($generated@@122 $generated@@212 $generated@@208 $generated@@1 false)) (and (=> (= (ControlFlow 0 11) 9) $generated@@222) (=> (= (ControlFlow 0 11) 10) $generated@@221)))))
(let (($generated@@224  (=> (and ($generated@@52 $generated@@208) ($generated@@213 $generated@@208)) (=> (and (and ($generated@@29 $generated@@27 $generated@@199 ($generated@@30 $generated@@202)) ($generated@@29 $generated@@27 $generated@@207 ($generated@@30 $generated@@202))) (and (= 1 $generated@@23) (= (ControlFlow 0 12) 11))) $generated@@223))))
$generated@@224))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
