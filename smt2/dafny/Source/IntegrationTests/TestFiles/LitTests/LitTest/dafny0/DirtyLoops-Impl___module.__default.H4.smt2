(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 (T@U T@U) T@U)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@85 (Int) Int)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@90 (Int) T@U)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@120 (T@U T@U) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@138 (T@U) Int)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@189 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated@@1) 0))
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (= ($generated@@29 $generated@@1) $generated@@2))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and (or (not (= $generated@@36 $generated@@32)) (not true)) (= ($generated@@33 $generated@@36) ($generated@@31 $generated@@35))) ($generated@@34 $generated@@13 ($generated@@17 ($generated@@30 $generated@@36)) $generated))
 :pattern ( ($generated@@30 $generated@@36) ($generated@@31 $generated@@35))
)))
(assert (= ($generated@@11 $generated@@38) 3))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@41 ($generated@@39 $generated@@40) $generated@@42) ($generated@@37 $generated@@38 $generated@@41 ($generated@@31 $generated@@40) $generated@@42))
 :pattern ( ($generated@@37 $generated@@38 $generated@@41 ($generated@@39 $generated@@40) $generated@@42))
 :pattern ( ($generated@@37 $generated@@38 $generated@@41 ($generated@@31 $generated@@40) $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@34 $generated@@38 $generated@@44 $generated@@43)  (or (= $generated@@44 $generated@@32) (= ($generated@@33 $generated@@44) $generated@@43)))
 :pattern ( ($generated@@34 $generated@@38 $generated@@44 $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@46 $generated@@45 $generated@@47) ($generated@@37 $generated@@38 $generated@@46 $generated@@43 $generated@@47))
 :pattern ( ($generated@@37 $generated@@38 $generated@@46 $generated@@45 $generated@@47))
 :pattern ( ($generated@@37 $generated@@38 $generated@@46 $generated@@43 $generated@@47))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@49 $generated@@56 $generated@@57 ($generated@@53 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@60) $generated@@58)
 :weight 0
)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (= $generated@@65 $generated@@66) (= ($generated@@49 $generated@@61 $generated@@62 ($generated@@53 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@66) ($generated@@49 $generated@@61 $generated@@62 $generated@@64 $generated@@66)))
 :weight 0
))) (= ($generated@@11 $generated@@50) 4)) (= ($generated@@11 $generated@@51) 5)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (= ($generated@@11 ($generated@@52 $generated@@67 $generated@@68)) 6))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@54 ($generated@@52 $generated@@69 $generated@@70)) $generated@@69)
 :pattern ( ($generated@@52 $generated@@69 $generated@@70))
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@52 $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@74 ($generated@@31 $generated@@73) $generated@@75)  (or (= $generated@@74 $generated@@32) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@75 $generated@@74) $generated@@1)))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@74 ($generated@@31 $generated@@73) $generated@@75))
)))
(assert (= ($generated@@27 $generated@@76) 0))
(assert (= ($generated@@77 $generated@@7 $generated@@10) $generated@@76))
(assert  (not ($generated@@78 $generated@@76)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@79 $generated@@43 $generated@@80)  (or (= $generated@@79 $generated@@32) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@80 $generated@@79) $generated@@1)))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@79 $generated@@43 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@81 $generated@@82 $generated@@83) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@82 $generated@@84) $generated@@1))) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@83 $generated@@84) $generated@@1))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@83 $generated@@84) $generated@@1))
)))
 :pattern ( ($generated@@81 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 Int) ) (! (= ($generated@@85 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 $generated@@88) $generated@@88)
 :pattern ( ($generated@@87 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 Int) ) (!  (=> (and (and (and ($generated@@91 $generated@@94) (and (or (not (= $generated@@95 $generated@@32)) (not true)) (= ($generated@@33 $generated@@95) ($generated@@31 $generated@@93)))) (and (<= 0 $generated@@96) (< $generated@@96 ($generated@@30 $generated@@95)))) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@94 $generated@@95) $generated@@1)))) ($generated@@92 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@94 $generated@@95) ($generated@@90 $generated@@96)) $generated@@93 $generated@@94))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@94 $generated@@95) ($generated@@90 $generated@@96)) ($generated@@31 $generated@@93))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 ($generated@@48 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@48 $generated@@99 $generated@@98))
)))
(assert ($generated@@78 $generated@@1))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (and (and ($generated@@91 $generated@@100) (and (or (not (= $generated@@101 $generated@@32)) (not true)) (= ($generated@@33 $generated@@101) $generated@@43))) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@100 $generated@@101) $generated@@1)))) ($generated@@37 $generated@@13 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@100 $generated@@101) $generated@@76)) $generated $generated@@100))
 :pattern ( ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@100 $generated@@101) $generated@@76)))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@34 $generated@@38 $generated@@103 ($generated@@39 $generated@@102))  (and ($generated@@34 $generated@@38 $generated@@103 ($generated@@31 $generated@@102)) (or (not (= $generated@@103 $generated@@32)) (not true))))
 :pattern ( ($generated@@34 $generated@@38 $generated@@103 ($generated@@39 $generated@@102)))
 :pattern ( ($generated@@34 $generated@@38 $generated@@103 ($generated@@31 $generated@@102)))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@92 ($generated@@97 $generated@@107 $generated@@104) $generated@@105 $generated@@106) ($generated@@37 $generated@@107 $generated@@104 $generated@@105 $generated@@106))
 :pattern ( ($generated@@92 ($generated@@97 $generated@@107 $generated@@104) $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> ($generated@@81 $generated@@108 $generated@@109) (=> ($generated@@92 $generated@@110 $generated@@111 $generated@@108) ($generated@@92 $generated@@110 $generated@@111 $generated@@109)))
 :pattern ( ($generated@@81 $generated@@108 $generated@@109) ($generated@@92 $generated@@110 $generated@@111 $generated@@108))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (!  (=> ($generated@@81 $generated@@112 $generated@@113) (=> ($generated@@37 $generated@@116 $generated@@114 $generated@@115 $generated@@112) ($generated@@37 $generated@@116 $generated@@114 $generated@@115 $generated@@113)))
 :pattern ( ($generated@@81 $generated@@112 $generated@@113) ($generated@@37 $generated@@116 $generated@@114 $generated@@115 $generated@@112))
)))
(assert (forall (($generated@@118 T@U) ) (!  (and (= ($generated@@28 ($generated@@31 $generated@@118)) $generated@@3) (= ($generated@@117 ($generated@@31 $generated@@118)) $generated@@8))
 :pattern ( ($generated@@31 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (!  (and (= ($generated@@28 ($generated@@39 $generated@@119)) $generated@@4) (= ($generated@@117 ($generated@@39 $generated@@119)) $generated@@8))
 :pattern ( ($generated@@39 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@120 $generated@@121 $generated@@45) (and (= ($generated@@97 $generated@@38 ($generated@@48 $generated@@38 $generated@@121)) $generated@@121) ($generated@@34 $generated@@38 ($generated@@48 $generated@@38 $generated@@121) $generated@@45)))
 :pattern ( ($generated@@120 $generated@@121 $generated@@45))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@120 $generated@@122 $generated@@43) (and (= ($generated@@97 $generated@@38 ($generated@@48 $generated@@38 $generated@@122)) $generated@@122) ($generated@@34 $generated@@38 ($generated@@48 $generated@@38 $generated@@122) $generated@@43)))
 :pattern ( ($generated@@120 $generated@@122 $generated@@43))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@34 $generated@@38 $generated@@124 ($generated@@31 $generated@@123))  (or (= $generated@@124 $generated@@32) (= ($generated@@33 $generated@@124) ($generated@@31 $generated@@123))))
 :pattern ( ($generated@@34 $generated@@38 $generated@@124 ($generated@@31 $generated@@123)))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@34 $generated@@38 $generated@@125 $generated@@45)  (and ($generated@@34 $generated@@38 $generated@@125 $generated@@43) (or (not (= $generated@@125 $generated@@32)) (not true))))
 :pattern ( ($generated@@34 $generated@@38 $generated@@125 $generated@@45))
 :pattern ( ($generated@@34 $generated@@38 $generated@@125 $generated@@43))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (or (not (= $generated@@126 $generated@@128)) (not true)) (=> (and ($generated@@81 $generated@@126 $generated@@127) ($generated@@81 $generated@@127 $generated@@128)) ($generated@@81 $generated@@126 $generated@@128)))
 :pattern ( ($generated@@81 $generated@@126 $generated@@127) ($generated@@81 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (and (= ($generated@@129 ($generated@@77 $generated@@130 $generated@@131)) $generated@@130) (= ($generated@@29 ($generated@@77 $generated@@130 $generated@@131)) $generated@@131))
 :pattern ( ($generated@@77 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@120 $generated@@132 $generated) (and (= ($generated@@97 $generated@@13 ($generated@@48 $generated@@13 $generated@@132)) $generated@@132) ($generated@@34 $generated@@13 ($generated@@48 $generated@@13 $generated@@132) $generated)))
 :pattern ( ($generated@@120 $generated@@132 $generated))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@120 ($generated@@97 $generated@@135 $generated@@133) $generated@@134) ($generated@@34 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@120 ($generated@@97 $generated@@135 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (<= 0 ($generated@@30 $generated@@136))
 :pattern ( ($generated@@30 $generated@@136))
)))
(assert (forall (($generated@@137 Int) ) (! (= ($generated@@27 ($generated@@90 $generated@@137)) 1)
 :pattern ( ($generated@@90 $generated@@137))
)))
(assert (forall (($generated@@139 Int) ) (! (= ($generated@@138 ($generated@@90 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@90 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@140 ($generated@@31 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@31 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@39 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@39 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@48 $generated@@145 ($generated@@97 $generated@@145 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@97 $generated@@145 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and ($generated@@91 $generated@@147) (and (or (not (= $generated@@148 $generated@@32)) (not true)) (= ($generated@@33 $generated@@148) ($generated@@31 $generated@@146)))) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@147 $generated@@148) $generated@@1)))) ($generated@@37 $generated@@13 ($generated@@17 ($generated@@30 $generated@@148)) $generated $generated@@147))
 :pattern ( ($generated@@30 $generated@@148) ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@147 $generated@@148) $generated@@1)) ($generated@@31 $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (and ($generated@@91 $generated@@150) (and (or (not (= $generated@@151 $generated@@32)) (not true)) (= ($generated@@33 $generated@@151) ($generated@@31 $generated@@149)))) (and (<= 0 $generated@@152) (< $generated@@152 ($generated@@30 $generated@@151)))) ($generated@@120 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@150 $generated@@151) ($generated@@90 $generated@@152)) $generated@@149))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@150 $generated@@151) ($generated@@90 $generated@@152)) ($generated@@31 $generated@@149))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and ($generated@@91 $generated@@153) (and (or (not (= $generated@@154 $generated@@32)) (not true)) (= ($generated@@33 $generated@@154) $generated@@43))) ($generated@@34 $generated@@13 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@153 $generated@@154) $generated@@76)) $generated))
 :pattern ( ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@153 $generated@@154) $generated@@76)))
)))
(assert  (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@155 $generated@@158 $generated@@159 $generated@@160 ($generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@163 $generated@@164) $generated@@161)
 :weight 0
)) (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@155 $generated@@165 $generated@@166 $generated@@167 ($generated@@157 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@155 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@155 $generated@@174 $generated@@175 $generated@@176 ($generated@@157 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@155 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 Bool) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@16 ($generated@@155 $generated@@38 $generated@@50 $generated@@12 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))  (=> (and (or (not (= $generated@@187 $generated@@183)) (not true)) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@184 $generated@@187) $generated@@185)))) $generated@@186))
 :pattern ( ($generated@@155 $generated@@38 $generated@@50 $generated@@12 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 Int) ($generated@@191 Int) ) (! (= ($generated@@189 $generated@@190 $generated@@191) (mod $generated@@190 $generated@@191))
 :pattern ( ($generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> ($generated@@120 $generated@@193 ($generated@@31 $generated@@192)) (and (= ($generated@@97 $generated@@38 ($generated@@48 $generated@@38 $generated@@193)) $generated@@193) ($generated@@34 $generated@@38 ($generated@@48 $generated@@38 $generated@@193) ($generated@@31 $generated@@192))))
 :pattern ( ($generated@@120 $generated@@193 ($generated@@31 $generated@@192)))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> ($generated@@120 $generated@@195 ($generated@@39 $generated@@194)) (and (= ($generated@@97 $generated@@38 ($generated@@48 $generated@@38 $generated@@195)) $generated@@195) ($generated@@34 $generated@@38 ($generated@@48 $generated@@38 $generated@@195) ($generated@@39 $generated@@194))))
 :pattern ( ($generated@@120 $generated@@195 ($generated@@39 $generated@@194)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@91 ($generated@@53 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@196 $generated@@197 ($generated@@53 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@196 $generated@@197) $generated@@198 $generated@@199))) ($generated@@81 $generated@@196 ($generated@@53 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@196 $generated@@197 ($generated@@53 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@196 $generated@@197) $generated@@198 $generated@@199))))
 :pattern ( ($generated@@53 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@196 $generated@@197 ($generated@@53 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@196 $generated@@197) $generated@@198 $generated@@199)))
)))
(assert (= ($generated@@28 $generated@@45) $generated@@5))
(assert (= ($generated@@117 $generated@@45) $generated@@9))
(assert (= ($generated@@28 $generated@@43) $generated@@6))
(assert (= ($generated@@117 $generated@@43) $generated@@9))
(assert (forall (($generated@@200 Int) ) (! (= ($generated@@97 $generated@@13 ($generated@@17 ($generated@@85 $generated@@200))) ($generated@@87 $generated@@51 ($generated@@97 $generated@@13 ($generated@@17 $generated@@200))))
 :pattern ( ($generated@@97 $generated@@13 ($generated@@17 ($generated@@85 $generated@@200))))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@T) ) (! (= ($generated@@97 $generated@@202 ($generated@@87 $generated@@202 $generated@@201)) ($generated@@87 $generated@@51 ($generated@@97 $generated@@202 $generated@@201)))
 :pattern ( ($generated@@97 $generated@@202 ($generated@@87 $generated@@202 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! ($generated@@37 $generated@@13 $generated@@204 $generated $generated@@203)
 :pattern ( ($generated@@37 $generated@@13 $generated@@204 $generated $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! ($generated@@34 $generated@@13 $generated@@205 $generated)
 :pattern ( ($generated@@34 $generated@@13 $generated@@205 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@206 () Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 (T@U) Bool)
(declare-fun $generated@@212 () Bool)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () Bool)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () Bool)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@226  (=> (<= 7 $generated@@206) (and (=> (= (ControlFlow 0 9) (- 0 12)) true) (and (=> (= (ControlFlow 0 9) (- 0 11)) (or (not (= $generated@@207 $generated@@32)) (not true))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (= ($generated@@18 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@208 $generated@@207) $generated@@76))) ($generated@@85 12))) (=> (= ($generated@@18 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@208 $generated@@207) $generated@@76))) ($generated@@85 12)) (=> (= (ControlFlow 0 9) (- 0 8)) true))))))))
(let (($generated@@227  (=> (=> true (and ($generated@@34 $generated@@38 $generated@@209 $generated@@45) ($generated@@37 $generated@@38 $generated@@209 $generated@@45 $generated@@210))) (=> (and (and (and ($generated@@91 $generated@@210) ($generated@@211 $generated@@210)) (= (ControlFlow 0 7) (- 0 6))) false) (= ($generated@@189 ($generated@@18 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@210 $generated@@209) $generated@@76))) ($generated@@85 2)) ($generated@@85 0))))))
(let (($generated@@228  (=> (and (< $generated@@206 7) (= (ControlFlow 0 13) 7)) $generated@@227)))
(let (($generated@@229  (and (=> (= (ControlFlow 0 14) 9) $generated@@226) (=> (= (ControlFlow 0 14) 13) $generated@@228))))
(let (($generated@@230  (=> $generated@@212 (and (=> (= (ControlFlow 0 15) 14) $generated@@229) (=> (= (ControlFlow 0 15) 7) $generated@@227)))))
(let (($generated@@231  (=> (not $generated@@212) (and (=> (= (ControlFlow 0 3) (- 0 5)) true) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= $generated@@207 $generated@@32)) (not true))) (=> (= (ControlFlow 0 3) (- 0 2)) (or (not (= ($generated@@85 2) 0)) (not true))))))))
(let (($generated@@232  (and (=> (= (ControlFlow 0 16) 3) $generated@@231) (=> (= (ControlFlow 0 16) 15) $generated@@230))))
(let (($generated@@233 true))
(let (($generated@@234  (=> (=> true (and ($generated@@34 $generated@@38 $generated@@207 $generated@@45) ($generated@@37 $generated@@38 $generated@@207 $generated@@45 $generated@@208))) (=> (and ($generated@@91 $generated@@208) ($generated@@211 $generated@@208)) (=> (and (and (and (and (and true (not false)) (= $generated@@213 12)) (= $generated@@214 7)) (=> $generated@@212 (= ($generated@@189 ($generated@@18 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@208 $generated@@207) $generated@@76))) ($generated@@85 2)) ($generated@@85 0)))) (and (and (forall (($generated@@235 T@U) ) (!  (=> (and (or (not (= $generated@@235 $generated@@32)) (not true)) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@215 $generated@@235) $generated@@1)))) (= ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@208 $generated@@235) ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@216 $generated@@235)))
 :pattern ( ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@208 $generated@@235))
)) ($generated@@81 $generated@@216 $generated@@208)) (and (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (or (not (= $generated@@236 $generated@@32)) (not true)) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@216 $generated@@236) $generated@@1)))) (or (= ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@208 $generated@@236) $generated@@237) ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@216 $generated@@236) $generated@@237)) ($generated@@16 ($generated@@155 $generated@@38 $generated@@50 $generated@@12 $generated@@217 $generated@@236 $generated@@237))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@208 $generated@@236) $generated@@237))
)) (<= (- 7 $generated@@206) $generated@@214)))) (and (=> (= (ControlFlow 0 17) 1) $generated@@233) (=> (= (ControlFlow 0 17) 16) $generated@@232)))))))
(let (($generated@@238  (=> (and (and (and (= $generated@@217 ($generated@@156 $generated@@32 $generated@@215 $generated@@1 false)) (= $generated@@218 ($generated@@85 0))) (and (or (not (= $generated@@219 $generated@@32)) (not true)) ($generated@@34 $generated@@38 $generated@@219 $generated@@43))) (and (and (not ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@215 $generated@@219) $generated@@1)))) (= $generated@@220 ($generated@@53 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@215 $generated@@219 ($generated@@53 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@215 $generated@@219) $generated@@1 ($generated@@97 $generated@@12 ($generated@@15 true)))))) (and ($generated@@91 $generated@@220) ($generated@@211 $generated@@220)))) (and (=> (= (ControlFlow 0 18) (- 0 22)) true) (and (=> (= (ControlFlow 0 18) (- 0 21)) (or (not (= $generated@@219 $generated@@32)) (not true))) (=> (or (not (= $generated@@219 $generated@@32)) (not true)) (and (=> (= (ControlFlow 0 18) (- 0 20)) ($generated@@16 ($generated@@155 $generated@@38 $generated@@50 $generated@@12 $generated@@217 $generated@@219 $generated@@76))) (=> ($generated@@16 ($generated@@155 $generated@@38 $generated@@50 $generated@@12 $generated@@217 $generated@@219 $generated@@76)) (=> (and (and (= $generated@@213 ($generated@@85 12)) (= $generated@@216 ($generated@@53 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@220 $generated@@219 ($generated@@53 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@220 $generated@@219) $generated@@76 ($generated@@97 $generated@@13 ($generated@@17 $generated@@213)))))) (and ($generated@@91 $generated@@216) (= $generated@@214 (- 7 $generated@@218)))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> $generated@@221 (= ($generated@@189 ($generated@@18 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@216 $generated@@219) $generated@@76))) ($generated@@85 2)) ($generated@@85 0)))) (=> (=> $generated@@221 (= ($generated@@189 ($generated@@18 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@216 $generated@@219) $generated@@76))) ($generated@@85 2)) ($generated@@85 0))) (=> (= (ControlFlow 0 18) 17) $generated@@234))))))))))))
(let (($generated@@239  (=> (and ($generated@@91 $generated@@215) ($generated@@211 $generated@@215)) (=> (and (and (and ($generated@@34 $generated@@38 $generated@@222 ($generated@@39 $generated)) ($generated@@37 $generated@@38 $generated@@222 ($generated@@39 $generated) $generated@@215)) (=> $generated@@223 (and ($generated@@34 $generated@@38 $generated@@224 $generated@@45) ($generated@@37 $generated@@38 $generated@@224 $generated@@45 $generated@@215)))) (and (and (= 1 $generated@@225) (= ($generated@@30 $generated@@222) ($generated@@85 10))) (and (= ($generated@@18 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@38 ($generated@@52 $generated@@50 $generated@@51) $generated@@215 $generated@@222) ($generated@@90 ($generated@@85 0))))) ($generated@@85 8)) (= (ControlFlow 0 23) 18)))) $generated@@238))))
$generated@@239))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 9) (- 10))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
