(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U T@U Int) Bool)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U Int) Bool)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (Int Int) Int)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@33 (T@U T@U T@U) Bool)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (Int) T@U)
(declare-fun $generated@@46 (T@U) Int)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@56 (Int) Int)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@U T@U Int) Bool)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@T T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@139 (T@T T@T) T@T)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated) $generated@@1))
(assert (= ($generated@@20 $generated@@0) $generated@@2))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 Int) ) (!  (=> (or ($generated@@24 $generated@@31 $generated@@32) (and (< 1 $generated@@21) ($generated@@25 $generated@@31 $generated@@26))) (and (=> (<= 20 (+ ($generated@@27 100 ($generated@@28 $generated@@31)) ($generated@@29 $generated@@31))) ($generated@@24 $generated@@31 (+ $generated@@32 1))) (= ($generated@@22 ($generated@@23 $generated@@30) $generated@@31 $generated@@32)  (or (< (+ ($generated@@27 100 ($generated@@28 $generated@@31)) ($generated@@29 $generated@@31)) 20) ($generated@@22 $generated@@30 $generated@@31 (+ $generated@@32 1))))))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@30) $generated@@31 $generated@@32))
))))
(assert  (=> (< 0 $generated@@21) (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (and (and ($generated@@34 $generated@@36) ($generated@@25 $generated@@37 $generated@@26)) ($generated@@33 $generated@@37 $generated@@26 $generated@@36)) ($generated@@35 $generated@@6 ($generated@@10 ($generated@@28 $generated@@37)) $generated@@0 $generated@@36))
 :pattern ( ($generated@@28 $generated@@37) ($generated@@33 $generated@@37 $generated@@26 $generated@@36))
))))
(assert  (=> (< 0 $generated@@21) (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (and (and ($generated@@34 $generated@@38) ($generated@@25 $generated@@39 $generated@@26)) ($generated@@33 $generated@@39 $generated@@26 $generated@@38)) ($generated@@35 $generated@@6 ($generated@@10 ($generated@@29 $generated@@39)) $generated@@0 $generated@@38))
 :pattern ( ($generated@@29 $generated@@39) ($generated@@33 $generated@@39 $generated@@26 $generated@@38))
))))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (and ($generated@@40 $generated@@41 $generated@@42) ($generated@@40 $generated@@42 $generated@@43)) ($generated@@40 $generated@@41 $generated@@43))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42) ($generated@@40 $generated@@42 $generated@@43))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42) ($generated@@40 $generated@@41 $generated@@43))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 Int) ($generated@@49 Int) ) (!  (=> (and (and (<= 0 $generated@@48) (<= 0 $generated@@49)) (<= (+ $generated@@48 $generated@@49) ($generated@@46 $generated@@47))) (= ($generated@@44 ($generated@@44 $generated@@47 ($generated@@45 $generated@@48)) ($generated@@45 $generated@@49)) ($generated@@44 $generated@@47 ($generated@@45 (+ $generated@@48 $generated@@49)))))
 :pattern ( ($generated@@44 ($generated@@44 $generated@@47 ($generated@@45 $generated@@48)) ($generated@@45 $generated@@49)))
)))
(assert ($generated@@50 $generated@@26))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 Int) ) (!  (=> (and ($generated@@25 $generated@@53 $generated@@26) (exists (($generated@@55 T@U) ) (! ($generated@@51 ($generated@@23 $generated@@52) $generated@@53 $generated@@55 $generated@@54)
 :pattern ( ($generated@@51 ($generated@@23 $generated@@52) $generated@@53 $generated@@55 $generated@@54))
))) ($generated@@22 ($generated@@23 $generated@@52) $generated@@53 $generated@@54))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@52) $generated@@53 $generated@@54))
))))
(assert (forall (($generated@@57 Int) ) (! (= ($generated@@56 $generated@@57) $generated@@57)
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 $generated@@59) $generated@@59)
 :pattern ( ($generated@@58 $generated@@60 $generated@@59))
)))
(assert (= ($generated@@4 $generated@@61) 3))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 Int) ) (!  (=> (or ($generated@@62 ($generated@@58 $generated@@61 $generated@@65) ($generated@@58 $generated@@61 $generated@@66) ($generated@@56 $generated@@67)) (and (< 2 $generated@@21) ($generated@@25 $generated@@65 $generated@@26))) (and (and (=> (< 0 ($generated@@46 $generated@@66)) (=> (<= 20 (+ ($generated@@27 100 ($generated@@28 ($generated@@58 $generated@@61 $generated@@65))) ($generated@@29 ($generated@@58 $generated@@61 $generated@@65)))) ($generated@@62 ($generated@@58 $generated@@61 $generated@@65) ($generated@@44 $generated@@66 ($generated@@45 1)) ($generated@@56 (+ $generated@@67 1))))) (=> (=> (< 0 ($generated@@46 $generated@@66)) (or (< (+ ($generated@@27 100 ($generated@@28 ($generated@@58 $generated@@61 $generated@@65))) ($generated@@29 ($generated@@58 $generated@@61 $generated@@65))) 20) ($generated@@51 ($generated@@23 $generated@@64) ($generated@@58 $generated@@61 $generated@@65) ($generated@@44 $generated@@66 ($generated@@45 1)) ($generated@@56 (+ $generated@@67 1))))) (=> (= ($generated@@56 0) ($generated@@46 $generated@@66)) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@63 $generated@@68 $generated@@66) ($generated@@62 $generated@@65 $generated@@68 $generated@@67))
 :pattern ( ($generated@@51 ($generated@@23 $generated@@64) $generated@@65 $generated@@68 $generated@@67))
))))) (= ($generated@@51 ($generated@@23 $generated@@64) ($generated@@58 $generated@@61 $generated@@65) ($generated@@58 $generated@@61 $generated@@66) ($generated@@56 $generated@@67))  (and (=> (< 0 ($generated@@46 $generated@@66)) (or (< (+ ($generated@@27 100 ($generated@@28 ($generated@@58 $generated@@61 $generated@@65))) ($generated@@29 ($generated@@58 $generated@@61 $generated@@65))) 20) ($generated@@51 ($generated@@23 $generated@@64) ($generated@@58 $generated@@61 $generated@@65) ($generated@@44 $generated@@66 ($generated@@45 1)) ($generated@@56 (+ $generated@@67 1))))) (=> (= ($generated@@56 0) ($generated@@46 $generated@@66)) (exists (($generated@@69 T@U) ) (!  (and ($generated@@63 $generated@@69 $generated@@66) ($generated@@51 ($generated@@23 $generated@@64) $generated@@65 $generated@@69 $generated@@67))
 :pattern ( ($generated@@51 ($generated@@23 $generated@@64) $generated@@65 $generated@@69 $generated@@67))
)))))))
 :weight 3
 :pattern ( ($generated@@51 ($generated@@23 $generated@@64) ($generated@@58 $generated@@61 $generated@@65) ($generated@@58 $generated@@61 $generated@@66) ($generated@@56 $generated@@67)))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 ($generated@@70 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@70 $generated@@73 $generated@@72))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 Int) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> ($generated@@40 $generated@@77 $generated@@78) (=> ($generated@@51 $generated@@74 $generated@@75 $generated@@77 $generated@@76) ($generated@@51 $generated@@74 $generated@@75 $generated@@78 $generated@@76)))
 :pattern ( ($generated@@51 $generated@@74 $generated@@75 $generated@@77 $generated@@76) ($generated@@63 $generated@@77 $generated@@79) ($generated@@63 $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@29 $generated@@80) ($generated@@56 25))
 :pattern ( ($generated@@29 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 Int) ) (! (= ($generated@@22 ($generated@@23 $generated@@81) $generated@@82 $generated@@83) ($generated@@22 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@33 ($generated@@71 $generated@@87 $generated@@84) $generated@@85 $generated@@86) ($generated@@35 $generated@@87 $generated@@84 $generated@@85 $generated@@86))
 :pattern ( ($generated@@33 ($generated@@71 $generated@@87 $generated@@84) $generated@@85 $generated@@86))
)))
(assert  (=> (< 0 $generated@@21) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@25 $generated@@89 $generated@@26) ($generated@@88 $generated@@6 ($generated@@10 ($generated@@28 $generated@@89)) $generated@@0))
 :pattern ( ($generated@@28 $generated@@89))
))))
(assert  (=> (< 0 $generated@@21) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@25 $generated@@90 $generated@@26) ($generated@@88 $generated@@6 ($generated@@10 ($generated@@29 $generated@@90)) $generated@@0))
 :pattern ( ($generated@@29 $generated@@90))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (and ($generated@@91 $generated@@93) (<= ($generated@@46 $generated@@93) ($generated@@46 $generated@@92))) (and (= ($generated@@91 ($generated@@44 $generated@@92 $generated@@93)) ($generated@@91 $generated@@92)) (= ($generated@@46 ($generated@@44 $generated@@92 $generated@@93)) (- ($generated@@46 $generated@@92) ($generated@@46 $generated@@93)))))
 :pattern ( ($generated@@44 $generated@@92 $generated@@93))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 Int) ) (!  (=> (or ($generated@@62 $generated@@95 ($generated@@58 $generated@@61 $generated@@96) $generated@@97) (and (< 2 $generated@@21) ($generated@@25 $generated@@95 $generated@@26))) (and (and (=> (< 0 ($generated@@46 $generated@@96)) (=> (<= 20 (+ ($generated@@27 100 ($generated@@28 $generated@@95)) ($generated@@29 $generated@@95))) ($generated@@62 $generated@@95 ($generated@@44 $generated@@96 ($generated@@45 1)) (+ $generated@@97 1)))) (=> (=> (< 0 ($generated@@46 $generated@@96)) (or (< (+ ($generated@@27 100 ($generated@@28 $generated@@95)) ($generated@@29 $generated@@95)) 20) ($generated@@51 ($generated@@23 $generated@@94) $generated@@95 ($generated@@44 $generated@@96 ($generated@@45 1)) (+ $generated@@97 1)))) (=> (= ($generated@@56 0) ($generated@@46 $generated@@96)) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@63 $generated@@98 $generated@@96) ($generated@@62 $generated@@95 $generated@@98 $generated@@97))
 :pattern ( ($generated@@51 ($generated@@23 $generated@@94) $generated@@95 $generated@@98 $generated@@97))
))))) (= ($generated@@51 ($generated@@23 $generated@@94) $generated@@95 ($generated@@58 $generated@@61 $generated@@96) $generated@@97)  (and (=> (< 0 ($generated@@46 $generated@@96)) (or (< (+ ($generated@@27 100 ($generated@@28 $generated@@95)) ($generated@@29 $generated@@95)) 20) ($generated@@51 ($generated@@23 $generated@@94) $generated@@95 ($generated@@44 $generated@@96 ($generated@@45 1)) (+ $generated@@97 1)))) (=> (= ($generated@@56 0) ($generated@@46 $generated@@96)) (exists (($generated@@99 T@U) ) (!  (and ($generated@@63 $generated@@99 $generated@@96) ($generated@@51 ($generated@@23 $generated@@94) $generated@@95 $generated@@99 $generated@@97))
 :pattern ( ($generated@@51 ($generated@@23 $generated@@94) $generated@@95 $generated@@99 $generated@@97))
)))))))
 :weight 3
 :pattern ( ($generated@@51 ($generated@@23 $generated@@94) $generated@@95 ($generated@@58 $generated@@61 $generated@@96) $generated@@97))
))))
(assert (forall (($generated@@100 Int) ) (!  (=> (<= 0 $generated@@100) (and ($generated@@91 ($generated@@45 $generated@@100)) (= ($generated@@46 ($generated@@45 $generated@@100)) $generated@@100)))
 :pattern ( ($generated@@45 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (or ($generated@@40 $generated@@101 $generated@@102) (= $generated@@101 $generated@@102)) ($generated@@40 $generated@@102 $generated@@101))
 :pattern ( ($generated@@40 $generated@@101 $generated@@102) ($generated@@40 $generated@@102 $generated@@101))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 Int) ) (!  (=> (or ($generated@@62 $generated@@104 $generated@@105 $generated@@106) (and (< 2 $generated@@21) ($generated@@25 $generated@@104 $generated@@26))) (and (and (=> (< 0 ($generated@@46 $generated@@105)) (=> (<= 20 (+ ($generated@@27 100 ($generated@@28 $generated@@104)) ($generated@@29 $generated@@104))) ($generated@@62 $generated@@104 ($generated@@44 $generated@@105 ($generated@@45 1)) (+ $generated@@106 1)))) (=> (=> (< 0 ($generated@@46 $generated@@105)) (or (< (+ ($generated@@27 100 ($generated@@28 $generated@@104)) ($generated@@29 $generated@@104)) 20) ($generated@@51 $generated@@103 $generated@@104 ($generated@@44 $generated@@105 ($generated@@45 1)) (+ $generated@@106 1)))) (=> (= ($generated@@56 0) ($generated@@46 $generated@@105)) (forall (($generated@@107 T@U) ) (!  (=> ($generated@@63 $generated@@107 $generated@@105) ($generated@@62 $generated@@104 $generated@@107 $generated@@106))
 :pattern ( ($generated@@51 $generated@@103 $generated@@104 $generated@@107 $generated@@106))
))))) (= ($generated@@51 ($generated@@23 $generated@@103) $generated@@104 $generated@@105 $generated@@106)  (and (=> (< 0 ($generated@@46 $generated@@105)) (or (< (+ ($generated@@27 100 ($generated@@28 $generated@@104)) ($generated@@29 $generated@@104)) 20) ($generated@@51 $generated@@103 $generated@@104 ($generated@@44 $generated@@105 ($generated@@45 1)) (+ $generated@@106 1)))) (=> (= ($generated@@56 0) ($generated@@46 $generated@@105)) (exists (($generated@@108 T@U) ) (!  (and ($generated@@63 $generated@@108 $generated@@105) ($generated@@51 $generated@@103 $generated@@104 $generated@@108 $generated@@106))
 :pattern ( ($generated@@51 $generated@@103 $generated@@104 $generated@@108 $generated@@106))
)))))))
 :pattern ( ($generated@@51 ($generated@@23 $generated@@103) $generated@@104 $generated@@105 $generated@@106))
))))
(assert (forall (($generated@@109 Int) ($generated@@110 Int) ) (! (= ($generated@@27 $generated@@109 $generated@@110) (div $generated@@109 $generated@@110))
 :pattern ( ($generated@@27 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@63 $generated@@111 $generated@@112) ($generated@@40 $generated@@111 $generated@@112))
 :pattern ( ($generated@@63 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@25 $generated@@113 $generated@@0) (and (= ($generated@@71 $generated@@6 ($generated@@70 $generated@@6 $generated@@113)) $generated@@113) ($generated@@88 $generated@@6 ($generated@@70 $generated@@6 $generated@@113) $generated@@0)))
 :pattern ( ($generated@@25 $generated@@113 $generated@@0))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@25 $generated@@114 $generated) (and (= ($generated@@71 $generated@@5 ($generated@@70 $generated@@5 $generated@@114)) $generated@@114) ($generated@@88 $generated@@5 ($generated@@70 $generated@@5 $generated@@114) $generated)))
 :pattern ( ($generated@@25 $generated@@114 $generated))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@25 ($generated@@71 $generated@@117 $generated@@115) $generated@@116) ($generated@@88 $generated@@117 $generated@@115 $generated@@116))
 :pattern ( ($generated@@25 ($generated@@71 $generated@@117 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 Int) ) (! (= ($generated@@51 ($generated@@23 $generated@@118) $generated@@119 $generated@@120 $generated@@121) ($generated@@51 $generated@@118 $generated@@119 $generated@@120 $generated@@121))
 :pattern ( ($generated@@51 ($generated@@23 $generated@@118) $generated@@119 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (! (<= 0 ($generated@@46 $generated@@122))
 :pattern ( ($generated@@46 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@50 $generated@@123) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> ($generated@@25 $generated@@125 $generated@@123) ($generated@@33 $generated@@125 $generated@@123 $generated@@124))
 :pattern ( ($generated@@33 $generated@@125 $generated@@123 $generated@@124))
)))
 :pattern ( ($generated@@50 $generated@@123))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 Int) ($generated@@129 T@U) ) (!  (=> (and ($generated@@25 $generated@@127 $generated@@26) (= $generated@@129 ($generated@@45 0))) (not ($generated@@51 $generated@@126 $generated@@127 $generated@@129 $generated@@128)))
 :pattern ( ($generated@@51 $generated@@126 $generated@@127 $generated@@129 $generated@@128))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@70 $generated@@131 ($generated@@71 $generated@@131 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@71 $generated@@131 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (and (and (and (=> ($generated@@40 $generated@@132 $generated@@133) (or (not (= $generated@@132 $generated@@133)) (not true))) (=> (and ($generated@@91 $generated@@132) (not ($generated@@91 $generated@@133))) ($generated@@40 $generated@@132 $generated@@133))) (=> (and ($generated@@91 $generated@@132) ($generated@@91 $generated@@133)) (= ($generated@@40 $generated@@132 $generated@@133) (< ($generated@@46 $generated@@132) ($generated@@46 $generated@@133))))) (=> (and ($generated@@40 $generated@@132 $generated@@133) ($generated@@91 $generated@@133)) ($generated@@91 $generated@@132)))
 :pattern ( ($generated@@40 $generated@@132 $generated@@133))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@134 $generated@@144 $generated@@145 $generated@@146 ($generated@@140 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@134 $generated@@151 $generated@@152 $generated@@153 ($generated@@140 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@134 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@134 $generated@@160 $generated@@161 $generated@@162 ($generated@@140 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@134 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))) (= ($generated@@4 $generated@@135) 4)) (= ($generated@@4 $generated@@136) 5)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@138 $generated@@169 $generated@@170 ($generated@@141 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@171) $generated@@173) $generated@@171)
 :weight 0
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@178 $generated@@179) (= ($generated@@138 $generated@@174 $generated@@175 ($generated@@141 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@176) $generated@@179) ($generated@@138 $generated@@174 $generated@@175 $generated@@177 $generated@@179)))
 :weight 0
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@4 ($generated@@139 $generated@@180 $generated@@181)) 6))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@142 ($generated@@139 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@139 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@143 ($generated@@139 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@139 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@9 ($generated@@134 $generated@@135 $generated@@136 $generated@@5 ($generated@@137 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))  (=> (and (or (not (= $generated@@190 $generated@@186)) (not true)) ($generated@@9 ($generated@@70 $generated@@5 ($generated@@138 $generated@@136 $generated@@61 ($generated@@138 $generated@@135 ($generated@@139 $generated@@136 $generated@@61) $generated@@187 $generated@@190) $generated@@188)))) $generated@@189))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136 $generated@@5 ($generated@@137 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ) (!  (=> ($generated@@91 $generated@@192) (= $generated@@192 ($generated@@45 ($generated@@46 $generated@@192))))
 :pattern ( ($generated@@46 $generated@@192))
 :pattern ( ($generated@@91 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and ($generated@@91 $generated@@194) (<= ($generated@@46 $generated@@194) ($generated@@46 $generated@@193))) (or (and (= $generated@@194 ($generated@@45 0)) (= ($generated@@44 $generated@@193 $generated@@194) $generated@@193)) (and (or (not (= $generated@@194 ($generated@@45 0))) (not true)) ($generated@@40 ($generated@@44 $generated@@193 $generated@@194) $generated@@193))))
 :pattern ( ($generated@@44 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@71 $generated@@6 ($generated@@10 ($generated@@56 $generated@@195))) ($generated@@58 $generated@@61 ($generated@@71 $generated@@6 ($generated@@10 $generated@@195))))
 :pattern ( ($generated@@71 $generated@@6 ($generated@@10 ($generated@@56 $generated@@195))))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@T) ) (! (= ($generated@@71 $generated@@197 ($generated@@58 $generated@@197 $generated@@196)) ($generated@@58 $generated@@61 ($generated@@71 $generated@@197 $generated@@196)))
 :pattern ( ($generated@@71 $generated@@197 ($generated@@58 $generated@@197 $generated@@196)))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 Int) ) (!  (=> (and ($generated@@25 $generated@@199 $generated@@26) ($generated@@22 ($generated@@23 $generated@@198) $generated@@199 $generated@@200)) (exists (($generated@@201 T@U) ) (! ($generated@@51 ($generated@@23 $generated@@198) $generated@@199 $generated@@201 $generated@@200)
 :pattern ( ($generated@@51 ($generated@@23 $generated@@198) $generated@@199 $generated@@201 $generated@@200))
)))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@198) $generated@@199 $generated@@200))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! ($generated@@35 $generated@@6 $generated@@203 $generated@@0 $generated@@202)
 :pattern ( ($generated@@35 $generated@@6 $generated@@203 $generated@@0 $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! ($generated@@35 $generated@@5 $generated@@205 $generated $generated@@204)
 :pattern ( ($generated@@35 $generated@@5 $generated@@205 $generated $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! ($generated@@88 $generated@@6 $generated@@206 $generated@@0)
 :pattern ( ($generated@@88 $generated@@6 $generated@@206 $generated@@0))
)))
(assert (forall (($generated@@207 T@U) ) (! ($generated@@88 $generated@@5 $generated@@207 $generated)
 :pattern ( ($generated@@88 $generated@@5 $generated@@207 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@215 true))
(let (($generated@@216  (=> (and (< (+ ($generated@@27 100 ($generated@@28 $generated@@208)) ($generated@@29 $generated@@208)) 20) (= (ControlFlow 0 4) 2)) $generated@@215)))
(let (($generated@@217  (=> (and (<= 20 (+ ($generated@@27 100 ($generated@@28 $generated@@208)) ($generated@@29 $generated@@208))) ($generated@@33 $generated@@208 $generated@@26 $generated@@209)) (=> (and (and (= $generated@@210 (+ $generated@@211 1)) ($generated@@35 $generated@@6 ($generated@@10 $generated@@210) $generated@@0 $generated@@209)) (and ($generated@@24 $generated@@208 (+ $generated@@211 1)) (= (ControlFlow 0 3) 2))) $generated@@215))))
(let (($generated@@218  (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= ($generated@@28 $generated@@208) 0)) (not true))) (=> (or (not (= ($generated@@28 $generated@@208) 0)) (not true)) (and (=> (= (ControlFlow 0 5) 3) $generated@@217) (=> (= (ControlFlow 0 5) 4) $generated@@216))))))
(let (($generated@@219 true))
(let (($generated@@220  (=> (= $generated@@212 ($generated@@137 $generated@@213 $generated@@209 $generated@@3 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@219) (=> (= (ControlFlow 0 7) 5) $generated@@218)))))
(let (($generated@@221  (=> (and ($generated@@34 $generated@@209) ($generated@@214 $generated@@209)) (=> (and (and ($generated@@25 $generated@@208 $generated@@26) ($generated@@33 $generated@@208 $generated@@26 $generated@@209)) (and (= 1 $generated@@21) (= (ControlFlow 0 8) 7))) $generated@@220))))
$generated@@221))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 5) (- 6))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
