(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (Bool Real T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Real)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@48 (T@T T@U T@U) Bool)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@55 (Real Bool) T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@83 (Bool) T@U)
(declare-fun $generated@@94 (T@U) Int)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@105 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@T T@T) T@T)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@T) T@T)
(declare-fun $generated@@160 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (forall (($generated@@32 Bool) ($generated@@33 Real) ($generated@@34 T@U) ) (! (= ($generated@@31 ($generated@@30 $generated@@32 $generated@@33 $generated@@34)) $generated@@32)
 :pattern ( ($generated@@30 $generated@@32 $generated@@33 $generated@@34))
)))
(assert (= ($generated@@35 $generated) $generated@@3))
(assert (= ($generated@@35 $generated@@0) $generated@@4))
(assert (= ($generated@@35 $generated@@1) $generated@@5))
(assert (= ($generated@@35 $generated@@2) $generated@@6))
(assert (forall (($generated@@37 Bool) ($generated@@38 Real) ($generated@@39 T@U) ) (! (= ($generated@@36 ($generated@@30 $generated@@37 $generated@@38 $generated@@39)) $generated@@11)
 :pattern ( ($generated@@30 $generated@@37 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 Bool) ($generated@@42 Real) ($generated@@43 T@U) ) (! (= ($generated@@40 ($generated@@30 $generated@@41 $generated@@42 $generated@@43)) $generated@@42)
 :pattern ( ($generated@@30 $generated@@41 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 Bool) ($generated@@46 Real) ($generated@@47 T@U) ) (! (= ($generated@@44 ($generated@@30 $generated@@45 $generated@@46 $generated@@47)) $generated@@47)
 :pattern ( ($generated@@30 $generated@@45 $generated@@46 $generated@@47))
)))
(assert  (and (= ($generated@@14 $generated@@49) 3) (= ($generated@@14 $generated@@51) 4)))
(assert (forall (($generated@@52 Bool) ($generated@@53 Real) ($generated@@54 T@U) ) (! (= ($generated@@48 $generated@@49 ($generated@@30 $generated@@52 $generated@@53 $generated@@54) $generated@@50)  (and (and ($generated@@48 $generated@@15 ($generated@@18 $generated@@52) $generated) ($generated@@48 $generated@@17 ($generated@@22 $generated@@53) $generated@@2)) ($generated@@48 $generated@@51 $generated@@54 $generated@@0)))
 :pattern ( ($generated@@48 $generated@@49 ($generated@@30 $generated@@52 $generated@@53 $generated@@54) $generated@@50))
)))
(assert (forall (($generated@@56 Real) ($generated@@57 Bool) ) (! (= ($generated@@48 $generated@@49 ($generated@@55 $generated@@56 $generated@@57) $generated@@50)  (and ($generated@@48 $generated@@17 ($generated@@22 $generated@@56) $generated@@2) ($generated@@48 $generated@@15 ($generated@@18 $generated@@57) $generated)))
 :pattern ( ($generated@@48 $generated@@49 ($generated@@55 $generated@@56 $generated@@57) $generated@@50))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 $generated@@59) $generated@@59)
 :pattern ( ($generated@@58 $generated@@60 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@61 $generated@@62) (= ($generated@@36 $generated@@62) $generated@@9))
 :pattern ( ($generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 $generated@@64) (= ($generated@@36 $generated@@64) $generated@@10))
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 $generated@@66) (= ($generated@@36 $generated@@66) $generated@@11))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 $generated@@68) (= ($generated@@36 $generated@@68) $generated@@12))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@69 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@69 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@65 $generated@@73) (exists (($generated@@74 Bool) ($generated@@75 Real) ($generated@@76 T@U) ) (= $generated@@73 ($generated@@30 $generated@@74 $generated@@75 $generated@@76))))
 :pattern ( ($generated@@65 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@67 $generated@@77) (exists (($generated@@78 Real) ($generated@@79 Bool) ) (= $generated@@77 ($generated@@55 $generated@@78 $generated@@79))))
 :pattern ( ($generated@@67 $generated@@77))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@61 $generated@@81) (exists (($generated@@82 Int) ) (= $generated@@81 ($generated@@80 $generated@@82))))
 :pattern ( ($generated@@61 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@63 $generated@@84) (exists (($generated@@85 Bool) ) (= $generated@@84 ($generated@@83 $generated@@85))))
 :pattern ( ($generated@@63 $generated@@84))
)))
(assert (forall (($generated@@86 Real) ($generated@@87 Bool) ) (! (= ($generated@@31 ($generated@@55 $generated@@86 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@55 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@88 Bool) ) (! (= ($generated@@31 ($generated@@83 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@83 $generated@@88))
)))
(assert (forall (($generated@@89 Real) ($generated@@90 Bool) ) (! (= ($generated@@36 ($generated@@55 $generated@@89 $generated@@90)) $generated@@12)
 :pattern ( ($generated@@55 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 Real) ($generated@@92 Bool) ) (! (= ($generated@@40 ($generated@@55 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@55 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 Int) ) (! (= ($generated@@36 ($generated@@80 $generated@@93)) $generated@@9)
 :pattern ( ($generated@@80 $generated@@93))
)))
(assert (forall (($generated@@95 Int) ) (! (= ($generated@@94 ($generated@@80 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@80 $generated@@95))
)))
(assert (forall (($generated@@96 Bool) ) (! (= ($generated@@36 ($generated@@83 $generated@@96)) $generated@@10)
 :pattern ( ($generated@@83 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@69 $generated@@98 ($generated@@70 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@70 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@99 Int) ) (! (= ($generated@@48 $generated@@49 ($generated@@80 $generated@@99) $generated@@50) ($generated@@48 $generated@@16 ($generated@@20 $generated@@99) $generated@@1))
 :pattern ( ($generated@@48 $generated@@49 ($generated@@80 $generated@@99) $generated@@50))
)))
(assert (forall (($generated@@100 Bool) ) (! (= ($generated@@48 $generated@@49 ($generated@@83 $generated@@100) $generated@@50) ($generated@@48 $generated@@15 ($generated@@18 $generated@@100) $generated))
 :pattern ( ($generated@@48 $generated@@49 ($generated@@83 $generated@@100) $generated@@50))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@101 $generated@@112 $generated@@113 $generated@@114 ($generated@@108 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@117 $generated@@118) $generated@@115)
 :weight 0
)) (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@101 $generated@@119 $generated@@120 $generated@@121 ($generated@@108 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@101 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@101 $generated@@128 $generated@@129 $generated@@130 ($generated@@108 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)))) (= ($generated@@14 $generated@@102) 5)) (= ($generated@@14 $generated@@103) 6)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@105 $generated@@137 $generated@@138 ($generated@@109 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@139) $generated@@141) $generated@@139)
 :weight 0
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@146 $generated@@147) (= ($generated@@105 $generated@@142 $generated@@143 ($generated@@109 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@105 $generated@@142 $generated@@143 $generated@@145 $generated@@147)))
 :weight 0
))) (= ($generated@@14 $generated@@106) 7)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (= ($generated@@14 ($generated@@107 $generated@@148 $generated@@149)) 8))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (! (= ($generated@@110 ($generated@@107 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@107 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@111 ($generated@@107 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@107 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 Bool) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@19 ($generated@@101 $generated@@102 $generated@@103 $generated@@15 ($generated@@104 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))  (=> (and (or (not (= $generated@@158 $generated@@154)) (not true)) ($generated@@19 ($generated@@69 $generated@@15 ($generated@@105 $generated@@103 $generated@@106 ($generated@@105 $generated@@102 ($generated@@107 $generated@@103 $generated@@106) $generated@@155 $generated@@158) $generated@@156)))) $generated@@157))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103 $generated@@15 ($generated@@104 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@161 $generated@@163) (and ($generated@@61 $generated@@162) ($generated@@160 $generated@@49 $generated@@162 $generated@@50 $generated@@163))) ($generated@@160 $generated@@16 ($generated@@20 ($generated@@94 $generated@@162)) $generated@@1 $generated@@163))
 :pattern ( ($generated@@160 $generated@@16 ($generated@@20 ($generated@@94 $generated@@162)) $generated@@1 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@161 $generated@@165) (and ($generated@@63 $generated@@164) ($generated@@160 $generated@@49 $generated@@164 $generated@@50 $generated@@165))) ($generated@@160 $generated@@15 ($generated@@18 ($generated@@31 $generated@@164)) $generated $generated@@165))
 :pattern ( ($generated@@160 $generated@@15 ($generated@@18 ($generated@@31 $generated@@164)) $generated $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@161 $generated@@167) (and ($generated@@65 $generated@@166) ($generated@@160 $generated@@49 $generated@@166 $generated@@50 $generated@@167))) ($generated@@160 $generated@@15 ($generated@@18 ($generated@@31 $generated@@166)) $generated $generated@@167))
 :pattern ( ($generated@@160 $generated@@15 ($generated@@18 ($generated@@31 $generated@@166)) $generated $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and ($generated@@161 $generated@@169) (and ($generated@@65 $generated@@168) ($generated@@160 $generated@@49 $generated@@168 $generated@@50 $generated@@169))) ($generated@@160 $generated@@17 ($generated@@22 ($generated@@40 $generated@@168)) $generated@@2 $generated@@169))
 :pattern ( ($generated@@160 $generated@@17 ($generated@@22 ($generated@@40 $generated@@168)) $generated@@2 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and ($generated@@161 $generated@@171) (and ($generated@@65 $generated@@170) ($generated@@160 $generated@@49 $generated@@170 $generated@@50 $generated@@171))) ($generated@@160 $generated@@51 ($generated@@44 $generated@@170) $generated@@0 $generated@@171))
 :pattern ( ($generated@@160 $generated@@51 ($generated@@44 $generated@@170) $generated@@0 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@161 $generated@@173) (and ($generated@@67 $generated@@172) ($generated@@160 $generated@@49 $generated@@172 $generated@@50 $generated@@173))) ($generated@@160 $generated@@17 ($generated@@22 ($generated@@40 $generated@@172)) $generated@@2 $generated@@173))
 :pattern ( ($generated@@160 $generated@@17 ($generated@@22 ($generated@@40 $generated@@172)) $generated@@2 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and ($generated@@161 $generated@@175) (and ($generated@@67 $generated@@174) ($generated@@160 $generated@@49 $generated@@174 $generated@@50 $generated@@175))) ($generated@@160 $generated@@15 ($generated@@18 ($generated@@31 $generated@@174)) $generated $generated@@175))
 :pattern ( ($generated@@160 $generated@@15 ($generated@@18 ($generated@@31 $generated@@174)) $generated $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and ($generated@@161 $generated@@177) ($generated@@48 $generated@@49 $generated@@176 $generated@@50)) ($generated@@160 $generated@@49 $generated@@176 $generated@@50 $generated@@177))
 :pattern ( ($generated@@160 $generated@@49 $generated@@176 $generated@@50 $generated@@177))
)))
(assert (= ($generated@@35 $generated@@50) $generated@@8))
(assert (= ($generated@@178 $generated@@50) $generated@@13))
(assert (forall (($generated@@180 T@U) ) (!  (=> ($generated@@179 $generated@@180) (or (or (or ($generated@@61 $generated@@180) ($generated@@63 $generated@@180)) ($generated@@65 $generated@@180)) ($generated@@67 $generated@@180)))
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@83 ($generated@@19 ($generated@@58 $generated@@15 $generated@@181))) ($generated@@58 $generated@@49 ($generated@@83 ($generated@@19 $generated@@181))))
 :pattern ( ($generated@@83 ($generated@@19 ($generated@@58 $generated@@15 $generated@@181))))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@70 $generated@@183 ($generated@@58 $generated@@183 $generated@@182)) ($generated@@58 $generated@@106 ($generated@@70 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@70 $generated@@183 ($generated@@58 $generated@@183 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> ($generated@@48 $generated@@49 $generated@@184 $generated@@50) (or (or (or ($generated@@61 $generated@@184) ($generated@@63 $generated@@184)) ($generated@@65 $generated@@184)) ($generated@@67 $generated@@184)))
 :pattern ( ($generated@@67 $generated@@184) ($generated@@48 $generated@@49 $generated@@184 $generated@@50))
 :pattern ( ($generated@@65 $generated@@184) ($generated@@48 $generated@@49 $generated@@184 $generated@@50))
 :pattern ( ($generated@@63 $generated@@184) ($generated@@48 $generated@@49 $generated@@184 $generated@@50))
 :pattern ( ($generated@@61 $generated@@184) ($generated@@48 $generated@@49 $generated@@184 $generated@@50))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! ($generated@@160 $generated@@16 $generated@@186 $generated@@1 $generated@@185)
 :pattern ( ($generated@@160 $generated@@16 $generated@@186 $generated@@1 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! ($generated@@160 $generated@@17 $generated@@188 $generated@@2 $generated@@187)
 :pattern ( ($generated@@160 $generated@@17 $generated@@188 $generated@@2 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! ($generated@@160 $generated@@15 $generated@@190 $generated $generated@@189)
 :pattern ( ($generated@@160 $generated@@15 $generated@@190 $generated $generated@@189))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! ($generated@@160 $generated@@51 $generated@@192 $generated@@0 $generated@@191)
 :pattern ( ($generated@@160 $generated@@51 $generated@@192 $generated@@0 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ) (! ($generated@@48 $generated@@16 $generated@@193 $generated@@1)
 :pattern ( ($generated@@48 $generated@@16 $generated@@193 $generated@@1))
)))
(assert (forall (($generated@@194 T@U) ) (! ($generated@@48 $generated@@17 $generated@@194 $generated@@2)
 :pattern ( ($generated@@48 $generated@@17 $generated@@194 $generated@@2))
)))
(assert (forall (($generated@@195 T@U) ) (! ($generated@@48 $generated@@15 $generated@@195 $generated)
 :pattern ( ($generated@@48 $generated@@15 $generated@@195 $generated))
)))
(assert (forall (($generated@@196 T@U) ) (! ($generated@@48 $generated@@51 $generated@@196 $generated@@0)
 :pattern ( ($generated@@48 $generated@@51 $generated@@196 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@205  (=> (and (and (and (and (not ($generated@@19 ($generated@@58 $generated@@15 ($generated@@18 true)))) (not ($generated@@19 ($generated@@58 $generated@@15 ($generated@@18 true))))) (not ($generated@@19 ($generated@@58 $generated@@15 ($generated@@18 true))))) (not ($generated@@19 ($generated@@58 $generated@@15 ($generated@@18 true))))) (= (ControlFlow 0 10) (- 0 9))) false)))
(let (($generated@@206  (=> (= (ControlFlow 0 8) (- 0 7)) (or ($generated@@65 $generated@@197) ($generated@@67 $generated@@197)))))
(let (($generated@@207  (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@65 $generated@@197))))
(let (($generated@@208  (=> (= (ControlFlow 0 4) (- 0 3)) (or (or ($generated@@63 $generated@@197) ($generated@@65 $generated@@197)) ($generated@@67 $generated@@197)))))
(let (($generated@@209  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@61 $generated@@197))))
(let (($generated@@210  (=> (and (= $generated@@198 ($generated@@104 $generated@@199 $generated@@200 $generated@@7 false)) ($generated@@48 $generated@@51 $generated@@201 $generated@@0)) (and (and (and (and (=> (= (ControlFlow 0 11) 2) $generated@@209) (=> (= (ControlFlow 0 11) 4) $generated@@208)) (=> (= (ControlFlow 0 11) 6) $generated@@207)) (=> (= (ControlFlow 0 11) 8) $generated@@206)) (=> (= (ControlFlow 0 11) 10) $generated@@205)))))
(let (($generated@@211  (=> (and ($generated@@161 $generated@@200) ($generated@@202 $generated@@200)) (=> (and (and ($generated@@48 $generated@@49 $generated@@197 $generated@@50) ($generated@@160 $generated@@49 $generated@@197 $generated@@50 $generated@@200)) ($generated@@179 $generated@@197)) (=> (and (and (and ($generated@@48 $generated@@51 $generated@@203 $generated@@0) true) (= 0 $generated@@204)) (and ($generated@@65 $generated@@197) (= (ControlFlow 0 12) 11))) $generated@@210)))))
$generated@@211))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
