(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (Int) Bool)
(declare-fun $generated@@27 (Int) Bool)
(declare-fun $generated@@28 (Int) Int)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@55 (T@T T@U T@U) Bool)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@T T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@81 (Int Int Int Int) T@U)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@100 (T@U Int Int) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) Bool)
(declare-fun $generated@@114 (Int Int Int) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@30 Int) ) (!  (=> (or ($generated@@27 $generated@@30) (and (< 0 $generated@@25) (<= ($generated@@28 0) $generated@@30))) (= ($generated@@26 $generated@@30) ($generated@@13 ($generated@@29 $generated@@9 ($generated@@12 true)))))
 :pattern ( ($generated@@26 $generated@@30))
))))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! ($generated@@31 $generated@@10 $generated@@33 $generated@@32 $generated@@34)
 :pattern ( ($generated@@31 $generated@@10 $generated@@33 $generated@@32 $generated@@34))
)))
(assert  (and (and (forall (($generated@@41 T@T) ($generated@@42 T@T) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@35 $generated@@41 $generated@@42 ($generated@@40 $generated@@41 $generated@@42 $generated@@44 $generated@@45 $generated@@43) $generated@@45) $generated@@43)
 :weight 0
)) (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (or (= $generated@@50 $generated@@51) (= ($generated@@35 $generated@@46 $generated@@47 ($generated@@40 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@51) ($generated@@35 $generated@@46 $generated@@47 $generated@@49 $generated@@51)))
 :weight 0
))) (= ($generated@@8 $generated@@36) 3)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@13 ($generated@@35 $generated@@36 $generated@@9 ($generated@@37 $generated@@52 $generated@@53) $generated@@54))  (and ($generated@@38 $generated@@54 $generated@@52) ($generated@@39 $generated@@53 $generated@@54)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@9 ($generated@@37 $generated@@52 $generated@@53) $generated@@54))
)))
(assert (= ($generated@@8 $generated@@56) 4))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@55 $generated@@56 $generated@@60 $generated@@57)  (or (= $generated@@60 $generated@@58) (= ($generated@@59 $generated@@60) $generated@@57)))
 :pattern ( ($generated@@55 $generated@@56 $generated@@60 $generated@@57))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@31 $generated@@56 $generated@@62 $generated@@61 $generated@@63) ($generated@@31 $generated@@56 $generated@@62 $generated@@57 $generated@@63))
 :pattern ( ($generated@@31 $generated@@56 $generated@@62 $generated@@61 $generated@@63))
 :pattern ( ($generated@@31 $generated@@56 $generated@@62 $generated@@57 $generated@@63))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@64 Int) ) (!  (=> (or ($generated@@27 ($generated@@28 $generated@@64)) (and (< 0 $generated@@25) (<= ($generated@@28 0) $generated@@64))) (= ($generated@@26 ($generated@@28 $generated@@64)) ($generated@@13 ($generated@@29 $generated@@9 ($generated@@12 true)))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@28 $generated@@64)))
))))
(assert  (and (and (and (= ($generated@@8 $generated@@66) 5) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@8 ($generated@@67 $generated@@70 $generated@@71)) 6))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@68 ($generated@@67 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@67 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@69 ($generated@@67 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@67 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@31 $generated@@56 $generated@@76 $generated@@57 $generated@@77)  (or (= $generated@@76 $generated@@58) ($generated@@13 ($generated@@65 $generated@@9 ($generated@@35 $generated@@66 $generated@@36 ($generated@@35 $generated@@56 ($generated@@67 $generated@@66 $generated@@36) $generated@@77 $generated@@76) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@56 $generated@@76 $generated@@57 $generated@@77))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@28 $generated@@78) $generated@@78)
 :pattern ( ($generated@@28 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@29 $generated@@80 $generated@@79) $generated@@79)
 :pattern ( ($generated@@29 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@83 Int) ($generated@@84 Int) ($generated@@85 Int) ($generated@@86 Int) ($generated@@87 T@U) ) (! (= ($generated@@13 ($generated@@35 $generated@@36 $generated@@9 ($generated@@81 $generated@@83 $generated@@84 $generated@@85 $generated@@86) $generated@@87)) (exists (($generated@@88 Int) ) (!  (and (and (<= $generated@@83 $generated@@88) (and (and (<= $generated@@84 $generated@@88) (< $generated@@88 $generated@@85)) ($generated@@26 $generated@@88))) (= $generated@@87 ($generated@@82 $generated@@10 ($generated@@14 (+ $generated@@88 $generated@@86)))))
 :pattern ( ($generated@@26 $generated@@88))
)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@9 ($generated@@81 $generated@@83 $generated@@84 $generated@@85 $generated@@86) $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@82 $generated@@90 ($generated@@65 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@65 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@39 ($generated@@91 $generated@@92) $generated@@93) ($generated@@13 ($generated@@35 $generated@@36 $generated@@9 $generated@@92 $generated@@93)))
 :pattern ( ($generated@@39 ($generated@@91 $generated@@92) $generated@@93))
)))
(assert (= ($generated@@8 $generated@@94) 7))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@55 $generated@@94 $generated@@96 ($generated@@95 $generated@@97)) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@39 $generated@@96 $generated@@98) ($generated@@38 $generated@@98 $generated@@97))
 :pattern ( ($generated@@39 $generated@@96 $generated@@98))
)))
 :pattern ( ($generated@@55 $generated@@94 $generated@@96 ($generated@@95 $generated@@97)))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@55 $generated@@10 $generated@@99 $generated@@32) (<= ($generated@@28 0) ($generated@@15 $generated@@99)))
 :pattern ( ($generated@@55 $generated@@10 $generated@@99 $generated@@32))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 Int) ($generated@@103 Int) ($generated@@104 T@U) ) (! (= ($generated@@13 ($generated@@35 $generated@@36 $generated@@9 ($generated@@100 $generated@@101 $generated@@102 $generated@@103) $generated@@104))  (and ($generated@@38 $generated@@104 $generated@@101) (and (and (<= $generated@@102 ($generated@@15 ($generated@@65 $generated@@10 $generated@@104))) (< ($generated@@15 ($generated@@65 $generated@@10 $generated@@104)) $generated@@103)) ($generated@@26 ($generated@@15 ($generated@@65 $generated@@10 $generated@@104))))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@9 ($generated@@100 $generated@@101 $generated@@102 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@105 ($generated@@82 $generated@@109 $generated@@106) $generated@@107 $generated@@108) ($generated@@31 $generated@@109 $generated@@106 $generated@@107 $generated@@108))
 :pattern ( ($generated@@105 ($generated@@82 $generated@@109 $generated@@106) $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@38 $generated@@110 $generated@@32) (and (= ($generated@@82 $generated@@10 ($generated@@65 $generated@@10 $generated@@110)) $generated@@110) ($generated@@55 $generated@@10 ($generated@@65 $generated@@10 $generated@@110) $generated@@32)))
 :pattern ( ($generated@@38 $generated@@110 $generated@@32))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@38 $generated@@111 $generated@@61) (and (= ($generated@@82 $generated@@56 ($generated@@65 $generated@@56 $generated@@111)) $generated@@111) ($generated@@55 $generated@@56 ($generated@@65 $generated@@56 $generated@@111) $generated@@61)))
 :pattern ( ($generated@@38 $generated@@111 $generated@@61))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@38 $generated@@112 $generated@@57) (and (= ($generated@@82 $generated@@56 ($generated@@65 $generated@@56 $generated@@112)) $generated@@112) ($generated@@55 $generated@@56 ($generated@@65 $generated@@56 $generated@@112) $generated@@57)))
 :pattern ( ($generated@@38 $generated@@112 $generated@@57))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@55 $generated@@56 $generated@@113 $generated@@61)  (and ($generated@@55 $generated@@56 $generated@@113 $generated@@57) (or (not (= $generated@@113 $generated@@58)) (not true))))
 :pattern ( ($generated@@55 $generated@@56 $generated@@113 $generated@@61))
 :pattern ( ($generated@@55 $generated@@56 $generated@@113 $generated@@57))
)))
(assert (forall (($generated@@115 Int) ($generated@@116 Int) ($generated@@117 Int) ($generated@@118 T@U) ) (! (= ($generated@@13 ($generated@@35 $generated@@36 $generated@@9 ($generated@@114 $generated@@115 $generated@@116 $generated@@117) $generated@@118)) (exists (($generated@@119 Int) ) (!  (and (and (<= $generated@@115 $generated@@119) (and (and (<= $generated@@116 $generated@@119) (< $generated@@119 $generated@@117)) ($generated@@26 $generated@@119))) (= $generated@@118 ($generated@@82 $generated@@10 ($generated@@14 $generated@@119))))
 :pattern ( ($generated@@26 $generated@@119))
)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@9 ($generated@@114 $generated@@115 $generated@@116 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@38 $generated@@120 $generated) (and (= ($generated@@82 $generated@@10 ($generated@@65 $generated@@10 $generated@@120)) $generated@@120) ($generated@@55 $generated@@10 ($generated@@65 $generated@@10 $generated@@120) $generated)))
 :pattern ( ($generated@@38 $generated@@120 $generated))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@38 ($generated@@82 $generated@@123 $generated@@121) $generated@@122) ($generated@@55 $generated@@123 $generated@@121 $generated@@122))
 :pattern ( ($generated@@38 ($generated@@82 $generated@@123 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@31 $generated@@94 $generated@@124 ($generated@@95 $generated@@125) $generated@@126) (forall (($generated@@127 T@U) ) (!  (=> ($generated@@39 $generated@@124 $generated@@127) ($generated@@105 $generated@@127 $generated@@125 $generated@@126))
 :pattern ( ($generated@@39 $generated@@124 $generated@@127))
)))
 :pattern ( ($generated@@31 $generated@@94 $generated@@124 ($generated@@95 $generated@@125) $generated@@126))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@95 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@95 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@24 ($generated@@95 $generated@@130)) $generated@@1)
 :pattern ( ($generated@@95 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@65 $generated@@132 ($generated@@82 $generated@@132 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@82 $generated@@132 $generated@@131))
)))
(assert  (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@133 $generated@@136 $generated@@137 $generated@@138 ($generated@@135 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@141 $generated@@142) $generated@@139)
 :weight 0
)) (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@133 $generated@@143 $generated@@144 $generated@@145 ($generated@@135 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@133 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@133 $generated@@152 $generated@@153 $generated@@154 ($generated@@135 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@133 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@13 ($generated@@133 $generated@@56 $generated@@66 $generated@@9 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))  (=> (and (or (not (= $generated@@165 $generated@@161)) (not true)) ($generated@@13 ($generated@@65 $generated@@9 ($generated@@35 $generated@@66 $generated@@36 ($generated@@35 $generated@@56 ($generated@@67 $generated@@66 $generated@@36) $generated@@162 $generated@@165) $generated@@163)))) $generated@@164))
 :pattern ( ($generated@@133 $generated@@56 $generated@@66 $generated@@9 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@38 $generated@@167 ($generated@@95 $generated@@168)) (and (= ($generated@@82 $generated@@94 ($generated@@65 $generated@@94 $generated@@167)) $generated@@167) ($generated@@55 $generated@@94 ($generated@@65 $generated@@94 $generated@@167) ($generated@@95 $generated@@168))))
 :pattern ( ($generated@@38 $generated@@167 ($generated@@95 $generated@@168)))
)))
(assert (= ($generated@@24 $generated@@32) $generated@@3))
(assert (= ($generated@@169 $generated@@32) $generated@@6))
(assert (= ($generated@@24 $generated@@61) $generated@@4))
(assert (= ($generated@@169 $generated@@61) $generated@@7))
(assert (= ($generated@@24 $generated@@57) $generated@@5))
(assert (= ($generated@@169 $generated@@57) $generated@@7))
(assert (forall (($generated@@170 Int) ) (! (= ($generated@@82 $generated@@10 ($generated@@14 ($generated@@28 $generated@@170))) ($generated@@29 $generated@@36 ($generated@@82 $generated@@10 ($generated@@14 $generated@@170))))
 :pattern ( ($generated@@82 $generated@@10 ($generated@@14 ($generated@@28 $generated@@170))))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@T) ) (! (= ($generated@@82 $generated@@172 ($generated@@29 $generated@@172 $generated@@171)) ($generated@@29 $generated@@36 ($generated@@82 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@82 $generated@@172 ($generated@@29 $generated@@172 $generated@@171)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! ($generated@@31 $generated@@10 $generated@@174 $generated $generated@@173)
 :pattern ( ($generated@@31 $generated@@10 $generated@@174 $generated $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! ($generated@@55 $generated@@10 $generated@@175 $generated)
 :pattern ( ($generated@@55 $generated@@10 $generated@@175 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 43) (let (($generated@@204  (=> (and (and (and (and (and (and (not ($generated@@13 ($generated@@29 $generated@@9 ($generated@@12 true)))) (not ($generated@@13 ($generated@@29 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@29 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@29 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@29 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@29 $generated@@9 ($generated@@12 true))))) (= (ControlFlow 0 9) (- 0 8))) false)))
(let (($generated@@205 true))
(let (($generated@@206  (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@55 $generated@@94 $generated@@176 ($generated@@95 $generated@@32)))))
(let (($generated@@207 true))
(let (($generated@@208 true))
(let (($generated@@209 true))
(let (($generated@@210 true))
(let (($generated@@211  (=> (and (forall (($generated@@212 Int) ) (!  (=> (<= ($generated@@28 0) $generated@@212) (=> (and (<= ($generated@@28 (- 0 2)) $generated@@212) (< $generated@@212 8)) ($generated@@27 $generated@@212)))
 :pattern ( ($generated@@26 $generated@@212))
)) (= $generated@@177 ($generated@@91 ($generated@@81 ($generated@@28 0) ($generated@@28 (- 0 2)) 8 2)))) (=> (and (and ($generated@@55 $generated@@94 $generated@@178 ($generated@@95 $generated@@61)) ($generated@@55 $generated@@94 $generated@@179 ($generated@@95 $generated@@32))) (and ($generated@@55 $generated@@94 $generated@@180 ($generated@@95 $generated@@32)) ($generated@@55 $generated@@94 $generated@@176 ($generated@@95 $generated)))) (and (and (and (and (and (and (=> (= (ControlFlow 0 10) 1) $generated@@210) (=> (= (ControlFlow 0 10) 2) $generated@@209)) (=> (= (ControlFlow 0 10) 3) $generated@@208)) (=> (= (ControlFlow 0 10) 4) $generated@@207)) (=> (= (ControlFlow 0 10) 6) $generated@@206)) (=> (= (ControlFlow 0 10) 7) $generated@@205)) (=> (= (ControlFlow 0 10) 9) $generated@@204))))))
(let (($generated@@213  (=> (and (not (and (and (<= ($generated@@28 (- 0 2)) $generated@@181) (< $generated@@181 8)) ($generated@@26 $generated@@181))) (= (ControlFlow 0 13) 10)) $generated@@211)))
(let (($generated@@214  (=> (and (and (and (<= ($generated@@28 (- 0 2)) $generated@@181) (< $generated@@181 8)) ($generated@@26 $generated@@181)) (= (ControlFlow 0 12) 10)) $generated@@211)))
(let (($generated@@215  (=> (not (and (<= ($generated@@28 (- 0 2)) $generated@@181) (< $generated@@181 8))) (and (=> (= (ControlFlow 0 15) 12) $generated@@214) (=> (= (ControlFlow 0 15) 13) $generated@@213)))))
(let (($generated@@216  (=> (and (and (<= ($generated@@28 (- 0 2)) $generated@@181) (< $generated@@181 8)) (and ($generated@@31 $generated@@10 ($generated@@14 $generated@@181) $generated@@32 $generated@@182) ($generated@@27 $generated@@181))) (and (=> (= (ControlFlow 0 14) 12) $generated@@214) (=> (= (ControlFlow 0 14) 13) $generated@@213)))))
(let (($generated@@217  (=> (< $generated@@181 ($generated@@28 (- 0 2))) (and (=> (= (ControlFlow 0 17) 14) $generated@@216) (=> (= (ControlFlow 0 17) 15) $generated@@215)))))
(let (($generated@@218  (=> (<= ($generated@@28 (- 0 2)) $generated@@181) (and (=> (= (ControlFlow 0 16) 14) $generated@@216) (=> (= (ControlFlow 0 16) 15) $generated@@215)))))
(let (($generated@@219  (=> (<= ($generated@@28 0) $generated@@181) (and (=> (= (ControlFlow 0 18) 16) $generated@@218) (=> (= (ControlFlow 0 18) 17) $generated@@217)))))
(let (($generated@@220  (=> (and (< $generated@@181 ($generated@@28 0)) (= (ControlFlow 0 11) 10)) $generated@@211)))
(let (($generated@@221  (=> (and (forall (($generated@@222 Int) ) (!  (=> (<= ($generated@@28 0) $generated@@222) (=> (and (<= ($generated@@28 (- 0 2)) $generated@@222) (< $generated@@222 8)) ($generated@@27 $generated@@222)))
 :pattern ( ($generated@@26 $generated@@222))
)) (= $generated@@183 ($generated@@91 ($generated@@114 ($generated@@28 0) ($generated@@28 (- 0 2)) 8)))) (and (=> (= (ControlFlow 0 19) 18) $generated@@219) (=> (= (ControlFlow 0 19) 11) $generated@@220)))))
(let (($generated@@223  (=> (and (not (and (and (<= ($generated@@28 (- 0 2)) $generated@@184) (< $generated@@184 8)) ($generated@@26 $generated@@184))) (= (ControlFlow 0 22) 19)) $generated@@221)))
(let (($generated@@224  (=> (and (and (and (<= ($generated@@28 (- 0 2)) $generated@@184) (< $generated@@184 8)) ($generated@@26 $generated@@184)) (= (ControlFlow 0 21) 19)) $generated@@221)))
(let (($generated@@225  (=> (not (and (<= ($generated@@28 (- 0 2)) $generated@@184) (< $generated@@184 8))) (and (=> (= (ControlFlow 0 24) 21) $generated@@224) (=> (= (ControlFlow 0 24) 22) $generated@@223)))))
(let (($generated@@226  (=> (and (and (<= ($generated@@28 (- 0 2)) $generated@@184) (< $generated@@184 8)) (and ($generated@@31 $generated@@10 ($generated@@14 $generated@@184) $generated@@32 $generated@@182) ($generated@@27 $generated@@184))) (and (=> (= (ControlFlow 0 23) 21) $generated@@224) (=> (= (ControlFlow 0 23) 22) $generated@@223)))))
(let (($generated@@227  (=> (< $generated@@184 ($generated@@28 (- 0 2))) (and (=> (= (ControlFlow 0 26) 23) $generated@@226) (=> (= (ControlFlow 0 26) 24) $generated@@225)))))
(let (($generated@@228  (=> (<= ($generated@@28 (- 0 2)) $generated@@184) (and (=> (= (ControlFlow 0 25) 23) $generated@@226) (=> (= (ControlFlow 0 25) 24) $generated@@225)))))
(let (($generated@@229  (=> (<= ($generated@@28 0) $generated@@184) (and (=> (= (ControlFlow 0 27) 25) $generated@@228) (=> (= (ControlFlow 0 27) 26) $generated@@227)))))
(let (($generated@@230  (=> (and (< $generated@@184 ($generated@@28 0)) (= (ControlFlow 0 20) 19)) $generated@@221)))
(let (($generated@@231  (=> (and (forall (($generated@@232 Int) ) (!  (=> (<= ($generated@@28 0) $generated@@232) (=> (and (<= ($generated@@28 (- 0 2)) $generated@@232) (< $generated@@232 8)) ($generated@@27 $generated@@232)))
 :pattern ( ($generated@@26 $generated@@232))
)) (= $generated@@185 ($generated@@91 ($generated@@100 $generated@@32 ($generated@@28 (- 0 2)) 8)))) (and (=> (= (ControlFlow 0 28) 27) $generated@@229) (=> (= (ControlFlow 0 28) 20) $generated@@230)))))
(let (($generated@@233  (=> (and (not (and (and (<= ($generated@@28 (- 0 2)) $generated@@186) (< $generated@@186 8)) ($generated@@26 $generated@@186))) (= (ControlFlow 0 31) 28)) $generated@@231)))
(let (($generated@@234  (=> (and (and (and (<= ($generated@@28 (- 0 2)) $generated@@186) (< $generated@@186 8)) ($generated@@26 $generated@@186)) (= (ControlFlow 0 30) 28)) $generated@@231)))
(let (($generated@@235  (=> (not (and (<= ($generated@@28 (- 0 2)) $generated@@186) (< $generated@@186 8))) (and (=> (= (ControlFlow 0 33) 30) $generated@@234) (=> (= (ControlFlow 0 33) 31) $generated@@233)))))
(let (($generated@@236  (=> (and (and (<= ($generated@@28 (- 0 2)) $generated@@186) (< $generated@@186 8)) (and ($generated@@31 $generated@@10 ($generated@@14 $generated@@186) $generated@@32 $generated@@182) ($generated@@27 $generated@@186))) (and (=> (= (ControlFlow 0 32) 30) $generated@@234) (=> (= (ControlFlow 0 32) 31) $generated@@233)))))
(let (($generated@@237  (=> (< $generated@@186 ($generated@@28 (- 0 2))) (and (=> (= (ControlFlow 0 35) 32) $generated@@236) (=> (= (ControlFlow 0 35) 33) $generated@@235)))))
(let (($generated@@238  (=> (<= ($generated@@28 (- 0 2)) $generated@@186) (and (=> (= (ControlFlow 0 34) 32) $generated@@236) (=> (= (ControlFlow 0 34) 33) $generated@@235)))))
(let (($generated@@239  (=> (<= ($generated@@28 0) $generated@@186) (and (=> (= (ControlFlow 0 36) 34) $generated@@238) (=> (= (ControlFlow 0 36) 35) $generated@@237)))))
(let (($generated@@240  (=> (and (< $generated@@186 ($generated@@28 0)) (= (ControlFlow 0 29) 28)) $generated@@231)))
(let (($generated@@241  (=> (= $generated@@187 ($generated@@91 ($generated@@37 $generated@@61 $generated@@188))) (and (=> (= (ControlFlow 0 37) 36) $generated@@239) (=> (= (ControlFlow 0 37) 29) $generated@@240)))))
(let (($generated@@242  (=> (and (not ($generated@@39 $generated@@188 ($generated@@82 $generated@@56 $generated@@189))) (= (ControlFlow 0 40) 37)) $generated@@241)))
(let (($generated@@243  (=> (and ($generated@@39 $generated@@188 ($generated@@82 $generated@@56 $generated@@189)) (= (ControlFlow 0 39) 37)) $generated@@241)))
(let (($generated@@244  (=> (and ($generated@@55 $generated@@56 $generated@@189 $generated@@61) ($generated@@31 $generated@@56 $generated@@189 $generated@@61 $generated@@182)) (and (=> (= (ControlFlow 0 41) 39) $generated@@243) (=> (= (ControlFlow 0 41) 40) $generated@@242)))))
(let (($generated@@245  (=> (and (not (and ($generated@@55 $generated@@56 $generated@@189 $generated@@61) ($generated@@31 $generated@@56 $generated@@189 $generated@@61 $generated@@182))) (= (ControlFlow 0 38) 37)) $generated@@241)))
(let (($generated@@246  (=> (= $generated@@190 ($generated@@134 $generated@@58 $generated@@182 $generated@@2 false)) (and (=> (= (ControlFlow 0 42) 41) $generated@@244) (=> (= (ControlFlow 0 42) 38) $generated@@245)))))
(let (($generated@@247  (=> (and ($generated@@191 $generated@@182) ($generated@@192 $generated@@182)) (=> (and (and ($generated@@55 $generated@@94 $generated@@188 ($generated@@95 $generated@@61)) ($generated@@31 $generated@@94 $generated@@188 ($generated@@95 $generated@@61) $generated@@182)) (and ($generated@@55 $generated@@94 $generated@@193 ($generated@@95 $generated@@61)) ($generated@@31 $generated@@94 $generated@@193 ($generated@@95 $generated@@61) $generated@@182))) (=> (and (and (and (and (and ($generated@@55 $generated@@94 $generated@@194 ($generated@@95 $generated@@32)) ($generated@@31 $generated@@94 $generated@@194 ($generated@@95 $generated@@32) $generated@@182)) (and ($generated@@55 $generated@@94 $generated@@195 ($generated@@95 $generated)) ($generated@@31 $generated@@94 $generated@@195 ($generated@@95 $generated) $generated@@182))) (and (and ($generated@@55 $generated@@94 $generated@@196 ($generated@@95 $generated@@61)) ($generated@@31 $generated@@94 $generated@@196 ($generated@@95 $generated@@61) $generated@@182)) true)) (and (and (and ($generated@@55 $generated@@94 $generated@@197 ($generated@@95 $generated@@32)) ($generated@@31 $generated@@94 $generated@@197 ($generated@@95 $generated@@32) $generated@@182)) true) (and (and ($generated@@55 $generated@@94 $generated@@198 ($generated@@95 $generated@@32)) ($generated@@31 $generated@@94 $generated@@198 ($generated@@95 $generated@@32) $generated@@182)) true))) (and (and (and (and ($generated@@55 $generated@@94 $generated@@199 ($generated@@95 $generated)) ($generated@@31 $generated@@94 $generated@@199 ($generated@@95 $generated) $generated@@182)) true) (and ($generated@@55 $generated@@94 $generated@@200 ($generated@@95 $generated@@61)) true)) (and (and (and ($generated@@55 $generated@@94 $generated@@201 ($generated@@95 $generated@@32)) true) (and ($generated@@55 $generated@@94 $generated@@202 ($generated@@95 $generated@@32)) true)) (and (and ($generated@@55 $generated@@94 $generated@@203 ($generated@@95 $generated)) true) (and (= 1 $generated@@25) (= (ControlFlow 0 43) 42)))))) $generated@@246)))))
$generated@@247))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
