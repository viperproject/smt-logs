(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U) T@U)
(declare-fun $generated@@19 (Int) Int)
(declare-fun $generated@@21 (T@T T@U) T@U)
(declare-fun $generated@@24 (T@T T@U) T@U)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@28 () Int)
(declare-fun $generated@@29 (Int Int) Bool)
(declare-fun $generated@@30 (Int Int) Bool)
(declare-fun $generated@@35 (Int Int) Bool)
(declare-fun $generated@@36 (Int Int) Bool)
(declare-fun $generated@@41 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@100 (Int Int) Int)
(declare-fun $generated@@108 (T@T T@U T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (= ($generated@@18 $generated) $generated@@0))
(assert (forall (($generated@@20 Int) ) (! (= ($generated@@19 $generated@@20) $generated@@20)
 :pattern ( ($generated@@19 $generated@@20))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@T) ) (! (= ($generated@@21 $generated@@23 $generated@@22) $generated@@22)
 :pattern ( ($generated@@21 $generated@@23 $generated@@22))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@T) ) (! (= ($generated@@25 $generated@@27 ($generated@@24 $generated@@27 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@24 $generated@@27 $generated@@26))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@31 Int) ($generated@@32 Int) ) (!  (=> (or ($generated@@30 $generated@@31 $generated@@32) (and (< 0 $generated@@28) (and (and (and (<= ($generated@@19 10) $generated@@31) (< $generated@@31 180)) (< 180 220)) (<= ($generated@@19 220) $generated@@32)))) (= ($generated@@29 $generated@@31 $generated@@32)  (and (and (and (and (and (< 0 2) (<= ($generated@@19 2) ($generated@@19 2))) (< 2 $generated@@31)) (or (not (= $generated@@31 200)) (not true))) (< 200 $generated@@32)) (< $generated@@32 (+ $generated@@32 1)))))
 :pattern ( ($generated@@29 $generated@@31 $generated@@32))
))))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@33 Int) ($generated@@34 Int) ) (!  (=> (or ($generated@@30 ($generated@@19 $generated@@33) ($generated@@19 $generated@@34)) (and (< 0 $generated@@28) (and (and (and (<= ($generated@@19 10) ($generated@@19 $generated@@33)) (< $generated@@33 180)) (< 180 220)) (<= ($generated@@19 220) ($generated@@19 $generated@@34))))) (= ($generated@@29 ($generated@@19 $generated@@33) ($generated@@19 $generated@@34))  (and (and (and (and (and (< 0 2) (<= ($generated@@19 2) ($generated@@19 2))) (< 2 $generated@@33)) (or (not (= $generated@@33 200)) (not true))) (< 200 $generated@@34)) (< $generated@@34 (+ $generated@@34 1)))))
 :weight 3
 :pattern ( ($generated@@29 ($generated@@19 $generated@@33) ($generated@@19 $generated@@34)))
))))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@37 Int) ($generated@@38 Int) ) (!  (=> (or ($generated@@36 $generated@@37 $generated@@38) (and (< 0 $generated@@28) (and (and (and (>= $generated@@38 ($generated@@19 220)) (> 220 180)) (> 180 $generated@@37)) (>= $generated@@37 ($generated@@19 10))))) (= ($generated@@35 $generated@@37 $generated@@38)  (and (and (and (and (and (> (+ $generated@@38 1) $generated@@38) (> $generated@@38 200)) (or (not (= 200 $generated@@37)) (not true))) (> $generated@@37 2)) (>= ($generated@@19 2) ($generated@@19 2))) (> 2 0))))
 :pattern ( ($generated@@35 $generated@@37 $generated@@38))
))))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@24 $generated@@40 ($generated@@25 $generated@@40 $generated@@39)) $generated@@39)
 :pattern ( ($generated@@25 $generated@@40 $generated@@39))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@41 $generated@@52 $generated@@53 $generated@@54 ($generated@@48 $generated@@52 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@58 $generated@@55) $generated@@57 $generated@@58) $generated@@55)
 :weight 0
)) (and (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (or (= $generated@@64 $generated@@66) (= ($generated@@41 $generated@@59 $generated@@60 $generated@@61 ($generated@@48 $generated@@59 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@65 $generated@@62) $generated@@66 $generated@@67) ($generated@@41 $generated@@59 $generated@@60 $generated@@61 $generated@@63 $generated@@66 $generated@@67)))
 :weight 0
)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (or (= $generated@@74 $generated@@76) (= ($generated@@41 $generated@@68 $generated@@69 $generated@@70 ($generated@@48 $generated@@68 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@74 $generated@@71) $generated@@75 $generated@@76) ($generated@@41 $generated@@68 $generated@@69 $generated@@70 $generated@@72 $generated@@75 $generated@@76)))
 :weight 0
)))) (= ($generated@@2 $generated@@42) 3)) (= ($generated@@2 $generated@@43) 4)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@45 $generated@@77 $generated@@78 ($generated@@49 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@79) $generated@@81) $generated@@79)
 :weight 0
))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (or (= $generated@@86 $generated@@87) (= ($generated@@45 $generated@@82 $generated@@83 ($generated@@49 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@84) $generated@@87) ($generated@@45 $generated@@82 $generated@@83 $generated@@85 $generated@@87)))
 :weight 0
))) (= ($generated@@2 $generated@@46) 5)) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@2 ($generated@@47 $generated@@88 $generated@@89)) 6))) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@47 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@51 ($generated@@47 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@47 $generated@@92 $generated@@93))
))))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 Bool) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@7 ($generated@@41 $generated@@42 $generated@@43 $generated@@3 ($generated@@44 $generated@@94 $generated@@95 $generated@@96 $generated@@97) $generated@@98 $generated@@99))  (=> (and (or (not (= $generated@@98 $generated@@94)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@45 $generated@@43 $generated@@46 ($generated@@45 $generated@@42 ($generated@@47 $generated@@43 $generated@@46) $generated@@95 $generated@@98) $generated@@96)))) $generated@@97))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 $generated@@3 ($generated@@44 $generated@@94 $generated@@95 $generated@@96 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 Int) ($generated@@102 Int) ) (! (= ($generated@@100 $generated@@101 $generated@@102) (* $generated@@101 $generated@@102))
 :pattern ( ($generated@@100 $generated@@101 $generated@@102))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@103 Int) ($generated@@104 Int) ) (!  (=> (or ($generated@@36 ($generated@@19 $generated@@103) ($generated@@19 $generated@@104)) (and (< 0 $generated@@28) (and (and (and (>= ($generated@@19 $generated@@104) ($generated@@19 220)) (> 220 180)) (> 180 $generated@@103)) (>= ($generated@@19 $generated@@103) ($generated@@19 10))))) (= ($generated@@35 ($generated@@19 $generated@@103) ($generated@@19 $generated@@104))  (and (and (and (and (and (> (+ $generated@@104 1) $generated@@104) (> $generated@@104 200)) (or (not (= 200 $generated@@103)) (not true))) (> $generated@@103 2)) (>= ($generated@@19 2) ($generated@@19 2))) (> 2 0))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@19 $generated@@103) ($generated@@19 $generated@@104)))
))))
(assert (forall (($generated@@105 Int) ) (! (= ($generated@@25 $generated@@4 ($generated@@8 ($generated@@19 $generated@@105))) ($generated@@21 $generated@@46 ($generated@@25 $generated@@4 ($generated@@8 $generated@@105))))
 :pattern ( ($generated@@25 $generated@@4 ($generated@@8 ($generated@@19 $generated@@105))))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@25 $generated@@107 ($generated@@21 $generated@@107 $generated@@106)) ($generated@@21 $generated@@46 ($generated@@25 $generated@@107 $generated@@106)))
 :pattern ( ($generated@@25 $generated@@107 ($generated@@21 $generated@@107 $generated@@106)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! ($generated@@108 $generated@@4 $generated@@110 $generated $generated@@109)
 :pattern ( ($generated@@108 $generated@@4 $generated@@110 $generated $generated@@109))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@111 () Int)
(declare-fun $generated@@112 () Int)
(declare-fun $generated@@113 () T@U)
(declare-fun $generated@@114 () T@U)
(declare-fun $generated@@115 () T@U)
(declare-fun $generated@@116 (T@U) Bool)
(declare-fun $generated@@117 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 42) (let (($generated@@118  (and (=> (= (ControlFlow 0 2) (- 0 8)) (<= $generated@@111 (+ $generated@@111 $generated@@112))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (not (= (+ $generated@@111 $generated@@112) (+ (+ $generated@@112 $generated@@111) 1))) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (< (+ (+ $generated@@112 $generated@@111) 1) (+ (+ $generated@@112 $generated@@112) $generated@@111))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= (+ (+ $generated@@112 $generated@@112) $generated@@111) (+ (+ $generated@@111 $generated@@111) $generated@@112))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (< (+ (+ $generated@@111 $generated@@111) $generated@@112) (+ (+ (+ $generated@@112 $generated@@112) $generated@@111) $generated@@111))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= (+ (+ (+ $generated@@112 $generated@@112) $generated@@111) $generated@@111) (+ ($generated@@100 ($generated@@19 2) $generated@@112) ($generated@@100 ($generated@@19 2) $generated@@111)))) (=> (= (ControlFlow 0 2) (- 0 1)) (= (+ ($generated@@100 ($generated@@19 2) $generated@@112) ($generated@@100 ($generated@@19 2) $generated@@111)) ($generated@@100 ($generated@@19 2) (+ $generated@@112 $generated@@111))))))))))))
(let (($generated@@119  (=> (and (not (and (and (and (and (and (<= $generated@@111 (+ $generated@@111 $generated@@112)) (or (not (= (+ $generated@@111 $generated@@112) (+ (+ $generated@@112 $generated@@111) 1))) (not true))) (< (+ (+ $generated@@112 $generated@@111) 1) (+ (+ $generated@@112 $generated@@112) $generated@@111))) (<= (+ (+ $generated@@112 $generated@@112) $generated@@111) (+ (+ $generated@@111 $generated@@111) $generated@@112))) (< (+ (+ $generated@@111 $generated@@111) $generated@@112) (+ (+ (+ $generated@@112 $generated@@112) $generated@@111) $generated@@111))) (= (+ (+ (+ $generated@@112 $generated@@112) $generated@@111) $generated@@111) (+ ($generated@@100 ($generated@@19 2) $generated@@112) ($generated@@100 ($generated@@19 2) $generated@@111))))) (= (ControlFlow 0 10) 2)) $generated@@118)))
(let (($generated@@120  (=> (and (and (and (and (and (and (<= $generated@@111 (+ $generated@@111 $generated@@112)) (or (not (= (+ $generated@@111 $generated@@112) (+ (+ $generated@@112 $generated@@111) 1))) (not true))) (< (+ (+ $generated@@112 $generated@@111) 1) (+ (+ $generated@@112 $generated@@112) $generated@@111))) (<= (+ (+ $generated@@112 $generated@@112) $generated@@111) (+ (+ $generated@@111 $generated@@111) $generated@@112))) (< (+ (+ $generated@@111 $generated@@111) $generated@@112) (+ (+ (+ $generated@@112 $generated@@112) $generated@@111) $generated@@111))) (= (+ (+ (+ $generated@@112 $generated@@112) $generated@@111) $generated@@111) (+ ($generated@@100 ($generated@@19 2) $generated@@112) ($generated@@100 ($generated@@19 2) $generated@@111)))) (= (ControlFlow 0 9) 2)) $generated@@118)))
(let (($generated@@121  (=> (not (and (and (and (and (<= $generated@@111 (+ $generated@@111 $generated@@112)) (or (not (= (+ $generated@@111 $generated@@112) (+ (+ $generated@@112 $generated@@111) 1))) (not true))) (< (+ (+ $generated@@112 $generated@@111) 1) (+ (+ $generated@@112 $generated@@112) $generated@@111))) (<= (+ (+ $generated@@112 $generated@@112) $generated@@111) (+ (+ $generated@@111 $generated@@111) $generated@@112))) (< (+ (+ $generated@@111 $generated@@111) $generated@@112) (+ (+ (+ $generated@@112 $generated@@112) $generated@@111) $generated@@111)))) (and (=> (= (ControlFlow 0 12) 9) $generated@@120) (=> (= (ControlFlow 0 12) 10) $generated@@119)))))
(let (($generated@@122  (=> (and (and (and (and (<= $generated@@111 (+ $generated@@111 $generated@@112)) (or (not (= (+ $generated@@111 $generated@@112) (+ (+ $generated@@112 $generated@@111) 1))) (not true))) (< (+ (+ $generated@@112 $generated@@111) 1) (+ (+ $generated@@112 $generated@@112) $generated@@111))) (<= (+ (+ $generated@@112 $generated@@112) $generated@@111) (+ (+ $generated@@111 $generated@@111) $generated@@112))) (< (+ (+ $generated@@111 $generated@@111) $generated@@112) (+ (+ (+ $generated@@112 $generated@@112) $generated@@111) $generated@@111))) (and (=> (= (ControlFlow 0 11) 9) $generated@@120) (=> (= (ControlFlow 0 11) 10) $generated@@119)))))
(let (($generated@@123  (=> (not (and (and (and (<= $generated@@111 (+ $generated@@111 $generated@@112)) (or (not (= (+ $generated@@111 $generated@@112) (+ (+ $generated@@112 $generated@@111) 1))) (not true))) (< (+ (+ $generated@@112 $generated@@111) 1) (+ (+ $generated@@112 $generated@@112) $generated@@111))) (<= (+ (+ $generated@@112 $generated@@112) $generated@@111) (+ (+ $generated@@111 $generated@@111) $generated@@112)))) (and (=> (= (ControlFlow 0 14) 11) $generated@@122) (=> (= (ControlFlow 0 14) 12) $generated@@121)))))
(let (($generated@@124  (=> (and (and (and (<= $generated@@111 (+ $generated@@111 $generated@@112)) (or (not (= (+ $generated@@111 $generated@@112) (+ (+ $generated@@112 $generated@@111) 1))) (not true))) (< (+ (+ $generated@@112 $generated@@111) 1) (+ (+ $generated@@112 $generated@@112) $generated@@111))) (<= (+ (+ $generated@@112 $generated@@112) $generated@@111) (+ (+ $generated@@111 $generated@@111) $generated@@112))) (and (=> (= (ControlFlow 0 13) 11) $generated@@122) (=> (= (ControlFlow 0 13) 12) $generated@@121)))))
(let (($generated@@125  (=> (not (and (and (<= $generated@@111 (+ $generated@@111 $generated@@112)) (or (not (= (+ $generated@@111 $generated@@112) (+ (+ $generated@@112 $generated@@111) 1))) (not true))) (< (+ (+ $generated@@112 $generated@@111) 1) (+ (+ $generated@@112 $generated@@112) $generated@@111)))) (and (=> (= (ControlFlow 0 16) 13) $generated@@124) (=> (= (ControlFlow 0 16) 14) $generated@@123)))))
(let (($generated@@126  (=> (and (and (<= $generated@@111 (+ $generated@@111 $generated@@112)) (or (not (= (+ $generated@@111 $generated@@112) (+ (+ $generated@@112 $generated@@111) 1))) (not true))) (< (+ (+ $generated@@112 $generated@@111) 1) (+ (+ $generated@@112 $generated@@112) $generated@@111))) (and (=> (= (ControlFlow 0 15) 13) $generated@@124) (=> (= (ControlFlow 0 15) 14) $generated@@123)))))
(let (($generated@@127  (=> (not (and (<= $generated@@111 (+ $generated@@111 $generated@@112)) (or (not (= (+ $generated@@111 $generated@@112) (+ (+ $generated@@112 $generated@@111) 1))) (not true)))) (and (=> (= (ControlFlow 0 18) 15) $generated@@126) (=> (= (ControlFlow 0 18) 16) $generated@@125)))))
(let (($generated@@128  (=> (and (<= $generated@@111 (+ $generated@@111 $generated@@112)) (or (not (= (+ $generated@@111 $generated@@112) (+ (+ $generated@@112 $generated@@111) 1))) (not true))) (and (=> (= (ControlFlow 0 17) 15) $generated@@126) (=> (= (ControlFlow 0 17) 16) $generated@@125)))))
(let (($generated@@129  (=> (< (+ $generated@@111 $generated@@112) $generated@@111) (and (=> (= (ControlFlow 0 20) 17) $generated@@128) (=> (= (ControlFlow 0 20) 18) $generated@@127)))))
(let (($generated@@130  (=> (<= $generated@@111 (+ $generated@@111 $generated@@112)) (and (=> (= (ControlFlow 0 19) 17) $generated@@128) (=> (= (ControlFlow 0 19) 18) $generated@@127)))))
(let (($generated@@131  (=> (= $generated@@113 ($generated@@44 $generated@@114 $generated@@115 $generated@@1 false)) (=> (and ($generated@@108 $generated@@4 ($generated@@8 $generated@@111) $generated $generated@@115) ($generated@@108 $generated@@4 ($generated@@8 $generated@@112) $generated $generated@@115)) (and (=> (= (ControlFlow 0 21) (- 0 41)) (<= ($generated@@19 10) $generated@@111)) (and (=> (= (ControlFlow 0 21) (- 0 40)) (< $generated@@111 180)) (and (=> (= (ControlFlow 0 21) (- 0 39)) ($generated@@7 ($generated@@21 $generated@@3 ($generated@@6 (< 180 220))))) (and (=> (= (ControlFlow 0 21) (- 0 38)) (<= ($generated@@19 220) $generated@@112)) (=> (and ($generated@@30 $generated@@111 $generated@@112) ($generated@@30 $generated@@111 $generated@@112)) (and (=> (= (ControlFlow 0 21) (- 0 37)) (=> ($generated@@30 $generated@@111 $generated@@112) (or ($generated@@29 $generated@@111 $generated@@112) ($generated@@7 ($generated@@21 $generated@@3 ($generated@@6 (< 0 2))))))) (and (=> (= (ControlFlow 0 21) (- 0 36)) (=> ($generated@@30 $generated@@111 $generated@@112) (or ($generated@@29 $generated@@111 $generated@@112) (<= ($generated@@19 2) ($generated@@19 2))))) (and (=> (= (ControlFlow 0 21) (- 0 35)) (=> ($generated@@30 $generated@@111 $generated@@112) (or ($generated@@29 $generated@@111 $generated@@112) (< 2 $generated@@111)))) (and (=> (= (ControlFlow 0 21) (- 0 34)) (=> ($generated@@30 $generated@@111 $generated@@112) (or ($generated@@29 $generated@@111 $generated@@112) (or (not (= $generated@@111 200)) (not true))))) (and (=> (= (ControlFlow 0 21) (- 0 33)) (=> ($generated@@30 $generated@@111 $generated@@112) (or ($generated@@29 $generated@@111 $generated@@112) (< 200 $generated@@112)))) (and (=> (= (ControlFlow 0 21) (- 0 32)) (=> ($generated@@30 $generated@@111 $generated@@112) (or ($generated@@29 $generated@@111 $generated@@112) (< $generated@@112 (+ $generated@@112 1))))) (=> ($generated@@29 $generated@@111 $generated@@112) (=> (and ($generated@@108 $generated@@4 ($generated@@8 $generated@@111) $generated $generated@@115) ($generated@@108 $generated@@4 ($generated@@8 $generated@@112) $generated $generated@@115)) (and (=> (= (ControlFlow 0 21) (- 0 31)) (>= $generated@@112 ($generated@@19 220))) (and (=> (= (ControlFlow 0 21) (- 0 30)) ($generated@@7 ($generated@@21 $generated@@3 ($generated@@6 (> 220 180))))) (and (=> (= (ControlFlow 0 21) (- 0 29)) (> 180 $generated@@111)) (and (=> (= (ControlFlow 0 21) (- 0 28)) (>= $generated@@111 ($generated@@19 10))) (=> (and ($generated@@36 $generated@@111 $generated@@112) ($generated@@36 $generated@@111 $generated@@112)) (and (=> (= (ControlFlow 0 21) (- 0 27)) (=> ($generated@@36 $generated@@111 $generated@@112) (or ($generated@@35 $generated@@111 $generated@@112) (> (+ $generated@@112 1) $generated@@112)))) (and (=> (= (ControlFlow 0 21) (- 0 26)) (=> ($generated@@36 $generated@@111 $generated@@112) (or ($generated@@35 $generated@@111 $generated@@112) (> $generated@@112 200)))) (and (=> (= (ControlFlow 0 21) (- 0 25)) (=> ($generated@@36 $generated@@111 $generated@@112) (or ($generated@@35 $generated@@111 $generated@@112) (or (not (= 200 $generated@@111)) (not true))))) (and (=> (= (ControlFlow 0 21) (- 0 24)) (=> ($generated@@36 $generated@@111 $generated@@112) (or ($generated@@35 $generated@@111 $generated@@112) (> $generated@@111 2)))) (and (=> (= (ControlFlow 0 21) (- 0 23)) (=> ($generated@@36 $generated@@111 $generated@@112) (or ($generated@@35 $generated@@111 $generated@@112) (>= ($generated@@19 2) ($generated@@19 2))))) (and (=> (= (ControlFlow 0 21) (- 0 22)) (=> ($generated@@36 $generated@@111 $generated@@112) (or ($generated@@35 $generated@@111 $generated@@112) ($generated@@7 ($generated@@21 $generated@@3 ($generated@@6 (> 2 0))))))) (=> ($generated@@35 $generated@@111 $generated@@112) (and (=> (= (ControlFlow 0 21) 19) $generated@@130) (=> (= (ControlFlow 0 21) 20) $generated@@129)))))))))))))))))))))))))))))))
(let (($generated@@132  (=> (and (and (and ($generated@@116 $generated@@115) ($generated@@117 $generated@@115)) (and (= 1 $generated@@28) (<= ($generated@@19 80) $generated@@111))) (and (and (< $generated@@111 150) (<= ($generated@@19 250) $generated@@112)) (and (< $generated@@112 1000) (= (ControlFlow 0 42) 21)))) $generated@@131)))
$generated@@132))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
