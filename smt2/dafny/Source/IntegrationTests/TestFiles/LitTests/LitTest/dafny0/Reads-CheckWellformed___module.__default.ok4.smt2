(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@88 () Int)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@97 (T@U T@U T@U) Bool)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@2) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@30 $generated@@2) $generated@@3))
(assert (= ($generated@@31 $generated@@32) $generated@@4))
(assert (= ($generated@@12 $generated@@34) 3))
(assert (forall (($generated@@38 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@38 $generated@@35)  (or (= $generated@@38 $generated@@36) (= ($generated@@37 $generated@@38) $generated@@35)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@38 $generated@@35))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@41 $generated@@40 $generated@@42) ($generated@@39 $generated@@34 $generated@@41 $generated@@35 $generated@@42))
 :pattern ( ($generated@@39 $generated@@34 $generated@@41 $generated@@40 $generated@@42))
 :pattern ( ($generated@@39 $generated@@34 $generated@@41 $generated@@35 $generated@@42))
)))
(assert (= ($generated@@12 $generated@@43) 4))
(assert ($generated@@33 $generated@@43 $generated@@32 $generated@@44))
(assert (= ($generated@@28 $generated@@45) 0))
(assert (= ($generated@@46 $generated@@8 $generated@@11) $generated@@45))
(assert  (not ($generated@@47 $generated@@45)))
(assert  (and (and (and (and (and (and (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@49 $generated@@56 $generated@@57 ($generated@@53 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@60) $generated@@58)
 :weight 0
)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (= $generated@@65 $generated@@66) (= ($generated@@49 $generated@@61 $generated@@62 ($generated@@53 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@66) ($generated@@49 $generated@@61 $generated@@62 $generated@@64 $generated@@66)))
 :weight 0
))) (= ($generated@@12 $generated@@50) 5)) (= ($generated@@12 $generated@@51) 6)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (= ($generated@@12 ($generated@@52 $generated@@67 $generated@@68)) 7))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@54 ($generated@@52 $generated@@69 $generated@@70)) $generated@@69)
 :pattern ( ($generated@@52 $generated@@69 $generated@@70))
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@52 $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@73 $generated@@35 $generated@@74)  (or (= $generated@@73 $generated@@36) ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@74 $generated@@73) $generated@@2)))))
 :pattern ( ($generated@@39 $generated@@34 $generated@@73 $generated@@35 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 ($generated@@48 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@48 $generated@@80 $generated@@79))
)))
(assert (= ($generated@@12 $generated@@81) 8))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@33 $generated@@81 $generated@@85 ($generated@@82 $generated@@86)) (forall (($generated@@87 T@U) ) (!  (=> ($generated@@83 $generated@@85 $generated@@87) ($generated@@84 $generated@@87 $generated@@86))
 :pattern ( ($generated@@83 $generated@@85 $generated@@87))
)))
 :pattern ( ($generated@@33 $generated@@81 $generated@@85 ($generated@@82 $generated@@86)))
)))
(assert ($generated@@47 $generated@@2))
(assert  (=> (<= 1 $generated@@88) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (or ($generated@@90 $generated@@92 $generated@@93 $generated@@94) (and (< 1 $generated@@88) (and (and (and ($generated@@91 $generated@@92) (and ($generated@@33 $generated@@34 $generated@@93 $generated@@40) ($generated@@39 $generated@@34 $generated@@93 $generated@@40 $generated@@92))) (and ($generated@@33 $generated@@81 $generated@@94 ($generated@@82 $generated@@40)) ($generated@@39 $generated@@81 $generated@@94 ($generated@@82 $generated@@40) $generated@@92))) (=> ($generated@@83 $generated@@94 ($generated@@78 $generated@@34 $generated@@93)) (> ($generated@@19 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@92 $generated@@93) $generated@@45))) 0))))) ($generated@@33 $generated@@43 ($generated@@89 $generated@@92 $generated@@93 $generated@@94) $generated@@44))
 :pattern ( ($generated@@89 $generated@@92 $generated@@93 $generated@@94))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and (and ($generated@@91 $generated@@95) (and (or (not (= $generated@@96 $generated@@36)) (not true)) (= ($generated@@37 $generated@@96) $generated@@35))) ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@95 $generated@@96) $generated@@2)))) ($generated@@39 $generated@@14 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@95 $generated@@96) $generated@@45)) $generated $generated@@95))
 :pattern ( ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@95 $generated@@96) $generated@@45)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@97 ($generated@@78 $generated@@101 $generated@@98) $generated@@99 $generated@@100) ($generated@@39 $generated@@101 $generated@@98 $generated@@99 $generated@@100))
 :pattern ( ($generated@@97 ($generated@@78 $generated@@101 $generated@@98) $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@84 $generated@@102 $generated@@44) (and (= ($generated@@78 $generated@@43 ($generated@@48 $generated@@43 $generated@@102)) $generated@@102) ($generated@@33 $generated@@43 ($generated@@48 $generated@@43 $generated@@102) $generated@@44)))
 :pattern ( ($generated@@84 $generated@@102 $generated@@44))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@84 $generated@@103 $generated@@40) (and (= ($generated@@78 $generated@@34 ($generated@@48 $generated@@34 $generated@@103)) $generated@@103) ($generated@@33 $generated@@34 ($generated@@48 $generated@@34 $generated@@103) $generated@@40)))
 :pattern ( ($generated@@84 $generated@@103 $generated@@40))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@84 $generated@@104 $generated@@35) (and (= ($generated@@78 $generated@@34 ($generated@@48 $generated@@34 $generated@@104)) $generated@@104) ($generated@@33 $generated@@34 ($generated@@48 $generated@@34 $generated@@104) $generated@@35)))
 :pattern ( ($generated@@84 $generated@@104 $generated@@35))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@105 $generated@@40)  (and ($generated@@33 $generated@@34 $generated@@105 $generated@@35) (or (not (= $generated@@105 $generated@@36)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@105 $generated@@40))
 :pattern ( ($generated@@33 $generated@@34 $generated@@105 $generated@@35))
)))
(assert  (=> (<= 1 $generated@@88) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (or ($generated@@90 $generated@@106 $generated@@107 $generated@@108) (and (< 1 $generated@@88) (and (and (and ($generated@@91 $generated@@106) ($generated@@33 $generated@@34 $generated@@107 $generated@@40)) ($generated@@33 $generated@@81 $generated@@108 ($generated@@82 $generated@@40))) (=> ($generated@@83 $generated@@108 ($generated@@78 $generated@@34 $generated@@107)) (> ($generated@@19 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@106 $generated@@107) $generated@@45))) 0))))) (= ($generated@@89 $generated@@106 $generated@@107 $generated@@108) ($generated@@75 $generated@@43 $generated@@32)))
 :pattern ( ($generated@@89 $generated@@106 $generated@@107 $generated@@108) ($generated@@91 $generated@@106))
))))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (and (= ($generated@@109 ($generated@@46 $generated@@110 $generated@@111)) $generated@@110) (= ($generated@@30 ($generated@@46 $generated@@110 $generated@@111)) $generated@@111))
 :pattern ( ($generated@@46 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@84 $generated@@112 $generated) (and (= ($generated@@78 $generated@@14 ($generated@@48 $generated@@14 $generated@@112)) $generated@@112) ($generated@@33 $generated@@14 ($generated@@48 $generated@@14 $generated@@112) $generated)))
 :pattern ( ($generated@@84 $generated@@112 $generated))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@84 ($generated@@78 $generated@@115 $generated@@113) $generated@@114) ($generated@@33 $generated@@115 $generated@@113 $generated@@114))
 :pattern ( ($generated@@84 ($generated@@78 $generated@@115 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@39 $generated@@81 $generated@@116 ($generated@@82 $generated@@117) $generated@@118) (forall (($generated@@119 T@U) ) (!  (=> ($generated@@83 $generated@@116 $generated@@119) ($generated@@97 $generated@@119 $generated@@117 $generated@@118))
 :pattern ( ($generated@@83 $generated@@116 $generated@@119))
)))
 :pattern ( ($generated@@39 $generated@@81 $generated@@116 ($generated@@82 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@82 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@82 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@29 ($generated@@82 $generated@@122)) $generated@@1)
 :pattern ( ($generated@@82 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@48 $generated@@124 ($generated@@78 $generated@@124 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@78 $generated@@124 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@91 $generated@@125) (and (or (not (= $generated@@126 $generated@@36)) (not true)) (= ($generated@@37 $generated@@126) $generated@@35))) ($generated@@33 $generated@@14 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@125 $generated@@126) $generated@@45)) $generated))
 :pattern ( ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@125 $generated@@126) $generated@@45)))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> ($generated@@84 $generated@@127 ($generated@@82 $generated@@128)) (and (= ($generated@@78 $generated@@81 ($generated@@48 $generated@@81 $generated@@127)) $generated@@127) ($generated@@33 $generated@@81 ($generated@@48 $generated@@81 $generated@@127) ($generated@@82 $generated@@128))))
 :pattern ( ($generated@@84 $generated@@127 ($generated@@82 $generated@@128)))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and ($generated@@91 $generated@@130) ($generated@@33 $generated@@43 $generated@@129 $generated@@44)) ($generated@@39 $generated@@43 $generated@@129 $generated@@44 $generated@@130))
 :pattern ( ($generated@@39 $generated@@43 $generated@@129 $generated@@44 $generated@@130))
)))
(assert (= ($generated@@29 $generated@@44) $generated@@5))
(assert (= ($generated@@131 $generated@@44) $generated@@9))
(assert (= ($generated@@29 $generated@@40) $generated@@6))
(assert (= ($generated@@131 $generated@@40) $generated@@10))
(assert (= ($generated@@29 $generated@@35) $generated@@7))
(assert (= ($generated@@131 $generated@@35) $generated@@10))
(assert (= $generated@@32 ($generated@@75 $generated@@43 $generated@@32)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@78 $generated@@133 ($generated@@75 $generated@@133 $generated@@132)) ($generated@@75 $generated@@51 ($generated@@78 $generated@@133 $generated@@132)))
 :pattern ( ($generated@@78 $generated@@133 ($generated@@75 $generated@@133 $generated@@132)))
)))
(assert  (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@134 $generated@@137 $generated@@138 $generated@@139 ($generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@142 $generated@@143) $generated@@140)
 :weight 0
)) (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@134 $generated@@144 $generated@@145 $generated@@146 ($generated@@136 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@134 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@134 $generated@@153 $generated@@154 $generated@@155 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@134 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@17 ($generated@@134 $generated@@34 $generated@@50 $generated@@13 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@162)) (not true)) ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@163 $generated@@166) $generated@@164)))) ($generated@@83 $generated@@165 ($generated@@78 $generated@@34 $generated@@166))))
 :pattern ( ($generated@@134 $generated@@34 $generated@@50 $generated@@13 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! ($generated@@39 $generated@@14 $generated@@169 $generated $generated@@168)
 :pattern ( ($generated@@39 $generated@@14 $generated@@169 $generated $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (! ($generated@@33 $generated@@14 $generated@@170 $generated)
 :pattern ( ($generated@@33 $generated@@14 $generated@@170 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@171 () Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@178 true))
(let (($generated@@179 true))
(let (($generated@@180  (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@171) (=> $generated@@171 (and (=> (= (ControlFlow 0 3) 1) $generated@@179) (=> (= (ControlFlow 0 3) 2) $generated@@178))))))
(let (($generated@@181  (=> (=> ($generated@@83 $generated@@172 ($generated@@78 $generated@@34 $generated@@173)) (> ($generated@@19 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@174 $generated@@173) $generated@@45))) 0)) (=> (and (= $generated@@171 true) (= (ControlFlow 0 7) 3)) $generated@@180))))
(let (($generated@@182  (=> ($generated@@83 $generated@@172 ($generated@@78 $generated@@34 $generated@@173)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= $generated@@173 $generated@@36)) (not true))) (=> (or (not (= $generated@@173 $generated@@36)) (not true)) (=> (and (and (= $generated@@175 ($generated@@17 ($generated@@134 $generated@@34 $generated@@50 $generated@@13 $generated@@176 $generated@@173 $generated@@45))) (> ($generated@@19 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@174 $generated@@173) $generated@@45))) 0)) (and (= $generated@@171 $generated@@175) (= (ControlFlow 0 5) 3))) $generated@@180))))))
(let (($generated@@183  (=> (= $generated@@176 ($generated@@135 $generated@@36 $generated@@174 $generated@@2 $generated@@172)) (and (=> (= (ControlFlow 0 8) 5) $generated@@182) (=> (= (ControlFlow 0 8) 7) $generated@@181)))))
(let (($generated@@184  (=> (and ($generated@@91 $generated@@174) ($generated@@177 $generated@@174)) (=> (and (and ($generated@@33 $generated@@34 $generated@@173 $generated@@40) ($generated@@33 $generated@@81 $generated@@172 ($generated@@82 $generated@@40))) (and (= 1 $generated@@88) (= (ControlFlow 0 9) 8))) $generated@@183))))
$generated@@184))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
