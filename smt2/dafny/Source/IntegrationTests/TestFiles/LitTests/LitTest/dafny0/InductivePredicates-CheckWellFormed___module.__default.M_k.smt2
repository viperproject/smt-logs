(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (Int) T@U)
(declare-fun $generated@@43 (T@U) Int)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@T T@U T@U) Bool)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (Int) Int)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) Int)
(declare-fun $generated@@64 (Int) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@113 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@114 (T@T T@T) T@T)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@116 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@T) T@T)
(declare-fun $generated@@118 (T@T) T@T)
(declare-fun $generated@@167 (Int Int) Int)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@27 $generated@@30 $generated@@31) (=> ($generated@@25 $generated@@28 $generated@@30 $generated@@29) ($generated@@25 $generated@@28 $generated@@31 $generated@@29)))
 :pattern ( ($generated@@25 $generated@@28 $generated@@30 $generated@@29) ($generated@@26 $generated@@30 $generated@@32) ($generated@@26 $generated@@31 $generated@@32))
))))
(assert (= ($generated@@33 $generated) $generated@@0))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and ($generated@@27 $generated@@34 $generated@@35) ($generated@@27 $generated@@35 $generated@@36)) ($generated@@27 $generated@@34 $generated@@36))
 :pattern ( ($generated@@27 $generated@@34 $generated@@35) ($generated@@27 $generated@@35 $generated@@36))
 :pattern ( ($generated@@27 $generated@@34 $generated@@35) ($generated@@27 $generated@@34 $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! ($generated@@37 $generated@@10 $generated@@39 $generated@@38 $generated@@40)
 :pattern ( ($generated@@37 $generated@@10 $generated@@39 $generated@@38 $generated@@40))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 Int) ($generated@@46 Int) ) (!  (=> (and (and (<= 0 $generated@@45) (<= 0 $generated@@46)) (<= (+ $generated@@45 $generated@@46) ($generated@@43 $generated@@44))) (= ($generated@@41 ($generated@@41 $generated@@44 ($generated@@42 $generated@@45)) ($generated@@42 $generated@@46)) ($generated@@41 $generated@@44 ($generated@@42 (+ $generated@@45 $generated@@46)))))
 :pattern ( ($generated@@41 ($generated@@41 $generated@@44 ($generated@@42 $generated@@45)) ($generated@@42 $generated@@46)))
)))
(assert (= ($generated@@47 $generated@@48) $generated@@5))
(assert (= ($generated@@8 $generated@@50) 3))
(assert ($generated@@49 $generated@@50 $generated@@48 $generated@@51))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@52 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@57 $generated@@58) (= ($generated@@47 $generated@@58) $generated@@4))
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@59 $generated@@60) (= ($generated@@47 $generated@@60) $generated@@5))
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@62 $generated@@66 $generated@@67) (and (< 2 $generated@@24) ($generated@@49 $generated@@50 $generated@@67 $generated@@51))) (and (and (=> (< 0 ($generated@@43 $generated@@66)) (=> (not (and ($generated@@57 $generated@@67) (= ($generated@@63 $generated@@67) ($generated@@52 0)))) (=> ($generated@@57 $generated@@67) (=> (<= ($generated@@52 2) ($generated@@63 $generated@@67)) ($generated@@62 ($generated@@41 $generated@@66 ($generated@@42 1)) ($generated@@64 (- ($generated@@63 $generated@@67) 2))))))) (=> (=> (< 0 ($generated@@43 $generated@@66)) (or (and ($generated@@57 $generated@@67) (= ($generated@@63 $generated@@67) ($generated@@52 0))) (and (and ($generated@@57 $generated@@67) (<= ($generated@@52 2) ($generated@@63 $generated@@67))) ($generated@@25 $generated@@65 ($generated@@41 $generated@@66 ($generated@@42 1)) ($generated@@64 (- ($generated@@63 $generated@@67) 2)))))) (=> (= ($generated@@52 0) ($generated@@43 $generated@@66)) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@26 $generated@@68 $generated@@66) ($generated@@62 $generated@@68 $generated@@67))
 :pattern ( ($generated@@25 $generated@@65 $generated@@68 $generated@@67))
))))) (= ($generated@@25 ($generated@@61 $generated@@65) $generated@@66 $generated@@67)  (and (=> (< 0 ($generated@@43 $generated@@66)) (or (and ($generated@@57 $generated@@67) (= ($generated@@63 $generated@@67) ($generated@@52 0))) (and (and ($generated@@57 $generated@@67) (<= ($generated@@52 2) ($generated@@63 $generated@@67))) ($generated@@25 $generated@@65 ($generated@@41 $generated@@66 ($generated@@42 1)) ($generated@@64 (- ($generated@@63 $generated@@67) 2)))))) (=> (= ($generated@@52 0) ($generated@@43 $generated@@66)) (exists (($generated@@69 T@U) ) (!  (and ($generated@@26 $generated@@69 $generated@@66) ($generated@@25 $generated@@65 $generated@@69 $generated@@67))
 :pattern ( ($generated@@25 $generated@@65 $generated@@69 $generated@@67))
)))))))
 :pattern ( ($generated@@25 ($generated@@61 $generated@@65) $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 ($generated@@70 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@70 $generated@@73 $generated@@72))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (and ($generated@@49 $generated@@50 $generated@@75 $generated@@51) (= $generated@@76 ($generated@@42 0))) (not ($generated@@25 $generated@@74 $generated@@76 $generated@@75)))
 :pattern ( ($generated@@25 $generated@@74 $generated@@76 $generated@@75))
))))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@59 $generated@@77) (= $generated@@77 $generated@@48))
 :pattern ( ($generated@@59 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@57 $generated@@78) (exists (($generated@@79 Int) ) (= $generated@@78 ($generated@@64 $generated@@79))))
 :pattern ( ($generated@@57 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@49 $generated@@10 $generated@@80 $generated@@38) (<= ($generated@@52 0) ($generated@@15 $generated@@80)))
 :pattern ( ($generated@@49 $generated@@10 $generated@@80 $generated@@38))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@25 ($generated@@61 $generated@@81) $generated@@82 $generated@@83) ($generated@@25 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@25 ($generated@@61 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and ($generated@@84 $generated@@86) (<= ($generated@@43 $generated@@86) ($generated@@43 $generated@@85))) (and (= ($generated@@84 ($generated@@41 $generated@@85 $generated@@86)) ($generated@@84 $generated@@85)) (= ($generated@@43 ($generated@@41 $generated@@85 $generated@@86)) (- ($generated@@43 $generated@@85) ($generated@@43 $generated@@86)))))
 :pattern ( ($generated@@41 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 Int) ) (!  (=> (<= 0 $generated@@87) (and ($generated@@84 ($generated@@42 $generated@@87)) (= ($generated@@43 ($generated@@42 $generated@@87)) $generated@@87)))
 :pattern ( ($generated@@42 $generated@@87))
)))
(assert (forall (($generated@@88 Int) ) (! (= ($generated@@49 $generated@@50 ($generated@@64 $generated@@88) $generated@@51) ($generated@@49 $generated@@10 ($generated@@14 $generated@@88) $generated@@38))
 :pattern ( ($generated@@49 $generated@@50 ($generated@@64 $generated@@88) $generated@@51))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@89 $generated@@90) (or ($generated@@57 $generated@@90) ($generated@@59 $generated@@90)))
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (or (or ($generated@@27 $generated@@91 $generated@@92) (= $generated@@91 $generated@@92)) ($generated@@27 $generated@@92 $generated@@91))
 :pattern ( ($generated@@27 $generated@@91 $generated@@92) ($generated@@27 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@26 $generated@@93 $generated@@94) ($generated@@27 $generated@@93 $generated@@94))
 :pattern ( ($generated@@26 $generated@@93 $generated@@94))
)))
(assert (= ($generated@@8 $generated@@95) 4))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (or ($generated@@62 ($generated@@54 $generated@@95 $generated@@97) $generated@@98) (and (< 2 $generated@@24) ($generated@@49 $generated@@50 $generated@@98 $generated@@51))) (and (and (=> (< 0 ($generated@@43 $generated@@97)) (=> (not (and ($generated@@57 $generated@@98) (= ($generated@@63 $generated@@98) ($generated@@52 0)))) (=> ($generated@@57 $generated@@98) (=> (<= ($generated@@52 2) ($generated@@63 $generated@@98)) ($generated@@62 ($generated@@41 $generated@@97 ($generated@@42 1)) ($generated@@64 (- ($generated@@63 $generated@@98) 2))))))) (=> (=> (< 0 ($generated@@43 $generated@@97)) (or (and ($generated@@57 $generated@@98) (= ($generated@@63 $generated@@98) ($generated@@52 0))) (and (and ($generated@@57 $generated@@98) (<= ($generated@@52 2) ($generated@@63 $generated@@98))) ($generated@@25 ($generated@@61 $generated@@96) ($generated@@41 $generated@@97 ($generated@@42 1)) ($generated@@64 (- ($generated@@63 $generated@@98) 2)))))) (=> (= ($generated@@52 0) ($generated@@43 $generated@@97)) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@26 $generated@@99 $generated@@97) ($generated@@62 $generated@@99 $generated@@98))
 :pattern ( ($generated@@25 ($generated@@61 $generated@@96) $generated@@99 $generated@@98))
))))) (= ($generated@@25 ($generated@@61 $generated@@96) ($generated@@54 $generated@@95 $generated@@97) $generated@@98)  (and (=> (< 0 ($generated@@43 $generated@@97)) (or (and ($generated@@57 $generated@@98) (= ($generated@@63 $generated@@98) ($generated@@52 0))) (and (and ($generated@@57 $generated@@98) (<= ($generated@@52 2) ($generated@@63 $generated@@98))) ($generated@@25 ($generated@@61 $generated@@96) ($generated@@41 $generated@@97 ($generated@@42 1)) ($generated@@64 (- ($generated@@63 $generated@@98) 2)))))) (=> (= ($generated@@52 0) ($generated@@43 $generated@@97)) (exists (($generated@@100 T@U) ) (!  (and ($generated@@26 $generated@@100 $generated@@97) ($generated@@25 ($generated@@61 $generated@@96) $generated@@100 $generated@@98))
 :pattern ( ($generated@@25 ($generated@@61 $generated@@96) $generated@@100 $generated@@98))
)))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@61 $generated@@96) ($generated@@54 $generated@@95 $generated@@97) $generated@@98))
))))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@49 $generated@@50 $generated@@101 $generated@@51) (or ($generated@@57 $generated@@101) ($generated@@59 $generated@@101)))
 :pattern ( ($generated@@59 $generated@@101) ($generated@@49 $generated@@50 $generated@@101 $generated@@51))
 :pattern ( ($generated@@57 $generated@@101) ($generated@@49 $generated@@50 $generated@@101 $generated@@51))
)))
(assert (forall (($generated@@102 T@U) ) (! (<= 0 ($generated@@43 $generated@@102))
 :pattern ( ($generated@@43 $generated@@102))
)))
(assert (forall (($generated@@103 Int) ) (! (= ($generated@@47 ($generated@@64 $generated@@103)) $generated@@4)
 :pattern ( ($generated@@64 $generated@@103))
)))
(assert (forall (($generated@@104 Int) ) (! (= ($generated@@63 ($generated@@64 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@64 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@70 $generated@@106 ($generated@@71 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@71 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (and (and (and (=> ($generated@@27 $generated@@107 $generated@@108) (or (not (= $generated@@107 $generated@@108)) (not true))) (=> (and ($generated@@84 $generated@@107) (not ($generated@@84 $generated@@108))) ($generated@@27 $generated@@107 $generated@@108))) (=> (and ($generated@@84 $generated@@107) ($generated@@84 $generated@@108)) (= ($generated@@27 $generated@@107 $generated@@108) (< ($generated@@43 $generated@@107) ($generated@@43 $generated@@108))))) (=> (and ($generated@@27 $generated@@107 $generated@@108) ($generated@@84 $generated@@108)) ($generated@@84 $generated@@107)))
 :pattern ( ($generated@@27 $generated@@107 $generated@@108))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@109 $generated@@119 $generated@@120 $generated@@121 ($generated@@115 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@124 $generated@@125) $generated@@122)
 :weight 0
)) (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@109 $generated@@126 $generated@@127 $generated@@128 ($generated@@115 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@109 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@109 $generated@@135 $generated@@136 $generated@@137 ($generated@@115 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@109 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)))) (= ($generated@@8 $generated@@110) 5)) (= ($generated@@8 $generated@@111) 6)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@113 $generated@@144 $generated@@145 ($generated@@116 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@146) $generated@@148) $generated@@146)
 :weight 0
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@153 $generated@@154) (= ($generated@@113 $generated@@149 $generated@@150 ($generated@@116 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@113 $generated@@149 $generated@@150 $generated@@152 $generated@@154)))
 :weight 0
))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@8 ($generated@@114 $generated@@155 $generated@@156)) 7))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@117 ($generated@@114 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@114 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@118 ($generated@@114 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@114 $generated@@159 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@13 ($generated@@109 $generated@@110 $generated@@111 $generated@@9 ($generated@@112 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))  (=> (and (or (not (= $generated@@165 $generated@@161)) (not true)) ($generated@@13 ($generated@@70 $generated@@9 ($generated@@113 $generated@@111 $generated@@95 ($generated@@113 $generated@@110 ($generated@@114 $generated@@111 $generated@@95) $generated@@162 $generated@@165) $generated@@163)))) $generated@@164))
 :pattern ( ($generated@@109 $generated@@110 $generated@@111 $generated@@9 ($generated@@112 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 Int) ($generated@@169 Int) ) (! (= ($generated@@167 $generated@@168 $generated@@169) (mod $generated@@168 $generated@@169))
 :pattern ( ($generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> ($generated@@84 $generated@@170) (= $generated@@170 ($generated@@42 ($generated@@43 $generated@@170))))
 :pattern ( ($generated@@43 $generated@@170))
 :pattern ( ($generated@@84 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@171 $generated@@173) ($generated@@49 $generated@@50 $generated@@172 $generated@@51)) ($generated@@37 $generated@@50 $generated@@172 $generated@@51 $generated@@173))
 :pattern ( ($generated@@37 $generated@@50 $generated@@172 $generated@@51 $generated@@173))
)))
(assert (= ($generated@@33 $generated@@38) $generated@@2))
(assert (= ($generated@@174 $generated@@38) $generated@@6))
(assert (= ($generated@@33 $generated@@51) $generated@@3))
(assert (= ($generated@@174 $generated@@51) $generated@@7))
(assert (= $generated@@48 ($generated@@54 $generated@@50 $generated@@48)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and ($generated@@84 $generated@@176) (<= ($generated@@43 $generated@@176) ($generated@@43 $generated@@175))) (or (and (= $generated@@176 ($generated@@42 0)) (= ($generated@@41 $generated@@175 $generated@@176) $generated@@175)) (and (or (not (= $generated@@176 ($generated@@42 0))) (not true)) ($generated@@27 ($generated@@41 $generated@@175 $generated@@176) $generated@@175))))
 :pattern ( ($generated@@41 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and ($generated@@171 $generated@@178) (and ($generated@@57 $generated@@177) ($generated@@37 $generated@@50 $generated@@177 $generated@@51 $generated@@178))) ($generated@@37 $generated@@10 ($generated@@14 ($generated@@63 $generated@@177)) $generated@@38 $generated@@178))
 :pattern ( ($generated@@37 $generated@@10 ($generated@@14 ($generated@@63 $generated@@177)) $generated@@38 $generated@@178))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@71 $generated@@10 ($generated@@14 ($generated@@52 $generated@@179))) ($generated@@54 $generated@@95 ($generated@@71 $generated@@10 ($generated@@14 $generated@@179))))
 :pattern ( ($generated@@71 $generated@@10 ($generated@@14 ($generated@@52 $generated@@179))))
)))
(assert (forall (($generated@@180 Int) ) (! (= ($generated@@64 ($generated@@52 $generated@@180)) ($generated@@54 $generated@@50 ($generated@@64 $generated@@180)))
 :pattern ( ($generated@@64 ($generated@@52 $generated@@180)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@T) ) (! (= ($generated@@71 $generated@@182 ($generated@@54 $generated@@182 $generated@@181)) ($generated@@54 $generated@@95 ($generated@@71 $generated@@182 $generated@@181)))
 :pattern ( ($generated@@71 $generated@@182 ($generated@@54 $generated@@182 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! ($generated@@37 $generated@@95 $generated@@184 $generated $generated@@183)
 :pattern ( ($generated@@37 $generated@@95 $generated@@184 $generated $generated@@183))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (or ($generated@@62 ($generated@@54 $generated@@95 $generated@@186) ($generated@@54 $generated@@50 $generated@@187)) (and (< 2 $generated@@24) ($generated@@49 $generated@@50 $generated@@187 $generated@@51))) (and (and (=> (< 0 ($generated@@43 $generated@@186)) (=> (not (and ($generated@@57 ($generated@@54 $generated@@50 $generated@@187)) (= ($generated@@52 ($generated@@63 ($generated@@54 $generated@@50 $generated@@187))) ($generated@@52 0)))) (=> ($generated@@13 ($generated@@54 $generated@@9 ($generated@@12 ($generated@@57 ($generated@@54 $generated@@50 $generated@@187))))) (=> (<= ($generated@@52 2) ($generated@@52 ($generated@@63 ($generated@@54 $generated@@50 $generated@@187)))) ($generated@@62 ($generated@@41 $generated@@186 ($generated@@42 1)) ($generated@@54 $generated@@50 ($generated@@64 ($generated@@52 (- ($generated@@63 ($generated@@54 $generated@@50 $generated@@187)) 2))))))))) (=> (=> (< 0 ($generated@@43 $generated@@186)) (or (and ($generated@@57 ($generated@@54 $generated@@50 $generated@@187)) (= ($generated@@52 ($generated@@63 ($generated@@54 $generated@@50 $generated@@187))) ($generated@@52 0))) (and (and ($generated@@57 ($generated@@54 $generated@@50 $generated@@187)) (<= ($generated@@52 2) ($generated@@52 ($generated@@63 ($generated@@54 $generated@@50 $generated@@187))))) ($generated@@25 ($generated@@61 $generated@@185) ($generated@@41 $generated@@186 ($generated@@42 1)) ($generated@@54 $generated@@50 ($generated@@64 ($generated@@52 (- ($generated@@63 ($generated@@54 $generated@@50 $generated@@187)) 2)))))))) (=> (= ($generated@@52 0) ($generated@@43 $generated@@186)) (forall (($generated@@188 T@U) ) (!  (=> ($generated@@26 $generated@@188 $generated@@186) ($generated@@62 $generated@@188 $generated@@187))
 :pattern ( ($generated@@25 ($generated@@61 $generated@@185) $generated@@188 $generated@@187))
))))) (= ($generated@@25 ($generated@@61 $generated@@185) ($generated@@54 $generated@@95 $generated@@186) ($generated@@54 $generated@@50 $generated@@187))  (and (=> (< 0 ($generated@@43 $generated@@186)) (or (and ($generated@@57 ($generated@@54 $generated@@50 $generated@@187)) (= ($generated@@52 ($generated@@63 ($generated@@54 $generated@@50 $generated@@187))) ($generated@@52 0))) (and (and ($generated@@57 ($generated@@54 $generated@@50 $generated@@187)) (<= ($generated@@52 2) ($generated@@52 ($generated@@63 ($generated@@54 $generated@@50 $generated@@187))))) ($generated@@25 ($generated@@61 $generated@@185) ($generated@@41 $generated@@186 ($generated@@42 1)) ($generated@@54 $generated@@50 ($generated@@64 ($generated@@52 (- ($generated@@63 ($generated@@54 $generated@@50 $generated@@187)) 2)))))))) (=> (= ($generated@@52 0) ($generated@@43 $generated@@186)) (exists (($generated@@189 T@U) ) (!  (and ($generated@@26 $generated@@189 $generated@@186) ($generated@@25 ($generated@@61 $generated@@185) $generated@@189 $generated@@187))
 :pattern ( ($generated@@25 ($generated@@61 $generated@@185) $generated@@189 $generated@@187))
)))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@61 $generated@@185) ($generated@@54 $generated@@95 $generated@@186) ($generated@@54 $generated@@50 $generated@@187)))
))))
(assert (forall (($generated@@190 T@U) ) (! ($generated@@49 $generated@@95 $generated@@190 $generated)
 :pattern ( ($generated@@49 $generated@@95 $generated@@190 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@199  (=> (= $generated@@191 ($generated@@112 $generated@@192 $generated@@193 $generated@@1 false)) (=> (and (and (and ($generated@@37 $generated@@95 $generated@@194 $generated $generated@@193) ($generated@@37 $generated@@50 $generated@@195 $generated@@51 $generated@@193)) (and ($generated@@62 $generated@@194 $generated@@195) ($generated@@25 ($generated@@61 $generated@@196) $generated@@194 $generated@@195))) (and (and ($generated@@171 $generated@@197) ($generated@@198 $generated@@197)) (and (= $generated@@193 $generated@@197) ($generated@@57 $generated@@195)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@57 $generated@@195)) (=> ($generated@@57 $generated@@195) (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= ($generated@@52 2) 0)) (not true)))))))))
(let (($generated@@200  (=> (and ($generated@@171 $generated@@193) ($generated@@198 $generated@@193)) (=> (and (and (and ($generated@@49 $generated@@50 $generated@@195 $generated@@51) ($generated@@37 $generated@@50 $generated@@195 $generated@@51 $generated@@193)) ($generated@@89 $generated@@195)) (and (= 3 $generated@@24) (= (ControlFlow 0 4) 2))) $generated@@199))))
$generated@@200)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
