(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 (T@T T@U T@U) Bool)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (Int) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@U T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@131 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@132 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@T) T@T)
(declare-fun $generated@@138 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@3 $generated@@22) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and ($generated@@21 $generated@@22 $generated@@35 ($generated@@23 $generated@@31)) ($generated@@21 $generated@@22 $generated@@36 ($generated@@23 $generated@@32))) (= ($generated@@19 $generated@@31 $generated@@32 $generated@@33 ($generated@@20 $generated@@34) $generated@@35 $generated@@36)  (and (=> (< 0 ($generated@@24 $generated@@33)) (and (and ($generated@@25 $generated@@35) ($generated@@25 $generated@@36)) (=> (and ($generated@@25 $generated@@35) ($generated@@25 $generated@@36)) (and (= ($generated@@26 $generated@@35) ($generated@@26 $generated@@36)) ($generated@@19 $generated@@31 $generated@@32 ($generated@@27 $generated@@33 ($generated@@28 1)) $generated@@34 ($generated@@29 $generated@@35) ($generated@@29 $generated@@36)))))) (=> (and (or (not (= $generated@@33 ($generated@@28 0))) (not true)) (= ($generated@@24 $generated@@33) 0)) ($generated@@30 $generated@@31 $generated@@32 $generated@@34 $generated@@35 $generated@@36)))))
 :pattern ( ($generated@@19 $generated@@31 $generated@@32 $generated@@33 ($generated@@20 $generated@@34) $generated@@35 $generated@@36))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (or (not (= $generated@@39 ($generated@@28 0))) (not true)) (= ($generated@@19 $generated@@37 $generated@@38 $generated@@39 ($generated@@20 $generated@@40) $generated@@41 $generated@@42) ($generated@@19 $generated@@37 $generated@@38 $generated@@39 $generated@@40 $generated@@41 $generated@@42)))
 :pattern ( ($generated@@19 $generated@@37 $generated@@38 $generated@@39 ($generated@@20 $generated@@40) $generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> (and ($generated@@43 $generated@@44 $generated@@45) ($generated@@43 $generated@@45 $generated@@46)) ($generated@@43 $generated@@44 $generated@@46))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45) ($generated@@43 $generated@@45 $generated@@46))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45) ($generated@@43 $generated@@44 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ) (!  (=> ($generated@@47 $generated@@48) ($generated@@25 $generated@@48))
 :pattern ( ($generated@@47 $generated@@48))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 Int) ($generated@@51 Int) ) (!  (=> (and (and (<= 0 $generated@@50) (<= 0 $generated@@51)) (<= (+ $generated@@50 $generated@@51) ($generated@@24 $generated@@49))) (= ($generated@@27 ($generated@@27 $generated@@49 ($generated@@28 $generated@@50)) ($generated@@28 $generated@@51)) ($generated@@27 $generated@@49 ($generated@@28 (+ $generated@@50 $generated@@51)))))
 :pattern ( ($generated@@27 ($generated@@27 $generated@@49 ($generated@@28 $generated@@50)) ($generated@@28 $generated@@51)))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> ($generated@@21 $generated@@22 $generated@@53 ($generated@@23 $generated@@52)) ($generated@@25 $generated@@53))
 :pattern ( ($generated@@25 $generated@@53) ($generated@@21 $generated@@22 $generated@@53 ($generated@@23 $generated@@52)))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (= $generated@@58 $generated@@59) ($generated@@19 $generated@@54 $generated@@55 $generated@@56 ($generated@@20 $generated@@57) $generated@@58 $generated@@59))
 :pattern ( ($generated@@19 $generated@@54 $generated@@55 $generated@@56 ($generated@@20 $generated@@57) $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@30 $generated@@60 $generated@@61 ($generated@@20 $generated@@62) $generated@@63 $generated@@64) (= $generated@@63 $generated@@64))
 :pattern ( ($generated@@30 $generated@@60 $generated@@61 ($generated@@20 $generated@@62) $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 $generated@@66) $generated@@66)
 :pattern ( ($generated@@65 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@21 $generated@@22 ($generated@@68 $generated@@71 $generated@@72) ($generated@@23 $generated@@70))  (and ($generated@@69 $generated@@71 $generated@@70) ($generated@@21 $generated@@22 $generated@@72 ($generated@@23 $generated@@70))))
 :pattern ( ($generated@@21 $generated@@22 ($generated@@68 $generated@@71 $generated@@72) ($generated@@23 $generated@@70)))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@25 $generated@@74) (= ($generated@@73 $generated@@74) $generated@@1))
 :pattern ( ($generated@@25 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@75 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@75 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@25 $generated@@79) (exists (($generated@@80 T@U) ($generated@@81 T@U) ) (= $generated@@79 ($generated@@68 $generated@@80 $generated@@81))))
 :pattern ( ($generated@@25 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and ($generated@@21 $generated@@22 $generated@@85 ($generated@@23 $generated@@82)) ($generated@@21 $generated@@22 $generated@@86 ($generated@@23 $generated@@83))) (= ($generated@@30 $generated@@82 $generated@@83 ($generated@@20 $generated@@84) $generated@@85 $generated@@86)  (and (and ($generated@@25 $generated@@85) ($generated@@25 $generated@@86)) (=> (and ($generated@@25 $generated@@85) ($generated@@25 $generated@@86)) (and (= ($generated@@26 $generated@@85) ($generated@@26 $generated@@86)) ($generated@@30 $generated@@82 $generated@@83 $generated@@84 ($generated@@29 $generated@@85) ($generated@@29 $generated@@86)))))))
 :pattern ( ($generated@@30 $generated@@82 $generated@@83 ($generated@@20 $generated@@84) $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@87 ($generated@@76 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@88 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@87 ($generated@@76 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@95 T@U) ) (!  (and (= ($generated@@93 ($generated@@23 $generated@@95)) $generated@@0) (= ($generated@@94 ($generated@@23 $generated@@95)) $generated@@2))
 :pattern ( ($generated@@23 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and ($generated@@96 $generated@@98) (<= ($generated@@24 $generated@@98) ($generated@@24 $generated@@97))) (and (= ($generated@@96 ($generated@@27 $generated@@97 $generated@@98)) ($generated@@96 $generated@@97)) (= ($generated@@24 ($generated@@27 $generated@@97 $generated@@98)) (- ($generated@@24 $generated@@97) ($generated@@24 $generated@@98)))))
 :pattern ( ($generated@@27 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 Int) ) (!  (=> (<= 0 $generated@@99) (and ($generated@@96 ($generated@@28 $generated@@99)) (= ($generated@@24 ($generated@@28 $generated@@99)) $generated@@99)))
 :pattern ( ($generated@@28 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (or ($generated@@43 $generated@@100 $generated@@101) (= $generated@@100 $generated@@101)) ($generated@@43 $generated@@101 $generated@@100))
 :pattern ( ($generated@@43 $generated@@100 $generated@@101) ($generated@@43 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@69 ($generated@@76 $generated@@104 $generated@@102) $generated@@103) ($generated@@21 $generated@@104 $generated@@102 $generated@@103))
 :pattern ( ($generated@@69 ($generated@@76 $generated@@104 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (<= 0 ($generated@@24 $generated@@105))
 :pattern ( ($generated@@24 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@73 ($generated@@68 $generated@@106 $generated@@107)) $generated@@1)
 :pattern ( ($generated@@68 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@26 ($generated@@68 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@68 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@29 ($generated@@68 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@68 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@112 ($generated@@23 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@23 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@75 $generated@@115 ($generated@@76 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@76 $generated@@115 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (and (and (and (=> ($generated@@43 $generated@@116 $generated@@117) (or (not (= $generated@@116 $generated@@117)) (not true))) (=> (and ($generated@@96 $generated@@116) (not ($generated@@96 $generated@@117))) ($generated@@43 $generated@@116 $generated@@117))) (=> (and ($generated@@96 $generated@@116) ($generated@@96 $generated@@117)) (= ($generated@@43 $generated@@116 $generated@@117) (< ($generated@@24 $generated@@116) ($generated@@24 $generated@@117))))) (=> (and ($generated@@43 $generated@@116 $generated@@117) ($generated@@96 $generated@@117)) ($generated@@96 $generated@@116)))
 :pattern ( ($generated@@43 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@30 $generated@@118 $generated@@119 ($generated@@20 $generated@@120) $generated@@121 $generated@@122) (forall (($generated@@123 T@U) ) (! ($generated@@19 $generated@@118 $generated@@119 $generated@@123 ($generated@@20 $generated@@120) $generated@@121 $generated@@122)
 :pattern ( ($generated@@19 $generated@@118 $generated@@119 $generated@@123 ($generated@@20 $generated@@120) $generated@@121 $generated@@122))
)))
 :pattern ( ($generated@@30 $generated@@118 $generated@@119 ($generated@@20 $generated@@120) $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and ($generated@@124 $generated@@127) (and ($generated@@25 $generated@@125) ($generated@@88 $generated@@22 $generated@@125 ($generated@@23 $generated@@126) $generated@@127))) ($generated@@87 ($generated@@26 $generated@@125) $generated@@126 $generated@@127))
 :pattern ( ($generated@@87 ($generated@@26 $generated@@125) $generated@@126 $generated@@127))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@128 $generated@@139 $generated@@140 $generated@@141 ($generated@@135 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@144 $generated@@145) $generated@@142)
 :weight 0
)) (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@128 $generated@@146 $generated@@147 $generated@@148 ($generated@@135 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@128 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@128 $generated@@155 $generated@@156 $generated@@157 ($generated@@135 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@128 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)))) (= ($generated@@3 $generated@@129) 4)) (= ($generated@@3 $generated@@130) 5)) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@132 $generated@@164 $generated@@165 ($generated@@136 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@166) $generated@@168) $generated@@166)
 :weight 0
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@173 $generated@@174) (= ($generated@@132 $generated@@169 $generated@@170 ($generated@@136 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@171) $generated@@174) ($generated@@132 $generated@@169 $generated@@170 $generated@@172 $generated@@174)))
 :weight 0
))) (= ($generated@@3 $generated@@133) 6)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@3 ($generated@@134 $generated@@175 $generated@@176)) 7))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@137 ($generated@@134 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@134 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@138 ($generated@@134 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@134 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@8 ($generated@@128 $generated@@129 $generated@@130 $generated@@4 ($generated@@131 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (or (not (= $generated@@185 $generated@@181)) (not true)) ($generated@@8 ($generated@@75 $generated@@4 ($generated@@132 $generated@@130 $generated@@133 ($generated@@132 $generated@@129 ($generated@@134 $generated@@130 $generated@@133) $generated@@182 $generated@@185) $generated@@183)))) $generated@@184))
 :pattern ( ($generated@@128 $generated@@129 $generated@@130 $generated@@4 ($generated@@131 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@69 $generated@@188 ($generated@@23 $generated@@187)) (and (= ($generated@@76 $generated@@22 ($generated@@75 $generated@@22 $generated@@188)) $generated@@188) ($generated@@21 $generated@@22 ($generated@@75 $generated@@22 $generated@@188) ($generated@@23 $generated@@187))))
 :pattern ( ($generated@@69 $generated@@188 ($generated@@23 $generated@@187)))
)))
(assert (forall (($generated@@189 T@U) ) (!  (=> ($generated@@96 $generated@@189) (= $generated@@189 ($generated@@28 ($generated@@24 $generated@@189))))
 :pattern ( ($generated@@24 $generated@@189))
 :pattern ( ($generated@@96 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and ($generated@@124 $generated@@192) (and ($generated@@25 $generated@@190) ($generated@@88 $generated@@22 $generated@@190 ($generated@@23 $generated@@191) $generated@@192))) ($generated@@88 $generated@@22 ($generated@@29 $generated@@190) ($generated@@23 $generated@@191) $generated@@192))
 :pattern ( ($generated@@88 $generated@@22 ($generated@@29 $generated@@190) ($generated@@23 $generated@@191) $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and ($generated@@96 $generated@@194) (<= ($generated@@24 $generated@@194) ($generated@@24 $generated@@193))) (or (and (= $generated@@194 ($generated@@28 0)) (= ($generated@@27 $generated@@193 $generated@@194) $generated@@193)) (and (or (not (= $generated@@194 ($generated@@28 0))) (not true)) ($generated@@43 ($generated@@27 $generated@@193 $generated@@194) $generated@@193))))
 :pattern ( ($generated@@27 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and ($generated@@43 $generated@@197 $generated@@201) ($generated@@19 $generated@@195 $generated@@196 $generated@@201 ($generated@@20 $generated@@198) $generated@@199 $generated@@200)) ($generated@@19 $generated@@195 $generated@@196 $generated@@197 ($generated@@20 $generated@@198) $generated@@199 $generated@@200))
 :pattern ( ($generated@@19 $generated@@195 $generated@@196 $generated@@197 ($generated@@20 $generated@@198) $generated@@199 $generated@@200) ($generated@@19 $generated@@195 $generated@@196 $generated@@201 ($generated@@20 $generated@@198) $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@30 $generated@@202 $generated@@203 ($generated@@20 $generated@@204) $generated@@205 $generated@@206) ($generated@@30 $generated@@202 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
 :pattern ( ($generated@@30 $generated@@202 $generated@@203 ($generated@@20 $generated@@204) $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@T) ) (! (= ($generated@@76 $generated@@208 ($generated@@65 $generated@@208 $generated@@207)) ($generated@@65 $generated@@133 ($generated@@76 $generated@@208 $generated@@207)))
 :pattern ( ($generated@@76 $generated@@208 ($generated@@65 $generated@@208 $generated@@207)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (forall (($generated@@214 Int) ) (!  (=> (<= 0 $generated@@214) ($generated@@19 $generated@@209 $generated@@210 ($generated@@28 $generated@@214) ($generated@@20 $generated@@211) $generated@@212 $generated@@213))
 :pattern ( ($generated@@19 $generated@@209 $generated@@210 ($generated@@28 $generated@@214) ($generated@@20 $generated@@211) $generated@@212 $generated@@213))
)) ($generated@@30 $generated@@209 $generated@@210 ($generated@@20 $generated@@211) $generated@@212 $generated@@213))
 :pattern ( ($generated@@30 $generated@@209 $generated@@210 ($generated@@20 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> ($generated@@124 $generated@@218) (= ($generated@@88 $generated@@22 ($generated@@68 $generated@@216 $generated@@217) ($generated@@23 $generated@@215) $generated@@218)  (and ($generated@@87 $generated@@216 $generated@@215 $generated@@218) ($generated@@88 $generated@@22 $generated@@217 ($generated@@23 $generated@@215) $generated@@218))))
 :pattern ( ($generated@@88 $generated@@22 ($generated@@68 $generated@@216 $generated@@217) ($generated@@23 $generated@@215) $generated@@218))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 (T@U) Bool)
(declare-fun $generated@@228 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@229 true))
(let (($generated@@230  (and (=> (= (ControlFlow 0 14) (- 0 15)) (or ($generated@@19 $generated@@219 $generated@@219 ($generated@@65 $generated@@133 ($generated@@28 0)) ($generated@@20 ($generated@@20 $generated@@220)) $generated@@221 $generated@@222) (=> (< 0 ($generated@@24 ($generated@@65 $generated@@133 ($generated@@28 0)))) (=> ($generated@@25 $generated@@221) (and ($generated@@25 $generated@@222) (and (= ($generated@@26 $generated@@221) ($generated@@26 $generated@@222)) ($generated@@19 $generated@@219 $generated@@219 ($generated@@27 ($generated@@65 $generated@@133 ($generated@@28 0)) ($generated@@28 1)) ($generated@@20 ($generated@@20 $generated@@220)) ($generated@@29 $generated@@221) ($generated@@29 $generated@@222)))))))) (=> (= (ControlFlow 0 14) (- 0 13)) (or ($generated@@19 $generated@@219 $generated@@219 ($generated@@65 $generated@@133 ($generated@@28 0)) ($generated@@20 ($generated@@20 $generated@@220)) $generated@@221 $generated@@222) (or (=> (< 0 ($generated@@24 ($generated@@65 $generated@@133 ($generated@@28 0)))) (=> ($generated@@25 $generated@@221) (and ($generated@@25 $generated@@222) (and (= ($generated@@26 $generated@@221) ($generated@@26 $generated@@222)) ($generated@@19 $generated@@219 $generated@@219 ($generated@@27 ($generated@@65 $generated@@133 ($generated@@28 0)) ($generated@@28 1)) ($generated@@20 ($generated@@20 $generated@@220)) ($generated@@29 $generated@@221) ($generated@@29 $generated@@222)))))) (=> (and (or (not (= ($generated@@65 $generated@@133 ($generated@@28 0)) ($generated@@28 0))) (not true)) (= ($generated@@24 ($generated@@65 $generated@@133 ($generated@@28 0))) 0)) ($generated@@30 $generated@@219 $generated@@219 ($generated@@20 ($generated@@20 $generated@@220)) $generated@@221 $generated@@222))))))))
(let (($generated@@231  (and (=> (= (ControlFlow 0 9) (- 0 12)) ($generated@@96 ($generated@@65 $generated@@133 ($generated@@28 2)))) (=> ($generated@@96 ($generated@@65 $generated@@133 ($generated@@28 2))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (<= ($generated@@24 ($generated@@65 $generated@@133 ($generated@@28 2))) ($generated@@24 $generated@@223))) (=> (<= ($generated@@24 ($generated@@65 $generated@@133 ($generated@@28 2))) ($generated@@24 $generated@@223)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or ($generated@@19 $generated@@219 $generated@@219 ($generated@@27 $generated@@223 ($generated@@28 2)) ($generated@@20 ($generated@@20 $generated@@220)) $generated@@222 $generated@@221) (=> (< 0 ($generated@@24 ($generated@@27 $generated@@223 ($generated@@28 2)))) (=> ($generated@@25 $generated@@222) (and ($generated@@25 $generated@@221) (and (= ($generated@@26 $generated@@222) ($generated@@26 $generated@@221)) ($generated@@19 $generated@@219 $generated@@219 ($generated@@27 ($generated@@27 $generated@@223 ($generated@@28 2)) ($generated@@28 1)) ($generated@@20 ($generated@@20 $generated@@220)) ($generated@@29 $generated@@222) ($generated@@29 $generated@@221)))))))) (=> (= (ControlFlow 0 9) (- 0 8)) (or ($generated@@19 $generated@@219 $generated@@219 ($generated@@27 $generated@@223 ($generated@@28 2)) ($generated@@20 ($generated@@20 $generated@@220)) $generated@@222 $generated@@221) (or (=> (< 0 ($generated@@24 ($generated@@27 $generated@@223 ($generated@@28 2)))) (=> ($generated@@25 $generated@@222) (and ($generated@@25 $generated@@221) (and (= ($generated@@26 $generated@@222) ($generated@@26 $generated@@221)) ($generated@@19 $generated@@219 $generated@@219 ($generated@@27 ($generated@@27 $generated@@223 ($generated@@28 2)) ($generated@@28 1)) ($generated@@20 ($generated@@20 $generated@@220)) ($generated@@29 $generated@@222) ($generated@@29 $generated@@221)))))) (=> (and (or (not (= ($generated@@27 $generated@@223 ($generated@@28 2)) ($generated@@28 0))) (not true)) (= ($generated@@24 ($generated@@27 $generated@@223 ($generated@@28 2))) 0)) ($generated@@30 $generated@@219 $generated@@219 ($generated@@20 ($generated@@20 $generated@@220)) $generated@@222 $generated@@221))))))))))))
(let (($generated@@232  (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@96 ($generated@@65 $generated@@133 ($generated@@28 1)))) (=> ($generated@@96 ($generated@@65 $generated@@133 ($generated@@28 1))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= ($generated@@24 ($generated@@65 $generated@@133 ($generated@@28 1))) ($generated@@24 $generated@@223))) (=> (<= ($generated@@24 ($generated@@65 $generated@@133 ($generated@@28 1))) ($generated@@24 $generated@@223)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or ($generated@@19 $generated@@219 $generated@@219 ($generated@@27 $generated@@223 ($generated@@28 1)) ($generated@@20 ($generated@@20 $generated@@220)) $generated@@221 $generated@@222) (=> (< 0 ($generated@@24 ($generated@@27 $generated@@223 ($generated@@28 1)))) (=> ($generated@@25 $generated@@221) (and ($generated@@25 $generated@@222) (and (= ($generated@@26 $generated@@221) ($generated@@26 $generated@@222)) ($generated@@19 $generated@@219 $generated@@219 ($generated@@27 ($generated@@27 $generated@@223 ($generated@@28 1)) ($generated@@28 1)) ($generated@@20 ($generated@@20 $generated@@220)) ($generated@@29 $generated@@221) ($generated@@29 $generated@@222)))))))) (=> (= (ControlFlow 0 4) (- 0 3)) (or ($generated@@19 $generated@@219 $generated@@219 ($generated@@27 $generated@@223 ($generated@@28 1)) ($generated@@20 ($generated@@20 $generated@@220)) $generated@@221 $generated@@222) (or (=> (< 0 ($generated@@24 ($generated@@27 $generated@@223 ($generated@@28 1)))) (=> ($generated@@25 $generated@@221) (and ($generated@@25 $generated@@222) (and (= ($generated@@26 $generated@@221) ($generated@@26 $generated@@222)) ($generated@@19 $generated@@219 $generated@@219 ($generated@@27 ($generated@@27 $generated@@223 ($generated@@28 1)) ($generated@@28 1)) ($generated@@20 ($generated@@20 $generated@@220)) ($generated@@29 $generated@@221) ($generated@@29 $generated@@222)))))) (=> (and (or (not (= ($generated@@27 $generated@@223 ($generated@@28 1)) ($generated@@28 0))) (not true)) (= ($generated@@24 ($generated@@27 $generated@@223 ($generated@@28 1))) 0)) ($generated@@30 $generated@@219 $generated@@219 ($generated@@20 ($generated@@20 $generated@@220)) $generated@@221 $generated@@222))))))))))))
(let (($generated@@233 true))
(let (($generated@@234  (=> (< 0 ($generated@@24 $generated@@223)) (and (and (and (and (=> (= (ControlFlow 0 17) 2) $generated@@233) (=> (= (ControlFlow 0 17) 4) $generated@@232)) (=> (= (ControlFlow 0 17) 9) $generated@@231)) (=> (= (ControlFlow 0 17) 14) $generated@@230)) (=> (= (ControlFlow 0 17) 16) $generated@@229)))))
(let (($generated@@235 true))
(let (($generated@@236  (=> (= $generated@@224 ($generated@@131 $generated@@225 $generated@@226 $generated false)) (and (=> (= (ControlFlow 0 18) 17) $generated@@234) (=> (= (ControlFlow 0 18) 1) $generated@@235)))))
(let (($generated@@237  (=> (and ($generated@@124 $generated@@226) ($generated@@227 $generated@@226)) (=> (and (and ($generated@@21 $generated@@22 $generated@@221 ($generated@@23 $generated@@219)) ($generated@@88 $generated@@22 $generated@@221 ($generated@@23 $generated@@219) $generated@@226)) ($generated@@47 $generated@@221)) (=> (and (and (and (and ($generated@@21 $generated@@22 $generated@@222 ($generated@@23 $generated@@219)) ($generated@@88 $generated@@22 $generated@@222 ($generated@@23 $generated@@219) $generated@@226)) ($generated@@47 $generated@@222)) (= 2 $generated@@228)) (and ($generated@@30 $generated@@219 $generated@@219 ($generated@@20 ($generated@@20 $generated@@220)) $generated@@221 $generated@@222) (= (ControlFlow 0 19) 18))) $generated@@236)))))
$generated@@237))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 9) (- 11))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
