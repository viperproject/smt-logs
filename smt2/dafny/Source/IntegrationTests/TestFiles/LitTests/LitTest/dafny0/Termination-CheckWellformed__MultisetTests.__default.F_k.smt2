(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@U T@U T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@49 () Int)
(declare-fun $generated@@50 (T@U T@U Int) Int)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@52 (T@U Int) Bool)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) Int)
(declare-fun $generated@@70 (T@U) Int)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@86 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@90 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25)
 :pattern ( ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25))
)))
(assert (= ($generated@@5 $generated@@27) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@29 $generated@@30))
 :pattern ( ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31)))
)))
(assert (forall (($generated@@33 Int) ) (! (= ($generated@@32 $generated@@33) $generated@@33)
 :pattern ( ($generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@T) ) (! (= ($generated@@34 $generated@@36 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@36 $generated@@35))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@38 $generated@@40 ($generated@@37 $generated@@40 $generated@@39)) $generated@@39)
 :pattern ( ($generated@@37 $generated@@40 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@26 $generated@@7 $generated@@41 $generated@@23) (<= ($generated@@32 0) ($generated@@12 $generated@@41)))
 :pattern ( ($generated@@26 $generated@@7 $generated@@41 $generated@@23))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@42 ($generated@@38 $generated@@46 $generated@@43) $generated@@44 $generated@@45) ($generated@@22 $generated@@46 $generated@@43 $generated@@44 $generated@@45))
 :pattern ( ($generated@@42 ($generated@@38 $generated@@46 $generated@@43) $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ) (!  (=> ($generated@@47 $generated@@48 $generated@@23) (and (= ($generated@@38 $generated@@7 ($generated@@37 $generated@@7 $generated@@48)) $generated@@48) ($generated@@26 $generated@@7 ($generated@@37 $generated@@7 $generated@@48) $generated@@23)))
 :pattern ( ($generated@@47 $generated@@48 $generated@@23))
)))
(assert  (=> (<= 0 $generated@@49) (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 Int) ) (!  (=> (or ($generated@@52 ($generated@@34 $generated@@27 $generated@@54) ($generated@@32 $generated@@55)) (and (< 0 $generated@@49) (and ($generated@@26 $generated@@27 $generated@@54 ($generated@@28 $generated)) (<= ($generated@@32 0) $generated@@55)))) (and (=> (or (not (= ($generated@@32 $generated@@55) ($generated@@32 0))) (not true)) ($generated@@52 ($generated@@34 $generated@@27 $generated@@54) ($generated@@32 (- $generated@@55 1)))) (= ($generated@@50 ($generated@@51 $generated@@53) ($generated@@34 $generated@@27 $generated@@54) ($generated@@32 $generated@@55)) (ite (= ($generated@@32 $generated@@55) ($generated@@32 0)) 0 ($generated@@50 ($generated@@51 $generated@@53) ($generated@@34 $generated@@27 $generated@@54) ($generated@@32 (- $generated@@55 1)))))))
 :weight 3
 :pattern ( ($generated@@50 ($generated@@51 $generated@@53) ($generated@@34 $generated@@27 $generated@@54) ($generated@@32 $generated@@55)))
))))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 Int) ) (! (= ($generated@@50 ($generated@@51 $generated@@56) $generated@@57 $generated@@58) ($generated@@50 $generated@@56 $generated@@57 $generated@@58))
 :pattern ( ($generated@@50 ($generated@@51 $generated@@56) $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@59 $generated@@60 $generated@@61) (= $generated@@60 $generated@@61))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@63 ($generated@@28 $generated@@64)) (forall (($generated@@65 T@U) ) (!  (=> (< 0 ($generated@@62 $generated@@63 $generated@@65)) ($generated@@47 $generated@@65 $generated@@64))
 :pattern ( ($generated@@62 $generated@@63 $generated@@65))
)))
 :pattern ( ($generated@@26 $generated@@27 $generated@@63 ($generated@@28 $generated@@64)))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@47 $generated@@66 $generated) (and (= ($generated@@38 $generated@@7 ($generated@@37 $generated@@7 $generated@@66)) $generated@@66) ($generated@@26 $generated@@7 ($generated@@37 $generated@@7 $generated@@66) $generated)))
 :pattern ( ($generated@@47 $generated@@66 $generated))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@47 ($generated@@38 $generated@@69 $generated@@67) $generated@@68) ($generated@@26 $generated@@69 $generated@@67 $generated@@68))
 :pattern ( ($generated@@47 ($generated@@38 $generated@@69 $generated@@67) $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@29 $generated@@71) (forall (($generated@@72 T@U) ) (!  (and (<= 0 ($generated@@62 $generated@@71 $generated@@72)) (<= ($generated@@62 $generated@@71 $generated@@72) ($generated@@70 $generated@@71)))
 :pattern ( ($generated@@62 $generated@@71 $generated@@72))
)))
 :pattern ( ($generated@@29 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (<= 0 ($generated@@70 $generated@@73))
 :pattern ( ($generated@@70 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@62 $generated@@74 $generated@@75) 0)
 :pattern ( ($generated@@62 $generated@@74 $generated@@75))
)))
(assert  (=> (<= 0 $generated@@49) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 Int) ) (!  (=> (or ($generated@@52 $generated@@77 $generated@@78) (and (< 0 $generated@@49) (and ($generated@@26 $generated@@27 $generated@@77 ($generated@@28 $generated)) (<= ($generated@@32 0) $generated@@78)))) (and (=> (or (not (= $generated@@78 ($generated@@32 0))) (not true)) ($generated@@52 $generated@@77 (- $generated@@78 1))) (= ($generated@@50 ($generated@@51 $generated@@76) $generated@@77 $generated@@78) (ite (= $generated@@78 ($generated@@32 0)) 0 ($generated@@50 $generated@@76 $generated@@77 (- $generated@@78 1))))))
 :pattern ( ($generated@@50 ($generated@@51 $generated@@76) $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@79 ($generated@@28 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@28 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@21 ($generated@@28 $generated@@81)) $generated@@1)
 :pattern ( ($generated@@28 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@37 $generated@@83 ($generated@@38 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@38 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (!  (and (= (= ($generated@@70 $generated@@84) 0) (= $generated@@84 $generated@@74)) (=> (or (not (= ($generated@@70 $generated@@84) 0)) (not true)) (exists (($generated@@85 T@U) ) (! (< 0 ($generated@@62 $generated@@84 $generated@@85))
 :pattern ( ($generated@@62 $generated@@84 $generated@@85))
))))
 :pattern ( ($generated@@70 $generated@@84))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@86 $generated@@97 $generated@@98 $generated@@99 ($generated@@93 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103 $generated@@100) $generated@@102 $generated@@103) $generated@@100)
 :weight 0
)) (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@86 $generated@@104 $generated@@105 $generated@@106 ($generated@@93 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@111 $generated@@112) ($generated@@86 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@111 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@86 $generated@@113 $generated@@114 $generated@@115 ($generated@@93 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@86 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)))) (= ($generated@@5 $generated@@87) 4)) (= ($generated@@5 $generated@@88) 5)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@90 $generated@@122 $generated@@123 ($generated@@94 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@124) $generated@@126) $generated@@124)
 :weight 0
))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@90 $generated@@127 $generated@@128 ($generated@@94 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@90 $generated@@127 $generated@@128 $generated@@130 $generated@@132)))
 :weight 0
))) (= ($generated@@5 $generated@@91) 6)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@5 ($generated@@92 $generated@@133 $generated@@134)) 7))) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@92 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@96 ($generated@@92 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@92 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 Bool) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@10 ($generated@@86 $generated@@87 $generated@@88 $generated@@6 ($generated@@89 $generated@@139 $generated@@140 $generated@@141 $generated@@142) $generated@@143 $generated@@144))  (=> (and (or (not (= $generated@@143 $generated@@139)) (not true)) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@90 $generated@@88 $generated@@91 ($generated@@90 $generated@@87 ($generated@@92 $generated@@88 $generated@@91) $generated@@140 $generated@@143) $generated@@141)))) $generated@@142))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88 $generated@@6 ($generated@@89 $generated@@139 $generated@@140 $generated@@141 $generated@@142) $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> ($generated@@47 $generated@@145 ($generated@@28 $generated@@146)) (and (= ($generated@@38 $generated@@27 ($generated@@37 $generated@@27 $generated@@145)) $generated@@145) ($generated@@26 $generated@@27 ($generated@@37 $generated@@27 $generated@@145) ($generated@@28 $generated@@146))))
 :pattern ( ($generated@@47 $generated@@145 ($generated@@28 $generated@@146)))
)))
(assert (= ($generated@@21 $generated@@23) $generated@@3))
(assert (= ($generated@@147 $generated@@23) $generated@@4))
(assert (forall (($generated@@148 Int) ) (! (= ($generated@@38 $generated@@7 ($generated@@11 ($generated@@32 $generated@@148))) ($generated@@34 $generated@@91 ($generated@@38 $generated@@7 ($generated@@11 $generated@@148))))
 :pattern ( ($generated@@38 $generated@@7 ($generated@@11 ($generated@@32 $generated@@148))))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@38 $generated@@150 ($generated@@34 $generated@@150 $generated@@149)) ($generated@@34 $generated@@91 ($generated@@38 $generated@@150 $generated@@149)))
 :pattern ( ($generated@@38 $generated@@150 ($generated@@34 $generated@@150 $generated@@149)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@59 $generated@@151 $generated@@152) (forall (($generated@@153 T@U) ) (! (= ($generated@@62 $generated@@151 $generated@@153) ($generated@@62 $generated@@152 $generated@@153))
 :pattern ( ($generated@@62 $generated@@151 $generated@@153))
 :pattern ( ($generated@@62 $generated@@152 $generated@@153))
)))
 :pattern ( ($generated@@59 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@154 $generated@@155 $generated@@156) (forall (($generated@@157 T@U) ) (! (<= ($generated@@62 $generated@@155 $generated@@157) ($generated@@62 $generated@@156 $generated@@157))
 :pattern ( ($generated@@62 $generated@@155 $generated@@157))
 :pattern ( ($generated@@62 $generated@@156 $generated@@157))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@22 $generated@@27 $generated@@158 ($generated@@28 $generated@@159) $generated@@160) (forall (($generated@@161 T@U) ) (!  (=> (< 0 ($generated@@62 $generated@@158 $generated@@161)) ($generated@@42 $generated@@161 $generated@@159 $generated@@160))
 :pattern ( ($generated@@62 $generated@@158 $generated@@161))
)))
 :pattern ( ($generated@@22 $generated@@27 $generated@@158 ($generated@@28 $generated@@159) $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! ($generated@@22 $generated@@7 $generated@@163 $generated $generated@@162)
 :pattern ( ($generated@@22 $generated@@7 $generated@@163 $generated $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (! ($generated@@26 $generated@@7 $generated@@164 $generated)
 :pattern ( ($generated@@26 $generated@@7 $generated@@164 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@173  (=> (and (or (not (= $generated@@165 ($generated@@32 0))) (not true)) ($generated@@22 $generated@@27 $generated@@166 ($generated@@28 $generated) $generated@@167)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@26 $generated@@7 ($generated@@11 (- $generated@@165 1)) $generated@@23)) (=> ($generated@@26 $generated@@7 ($generated@@11 (- $generated@@165 1)) $generated@@23) (=> (and (= $generated@@168 (- $generated@@165 1)) ($generated@@22 $generated@@7 ($generated@@11 $generated@@168) $generated@@23 $generated@@167)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (or (<= 0 $generated@@165) (and ($generated@@154 $generated@@166 $generated@@166) (not ($generated@@59 $generated@@166 $generated@@166)))) (= $generated@@168 $generated@@165))) (=> (or (or (<= 0 $generated@@165) (and ($generated@@154 $generated@@166 $generated@@166) (not ($generated@@59 $generated@@166 $generated@@166)))) (= $generated@@168 $generated@@165)) (=> (= (ControlFlow 0 4) (- 0 3)) (or (and ($generated@@154 $generated@@166 $generated@@166) (not ($generated@@59 $generated@@166 $generated@@166))) (and ($generated@@59 $generated@@166 $generated@@166) (< $generated@@168 $generated@@165))))))))))))
(let (($generated@@174 true))
(let (($generated@@175 true))
(let (($generated@@176  (=> (= $generated@@169 ($generated@@89 $generated@@170 $generated@@167 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@175) (=> (= (ControlFlow 0 7) 2) $generated@@174)) (=> (= (ControlFlow 0 7) 4) $generated@@173)))))
(let (($generated@@177  (=> (and ($generated@@171 $generated@@167) ($generated@@172 $generated@@167)) (=> (and (and ($generated@@26 $generated@@27 $generated@@166 ($generated@@28 $generated)) (<= ($generated@@32 0) $generated@@165)) (and (= 0 $generated@@49) (= (ControlFlow 0 8) 7))) $generated@@176))))
$generated@@177))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
