(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@51 (T@T T@U T@U) Bool)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@U T@U) T@U)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@62 () Int)
(declare-fun $generated@@63 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@67 (T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@U T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@174 () T@T)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@209 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@210 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@211 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (! ($generated@@20 ($generated@@19 $generated@@21 $generated@@22) $generated@@22)
 :pattern ( ($generated@@19 $generated@@21 $generated@@22))
)))
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ($generated@@25 T@U) ) (!  (=> ($generated@@20 $generated@@23 $generated@@25) ($generated@@20 ($generated@@19 $generated@@23 $generated@@24) $generated@@25))
 :pattern ( ($generated@@19 $generated@@23 $generated@@24) ($generated@@20 $generated@@23 $generated@@25))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> ($generated@@20 $generated@@27 $generated@@29) ($generated@@20 ($generated@@26 $generated@@27 $generated@@28) $generated@@29))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28) ($generated@@20 $generated@@27 $generated@@29))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@20 $generated@@31 $generated@@32) ($generated@@20 ($generated@@26 $generated@@30 $generated@@31) $generated@@32))
 :pattern ( ($generated@@26 $generated@@30 $generated@@31) ($generated@@20 $generated@@31 $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@20 ($generated@@19 $generated@@33 $generated@@34) $generated@@35)  (or (= $generated@@35 $generated@@34) ($generated@@20 $generated@@33 $generated@@35)))
 :pattern ( ($generated@@20 ($generated@@19 $generated@@33 $generated@@34) $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> ($generated@@20 $generated@@38 $generated@@39) (not ($generated@@20 ($generated@@36 $generated@@37 $generated@@38) $generated@@39)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38) ($generated@@20 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@41 $generated@@42 $generated@@43) ($generated@@20 $generated@@43 ($generated@@40 $generated@@42 $generated@@43)))
 :pattern ( ($generated@@40 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ) (!  (not ($generated@@20 $generated@@44 $generated@@45))
 :pattern ( ($generated@@20 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@26 ($generated@@26 $generated@@46 $generated@@47) $generated@@47) ($generated@@26 $generated@@46 $generated@@47))
 :pattern ( ($generated@@26 ($generated@@26 $generated@@46 $generated@@47) $generated@@47))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@20 ($generated@@36 $generated@@48 $generated@@49) $generated@@50)  (and ($generated@@20 $generated@@48 $generated@@50) (not ($generated@@20 $generated@@49 $generated@@50))))
 :pattern ( ($generated@@20 ($generated@@36 $generated@@48 $generated@@49) $generated@@50))
)))
(assert (= ($generated@@3 $generated@@52) 3))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (and (and ($generated@@51 $generated@@52 $generated@@55 ($generated@@53 $generated@@56 $generated@@57)) (forall (($generated@@60 T@U) ) (!  (=> ($generated@@54 $generated@@60 $generated@@58) ($generated@@54 $generated@@60 $generated@@56))
 :pattern ( ($generated@@54 $generated@@60 $generated@@58))
 :pattern ( ($generated@@54 $generated@@60 $generated@@56))
))) (forall (($generated@@61 T@U) ) (!  (=> ($generated@@54 $generated@@61 $generated@@57) ($generated@@54 $generated@@61 $generated@@59))
 :pattern ( ($generated@@54 $generated@@61 $generated@@57))
 :pattern ( ($generated@@54 $generated@@61 $generated@@59))
))) ($generated@@51 $generated@@52 $generated@@55 ($generated@@53 $generated@@58 $generated@@59)))
 :pattern ( ($generated@@51 $generated@@52 $generated@@55 ($generated@@53 $generated@@56 $generated@@57)) ($generated@@51 $generated@@52 $generated@@55 ($generated@@53 $generated@@58 $generated@@59)))
)))
(assert (= ($generated@@3 $generated@@64) 4))
(assert  (=> (<= 0 $generated@@62) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (or ($generated@@67 $generated@@71 $generated@@74 $generated@@75) (and (< 0 $generated@@62) (and (and (and ($generated@@51 $generated@@64 $generated@@74 ($generated@@66 $generated@@71)) ($generated@@63 $generated@@64 $generated@@74 ($generated@@66 $generated@@71) $generated@@73)) (and ($generated@@51 $generated@@52 $generated@@75 ($generated@@53 $generated@@71 $generated@@71)) ($generated@@63 $generated@@52 $generated@@75 ($generated@@53 $generated@@71 $generated@@71) $generated@@73))) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@54 $generated@@76 $generated@@71) (and (=> ($generated@@20 $generated@@74 $generated@@76) ($generated@@69 $generated@@71 $generated@@71 $generated@@73 $generated@@75 $generated@@76)) (=> ($generated@@20 $generated@@74 $generated@@76) ($generated@@70 ($generated@@68 $generated@@71 $generated@@71 $generated@@73 $generated@@75 $generated@@76) $generated@@44))))
 :pattern ( ($generated@@68 $generated@@71 $generated@@71 $generated@@73 $generated@@75 $generated@@76))
 :pattern ( ($generated@@69 $generated@@71 $generated@@71 $generated@@73 $generated@@75 $generated@@76))
 :pattern ( ($generated@@20 $generated@@74 $generated@@76))
))))) ($generated@@63 $generated@@64 ($generated@@65 $generated@@71 $generated@@72 $generated@@74 $generated@@75) ($generated@@66 $generated@@71) $generated@@73))
 :pattern ( ($generated@@63 $generated@@64 ($generated@@65 $generated@@71 $generated@@72 $generated@@74 $generated@@75) ($generated@@66 $generated@@71) $generated@@73))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and ($generated@@81 $generated@@84) (and ($generated@@54 $generated@@86 $generated@@82) ($generated@@51 $generated@@52 $generated@@85 ($generated@@53 $generated@@82 $generated@@83)))) (= ($generated@@70 ($generated@@68 $generated@@82 $generated@@83 $generated@@80 $generated@@85 $generated@@86) $generated@@44) ($generated@@70 ($generated@@68 $generated@@82 $generated@@83 $generated@@84 $generated@@85 $generated@@86) $generated@@44)))
 :pattern ( ($generated@@68 $generated@@82 $generated@@83 $generated@@80 $generated@@85 $generated@@86) ($generated@@81 $generated@@84))
 :pattern ( ($generated@@68 $generated@@82 $generated@@83 $generated@@84 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@87 $generated@@88 $generated@@89) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@20 $generated@@88 $generated@@90) ($generated@@20 $generated@@89 $generated@@90))
 :pattern ( ($generated@@20 $generated@@88 $generated@@90))
 :pattern ( ($generated@@20 $generated@@89 $generated@@90))
)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@91 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@91 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@95 $generated@@96 $generated@@97) (forall (($generated@@98 T@U) ) (!  (or (not ($generated@@20 $generated@@96 $generated@@98)) (not ($generated@@20 $generated@@97 $generated@@98)))
 :pattern ( ($generated@@20 $generated@@96 $generated@@98))
 :pattern ( ($generated@@20 $generated@@97 $generated@@98))
)))
 :pattern ( ($generated@@95 $generated@@96 $generated@@97))
)))
(assert  (=> (<= 0 $generated@@62) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (or ($generated@@67 $generated@@101 ($generated@@77 $generated@@64 $generated@@104) $generated@@105) (and (< 0 $generated@@62) (and (and (and ($generated@@81 $generated@@103) ($generated@@51 $generated@@64 $generated@@104 ($generated@@66 $generated@@101))) ($generated@@51 $generated@@52 $generated@@105 ($generated@@53 $generated@@101 $generated@@101))) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@54 $generated@@106 $generated@@101) (and (=> ($generated@@20 ($generated@@77 $generated@@64 $generated@@104) $generated@@106) ($generated@@69 $generated@@101 $generated@@101 $generated@@103 $generated@@105 $generated@@106)) (=> ($generated@@20 ($generated@@77 $generated@@64 $generated@@104) $generated@@106) ($generated@@70 ($generated@@68 $generated@@101 $generated@@101 $generated@@103 $generated@@105 $generated@@106) $generated@@44))))
 :pattern ( ($generated@@68 $generated@@101 $generated@@101 $generated@@103 $generated@@105 $generated@@106))
 :pattern ( ($generated@@69 $generated@@101 $generated@@101 $generated@@103 $generated@@105 $generated@@106))
 :pattern ( ($generated@@20 $generated@@104 $generated@@106))
))))) (and (=> (not ($generated@@70 $generated@@104 $generated@@44)) (and ($generated@@41 $generated@@101 ($generated@@77 $generated@@64 $generated@@104)) ($generated@@67 $generated@@101 ($generated@@36 $generated@@104 ($generated@@19 $generated@@44 ($generated@@40 $generated@@101 ($generated@@77 $generated@@64 $generated@@104)))) $generated@@105))) (= ($generated@@65 $generated@@101 ($generated@@99 $generated@@102) ($generated@@77 $generated@@64 $generated@@104) $generated@@105) (ite ($generated@@70 $generated@@104 $generated@@44) $generated@@44 (let (($generated@@107 ($generated@@40 $generated@@101 ($generated@@77 $generated@@64 $generated@@104))))
($generated@@26 ($generated@@65 $generated@@101 ($generated@@99 $generated@@102) ($generated@@36 $generated@@104 ($generated@@19 $generated@@44 $generated@@107)) $generated@@105) ($generated@@19 $generated@@44 ($generated@@100 $generated@@101 $generated@@101 $generated@@103 $generated@@105 $generated@@107))))))))
 :weight 3
 :pattern ( ($generated@@65 $generated@@101 ($generated@@99 $generated@@102) ($generated@@77 $generated@@64 $generated@@104) $generated@@105) ($generated@@81 $generated@@103))
))))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@51 $generated@@64 $generated@@108 ($generated@@66 $generated@@109)) (forall (($generated@@110 T@U) ) (!  (=> ($generated@@20 $generated@@108 $generated@@110) ($generated@@54 $generated@@110 $generated@@109))
 :pattern ( ($generated@@20 $generated@@108 $generated@@110))
)))
 :pattern ( ($generated@@51 $generated@@64 $generated@@108 ($generated@@66 $generated@@109)))
)))
(assert ($generated@@81 $generated@@80))
(assert  (=> (<= 0 $generated@@62) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (or ($generated@@67 $generated@@111 $generated@@114 $generated@@115) (and (< 0 $generated@@62) (and (and (and ($generated@@81 $generated@@113) (and ($generated@@51 $generated@@64 $generated@@114 ($generated@@66 $generated@@111)) ($generated@@63 $generated@@64 $generated@@114 ($generated@@66 $generated@@111) $generated@@113))) (and ($generated@@51 $generated@@52 $generated@@115 ($generated@@53 $generated@@111 $generated@@111)) ($generated@@63 $generated@@52 $generated@@115 ($generated@@53 $generated@@111 $generated@@111) $generated@@113))) (forall (($generated@@116 T@U) ) (!  (=> ($generated@@54 $generated@@116 $generated@@111) (and (=> ($generated@@20 $generated@@114 $generated@@116) ($generated@@69 $generated@@111 $generated@@111 $generated@@113 $generated@@115 $generated@@116)) (=> ($generated@@20 $generated@@114 $generated@@116) ($generated@@70 ($generated@@68 $generated@@111 $generated@@111 $generated@@113 $generated@@115 $generated@@116) $generated@@44))))
 :pattern ( ($generated@@68 $generated@@111 $generated@@111 $generated@@113 $generated@@115 $generated@@116))
 :pattern ( ($generated@@69 $generated@@111 $generated@@111 $generated@@113 $generated@@115 $generated@@116))
 :pattern ( ($generated@@20 $generated@@114 $generated@@116))
))))) ($generated@@51 $generated@@64 ($generated@@65 $generated@@111 $generated@@112 $generated@@114 $generated@@115) ($generated@@66 $generated@@111)))
 :pattern ( ($generated@@65 $generated@@111 $generated@@112 $generated@@114 $generated@@115) ($generated@@81 $generated@@113))
))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@117 ($generated@@92 $generated@@121 $generated@@118) $generated@@119 $generated@@120) ($generated@@63 $generated@@121 $generated@@118 $generated@@119 $generated@@120))
 :pattern ( ($generated@@117 ($generated@@92 $generated@@121 $generated@@118) $generated@@119 $generated@@120))
)))
(assert  (=> (<= 0 $generated@@62) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (or ($generated@@67 $generated@@122 ($generated@@77 $generated@@64 $generated@@125) ($generated@@77 $generated@@52 $generated@@126)) (and (< 0 $generated@@62) (and (and (and ($generated@@81 $generated@@124) ($generated@@51 $generated@@64 $generated@@125 ($generated@@66 $generated@@122))) ($generated@@51 $generated@@52 $generated@@126 ($generated@@53 $generated@@122 $generated@@122))) (forall (($generated@@127 T@U) ) (!  (=> ($generated@@54 $generated@@127 $generated@@122) (and (=> ($generated@@20 ($generated@@77 $generated@@64 $generated@@125) $generated@@127) ($generated@@69 $generated@@122 $generated@@122 $generated@@124 ($generated@@77 $generated@@52 $generated@@126) $generated@@127)) (=> ($generated@@20 ($generated@@77 $generated@@64 $generated@@125) $generated@@127) ($generated@@70 ($generated@@68 $generated@@122 $generated@@122 $generated@@124 ($generated@@77 $generated@@52 $generated@@126) $generated@@127) $generated@@44))))
 :pattern ( ($generated@@68 $generated@@122 $generated@@122 $generated@@124 $generated@@126 $generated@@127))
 :pattern ( ($generated@@69 $generated@@122 $generated@@122 $generated@@124 $generated@@126 $generated@@127))
 :pattern ( ($generated@@20 $generated@@125 $generated@@127))
))))) (and (=> (not ($generated@@70 $generated@@125 $generated@@44)) (and ($generated@@41 $generated@@122 ($generated@@77 $generated@@64 $generated@@125)) ($generated@@67 $generated@@122 ($generated@@36 $generated@@125 ($generated@@19 $generated@@44 ($generated@@40 $generated@@122 ($generated@@77 $generated@@64 $generated@@125)))) ($generated@@77 $generated@@52 $generated@@126)))) (= ($generated@@65 $generated@@122 ($generated@@99 $generated@@123) ($generated@@77 $generated@@64 $generated@@125) ($generated@@77 $generated@@52 $generated@@126)) (ite ($generated@@70 $generated@@125 $generated@@44) $generated@@44 (let (($generated@@128 ($generated@@40 $generated@@122 ($generated@@77 $generated@@64 $generated@@125))))
($generated@@26 ($generated@@65 $generated@@122 ($generated@@99 $generated@@123) ($generated@@36 $generated@@125 ($generated@@19 $generated@@44 $generated@@128)) ($generated@@77 $generated@@52 $generated@@126)) ($generated@@19 $generated@@44 ($generated@@100 $generated@@122 $generated@@122 $generated@@124 ($generated@@77 $generated@@52 $generated@@126) $generated@@128))))))))
 :weight 3
 :pattern ( ($generated@@65 $generated@@122 ($generated@@99 $generated@@123) ($generated@@77 $generated@@64 $generated@@125) ($generated@@77 $generated@@52 $generated@@126)) ($generated@@81 $generated@@124))
))))
(assert  (=> (<= 0 $generated@@62) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (or ($generated@@67 $generated@@129 $generated@@132 $generated@@133) (and (< 0 $generated@@62) (and (and (and ($generated@@81 $generated@@131) ($generated@@51 $generated@@64 $generated@@132 ($generated@@66 $generated@@129))) ($generated@@51 $generated@@52 $generated@@133 ($generated@@53 $generated@@129 $generated@@129))) (forall (($generated@@134 T@U) ) (!  (=> ($generated@@54 $generated@@134 $generated@@129) (and (=> ($generated@@20 $generated@@132 $generated@@134) ($generated@@69 $generated@@129 $generated@@129 $generated@@131 $generated@@133 $generated@@134)) (=> ($generated@@20 $generated@@132 $generated@@134) ($generated@@70 ($generated@@68 $generated@@129 $generated@@129 $generated@@131 $generated@@133 $generated@@134) $generated@@44))))
 :pattern ( ($generated@@68 $generated@@129 $generated@@129 $generated@@131 $generated@@133 $generated@@134))
 :pattern ( ($generated@@69 $generated@@129 $generated@@129 $generated@@131 $generated@@133 $generated@@134))
 :pattern ( ($generated@@20 $generated@@132 $generated@@134))
))))) (and (=> (not ($generated@@70 $generated@@132 $generated@@44)) (and ($generated@@41 $generated@@129 $generated@@132) ($generated@@67 $generated@@129 ($generated@@36 $generated@@132 ($generated@@19 $generated@@44 ($generated@@40 $generated@@129 $generated@@132))) $generated@@133))) (= ($generated@@65 $generated@@129 ($generated@@99 $generated@@130) $generated@@132 $generated@@133) (ite ($generated@@70 $generated@@132 $generated@@44) $generated@@44 (let (($generated@@135 ($generated@@40 $generated@@129 $generated@@132)))
($generated@@26 ($generated@@65 $generated@@129 $generated@@130 ($generated@@36 $generated@@132 ($generated@@19 $generated@@44 $generated@@135)) $generated@@133) ($generated@@19 $generated@@44 ($generated@@100 $generated@@129 $generated@@129 $generated@@131 $generated@@133 $generated@@135))))))))
 :pattern ( ($generated@@65 $generated@@129 ($generated@@99 $generated@@130) $generated@@132 $generated@@133) ($generated@@81 $generated@@131))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@20 ($generated@@26 $generated@@136 $generated@@137) $generated@@138)  (or ($generated@@20 $generated@@136 $generated@@138) ($generated@@20 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@20 ($generated@@26 $generated@@136 $generated@@137) $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> ($generated@@95 $generated@@139 $generated@@140) (and (= ($generated@@36 ($generated@@26 $generated@@139 $generated@@140) $generated@@139) $generated@@140) (= ($generated@@36 ($generated@@26 $generated@@139 $generated@@140) $generated@@140) $generated@@139)))
 :pattern ( ($generated@@26 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and ($generated@@81 $generated@@144) ($generated@@63 $generated@@52 $generated@@141 ($generated@@53 $generated@@142 $generated@@143) $generated@@144)) (forall (($generated@@145 T@U) ) (!  (=> (and ($generated@@117 $generated@@145 $generated@@142 $generated@@144) ($generated@@69 $generated@@142 $generated@@143 $generated@@144 $generated@@141 $generated@@145)) ($generated@@117 ($generated@@100 $generated@@142 $generated@@143 $generated@@144 $generated@@141 $generated@@145) $generated@@143 $generated@@144))
 :pattern ( ($generated@@100 $generated@@142 $generated@@143 $generated@@144 $generated@@141 $generated@@145))
)))
 :pattern ( ($generated@@63 $generated@@52 $generated@@141 ($generated@@53 $generated@@142 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@70 $generated@@146 $generated@@147) (= $generated@@146 $generated@@147))
 :pattern ( ($generated@@70 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@51 $generated@@52 $generated@@148 ($generated@@53 $generated@@149 $generated@@150)) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and ($generated@@81 $generated@@151) ($generated@@54 $generated@@152 $generated@@149)) ($generated@@69 $generated@@149 $generated@@150 $generated@@151 $generated@@148 $generated@@152)) ($generated@@54 ($generated@@100 $generated@@149 $generated@@150 $generated@@151 $generated@@148 $generated@@152) $generated@@150))
 :pattern ( ($generated@@100 $generated@@149 $generated@@150 $generated@@151 $generated@@148 $generated@@152))
)))
 :pattern ( ($generated@@51 $generated@@52 $generated@@148 ($generated@@53 $generated@@149 $generated@@150)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@54 ($generated@@92 $generated@@155 $generated@@153) $generated@@154) ($generated@@51 $generated@@155 $generated@@153 $generated@@154))
 :pattern ( ($generated@@54 ($generated@@92 $generated@@155 $generated@@153) $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@63 $generated@@64 $generated@@156 ($generated@@66 $generated@@157) $generated@@158) (forall (($generated@@159 T@U) ) (!  (=> ($generated@@20 $generated@@156 $generated@@159) ($generated@@117 $generated@@159 $generated@@157 $generated@@158))
 :pattern ( ($generated@@20 $generated@@156 $generated@@159))
)))
 :pattern ( ($generated@@63 $generated@@64 $generated@@156 ($generated@@66 $generated@@157) $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@160 ($generated@@53 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@53 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@163 ($generated@@53 $generated@@164 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@53 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@166 ($generated@@66 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@66 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@168 ($generated@@66 $generated@@169)) $generated)
 :pattern ( ($generated@@66 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@91 $generated@@171 ($generated@@92 $generated@@171 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@92 $generated@@171 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@26 $generated@@172 ($generated@@26 $generated@@172 $generated@@173)) ($generated@@26 $generated@@172 $generated@@173))
 :pattern ( ($generated@@26 $generated@@172 ($generated@@26 $generated@@172 $generated@@173)))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@3 $generated@@174) 5) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@176 $generated@@183 $generated@@184 ($generated@@180 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@185) $generated@@187) $generated@@185)
 :weight 0
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@192 $generated@@193) (= ($generated@@176 $generated@@188 $generated@@189 ($generated@@180 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@190) $generated@@193) ($generated@@176 $generated@@188 $generated@@189 $generated@@191 $generated@@193)))
 :weight 0
))) (= ($generated@@3 $generated@@177) 6)) (= ($generated@@3 $generated@@178) 7)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@3 ($generated@@179 $generated@@194 $generated@@195)) 8))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@179 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@182 ($generated@@179 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@179 $generated@@198 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@81 $generated@@203) (= ($generated@@63 $generated@@52 $generated@@200 ($generated@@53 $generated@@201 $generated@@202) $generated@@203) (forall (($generated@@204 T@U) ) (!  (=> (and (and ($generated@@54 $generated@@204 $generated@@201) ($generated@@117 $generated@@204 $generated@@201 $generated@@203)) ($generated@@69 $generated@@201 $generated@@202 $generated@@203 $generated@@200 $generated@@204)) (forall (($generated@@205 T@U) ) (!  (=> (and (or (not (= $generated@@205 $generated@@175)) (not true)) ($generated@@20 ($generated@@68 $generated@@201 $generated@@202 $generated@@203 $generated@@200 $generated@@204) ($generated@@92 $generated@@174 $generated@@205))) ($generated@@8 ($generated@@91 $generated@@4 ($generated@@176 $generated@@177 $generated@@178 ($generated@@176 $generated@@174 ($generated@@179 $generated@@177 $generated@@178) $generated@@203 $generated@@205) $generated@@0))))
 :pattern ( ($generated@@20 ($generated@@68 $generated@@201 $generated@@202 $generated@@203 $generated@@200 $generated@@204) ($generated@@92 $generated@@174 $generated@@205)))
)))
 :pattern ( ($generated@@100 $generated@@201 $generated@@202 $generated@@203 $generated@@200 $generated@@204))
 :pattern ( ($generated@@68 $generated@@201 $generated@@202 $generated@@203 $generated@@200 $generated@@204))
))))
 :pattern ( ($generated@@63 $generated@@52 $generated@@200 ($generated@@53 $generated@@201 $generated@@202) $generated@@203))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@54 $generated@@208 ($generated@@53 $generated@@206 $generated@@207)) (and (= ($generated@@92 $generated@@52 ($generated@@91 $generated@@52 $generated@@208)) $generated@@208) ($generated@@51 $generated@@52 ($generated@@91 $generated@@52 $generated@@208) ($generated@@53 $generated@@206 $generated@@207))))
 :pattern ( ($generated@@54 $generated@@208 ($generated@@53 $generated@@206 $generated@@207)))
)))
(assert  (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@T) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (= ($generated@@209 $generated@@212 $generated@@213 $generated@@214 ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@217 $generated@@218) $generated@@215)
 :weight 0
)) (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ($generated@@221 T@T) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@209 $generated@@219 $generated@@220 $generated@@221 ($generated@@211 $generated@@219 $generated@@220 $generated@@221 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@209 $generated@@219 $generated@@220 $generated@@221 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@T) ($generated@@229 T@T) ($generated@@230 T@T) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@209 $generated@@228 $generated@@229 $generated@@230 ($generated@@211 $generated@@228 $generated@@229 $generated@@230 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@209 $generated@@228 $generated@@229 $generated@@230 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
)))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (= ($generated@@8 ($generated@@209 $generated@@174 $generated@@177 $generated@@4 ($generated@@210 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (or (not (= $generated@@241 $generated@@237)) (not true)) ($generated@@8 ($generated@@91 $generated@@4 ($generated@@176 $generated@@177 $generated@@178 ($generated@@176 $generated@@174 ($generated@@179 $generated@@177 $generated@@178) $generated@@238 $generated@@241) $generated@@239)))) $generated@@240))
 :pattern ( ($generated@@209 $generated@@174 $generated@@177 $generated@@4 ($generated@@210 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (and (= ($generated@@168 ($generated@@53 $generated@@244 $generated@@245)) $generated@@1) (= ($generated@@243 ($generated@@53 $generated@@244 $generated@@245)) $generated@@2))
 :pattern ( ($generated@@53 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and ($generated@@81 $generated@@248) (and ($generated@@54 $generated@@250 $generated@@246) ($generated@@51 $generated@@52 $generated@@249 ($generated@@53 $generated@@246 $generated@@247)))) ($generated@@70 ($generated@@68 $generated@@246 $generated@@247 $generated@@80 $generated@@249 $generated@@250) $generated@@44)) (= ($generated@@69 $generated@@246 $generated@@247 $generated@@80 $generated@@249 $generated@@250) ($generated@@69 $generated@@246 $generated@@247 $generated@@248 $generated@@249 $generated@@250)))
 :pattern ( ($generated@@69 $generated@@246 $generated@@247 $generated@@80 $generated@@249 $generated@@250) ($generated@@81 $generated@@248))
 :pattern ( ($generated@@69 $generated@@246 $generated@@247 $generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (= ($generated@@65 $generated@@251 ($generated@@99 $generated@@252) $generated@@253 $generated@@254) ($generated@@65 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
 :pattern ( ($generated@@65 $generated@@251 ($generated@@99 $generated@@252) $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> ($generated@@54 $generated@@255 ($generated@@66 $generated@@256)) (and (= ($generated@@92 $generated@@64 ($generated@@91 $generated@@64 $generated@@255)) $generated@@255) ($generated@@51 $generated@@64 ($generated@@91 $generated@@64 $generated@@255) ($generated@@66 $generated@@256))))
 :pattern ( ($generated@@54 $generated@@255 ($generated@@66 $generated@@256)))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (= ($generated@@70 $generated@@257 $generated@@258) (forall (($generated@@259 T@U) ) (! (= ($generated@@20 $generated@@257 $generated@@259) ($generated@@20 $generated@@258 $generated@@259))
 :pattern ( ($generated@@20 $generated@@257 $generated@@259))
 :pattern ( ($generated@@20 $generated@@258 $generated@@259))
)))
 :pattern ( ($generated@@70 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@T) ) (! (= ($generated@@92 $generated@@261 ($generated@@77 $generated@@261 $generated@@260)) ($generated@@77 $generated@@178 ($generated@@92 $generated@@261 $generated@@260)))
 :pattern ( ($generated@@92 $generated@@261 ($generated@@77 $generated@@261 $generated@@260)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 () Bool)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () Bool)
(declare-fun $generated@@272 () Bool)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () Bool)
(declare-fun $generated@@275 () Bool)
(declare-fun $generated@@276 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@277  (and (=> (= (ControlFlow 0 4) (- 0 8)) (exists (($generated@@278 T@U) )  (and ($generated@@54 $generated@@278 $generated@@262) ($generated@@20 $generated@@263 $generated@@278)))) (=> (exists (($generated@@279 T@U) )  (and ($generated@@54 $generated@@279 $generated@@262) ($generated@@20 $generated@@263 $generated@@279))) (=> (and ($generated@@54 $generated@@264 $generated@@262) ($generated@@117 $generated@@264 $generated@@262 $generated@@265)) (=> (and (and ($generated@@20 $generated@@263 $generated@@264) (= $generated@@266 ($generated@@36 $generated@@263 ($generated@@19 $generated@@44 $generated@@264)))) (and ($generated@@63 $generated@@64 $generated@@266 ($generated@@66 $generated@@262) $generated@@265) ($generated@@63 $generated@@52 $generated@@267 ($generated@@53 $generated@@262 $generated@@262) $generated@@265))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (forall (($generated@@280 T@U) ) (!  (=> ($generated@@54 $generated@@280 $generated@@262) (and (=> ($generated@@20 $generated@@266 $generated@@280) ($generated@@69 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@280)) (=> ($generated@@20 $generated@@266 $generated@@280) ($generated@@70 ($generated@@68 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@280) $generated@@44))))
 :pattern ( ($generated@@68 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@280))
 :pattern ( ($generated@@69 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@280))
 :pattern ( ($generated@@20 $generated@@266 $generated@@280))
))) (=> (forall (($generated@@281 T@U) ) (!  (=> ($generated@@54 $generated@@281 $generated@@262) (and (=> ($generated@@20 $generated@@266 $generated@@281) ($generated@@69 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@281)) (=> ($generated@@20 $generated@@266 $generated@@281) ($generated@@70 ($generated@@68 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@281) $generated@@44))))
 :pattern ( ($generated@@68 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@281))
 :pattern ( ($generated@@69 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@281))
 :pattern ( ($generated@@20 $generated@@266 $generated@@281))
)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and ($generated@@87 $generated@@266 $generated@@263) (not ($generated@@87 $generated@@263 $generated@@266)))) (=> (and ($generated@@87 $generated@@266 $generated@@263) (not ($generated@@87 $generated@@263 $generated@@266))) (=> ($generated@@67 $generated@@262 ($generated@@36 $generated@@263 ($generated@@19 $generated@@44 $generated@@264)) $generated@@267) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@69 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@264)) (=> ($generated@@69 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@264) (=> (and (= $generated@@268 (forall (($generated@@282 T@U) ($generated@@283 T@U) )  (=> (and (and (or (not (= $generated@@282 $generated@@175)) (not true)) ($generated@@8 ($generated@@91 $generated@@4 ($generated@@176 $generated@@177 $generated@@178 ($generated@@176 $generated@@174 ($generated@@179 $generated@@177 $generated@@178) $generated@@265 $generated@@282) $generated@@0)))) ($generated@@20 ($generated@@68 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@264) ($generated@@92 $generated@@174 $generated@@282))) ($generated@@8 ($generated@@209 $generated@@174 $generated@@177 $generated@@4 $generated@@269 $generated@@282 $generated@@283))))) ($generated@@41 $generated@@262 $generated@@263)) (=> (and (and (= ($generated@@65 $generated@@262 ($generated@@99 $generated@@270) $generated@@263 $generated@@267) ($generated@@26 ($generated@@65 $generated@@262 ($generated@@99 $generated@@270) ($generated@@36 $generated@@263 ($generated@@19 $generated@@44 $generated@@264)) $generated@@267) ($generated@@19 $generated@@44 ($generated@@100 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@264)))) ($generated@@67 $generated@@262 ($generated@@36 $generated@@263 ($generated@@19 $generated@@44 $generated@@264)) $generated@@267)) (and ($generated@@51 $generated@@64 ($generated@@65 $generated@@262 ($generated@@99 $generated@@270) $generated@@263 $generated@@267) ($generated@@66 $generated@@262)) (= (ControlFlow 0 4) (- 0 3)))) $generated@@268)))))))))))))))
(let (($generated@@284  (=> (and (not (and ($generated@@54 $generated@@264 $generated@@262) ($generated@@117 $generated@@264 $generated@@262 $generated@@265))) (= (ControlFlow 0 10) 4)) $generated@@277)))
(let (($generated@@285  (=> (and (and ($generated@@54 $generated@@264 $generated@@262) ($generated@@117 $generated@@264 $generated@@262 $generated@@265)) (= (ControlFlow 0 9) 4)) $generated@@277)))
(let (($generated@@286  (=> (not ($generated@@70 $generated@@263 $generated@@44)) (and (=> (= (ControlFlow 0 11) 9) $generated@@285) (=> (= (ControlFlow 0 11) 10) $generated@@284)))))
(let (($generated@@287 true))
(let (($generated@@288 true))
(let (($generated@@289  (=> (forall (($generated@@290 T@U) ) (!  (=> ($generated@@54 $generated@@290 $generated@@262) (and (=> ($generated@@20 $generated@@263 $generated@@290) ($generated@@69 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@290)) (=> ($generated@@20 $generated@@263 $generated@@290) ($generated@@70 ($generated@@68 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@290) $generated@@44))))
 :pattern ( ($generated@@68 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@290))
 :pattern ( ($generated@@69 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@290))
 :pattern ( ($generated@@20 $generated@@263 $generated@@290))
)) (and (=> (= (ControlFlow 0 12) (- 0 14)) $generated@@271) (=> $generated@@271 (and (=> (= (ControlFlow 0 12) (- 0 13)) $generated@@272) (=> $generated@@272 (and (and (=> (= (ControlFlow 0 12) 1) $generated@@288) (=> (= (ControlFlow 0 12) 2) $generated@@287)) (=> (= (ControlFlow 0 12) 11) $generated@@286)))))))))
(let (($generated@@291  (=> (and (and (=> ($generated@@20 $generated@@263 $generated@@273) (and ($generated@@69 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@273) ($generated@@70 ($generated@@68 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@273) $generated@@44))) (= $generated@@271 true)) (and (= $generated@@272 true) (= (ControlFlow 0 17) 12))) $generated@@289)))
(let (($generated@@292  (=> ($generated@@20 $generated@@263 $generated@@273) (=> (and ($generated@@117 ($generated@@92 $generated@@52 $generated@@267) ($generated@@53 $generated@@262 $generated@@262) $generated@@265) ($generated@@117 $generated@@273 $generated@@262 $generated@@265)) (=> (and (and (= $generated@@274 (forall (($generated@@293 T@U) ($generated@@294 T@U) )  (=> (and (and (or (not (= $generated@@293 $generated@@175)) (not true)) ($generated@@8 ($generated@@91 $generated@@4 ($generated@@176 $generated@@177 $generated@@178 ($generated@@176 $generated@@174 ($generated@@179 $generated@@177 $generated@@178) $generated@@265 $generated@@293) $generated@@0)))) ($generated@@20 ($generated@@68 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@273) ($generated@@92 $generated@@174 $generated@@293))) ($generated@@8 ($generated@@209 $generated@@174 $generated@@177 $generated@@4 $generated@@269 $generated@@293 $generated@@294))))) ($generated@@69 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@273)) (and ($generated@@117 ($generated@@92 $generated@@52 $generated@@267) ($generated@@53 $generated@@262 $generated@@262) $generated@@265) ($generated@@117 $generated@@273 $generated@@262 $generated@@265))) (and (=> (= (ControlFlow 0 15) (- 0 16)) ($generated@@69 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@273)) (=> ($generated@@69 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@273) (=> (= $generated@@275 (forall (($generated@@295 T@U) ($generated@@296 T@U) )  (=> (and (and (or (not (= $generated@@295 $generated@@175)) (not true)) ($generated@@8 ($generated@@91 $generated@@4 ($generated@@176 $generated@@177 $generated@@178 ($generated@@176 $generated@@174 ($generated@@179 $generated@@177 $generated@@178) $generated@@265 $generated@@295) $generated@@0)))) ($generated@@20 ($generated@@68 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@273) ($generated@@92 $generated@@174 $generated@@295))) ($generated@@8 ($generated@@209 $generated@@174 $generated@@177 $generated@@4 $generated@@269 $generated@@295 $generated@@296))))) (=> (and (and ($generated@@70 ($generated@@68 $generated@@262 $generated@@262 $generated@@265 $generated@@267 $generated@@273) $generated@@44) (= $generated@@271 $generated@@274)) (and (= $generated@@272 $generated@@275) (= (ControlFlow 0 15) 12))) $generated@@289)))))))))
(let (($generated@@297  (=> (= $generated@@269 ($generated@@210 $generated@@175 $generated@@265 $generated@@0 false)) (=> (and ($generated@@54 $generated@@273 $generated@@262) ($generated@@117 $generated@@273 $generated@@262 $generated@@265)) (and (=> (= (ControlFlow 0 18) 15) $generated@@292) (=> (= (ControlFlow 0 18) 17) $generated@@291))))))
(let (($generated@@298  (=> (and ($generated@@81 $generated@@265) ($generated@@276 $generated@@265)) (=> (and (and ($generated@@51 $generated@@64 $generated@@263 ($generated@@66 $generated@@262)) ($generated@@51 $generated@@52 $generated@@267 ($generated@@53 $generated@@262 $generated@@262))) (and (= 0 $generated@@62) (= (ControlFlow 0 19) 18))) $generated@@297))))
$generated@@298))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
