(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@68 (Int) Int)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 (Int) T@U)
(declare-fun $generated@@74 (T@U) Bool)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 () Int)
(declare-fun $generated@@84 () Int)
(declare-fun $generated@@86 () Int)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@118 (T@U) Int)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@167 () Bool)
(declare-fun $generated@@168 () Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and (or (not (= $generated@@29 $generated@@25)) (not true)) (= ($generated@@26 $generated@@29) ($generated@@24 $generated@@28))) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@23 $generated@@29)) $generated))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@24 $generated@@28))
)))
(assert (= ($generated@@5 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35) ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@37 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@37 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@37 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@5 $generated@@38) 4)) (= ($generated@@5 $generated@@39) 5)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@5 ($generated@@40 $generated@@55 $generated@@56)) 6))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@40 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@40 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@40 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@62 ($generated@@24 $generated@@61) $generated@@63)  (or (= $generated@@62 $generated@@25) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@63 $generated@@62) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@62 ($generated@@24 $generated@@61) $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> ($generated@@64 $generated@@65 $generated@@66) (forall (($generated@@67 T@U) ) (!  (=> ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@65 $generated@@67) $generated@@1))) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@66 $generated@@67) $generated@@1))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@66 $generated@@67) $generated@@1))
)))
 :pattern ( ($generated@@64 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 Int) ) (! (= ($generated@@68 $generated@@69) $generated@@69)
 :pattern ( ($generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 $generated@@71) $generated@@71)
 :pattern ( ($generated@@70 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 Int) ) (!  (=> (and (and (and ($generated@@74 $generated@@77) (and (or (not (= $generated@@78 $generated@@25)) (not true)) (= ($generated@@26 $generated@@78) ($generated@@24 $generated@@76)))) (and (<= 0 $generated@@79) (< $generated@@79 ($generated@@23 $generated@@78)))) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@77 $generated@@78) $generated@@1)))) ($generated@@75 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@77 $generated@@78) ($generated@@73 $generated@@79)) $generated@@76 $generated@@77))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@77 $generated@@78) ($generated@@73 $generated@@79)) ($generated@@24 $generated@@76))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@36 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@36 $generated@@82 $generated@@81))
)))
(assert  (=> (< 0 $generated@@83) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@74 $generated@@85) ($generated@@30 $generated@@7 ($generated@@11 $generated@@84) $generated $generated@@85))
 :pattern ( ($generated@@30 $generated@@7 ($generated@@11 $generated@@84) $generated $generated@@85))
))))
(assert  (=> (< 0 $generated@@83) (forall (($generated@@87 T@U) ) (!  (=> ($generated@@74 $generated@@87) ($generated@@30 $generated@@7 ($generated@@11 $generated@@86) $generated $generated@@87))
 :pattern ( ($generated@@30 $generated@@7 ($generated@@11 $generated@@86) $generated $generated@@87))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@89 ($generated@@32 $generated@@88))  (and ($generated@@27 $generated@@31 $generated@@89 ($generated@@24 $generated@@88)) (or (not (= $generated@@89 $generated@@25)) (not true))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@89 ($generated@@32 $generated@@88)))
 :pattern ( ($generated@@27 $generated@@31 $generated@@89 ($generated@@24 $generated@@88)))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@75 ($generated@@80 $generated@@93 $generated@@90) $generated@@91 $generated@@92) ($generated@@30 $generated@@93 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@75 ($generated@@80 $generated@@93 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@64 $generated@@94 $generated@@95) (=> ($generated@@75 $generated@@96 $generated@@97 $generated@@94) ($generated@@75 $generated@@96 $generated@@97 $generated@@95)))
 :pattern ( ($generated@@64 $generated@@94 $generated@@95) ($generated@@75 $generated@@96 $generated@@97 $generated@@94))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (!  (=> ($generated@@64 $generated@@98 $generated@@99) (=> ($generated@@30 $generated@@102 $generated@@100 $generated@@101 $generated@@98) ($generated@@30 $generated@@102 $generated@@100 $generated@@101 $generated@@99)))
 :pattern ( ($generated@@64 $generated@@98 $generated@@99) ($generated@@30 $generated@@102 $generated@@100 $generated@@101 $generated@@98))
)))
(assert (forall (($generated@@104 T@U) ) (!  (and (= ($generated@@22 ($generated@@24 $generated@@104)) $generated@@2) (= ($generated@@103 ($generated@@24 $generated@@104)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@22 ($generated@@32 $generated@@105)) $generated@@3) (= ($generated@@103 ($generated@@32 $generated@@105)) $generated@@4))
 :pattern ( ($generated@@32 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@107 ($generated@@24 $generated@@106))  (or (= $generated@@107 $generated@@25) (= ($generated@@26 $generated@@107) ($generated@@24 $generated@@106))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@107 ($generated@@24 $generated@@106)))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or (not (= $generated@@108 $generated@@110)) (not true)) (=> (and ($generated@@64 $generated@@108 $generated@@109) ($generated@@64 $generated@@109 $generated@@110)) ($generated@@64 $generated@@108 $generated@@110)))
 :pattern ( ($generated@@64 $generated@@108 $generated@@109) ($generated@@64 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@111 $generated@@112 $generated) (and (= ($generated@@80 $generated@@7 ($generated@@36 $generated@@7 $generated@@112)) $generated@@112) ($generated@@27 $generated@@7 ($generated@@36 $generated@@7 $generated@@112) $generated)))
 :pattern ( ($generated@@111 $generated@@112 $generated))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@111 ($generated@@80 $generated@@115 $generated@@113) $generated@@114) ($generated@@27 $generated@@115 $generated@@113 $generated@@114))
 :pattern ( ($generated@@111 ($generated@@80 $generated@@115 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ) (! (<= 0 ($generated@@23 $generated@@116))
 :pattern ( ($generated@@23 $generated@@116))
)))
(assert  (=> (< 0 $generated@@83) ($generated@@27 $generated@@7 ($generated@@11 $generated@@84) $generated)))
(assert  (=> (< 0 $generated@@83) ($generated@@27 $generated@@7 ($generated@@11 $generated@@86) $generated)))
(assert (forall (($generated@@117 Int) ) (! (= ($generated@@21 ($generated@@73 $generated@@117)) 1)
 :pattern ( ($generated@@73 $generated@@117))
)))
(assert (forall (($generated@@119 Int) ) (! (= ($generated@@118 ($generated@@73 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@73 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@24 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@24 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@32 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@32 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@36 $generated@@125 ($generated@@80 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@80 $generated@@125 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and (and ($generated@@74 $generated@@127) (and (or (not (= $generated@@128 $generated@@25)) (not true)) (= ($generated@@26 $generated@@128) ($generated@@24 $generated@@126)))) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@127 $generated@@128) $generated@@1)))) ($generated@@30 $generated@@7 ($generated@@11 ($generated@@23 $generated@@128)) $generated $generated@@127))
 :pattern ( ($generated@@23 $generated@@128) ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@127 $generated@@128) $generated@@1)) ($generated@@24 $generated@@126))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 Int) ) (!  (=> (and (and ($generated@@74 $generated@@130) (and (or (not (= $generated@@131 $generated@@25)) (not true)) (= ($generated@@26 $generated@@131) ($generated@@24 $generated@@129)))) (and (<= 0 $generated@@132) (< $generated@@132 ($generated@@23 $generated@@131)))) ($generated@@111 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@130 $generated@@131) ($generated@@73 $generated@@132)) $generated@@129))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@130 $generated@@131) ($generated@@73 $generated@@132)) ($generated@@24 $generated@@129))
)))
(assert (= $generated@@86 ($generated@@68 25)))
(assert  (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@133 $generated@@136 $generated@@137 $generated@@138 ($generated@@135 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@141 $generated@@142) $generated@@139)
 :weight 0
)) (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@133 $generated@@143 $generated@@144 $generated@@145 ($generated@@135 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@133 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@133 $generated@@152 $generated@@153 $generated@@154 ($generated@@135 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@133 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@10 ($generated@@133 $generated@@31 $generated@@38 $generated@@6 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))  (=> (and (or (not (= $generated@@165 $generated@@161)) (not true)) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@162 $generated@@165) $generated@@163)))) $generated@@164))
 :pattern ( ($generated@@133 $generated@@31 $generated@@38 $generated@@6 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))
)))
(assert  (=> (<= 1 $generated@@83) (=> (or $generated@@167 (< 1 $generated@@83)) (= $generated@@168 $generated@@86))))
(assert  (=> (<= 1 $generated@@83) (=> (or $generated@@167 (< 1 $generated@@83)) (= $generated@@168 $generated@@86))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@111 $generated@@170 ($generated@@24 $generated@@169)) (and (= ($generated@@80 $generated@@31 ($generated@@36 $generated@@31 $generated@@170)) $generated@@170) ($generated@@27 $generated@@31 ($generated@@36 $generated@@31 $generated@@170) ($generated@@24 $generated@@169))))
 :pattern ( ($generated@@111 $generated@@170 ($generated@@24 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@111 $generated@@172 ($generated@@32 $generated@@171)) (and (= ($generated@@80 $generated@@31 ($generated@@36 $generated@@31 $generated@@172)) $generated@@172) ($generated@@27 $generated@@31 ($generated@@36 $generated@@31 $generated@@172) ($generated@@32 $generated@@171))))
 :pattern ( ($generated@@111 $generated@@172 ($generated@@32 $generated@@171)))
)))
(assert (forall (($generated@@173 Int) ) (! (= ($generated@@80 $generated@@7 ($generated@@11 ($generated@@68 $generated@@173))) ($generated@@70 $generated@@39 ($generated@@80 $generated@@7 ($generated@@11 $generated@@173))))
 :pattern ( ($generated@@80 $generated@@7 ($generated@@11 ($generated@@68 $generated@@173))))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@80 $generated@@175 ($generated@@70 $generated@@175 $generated@@174)) ($generated@@70 $generated@@39 ($generated@@80 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@80 $generated@@175 ($generated@@70 $generated@@175 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! ($generated@@30 $generated@@7 $generated@@177 $generated $generated@@176)
 :pattern ( ($generated@@30 $generated@@7 $generated@@177 $generated $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (! ($generated@@27 $generated@@7 $generated@@178 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@178 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@189  (=> (= $generated@@179 ($generated@@134 $generated@@25 $generated@@180 $generated@@1 false)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (not (= $generated@@181 $generated@@25)) (not true))) (=> (or (not (= $generated@@181 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@30 $generated@@31 $generated@@181 ($generated@@24 $generated) $generated@@182)) (=> ($generated@@30 $generated@@31 $generated@@181 ($generated@@24 $generated) $generated@@182) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 ($generated@@68 3)) (< ($generated@@68 3) ($generated@@23 $generated@@181)))) (=> (and (<= 0 ($generated@@68 3)) (< ($generated@@68 3) ($generated@@23 $generated@@181))) (=> (and (and (= $generated@@183 (+ $generated@@84 ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@182 $generated@@181) ($generated@@73 ($generated@@68 3))))))) $generated@@167) (and $generated@@167 (= $generated@@184 ($generated@@68 $generated@@168)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@181 $generated@@25)) (not true))) (=> (or (not (= $generated@@181 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@68 3)) (< ($generated@@68 3) ($generated@@23 $generated@@181)))) (=> (and (<= 0 ($generated@@68 3)) (< ($generated@@68 3) ($generated@@23 $generated@@181))) (=> (= $generated@@185 (+ $generated@@84 ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@180 $generated@@181) ($generated@@73 ($generated@@68 3))))))) (=> (and (and $generated@@167 $generated@@167) (and (= $generated@@186 ($generated@@68 $generated@@168)) (= (ControlFlow 0 2) (- 0 1)))) (= (+ ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@187 $generated@@181) ($generated@@73 ($generated@@68 3))))) $generated@@84) $generated@@84)))))))))))))))))
(let (($generated@@190  (=> (and ($generated@@74 $generated@@182) ($generated@@188 $generated@@182)) (=> (and (and (and (and ($generated@@27 $generated@@31 $generated@@181 ($generated@@32 $generated)) ($generated@@30 $generated@@31 $generated@@181 ($generated@@32 $generated) $generated@@187)) (= 2 $generated@@83)) (and (= $generated@@187 $generated@@182) (and ($generated@@64 $generated@@187 $generated@@180) ($generated@@74 $generated@@180)))) (and (and ($generated@@30 $generated@@31 $generated@@181 ($generated@@32 $generated) $generated@@187) (= ($generated@@23 $generated@@181) ($generated@@68 100))) (and (= (+ $generated@@84 ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@187 $generated@@181) ($generated@@73 ($generated@@68 3)))))) $generated@@84) (= (ControlFlow 0 8) 2)))) $generated@@189))))
$generated@@190)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
