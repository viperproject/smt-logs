(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@85 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert (= ($generated@@8 $generated@@28) 3))
(assert (forall (($generated@@32 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@32 $generated@@29)  (or (= $generated@@32 $generated@@30) (= ($generated@@31 $generated@@32) $generated@@29)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 $generated@@29))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@33 $generated@@28 $generated@@35 $generated@@34 $generated@@36) ($generated@@33 $generated@@28 $generated@@35 $generated@@29 $generated@@36))
 :pattern ( ($generated@@33 $generated@@28 $generated@@35 $generated@@34 $generated@@36))
 :pattern ( ($generated@@33 $generated@@28 $generated@@35 $generated@@29 $generated@@36))
)))
(assert (= ($generated@@24 $generated@@37) 0))
(assert (= ($generated@@38 $generated@@5 $generated@@7) $generated@@37))
(assert  (not ($generated@@39 $generated@@37)))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@41 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@41 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@41 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@8 $generated@@42) 4)) (= ($generated@@8 $generated@@43) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@8 ($generated@@44 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@44 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@44 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@44 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@33 $generated@@28 $generated@@65 $generated@@29 $generated@@66)  (or (= $generated@@65 $generated@@30) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@66 $generated@@65) $generated@@1)))))
 :pattern ( ($generated@@33 $generated@@28 $generated@@65 $generated@@29 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@67 $generated@@68 $generated@@69) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@68 $generated@@70) $generated@@1))) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@69 $generated@@70) $generated@@1))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@69 $generated@@70) $generated@@1))
)))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@40 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@40 $generated@@76 $generated@@75))
)))
(assert ($generated@@39 $generated@@1))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and (and ($generated@@77 $generated@@78) (and (or (not (= $generated@@79 $generated@@30)) (not true)) (= ($generated@@31 $generated@@79) $generated@@29))) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@78 $generated@@79) $generated@@1)))) ($generated@@33 $generated@@10 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@78 $generated@@79) $generated@@37)) $generated $generated@@78))
 :pattern ( ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@78 $generated@@79) $generated@@37)))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (!  (=> ($generated@@67 $generated@@80 $generated@@81) (=> ($generated@@33 $generated@@84 $generated@@82 $generated@@83 $generated@@80) ($generated@@33 $generated@@84 $generated@@82 $generated@@83 $generated@@81)))
 :pattern ( ($generated@@67 $generated@@80 $generated@@81) ($generated@@33 $generated@@84 $generated@@82 $generated@@83 $generated@@80))
)))
(assert  (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@85 $generated@@88 $generated@@89 $generated@@90 ($generated@@87 $generated@@88 $generated@@89 $generated@@90 $generated@@92 $generated@@93 $generated@@94 $generated@@91) $generated@@93 $generated@@94) $generated@@91)
 :weight 0
)) (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (or (= $generated@@100 $generated@@102) (= ($generated@@85 $generated@@95 $generated@@96 $generated@@97 ($generated@@87 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@100 $generated@@101 $generated@@98) $generated@@102 $generated@@103) ($generated@@85 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@102 $generated@@103)))
 :weight 0
)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@110 $generated@@112) (= ($generated@@85 $generated@@104 $generated@@105 $generated@@106 ($generated@@87 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@111 $generated@@112) ($generated@@85 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@111 $generated@@112)))
 :weight 0
)))))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@13 ($generated@@85 $generated@@28 $generated@@42 $generated@@9 ($generated@@86 $generated@@113 $generated@@114 $generated@@115 $generated@@116) $generated@@117 $generated@@118))  (=> (and (or (not (= $generated@@117 $generated@@113)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@114 $generated@@117) $generated@@115)))) (= $generated@@117 $generated@@116)))
 :pattern ( ($generated@@85 $generated@@28 $generated@@42 $generated@@9 ($generated@@86 $generated@@113 $generated@@114 $generated@@115 $generated@@116) $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@119 $generated@@34)  (and ($generated@@27 $generated@@28 $generated@@119 $generated@@29) (or (not (= $generated@@119 $generated@@30)) (not true))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@119 $generated@@34))
 :pattern ( ($generated@@27 $generated@@28 $generated@@119 $generated@@29))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (or (not (= $generated@@120 $generated@@122)) (not true)) (=> (and ($generated@@67 $generated@@120 $generated@@121) ($generated@@67 $generated@@121 $generated@@122)) ($generated@@67 $generated@@120 $generated@@122)))
 :pattern ( ($generated@@67 $generated@@120 $generated@@121) ($generated@@67 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (and (= ($generated@@123 ($generated@@38 $generated@@124 $generated@@125)) $generated@@124) (= ($generated@@26 ($generated@@38 $generated@@124 $generated@@125)) $generated@@125))
 :pattern ( ($generated@@38 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@40 $generated@@127 ($generated@@74 $generated@@127 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@74 $generated@@127 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and ($generated@@77 $generated@@128) (and (or (not (= $generated@@129 $generated@@30)) (not true)) (= ($generated@@31 $generated@@129) $generated@@29))) ($generated@@27 $generated@@10 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@128 $generated@@129) $generated@@37)) $generated))
 :pattern ( ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@128 $generated@@129) $generated@@37)))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@77 ($generated@@45 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@130 $generated@@131 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@130 $generated@@131) $generated@@132 $generated@@133))) ($generated@@67 $generated@@130 ($generated@@45 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@130 $generated@@131 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@130 $generated@@131) $generated@@132 $generated@@133))))
 :pattern ( ($generated@@45 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@130 $generated@@131 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@130 $generated@@131) $generated@@132 $generated@@133)))
)))
(assert (= ($generated@@25 $generated@@34) $generated@@3))
(assert (= ($generated@@134 $generated@@34) $generated@@6))
(assert (= ($generated@@25 $generated@@29) $generated@@4))
(assert (= ($generated@@134 $generated@@29) $generated@@6))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@74 $generated@@136 ($generated@@71 $generated@@136 $generated@@135)) ($generated@@71 $generated@@43 ($generated@@74 $generated@@136 $generated@@135)))
 :pattern ( ($generated@@74 $generated@@136 ($generated@@71 $generated@@136 $generated@@135)))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! ($generated@@33 $generated@@10 $generated@@138 $generated $generated@@137)
 :pattern ( ($generated@@33 $generated@@10 $generated@@138 $generated $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (! ($generated@@27 $generated@@10 $generated@@139 $generated)
 :pattern ( ($generated@@27 $generated@@10 $generated@@139 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@140 () Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () Bool)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () Bool)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 54) (let (($generated@@161  (=> (= (ControlFlow 0 25) (- 0 24)) (or $generated@@140 (and (or (not (= $generated@@141 $generated@@30)) (not true)) (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@142 $generated@@141) $generated@@1)))))))))
(let (($generated@@162  (=> (and $generated@@140 (= (ControlFlow 0 28) 25)) $generated@@161)))
(let (($generated@@163  (=> (not $generated@@140) (and (=> (= (ControlFlow 0 26) (- 0 27)) true) (=> (= (ControlFlow 0 26) 25) $generated@@161)))))
(let (($generated@@164  (and (=> (= (ControlFlow 0 29) 26) $generated@@163) (=> (= (ControlFlow 0 29) 28) $generated@@162))))
(let (($generated@@165  (=> (and (and (and (and (and (and (and (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true)))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (= (ControlFlow 0 23) (- 0 22))) false)))
(let (($generated@@166  (and (=> (= (ControlFlow 0 20) (- 0 21)) true) (=> (= (ControlFlow 0 20) (- 0 19)) (and (or (not (= $generated@@141 $generated@@30)) (not true)) (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@142 $generated@@141) $generated@@1)))))))))
(let (($generated@@167  (and (=> (= (ControlFlow 0 14) (- 0 18)) true) (and (=> (= (ControlFlow 0 14) (- 0 17)) true) (and (=> (= (ControlFlow 0 14) (- 0 16)) (and (or (not (= $generated@@143 $generated@@30)) (not true)) (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@144 $generated@@143) $generated@@1)))))) (=> (and (or (not (= $generated@@143 $generated@@30)) (not true)) (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@144 $generated@@143) $generated@@1))))) (and (=> (= (ControlFlow 0 14) (- 0 15)) true) (=> (= (ControlFlow 0 14) (- 0 13)) (and (or (not (= $generated@@143 $generated@@30)) (not true)) (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@145 $generated@@143) $generated@@1)))))))))))))
(let (($generated@@168  (and (=> (= (ControlFlow 0 11) (- 0 12)) true) (=> (= (ControlFlow 0 11) (- 0 10)) (and (or (not (= $generated@@141 $generated@@30)) (not true)) (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@144 $generated@@141) $generated@@1)))))))))
(let (($generated@@169  (and (=> (= (ControlFlow 0 8) (- 0 9)) true) (=> (= (ControlFlow 0 8) (- 0 7)) (and (or (not (= $generated@@143 $generated@@30)) (not true)) (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@145 $generated@@143) $generated@@1)))))))))
(let (($generated@@170  (and (=> (= (ControlFlow 0 5) (- 0 6)) true) (=> (= (ControlFlow 0 5) (- 0 4)) (and (or (not (= $generated@@143 $generated@@30)) (not true)) (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@144 $generated@@143) $generated@@1)))))))))
(let (($generated@@171  (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (and (or (not (= $generated@@143 $generated@@30)) (not true)) (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@142 $generated@@143) $generated@@1)))))))))
(let (($generated@@172  (=> (and (or (not (= $generated@@143 $generated@@30)) (not true)) ($generated@@27 $generated@@28 $generated@@143 $generated@@29)) (=> (and (and (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@144 $generated@@143) $generated@@1)))) (= $generated@@145 ($generated@@45 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@144 $generated@@143 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@144 $generated@@143) $generated@@1 ($generated@@74 $generated@@9 ($generated@@12 true)))))) (and ($generated@@77 $generated@@145) ($generated@@146 $generated@@145))) (and (and (and (and (and (and (and (=> (= (ControlFlow 0 30) 2) $generated@@171) (=> (= (ControlFlow 0 30) 5) $generated@@170)) (=> (= (ControlFlow 0 30) 8) $generated@@169)) (=> (= (ControlFlow 0 30) 11) $generated@@168)) (=> (= (ControlFlow 0 30) 14) $generated@@167)) (=> (= (ControlFlow 0 30) 20) $generated@@166)) (=> (= (ControlFlow 0 30) 29) $generated@@164)) (=> (= (ControlFlow 0 30) 23) $generated@@165))))))
(let (($generated@@173  (and (=> (= (ControlFlow 0 43) (- 0 44)) (=> (or (not (= $generated@@141 $generated@@147)) (not true)) (and (or (not (= $generated@@141 $generated@@30)) (not true)) (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@142 $generated@@141) $generated@@1))))))) (=> (=> (or (not (= $generated@@141 $generated@@147)) (not true)) (and (or (not (= $generated@@141 $generated@@30)) (not true)) (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@142 $generated@@141) $generated@@1)))))) (=> (and (= $generated@@144 $generated@@148) (= (ControlFlow 0 43) 30)) $generated@@172)))))
(let (($generated@@174  (=> (and (= $generated@@141 $generated@@147) (= (ControlFlow 0 47) 43)) $generated@@173)))
(let (($generated@@175  (=> (or (not (= $generated@@141 $generated@@147)) (not true)) (and (=> (= (ControlFlow 0 45) (- 0 46)) true) (=> (= (ControlFlow 0 45) 43) $generated@@173)))))
(let (($generated@@176  (=> (< $generated@@149 5) (and (=> (= (ControlFlow 0 48) (- 0 49)) true) (and (=> (= (ControlFlow 0 48) 45) $generated@@175) (=> (= (ControlFlow 0 48) 47) $generated@@174))))))
(let (($generated@@177  (and (=> (= (ControlFlow 0 31) (- 0 32)) (=> (or (not (= $generated@@141 $generated@@147)) (not true)) (and (or (not (= $generated@@141 $generated@@30)) (not true)) (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@142 $generated@@141) $generated@@1))))))) (=> (=> (or (not (= $generated@@141 $generated@@147)) (not true)) (and (or (not (= $generated@@141 $generated@@30)) (not true)) (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@142 $generated@@141) $generated@@1)))))) (=> (and (= $generated@@144 $generated@@150) (= (ControlFlow 0 31) 30)) $generated@@172)))))
(let (($generated@@178  (=> (and (= $generated@@141 $generated@@147) (= (ControlFlow 0 35) 31)) $generated@@177)))
(let (($generated@@179  (=> (or (not (= $generated@@141 $generated@@147)) (not true)) (and (=> (= (ControlFlow 0 33) (- 0 34)) true) (=> (= (ControlFlow 0 33) 31) $generated@@177)))))
(let (($generated@@180  (=> (<= 5 $generated@@149) (and (=> (= (ControlFlow 0 36) (- 0 42)) true) (and (=> (= (ControlFlow 0 36) (- 0 41)) (or (not (= $generated@@141 $generated@@30)) (not true))) (=> (or (not (= $generated@@141 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 36) (- 0 40)) ($generated@@13 ($generated@@85 $generated@@28 $generated@@42 $generated@@9 $generated@@151 $generated@@141 $generated@@37))) (=> ($generated@@13 ($generated@@85 $generated@@28 $generated@@42 $generated@@9 $generated@@151 $generated@@141 $generated@@37)) (and (=> (= (ControlFlow 0 36) (- 0 39)) true) (and (=> (= (ControlFlow 0 36) (- 0 38)) (or (not (= $generated@@141 $generated@@30)) (not true))) (=> (or (not (= $generated@@141 $generated@@30)) (not true)) (=> (= $generated@@152 (+ ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@148 $generated@@141) $generated@@37))) 2)) (=> (and (= $generated@@150 ($generated@@45 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@148 $generated@@141 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@148 $generated@@141) $generated@@37 ($generated@@74 $generated@@10 ($generated@@14 $generated@@152))))) ($generated@@77 $generated@@150)) (and (=> (= (ControlFlow 0 36) (- 0 37)) true) (and (=> (= (ControlFlow 0 36) 33) $generated@@179) (=> (= (ControlFlow 0 36) 35) $generated@@178))))))))))))))))
(let (($generated@@181  (and (=> (= (ControlFlow 0 50) 48) $generated@@176) (=> (= (ControlFlow 0 50) 36) $generated@@180))))
(let (($generated@@182  (=> (not $generated@@140) (=> (and (= $generated@@141 $generated@@153) (= (ControlFlow 0 52) 50)) $generated@@181))))
(let (($generated@@183  (=> $generated@@140 (=> (and (= $generated@@141 $generated@@147) (= (ControlFlow 0 51) 50)) $generated@@181))))
(let (($generated@@184  (=> (= $generated@@151 ($generated@@86 $generated@@30 $generated@@142 $generated@@1 $generated@@147)) (=> (and (or (not (= $generated@@153 $generated@@30)) (not true)) ($generated@@27 $generated@@28 $generated@@153 $generated@@29)) (=> (and (and (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@142 $generated@@153) $generated@@1)))) (= $generated@@148 ($generated@@45 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@142 $generated@@153 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@142 $generated@@153) $generated@@1 ($generated@@74 $generated@@9 ($generated@@12 true)))))) (and ($generated@@77 $generated@@148) ($generated@@146 $generated@@148))) (and (=> (= (ControlFlow 0 53) 51) $generated@@183) (=> (= (ControlFlow 0 53) 52) $generated@@182)))))))
(let (($generated@@185  (=> (and (and ($generated@@77 $generated@@142) ($generated@@146 $generated@@142)) (and (or (not (= $generated@@147 $generated@@30)) (not true)) (and ($generated@@27 $generated@@28 $generated@@147 $generated@@34) ($generated@@33 $generated@@28 $generated@@147 $generated@@34 $generated@@142)))) (=> (and (and (and (=> $generated@@154 (and ($generated@@27 $generated@@28 $generated@@155 $generated@@34) ($generated@@33 $generated@@28 $generated@@155 $generated@@34 $generated@@142))) true) (and (=> $generated@@156 (and ($generated@@27 $generated@@28 $generated@@157 $generated@@34) ($generated@@33 $generated@@28 $generated@@157 $generated@@34 $generated@@142))) true)) (and (and (=> $generated@@158 (and ($generated@@27 $generated@@28 $generated@@159 $generated@@34) ($generated@@33 $generated@@28 $generated@@159 $generated@@34 $generated@@142))) true) (and (= 1 $generated@@160) (= (ControlFlow 0 54) 53)))) $generated@@184))))
$generated@@185))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 8) (- 7))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 14) (- 13))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 11) (- 10))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 20) (- 19))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
