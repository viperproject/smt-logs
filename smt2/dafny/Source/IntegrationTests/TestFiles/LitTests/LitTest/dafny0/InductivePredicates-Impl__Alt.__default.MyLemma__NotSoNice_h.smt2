(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U) Int)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@47 (Int) T@U)
(declare-fun $generated@@48 (T@U) Int)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@T T@U T@U) Bool)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 (T@U T@U) Bool)
(declare-fun $generated@@61 (Int) Int)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@140 (T@T T@T) T@T)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@193 (Int Int) Int)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@27 $generated@@30 $generated@@31) (=> ($generated@@25 $generated@@28 $generated@@30 $generated@@29) ($generated@@25 $generated@@28 $generated@@31 $generated@@29)))
 :pattern ( ($generated@@25 $generated@@28 $generated@@30 $generated@@29) ($generated@@26 $generated@@30 $generated@@32) ($generated@@26 $generated@@31 $generated@@32))
))))
(assert (= ($generated@@33 $generated) $generated@@0))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and ($generated@@27 $generated@@34 $generated@@35) ($generated@@27 $generated@@35 $generated@@36)) ($generated@@27 $generated@@34 $generated@@36))
 :pattern ( ($generated@@27 $generated@@34 $generated@@35) ($generated@@27 $generated@@35 $generated@@36))
 :pattern ( ($generated@@27 $generated@@34 $generated@@35) ($generated@@27 $generated@@34 $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! ($generated@@37 $generated@@10 $generated@@39 $generated@@38 $generated@@40)
 :pattern ( ($generated@@37 $generated@@10 $generated@@39 $generated@@38 $generated@@40))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (and ($generated@@42 $generated@@44) ($generated@@42 $generated@@45)) (= ($generated@@41 $generated@@44 $generated@@45) (= ($generated@@43 $generated@@44) ($generated@@43 $generated@@45))))
 :pattern ( ($generated@@41 $generated@@44 $generated@@45) ($generated@@42 $generated@@44))
 :pattern ( ($generated@@41 $generated@@44 $generated@@45) ($generated@@42 $generated@@45))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 Int) ($generated@@51 Int) ) (!  (=> (and (and (<= 0 $generated@@50) (<= 0 $generated@@51)) (<= (+ $generated@@50 $generated@@51) ($generated@@48 $generated@@49))) (= ($generated@@46 ($generated@@46 $generated@@49 ($generated@@47 $generated@@50)) ($generated@@47 $generated@@51)) ($generated@@46 $generated@@49 ($generated@@47 (+ $generated@@50 $generated@@51)))))
 :pattern ( ($generated@@46 ($generated@@46 $generated@@49 ($generated@@47 $generated@@50)) ($generated@@47 $generated@@51)))
)))
(assert (= ($generated@@52 $generated@@53) $generated@@5))
(assert (= ($generated@@8 $generated@@55) 3))
(assert ($generated@@54 $generated@@55 $generated@@53 $generated@@56))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@41 $generated@@57 $generated@@58) (= $generated@@57 $generated@@58))
 :pattern ( ($generated@@41 $generated@@57 $generated@@58))
)))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@60 $generated@@66 $generated@@67) (and (< 3 $generated@@24) ($generated@@54 $generated@@55 $generated@@67 $generated@@56))) (and (and (=> (< 0 ($generated@@48 $generated@@66)) (=> (not (and ($generated@@42 $generated@@67) (= ($generated@@43 $generated@@67) ($generated@@61 0)))) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@54 $generated@@55 $generated@@68 $generated@@56) (and (and (and ($generated@@63 $generated@@67) ($generated@@63 ($generated@@62 ($generated@@62 $generated@@68)))) (and ($generated@@64 $generated@@68) ($generated@@64 ($generated@@62 $generated@@68)))) (=> ($generated@@41 $generated@@67 ($generated@@62 ($generated@@62 $generated@@68))) ($generated@@60 ($generated@@46 $generated@@66 ($generated@@47 1)) $generated@@68))))
 :pattern ( ($generated@@25 $generated@@65 ($generated@@46 $generated@@66 ($generated@@47 1)) $generated@@68))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@68)))
)))) (=> (=> (< 0 ($generated@@48 $generated@@66)) (or (and ($generated@@42 $generated@@67) (= ($generated@@43 $generated@@67) ($generated@@61 0))) (exists (($generated@@69 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@69 $generated@@56) (and ($generated@@41 $generated@@67 ($generated@@62 ($generated@@62 $generated@@69))) ($generated@@25 $generated@@65 ($generated@@46 $generated@@66 ($generated@@47 1)) $generated@@69)))
 :pattern ( ($generated@@25 $generated@@65 ($generated@@46 $generated@@66 ($generated@@47 1)) $generated@@69))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@69)))
)))) (=> (= ($generated@@61 0) ($generated@@48 $generated@@66)) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@26 $generated@@70 $generated@@66) ($generated@@60 $generated@@70 $generated@@67))
 :pattern ( ($generated@@25 $generated@@65 $generated@@70 $generated@@67))
))))) (= ($generated@@25 ($generated@@59 $generated@@65) $generated@@66 $generated@@67)  (and (=> (< 0 ($generated@@48 $generated@@66)) (or (and ($generated@@42 $generated@@67) (= ($generated@@43 $generated@@67) ($generated@@61 0))) (exists (($generated@@71 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@71 $generated@@56) (and ($generated@@41 $generated@@67 ($generated@@62 ($generated@@62 $generated@@71))) ($generated@@25 $generated@@65 ($generated@@46 $generated@@66 ($generated@@47 1)) $generated@@71)))
 :pattern ( ($generated@@25 $generated@@65 ($generated@@46 $generated@@66 ($generated@@47 1)) $generated@@71))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@71)))
)))) (=> (= ($generated@@61 0) ($generated@@48 $generated@@66)) (exists (($generated@@72 T@U) ) (!  (and ($generated@@26 $generated@@72 $generated@@66) ($generated@@25 $generated@@65 $generated@@72 $generated@@67))
 :pattern ( ($generated@@25 $generated@@65 $generated@@72 $generated@@67))
)))))))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@65) $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@73 Int) ) (! (= ($generated@@61 $generated@@73) $generated@@73)
 :pattern ( ($generated@@61 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 $generated@@75) $generated@@75)
 :pattern ( ($generated@@74 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@42 $generated@@77) (= ($generated@@52 $generated@@77) $generated@@4))
 :pattern ( ($generated@@42 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@78 $generated@@79) (= ($generated@@52 $generated@@79) $generated@@5))
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@80 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@80 $generated@@83 $generated@@82))
)))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and ($generated@@54 $generated@@55 $generated@@85 $generated@@56) (= $generated@@86 ($generated@@47 0))) (not ($generated@@25 $generated@@84 $generated@@86 $generated@@85)))
 :pattern ( ($generated@@25 $generated@@84 $generated@@86 $generated@@85))
))))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@78 $generated@@87) (= $generated@@87 $generated@@53))
 :pattern ( ($generated@@78 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@42 $generated@@89) (exists (($generated@@90 Int) ) (= $generated@@89 ($generated@@88 $generated@@90))))
 :pattern ( ($generated@@42 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@54 $generated@@10 $generated@@91 $generated@@38) (<= ($generated@@61 0) ($generated@@15 $generated@@91)))
 :pattern ( ($generated@@54 $generated@@10 $generated@@91 $generated@@38))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@25 ($generated@@59 $generated@@92) $generated@@93 $generated@@94) ($generated@@25 $generated@@92 $generated@@93 $generated@@94))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@92) $generated@@93 $generated@@94))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@95 T@U) ) (!  (=> (or ($generated@@64 $generated@@95) (and (< 1 $generated@@24) ($generated@@54 $generated@@55 $generated@@95 $generated@@56))) (= ($generated@@62 $generated@@95) (ite ($generated@@42 $generated@@95) (let (($generated@@96 ($generated@@43 $generated@@95)))
($generated@@88 (+ $generated@@96 1))) $generated@@53)))
 :pattern ( ($generated@@62 $generated@@95))
))))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and ($generated@@97 $generated@@99) (<= ($generated@@48 $generated@@99) ($generated@@48 $generated@@98))) (and (= ($generated@@97 ($generated@@46 $generated@@98 $generated@@99)) ($generated@@97 $generated@@98)) (= ($generated@@48 ($generated@@46 $generated@@98 $generated@@99)) (- ($generated@@48 $generated@@98) ($generated@@48 $generated@@99)))))
 :pattern ( ($generated@@46 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 Int) ) (!  (=> (<= 0 $generated@@100) (and ($generated@@97 ($generated@@47 $generated@@100)) (= ($generated@@48 ($generated@@47 $generated@@100)) $generated@@100)))
 :pattern ( ($generated@@47 $generated@@100))
)))
(assert (forall (($generated@@101 Int) ) (! (= ($generated@@54 $generated@@55 ($generated@@88 $generated@@101) $generated@@56) ($generated@@54 $generated@@10 ($generated@@14 $generated@@101) $generated@@38))
 :pattern ( ($generated@@54 $generated@@55 ($generated@@88 $generated@@101) $generated@@56))
)))
(assert (= ($generated@@8 $generated@@102) 4))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (or ($generated@@60 ($generated@@74 $generated@@102 $generated@@104) $generated@@105) (and (< 3 $generated@@24) ($generated@@54 $generated@@55 $generated@@105 $generated@@56))) (and (and (=> (< 0 ($generated@@48 $generated@@104)) (=> (not (and ($generated@@42 $generated@@105) (= ($generated@@43 $generated@@105) ($generated@@61 0)))) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@54 $generated@@55 $generated@@106 $generated@@56) (and (and (and ($generated@@63 $generated@@105) ($generated@@63 ($generated@@62 ($generated@@62 $generated@@106)))) (and ($generated@@64 $generated@@106) ($generated@@64 ($generated@@62 $generated@@106)))) (=> ($generated@@41 $generated@@105 ($generated@@62 ($generated@@62 $generated@@106))) ($generated@@60 ($generated@@46 $generated@@104 ($generated@@47 1)) $generated@@106))))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@103) ($generated@@46 $generated@@104 ($generated@@47 1)) $generated@@106))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@106)))
)))) (=> (=> (< 0 ($generated@@48 $generated@@104)) (or (and ($generated@@42 $generated@@105) (= ($generated@@43 $generated@@105) ($generated@@61 0))) (exists (($generated@@107 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@107 $generated@@56) (and ($generated@@41 $generated@@105 ($generated@@62 ($generated@@62 $generated@@107))) ($generated@@25 ($generated@@59 $generated@@103) ($generated@@46 $generated@@104 ($generated@@47 1)) $generated@@107)))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@103) ($generated@@46 $generated@@104 ($generated@@47 1)) $generated@@107))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@107)))
)))) (=> (= ($generated@@61 0) ($generated@@48 $generated@@104)) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@26 $generated@@108 $generated@@104) ($generated@@60 $generated@@108 $generated@@105))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@103) $generated@@108 $generated@@105))
))))) (= ($generated@@25 ($generated@@59 $generated@@103) ($generated@@74 $generated@@102 $generated@@104) $generated@@105)  (and (=> (< 0 ($generated@@48 $generated@@104)) (or (and ($generated@@42 $generated@@105) (= ($generated@@43 $generated@@105) ($generated@@61 0))) (exists (($generated@@109 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@109 $generated@@56) (and ($generated@@41 $generated@@105 ($generated@@62 ($generated@@62 $generated@@109))) ($generated@@25 ($generated@@59 $generated@@103) ($generated@@46 $generated@@104 ($generated@@47 1)) $generated@@109)))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@103) ($generated@@46 $generated@@104 ($generated@@47 1)) $generated@@109))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@109)))
)))) (=> (= ($generated@@61 0) ($generated@@48 $generated@@104)) (exists (($generated@@110 T@U) ) (!  (and ($generated@@26 $generated@@110 $generated@@104) ($generated@@25 ($generated@@59 $generated@@103) $generated@@110 $generated@@105))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@103) $generated@@110 $generated@@105))
)))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@59 $generated@@103) ($generated@@74 $generated@@102 $generated@@104) $generated@@105))
))))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@63 $generated@@111) (or ($generated@@42 $generated@@111) ($generated@@78 $generated@@111)))
 :pattern ( ($generated@@63 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (or ($generated@@27 $generated@@112 $generated@@113) (= $generated@@112 $generated@@113)) ($generated@@27 $generated@@113 $generated@@112))
 :pattern ( ($generated@@27 $generated@@112 $generated@@113) ($generated@@27 $generated@@113 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@26 $generated@@114 $generated@@115) ($generated@@27 $generated@@114 $generated@@115))
 :pattern ( ($generated@@26 $generated@@114 $generated@@115))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@116 T@U) ) (!  (=> (or ($generated@@64 $generated@@116) (and (< 1 $generated@@24) ($generated@@54 $generated@@55 $generated@@116 $generated@@56))) ($generated@@54 $generated@@55 ($generated@@62 $generated@@116) $generated@@56))
 :pattern ( ($generated@@62 $generated@@116))
))))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@54 $generated@@55 $generated@@117 $generated@@56) (or ($generated@@42 $generated@@117) ($generated@@78 $generated@@117)))
 :pattern ( ($generated@@78 $generated@@117) ($generated@@54 $generated@@55 $generated@@117 $generated@@56))
 :pattern ( ($generated@@42 $generated@@117) ($generated@@54 $generated@@55 $generated@@117 $generated@@56))
)))
(assert (forall (($generated@@118 T@U) ) (! (<= 0 ($generated@@48 $generated@@118))
 :pattern ( ($generated@@48 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and ($generated@@78 $generated@@119) ($generated@@78 $generated@@120)) ($generated@@41 $generated@@119 $generated@@120))
 :pattern ( ($generated@@41 $generated@@119 $generated@@120) ($generated@@78 $generated@@119))
 :pattern ( ($generated@@41 $generated@@119 $generated@@120) ($generated@@78 $generated@@120))
)))
(assert (forall (($generated@@121 Int) ) (! (= ($generated@@52 ($generated@@88 $generated@@121)) $generated@@4)
 :pattern ( ($generated@@88 $generated@@121))
)))
(assert (forall (($generated@@122 Int) ) (! (= ($generated@@43 ($generated@@88 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@88 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@80 $generated@@124 ($generated@@81 $generated@@124 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@81 $generated@@124 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (and (and (and (=> ($generated@@27 $generated@@125 $generated@@126) (or (not (= $generated@@125 $generated@@126)) (not true))) (=> (and ($generated@@97 $generated@@125) (not ($generated@@97 $generated@@126))) ($generated@@27 $generated@@125 $generated@@126))) (=> (and ($generated@@97 $generated@@125) ($generated@@97 $generated@@126)) (= ($generated@@27 $generated@@125 $generated@@126) (< ($generated@@48 $generated@@125) ($generated@@48 $generated@@126))))) (=> (and ($generated@@27 $generated@@125 $generated@@126) ($generated@@97 $generated@@126)) ($generated@@97 $generated@@125)))
 :pattern ( ($generated@@27 $generated@@125 $generated@@126))
)))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (or ($generated@@60 ($generated@@74 $generated@@102 $generated@@128) ($generated@@74 $generated@@55 $generated@@129)) (and (< 3 $generated@@24) ($generated@@54 $generated@@55 $generated@@129 $generated@@56))) (and (and (=> (< 0 ($generated@@48 $generated@@128)) (=> (not (and ($generated@@42 ($generated@@74 $generated@@55 $generated@@129)) (= ($generated@@61 ($generated@@43 ($generated@@74 $generated@@55 $generated@@129))) ($generated@@61 0)))) (forall (($generated@@130 T@U) ) (!  (=> ($generated@@54 $generated@@55 $generated@@130 $generated@@56) (and (and (and ($generated@@63 ($generated@@74 $generated@@55 $generated@@129)) ($generated@@63 ($generated@@62 ($generated@@62 $generated@@130)))) (and ($generated@@64 $generated@@130) ($generated@@64 ($generated@@62 $generated@@130)))) (=> ($generated@@41 $generated@@129 ($generated@@62 ($generated@@62 $generated@@130))) ($generated@@60 ($generated@@46 $generated@@128 ($generated@@47 1)) $generated@@130))))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@127) ($generated@@46 $generated@@128 ($generated@@47 1)) $generated@@130))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@130)))
)))) (=> (=> (< 0 ($generated@@48 $generated@@128)) (or (and ($generated@@42 ($generated@@74 $generated@@55 $generated@@129)) (= ($generated@@61 ($generated@@43 ($generated@@74 $generated@@55 $generated@@129))) ($generated@@61 0))) (exists (($generated@@131 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@131 $generated@@56) (and ($generated@@41 $generated@@129 ($generated@@62 ($generated@@62 $generated@@131))) ($generated@@25 ($generated@@59 $generated@@127) ($generated@@46 $generated@@128 ($generated@@47 1)) $generated@@131)))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@127) ($generated@@46 $generated@@128 ($generated@@47 1)) $generated@@131))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@131)))
)))) (=> (= ($generated@@61 0) ($generated@@48 $generated@@128)) (forall (($generated@@132 T@U) ) (!  (=> ($generated@@26 $generated@@132 $generated@@128) ($generated@@60 $generated@@132 $generated@@129))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@127) $generated@@132 $generated@@129))
))))) (= ($generated@@25 ($generated@@59 $generated@@127) ($generated@@74 $generated@@102 $generated@@128) ($generated@@74 $generated@@55 $generated@@129))  (and (=> (< 0 ($generated@@48 $generated@@128)) (or (and ($generated@@42 ($generated@@74 $generated@@55 $generated@@129)) (= ($generated@@61 ($generated@@43 ($generated@@74 $generated@@55 $generated@@129))) ($generated@@61 0))) (exists (($generated@@133 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@133 $generated@@56) (and ($generated@@41 $generated@@129 ($generated@@62 ($generated@@62 $generated@@133))) ($generated@@25 ($generated@@59 $generated@@127) ($generated@@46 $generated@@128 ($generated@@47 1)) $generated@@133)))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@127) ($generated@@46 $generated@@128 ($generated@@47 1)) $generated@@133))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@133)))
)))) (=> (= ($generated@@61 0) ($generated@@48 $generated@@128)) (exists (($generated@@134 T@U) ) (!  (and ($generated@@26 $generated@@134 $generated@@128) ($generated@@25 ($generated@@59 $generated@@127) $generated@@134 $generated@@129))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@127) $generated@@134 $generated@@129))
)))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@59 $generated@@127) ($generated@@74 $generated@@102 $generated@@128) ($generated@@74 $generated@@55 $generated@@129)))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@135 $generated@@145 $generated@@146 $generated@@147 ($generated@@141 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@150 $generated@@151) $generated@@148)
 :weight 0
)) (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@135 $generated@@152 $generated@@153 $generated@@154 ($generated@@141 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@135 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@135 $generated@@161 $generated@@162 $generated@@163 ($generated@@141 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@135 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)))) (= ($generated@@8 $generated@@136) 5)) (= ($generated@@8 $generated@@137) 6)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@139 $generated@@170 $generated@@171 ($generated@@142 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@172) $generated@@174) $generated@@172)
 :weight 0
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@179 $generated@@180) (= ($generated@@139 $generated@@175 $generated@@176 ($generated@@142 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@177) $generated@@180) ($generated@@139 $generated@@175 $generated@@176 $generated@@178 $generated@@180)))
 :weight 0
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@8 ($generated@@140 $generated@@181 $generated@@182)) 7))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@143 ($generated@@140 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@140 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@144 ($generated@@140 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@140 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@13 ($generated@@135 $generated@@136 $generated@@137 $generated@@9 ($generated@@138 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@13 ($generated@@80 $generated@@9 ($generated@@139 $generated@@137 $generated@@102 ($generated@@139 $generated@@136 ($generated@@140 $generated@@137 $generated@@102) $generated@@188 $generated@@191) $generated@@189)))) $generated@@190))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137 $generated@@9 ($generated@@138 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 Int) ($generated@@195 Int) ) (! (= ($generated@@193 $generated@@194 $generated@@195) (mod $generated@@194 $generated@@195))
 :pattern ( ($generated@@193 $generated@@194 $generated@@195))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@196 T@U) ) (!  (=> (or ($generated@@64 ($generated@@74 $generated@@55 $generated@@196)) (and (< 1 $generated@@24) ($generated@@54 $generated@@55 $generated@@196 $generated@@56))) (= ($generated@@62 ($generated@@74 $generated@@55 $generated@@196)) (ite ($generated@@42 ($generated@@74 $generated@@55 $generated@@196)) (let (($generated@@197 ($generated@@61 ($generated@@43 ($generated@@74 $generated@@55 $generated@@196)))))
($generated@@74 $generated@@55 ($generated@@88 ($generated@@61 (+ $generated@@197 1))))) $generated@@53)))
 :weight 3
 :pattern ( ($generated@@62 ($generated@@74 $generated@@55 $generated@@196)))
))))
(assert (forall (($generated@@198 T@U) ) (!  (=> ($generated@@97 $generated@@198) (= $generated@@198 ($generated@@47 ($generated@@48 $generated@@198))))
 :pattern ( ($generated@@48 $generated@@198))
 :pattern ( ($generated@@97 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and ($generated@@199 $generated@@201) ($generated@@54 $generated@@55 $generated@@200 $generated@@56)) ($generated@@37 $generated@@55 $generated@@200 $generated@@56 $generated@@201))
 :pattern ( ($generated@@37 $generated@@55 $generated@@200 $generated@@56 $generated@@201))
)))
(assert (= ($generated@@33 $generated@@38) $generated@@2))
(assert (= ($generated@@202 $generated@@38) $generated@@6))
(assert (= ($generated@@33 $generated@@56) $generated@@3))
(assert (= ($generated@@202 $generated@@56) $generated@@7))
(assert (= $generated@@53 ($generated@@74 $generated@@55 $generated@@53)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and ($generated@@97 $generated@@204) (<= ($generated@@48 $generated@@204) ($generated@@48 $generated@@203))) (or (and (= $generated@@204 ($generated@@47 0)) (= ($generated@@46 $generated@@203 $generated@@204) $generated@@203)) (and (or (not (= $generated@@204 ($generated@@47 0))) (not true)) ($generated@@27 ($generated@@46 $generated@@203 $generated@@204) $generated@@203))))
 :pattern ( ($generated@@46 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and ($generated@@199 $generated@@206) (and ($generated@@42 $generated@@205) ($generated@@37 $generated@@55 $generated@@205 $generated@@56 $generated@@206))) ($generated@@37 $generated@@10 ($generated@@14 ($generated@@43 $generated@@205)) $generated@@38 $generated@@206))
 :pattern ( ($generated@@37 $generated@@10 ($generated@@14 ($generated@@43 $generated@@205)) $generated@@38 $generated@@206))
)))
(assert (forall (($generated@@207 Int) ) (! (= ($generated@@81 $generated@@10 ($generated@@14 ($generated@@61 $generated@@207))) ($generated@@74 $generated@@102 ($generated@@81 $generated@@10 ($generated@@14 $generated@@207))))
 :pattern ( ($generated@@81 $generated@@10 ($generated@@14 ($generated@@61 $generated@@207))))
)))
(assert (forall (($generated@@208 Int) ) (! (= ($generated@@88 ($generated@@61 $generated@@208)) ($generated@@74 $generated@@55 ($generated@@88 $generated@@208)))
 :pattern ( ($generated@@88 ($generated@@61 $generated@@208)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@T) ) (! (= ($generated@@81 $generated@@210 ($generated@@74 $generated@@210 $generated@@209)) ($generated@@74 $generated@@102 ($generated@@81 $generated@@210 $generated@@209)))
 :pattern ( ($generated@@81 $generated@@210 ($generated@@74 $generated@@210 $generated@@209)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (! ($generated@@37 $generated@@102 $generated@@212 $generated $generated@@211)
 :pattern ( ($generated@@37 $generated@@102 $generated@@212 $generated $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ) (! ($generated@@54 $generated@@102 $generated@@213 $generated)
 :pattern ( ($generated@@54 $generated@@102 $generated@@213 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 (T@U) Bool)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 36) (let (($generated@@232  (=> (forall (($generated@@233 T@U) ) (!  (=> ($generated@@54 $generated@@55 $generated@@233 $generated@@56) (and (and (and ($generated@@63 $generated@@214) ($generated@@63 ($generated@@62 ($generated@@62 $generated@@233)))) (and ($generated@@64 $generated@@233) ($generated@@64 ($generated@@62 $generated@@233)))) (=> ($generated@@41 $generated@@214 ($generated@@62 ($generated@@62 $generated@@233))) ($generated@@60 ($generated@@46 $generated@@215 ($generated@@47 1)) $generated@@233))))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@233)))
)) (=> (and (and (not (and ($generated@@42 $generated@@214) (= ($generated@@43 $generated@@214) ($generated@@61 0)))) (not (exists (($generated@@234 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@234 $generated@@56) (and ($generated@@41 $generated@@214 ($generated@@62 ($generated@@62 $generated@@234))) ($generated@@25 ($generated@@59 $generated@@216) ($generated@@46 $generated@@215 ($generated@@47 1)) $generated@@234)))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@234)))
)))) (= (ControlFlow 0 6) (- 0 5))) false))))
(let (($generated@@235  (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@42 $generated@@214)) (=> ($generated@@42 $generated@@214) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@193 ($generated@@43 $generated@@214) ($generated@@61 2)) ($generated@@61 0)))))))
(let (($generated@@236  (and (=> (= (ControlFlow 0 11) (- 0 19)) (or (and ($generated@@54 $generated@@55 ($generated@@74 $generated@@55 $generated@@53) $generated@@56) (and ($generated@@41 $generated@@214 ($generated@@62 ($generated@@74 $generated@@55 ($generated@@62 ($generated@@74 $generated@@55 $generated@@53))))) ($generated@@25 ($generated@@59 $generated@@216) ($generated@@46 $generated@@215 ($generated@@47 1)) ($generated@@74 $generated@@55 $generated@@53)))) (exists (($generated@@237 T@U) )  (and ($generated@@54 $generated@@55 $generated@@237 $generated@@56) (and ($generated@@41 $generated@@214 ($generated@@62 ($generated@@62 $generated@@237))) ($generated@@25 ($generated@@59 $generated@@216) ($generated@@46 $generated@@215 ($generated@@47 1)) $generated@@237)))))) (=> (or (and ($generated@@54 $generated@@55 ($generated@@74 $generated@@55 $generated@@53) $generated@@56) (and ($generated@@41 $generated@@214 ($generated@@62 ($generated@@74 $generated@@55 ($generated@@62 ($generated@@74 $generated@@55 $generated@@53))))) ($generated@@25 ($generated@@59 $generated@@216) ($generated@@46 $generated@@215 ($generated@@47 1)) ($generated@@74 $generated@@55 $generated@@53)))) (exists (($generated@@238 T@U) )  (and ($generated@@54 $generated@@55 $generated@@238 $generated@@56) (and ($generated@@41 $generated@@214 ($generated@@62 ($generated@@62 $generated@@238))) ($generated@@25 ($generated@@59 $generated@@216) ($generated@@46 $generated@@215 ($generated@@47 1)) $generated@@238))))) (=> (and (and ($generated@@54 $generated@@55 $generated@@217 $generated@@56) ($generated@@37 $generated@@55 $generated@@217 $generated@@56 $generated@@218)) (and ($generated@@41 $generated@@214 ($generated@@62 ($generated@@62 $generated@@217))) ($generated@@25 ($generated@@59 $generated@@216) ($generated@@46 $generated@@215 ($generated@@47 1)) $generated@@217))) (and (=> (= (ControlFlow 0 11) (- 0 18)) ($generated@@97 ($generated@@74 $generated@@102 ($generated@@47 1)))) (=> ($generated@@97 ($generated@@74 $generated@@102 ($generated@@47 1))) (and (=> (= (ControlFlow 0 11) (- 0 17)) (<= ($generated@@48 ($generated@@74 $generated@@102 ($generated@@47 1))) ($generated@@48 $generated@@215))) (=> (<= ($generated@@48 ($generated@@74 $generated@@102 ($generated@@47 1))) ($generated@@48 $generated@@215)) (=> (= $generated@@219 ($generated@@46 $generated@@215 ($generated@@47 1))) (and (=> (= (ControlFlow 0 11) (- 0 16)) (=> ($generated@@60 $generated@@219 $generated@@217) (or ($generated@@25 ($generated@@59 $generated@@216) $generated@@219 $generated@@217) (=> (< 0 ($generated@@48 $generated@@219)) (or (and ($generated@@42 $generated@@217) (= ($generated@@43 $generated@@217) ($generated@@61 0))) (exists (($generated@@239 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@239 $generated@@56) (and ($generated@@41 $generated@@217 ($generated@@62 ($generated@@62 $generated@@239))) ($generated@@25 ($generated@@59 ($generated@@59 $generated@@216)) ($generated@@46 $generated@@219 ($generated@@47 1)) $generated@@239)))
 :pattern ( ($generated@@25 ($generated@@59 ($generated@@59 $generated@@216)) ($generated@@46 $generated@@219 ($generated@@47 1)) $generated@@239))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@239)))
))))))) (=> (=> ($generated@@60 $generated@@219 $generated@@217) (or ($generated@@25 ($generated@@59 $generated@@216) $generated@@219 $generated@@217) (=> (< 0 ($generated@@48 $generated@@219)) (or (and ($generated@@42 $generated@@217) (= ($generated@@43 $generated@@217) ($generated@@61 0))) (exists (($generated@@240 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@240 $generated@@56) (and ($generated@@41 $generated@@217 ($generated@@62 ($generated@@62 $generated@@240))) ($generated@@25 ($generated@@59 ($generated@@59 $generated@@216)) ($generated@@46 $generated@@219 ($generated@@47 1)) $generated@@240)))
 :pattern ( ($generated@@25 ($generated@@59 ($generated@@59 $generated@@216)) ($generated@@46 $generated@@219 ($generated@@47 1)) $generated@@240))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@240)))
)))))) (and (=> (= (ControlFlow 0 11) (- 0 15)) (=> ($generated@@60 $generated@@219 $generated@@217) (or ($generated@@25 ($generated@@59 $generated@@216) $generated@@219 $generated@@217) (=> (= ($generated@@61 0) ($generated@@48 $generated@@219)) (exists (($generated@@241 T@U) ) (!  (and ($generated@@26 $generated@@241 $generated@@219) ($generated@@25 ($generated@@59 $generated@@216) $generated@@241 $generated@@217))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@216) $generated@@241 $generated@@217))
)))))) (=> (=> ($generated@@60 $generated@@219 $generated@@217) (or ($generated@@25 ($generated@@59 $generated@@216) $generated@@219 $generated@@217) (=> (= ($generated@@61 0) ($generated@@48 $generated@@219)) (exists (($generated@@242 T@U) ) (!  (and ($generated@@26 $generated@@242 $generated@@219) ($generated@@25 ($generated@@59 $generated@@216) $generated@@242 $generated@@217))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@216) $generated@@242 $generated@@217))
))))) (=> (and (and (and ($generated@@199 $generated@@220) ($generated@@221 $generated@@220)) ($generated@@42 $generated@@217)) (and (= ($generated@@193 ($generated@@43 $generated@@217) ($generated@@61 2)) ($generated@@61 0)) (= $generated@@218 $generated@@220))) (and (=> (= (ControlFlow 0 11) (- 0 14)) ($generated@@42 $generated@@214)) (=> ($generated@@42 $generated@@214) (and (=> (= (ControlFlow 0 11) (- 0 13)) ($generated@@42 $generated@@217)) (=> ($generated@@42 $generated@@217) (and (=> (= (ControlFlow 0 11) (- 0 12)) (= ($generated@@43 $generated@@214) (+ ($generated@@43 $generated@@217) 2))) (=> (= ($generated@@43 $generated@@214) (+ ($generated@@43 $generated@@217) 2)) (=> (= (ControlFlow 0 11) 2) $generated@@235))))))))))))))))))))))
(let (($generated@@243  (=> (and (and (and (and ($generated@@63 $generated@@214) ($generated@@63 ($generated@@62 ($generated@@62 $generated@@222)))) (and ($generated@@64 $generated@@222) ($generated@@64 ($generated@@62 $generated@@222)))) (=> ($generated@@41 $generated@@214 ($generated@@62 ($generated@@62 $generated@@222))) ($generated@@60 ($generated@@46 $generated@@215 ($generated@@47 1)) $generated@@222))) (= (ControlFlow 0 21) 11)) $generated@@236)))
(let (($generated@@244  (=> (and (not ($generated@@41 $generated@@214 ($generated@@62 ($generated@@62 $generated@@222)))) (= (ControlFlow 0 25) 21)) $generated@@243)))
(let (($generated@@245  (=> ($generated@@41 $generated@@214 ($generated@@62 ($generated@@62 $generated@@222))) (and (=> (= (ControlFlow 0 22) (- 0 24)) ($generated@@97 ($generated@@74 $generated@@102 ($generated@@47 1)))) (=> ($generated@@97 ($generated@@74 $generated@@102 ($generated@@47 1))) (and (=> (= (ControlFlow 0 22) (- 0 23)) (<= ($generated@@48 ($generated@@74 $generated@@102 ($generated@@47 1))) ($generated@@48 $generated@@215))) (=> (<= ($generated@@48 ($generated@@74 $generated@@102 ($generated@@47 1))) ($generated@@48 $generated@@215)) (=> (= $generated@@223 ($generated@@46 $generated@@215 ($generated@@47 1))) (=> (and (and ($generated@@37 $generated@@102 $generated@@223 $generated $generated@@218) ($generated@@37 $generated@@55 $generated@@222 $generated@@56 $generated@@218)) (and ($generated@@60 ($generated@@46 $generated@@215 ($generated@@47 1)) $generated@@222) (= (ControlFlow 0 22) 21))) $generated@@243)))))))))
(let (($generated@@246  (=> (and (and (and ($generated@@54 $generated@@55 $generated@@222 $generated@@56) ($generated@@37 $generated@@55 $generated@@222 $generated@@56 $generated@@218)) ($generated@@37 $generated@@55 $generated@@222 $generated@@56 $generated@@218)) (and (and ($generated@@64 $generated@@222) (= $generated@@224 ($generated@@62 $generated@@222))) (and ($generated@@37 $generated@@55 $generated@@224 $generated@@56 $generated@@218) ($generated@@64 ($generated@@62 $generated@@222))))) (and (=> (= (ControlFlow 0 26) 22) $generated@@245) (=> (= (ControlFlow 0 26) 25) $generated@@244)))))
(let (($generated@@247  (=> (and (not (and ($generated@@54 $generated@@55 $generated@@222 $generated@@56) ($generated@@37 $generated@@55 $generated@@222 $generated@@56 $generated@@218))) (= (ControlFlow 0 20) 11)) $generated@@236)))
(let (($generated@@248  (=> (and (forall (($generated@@249 T@U) ) (!  (=> ($generated@@54 $generated@@55 $generated@@249 $generated@@56) (and (and (and ($generated@@63 $generated@@214) ($generated@@63 ($generated@@62 ($generated@@62 $generated@@249)))) (and ($generated@@64 $generated@@249) ($generated@@64 ($generated@@62 $generated@@249)))) (=> ($generated@@41 $generated@@214 ($generated@@62 ($generated@@62 $generated@@249))) ($generated@@60 ($generated@@46 $generated@@215 ($generated@@47 1)) $generated@@249))))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@249)))
)) (exists (($generated@@250 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@250 $generated@@56) (and ($generated@@41 $generated@@214 ($generated@@62 ($generated@@62 $generated@@250))) ($generated@@25 ($generated@@59 $generated@@216) ($generated@@46 $generated@@215 ($generated@@47 1)) $generated@@250)))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@250)))
))) (and (=> (= (ControlFlow 0 27) 26) $generated@@246) (=> (= (ControlFlow 0 27) 20) $generated@@247)))))
(let (($generated@@251  (=> (and (not ($generated@@41 $generated@@214 ($generated@@62 ($generated@@62 $generated@@225)))) (= (ControlFlow 0 32) 27)) $generated@@248)))
(let (($generated@@252  (=> ($generated@@41 $generated@@214 ($generated@@62 ($generated@@62 $generated@@225))) (and (=> (= (ControlFlow 0 29) (- 0 31)) ($generated@@97 ($generated@@74 $generated@@102 ($generated@@47 1)))) (=> ($generated@@97 ($generated@@74 $generated@@102 ($generated@@47 1))) (and (=> (= (ControlFlow 0 29) (- 0 30)) (<= ($generated@@48 ($generated@@74 $generated@@102 ($generated@@47 1))) ($generated@@48 $generated@@215))) (=> (<= ($generated@@48 ($generated@@74 $generated@@102 ($generated@@47 1))) ($generated@@48 $generated@@215)) (=> (= $generated@@226 ($generated@@46 $generated@@215 ($generated@@47 1))) (=> (and (and ($generated@@37 $generated@@102 $generated@@226 $generated $generated@@218) ($generated@@37 $generated@@55 $generated@@225 $generated@@56 $generated@@218)) (and ($generated@@60 ($generated@@46 $generated@@215 ($generated@@47 1)) $generated@@225) (= (ControlFlow 0 29) 27))) $generated@@248)))))))))
(let (($generated@@253  (=> (and (and (and ($generated@@54 $generated@@55 $generated@@225 $generated@@56) ($generated@@37 $generated@@55 $generated@@225 $generated@@56 $generated@@218)) ($generated@@37 $generated@@55 $generated@@225 $generated@@56 $generated@@218)) (and (and ($generated@@64 $generated@@225) (= $generated@@227 ($generated@@62 $generated@@225))) (and ($generated@@37 $generated@@55 $generated@@227 $generated@@56 $generated@@218) ($generated@@64 ($generated@@62 $generated@@225))))) (and (=> (= (ControlFlow 0 33) 29) $generated@@252) (=> (= (ControlFlow 0 33) 32) $generated@@251)))))
(let (($generated@@254  (=> (and (not (and ($generated@@54 $generated@@55 $generated@@225 $generated@@56) ($generated@@37 $generated@@55 $generated@@225 $generated@@56 $generated@@218))) (= (ControlFlow 0 28) 27)) $generated@@248)))
(let (($generated@@255  (=> (and (and ($generated@@42 $generated@@214) (= ($generated@@43 $generated@@214) ($generated@@61 0))) (= (ControlFlow 0 7) 2)) $generated@@235)))
(let (($generated@@256  (=> (and (not ($generated@@42 $generated@@214)) (= (ControlFlow 0 10) 7)) $generated@@255)))
(let (($generated@@257  (=> ($generated@@42 $generated@@214) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@42 $generated@@214)) (=> ($generated@@42 $generated@@214) (=> (= (ControlFlow 0 8) 7) $generated@@255))))))
(let (($generated@@258  (=> (< 0 ($generated@@48 $generated@@215)) (and (and (and (and (=> (= (ControlFlow 0 34) 6) $generated@@232) (=> (= (ControlFlow 0 34) 33) $generated@@253)) (=> (= (ControlFlow 0 34) 28) $generated@@254)) (=> (= (ControlFlow 0 34) 8) $generated@@257)) (=> (= (ControlFlow 0 34) 10) $generated@@256)))))
(let (($generated@@259  (=> (<= ($generated@@48 $generated@@215) 0) (=> (and (and (and ($generated@@199 $generated@@228) ($generated@@221 $generated@@228)) (= $generated@@218 $generated@@228)) (and (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and ($generated@@54 $generated@@55 $generated@@261 $generated@@56) (and ($generated@@27 $generated@@260 $generated@@215) ($generated@@25 ($generated@@59 $generated@@216) $generated@@260 $generated@@261))) (and ($generated@@42 $generated@@261) (= ($generated@@193 ($generated@@43 $generated@@261) ($generated@@61 2)) ($generated@@61 0))))
 :pattern ( ($generated@@43 $generated@@261) ($generated@@27 $generated@@260 $generated@@215))
 :pattern ( ($generated@@42 $generated@@261) ($generated@@27 $generated@@260 $generated@@215))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@216) $generated@@260 $generated@@261))
)) (= (ControlFlow 0 4) 2))) $generated@@235))))
(let (($generated@@262  (=> (= $generated@@229 ($generated@@138 $generated@@230 $generated@@218 $generated@@1 false)) (and (=> (= (ControlFlow 0 35) 34) $generated@@258) (=> (= (ControlFlow 0 35) 4) $generated@@259)))))
(let (($generated@@263  (=> (and ($generated@@199 $generated@@218) ($generated@@221 $generated@@218)) (=> (and (and ($generated@@54 $generated@@55 $generated@@214 $generated@@56) ($generated@@37 $generated@@55 $generated@@214 $generated@@56 $generated@@218)) ($generated@@63 $generated@@214)) (=> (and (and (and (and ($generated@@54 $generated@@55 $generated@@231 $generated@@56) ($generated@@37 $generated@@55 $generated@@231 $generated@@56 $generated@@218)) true) (= 5 $generated@@24)) (and (and ($generated@@60 $generated@@215 $generated@@214) (and ($generated@@25 ($generated@@59 $generated@@216) $generated@@215 $generated@@214) (and (=> (< 0 ($generated@@48 $generated@@215)) (or (and ($generated@@42 $generated@@214) (= ($generated@@43 $generated@@214) ($generated@@61 0))) (exists (($generated@@264 T@U) ) (!  (and ($generated@@54 $generated@@55 $generated@@264 $generated@@56) (and ($generated@@41 $generated@@214 ($generated@@62 ($generated@@62 $generated@@264))) ($generated@@25 ($generated@@59 $generated@@216) ($generated@@46 $generated@@215 ($generated@@47 1)) $generated@@264)))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@216) ($generated@@46 $generated@@215 ($generated@@47 1)) $generated@@264))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@264)))
)))) (=> (= ($generated@@61 0) ($generated@@48 $generated@@215)) (exists (($generated@@265 T@U) ) (!  (and ($generated@@26 $generated@@265 $generated@@215) ($generated@@25 ($generated@@59 $generated@@216) $generated@@265 $generated@@214))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@216) $generated@@265 $generated@@214))
)))))) (= (ControlFlow 0 36) 35))) $generated@@262)))))
$generated@@263)))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
