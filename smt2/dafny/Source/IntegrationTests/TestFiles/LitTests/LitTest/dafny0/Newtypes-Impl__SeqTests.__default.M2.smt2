(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 (T@U T@U T@U) Bool)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@U Int) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@74 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@78 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@135 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27)
 :pattern ( ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! ($generated@@24 $generated@@9 $generated@@29 $generated@@28 $generated@@30)
 :pattern ( ($generated@@24 $generated@@9 $generated@@29 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@33 T@U) ) (!  (not ($generated@@31 $generated@@32 $generated@@33))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33))
)))
(assert (= ($generated@@34 $generated@@32) 0))
(assert (forall (($generated@@36 Int) ) (! (= ($generated@@35 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@37 $generated@@39 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@39 $generated@@38))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 ($generated@@40 $generated@@43 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@40 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ) (! (= ($generated@@44 $generated@@9 $generated@@45 $generated@@25) (<= ($generated@@35 0) ($generated@@14 $generated@@45)))
 :pattern ( ($generated@@44 $generated@@9 $generated@@45 $generated@@25))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@46 ($generated@@41 $generated@@50 $generated@@47) $generated@@48 $generated@@49) ($generated@@24 $generated@@50 $generated@@47 $generated@@48 $generated@@49))
 :pattern ( ($generated@@46 ($generated@@41 $generated@@50 $generated@@47) $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ) (!  (=> ($generated@@51 $generated@@52 $generated@@25) (and (= ($generated@@41 $generated@@9 ($generated@@40 $generated@@9 $generated@@52)) $generated@@52) ($generated@@44 $generated@@9 ($generated@@40 $generated@@9 $generated@@52) $generated@@25)))
 :pattern ( ($generated@@51 $generated@@52 $generated@@25))
)))
(assert (forall (($generated@@53 T@U) ) (!  (=> ($generated@@51 $generated@@53 $generated@@28) (and (= ($generated@@41 $generated@@9 ($generated@@40 $generated@@9 $generated@@53)) $generated@@53) ($generated@@44 $generated@@9 ($generated@@40 $generated@@9 $generated@@53) $generated@@28)))
 :pattern ( ($generated@@51 $generated@@53 $generated@@28))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@31 $generated@@55 $generated@@56) (exists (($generated@@57 Int) ) (!  (and (and (<= 0 $generated@@57) (< $generated@@57 ($generated@@34 $generated@@55))) (= ($generated@@54 $generated@@55 $generated@@57) $generated@@56))
 :pattern ( ($generated@@54 $generated@@55 $generated@@57))
)))
 :pattern ( ($generated@@31 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (!  (=> ($generated@@51 $generated@@58 $generated) (and (= ($generated@@41 $generated@@9 ($generated@@40 $generated@@9 $generated@@58)) $generated@@58) ($generated@@44 $generated@@9 ($generated@@40 $generated@@9 $generated@@58) $generated)))
 :pattern ( ($generated@@51 $generated@@58 $generated))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@51 ($generated@@41 $generated@@61 $generated@@59) $generated@@60) ($generated@@44 $generated@@61 $generated@@59 $generated@@60))
 :pattern ( ($generated@@51 ($generated@@41 $generated@@61 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (<= 0 ($generated@@34 $generated@@62))
 :pattern ( ($generated@@34 $generated@@62))
)))
(assert (= ($generated@@7 $generated@@63) 3))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@24 $generated@@63 $generated@@65 ($generated@@64 $generated@@66) $generated@@67) (forall (($generated@@68 Int) ) (!  (=> (and (<= 0 $generated@@68) (< $generated@@68 ($generated@@34 $generated@@65))) ($generated@@46 ($generated@@54 $generated@@65 $generated@@68) $generated@@66 $generated@@67))
 :pattern ( ($generated@@54 $generated@@65 $generated@@68))
)))
 :pattern ( ($generated@@24 $generated@@63 $generated@@65 ($generated@@64 $generated@@66) $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 ($generated@@64 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@64 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@23 ($generated@@64 $generated@@71)) $generated@@1)
 :pattern ( ($generated@@64 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@40 $generated@@73 ($generated@@41 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@41 $generated@@73 $generated@@72))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@74 $generated@@85 $generated@@86 $generated@@87 ($generated@@81 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@90 $generated@@91 $generated@@88) $generated@@90 $generated@@91) $generated@@88)
 :weight 0
)) (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or (= $generated@@97 $generated@@99) (= ($generated@@74 $generated@@92 $generated@@93 $generated@@94 ($generated@@81 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@99 $generated@@100) ($generated@@74 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@99 $generated@@100)))
 :weight 0
)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@107 $generated@@109) (= ($generated@@74 $generated@@101 $generated@@102 $generated@@103 ($generated@@81 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@108 $generated@@109) ($generated@@74 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@108 $generated@@109)))
 :weight 0
)))) (= ($generated@@7 $generated@@75) 4)) (= ($generated@@7 $generated@@76) 5)) (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@78 $generated@@110 $generated@@111 ($generated@@82 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@112) $generated@@114) $generated@@112)
 :weight 0
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@78 $generated@@115 $generated@@116 ($generated@@82 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@78 $generated@@115 $generated@@116 $generated@@118 $generated@@120)))
 :weight 0
))) (= ($generated@@7 $generated@@79) 6)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@7 ($generated@@80 $generated@@121 $generated@@122)) 7))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@80 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@80 $generated@@125 $generated@@126))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 Bool) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@12 ($generated@@74 $generated@@75 $generated@@76 $generated@@8 ($generated@@77 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))  (=> (and (or (not (= $generated@@131 $generated@@127)) (not true)) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@78 $generated@@76 $generated@@79 ($generated@@78 $generated@@75 ($generated@@80 $generated@@76 $generated@@79) $generated@@128 $generated@@131) $generated@@129)))) $generated@@130))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76 $generated@@8 ($generated@@77 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> ($generated@@51 $generated@@133 ($generated@@64 $generated@@134)) (and (= ($generated@@41 $generated@@63 ($generated@@40 $generated@@63 $generated@@133)) $generated@@133) ($generated@@44 $generated@@63 ($generated@@40 $generated@@63 $generated@@133) ($generated@@64 $generated@@134))))
 :pattern ( ($generated@@51 $generated@@133 ($generated@@64 $generated@@134)))
)))
(assert (= ($generated@@23 $generated@@25) $generated@@3))
(assert (= ($generated@@135 $generated@@25) $generated@@5))
(assert (= ($generated@@23 $generated@@28) $generated@@4))
(assert (= ($generated@@135 $generated@@28) $generated@@6))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@44 $generated@@9 $generated@@136 $generated@@28)  (and (<= ($generated@@35 0) ($generated@@14 $generated@@136)) (< ($generated@@14 $generated@@136) 256)))
 :pattern ( ($generated@@44 $generated@@9 $generated@@136 $generated@@28))
)))
(assert (forall (($generated@@137 Int) ) (! (= ($generated@@41 $generated@@9 ($generated@@13 ($generated@@35 $generated@@137))) ($generated@@37 $generated@@79 ($generated@@41 $generated@@9 ($generated@@13 $generated@@137))))
 :pattern ( ($generated@@41 $generated@@9 ($generated@@13 ($generated@@35 $generated@@137))))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@41 $generated@@139 ($generated@@37 $generated@@139 $generated@@138)) ($generated@@37 $generated@@79 ($generated@@41 $generated@@139 $generated@@138)))
 :pattern ( ($generated@@41 $generated@@139 ($generated@@37 $generated@@139 $generated@@138)))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= ($generated@@34 $generated@@140) 0) (= $generated@@140 $generated@@32))
 :pattern ( ($generated@@34 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! ($generated@@24 $generated@@9 $generated@@142 $generated $generated@@141)
 :pattern ( ($generated@@24 $generated@@9 $generated@@142 $generated $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@44 $generated@@63 $generated@@143 ($generated@@64 $generated@@144)) (forall (($generated@@145 Int) ) (!  (=> (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@34 $generated@@143))) ($generated@@51 ($generated@@54 $generated@@143 $generated@@145) $generated@@144))
 :pattern ( ($generated@@54 $generated@@143 $generated@@145))
)))
 :pattern ( ($generated@@44 $generated@@63 $generated@@143 ($generated@@64 $generated@@144)))
)))
(assert (forall (($generated@@146 T@U) ) (! ($generated@@44 $generated@@9 $generated@@146 $generated)
 :pattern ( ($generated@@44 $generated@@9 $generated@@146 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@164  (=> (= $generated@@147 ($generated@@77 $generated@@148 $generated@@149 $generated@@2 false)) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= 0 ($generated@@35 0)) (< ($generated@@35 0) ($generated@@34 $generated@@150)))) (=> (and (<= 0 ($generated@@35 0)) (< ($generated@@35 0) ($generated@@34 $generated@@150))) (=> (= $generated@@151 ($generated@@14 ($generated@@40 $generated@@9 ($generated@@54 $generated@@150 ($generated@@35 0))))) (and (=> (= (ControlFlow 0 2) (- 0 12)) ($generated@@44 $generated@@9 ($generated@@13 ($generated@@35 0)) $generated@@25)) (=> ($generated@@44 $generated@@9 ($generated@@13 ($generated@@35 0)) $generated@@25) (=> (= $generated@@152 ($generated@@35 0)) (=> (and (= $generated@@153 $generated@@28) (= $generated@@154 ($generated@@41 $generated@@9 ($generated@@13 $generated@@151)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (< $generated@@152 ($generated@@34 $generated@@150))) (=> (< $generated@@152 ($generated@@34 $generated@@150)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (= $generated@@154 ($generated@@54 $generated@@150 $generated@@152))) (=> (= $generated@@154 ($generated@@54 $generated@@150 $generated@@152)) (=> (and (and ($generated@@155 $generated@@156) ($generated@@157 $generated@@156)) (and ($generated@@31 $generated@@150 $generated@@154) (= $generated@@149 $generated@@156))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= 0 ($generated@@35 0)) (< ($generated@@35 0) ($generated@@34 $generated@@158)))) (=> (and (<= 0 ($generated@@35 0)) (< ($generated@@35 0) ($generated@@34 $generated@@158))) (=> (= $generated@@159 ($generated@@14 ($generated@@40 $generated@@9 ($generated@@54 $generated@@158 ($generated@@35 0))))) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@44 $generated@@9 ($generated@@13 ($generated@@35 0)) $generated@@25)) (=> ($generated@@44 $generated@@9 ($generated@@13 ($generated@@35 0)) $generated@@25) (=> (and (= $generated@@160 ($generated@@35 0)) (= $generated@@161 ($generated@@41 $generated@@9 ($generated@@13 $generated@@159)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (< $generated@@160 ($generated@@34 $generated@@158))) (=> (< $generated@@160 ($generated@@34 $generated@@158)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (= $generated@@161 ($generated@@54 $generated@@158 $generated@@160))) (=> (= $generated@@161 ($generated@@54 $generated@@158 $generated@@160)) (=> (and (and ($generated@@155 $generated@@162) ($generated@@157 $generated@@162)) (and ($generated@@31 $generated@@158 $generated@@161) (= $generated@@156 $generated@@162))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 ($generated@@35 0)) (< ($generated@@35 0) ($generated@@34 $generated@@150)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@31 $generated@@150 ($generated@@54 $generated@@150 ($generated@@35 0)))) (=> ($generated@@31 $generated@@150 ($generated@@54 $generated@@150 ($generated@@35 0))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@35 0)) (< ($generated@@35 0) ($generated@@34 $generated@@158)))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@31 $generated@@158 ($generated@@54 $generated@@158 ($generated@@35 0))))))))))))))))))))))))))))))))))
(let (($generated@@165  (=> (and ($generated@@155 $generated@@149) ($generated@@157 $generated@@149)) (=> (and (and (and ($generated@@44 $generated@@63 $generated@@150 ($generated@@64 $generated@@28)) ($generated@@24 $generated@@63 $generated@@150 ($generated@@64 $generated@@28) $generated@@149)) (and ($generated@@44 $generated@@63 $generated@@158 ($generated@@64 $generated)) ($generated@@24 $generated@@63 $generated@@158 ($generated@@64 $generated) $generated@@149))) (and (and (= 1 $generated@@163) (= ($generated@@34 $generated@@150) ($generated@@35 1))) (and (= ($generated@@34 $generated@@158) ($generated@@35 1)) (= (ControlFlow 0 14) 2)))) $generated@@164))))
$generated@@165)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
