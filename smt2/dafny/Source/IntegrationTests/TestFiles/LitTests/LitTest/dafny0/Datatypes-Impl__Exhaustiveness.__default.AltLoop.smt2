(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@113 (T@U Int) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated@@23) 0))
(assert (= ($generated@@24 $generated@@25) $generated@@2))
(assert (= ($generated@@24 $generated@@26) $generated@@3))
(assert (= ($generated@@24 $generated@@27) $generated@@4))
(assert (= ($generated@@6 $generated@@29) 3))
(assert ($generated@@28 $generated@@29 $generated@@25 $generated@@30))
(assert ($generated@@28 $generated@@29 $generated@@26 $generated@@30))
(assert ($generated@@28 $generated@@29 $generated@@27 $generated@@30))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@33) (= $generated@@32 $generated@@33))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@35 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@35 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@35 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@6 $generated@@36) 4)) (= ($generated@@6 $generated@@37) 5)) (= ($generated@@6 $generated@@38) 6)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@6 ($generated@@39 $generated@@55 $generated@@56)) 7))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@39 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@39 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@39 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> ($generated@@34 $generated@@61 $generated@@62) (forall (($generated@@63 T@U) ) (!  (=> ($generated@@11 ($generated@@40 $generated@@7 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@61 $generated@@63) $generated@@0))) ($generated@@11 ($generated@@40 $generated@@7 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@62 $generated@@63) $generated@@0))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@62 $generated@@63) $generated@@0))
)))
 :pattern ( ($generated@@34 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@64 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 $generated@@70) (= ($generated@@24 $generated@@70) $generated@@2))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 $generated@@72) (= ($generated@@24 $generated@@72) $generated@@3))
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@73 $generated@@74) (= ($generated@@24 $generated@@74) $generated@@4))
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 ($generated@@40 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@40 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@69 $generated@@78) (= $generated@@78 $generated@@25))
 :pattern ( ($generated@@69 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@71 $generated@@79) (= $generated@@79 $generated@@26))
 :pattern ( ($generated@@71 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@73 $generated@@80) (= $generated@@80 $generated@@27))
 :pattern ( ($generated@@73 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@81 ($generated@@75 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@82 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@81 ($generated@@75 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@34 $generated@@87 $generated@@88) (=> ($generated@@81 $generated@@89 $generated@@90 $generated@@87) ($generated@@81 $generated@@89 $generated@@90 $generated@@88)))
 :pattern ( ($generated@@34 $generated@@87 $generated@@88) ($generated@@81 $generated@@89 $generated@@90 $generated@@87))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (!  (=> ($generated@@34 $generated@@91 $generated@@92) (=> ($generated@@82 $generated@@95 $generated@@93 $generated@@94 $generated@@91) ($generated@@82 $generated@@95 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@34 $generated@@91 $generated@@92) ($generated@@82 $generated@@95 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@96 $generated@@97 $generated@@30) (and (= ($generated@@75 $generated@@29 ($generated@@40 $generated@@29 $generated@@97)) $generated@@97) ($generated@@28 $generated@@29 ($generated@@40 $generated@@29 $generated@@97) $generated@@30)))
 :pattern ( ($generated@@96 $generated@@97 $generated@@30))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (or (not (= $generated@@98 $generated@@100)) (not true)) (=> (and ($generated@@34 $generated@@98 $generated@@99) ($generated@@34 $generated@@99 $generated@@100)) ($generated@@34 $generated@@98 $generated@@100)))
 :pattern ( ($generated@@34 $generated@@98 $generated@@99) ($generated@@34 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@96 ($generated@@75 $generated@@103 $generated@@101) $generated@@102) ($generated@@28 $generated@@103 $generated@@101 $generated@@102))
 :pattern ( ($generated@@96 ($generated@@75 $generated@@103 $generated@@101) $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (<= 0 ($generated@@22 $generated@@104))
 :pattern ( ($generated@@22 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and ($generated@@69 $generated@@105) ($generated@@69 $generated@@106)) ($generated@@31 $generated@@105 $generated@@106))
 :pattern ( ($generated@@31 $generated@@105 $generated@@106) ($generated@@69 $generated@@105))
 :pattern ( ($generated@@31 $generated@@105 $generated@@106) ($generated@@69 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (and ($generated@@71 $generated@@107) ($generated@@71 $generated@@108)) ($generated@@31 $generated@@107 $generated@@108))
 :pattern ( ($generated@@31 $generated@@107 $generated@@108) ($generated@@71 $generated@@107))
 :pattern ( ($generated@@31 $generated@@107 $generated@@108) ($generated@@71 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (and ($generated@@73 $generated@@109) ($generated@@73 $generated@@110)) ($generated@@31 $generated@@109 $generated@@110))
 :pattern ( ($generated@@31 $generated@@109 $generated@@110) ($generated@@73 $generated@@109))
 :pattern ( ($generated@@31 $generated@@109 $generated@@110) ($generated@@73 $generated@@110))
)))
(assert (= ($generated@@6 $generated@@111) 8))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@82 $generated@@111 $generated@@114 ($generated@@112 $generated@@115) $generated@@116) (forall (($generated@@117 Int) ) (!  (=> (and (<= 0 $generated@@117) (< $generated@@117 ($generated@@22 $generated@@114))) ($generated@@81 ($generated@@113 $generated@@114 $generated@@117) $generated@@115 $generated@@116))
 :pattern ( ($generated@@113 $generated@@114 $generated@@117))
)))
 :pattern ( ($generated@@82 $generated@@111 $generated@@114 ($generated@@112 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@112 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@112 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@112 $generated@@121)) $generated)
 :pattern ( ($generated@@112 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@40 $generated@@123 ($generated@@75 $generated@@123 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@75 $generated@@123 $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@124 $generated@@125) (or (or ($generated@@69 $generated@@125) ($generated@@71 $generated@@125)) ($generated@@73 $generated@@125)))
 :pattern ( ($generated@@124 $generated@@125))
)))
(assert  (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@126 $generated@@129 $generated@@130 $generated@@131 ($generated@@128 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@134 $generated@@135) $generated@@132)
 :weight 0
)) (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@126 $generated@@136 $generated@@137 $generated@@138 ($generated@@128 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@126 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@126 $generated@@145 $generated@@146 $generated@@147 ($generated@@128 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@126 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 Bool) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@11 ($generated@@126 $generated@@38 $generated@@36 $generated@@7 ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))  (=> (and (or (not (= $generated@@158 $generated@@154)) (not true)) ($generated@@11 ($generated@@40 $generated@@7 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@155 $generated@@158) $generated@@156)))) $generated@@157))
 :pattern ( ($generated@@126 $generated@@38 $generated@@36 $generated@@7 ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@160 $generated@@30) (or (or ($generated@@69 $generated@@160) ($generated@@71 $generated@@160)) ($generated@@73 $generated@@160)))
 :pattern ( ($generated@@73 $generated@@160) ($generated@@28 $generated@@29 $generated@@160 $generated@@30))
 :pattern ( ($generated@@71 $generated@@160) ($generated@@28 $generated@@29 $generated@@160 $generated@@30))
 :pattern ( ($generated@@69 $generated@@160) ($generated@@28 $generated@@29 $generated@@160 $generated@@30))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@96 $generated@@161 ($generated@@112 $generated@@162)) (and (= ($generated@@75 $generated@@111 ($generated@@40 $generated@@111 $generated@@161)) $generated@@161) ($generated@@28 $generated@@111 ($generated@@40 $generated@@111 $generated@@161) ($generated@@112 $generated@@162))))
 :pattern ( ($generated@@96 $generated@@161 ($generated@@112 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@163 $generated@@165) ($generated@@28 $generated@@29 $generated@@164 $generated@@30)) ($generated@@82 $generated@@29 $generated@@164 $generated@@30 $generated@@165))
 :pattern ( ($generated@@82 $generated@@29 $generated@@164 $generated@@30 $generated@@165))
)))
(assert (= ($generated@@120 $generated@@30) $generated@@1))
(assert (= ($generated@@166 $generated@@30) $generated@@5))
(assert (= $generated@@25 ($generated@@66 $generated@@29 $generated@@25)))
(assert (= $generated@@26 ($generated@@66 $generated@@29 $generated@@26)))
(assert (= $generated@@27 ($generated@@66 $generated@@29 $generated@@27)))
(assert (forall (($generated@@167 Int) ) (! (= ($generated@@75 $generated@@8 ($generated@@12 ($generated@@64 $generated@@167))) ($generated@@66 $generated@@37 ($generated@@75 $generated@@8 ($generated@@12 $generated@@167))))
 :pattern ( ($generated@@75 $generated@@8 ($generated@@12 ($generated@@64 $generated@@167))))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@75 $generated@@169 ($generated@@66 $generated@@169 $generated@@168)) ($generated@@66 $generated@@37 ($generated@@75 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@75 $generated@@169 ($generated@@66 $generated@@169 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= ($generated@@22 $generated@@170) 0) (= $generated@@170 $generated@@23))
 :pattern ( ($generated@@22 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@28 $generated@@111 $generated@@171 ($generated@@112 $generated@@172)) (forall (($generated@@173 Int) ) (!  (=> (and (<= 0 $generated@@173) (< $generated@@173 ($generated@@22 $generated@@171))) ($generated@@96 ($generated@@113 $generated@@171 $generated@@173) $generated@@172))
 :pattern ( ($generated@@113 $generated@@171 $generated@@173))
)))
 :pattern ( ($generated@@28 $generated@@111 $generated@@171 ($generated@@112 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@184  (=> (= (ControlFlow 0 7) (- 0 6)) ($generated@@11 ($generated@@66 $generated@@7 ($generated@@10 false))))))
(let (($generated@@185  (=> ($generated@@124 $generated@@174) (=> (and ($generated@@124 $generated@@174) ($generated@@124 $generated@@174)) (=> (and (and (and (not ($generated@@31 $generated@@174 $generated@@25)) (not ($generated@@31 $generated@@174 $generated@@26))) (not ($generated@@31 $generated@@174 $generated@@27))) (= (ControlFlow 0 9) 7)) $generated@@184)))))
(let (($generated@@186  (=> (and (not ($generated@@11 ($generated@@66 $generated@@7 ($generated@@10 true)))) (= (ControlFlow 0 8) 7)) $generated@@184)))
(let (($generated@@187 true))
(let (($generated@@188 true))
(let (($generated@@189 true))
(let (($generated@@190  (=> ($generated@@11 ($generated@@66 $generated@@7 ($generated@@10 true))) (and (and (and (=> (= (ControlFlow 0 10) 3) $generated@@189) (=> (= (ControlFlow 0 10) 4) $generated@@188)) (=> (= (ControlFlow 0 10) 5) $generated@@187)) (=> (= (ControlFlow 0 10) 9) $generated@@185)))))
(let (($generated@@191  (=> $generated@@175 (and (=> (= (ControlFlow 0 11) 8) $generated@@186) (=> (= (ControlFlow 0 11) 10) $generated@@190)))))
(let (($generated@@192 true))
(let (($generated@@193  (and (=> (= (ControlFlow 0 12) 2) $generated@@192) (=> (= (ControlFlow 0 12) 11) $generated@@191))))
(let (($generated@@194 true))
(let (($generated@@195  (=> (and (and (not false) (forall (($generated@@196 T@U) ) (!  (=> (and (or (not (= $generated@@196 $generated@@177)) (not true)) ($generated@@11 ($generated@@40 $generated@@7 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@176 $generated@@196) $generated@@0)))) (= ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@176 $generated@@196) ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@176 $generated@@196)))
 :pattern ( ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@176 $generated@@196))
))) (and ($generated@@34 $generated@@176 $generated@@176) (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (or (not (= $generated@@197 $generated@@177)) (not true)) ($generated@@11 ($generated@@40 $generated@@7 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@176 $generated@@197) $generated@@0)))) (or (= ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@176 $generated@@197) $generated@@198) ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@176 $generated@@197) $generated@@198)) ($generated@@11 ($generated@@126 $generated@@38 $generated@@36 $generated@@7 $generated@@178 $generated@@197 $generated@@198))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@176 $generated@@197) $generated@@198))
)))) (and (=> (= (ControlFlow 0 13) 1) $generated@@194) (=> (= (ControlFlow 0 13) 12) $generated@@193)))))
(let (($generated@@199  (=> (= $generated@@178 ($generated@@127 $generated@@177 $generated@@176 $generated@@0 false)) (and (=> (= (ControlFlow 0 14) (- 0 15)) (and (<= 0 $generated@@179) (< $generated@@179 ($generated@@22 $generated@@180)))) (=> (and (<= 0 $generated@@179) (< $generated@@179 ($generated@@22 $generated@@180))) (=> (and (= $generated@@174 ($generated@@40 $generated@@29 ($generated@@113 $generated@@180 $generated@@179))) (= (ControlFlow 0 14) 13)) $generated@@195))))))
(let (($generated@@200  (=> (and (and ($generated@@163 $generated@@176) ($generated@@181 $generated@@176)) (and ($generated@@28 $generated@@111 $generated@@180 ($generated@@112 $generated@@30)) ($generated@@82 $generated@@111 $generated@@180 ($generated@@112 $generated@@30) $generated@@176))) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@182 $generated@@30) ($generated@@82 $generated@@29 $generated@@182 $generated@@30 $generated@@176)) true) (and (and (= 1 $generated@@183) (<= ($generated@@64 0) $generated@@179)) (and (< $generated@@179 ($generated@@22 $generated@@180)) (= (ControlFlow 0 16) 14)))) $generated@@199))))
$generated@@200)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
