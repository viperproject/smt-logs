(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T T@T) T@T)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (Int) Int)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@119 (Int) T@U)
(declare-fun $generated@@120 (T@U) Int)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated@@3) 0))
(assert (= ($generated@@31 $generated) $generated@@1))
(assert (= ($generated@@31 $generated@@0) $generated@@2))
(assert (= ($generated@@32 $generated@@3) $generated@@4))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! ($generated@@33 $generated@@16 $generated@@35 $generated@@34 $generated@@36)
 :pattern ( ($generated@@33 $generated@@16 $generated@@35 $generated@@34 $generated@@36))
)))
(assert (= ($generated@@14 $generated@@38) 3))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@42 $generated@@39)  (or (= $generated@@42 $generated@@40) (= ($generated@@41 $generated@@42) $generated@@39)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@42 $generated@@39))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@33 $generated@@38 $generated@@44 $generated@@43 $generated@@45) ($generated@@33 $generated@@38 $generated@@44 $generated@@39 $generated@@45))
 :pattern ( ($generated@@33 $generated@@38 $generated@@44 $generated@@43 $generated@@45))
 :pattern ( ($generated@@33 $generated@@38 $generated@@44 $generated@@39 $generated@@45))
)))
(assert (= ($generated@@30 $generated@@46) 0))
(assert (= ($generated@@47 $generated@@6 $generated@@11) $generated@@46))
(assert  (not ($generated@@48 $generated@@46)))
(assert (= ($generated@@30 $generated@@49) 0))
(assert (= ($generated@@47 $generated@@6 $generated@@12) $generated@@49))
(assert  (not ($generated@@48 $generated@@49)))
(assert (= ($generated@@30 $generated@@50) 0))
(assert (= ($generated@@47 $generated@@6 $generated@@13) $generated@@50))
(assert  (not ($generated@@48 $generated@@50)))
(assert  (and (and (and (and (and (and (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@52 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@52 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@52 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@14 $generated@@53) 4)) (= ($generated@@14 $generated@@54) 5)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@14 ($generated@@55 $generated@@70 $generated@@71)) 6))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@55 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@55 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@55 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@55 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@33 $generated@@38 $generated@@76 $generated@@39 $generated@@77)  (or (= $generated@@76 $generated@@40) ($generated@@19 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@77 $generated@@76) $generated@@3)))))
 :pattern ( ($generated@@33 $generated@@38 $generated@@76 $generated@@39 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> ($generated@@78 $generated@@79 $generated@@80) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@19 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@79 $generated@@81) $generated@@3))) ($generated@@19 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@80 $generated@@81) $generated@@3))))
 :pattern ( ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@80 $generated@@81) $generated@@3))
)))
 :pattern ( ($generated@@78 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@83 Int) ) (! (= ($generated@@82 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@51 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@51 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@37 $generated@@16 $generated@@90 $generated@@34) (<= ($generated@@82 0) ($generated@@21 $generated@@90)))
 :pattern ( ($generated@@37 $generated@@16 $generated@@90 $generated@@34))
)))
(assert ($generated@@48 $generated@@3))
(assert (= ($generated@@14 $generated@@91) 7))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (and (and ($generated@@92 $generated@@93) (and (or (not (= $generated@@94 $generated@@40)) (not true)) (= ($generated@@41 $generated@@94) $generated@@39))) ($generated@@19 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@93 $generated@@94) $generated@@3)))) ($generated@@33 $generated@@91 ($generated@@51 $generated@@91 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@93 $generated@@94) $generated@@46)) $generated $generated@@93))
 :pattern ( ($generated@@51 $generated@@91 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@93 $generated@@94) $generated@@46)))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and (and ($generated@@92 $generated@@95) (and (or (not (= $generated@@96 $generated@@40)) (not true)) (= ($generated@@41 $generated@@96) $generated@@39))) ($generated@@19 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@95 $generated@@96) $generated@@3)))) ($generated@@33 $generated@@17 ($generated@@51 $generated@@17 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@95 $generated@@96) $generated@@50)) $generated@@0 $generated@@95))
 :pattern ( ($generated@@51 $generated@@17 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@95 $generated@@96) $generated@@50)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (!  (=> ($generated@@78 $generated@@97 $generated@@98) (=> ($generated@@33 $generated@@101 $generated@@99 $generated@@100 $generated@@97) ($generated@@33 $generated@@101 $generated@@99 $generated@@100 $generated@@98)))
 :pattern ( ($generated@@78 $generated@@97 $generated@@98) ($generated@@33 $generated@@101 $generated@@99 $generated@@100 $generated@@97))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@92 $generated@@102) (and (or (not (= $generated@@103 $generated@@40)) (not true)) (= ($generated@@41 $generated@@103) $generated@@39))) ($generated@@37 $generated@@16 ($generated@@51 $generated@@16 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@102 $generated@@103) $generated@@49)) $generated@@34))
 :pattern ( ($generated@@51 $generated@@16 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@102 $generated@@103) $generated@@49)))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@104 $generated@@43)  (and ($generated@@37 $generated@@38 $generated@@104 $generated@@39) (or (not (= $generated@@104 $generated@@40)) (not true))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@104 $generated@@43))
 :pattern ( ($generated@@37 $generated@@38 $generated@@104 $generated@@39))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and (and ($generated@@92 $generated@@105) (and (or (not (= $generated@@106 $generated@@40)) (not true)) (= ($generated@@41 $generated@@106) $generated@@39))) ($generated@@19 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@105 $generated@@106) $generated@@3)))) ($generated@@33 $generated@@16 ($generated@@51 $generated@@16 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@105 $generated@@106) $generated@@49)) $generated@@34 $generated@@105))
 :pattern ( ($generated@@51 $generated@@16 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@105 $generated@@106) $generated@@49)))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (or (not (= $generated@@107 $generated@@109)) (not true)) (=> (and ($generated@@78 $generated@@107 $generated@@108) ($generated@@78 $generated@@108 $generated@@109)) ($generated@@78 $generated@@107 $generated@@109)))
 :pattern ( ($generated@@78 $generated@@107 $generated@@108) ($generated@@78 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (!  (and (= ($generated@@110 ($generated@@47 $generated@@111 $generated@@112)) $generated@@111) (= ($generated@@32 ($generated@@47 $generated@@111 $generated@@112)) $generated@@112))
 :pattern ( ($generated@@47 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@51 $generated@@114 ($generated@@87 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@87 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (and ($generated@@92 $generated@@115) (and (or (not (= $generated@@116 $generated@@40)) (not true)) (= ($generated@@41 $generated@@116) $generated@@39))) ($generated@@37 $generated@@91 ($generated@@51 $generated@@91 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@115 $generated@@116) $generated@@46)) $generated))
 :pattern ( ($generated@@51 $generated@@91 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@115 $generated@@116) $generated@@46)))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and ($generated@@92 $generated@@117) (and (or (not (= $generated@@118 $generated@@40)) (not true)) (= ($generated@@41 $generated@@118) $generated@@39))) ($generated@@37 $generated@@17 ($generated@@51 $generated@@17 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@117 $generated@@118) $generated@@50)) $generated@@0))
 :pattern ( ($generated@@51 $generated@@17 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@117 $generated@@118) $generated@@50)))
)))
(assert (forall (($generated@@121 Int) ) (!  (=> (or (and (<= 0 $generated@@121) (< $generated@@121 55296)) (and (<= 57344 $generated@@121) (< $generated@@121 1114112))) (= ($generated@@120 ($generated@@119 $generated@@121)) $generated@@121))
 :pattern ( ($generated@@119 $generated@@121))
)))
(assert  (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@122 $generated@@125 $generated@@126 $generated@@127 ($generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@130 $generated@@131) $generated@@128)
 :weight 0
)) (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@122 $generated@@132 $generated@@133 $generated@@134 ($generated@@124 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@122 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@122 $generated@@141 $generated@@142 $generated@@143 ($generated@@124 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@122 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@19 ($generated@@122 $generated@@38 $generated@@53 $generated@@15 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (or (not (= $generated@@154 $generated@@150)) (not true)) ($generated@@19 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@151 $generated@@154) $generated@@152)))) $generated@@153))
 :pattern ( ($generated@@122 $generated@@38 $generated@@53 $generated@@15 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (and (= ($generated@@119 ($generated@@120 $generated@@156)) $generated@@156) (or (and (<= 0 ($generated@@120 $generated@@156)) (< ($generated@@120 $generated@@156) 55296)) (and (<= 57344 ($generated@@120 $generated@@156)) (< ($generated@@120 $generated@@156) 1114112))))
 :pattern ( ($generated@@120 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@92 ($generated@@56 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@157 $generated@@158 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@157 $generated@@158) $generated@@159 $generated@@160))) ($generated@@78 $generated@@157 ($generated@@56 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@157 $generated@@158 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@157 $generated@@158) $generated@@159 $generated@@160))))
 :pattern ( ($generated@@56 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@157 $generated@@158 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@157 $generated@@158) $generated@@159 $generated@@160)))
)))
(assert (= ($generated@@31 $generated@@34) $generated@@5))
(assert (= ($generated@@161 $generated@@34) $generated@@9))
(assert (= ($generated@@31 $generated@@39) $generated@@7))
(assert (= ($generated@@161 $generated@@39) $generated@@10))
(assert (= ($generated@@31 $generated@@43) $generated@@8))
(assert (= ($generated@@161 $generated@@43) $generated@@10))
(assert (forall (($generated@@162 Int) ) (! (= ($generated@@87 $generated@@16 ($generated@@20 ($generated@@82 $generated@@162))) ($generated@@84 $generated@@54 ($generated@@87 $generated@@16 ($generated@@20 $generated@@162))))
 :pattern ( ($generated@@87 $generated@@16 ($generated@@20 ($generated@@82 $generated@@162))))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@87 $generated@@164 ($generated@@84 $generated@@164 $generated@@163)) ($generated@@84 $generated@@54 ($generated@@87 $generated@@164 $generated@@163)))
 :pattern ( ($generated@@87 $generated@@164 ($generated@@84 $generated@@164 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! ($generated@@33 $generated@@17 $generated@@166 $generated@@0 $generated@@165)
 :pattern ( ($generated@@33 $generated@@17 $generated@@166 $generated@@0 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! ($generated@@33 $generated@@91 $generated@@168 $generated $generated@@167)
 :pattern ( ($generated@@33 $generated@@91 $generated@@168 $generated $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! ($generated@@37 $generated@@17 $generated@@169 $generated@@0)
 :pattern ( ($generated@@37 $generated@@17 $generated@@169 $generated@@0))
)))
(assert (forall (($generated@@170 T@U) ) (! ($generated@@37 $generated@@91 $generated@@170 $generated)
 :pattern ( ($generated@@37 $generated@@91 $generated@@170 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Real)
(declare-fun $generated@@176 () Real)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (= $generated@@171 ($generated@@123 $generated@@40 $generated@@172 $generated@@3 false)) (=> (and (and (and (and (= $generated@@173 ($generated@@84 $generated@@91 ($generated@@119 121))) ($generated@@37 $generated@@16 ($generated@@20 ($generated@@82 50)) $generated@@34)) (and (= $generated@@174 ($generated@@82 50)) (= $generated@@175 (* 2.0 $generated@@176)))) (and (and (or (not (= $generated@@177 $generated@@40)) (not true)) ($generated@@37 $generated@@38 $generated@@177 $generated@@39)) (and (not ($generated@@19 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@172 $generated@@177) $generated@@3)))) (= ($generated@@51 $generated@@91 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@172 $generated@@177) $generated@@46)) $generated@@173)))) (and (and (and (= ($generated@@21 ($generated@@51 $generated@@16 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@172 $generated@@177) $generated@@49))) $generated@@174) (= ($generated@@23 ($generated@@51 $generated@@17 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@172 $generated@@177) $generated@@50))) $generated@@175)) (and (= $generated@@178 ($generated@@56 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@172 $generated@@177 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@172 $generated@@177) $generated@@3 ($generated@@87 $generated@@15 ($generated@@18 true))))) ($generated@@92 $generated@@178))) (and (and ($generated@@179 $generated@@178) (= (ControlFlow 0 2) (- 0 1))) false))) (<= ($generated@@23 ($generated@@51 $generated@@17 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@38 ($generated@@55 $generated@@53 $generated@@54) $generated@@178 $generated@@177) $generated@@50))) (* 2.0 $generated@@176))))))
(let (($generated@@182  (=> (and (and ($generated@@92 $generated@@172) ($generated@@179 $generated@@172)) (and (= 0 $generated@@180) (= (ControlFlow 0 3) 2))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
