(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U Int) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U Int) T@U)
(declare-fun $generated@@40 (Int) Int)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 () Int)
(declare-fun $generated@@55 (T@U T@U) Int)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U T@U) Int)
(declare-fun $generated@@65 (T@U) Int)
(declare-fun $generated@@70 (T@U T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@115 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@T T@T) T@T)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@T) T@T)
(declare-fun $generated@@121 (T@T) T@T)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@29) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 Int) ) (!  (=> (and (<= 0 $generated@@31) (< $generated@@31 ($generated@@26 $generated@@30))) (< ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@30 $generated@@31))) ($generated@@27 ($generated@@25 $generated@@30))))
 :pattern ( ($generated@@24 $generated@@30 $generated@@31) ($generated@@25 $generated@@30))
)))
(assert (= ($generated@@26 $generated@@32) 0))
(assert (= ($generated@@33 $generated@@34) $generated@@4))
(assert ($generated@@35 $generated@@29 $generated@@34 $generated@@36))
(assert (forall (($generated@@38 T@U) ($generated@@39 Int) ) (!  (=> (= $generated@@39 0) (= ($generated@@37 $generated@@38 $generated@@39) $generated@@38))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 Int) ) (! (= ($generated@@40 $generated@@41) $generated@@41)
 :pattern ( ($generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@T) ) (! (= ($generated@@42 $generated@@44 $generated@@43) $generated@@43)
 :pattern ( ($generated@@42 $generated@@44 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 Int) ) (!  (=> (and (<= 0 $generated@@46) (<= $generated@@46 ($generated@@26 $generated@@45))) (= ($generated@@26 ($generated@@37 $generated@@45 $generated@@46)) (- ($generated@@26 $generated@@45) $generated@@46)))
 :pattern ( ($generated@@26 ($generated@@37 $generated@@45 $generated@@46)))
)))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@47 $generated@@48) (= ($generated@@33 $generated@@48) $generated@@4))
 :pattern ( ($generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@49 $generated@@50) (= ($generated@@33 $generated@@50) $generated@@5))
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 ($generated@@28 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@28 $generated@@53 $generated@@52))
)))
(assert (= ($generated@@7 $generated@@57) 4))
(assert  (=> (<= 1 $generated@@54) (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (or ($generated@@58 ($generated@@42 $generated@@57 $generated@@63)) (and (< 1 $generated@@54) ($generated@@35 $generated@@57 $generated@@63 ($generated@@59 $generated@@36)))) (and (=> (or (not (= ($generated@@26 ($generated@@42 $generated@@57 $generated@@63)) ($generated@@40 0))) (not true)) (and ($generated@@60 ($generated@@28 $generated@@29 ($generated@@24 ($generated@@42 $generated@@57 $generated@@63) ($generated@@40 0)))) ($generated@@58 ($generated@@42 $generated@@57 ($generated@@37 ($generated@@42 $generated@@57 $generated@@63) ($generated@@40 1)))))) (= ($generated@@55 ($generated@@56 $generated@@62) ($generated@@42 $generated@@57 $generated@@63)) (ite (= ($generated@@26 ($generated@@42 $generated@@57 $generated@@63)) ($generated@@40 0)) 1 (+ (+ 1 ($generated@@61 ($generated@@56 $generated@@62) ($generated@@28 $generated@@29 ($generated@@24 ($generated@@42 $generated@@57 $generated@@63) ($generated@@40 0))))) ($generated@@55 ($generated@@56 $generated@@62) ($generated@@42 $generated@@57 ($generated@@37 ($generated@@42 $generated@@57 $generated@@63) ($generated@@40 1)))))))))
 :weight 3
 :pattern ( ($generated@@55 ($generated@@56 $generated@@62) ($generated@@42 $generated@@57 $generated@@63)))
))))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@47 $generated@@64) (= $generated@@64 $generated@@34))
 :pattern ( ($generated@@47 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 Int) ) (!  (=> (and (< 0 $generated@@67) (<= $generated@@67 ($generated@@26 $generated@@66))) (< ($generated@@65 ($generated@@37 $generated@@66 $generated@@67)) ($generated@@65 $generated@@66)))
 :pattern ( ($generated@@65 ($generated@@37 $generated@@66 $generated@@67)))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@49 $generated@@68) (exists (($generated@@69 T@U) ) (= $generated@@68 ($generated@@25 $generated@@69))))
 :pattern ( ($generated@@49 $generated@@68))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@51 $generated@@75 $generated@@72) $generated@@73 $generated@@74) ($generated@@71 $generated@@75 $generated@@72 $generated@@73 $generated@@74))
 :pattern ( ($generated@@70 ($generated@@51 $generated@@75 $generated@@72) $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 Int) ($generated@@78 Int) ) (!  (=> (and (and (<= 0 $generated@@77) (<= 0 $generated@@78)) (< $generated@@78 (- ($generated@@26 $generated@@76) $generated@@77))) (= ($generated@@24 ($generated@@37 $generated@@76 $generated@@77) $generated@@78) ($generated@@24 $generated@@76 (+ $generated@@78 $generated@@77))))
 :weight 25
 :pattern ( ($generated@@24 ($generated@@37 $generated@@76 $generated@@77) $generated@@78))
)))
(assert  (=> (<= 1 $generated@@54) (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (or ($generated@@58 $generated@@80) (and (< 1 $generated@@54) ($generated@@35 $generated@@57 $generated@@80 ($generated@@59 $generated@@36)))) (and (=> (or (not (= ($generated@@26 $generated@@80) ($generated@@40 0))) (not true)) (and ($generated@@60 ($generated@@28 $generated@@29 ($generated@@24 $generated@@80 ($generated@@40 0)))) ($generated@@58 ($generated@@37 $generated@@80 ($generated@@40 1))))) (= ($generated@@55 ($generated@@56 $generated@@79) $generated@@80) (ite (= ($generated@@26 $generated@@80) ($generated@@40 0)) 1 (+ (+ 1 ($generated@@61 $generated@@79 ($generated@@28 $generated@@29 ($generated@@24 $generated@@80 ($generated@@40 0))))) ($generated@@55 $generated@@79 ($generated@@37 $generated@@80 ($generated@@40 1))))))))
 :pattern ( ($generated@@55 ($generated@@56 $generated@@79) $generated@@80))
))))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@81 $generated@@82 $generated@@36) (and (= ($generated@@51 $generated@@29 ($generated@@28 $generated@@29 $generated@@82)) $generated@@82) ($generated@@35 $generated@@29 ($generated@@28 $generated@@29 $generated@@82) $generated@@36)))
 :pattern ( ($generated@@81 $generated@@82 $generated@@36))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@35 $generated@@29 ($generated@@25 $generated@@83) $generated@@36) ($generated@@35 $generated@@57 $generated@@83 ($generated@@59 $generated@@36)))
 :pattern ( ($generated@@35 $generated@@29 ($generated@@25 $generated@@83) $generated@@36))
)))
(assert  (=> (<= 1 $generated@@54) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (or ($generated@@60 ($generated@@42 $generated@@29 $generated@@86)) (and (< 1 $generated@@54) ($generated@@35 $generated@@29 $generated@@86 $generated@@36))) (and (=> (not ($generated@@12 ($generated@@42 $generated@@8 ($generated@@11 ($generated@@47 ($generated@@42 $generated@@29 $generated@@86)))))) (let (($generated@@87 ($generated@@42 $generated@@57 ($generated@@84 ($generated@@42 $generated@@29 $generated@@86)))))
($generated@@58 $generated@@87))) (= ($generated@@61 ($generated@@56 $generated@@85) ($generated@@42 $generated@@29 $generated@@86)) (ite ($generated@@47 ($generated@@42 $generated@@29 $generated@@86)) 1 (let (($generated@@88 ($generated@@42 $generated@@57 ($generated@@84 ($generated@@42 $generated@@29 $generated@@86)))))
($generated@@40 (+ 1 ($generated@@55 ($generated@@56 $generated@@85) $generated@@88))))))))
 :weight 3
 :pattern ( ($generated@@61 ($generated@@56 $generated@@85) ($generated@@42 $generated@@29 $generated@@86)))
))))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@35 $generated@@29 $generated@@89 $generated@@36) (or ($generated@@47 $generated@@89) ($generated@@49 $generated@@89)))
 :pattern ( ($generated@@49 $generated@@89) ($generated@@35 $generated@@29 $generated@@89 $generated@@36))
 :pattern ( ($generated@@47 $generated@@89) ($generated@@35 $generated@@29 $generated@@89 $generated@@36))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@81 $generated@@90 $generated) (and (= ($generated@@51 $generated@@9 ($generated@@28 $generated@@9 $generated@@90)) $generated@@90) ($generated@@35 $generated@@9 ($generated@@28 $generated@@9 $generated@@90) $generated)))
 :pattern ( ($generated@@81 $generated@@90 $generated))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@81 ($generated@@51 $generated@@93 $generated@@91) $generated@@92) ($generated@@35 $generated@@93 $generated@@91 $generated@@92))
 :pattern ( ($generated@@81 ($generated@@51 $generated@@93 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (! (<= 0 ($generated@@26 $generated@@94))
 :pattern ( ($generated@@26 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@71 $generated@@57 $generated@@95 ($generated@@59 $generated@@96) $generated@@97) (forall (($generated@@98 Int) ) (!  (=> (and (<= 0 $generated@@98) (< $generated@@98 ($generated@@26 $generated@@95))) ($generated@@70 ($generated@@24 $generated@@95 $generated@@98) $generated@@96 $generated@@97))
 :pattern ( ($generated@@24 $generated@@95 $generated@@98))
)))
 :pattern ( ($generated@@71 $generated@@57 $generated@@95 ($generated@@59 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@99 ($generated@@59 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@59 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@23 ($generated@@59 $generated@@101)) $generated@@1)
 :pattern ( ($generated@@59 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@33 ($generated@@25 $generated@@102)) $generated@@5)
 :pattern ( ($generated@@25 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@84 ($generated@@25 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@25 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@28 $generated@@105 ($generated@@51 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@51 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@61 ($generated@@56 $generated@@106) $generated@@107) ($generated@@61 $generated@@106 $generated@@107))
 :pattern ( ($generated@@61 ($generated@@56 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@55 ($generated@@56 $generated@@108) $generated@@109) ($generated@@55 $generated@@108 $generated@@109))
 :pattern ( ($generated@@55 ($generated@@56 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (< ($generated@@65 $generated@@110) ($generated@@27 ($generated@@25 $generated@@110)))
 :pattern ( ($generated@@25 $generated@@110))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@111 $generated@@122 $generated@@123 $generated@@124 ($generated@@118 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@127 $generated@@128) $generated@@125)
 :weight 0
)) (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@111 $generated@@129 $generated@@130 $generated@@131 ($generated@@118 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@111 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@111 $generated@@138 $generated@@139 $generated@@140 ($generated@@118 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@111 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)))) (= ($generated@@7 $generated@@112) 5)) (= ($generated@@7 $generated@@113) 6)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@115 $generated@@147 $generated@@148 ($generated@@119 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@151) $generated@@149)
 :weight 0
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@156 $generated@@157) (= ($generated@@115 $generated@@152 $generated@@153 ($generated@@119 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@115 $generated@@152 $generated@@153 $generated@@155 $generated@@157)))
 :weight 0
))) (= ($generated@@7 $generated@@116) 7)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (= ($generated@@7 ($generated@@117 $generated@@158 $generated@@159)) 8))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (! (= ($generated@@120 ($generated@@117 $generated@@160 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@117 $generated@@160 $generated@@161))
))) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (! (= ($generated@@121 ($generated@@117 $generated@@162 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@117 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@12 ($generated@@111 $generated@@112 $generated@@113 $generated@@8 ($generated@@114 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@12 ($generated@@28 $generated@@8 ($generated@@115 $generated@@113 $generated@@116 ($generated@@115 $generated@@112 ($generated@@117 $generated@@113 $generated@@116) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@111 $generated@@112 $generated@@113 $generated@@8 ($generated@@114 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@81 $generated@@170 ($generated@@59 $generated@@171)) (and (= ($generated@@51 $generated@@57 ($generated@@28 $generated@@57 $generated@@170)) $generated@@170) ($generated@@35 $generated@@57 ($generated@@28 $generated@@57 $generated@@170) ($generated@@59 $generated@@171))))
 :pattern ( ($generated@@81 $generated@@170 ($generated@@59 $generated@@171)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and ($generated@@172 $generated@@174) ($generated@@35 $generated@@29 $generated@@173 $generated@@36)) ($generated@@71 $generated@@29 $generated@@173 $generated@@36 $generated@@174))
 :pattern ( ($generated@@71 $generated@@29 $generated@@173 $generated@@36 $generated@@174))
)))
(assert (= ($generated@@23 $generated@@36) $generated@@3))
(assert (= ($generated@@175 $generated@@36) $generated@@6))
(assert (forall (($generated@@176 T@U) ($generated@@177 Int) ($generated@@178 Int) ) (!  (=> (and (and (<= 0 $generated@@177) (<= $generated@@177 $generated@@178)) (< $generated@@178 ($generated@@26 $generated@@176))) (= ($generated@@24 ($generated@@37 $generated@@176 $generated@@177) (- $generated@@178 $generated@@177)) ($generated@@24 $generated@@176 $generated@@178)))
 :weight 25
 :pattern ( ($generated@@24 $generated@@176 $generated@@178) ($generated@@37 $generated@@176 $generated@@177))
)))
(assert (= $generated@@34 ($generated@@42 $generated@@29 $generated@@34)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 Int) ) (!  (=> (and (and (<= 0 $generated@@180) (<= 0 $generated@@181)) (<= (+ $generated@@180 $generated@@181) ($generated@@26 $generated@@179))) (= ($generated@@37 ($generated@@37 $generated@@179 $generated@@180) $generated@@181) ($generated@@37 $generated@@179 (+ $generated@@180 $generated@@181))))
 :pattern ( ($generated@@37 ($generated@@37 $generated@@179 $generated@@180) $generated@@181))
)))
(assert  (=> (<= 1 $generated@@54) (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (or ($generated@@60 $generated@@183) (and (< 1 $generated@@54) ($generated@@35 $generated@@29 $generated@@183 $generated@@36))) (and (=> (not ($generated@@47 $generated@@183)) (let (($generated@@184 ($generated@@84 $generated@@183)))
($generated@@58 $generated@@184))) (= ($generated@@61 ($generated@@56 $generated@@182) $generated@@183) (ite ($generated@@47 $generated@@183) 1 (let (($generated@@185 ($generated@@84 $generated@@183)))
(+ 1 ($generated@@55 $generated@@182 $generated@@185)))))))
 :pattern ( ($generated@@61 ($generated@@56 $generated@@182) $generated@@183))
))))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@51 $generated@@9 ($generated@@13 ($generated@@40 $generated@@186))) ($generated@@42 $generated@@116 ($generated@@51 $generated@@9 ($generated@@13 $generated@@186))))
 :pattern ( ($generated@@51 $generated@@9 ($generated@@13 ($generated@@40 $generated@@186))))
)))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@25 ($generated@@42 $generated@@57 $generated@@187)) ($generated@@42 $generated@@29 ($generated@@25 $generated@@187)))
 :pattern ( ($generated@@25 ($generated@@42 $generated@@57 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@T) ) (! (= ($generated@@51 $generated@@189 ($generated@@42 $generated@@189 $generated@@188)) ($generated@@42 $generated@@116 ($generated@@51 $generated@@189 $generated@@188)))
 :pattern ( ($generated@@51 $generated@@189 ($generated@@42 $generated@@189 $generated@@188)))
)))
(assert (forall (($generated@@190 T@U) ) (!  (=> (= ($generated@@26 $generated@@190) 0) (= $generated@@190 $generated@@32))
 :pattern ( ($generated@@26 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and ($generated@@172 $generated@@192) (and ($generated@@49 $generated@@191) ($generated@@71 $generated@@29 $generated@@191 $generated@@36 $generated@@192))) ($generated@@71 $generated@@57 ($generated@@84 $generated@@191) ($generated@@59 $generated@@36) $generated@@192))
 :pattern ( ($generated@@71 $generated@@57 ($generated@@84 $generated@@191) ($generated@@59 $generated@@36) $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! ($generated@@71 $generated@@9 $generated@@194 $generated $generated@@193)
 :pattern ( ($generated@@71 $generated@@9 $generated@@194 $generated $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (! (= ($generated@@35 $generated@@57 $generated@@195 ($generated@@59 $generated@@196)) (forall (($generated@@197 Int) ) (!  (=> (and (<= 0 $generated@@197) (< $generated@@197 ($generated@@26 $generated@@195))) ($generated@@81 ($generated@@24 $generated@@195 $generated@@197) $generated@@196))
 :pattern ( ($generated@@24 $generated@@195 $generated@@197))
)))
 :pattern ( ($generated@@35 $generated@@57 $generated@@195 ($generated@@59 $generated@@196)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 Int) ) (!  (=> (and (<= 0 $generated@@199) (< $generated@@199 ($generated@@26 $generated@@198))) (< ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@198 $generated@@199))) ($generated@@65 $generated@@198)))
 :pattern ( ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@198 $generated@@199))))
)))
(assert (forall (($generated@@200 T@U) ) (! ($generated@@35 $generated@@9 $generated@@200 $generated)
 :pattern ( ($generated@@35 $generated@@9 $generated@@200 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@208  (=> (or (not (= ($generated@@26 $generated@@201) ($generated@@40 0))) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (and (<= 0 ($generated@@40 0)) (< ($generated@@40 0) ($generated@@26 $generated@@201)))) (=> (and (<= 0 ($generated@@40 0)) (< ($generated@@40 0) ($generated@@26 $generated@@201))) (=> (and (= $generated@@202 ($generated@@28 $generated@@29 ($generated@@24 $generated@@201 ($generated@@40 0)))) ($generated@@71 $generated@@29 $generated@@202 $generated@@36 $generated@@203)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (< ($generated@@27 $generated@@202) ($generated@@65 $generated@@201))) (=> (< ($generated@@27 $generated@@202) ($generated@@65 $generated@@201)) (=> ($generated@@60 ($generated@@28 $generated@@29 ($generated@@24 $generated@@201 ($generated@@40 0)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 ($generated@@40 1)) (<= ($generated@@40 1) ($generated@@26 $generated@@201)))) (=> (and (<= 0 ($generated@@40 1)) (<= ($generated@@40 1) ($generated@@26 $generated@@201))) (=> (= $generated@@204 ($generated@@37 $generated@@201 ($generated@@40 1))) (=> (and ($generated@@71 $generated@@57 $generated@@204 ($generated@@59 $generated@@36) $generated@@203) (= (ControlFlow 0 4) (- 0 3))) (< ($generated@@65 $generated@@204) ($generated@@65 $generated@@201)))))))))))))))
(let (($generated@@209 true))
(let (($generated@@210 true))
(let (($generated@@211  (=> (= $generated@@205 ($generated@@114 $generated@@206 $generated@@203 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@210) (=> (= (ControlFlow 0 8) 2) $generated@@209)) (=> (= (ControlFlow 0 8) 4) $generated@@208)))))
(let (($generated@@212  (=> (and (and (and ($generated@@172 $generated@@203) ($generated@@207 $generated@@203)) ($generated@@35 $generated@@57 $generated@@201 ($generated@@59 $generated@@36))) (and (= 1 $generated@@54) (= (ControlFlow 0 9) 8))) $generated@@211)))
$generated@@212))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
