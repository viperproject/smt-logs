(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@69 (Int) Int)
(declare-fun $generated@@71 (Real) Real)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (Real) Bool)
(declare-fun $generated@@81 (Real) Bool)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@3) 0))
(assert (= ($generated@@27 $generated) $generated@@1))
(assert (= ($generated@@27 $generated@@0) $generated@@2))
(assert (= ($generated@@28 $generated@@3) $generated@@4))
(assert (= ($generated@@10 $generated@@30) 3))
(assert (forall (($generated@@34 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@34 $generated@@31)  (or (= $generated@@34 $generated@@32) (= ($generated@@33 $generated@@34) $generated@@31)))
 :pattern ( ($generated@@29 $generated@@30 $generated@@34 $generated@@31))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@35 $generated@@30 $generated@@37 $generated@@36 $generated@@38) ($generated@@35 $generated@@30 $generated@@37 $generated@@31 $generated@@38))
 :pattern ( ($generated@@35 $generated@@30 $generated@@37 $generated@@36 $generated@@38))
 :pattern ( ($generated@@35 $generated@@30 $generated@@37 $generated@@31 $generated@@38))
)))
(assert (= ($generated@@26 $generated@@39) 0))
(assert (= ($generated@@40 $generated@@7 $generated@@9) $generated@@39))
(assert  (not ($generated@@41 $generated@@39)))
(assert  (and (and (and (and (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@43 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@43 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@10 $generated@@44) 4)) (= ($generated@@10 $generated@@45) 5)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@10 ($generated@@46 $generated@@61 $generated@@62)) 6))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@46 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@46 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@35 $generated@@30 $generated@@67 $generated@@31 $generated@@68)  (or (= $generated@@67 $generated@@32) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@68 $generated@@67) $generated@@3)))))
 :pattern ( ($generated@@35 $generated@@30 $generated@@67 $generated@@31 $generated@@68))
)))
(assert (forall (($generated@@70 Int) ) (! (= ($generated@@69 $generated@@70) $generated@@70)
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 Real) ) (! (= ($generated@@71 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@42 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@42 $generated@@78 $generated@@77))
)))
(assert  (=> (<= 0 $generated@@79) (forall (($generated@@82 Real) ) (!  (=> (or ($generated@@81 $generated@@82) (< 0 $generated@@79)) (= ($generated@@80 $generated@@82) (= $generated@@82 ($generated@@71 3.14))))
 :pattern ( ($generated@@80 $generated@@82))
))))
(assert ($generated@@41 $generated@@3))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (and ($generated@@83 $generated@@84) (and (or (not (= $generated@@85 $generated@@32)) (not true)) (= ($generated@@33 $generated@@85) $generated@@31))) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@84 $generated@@85) $generated@@3)))) ($generated@@35 $generated@@12 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@84 $generated@@85) $generated@@39)) $generated $generated@@84))
 :pattern ( ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@84 $generated@@85) $generated@@39)))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@86 $generated@@36)  (and ($generated@@29 $generated@@30 $generated@@86 $generated@@31) (or (not (= $generated@@86 $generated@@32)) (not true))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@86 $generated@@36))
 :pattern ( ($generated@@29 $generated@@30 $generated@@86 $generated@@31))
)))
(assert  (=> (<= 0 $generated@@79) (forall (($generated@@87 Real) ) (!  (=> (or ($generated@@81 ($generated@@71 $generated@@87)) (< 0 $generated@@79)) (= ($generated@@80 ($generated@@71 $generated@@87)) (= ($generated@@71 $generated@@87) ($generated@@71 3.14))))
 :weight 3
 :pattern ( ($generated@@80 ($generated@@71 $generated@@87)))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (and (= ($generated@@88 ($generated@@40 $generated@@89 $generated@@90)) $generated@@89) (= ($generated@@28 ($generated@@40 $generated@@89 $generated@@90)) $generated@@90))
 :pattern ( ($generated@@40 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@42 $generated@@92 ($generated@@76 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@76 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (and ($generated@@83 $generated@@93) (and (or (not (= $generated@@94 $generated@@32)) (not true)) (= ($generated@@33 $generated@@94) $generated@@31))) ($generated@@29 $generated@@12 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@93 $generated@@94) $generated@@39)) $generated))
 :pattern ( ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@93 $generated@@94) $generated@@39)))
)))
(assert  (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@95 $generated@@98 $generated@@99 $generated@@100 ($generated@@97 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@104 $generated@@101) $generated@@103 $generated@@104) $generated@@101)
 :weight 0
)) (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@110 $generated@@112) (= ($generated@@95 $generated@@105 $generated@@106 $generated@@107 ($generated@@97 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@112 $generated@@113) ($generated@@95 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@112 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@120 $generated@@122) (= ($generated@@95 $generated@@114 $generated@@115 $generated@@116 ($generated@@97 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@95 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)))))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 Bool) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@15 ($generated@@95 $generated@@30 $generated@@44 $generated@@11 ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))  (=> (and (or (not (= $generated@@127 $generated@@123)) (not true)) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@124 $generated@@127) $generated@@125)))) $generated@@126))
 :pattern ( ($generated@@95 $generated@@30 $generated@@44 $generated@@11 ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))
)))
(assert (= ($generated@@27 $generated@@36) $generated@@5))
(assert (= ($generated@@129 $generated@@36) $generated@@8))
(assert (= ($generated@@27 $generated@@31) $generated@@6))
(assert (= ($generated@@129 $generated@@31) $generated@@8))
(assert (forall (($generated@@130 Int) ) (! (= ($generated@@76 $generated@@12 ($generated@@16 ($generated@@69 $generated@@130))) ($generated@@73 $generated@@45 ($generated@@76 $generated@@12 ($generated@@16 $generated@@130))))
 :pattern ( ($generated@@76 $generated@@12 ($generated@@16 ($generated@@69 $generated@@130))))
)))
(assert (forall (($generated@@131 Real) ) (! (= ($generated@@76 $generated@@13 ($generated@@18 ($generated@@71 $generated@@131))) ($generated@@73 $generated@@45 ($generated@@76 $generated@@13 ($generated@@18 $generated@@131))))
 :pattern ( ($generated@@76 $generated@@13 ($generated@@18 ($generated@@71 $generated@@131))))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@76 $generated@@133 ($generated@@73 $generated@@133 $generated@@132)) ($generated@@73 $generated@@45 ($generated@@76 $generated@@133 $generated@@132)))
 :pattern ( ($generated@@76 $generated@@133 ($generated@@73 $generated@@133 $generated@@132)))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! ($generated@@35 $generated@@12 $generated@@135 $generated $generated@@134)
 :pattern ( ($generated@@35 $generated@@12 $generated@@135 $generated $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! ($generated@@35 $generated@@13 $generated@@137 $generated@@0 $generated@@136)
 :pattern ( ($generated@@35 $generated@@13 $generated@@137 $generated@@0 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! ($generated@@29 $generated@@12 $generated@@138 $generated)
 :pattern ( ($generated@@29 $generated@@12 $generated@@138 $generated))
)))
(assert (forall (($generated@@139 T@U) ) (! ($generated@@29 $generated@@13 $generated@@139 $generated@@0)
 :pattern ( ($generated@@29 $generated@@13 $generated@@139 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@140 () Real)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () Bool)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Bool)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Bool)
(declare-fun $generated@@164 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@165 true))
(let (($generated@@166  (=> (and (and ($generated@@35 $generated@@13 ($generated@@18 $generated@@140) $generated@@0 $generated@@141) ($generated@@81 $generated@@140)) (and ($generated@@81 $generated@@140) (= (ControlFlow 0 2) (- 0 1)))) (or (and ($generated@@29 $generated@@13 ($generated@@18 ($generated@@71 0.0)) $generated@@0) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@14 ($generated@@80 ($generated@@71 0.0)))))) (exists (($generated@@167 Real) ) ($generated@@80 $generated@@167))))))
(let (($generated@@168  (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (and ($generated@@29 $generated@@30 $generated@@32 $generated@@36) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@14 false)))) (exists (($generated@@169 T@U) )  (and (and ($generated@@29 $generated@@30 $generated@@169 $generated@@36) ($generated@@35 $generated@@30 $generated@@169 $generated@@36 $generated@@141)) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@14 false))))))) (=> (or (and ($generated@@29 $generated@@30 $generated@@32 $generated@@36) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@14 false)))) (exists (($generated@@170 T@U) )  (and (and ($generated@@29 $generated@@30 $generated@@170 $generated@@36) ($generated@@35 $generated@@30 $generated@@170 $generated@@36 $generated@@141)) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@14 false)))))) (=> (and (=> true (and ($generated@@29 $generated@@30 $generated@@142 $generated@@36) ($generated@@35 $generated@@30 $generated@@142 $generated@@36 $generated@@141))) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@14 false)))) (and (=> (= (ControlFlow 0 4) 2) $generated@@166) (=> (= (ControlFlow 0 4) 3) $generated@@165)))))))
(let (($generated@@171  (=> (and (not (and ($generated@@29 $generated@@30 $generated@@143 $generated@@36) ($generated@@35 $generated@@30 $generated@@143 $generated@@36 $generated@@141))) (= (ControlFlow 0 7) 4)) $generated@@168)))
(let (($generated@@172  (=> (and (and ($generated@@29 $generated@@30 $generated@@143 $generated@@36) ($generated@@35 $generated@@30 $generated@@143 $generated@@36 $generated@@141)) (= (ControlFlow 0 6) 4)) $generated@@168)))
(let (($generated@@173  (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (and ($generated@@29 $generated@@30 $generated@@32 $generated@@36) (= $generated@@144 ($generated@@69 113))) (exists (($generated@@174 T@U) )  (and (and ($generated@@29 $generated@@30 $generated@@174 $generated@@36) ($generated@@35 $generated@@30 $generated@@174 $generated@@36 $generated@@141)) (= $generated@@144 ($generated@@69 113)))))) (=> (or (and ($generated@@29 $generated@@30 $generated@@32 $generated@@36) (= $generated@@144 ($generated@@69 113))) (exists (($generated@@175 T@U) )  (and (and ($generated@@29 $generated@@30 $generated@@175 $generated@@36) ($generated@@35 $generated@@30 $generated@@175 $generated@@36 $generated@@141)) (= $generated@@144 ($generated@@69 113))))) (=> (and (=> true (and ($generated@@29 $generated@@30 $generated@@145 $generated@@36) ($generated@@35 $generated@@30 $generated@@145 $generated@@36 $generated@@141))) (= $generated@@144 ($generated@@69 113))) (and (=> (= (ControlFlow 0 8) 6) $generated@@172) (=> (= (ControlFlow 0 8) 7) $generated@@171)))))))
(let (($generated@@176  (=> (and (not (and ($generated@@29 $generated@@30 $generated@@146 $generated@@36) ($generated@@35 $generated@@30 $generated@@146 $generated@@36 $generated@@141))) (= (ControlFlow 0 11) 8)) $generated@@173)))
(let (($generated@@177  (=> (and (and ($generated@@29 $generated@@30 $generated@@146 $generated@@36) ($generated@@35 $generated@@30 $generated@@146 $generated@@36 $generated@@141)) (= (ControlFlow 0 10) 8)) $generated@@173)))
(let (($generated@@178  (and (=> (= (ControlFlow 0 12) (- 0 13)) (or (and ($generated@@29 $generated@@30 $generated@@32 $generated@@36) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@14 true)))) (exists (($generated@@179 T@U) )  (and (and ($generated@@29 $generated@@30 $generated@@179 $generated@@36) ($generated@@35 $generated@@30 $generated@@179 $generated@@36 $generated@@141)) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@14 true))))))) (=> (or (and ($generated@@29 $generated@@30 $generated@@32 $generated@@36) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@14 true)))) (exists (($generated@@180 T@U) )  (and (and ($generated@@29 $generated@@30 $generated@@180 $generated@@36) ($generated@@35 $generated@@30 $generated@@180 $generated@@36 $generated@@141)) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@14 true)))))) (=> (=> true (and ($generated@@29 $generated@@30 $generated@@147 $generated@@36) ($generated@@35 $generated@@30 $generated@@147 $generated@@36 $generated@@141))) (and (=> (= (ControlFlow 0 12) 10) $generated@@177) (=> (= (ControlFlow 0 12) 11) $generated@@176)))))))
(let (($generated@@181  (=> (and (not (and ($generated@@29 $generated@@30 $generated@@148 $generated@@36) ($generated@@35 $generated@@30 $generated@@148 $generated@@36 $generated@@141))) (= (ControlFlow 0 15) 12)) $generated@@178)))
(let (($generated@@182  (=> (and (and ($generated@@29 $generated@@30 $generated@@148 $generated@@36) ($generated@@35 $generated@@30 $generated@@148 $generated@@36 $generated@@141)) (= (ControlFlow 0 14) 12)) $generated@@178)))
(let (($generated@@183  (and (=> (= (ControlFlow 0 16) (- 0 17)) (or (and ($generated@@29 $generated@@30 $generated@@32 $generated@@31) (or (= $generated@@32 $generated@@32) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@141 $generated@@32) $generated@@39))) ($generated@@69 8)))) (exists (($generated@@184 T@U) )  (and (and ($generated@@29 $generated@@30 $generated@@184 $generated@@31) ($generated@@35 $generated@@30 $generated@@184 $generated@@31 $generated@@141)) (or (= $generated@@184 $generated@@32) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@141 $generated@@184) $generated@@39))) ($generated@@69 8))))))) (=> (or (and ($generated@@29 $generated@@30 $generated@@32 $generated@@31) (or (= $generated@@32 $generated@@32) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@141 $generated@@32) $generated@@39))) ($generated@@69 8)))) (exists (($generated@@185 T@U) )  (and (and ($generated@@29 $generated@@30 $generated@@185 $generated@@31) ($generated@@35 $generated@@30 $generated@@185 $generated@@31 $generated@@141)) (or (= $generated@@185 $generated@@32) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@141 $generated@@185) $generated@@39))) ($generated@@69 8)))))) (=> (and (and ($generated@@29 $generated@@30 $generated@@149 $generated@@31) ($generated@@35 $generated@@30 $generated@@149 $generated@@31 $generated@@141)) (or (= $generated@@149 $generated@@32) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@141 $generated@@149) $generated@@39))) ($generated@@69 8)))) (and (=> (= (ControlFlow 0 16) 14) $generated@@182) (=> (= (ControlFlow 0 16) 15) $generated@@181)))))))
(let (($generated@@186  (=> (= (ControlFlow 0 19) 16) $generated@@183)))
(let (($generated@@187  (=> (and (= $generated@@150 $generated@@32) (= (ControlFlow 0 22) 19)) $generated@@186)))
(let (($generated@@188  (=> (or (not (= $generated@@150 $generated@@32)) (not true)) (and (=> (= (ControlFlow 0 20) (- 0 21)) (or (not (= $generated@@150 $generated@@32)) (not true))) (=> (= (ControlFlow 0 20) 19) $generated@@186)))))
(let (($generated@@189  (=> (and ($generated@@29 $generated@@30 $generated@@150 $generated@@31) ($generated@@35 $generated@@30 $generated@@150 $generated@@31 $generated@@141)) (and (=> (= (ControlFlow 0 23) 20) $generated@@188) (=> (= (ControlFlow 0 23) 22) $generated@@187)))))
(let (($generated@@190  (=> (and (not (and ($generated@@29 $generated@@30 $generated@@150 $generated@@31) ($generated@@35 $generated@@30 $generated@@150 $generated@@31 $generated@@141))) (= (ControlFlow 0 18) 16)) $generated@@183)))
(let (($generated@@191  (and (=> (= (ControlFlow 0 24) (- 0 25)) (or (and ($generated@@29 $generated@@30 $generated@@32 $generated@@36) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@141 $generated@@32) $generated@@39))) ($generated@@69 7))) (exists (($generated@@192 T@U) )  (and (and ($generated@@29 $generated@@30 $generated@@192 $generated@@36) ($generated@@35 $generated@@30 $generated@@192 $generated@@36 $generated@@141)) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@141 $generated@@192) $generated@@39))) ($generated@@69 7)))))) (=> (or (and ($generated@@29 $generated@@30 $generated@@32 $generated@@36) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@141 $generated@@32) $generated@@39))) ($generated@@69 7))) (exists (($generated@@193 T@U) )  (and (and ($generated@@29 $generated@@30 $generated@@193 $generated@@36) ($generated@@35 $generated@@30 $generated@@193 $generated@@36 $generated@@141)) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@141 $generated@@193) $generated@@39))) ($generated@@69 7))))) (=> (and (=> true (and ($generated@@29 $generated@@30 $generated@@151 $generated@@36) ($generated@@35 $generated@@30 $generated@@151 $generated@@36 $generated@@141))) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@141 $generated@@151) $generated@@39))) ($generated@@69 7))) (and (=> (= (ControlFlow 0 24) 23) $generated@@189) (=> (= (ControlFlow 0 24) 18) $generated@@190)))))))
(let (($generated@@194  (=> (and (not (and ($generated@@29 $generated@@30 $generated@@152 $generated@@36) ($generated@@35 $generated@@30 $generated@@152 $generated@@36 $generated@@141))) (= (ControlFlow 0 28) 24)) $generated@@191)))
(let (($generated@@195  (=> (and ($generated@@29 $generated@@30 $generated@@152 $generated@@36) ($generated@@35 $generated@@30 $generated@@152 $generated@@36 $generated@@141)) (and (=> (= (ControlFlow 0 26) (- 0 27)) (or (not (= $generated@@152 $generated@@32)) (not true))) (=> (= (ControlFlow 0 26) 24) $generated@@191)))))
(let (($generated@@196  (=> (= $generated@@153 ($generated@@96 $generated@@32 $generated@@141 $generated@@3 false)) (and (=> (= (ControlFlow 0 29) 26) $generated@@195) (=> (= (ControlFlow 0 29) 28) $generated@@194)))))
(let (($generated@@197  (=> (and ($generated@@83 $generated@@141) ($generated@@154 $generated@@141)) (=> (and (and ($generated@@29 $generated@@30 $generated@@155 $generated@@36) ($generated@@35 $generated@@30 $generated@@155 $generated@@36 $generated@@141)) (and (=> $generated@@156 (and ($generated@@29 $generated@@30 $generated@@157 $generated@@36) ($generated@@35 $generated@@30 $generated@@157 $generated@@36 $generated@@141))) true)) (=> (and (and (and (and ($generated@@29 $generated@@30 $generated@@158 $generated@@31) ($generated@@35 $generated@@30 $generated@@158 $generated@@31 $generated@@141)) true) (and (and (=> $generated@@159 (and ($generated@@29 $generated@@30 $generated@@160 $generated@@36) ($generated@@35 $generated@@30 $generated@@160 $generated@@36 $generated@@141))) true) (and (=> $generated@@161 (and ($generated@@29 $generated@@30 $generated@@162 $generated@@36) ($generated@@35 $generated@@30 $generated@@162 $generated@@36 $generated@@141))) true))) (and (and (and (=> $generated@@163 (and ($generated@@29 $generated@@30 $generated@@164 $generated@@36) ($generated@@35 $generated@@30 $generated@@164 $generated@@36 $generated@@141))) true) (= 1 $generated@@79)) (and (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@141 $generated@@155) $generated@@39))) ($generated@@69 7)) (= (ControlFlow 0 30) 29)))) $generated@@196)))))
$generated@@197)))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 8) (- 9))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
