(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U) Int)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (Int) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) Int)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T T@T) T@T)
(declare-fun $generated@@51 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@T T@U T@U) Bool)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U) Int)
(declare-fun $generated@@108 (T@U T@U T@U) Bool)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@130 (T@U) Int)
(declare-fun $generated@@131 (T@U) Bool)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@26) 3))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (or ($generated@@27 $generated@@30 ($generated@@25 $generated@@26 $generated@@31)) (and (< 0 $generated@@23) ($generated@@28 $generated@@31 $generated@@30))) (= ($generated@@24 $generated@@30 ($generated@@25 $generated@@26 $generated@@31)) ($generated@@29 57)))
 :weight 3
 :pattern ( ($generated@@24 $generated@@30 ($generated@@25 $generated@@26 $generated@@31)))
))))
(assert (= ($generated@@32 $generated) $generated@@1))
(assert (= ($generated@@32 $generated@@0) $generated@@2))
(assert (= ($generated@@7 $generated@@34) 4))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@38 ($generated@@35 $generated@@37) $generated@@39) ($generated@@33 $generated@@34 $generated@@38 ($generated@@36 $generated@@37) $generated@@39))
 :pattern ( ($generated@@33 $generated@@34 $generated@@38 ($generated@@35 $generated@@37) $generated@@39))
 :pattern ( ($generated@@33 $generated@@34 $generated@@38 ($generated@@36 $generated@@37) $generated@@39))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@41 $generated@@42 $generated@@43) (< 0 $generated@@23)) (= ($generated@@40 $generated@@42 $generated@@43) ($generated@@29 58)))
 :pattern ( ($generated@@40 $generated@@42 $generated@@43))
))))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (or ($generated@@41 $generated@@44 $generated@@45) (< 0 $generated@@23)) (= ($generated@@40 $generated@@44 $generated@@45) ($generated@@29 58)))
 :weight 3
 :pattern ( ($generated@@40 $generated@@44 $generated@@45))
))))
(assert  (and (and (and (and (and (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@48 $generated@@54 $generated@@55 ($generated@@51 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@58) $generated@@56)
 :weight 0
)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (or (= $generated@@63 $generated@@64) (= ($generated@@48 $generated@@59 $generated@@60 ($generated@@51 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@64) ($generated@@48 $generated@@59 $generated@@60 $generated@@62 $generated@@64)))
 :weight 0
))) (= ($generated@@7 $generated@@49) 5)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (= ($generated@@7 ($generated@@50 $generated@@65 $generated@@66)) 6))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@52 ($generated@@50 $generated@@67 $generated@@68)) $generated@@67)
 :pattern ( ($generated@@50 $generated@@67 $generated@@68))
))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@53 ($generated@@50 $generated@@69 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@50 $generated@@69 $generated@@70))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@72 ($generated@@36 $generated@@71) $generated@@73)  (or (= $generated@@72 $generated@@46) ($generated@@12 ($generated@@47 $generated@@8 ($generated@@48 $generated@@49 $generated@@26 ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@73 $generated@@72) $generated@@3)))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@72 ($generated@@36 $generated@@71) $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@74 $generated@@75 $generated@@76) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@12 ($generated@@47 $generated@@8 ($generated@@48 $generated@@49 $generated@@26 ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@75 $generated@@77) $generated@@3))) ($generated@@12 ($generated@@47 $generated@@8 ($generated@@48 $generated@@49 $generated@@26 ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@76 $generated@@77) $generated@@3))))
 :pattern ( ($generated@@48 $generated@@49 $generated@@26 ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@76 $generated@@77) $generated@@3))
)))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@29 $generated@@78) $generated@@78)
 :pattern ( ($generated@@29 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@25 $generated@@80 $generated@@79) $generated@@79)
 :pattern ( ($generated@@25 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@47 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@47 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@84 $generated@@34 $generated@@86 ($generated@@35 $generated@@85))  (and ($generated@@84 $generated@@34 $generated@@86 ($generated@@36 $generated@@85)) (or (not (= $generated@@86 $generated@@46)) (not true))))
 :pattern ( ($generated@@84 $generated@@34 $generated@@86 ($generated@@35 $generated@@85)))
 :pattern ( ($generated@@84 $generated@@34 $generated@@86 ($generated@@36 $generated@@85)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@87 ($generated@@81 $generated@@91 $generated@@88) $generated@@89 $generated@@90) ($generated@@33 $generated@@91 $generated@@88 $generated@@89 $generated@@90))
 :pattern ( ($generated@@87 ($generated@@81 $generated@@91 $generated@@88) $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> ($generated@@74 $generated@@92 $generated@@93) (=> ($generated@@87 $generated@@94 $generated@@95 $generated@@92) ($generated@@87 $generated@@94 $generated@@95 $generated@@93)))
 :pattern ( ($generated@@74 $generated@@92 $generated@@93) ($generated@@87 $generated@@94 $generated@@95 $generated@@92))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (!  (=> ($generated@@74 $generated@@96 $generated@@97) (=> ($generated@@33 $generated@@100 $generated@@98 $generated@@99 $generated@@96) ($generated@@33 $generated@@100 $generated@@98 $generated@@99 $generated@@97)))
 :pattern ( ($generated@@74 $generated@@96 $generated@@97) ($generated@@33 $generated@@100 $generated@@98 $generated@@99 $generated@@96))
)))
(assert (forall (($generated@@102 T@U) ) (!  (and (= ($generated@@32 ($generated@@35 $generated@@102)) $generated@@4) (= ($generated@@101 ($generated@@35 $generated@@102)) $generated@@6))
 :pattern ( ($generated@@35 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (and (= ($generated@@32 ($generated@@36 $generated@@103)) $generated@@5) (= ($generated@@101 ($generated@@36 $generated@@103)) $generated@@6))
 :pattern ( ($generated@@36 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@84 $generated@@34 $generated@@106 ($generated@@36 $generated@@105))  (or (= $generated@@106 $generated@@46) (= ($generated@@104 $generated@@106) ($generated@@36 $generated@@105))))
 :pattern ( ($generated@@84 $generated@@34 $generated@@106 ($generated@@36 $generated@@105)))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or ($generated@@108 $generated@@109 $generated@@110 $generated@@111) (and (< 0 $generated@@23) (and (or (not (= $generated@@111 $generated@@46)) (not true)) ($generated@@84 $generated@@34 $generated@@111 ($generated@@35 $generated@@109))))) (= ($generated@@107 $generated@@109 $generated@@110 $generated@@111) ($generated@@29 59)))
 :pattern ( ($generated@@107 $generated@@109 $generated@@110 $generated@@111))
))))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (or (not (= $generated@@112 $generated@@114)) (not true)) (=> (and ($generated@@74 $generated@@112 $generated@@113) ($generated@@74 $generated@@113 $generated@@114)) ($generated@@74 $generated@@112 $generated@@114)))
 :pattern ( ($generated@@74 $generated@@112 $generated@@113) ($generated@@74 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@28 $generated@@115 $generated@@0) (and (= ($generated@@81 $generated@@10 ($generated@@47 $generated@@10 $generated@@115)) $generated@@115) ($generated@@84 $generated@@10 ($generated@@47 $generated@@10 $generated@@115) $generated@@0)))
 :pattern ( ($generated@@28 $generated@@115 $generated@@0))
)))
(assert (= ($generated@@7 $generated@@116) 7))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@28 $generated@@117 $generated) (and (= ($generated@@81 $generated@@116 ($generated@@47 $generated@@116 $generated@@117)) $generated@@117) ($generated@@84 $generated@@116 ($generated@@47 $generated@@116 $generated@@117) $generated)))
 :pattern ( ($generated@@28 $generated@@117 $generated))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@28 ($generated@@81 $generated@@120 $generated@@118) $generated@@119) ($generated@@84 $generated@@120 $generated@@118 $generated@@119))
 :pattern ( ($generated@@28 ($generated@@81 $generated@@120 $generated@@118) $generated@@119))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (or ($generated@@108 $generated@@121 $generated@@122 ($generated@@25 $generated@@34 $generated@@123)) (and (< 0 $generated@@23) (and (or (not (= $generated@@123 $generated@@46)) (not true)) ($generated@@84 $generated@@34 $generated@@123 ($generated@@35 $generated@@121))))) (= ($generated@@107 $generated@@121 $generated@@122 ($generated@@25 $generated@@34 $generated@@123)) ($generated@@29 59)))
 :weight 3
 :pattern ( ($generated@@107 $generated@@121 $generated@@122 ($generated@@25 $generated@@34 $generated@@123)))
))))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@124 ($generated@@35 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@35 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@36 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@36 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@47 $generated@@129 ($generated@@81 $generated@@129 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@81 $generated@@129 $generated@@128))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@132 T@U) ) (!  (=> (or ($generated@@131 $generated@@132) (< 0 $generated@@23)) (= ($generated@@130 $generated@@132) ($generated@@29 56)))
 :pattern ( ($generated@@130 $generated@@132))
))))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@133 T@U) ) (!  (=> (or ($generated@@131 $generated@@133) (< 0 $generated@@23)) (= ($generated@@130 $generated@@133) ($generated@@29 56)))
 :weight 3
 :pattern ( ($generated@@130 $generated@@133))
))))
(assert  (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@134 $generated@@137 $generated@@138 $generated@@139 ($generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@142 $generated@@143) $generated@@140)
 :weight 0
)) (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@134 $generated@@144 $generated@@145 $generated@@146 ($generated@@136 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@134 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@134 $generated@@153 $generated@@154 $generated@@155 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@134 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Bool) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@12 ($generated@@134 $generated@@34 $generated@@49 $generated@@8 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@162)) (not true)) ($generated@@12 ($generated@@47 $generated@@8 ($generated@@48 $generated@@49 $generated@@26 ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@163 $generated@@166) $generated@@164)))) $generated@@165))
 :pattern ( ($generated@@134 $generated@@34 $generated@@49 $generated@@8 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@28 $generated@@169 ($generated@@35 $generated@@168)) (and (= ($generated@@81 $generated@@34 ($generated@@47 $generated@@34 $generated@@169)) $generated@@169) ($generated@@84 $generated@@34 ($generated@@47 $generated@@34 $generated@@169) ($generated@@35 $generated@@168))))
 :pattern ( ($generated@@28 $generated@@169 ($generated@@35 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@28 $generated@@171 ($generated@@36 $generated@@170)) (and (= ($generated@@81 $generated@@34 ($generated@@47 $generated@@34 $generated@@171)) $generated@@171) ($generated@@84 $generated@@34 ($generated@@47 $generated@@34 $generated@@171) ($generated@@36 $generated@@170))))
 :pattern ( ($generated@@28 $generated@@171 ($generated@@36 $generated@@170)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@172 ($generated@@51 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@173 $generated@@174 ($generated@@51 $generated@@49 $generated@@26 ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@173 $generated@@174) $generated@@175 $generated@@176))) ($generated@@74 $generated@@173 ($generated@@51 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@173 $generated@@174 ($generated@@51 $generated@@49 $generated@@26 ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@173 $generated@@174) $generated@@175 $generated@@176))))
 :pattern ( ($generated@@51 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@173 $generated@@174 ($generated@@51 $generated@@49 $generated@@26 ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@173 $generated@@174) $generated@@175 $generated@@176)))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (or ($generated@@27 $generated@@177 $generated@@178) (and (< 0 $generated@@23) ($generated@@28 $generated@@178 $generated@@177))) (= ($generated@@24 $generated@@177 $generated@@178) ($generated@@29 57)))
 :pattern ( ($generated@@24 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@81 $generated@@9 ($generated@@13 ($generated@@29 $generated@@179))) ($generated@@25 $generated@@26 ($generated@@81 $generated@@9 ($generated@@13 $generated@@179))))
 :pattern ( ($generated@@81 $generated@@9 ($generated@@13 ($generated@@29 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@81 $generated@@181 ($generated@@25 $generated@@181 $generated@@180)) ($generated@@25 $generated@@26 ($generated@@81 $generated@@181 $generated@@180)))
 :pattern ( ($generated@@81 $generated@@181 ($generated@@25 $generated@@181 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! ($generated@@33 $generated@@10 $generated@@183 $generated@@0 $generated@@182)
 :pattern ( ($generated@@33 $generated@@10 $generated@@183 $generated@@0 $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! ($generated@@33 $generated@@116 $generated@@185 $generated $generated@@184)
 :pattern ( ($generated@@33 $generated@@116 $generated@@185 $generated $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! ($generated@@84 $generated@@10 $generated@@186 $generated@@0)
 :pattern ( ($generated@@84 $generated@@10 $generated@@186 $generated@@0))
)))
(assert (forall (($generated@@187 T@U) ) (! ($generated@@84 $generated@@116 $generated@@187 $generated)
 :pattern ( ($generated@@84 $generated@@116 $generated@@187 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () Bool)
(declare-fun $generated@@204 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@205  (=> (and (= $generated@@188 ($generated@@135 $generated@@46 $generated@@189 $generated@@3 false)) ($generated@@131 $generated)) (=> (and (and (and (and ($generated@@131 $generated) (= $generated@@190 ($generated@@29 ($generated@@130 $generated)))) (and ($generated@@84 $generated@@116 $generated@@191 $generated) ($generated@@33 $generated@@116 $generated@@191 $generated $generated@@189))) (and (and ($generated@@27 $generated ($generated@@81 $generated@@116 $generated@@191)) ($generated@@27 $generated ($generated@@81 $generated@@116 $generated@@191))) (and (= $generated@@192 ($generated@@24 $generated ($generated@@81 $generated@@116 $generated@@191))) ($generated@@41 $generated $generated@@0)))) (and (and (and ($generated@@41 $generated $generated@@0) (= $generated@@193 ($generated@@29 ($generated@@40 $generated $generated@@0)))) (and (or (not (= $generated@@194 $generated@@46)) (not true)) ($generated@@84 $generated@@34 $generated@@194 ($generated@@36 $generated)))) (and (and (not ($generated@@12 ($generated@@47 $generated@@8 ($generated@@48 $generated@@49 $generated@@26 ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@189 $generated@@194) $generated@@3)))) (= $generated@@195 ($generated@@51 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@189 $generated@@194 ($generated@@51 $generated@@49 $generated@@26 ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@189 $generated@@194) $generated@@3 ($generated@@81 $generated@@8 ($generated@@11 true)))))) (and ($generated@@172 $generated@@195) ($generated@@196 $generated@@195))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@194 $generated@@46)) (not true))) (=> (or (not (= $generated@@194 $generated@@46)) (not true)) (=> (and (and ($generated@@87 ($generated@@81 $generated@@34 $generated@@194) ($generated@@36 $generated) $generated@@195) ($generated@@108 $generated $generated@@0 $generated@@194)) (and ($generated@@108 $generated $generated@@0 $generated@@194) (= $generated@@197 ($generated@@107 $generated $generated@@0 $generated@@194)))) (=> (and (and (and (and ($generated@@172 $generated@@198) ($generated@@196 $generated@@198)) (forall (($generated@@206 T@U) ) (!  (=> (and (or (not (= $generated@@206 $generated@@46)) (not true)) ($generated@@12 ($generated@@47 $generated@@8 ($generated@@48 $generated@@49 $generated@@26 ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@195 $generated@@206) $generated@@3)))) (= ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@198 $generated@@206) ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@195 $generated@@206)))
 :pattern ( ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@198 $generated@@206))
))) (and ($generated@@74 $generated@@195 $generated@@198) (= $generated@@199 ($generated@@81 $generated@@116 $generated@@191)))) (and (and (and ($generated@@172 $generated@@200) ($generated@@196 $generated@@200)) (and (forall (($generated@@207 T@U) ) (!  (=> (and (or (not (= $generated@@207 $generated@@46)) (not true)) ($generated@@12 ($generated@@47 $generated@@8 ($generated@@48 $generated@@49 $generated@@26 ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@198 $generated@@207) $generated@@3)))) (= ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@200 $generated@@207) ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@198 $generated@@207)))
 :pattern ( ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@200 $generated@@207))
)) ($generated@@74 $generated@@198 $generated@@200))) (and (and ($generated@@172 $generated@@201) ($generated@@196 $generated@@201)) (and (forall (($generated@@208 T@U) ) (!  (=> (and (or (not (= $generated@@208 $generated@@46)) (not true)) ($generated@@12 ($generated@@47 $generated@@8 ($generated@@48 $generated@@49 $generated@@26 ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@200 $generated@@208) $generated@@3)))) (= ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@201 $generated@@208) ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@200 $generated@@208)))
 :pattern ( ($generated@@48 $generated@@34 ($generated@@50 $generated@@49 $generated@@26) $generated@@201 $generated@@208))
)) ($generated@@74 $generated@@200 $generated@@201))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= $generated@@194 $generated@@46)) (not true)))))))))))))
(let (($generated@@209  (=> (and (and (and ($generated@@172 $generated@@189) ($generated@@196 $generated@@189)) (and ($generated@@84 $generated@@116 $generated@@202 $generated) true)) (and (and (=> $generated@@203 (and ($generated@@84 $generated@@34 $generated@@204 ($generated@@35 $generated)) ($generated@@33 $generated@@34 $generated@@204 ($generated@@35 $generated) $generated@@189))) true) (and (= 1 $generated@@23) (= (ControlFlow 0 6) 2)))) $generated@@205)))
$generated@@209)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
