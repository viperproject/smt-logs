(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U T@U) Bool)
(declare-fun $generated@@0 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@1 () T@T)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 (T@T T@T) T@T)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (T@T T@U) T@U)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@17 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@18 (T@T) T@T)
(declare-fun $generated@@19 (T@T) T@T)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@61 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@93 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@8) 0) (= ($generated@@9 $generated@@10) 1)) (= ($generated@@9 $generated@@11) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@6 ($generated@@12 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@12 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@12 ($generated@@6 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@6 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@13 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@14 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@15 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@16 $generated@@25))
))) (forall (($generated@@26 T@T) ($generated@@27 T@T) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@0 $generated@@26 $generated@@27 ($generated@@17 $generated@@26 $generated@@27 $generated@@29 $generated@@30 $generated@@28) $generated@@30) $generated@@28)
 :weight 0
))) (forall (($generated@@31 T@T) ($generated@@32 T@T) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (or (= $generated@@35 $generated@@36) (= ($generated@@0 $generated@@31 $generated@@32 ($generated@@17 $generated@@31 $generated@@32 $generated@@34 $generated@@35 $generated@@33) $generated@@36) ($generated@@0 $generated@@31 $generated@@32 $generated@@34 $generated@@36)))
 :weight 0
))) (= ($generated@@9 $generated@@1) 3)) (= ($generated@@9 $generated@@2) 4)) (= ($generated@@9 $generated@@3) 5)) (forall (($generated@@37 T@T) ($generated@@38 T@T) ) (= ($generated@@9 ($generated@@4 $generated@@37 $generated@@38)) 6))) (forall (($generated@@39 T@T) ($generated@@40 T@T) ) (! (= ($generated@@18 ($generated@@4 $generated@@39 $generated@@40)) $generated@@39)
 :pattern ( ($generated@@4 $generated@@39 $generated@@40))
))) (forall (($generated@@41 T@T) ($generated@@42 T@T) ) (! (= ($generated@@19 ($generated@@4 $generated@@41 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@4 $generated@@41 $generated@@42))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated $generated@@43 $generated@@44) (forall (($generated@@45 T@U) ) (!  (=> ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@43 $generated@@45) $generated@@5))) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@44 $generated@@45) $generated@@5))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@44 $generated@@45) $generated@@5))
)))
 :pattern ( ($generated $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@47 Int) ) (! (= ($generated@@46 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 ($generated@@7 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@7 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (or (not (= $generated@@54 $generated@@56)) (not true)) (=> (and ($generated $generated@@54 $generated@@55) ($generated $generated@@55 $generated@@56)) ($generated $generated@@54 $generated@@56)))
 :pattern ( ($generated $generated@@54 $generated@@55) ($generated $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@7 $generated@@58 ($generated@@51 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@51 $generated@@58 $generated@@57))
)))
(assert  (and (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@59 $generated@@62 $generated@@63 $generated@@64 ($generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@68 $generated@@65) $generated@@67 $generated@@68) $generated@@65)
 :weight 0
)) (and (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@74 $generated@@76) (= ($generated@@59 $generated@@69 $generated@@70 $generated@@71 ($generated@@61 $generated@@69 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@75 $generated@@72) $generated@@76 $generated@@77) ($generated@@59 $generated@@69 $generated@@70 $generated@@71 $generated@@73 $generated@@76 $generated@@77)))
 :weight 0
)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or (= $generated@@84 $generated@@86) (= ($generated@@59 $generated@@78 $generated@@79 $generated@@80 ($generated@@61 $generated@@78 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@84 $generated@@81) $generated@@85 $generated@@86) ($generated@@59 $generated@@78 $generated@@79 $generated@@80 $generated@@82 $generated@@85 $generated@@86)))
 :weight 0
)))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 Bool) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@6 ($generated@@59 $generated@@3 $generated@@1 $generated@@8 ($generated@@60 $generated@@87 $generated@@88 $generated@@89 $generated@@90) $generated@@91 $generated@@92))  (=> (and (or (not (= $generated@@91 $generated@@87)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@88 $generated@@91) $generated@@89)))) $generated@@90))
 :pattern ( ($generated@@59 $generated@@3 $generated@@1 $generated@@8 ($generated@@60 $generated@@87 $generated@@88 $generated@@89 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 Int) ($generated@@95 Int) ) (! (= ($generated@@93 $generated@@94 $generated@@95) (mod $generated@@94 $generated@@95))
 :pattern ( ($generated@@93 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 Int) ) (! (= ($generated@@51 $generated@@10 ($generated@@13 ($generated@@46 $generated@@96))) ($generated@@48 $generated@@2 ($generated@@51 $generated@@10 ($generated@@13 $generated@@96))))
 :pattern ( ($generated@@51 $generated@@10 ($generated@@13 ($generated@@46 $generated@@96))))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@51 $generated@@98 ($generated@@48 $generated@@98 $generated@@97)) ($generated@@48 $generated@@2 ($generated@@51 $generated@@98 $generated@@97)))
 :pattern ( ($generated@@51 $generated@@98 ($generated@@48 $generated@@98 $generated@@97)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@99 () Int)
(declare-fun $generated@@100 () Int)
(declare-fun $generated@@101 () Int)
(declare-fun $generated@@102 () Int)
(declare-fun $generated@@103 () Int)
(declare-fun $generated@@104 () Int)
(declare-fun $generated@@105 () Int)
(declare-fun $generated@@106 () Int)
(declare-fun $generated@@107 () Int)
(declare-fun $generated@@108 () Int)
(declare-fun $generated@@109 () Int)
(declare-fun $generated@@110 () Int)
(declare-fun $generated@@111 () Int)
(declare-fun $generated@@112 () Int)
(declare-fun $generated@@113 () Int)
(declare-fun $generated@@114 () Int)
(declare-fun $generated@@115 () Int)
(declare-fun $generated@@116 () Int)
(declare-fun $generated@@117 () Int)
(declare-fun $generated@@118 () Int)
(declare-fun $generated@@119 () Int)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 () Int)
(declare-fun $generated@@122 () Int)
(declare-fun $generated@@123 () Int)
(declare-fun $generated@@124 () Int)
(declare-fun $generated@@125 () Int)
(declare-fun $generated@@126 () Int)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 () Int)
(declare-fun $generated@@129 () Int)
(declare-fun $generated@@130 () Int)
(declare-fun $generated@@131 () Int)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 () Bool)
(declare-fun $generated@@134 () Bool)
(declare-fun $generated@@135 () Bool)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () Int)
(declare-fun $generated@@141 () Int)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 () Int)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 () Bool)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 86) (let (($generated@@158  (and (=> (= (ControlFlow 0 66) (- 0 67)) (or (<= 0 $generated@@99) (= (- 10000 $generated@@100) $generated@@99))) (=> (or (<= 0 $generated@@99) (= (- 10000 $generated@@100) $generated@@99)) (=> (= (ControlFlow 0 66) (- 0 65)) (< (- 10000 $generated@@100) $generated@@99))))))
(let (($generated@@159 true))
(let (($generated@@160 true))
(let (($generated@@161  (and (=> (= (ControlFlow 0 37) (- 0 39)) (or (or (or (<= $generated@@101 $generated@@102) (= $generated@@103 ($generated@@46 15))) (= $generated@@104 ($generated@@46 21))) (= $generated@@105 ($generated@@46 4)))) (=> (or (or (or (<= $generated@@101 $generated@@102) (= $generated@@103 ($generated@@46 15))) (= $generated@@104 ($generated@@46 21))) (= $generated@@105 ($generated@@46 4))) (=> (= $generated@@106 (+ $generated@@107 1)) (and (=> (= (ControlFlow 0 37) (- 0 38)) (or (<= 0 $generated@@108) (= (- $generated@@109 $generated@@106) $generated@@108))) (=> (or (<= 0 $generated@@108) (= (- $generated@@109 $generated@@106) $generated@@108)) (=> (= (ControlFlow 0 37) (- 0 36)) (< (- $generated@@109 $generated@@106) $generated@@108)))))))))
(let (($generated@@162  (=> (and (or (or (<= $generated@@101 $generated@@102) (= $generated@@103 ($generated@@46 15))) (= $generated@@104 ($generated@@46 21))) (= (ControlFlow 0 41) 37)) $generated@@161)))
(let (($generated@@163  (=> (and (not (or (or (<= $generated@@101 $generated@@102) (= $generated@@103 ($generated@@46 15))) (= $generated@@104 ($generated@@46 21)))) (= (ControlFlow 0 40) 37)) $generated@@161)))
(let (($generated@@164  (=> (or (<= $generated@@101 $generated@@102) (= $generated@@103 ($generated@@46 15))) (and (=> (= (ControlFlow 0 43) 40) $generated@@163) (=> (= (ControlFlow 0 43) 41) $generated@@162)))))
(let (($generated@@165  (=> (not (or (<= $generated@@101 $generated@@102) (= $generated@@103 ($generated@@46 15)))) (and (=> (= (ControlFlow 0 42) 40) $generated@@163) (=> (= (ControlFlow 0 42) 41) $generated@@162)))))
(let (($generated@@166  (=> (<= $generated@@101 $generated@@102) (and (=> (= (ControlFlow 0 45) 42) $generated@@165) (=> (= (ControlFlow 0 45) 43) $generated@@164)))))
(let (($generated@@167  (=> (< $generated@@102 $generated@@101) (and (=> (= (ControlFlow 0 44) 42) $generated@@165) (=> (= (ControlFlow 0 44) 43) $generated@@164)))))
(let (($generated@@168  (=> (and (and (= $generated@@110 ($generated@@46 4)) (= $generated@@104 $generated@@111)) (and (= $generated@@105 $generated@@110) (= $generated@@103 $generated@@112))) (and (=> (= (ControlFlow 0 49) 44) $generated@@167) (=> (= (ControlFlow 0 49) 45) $generated@@166)))))
(let (($generated@@169  (=> (and (and (= $generated@@113 ($generated@@46 21)) (= $generated@@104 $generated@@113)) (and (= $generated@@105 $generated@@114) (= $generated@@103 $generated@@112))) (and (=> (= (ControlFlow 0 48) 44) $generated@@167) (=> (= (ControlFlow 0 48) 45) $generated@@166)))))
(let (($generated@@170  (=> (and (and (= $generated@@115 ($generated@@46 15)) (= $generated@@104 $generated@@111)) (and (= $generated@@105 $generated@@114) (= $generated@@103 $generated@@115))) (and (=> (= (ControlFlow 0 47) 44) $generated@@167) (=> (= (ControlFlow 0 47) 45) $generated@@166)))))
(let (($generated@@171  (=> (and (and (<= $generated@@101 $generated@@102) (= $generated@@104 $generated@@111)) (and (= $generated@@105 $generated@@114) (= $generated@@103 $generated@@112))) (and (=> (= (ControlFlow 0 46) 44) $generated@@167) (=> (= (ControlFlow 0 46) 45) $generated@@166)))))
(let (($generated@@172  (=> (= (ControlFlow 0 26) (- 0 25)) (or (or (<= $generated@@109 $generated@@107) (= $generated@@116 ($generated@@46 12))) (= $generated@@117 ($generated@@46 37))))))
(let (($generated@@173  (=> (and (or (<= $generated@@109 $generated@@107) (= $generated@@116 ($generated@@46 12))) (= (ControlFlow 0 28) 26)) $generated@@172)))
(let (($generated@@174  (=> (and (not (or (<= $generated@@109 $generated@@107) (= $generated@@116 ($generated@@46 12)))) (= (ControlFlow 0 27) 26)) $generated@@172)))
(let (($generated@@175  (=> (<= $generated@@109 $generated@@107) (and (=> (= (ControlFlow 0 30) 27) $generated@@174) (=> (= (ControlFlow 0 30) 28) $generated@@173)))))
(let (($generated@@176  (=> (< $generated@@107 $generated@@109) (and (=> (= (ControlFlow 0 29) 27) $generated@@174) (=> (= (ControlFlow 0 29) 28) $generated@@173)))))
(let (($generated@@177  (=> (= $generated@@118 ($generated@@46 37)) (=> (and (= $generated@@116 $generated@@119) (= $generated@@117 $generated@@118)) (and (=> (= (ControlFlow 0 33) 29) $generated@@176) (=> (= (ControlFlow 0 33) 30) $generated@@175))))))
(let (($generated@@178  (=> (= $generated@@120 ($generated@@46 12)) (=> (and (= $generated@@116 $generated@@120) (= $generated@@117 $generated@@114)) (and (=> (= (ControlFlow 0 32) 29) $generated@@176) (=> (= (ControlFlow 0 32) 30) $generated@@175))))))
(let (($generated@@179  (=> (<= $generated@@109 $generated@@107) (=> (and (= $generated@@116 $generated@@119) (= $generated@@117 $generated@@121)) (and (=> (= (ControlFlow 0 31) 29) $generated@@176) (=> (= (ControlFlow 0 31) 30) $generated@@175))))))
(let (($generated@@180  (=> (= $generated@@122 (+ $generated@@123 1)) (and (=> (= (ControlFlow 0 23) (- 0 24)) (or (<= 0 $generated@@124) (= (- $generated@@125 $generated@@122) $generated@@124))) (=> (or (<= 0 $generated@@124) (= (- $generated@@125 $generated@@122) $generated@@124)) (=> (= (ControlFlow 0 23) (- 0 22)) (< (- $generated@@125 $generated@@122) $generated@@124)))))))
(let (($generated@@181  (and (=> (= (ControlFlow 0 34) 33) $generated@@177) (=> (= (ControlFlow 0 34) 23) $generated@@180))))
(let (($generated@@182  (and (=> (= (ControlFlow 0 8) (- 0 10)) (or (or (<= $generated@@125 $generated@@123) (= $generated@@126 ($generated@@46 187))) (= $generated@@127 ($generated@@46 7)))) (=> (or (or (<= $generated@@125 $generated@@123) (= $generated@@126 ($generated@@46 187))) (= $generated@@127 ($generated@@46 7))) (=> (= $generated@@128 (+ $generated@@102 1)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (<= 0 $generated@@129) (= (- $generated@@101 $generated@@128) $generated@@129))) (=> (or (<= 0 $generated@@129) (= (- $generated@@101 $generated@@128) $generated@@129)) (=> (= (ControlFlow 0 8) (- 0 7)) (< (- $generated@@101 $generated@@128) $generated@@129)))))))))
(let (($generated@@183  (=> (and (or (<= $generated@@125 $generated@@123) (= $generated@@126 ($generated@@46 187))) (= (ControlFlow 0 12) 8)) $generated@@182)))
(let (($generated@@184  (=> (and (not (or (<= $generated@@125 $generated@@123) (= $generated@@126 ($generated@@46 187)))) (= (ControlFlow 0 11) 8)) $generated@@182)))
(let (($generated@@185  (=> (<= $generated@@125 $generated@@123) (and (=> (= (ControlFlow 0 14) 11) $generated@@184) (=> (= (ControlFlow 0 14) 12) $generated@@183)))))
(let (($generated@@186  (=> (< $generated@@123 $generated@@125) (and (=> (= (ControlFlow 0 13) 11) $generated@@184) (=> (= (ControlFlow 0 13) 12) $generated@@183)))))
(let (($generated@@187  (=> (= $generated@@130 ($generated@@46 7)) (=> (and (= $generated@@127 $generated@@130) (= $generated@@126 $generated@@131)) (and (=> (= (ControlFlow 0 21) 13) $generated@@186) (=> (= (ControlFlow 0 21) 14) $generated@@185))))))
(let (($generated@@188  (and (=> (= (ControlFlow 0 35) 21) $generated@@187) (=> (= (ControlFlow 0 35) 34) $generated@@181))))
(let (($generated@@189  (=> (< $generated@@123 $generated@@125) (and (=> (= (ControlFlow 0 50) 49) $generated@@168) (=> (= (ControlFlow 0 50) 35) $generated@@188)))))
(let (($generated@@190  (=> (and (and (and (< $generated@@123 $generated@@125) (= ($generated@@93 $generated@@123 ($generated@@46 2)) ($generated@@46 0))) (= $generated@@132 ($generated@@46 187))) (and (= $generated@@127 $generated@@114) (= $generated@@126 $generated@@132))) (and (=> (= (ControlFlow 0 17) 13) $generated@@186) (=> (= (ControlFlow 0 17) 14) $generated@@185)))))
(let (($generated@@191  (=> (and (<= $generated@@125 $generated@@123) (= (ControlFlow 0 20) 17)) $generated@@190)))
(let (($generated@@192  (=> (< $generated@@123 $generated@@125) (and (=> (= (ControlFlow 0 18) (- 0 19)) (or (not (= ($generated@@46 2) 0)) (not true))) (=> (or (not (= ($generated@@46 2) 0)) (not true)) (=> (= (ControlFlow 0 18) 17) $generated@@190))))))
(let (($generated@@193  (=> (and (and (not (and (< $generated@@123 $generated@@125) (= ($generated@@93 $generated@@123 ($generated@@46 2)) ($generated@@46 0)))) (<= $generated@@125 $generated@@123)) (and (= $generated@@127 $generated@@114) (= $generated@@126 $generated@@131))) (and (=> (= (ControlFlow 0 16) 13) $generated@@186) (=> (= (ControlFlow 0 16) 14) $generated@@185)))))
(let (($generated@@194  (=> (and ($generated@@6 ($generated@@48 $generated@@8 ($generated@@12 true))) (= $generated@@124 (- $generated@@125 $generated@@123))) (and (and (and (=> (= (ControlFlow 0 51) 50) $generated@@189) (=> (= (ControlFlow 0 51) 16) $generated@@193)) (=> (= (ControlFlow 0 51) 18) $generated@@192)) (=> (= (ControlFlow 0 51) 20) $generated@@191)))))
(let (($generated@@195  (=> (not ($generated@@6 ($generated@@48 $generated@@8 ($generated@@12 true)))) (=> (and (= $generated@@127 $generated@@114) (= $generated@@126 $generated@@131)) (and (=> (= (ControlFlow 0 15) 13) $generated@@186) (=> (= (ControlFlow 0 15) 14) $generated@@185))))))
(let (($generated@@196  (=> $generated@@133 (and (=> (= (ControlFlow 0 52) 15) $generated@@195) (=> (= (ControlFlow 0 52) 51) $generated@@194)))))
(let (($generated@@197 true))
(let (($generated@@198  (and (=> (= (ControlFlow 0 53) 6) $generated@@197) (=> (= (ControlFlow 0 53) 52) $generated@@196))))
(let (($generated@@199 true))
(let (($generated@@200  (=> (and (and (and (and (and (and (and (not false) (<= 0 $generated@@107)) $generated@@134) (<= 0 $generated@@102)) $generated@@135) (= $generated@@136 1998)) (<= 0 $generated@@123)) (and (and (forall (($generated@@201 T@U) ) (!  (=> (and (or (not (= $generated@@201 $generated@@138)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@201) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@201) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@201)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@201))
)) ($generated $generated@@137 $generated@@137)) (and (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (or (not (= $generated@@202 $generated@@138)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@202) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@202) $generated@@203) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@202) $generated@@203)) ($generated@@6 ($generated@@59 $generated@@3 $generated@@1 $generated@@8 $generated@@139 $generated@@202 $generated@@203))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@202) $generated@@203))
)) (<= (- $generated@@125 $generated@@123) $generated@@140)))) (and (=> (= (ControlFlow 0 54) 5) $generated@@199) (=> (= (ControlFlow 0 54) 53) $generated@@198)))))
(let (($generated@@204  (and (=> (= (ControlFlow 0 55) (- 0 56)) (= $generated@@136 ($generated@@46 1998))) (=> (= $generated@@136 ($generated@@46 1998)) (=> (= $generated@@141 ($generated@@46 0)) (=> (and (= $generated@@140 (- $generated@@125 $generated@@141)) (= (ControlFlow 0 55) 54)) $generated@@200))))))
(let (($generated@@205  (=> (= $generated@@142 ($generated@@46 1998)) (=> (and (= $generated@@136 $generated@@142) (= (ControlFlow 0 64) 55)) $generated@@204))))
(let (($generated@@206  (and (=> (= (ControlFlow 0 68) 64) $generated@@205) (=> (= (ControlFlow 0 68) 66) $generated@@158))))
(let (($generated@@207  (=> (= $generated@@143 ($generated@@46 1998)) (=> (and (= $generated@@136 $generated@@143) (= (ControlFlow 0 63) 55)) $generated@@204))))
(let (($generated@@208  (=> (< $generated@@144 10000) (=> (and (= $generated@@99 (- 10000 $generated@@144)) (= $generated@@100 (+ $generated@@144 3))) (and (=> (= (ControlFlow 0 69) 63) $generated@@207) (=> (= (ControlFlow 0 69) 68) $generated@@206))))))
(let (($generated@@209  (=> (and (= $generated@@136 $generated@@145) (= (ControlFlow 0 57) 55)) $generated@@204)))
(let (($generated@@210  (=> (<= 10000 $generated@@144) (and (=> (= (ControlFlow 0 61) (- 0 62)) (<= ($generated@@46 10000) $generated@@144)) (=> (<= ($generated@@46 10000) $generated@@144) (=> (= $generated@@146 ($generated@@46 1998)) (=> (and (= $generated@@145 $generated@@146) (= (ControlFlow 0 61) 57)) $generated@@209)))))))
(let (($generated@@211  (=> $generated@@147 (and (=> (= (ControlFlow 0 70) 61) $generated@@210) (=> (= (ControlFlow 0 70) 69) $generated@@208)))))
(let (($generated@@212  (and (=> (= (ControlFlow 0 71) 60) $generated@@159) (=> (= (ControlFlow 0 71) 70) $generated@@211))))
(let (($generated@@213  (=> (and (and (and (and (and (and (and (not false) (<= 0 $generated@@107)) $generated@@134) (<= 0 $generated@@102)) $generated@@135) (<= 2000 $generated@@144)) (= $generated@@148 8000)) (and (and (forall (($generated@@214 T@U) ) (!  (=> (and (or (not (= $generated@@214 $generated@@138)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@214) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@214) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@214)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@214))
)) ($generated $generated@@137 $generated@@137)) (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (or (not (= $generated@@215 $generated@@138)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@215) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@215) $generated@@216) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@215) $generated@@216)) ($generated@@6 ($generated@@59 $generated@@3 $generated@@1 $generated@@8 $generated@@139 $generated@@215 $generated@@216))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@215) $generated@@216))
)) (<= (- 10000 $generated@@144) $generated@@148)))) (and (=> (= (ControlFlow 0 72) 59) $generated@@160) (=> (= (ControlFlow 0 72) 71) $generated@@212)))))
(let (($generated@@217  (=> (and (= $generated@@148 (- 10000 $generated@@149)) (= (ControlFlow 0 73) 72)) $generated@@213)))
(let (($generated@@218  (=> (= $generated@@150 (- $generated@@149 2)) (=> (and (= $generated@@145 $generated@@150) (= (ControlFlow 0 58) 57)) $generated@@209))))
(let (($generated@@219  (and (=> (= (ControlFlow 0 74) 73) $generated@@217) (=> (= (ControlFlow 0 74) 58) $generated@@218))))
(let (($generated@@220  (and (=> (= (ControlFlow 0 75) 48) $generated@@169) (=> (= (ControlFlow 0 75) 74) $generated@@219))))
(let (($generated@@221  (and (=> (= (ControlFlow 0 76) 32) $generated@@178) (=> (= (ControlFlow 0 76) 75) $generated@@220))))
(let (($generated@@222  (=> (< $generated@@102 $generated@@101) (=> (and (= $generated@@129 (- $generated@@101 $generated@@102)) (= $generated@@149 ($generated@@46 2000))) (and (=> (= (ControlFlow 0 77) 47) $generated@@170) (=> (= (ControlFlow 0 77) 76) $generated@@221))))))
(let (($generated@@223  (=> $generated@@135 (and (=> (= (ControlFlow 0 78) 46) $generated@@171) (=> (= (ControlFlow 0 78) 77) $generated@@222)))))
(let (($generated@@224 true))
(let (($generated@@225  (and (=> (= (ControlFlow 0 79) 4) $generated@@224) (=> (= (ControlFlow 0 79) 78) $generated@@223))))
(let (($generated@@226 true))
(let (($generated@@227  (=> (and (and (and (and (not false) (<= 0 $generated@@107)) $generated@@134) (<= 0 $generated@@102)) (and (and (forall (($generated@@228 T@U) ) (!  (=> (and (or (not (= $generated@@228 $generated@@138)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@228) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@228) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@228)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@228))
)) ($generated $generated@@137 $generated@@137)) (and (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (or (not (= $generated@@229 $generated@@138)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@229) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@229) $generated@@230) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@229) $generated@@230)) ($generated@@6 ($generated@@59 $generated@@3 $generated@@1 $generated@@8 $generated@@139 $generated@@229 $generated@@230))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@229) $generated@@230))
)) (<= (- $generated@@101 $generated@@102) $generated@@151)))) (and (=> (= (ControlFlow 0 80) 3) $generated@@226) (=> (= (ControlFlow 0 80) 79) $generated@@225)))))
(let (($generated@@231  (=> (< $generated@@107 $generated@@109) (=> (and (and (= $generated@@108 (- $generated@@109 $generated@@107)) (= $generated@@152 ($generated@@46 0))) (and (= $generated@@151 (- $generated@@101 $generated@@152)) (= (ControlFlow 0 81) 80))) $generated@@227))))
(let (($generated@@232  (=> $generated@@134 (and (=> (= (ControlFlow 0 82) 31) $generated@@179) (=> (= (ControlFlow 0 82) 81) $generated@@231)))))
(let (($generated@@233 true))
(let (($generated@@234  (and (=> (= (ControlFlow 0 83) 2) $generated@@233) (=> (= (ControlFlow 0 83) 82) $generated@@232))))
(let (($generated@@235 true))
(let (($generated@@236  (=> (and (not false) (<= 0 $generated@@107)) (=> (and (and (forall (($generated@@237 T@U) ) (!  (=> (and (or (not (= $generated@@237 $generated@@138)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@237) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@237) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@237)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@237))
)) ($generated $generated@@137 $generated@@137)) (and (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (or (not (= $generated@@238 $generated@@138)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@238) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@238) $generated@@239) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@238) $generated@@239)) ($generated@@6 ($generated@@59 $generated@@3 $generated@@1 $generated@@8 $generated@@139 $generated@@238 $generated@@239))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@137 $generated@@238) $generated@@239))
)) (<= (- $generated@@109 $generated@@107) $generated@@153))) (and (=> (= (ControlFlow 0 84) 1) $generated@@235) (=> (= (ControlFlow 0 84) 83) $generated@@234))))))
(let (($generated@@240  (=> (and (and (= $generated@@139 ($generated@@60 $generated@@138 $generated@@137 $generated@@5 false)) (= $generated@@154 ($generated@@46 0))) (and (= $generated@@153 (- $generated@@109 $generated@@154)) (= (ControlFlow 0 85) 84))) $generated@@236)))
(let (($generated@@241  (=> (and (and ($generated@@155 $generated@@137) ($generated@@156 $generated@@137)) (and (= 0 $generated@@157) (= (ControlFlow 0 86) 85))) $generated@@240)))
$generated@@241)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
