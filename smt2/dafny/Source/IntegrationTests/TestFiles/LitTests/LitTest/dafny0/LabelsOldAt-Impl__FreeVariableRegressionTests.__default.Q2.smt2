(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@81 (Int) Int)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated@@1) 0))
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (= ($generated@@29 $generated@@1) $generated@@2))
(assert (= ($generated@@11 $generated@@31) 3))
(assert (forall (($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@35 $generated@@32)  (or (= $generated@@35 $generated@@33) (= ($generated@@34 $generated@@35) $generated@@32)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@35 $generated@@32))
)))
(assert (forall (($generated@@37 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@37 $generated@@36)  (or (= $generated@@37 $generated@@33) (= ($generated@@34 $generated@@37) $generated@@36)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@37 $generated@@36))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@38 $generated@@31 $generated@@40 $generated@@39 $generated@@41) ($generated@@38 $generated@@31 $generated@@40 $generated@@32 $generated@@41))
 :pattern ( ($generated@@38 $generated@@31 $generated@@40 $generated@@39 $generated@@41))
 :pattern ( ($generated@@38 $generated@@31 $generated@@40 $generated@@32 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@38 $generated@@31 $generated@@43 $generated@@42 $generated@@44) ($generated@@38 $generated@@31 $generated@@43 $generated@@36 $generated@@44))
 :pattern ( ($generated@@38 $generated@@31 $generated@@43 $generated@@42 $generated@@44))
 :pattern ( ($generated@@38 $generated@@31 $generated@@43 $generated@@36 $generated@@44))
)))
(assert (= ($generated@@27 $generated@@45) 0))
(assert (= ($generated@@46 $generated@@5 $generated@@10) $generated@@45))
(assert  (not ($generated@@47 $generated@@45)))
(assert  (and (and (and (and (and (and (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@49 $generated@@56 $generated@@57 ($generated@@53 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@60) $generated@@58)
 :weight 0
)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (= $generated@@65 $generated@@66) (= ($generated@@49 $generated@@61 $generated@@62 ($generated@@53 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@66) ($generated@@49 $generated@@61 $generated@@62 $generated@@64 $generated@@66)))
 :weight 0
))) (= ($generated@@11 $generated@@50) 4)) (= ($generated@@11 $generated@@51) 5)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (= ($generated@@11 ($generated@@52 $generated@@67 $generated@@68)) 6))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@54 ($generated@@52 $generated@@69 $generated@@70)) $generated@@69)
 :pattern ( ($generated@@52 $generated@@69 $generated@@70))
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@52 $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@38 $generated@@31 $generated@@73 $generated@@32 $generated@@74)  (or (= $generated@@73 $generated@@33) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@74 $generated@@73) $generated@@1)))))
 :pattern ( ($generated@@38 $generated@@31 $generated@@73 $generated@@32 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@38 $generated@@31 $generated@@75 $generated@@36 $generated@@76)  (or (= $generated@@75 $generated@@33) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@76 $generated@@75) $generated@@1)))))
 :pattern ( ($generated@@38 $generated@@31 $generated@@75 $generated@@36 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> ($generated@@77 $generated@@78 $generated@@79) (forall (($generated@@80 T@U) ) (!  (=> ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@78 $generated@@80) $generated@@1))) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@79 $generated@@80) $generated@@1))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@79 $generated@@80) $generated@@1))
)))
 :pattern ( ($generated@@77 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@82 Int) ) (! (= ($generated@@81 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@86 $generated@@88 ($generated@@48 $generated@@88 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@48 $generated@@88 $generated@@87))
)))
(assert ($generated@@47 $generated@@1))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and ($generated@@89 $generated@@90) (and (or (not (= $generated@@91 $generated@@33)) (not true)) (= ($generated@@34 $generated@@91) $generated@@32))) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@90 $generated@@91) $generated@@1)))) ($generated@@38 $generated@@13 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@90 $generated@@91) $generated@@45)) $generated $generated@@90))
 :pattern ( ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@90 $generated@@91) $generated@@45)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (!  (=> ($generated@@77 $generated@@92 $generated@@93) (=> ($generated@@38 $generated@@96 $generated@@94 $generated@@95 $generated@@92) ($generated@@38 $generated@@96 $generated@@94 $generated@@95 $generated@@93)))
 :pattern ( ($generated@@77 $generated@@92 $generated@@93) ($generated@@38 $generated@@96 $generated@@94 $generated@@95 $generated@@92))
)))
(assert  (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@97 $generated@@100 $generated@@101 $generated@@102 ($generated@@99 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@105 $generated@@106) $generated@@103)
 :weight 0
)) (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@112 $generated@@114) (= ($generated@@97 $generated@@107 $generated@@108 $generated@@109 ($generated@@99 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@114 $generated@@115) ($generated@@97 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@114 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@97 $generated@@116 $generated@@117 $generated@@118 ($generated@@99 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@97 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@16 ($generated@@97 $generated@@31 $generated@@50 $generated@@12 ($generated@@98 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))  (=> (and (or (not (= $generated@@129 $generated@@125)) (not true)) ($generated@@16 ($generated@@48 $generated@@12 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@126 $generated@@129) $generated@@127)))) (= $generated@@129 $generated@@128)))
 :pattern ( ($generated@@97 $generated@@31 $generated@@50 $generated@@12 ($generated@@98 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@131 $generated@@39)  (and ($generated@@30 $generated@@31 $generated@@131 $generated@@32) (or (not (= $generated@@131 $generated@@33)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@131 $generated@@39))
 :pattern ( ($generated@@30 $generated@@31 $generated@@131 $generated@@32))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@132 $generated@@42)  (and ($generated@@30 $generated@@31 $generated@@132 $generated@@36) (or (not (= $generated@@132 $generated@@33)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@132 $generated@@42))
 :pattern ( ($generated@@30 $generated@@31 $generated@@132 $generated@@36))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (or (not (= $generated@@133 $generated@@135)) (not true)) (=> (and ($generated@@77 $generated@@133 $generated@@134) ($generated@@77 $generated@@134 $generated@@135)) ($generated@@77 $generated@@133 $generated@@135)))
 :pattern ( ($generated@@77 $generated@@133 $generated@@134) ($generated@@77 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (and (= ($generated@@136 ($generated@@46 $generated@@137 $generated@@138)) $generated@@137) (= ($generated@@29 ($generated@@46 $generated@@137 $generated@@138)) $generated@@138))
 :pattern ( ($generated@@46 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@T) ) (! (= ($generated@@48 $generated@@140 ($generated@@86 $generated@@140 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@86 $generated@@140 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and ($generated@@89 $generated@@141) (and (or (not (= $generated@@142 $generated@@33)) (not true)) (= ($generated@@34 $generated@@142) $generated@@32))) ($generated@@30 $generated@@13 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@141 $generated@@142) $generated@@45)) $generated))
 :pattern ( ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@141 $generated@@142) $generated@@45)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> ($generated@@89 ($generated@@53 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@143 $generated@@144 ($generated@@53 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@143 $generated@@144) $generated@@145 $generated@@146))) ($generated@@77 $generated@@143 ($generated@@53 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@143 $generated@@144 ($generated@@53 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@143 $generated@@144) $generated@@145 $generated@@146))))
 :pattern ( ($generated@@53 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@143 $generated@@144 ($generated@@53 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@143 $generated@@144) $generated@@145 $generated@@146)))
)))
(assert (= ($generated@@28 $generated@@39) $generated@@3))
(assert (= ($generated@@147 $generated@@39) $generated@@8))
(assert (= ($generated@@28 $generated@@42) $generated@@4))
(assert (= ($generated@@147 $generated@@42) $generated@@9))
(assert (= ($generated@@28 $generated@@32) $generated@@6))
(assert (= ($generated@@147 $generated@@32) $generated@@8))
(assert (= ($generated@@28 $generated@@36) $generated@@7))
(assert (= ($generated@@147 $generated@@36) $generated@@9))
(assert (forall (($generated@@148 Int) ) (! (= ($generated@@86 $generated@@13 ($generated@@17 ($generated@@81 $generated@@148))) ($generated@@83 $generated@@51 ($generated@@86 $generated@@13 ($generated@@17 $generated@@148))))
 :pattern ( ($generated@@86 $generated@@13 ($generated@@17 ($generated@@81 $generated@@148))))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@86 $generated@@150 ($generated@@83 $generated@@150 $generated@@149)) ($generated@@83 $generated@@51 ($generated@@86 $generated@@150 $generated@@149)))
 :pattern ( ($generated@@86 $generated@@150 ($generated@@83 $generated@@150 $generated@@149)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! ($generated@@38 $generated@@13 $generated@@152 $generated $generated@@151)
 :pattern ( ($generated@@38 $generated@@13 $generated@@152 $generated $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! ($generated@@30 $generated@@13 $generated@@153 $generated)
 :pattern ( ($generated@@30 $generated@@13 $generated@@153 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@165  (=> (= $generated@@154 ($generated@@98 $generated@@33 $generated@@155 $generated@@1 $generated@@156)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (not (= $generated@@156 $generated@@33)) (not true))) (=> (or (not (= $generated@@156 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@16 ($generated@@97 $generated@@31 $generated@@50 $generated@@12 $generated@@154 $generated@@156 $generated@@45))) (=> ($generated@@16 ($generated@@97 $generated@@31 $generated@@50 $generated@@12 $generated@@154 $generated@@156 $generated@@45)) (=> (and (and (= $generated@@157 ($generated@@81 8)) (= $generated@@158 ($generated@@53 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@155 $generated@@156 ($generated@@53 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@155 $generated@@156) $generated@@45 ($generated@@86 $generated@@13 ($generated@@17 $generated@@157)))))) (and ($generated@@89 $generated@@158) (= $generated@@159 $generated@@155))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@160 $generated@@33)) (not true))) (=> (or (not (= $generated@@160 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@38 $generated@@31 $generated@@160 $generated@@42 $generated@@155)) (=> ($generated@@38 $generated@@31 $generated@@160 $generated@@42 $generated@@155) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@38 $generated@@31 $generated@@156 $generated@@39 $generated@@155)) (=> ($generated@@38 $generated@@31 $generated@@156 $generated@@39 $generated@@155) (=> (and ($generated@@89 $generated@@161) ($generated@@162 $generated@@161)) (=> (and (and (= ($generated@@18 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@161 $generated@@156) $generated@@45))) ($generated@@81 8)) (= $generated@@159 $generated@@161)) (and (= $generated@@163 ($generated@@81 3)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@16 ($generated@@83 $generated@@12 ($generated@@15 false)))))))))))))))))))
(let (($generated@@166  (=> (and (and ($generated@@89 $generated@@155) ($generated@@162 $generated@@155)) (and ($generated@@30 $generated@@31 $generated@@156 $generated@@39) ($generated@@38 $generated@@31 $generated@@156 $generated@@39 $generated@@155))) (=> (and (and (and ($generated@@30 $generated@@31 $generated@@160 $generated@@42) ($generated@@38 $generated@@31 $generated@@160 $generated@@42 $generated@@155)) (= 2 $generated@@164)) (and (= ($generated@@18 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@155 $generated@@156) $generated@@45))) ($generated@@81 80)) (= (ControlFlow 0 8) 2))) $generated@@165))))
$generated@@166)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
