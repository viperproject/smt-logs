(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun TagSeq () T@U)
(declare-fun alloc () T@U)
(declare-fun Ctor (T@T) Int)
(declare-fun boolType () T@T)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun |Seq#Length| (T@U) Int)
(declare-fun |Seq#Empty| () T@U)
(declare-fun |Seq#Drop| (T@U Int) T@U)
(declare-fun |Seq#Build| (T@U T@U) T@U)
(declare-fun LitInt (Int) Int)
(declare-fun Lit (T@T T@U) T@U)
(declare-fun $Is (T@T T@U T@U) Bool)
(declare-fun SeqType () T@T)
(declare-fun TSeq (T@U) T@U)
(declare-fun $IsBox (T@U T@U) Bool)
(declare-fun |Seq#Index| (T@U Int) T@U)
(declare-fun |Seq#Take| (T@U Int) T@U)
(declare-fun $Unbox (T@T T@U) T@U)
(declare-fun $Box (T@T T@U) T@U)
(declare-fun $FunctionContextHeight () Int)
(declare-fun _module.__default.middle (T@U T@U) T@U)
(declare-fun |_module.__default.middle#canCall| (T@U T@U) Bool)
(declare-fun Mod (Int Int) Int)
(declare-fun Div (Int Int) Int)
(declare-fun $IsAllocBox (T@U T@U T@U) Bool)
(declare-fun $IsAlloc (T@T T@U T@U T@U) Bool)
(declare-fun Inv0_TSeq (T@U) T@U)
(declare-fun Tag (T@U) T@U)
(declare-fun MapType0Select (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun refType () T@T)
(declare-fun FieldType () T@T)
(declare-fun |lambda#0| (T@U T@U T@U Bool) T@U)
(declare-fun MapType1Select (T@T T@T T@U T@U) T@U)
(declare-fun BoxType () T@T)
(declare-fun MapType1Type (T@T T@T) T@T)
(declare-fun MapType0Store (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun MapType1Store (T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType1TypeInv0 (T@T) T@T)
(declare-fun MapType1TypeInv1 (T@T) T@T)
(declare-fun |Seq#Build_inv0| (T@U) T@U)
(declare-fun |Seq#Build_inv1| (T@U) T@U)
(declare-fun $IsGoodHeap (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (Ctor boolType) 0) (= (Ctor intType) 1)) (= (Ctor realType) 2)) (forall ((arg0 Bool) ) (! (= (U_2_bool (bool_2_U arg0)) arg0)
 :pattern ( (bool_2_U arg0))
))) (forall ((x T@U) ) (! (= (bool_2_U (U_2_bool x)) x)
 :pattern ( (U_2_bool x))
))) (forall ((arg0@@0 Int) ) (! (= (U_2_int (int_2_U arg0@@0)) arg0@@0)
 :pattern ( (int_2_U arg0@@0))
))) (forall ((x@@0 T@U) ) (! (= (int_2_U (U_2_int x@@0)) x@@0)
 :pattern ( (U_2_int x@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@1 T@U) ) (! (= (real_2_U (U_2_real x@@1)) x@@1)
 :pattern ( (U_2_real x@@1))
))))
(assert (distinct TagSeq alloc)
)
(assert (= (|Seq#Length| |Seq#Empty|) 0))
(assert (forall ((s T@U) (v T@U) (n Int) ) (!  (=> (and (<= 0 n) (<= n (|Seq#Length| s))) (= (|Seq#Drop| (|Seq#Build| s v) n) (|Seq#Build| (|Seq#Drop| s n) v)))
 :pattern ( (|Seq#Drop| (|Seq#Build| s v) n))
)))
(assert (forall ((s@@0 T@U) (n@@0 Int) ) (!  (=> (= n@@0 0) (= (|Seq#Drop| s@@0 n@@0) s@@0))
 :pattern ( (|Seq#Drop| s@@0 n@@0))
)))
(assert (forall ((x@@2 Int) ) (! (= (LitInt x@@2) x@@2)
 :pattern ( (LitInt x@@2))
)))
(assert (forall ((x@@3 T@U) (T T@T) ) (! (= (Lit T x@@3) x@@3)
 :pattern ( (Lit T x@@3))
)))
(assert (= (Ctor SeqType) 3))
(assert (forall ((s@@1 T@U) (bx T@U) (t T@U) ) (!  (=> (and ($Is SeqType s@@1 (TSeq t)) ($IsBox bx t)) ($Is SeqType (|Seq#Build| s@@1 bx) (TSeq t)))
 :pattern ( ($Is SeqType (|Seq#Build| s@@1 bx) (TSeq t)))
)))
(assert (forall ((s@@2 T@U) (n@@1 Int) (j Int) ) (!  (=> (and (and (<= 0 j) (< j n@@1)) (< j (|Seq#Length| s@@2))) (= (|Seq#Index| (|Seq#Take| s@@2 n@@1) j) (|Seq#Index| s@@2 j)))
 :weight 25
 :pattern ( (|Seq#Index| (|Seq#Take| s@@2 n@@1) j))
 :pattern ( (|Seq#Index| s@@2 j) (|Seq#Take| s@@2 n@@1))
)))
(assert (forall ((s@@3 T@U) (n@@2 Int) ) (!  (=> (and (<= 0 n@@2) (<= n@@2 (|Seq#Length| s@@3))) (= (|Seq#Length| (|Seq#Drop| s@@3 n@@2)) (- (|Seq#Length| s@@3) n@@2)))
 :pattern ( (|Seq#Length| (|Seq#Drop| s@@3 n@@2)))
)))
(assert (forall ((x@@4 T@U) (T@@0 T@T) ) (! (= ($Box T@@0 ($Unbox T@@0 x@@4)) x@@4)
 :pattern ( ($Unbox T@@0 x@@4))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((_module._default.middle$G T@U) (|s#0| T@U) ) (!  (=> (or (|_module.__default.middle#canCall| _module._default.middle$G (Lit SeqType |s#0|)) (and (< 0 $FunctionContextHeight) (and ($Is SeqType |s#0| (TSeq _module._default.middle$G)) (= (Mod (|Seq#Length| (Lit SeqType |s#0|)) (LitInt 2)) (LitInt 1))))) (= (_module.__default.middle _module._default.middle$G (Lit SeqType |s#0|)) (|Seq#Index| (Lit SeqType |s#0|) (Div (|Seq#Length| (Lit SeqType |s#0|)) (LitInt 2)))))
 :weight 3
 :pattern ( (_module.__default.middle _module._default.middle$G (Lit SeqType |s#0|)))
))))
(assert (forall ((s@@4 T@U) (v@@0 T@U) ) (! (= (|Seq#Length| (|Seq#Build| s@@4 v@@0)) (+ 1 (|Seq#Length| s@@4)))
 :pattern ( (|Seq#Build| s@@4 v@@0))
)))
(assert (forall ((v@@1 T@U) (t@@0 T@U) (h T@U) (T@@1 T@T) ) (! (= ($IsAllocBox ($Box T@@1 v@@1) t@@0 h) ($IsAlloc T@@1 v@@1 t@@0 h))
 :pattern ( ($IsAllocBox ($Box T@@1 v@@1) t@@0 h))
)))
(assert (forall ((s@@5 T@U) (n@@3 Int) (j@@0 Int) ) (!  (=> (and (and (<= 0 n@@3) (<= 0 j@@0)) (< j@@0 (- (|Seq#Length| s@@5) n@@3))) (= (|Seq#Index| (|Seq#Drop| s@@5 n@@3) j@@0) (|Seq#Index| s@@5 (+ j@@0 n@@3))))
 :weight 25
 :pattern ( (|Seq#Index| (|Seq#Drop| s@@5 n@@3) j@@0))
)))
(assert (forall ((s@@6 T@U) (i Int) (v@@2 T@U) ) (!  (and (=> (= i (|Seq#Length| s@@6)) (= (|Seq#Index| (|Seq#Build| s@@6 v@@2) i) v@@2)) (=> (or (not (= i (|Seq#Length| s@@6))) (not true)) (= (|Seq#Index| (|Seq#Build| s@@6 v@@2) i) (|Seq#Index| s@@6 i))))
 :pattern ( (|Seq#Index| (|Seq#Build| s@@6 v@@2) i))
)))
(assert (forall ((x@@5 Int) (y Int) ) (! (= (Div x@@5 y) (div x@@5 y))
 :pattern ( (Div x@@5 y))
)))
(assert (forall ((s@@7 T@U) (n@@4 Int) ) (!  (=> (and (<= 0 n@@4) (<= n@@4 (|Seq#Length| s@@7))) (= (|Seq#Length| (|Seq#Take| s@@7 n@@4)) n@@4))
 :pattern ( (|Seq#Length| (|Seq#Take| s@@7 n@@4)))
)))
(assert (forall ((v@@3 T@U) (t@@1 T@U) (T@@2 T@T) ) (! (= ($IsBox ($Box T@@2 v@@3) t@@1) ($Is T@@2 v@@3 t@@1))
 :pattern ( ($IsBox ($Box T@@2 v@@3) t@@1))
)))
(assert (forall ((s@@8 T@U) ) (! (<= 0 (|Seq#Length| s@@8))
 :pattern ( (|Seq#Length| s@@8))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((_module._default.middle$G@@0 T@U) (|s#0@@0| T@U) ) (!  (=> (or (|_module.__default.middle#canCall| _module._default.middle$G@@0 |s#0@@0|) (and (< 0 $FunctionContextHeight) (and ($Is SeqType |s#0@@0| (TSeq _module._default.middle$G@@0)) (= (Mod (|Seq#Length| |s#0@@0|) (LitInt 2)) (LitInt 1))))) (= (_module.__default.middle _module._default.middle$G@@0 |s#0@@0|) (|Seq#Index| |s#0@@0| (Div (|Seq#Length| |s#0@@0|) (LitInt 2)))))
 :pattern ( (_module.__default.middle _module._default.middle$G@@0 |s#0@@0|))
))))
(assert (forall ((v@@4 T@U) (t0 T@U) (h@@0 T@U) ) (! (= ($IsAlloc SeqType v@@4 (TSeq t0) h@@0) (forall ((i@@0 Int) ) (!  (=> (and (<= 0 i@@0) (< i@@0 (|Seq#Length| v@@4))) ($IsAllocBox (|Seq#Index| v@@4 i@@0) t0 h@@0))
 :pattern ( (|Seq#Index| v@@4 i@@0))
)))
 :pattern ( ($IsAlloc SeqType v@@4 (TSeq t0) h@@0))
)))
(assert (forall ((t@@2 T@U) ) (! (= (Inv0_TSeq (TSeq t@@2)) t@@2)
 :pattern ( (TSeq t@@2))
)))
(assert (forall ((t@@3 T@U) ) (! (= (Tag (TSeq t@@3)) TagSeq)
 :pattern ( (TSeq t@@3))
)))
(assert (forall ((x@@6 T@U) (T@@3 T@T) ) (! (= ($Unbox T@@3 ($Box T@@3 x@@6)) x@@6)
 :pattern ( ($Box T@@3 x@@6))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall ((t0@@0 T@T) (t1 T@T) (t2 T@T) (val T@U) (m T@U) (x0 T@U) (x1 T@U) ) (! (= (MapType0Select t0@@0 t1 t2 (MapType0Store t0@@0 t1 t2 m x0 x1 val) x0 x1) val)
 :weight 0
)) (and (forall ((u0 T@T) (u1 T@T) (u2 T@T) (val@@0 T@U) (m@@0 T@U) (x0@@0 T@U) (x1@@0 T@U) (y0 T@U) (y1 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select u0 u1 u2 (MapType0Store u0 u1 u2 m@@0 x0@@0 x1@@0 val@@0) y0 y1) (MapType0Select u0 u1 u2 m@@0 y0 y1)))
 :weight 0
)) (forall ((u0@@0 T@T) (u1@@0 T@T) (u2@@0 T@T) (val@@1 T@U) (m@@1 T@U) (x0@@1 T@U) (x1@@1 T@U) (y0@@0 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType0Select u0@@0 u1@@0 u2@@0 (MapType0Store u0@@0 u1@@0 u2@@0 m@@1 x0@@1 x1@@1 val@@1) y0@@0 y1@@0) (MapType0Select u0@@0 u1@@0 u2@@0 m@@1 y0@@0 y1@@0)))
 :weight 0
)))) (= (Ctor refType) 4)) (= (Ctor FieldType) 5)) (forall ((t0@@1 T@T) (t1@@0 T@T) (val@@2 T@U) (m@@2 T@U) (x0@@2 T@U) ) (! (= (MapType1Select t0@@1 t1@@0 (MapType1Store t0@@1 t1@@0 m@@2 x0@@2 val@@2) x0@@2) val@@2)
 :weight 0
))) (forall ((u0@@1 T@T) (u1@@1 T@T) (val@@3 T@U) (m@@3 T@U) (x0@@3 T@U) (y0@@1 T@U) ) (!  (or (= x0@@3 y0@@1) (= (MapType1Select u0@@1 u1@@1 (MapType1Store u0@@1 u1@@1 m@@3 x0@@3 val@@3) y0@@1) (MapType1Select u0@@1 u1@@1 m@@3 y0@@1)))
 :weight 0
))) (= (Ctor BoxType) 6)) (forall ((arg0@@2 T@T) (arg1 T@T) ) (= (Ctor (MapType1Type arg0@@2 arg1)) 7))) (forall ((arg0@@3 T@T) (arg1@@0 T@T) ) (! (= (MapType1TypeInv0 (MapType1Type arg0@@3 arg1@@0)) arg0@@3)
 :pattern ( (MapType1Type arg0@@3 arg1@@0))
))) (forall ((arg0@@4 T@T) (arg1@@1 T@T) ) (! (= (MapType1TypeInv1 (MapType1Type arg0@@4 arg1@@1)) arg1@@1)
 :pattern ( (MapType1Type arg0@@4 arg1@@1))
))))
(assert (forall ((|l#0| T@U) (|l#1| T@U) (|l#2| T@U) (|l#3| Bool) ($o T@U) ($f T@U) ) (! (= (U_2_bool (MapType0Select refType FieldType boolType (|lambda#0| |l#0| |l#1| |l#2| |l#3|) $o $f))  (=> (and (or (not (= $o |l#0|)) (not true)) (U_2_bool ($Unbox boolType (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) |l#1| $o) |l#2|)))) |l#3|))
 :pattern ( (MapType0Select refType FieldType boolType (|lambda#0| |l#0| |l#1| |l#2| |l#3|) $o $f))
)))
(assert (forall ((x@@7 Int) (y@@0 Int) ) (! (= (Mod x@@7 y@@0) (mod x@@7 y@@0))
 :pattern ( (Mod x@@7 y@@0))
)))
(assert (forall ((s@@9 T@U) (val@@4 T@U) ) (!  (and (= (|Seq#Build_inv0| (|Seq#Build| s@@9 val@@4)) s@@9) (= (|Seq#Build_inv1| (|Seq#Build| s@@9 val@@4)) val@@4))
 :pattern ( (|Seq#Build| s@@9 val@@4))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((_module._default.middle$G@@1 T@U) (|s#0@@1| T@U) ) (!  (=> (or (|_module.__default.middle#canCall| _module._default.middle$G@@1 |s#0@@1|) (and (< 0 $FunctionContextHeight) (and ($Is SeqType |s#0@@1| (TSeq _module._default.middle$G@@1)) (= (Mod (|Seq#Length| |s#0@@1|) (LitInt 2)) (LitInt 1))))) ($IsBox (_module.__default.middle _module._default.middle$G@@1 |s#0@@1|) _module._default.middle$G@@1))
 :pattern ( (_module.__default.middle _module._default.middle$G@@1 |s#0@@1|))
))))
(assert (forall ((bx@@0 T@U) (t@@4 T@U) ) (!  (=> ($IsBox bx@@0 (TSeq t@@4)) (and (= ($Box SeqType ($Unbox SeqType bx@@0)) bx@@0) ($Is SeqType ($Unbox SeqType bx@@0) (TSeq t@@4))))
 :pattern ( ($IsBox bx@@0 (TSeq t@@4)))
)))
(assert (forall ((s@@10 T@U) (n@@5 Int) (k Int) ) (!  (=> (and (and (<= 0 n@@5) (<= n@@5 k)) (< k (|Seq#Length| s@@10))) (= (|Seq#Index| (|Seq#Drop| s@@10 n@@5) (- k n@@5)) (|Seq#Index| s@@10 k)))
 :weight 25
 :pattern ( (|Seq#Index| s@@10 k) (|Seq#Drop| s@@10 n@@5))
)))
(assert (forall ((s@@11 T@U) (m@@4 Int) (n@@6 Int) ) (!  (=> (and (and (<= 0 m@@4) (<= 0 n@@6)) (<= (+ m@@4 n@@6) (|Seq#Length| s@@11))) (= (|Seq#Drop| (|Seq#Drop| s@@11 m@@4) n@@6) (|Seq#Drop| s@@11 (+ m@@4 n@@6))))
 :pattern ( (|Seq#Drop| (|Seq#Drop| s@@11 m@@4) n@@6))
)))
(assert (forall ((x@@8 Int) ) (! (= ($Box intType (int_2_U (LitInt x@@8))) (Lit BoxType ($Box intType (int_2_U x@@8))))
 :pattern ( ($Box intType (int_2_U (LitInt x@@8))))
)))
(assert (forall ((x@@9 T@U) (T@@4 T@T) ) (! (= ($Box T@@4 (Lit T@@4 x@@9)) (Lit BoxType ($Box T@@4 x@@9)))
 :pattern ( ($Box T@@4 (Lit T@@4 x@@9)))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($Heap T@U) (_module._default.middle$G@@2 T@U) (|s#0@@2| T@U) ) (!  (=> (and (or (|_module.__default.middle#canCall| _module._default.middle$G@@2 |s#0@@2|) (and (< 0 $FunctionContextHeight) (and (and ($Is SeqType |s#0@@2| (TSeq _module._default.middle$G@@2)) ($IsAlloc SeqType |s#0@@2| (TSeq _module._default.middle$G@@2) $Heap)) (= (Mod (|Seq#Length| |s#0@@2|) (LitInt 2)) (LitInt 1))))) ($IsGoodHeap $Heap)) ($IsAllocBox (_module.__default.middle _module._default.middle$G@@2 |s#0@@2|) _module._default.middle$G@@2 $Heap))
 :pattern ( ($IsAllocBox (_module.__default.middle _module._default.middle$G@@2 |s#0@@2|) _module._default.middle$G@@2 $Heap))
))))
(assert (forall ((s@@12 T@U) ) (!  (=> (= (|Seq#Length| s@@12) 0) (= s@@12 |Seq#Empty|))
 :pattern ( (|Seq#Length| s@@12))
)))
(assert (forall ((s@@13 T@U) (n@@7 Int) ) (!  (=> (= n@@7 0) (= (|Seq#Take| s@@13 n@@7) |Seq#Empty|))
 :pattern ( (|Seq#Take| s@@13 n@@7))
)))
(assert (forall ((v@@5 T@U) (t0@@2 T@U) ) (! (= ($Is SeqType v@@5 (TSeq t0@@2)) (forall ((i@@1 Int) ) (!  (=> (and (<= 0 i@@1) (< i@@1 (|Seq#Length| v@@5))) ($IsBox (|Seq#Index| v@@5 i@@1) t0@@2))
 :pattern ( (|Seq#Index| v@@5 i@@1))
)))
 :pattern ( ($Is SeqType v@@5 (TSeq t0@@2)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun |slices#0@3| () T@U)
(declare-fun _module._default.NumericSlice$T () T@U)
(declare-fun $Heap@@0 () T@U)
(declare-fun |y#0@0| () T@U)
(declare-fun |newtype$check#1_0@0| () Int)
(declare-fun |x#0| () T@U)
(declare-fun |newtype$check#1_1@0| () Int)
(declare-fun |newtype$check#1_2@0| () Int)
(declare-fun |newtype$check#1_3@0| () Int)
(declare-fun |newtype$check#1_4@0| () Int)
(declare-fun |newtype$check#1_5@0| () Int)
(declare-fun |newtype$check#1_6@0| () Int)
(declare-fun |newtype$check#1_7@0| () Int)
(declare-fun |newtype$check#1_8@0| () Int)
(declare-fun |newtype$check#1_9@0| () Int)
(declare-fun |newtype$check#1_10@0| () Int)
(declare-fun |newtype$check#1_11@0| () Int)
(declare-fun |newtype$check#1_12@0| () Int)
(declare-fun |newtype$check#1_13@0| () Int)
(declare-fun |newtype$check#1_14@0| () Int)
(declare-fun |newtype$check#1_15@0| () Int)
(declare-fun |newtype$check#1_16@0| () Int)
(declare-fun |newtype$check#1_17@0| () Int)
(declare-fun |newtype$check#1_18@0| () Int)
(declare-fun |newtype$check#1_19@0| () Int)
(declare-fun |newtype$check#1_20@0| () Int)
(declare-fun |newtype$check#1_21@0| () Int)
(declare-fun |newtype$check#1_22@0| () Int)
(declare-fun |newtype$check#1_23@0| () Int)
(declare-fun |newtype$check#1_24@0| () Int)
(declare-fun |newtype$check#1_25@0| () Int)
(declare-fun |newtype$check#1_26@0| () Int)
(declare-fun |newtype$check#1_27@0| () Int)
(declare-fun |newtype$check#1_28@0| () Int)
(declare-fun |newtype$check#1_29@0| () Int)
(declare-fun |newtype$check#1_30@0| () Int)
(declare-fun |newtype$check#1_31@0| () Int)
(declare-fun |newtype$check#1_32@0| () Int)
(declare-fun |newtype$check#1_33@0| () Int)
(declare-fun |newtype$check#1_34@0| () Int)
(declare-fun |newtype$check#1_35@0| () Int)
(declare-fun |newtype$check#1_36@0| () Int)
(declare-fun |newtype$check#1_37@0| () Int)
(declare-fun |newtype$check#1_38@0| () Int)
(declare-fun |newtype$check#1_39@0| () Int)
(declare-fun |two#0| () Int)
(declare-fun |newtype$check#1_40@0| () Int)
(declare-fun |newtype$check#1_41@0| () Int)
(declare-fun |newtype$check#1_42@0| () Int)
(declare-fun |newtype$check#1_43@0| () Int)
(declare-fun |newtype$check#1_44@0| () Int)
(declare-fun |newtype$check#1_45@0| () Int)
(declare-fun |newtype$check#1_46@0| () Int)
(declare-fun |newtype$check#1_47@0| () Int)
(declare-fun |newtype$check#1_48@0| () Int)
(declare-fun |newtype$check#1_49@0| () Int)
(declare-fun |newtype$check#1_50@0| () Int)
(declare-fun |newtype$check#1_51@0| () Int)
(declare-fun |newtype$check#1_52@0| () Int)
(declare-fun |newtype$check#1_53@0| () Int)
(declare-fun |newtype$check#1_54@0| () Int)
(declare-fun |newtype$check#1_55@0| () Int)
(declare-fun |newtype$check#1_56@0| () Int)
(declare-fun |newtype$check#1_57@0| () Int)
(declare-fun |newtype$check#1_58@0| () Int)
(declare-fun |newtype$check#1_59@0| () Int)
(declare-fun |newtype$check#1_60@0| () Int)
(declare-fun |newtype$check#1_61@0| () Int)
(declare-fun |newtype$check#1_62@0| () Int)
(declare-fun |newtype$check#1_63@0| () Int)
(declare-fun |newtype$check#1_64@0| () Int)
(declare-fun |newtype$check#1_65@0| () Int)
(declare-fun |newtype$check#1_66@0| () Int)
(declare-fun |newtype$check#1_67@0| () Int)
(declare-fun |newtype$check#1_68@0| () Int)
(declare-fun |newtype$check#1_69@0| () Int)
(declare-fun |newtype$check#1_70@0| () Int)
(declare-fun |newtype$check#1_71@0| () Int)
(declare-fun |newtype$check#1_72@0| () Int)
(declare-fun |newtype$check#1_73@0| () Int)
(declare-fun |newtype$check#1_74@0| () Int)
(declare-fun |newtype$check#1_75@0| () Int)
(declare-fun |newtype$check#1_76@0| () Int)
(declare-fun |slices#0@2| () T@U)
(declare-fun |newtype$check#0_0@0| () Int)
(declare-fun |newtype$check#0_1@0| () Int)
(declare-fun |newtype$check#0_2@0| () Int)
(declare-fun |newtype$check#0_3@0| () Int)
(declare-fun |newtype$check#0_4@0| () Int)
(declare-fun |newtype$check#0_5@0| () Int)
(declare-fun |newtype$check#0_6@0| () Int)
(declare-fun |newtype$check#0_7@0| () Int)
(declare-fun |newtype$check#0_8@0| () Int)
(declare-fun |newtype$check#0_9@0| () Int)
(declare-fun |newtype$check#0_10@0| () Int)
(declare-fun |newtype$check#0_11@0| () Int)
(declare-fun |newtype$check#0_12@0| () Int)
(declare-fun |newtype$check#0_13@0| () Int)
(declare-fun |newtype$check#0_14@0| () Int)
(declare-fun |newtype$check#0_15@0| () Int)
(declare-fun |newtype$check#0_16@0| () Int)
(declare-fun |newtype$check#0_17@0| () Int)
(declare-fun |newtype$check#0_18@0| () Int)
(declare-fun |newtype$check#0_19@0| () Int)
(declare-fun |newtype$check#0_20@0| () Int)
(declare-fun |newtype$check#0_21@0| () Int)
(declare-fun |newtype$check#0_22@0| () Int)
(declare-fun |newtype$check#0_23@0| () Int)
(declare-fun |newtype$check#0_24@0| () Int)
(declare-fun |newtype$check#0_25@0| () Int)
(declare-fun |slices#0@1| () T@U)
(declare-fun $_ModifiesFrame@0 () T@U)
(declare-fun null () T@U)
(declare-fun |slices#0@0| () T@U)
(declare-fun $IsHeapAnchor (T@U) Bool)
(declare-fun |y#0| () T@U)
(declare-fun |slices#0| () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 136) (let ((anon5_correct  (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (= (|Seq#Length| |slices#0@3|) (LitInt 5)) (= (|Seq#Length| |slices#0@3|) (LitInt 7)))) (=> (or (= (|Seq#Length| |slices#0@3|) (LitInt 5)) (= (|Seq#Length| |slices#0@3|) (LitInt 7))) (=> ($IsAlloc SeqType |slices#0@3| (TSeq (TSeq _module._default.NumericSlice$T)) $Heap@@0) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= (Mod (|Seq#Length| |slices#0@3|) (LitInt 2)) (LitInt 1))) (=> (= (Mod (|Seq#Length| |slices#0@3|) (LitInt 2)) (LitInt 1)) (=> (and (and (|_module.__default.middle#canCall| (TSeq _module._default.NumericSlice$T) |slices#0@3|) (|_module.__default.middle#canCall| (TSeq _module._default.NumericSlice$T) |slices#0@3|)) (and (= |y#0@0| ($Unbox SeqType (_module.__default.middle (TSeq _module._default.NumericSlice$T) |slices#0@3|))) (= (ControlFlow 0 2) (- 0 1)))) (= (|Seq#Length| |y#0@0|) (LitInt 3))))))))))
(let ((anon7_Else_correct  (=> (and (= (|Seq#Length| |slices#0@3|) (LitInt 5)) (= (ControlFlow 0 6) 2)) anon5_correct)))
(let ((anon7_Then_correct  (=> (and (or (not (= (|Seq#Length| |slices#0@3|) (LitInt 5))) (not true)) (= (ControlFlow 0 5) 2)) anon5_correct)))
(let ((anon6_Else_correct  (=> (= |newtype$check#1_0@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 134)) (and (<= (LitInt 0) |newtype$check#1_0@0|) (< |newtype$check#1_0@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_0@0|) (< |newtype$check#1_0@0| 100)) (and (=> (= (ControlFlow 0 42) (- 0 133)) (and (<= 0 (LitInt 1)) (<= (LitInt 1) (|Seq#Length| |x#0|)))) (=> (and (<= 0 (LitInt 1)) (<= (LitInt 1) (|Seq#Length| |x#0|))) (=> (= |newtype$check#1_1@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 132)) (and (<= (LitInt 0) |newtype$check#1_1@0|) (< |newtype$check#1_1@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_1@0|) (< |newtype$check#1_1@0| 100)) (and (=> (= (ControlFlow 0 42) (- 0 131)) (and (<= 0 (LitInt 1)) (<= (LitInt 1) (|Seq#Length| |x#0|)))) (=> (and (<= 0 (LitInt 1)) (<= (LitInt 1) (|Seq#Length| |x#0|))) (=> (= |newtype$check#1_2@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 130)) (and (<= (LitInt 0) |newtype$check#1_2@0|) (< |newtype$check#1_2@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_2@0|) (< |newtype$check#1_2@0| 100)) (=> (= |newtype$check#1_3@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 129)) (and (<= (LitInt 0) |newtype$check#1_3@0|) (< |newtype$check#1_3@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_3@0|) (< |newtype$check#1_3@0| 100)) (=> (= |newtype$check#1_4@0| (LitInt (+ 1 1))) (and (=> (= (ControlFlow 0 42) (- 0 128)) (and (<= (LitInt 0) |newtype$check#1_4@0|) (< |newtype$check#1_4@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_4@0|) (< |newtype$check#1_4@0| 100)) (and (=> (= (ControlFlow 0 42) (- 0 127)) (and (<= (LitInt 1) (LitInt (+ 1 1))) (<= (LitInt (+ 1 1)) (|Seq#Length| |x#0|)))) (=> (and (<= (LitInt 1) (LitInt (+ 1 1))) (<= (LitInt (+ 1 1)) (|Seq#Length| |x#0|))) (=> (= |newtype$check#1_5@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 126)) (and (<= (LitInt 0) |newtype$check#1_5@0|) (< |newtype$check#1_5@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_5@0|) (< |newtype$check#1_5@0| 100)) (=> (= |newtype$check#1_6@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 125)) (and (<= (LitInt 0) |newtype$check#1_6@0|) (< |newtype$check#1_6@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_6@0|) (< |newtype$check#1_6@0| 100)) (=> (= |newtype$check#1_7@0| (LitInt (+ 1 1))) (and (=> (= (ControlFlow 0 42) (- 0 124)) (and (<= (LitInt 0) |newtype$check#1_7@0|) (< |newtype$check#1_7@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_7@0|) (< |newtype$check#1_7@0| 100)) (and (=> (= (ControlFlow 0 42) (- 0 123)) (and (<= 0 (LitInt (+ 1 1))) (<= (LitInt (+ 1 1)) (|Seq#Length| |x#0|)))) (=> (and (<= 0 (LitInt (+ 1 1))) (<= (LitInt (+ 1 1)) (|Seq#Length| |x#0|))) (=> (= |newtype$check#1_8@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 122)) (and (<= (LitInt 0) |newtype$check#1_8@0|) (< |newtype$check#1_8@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_8@0|) (< |newtype$check#1_8@0| 100)) (=> (= |newtype$check#1_9@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 121)) (and (<= (LitInt 0) |newtype$check#1_9@0|) (< |newtype$check#1_9@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_9@0|) (< |newtype$check#1_9@0| 100)) (=> (= |newtype$check#1_10@0| (LitInt (+ 1 1))) (and (=> (= (ControlFlow 0 42) (- 0 120)) (and (<= (LitInt 0) |newtype$check#1_10@0|) (< |newtype$check#1_10@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_10@0|) (< |newtype$check#1_10@0| 100)) (=> (= |newtype$check#1_11@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 119)) (and (<= (LitInt 0) |newtype$check#1_11@0|) (< |newtype$check#1_11@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_11@0|) (< |newtype$check#1_11@0| 100)) (=> (= |newtype$check#1_12@0| (LitInt (+ (+ 1 1) 1))) (and (=> (= (ControlFlow 0 42) (- 0 118)) (and (<= (LitInt 0) |newtype$check#1_12@0|) (< |newtype$check#1_12@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_12@0|) (< |newtype$check#1_12@0| 100)) (and (=> (= (ControlFlow 0 42) (- 0 117)) (and (<= (LitInt (+ 1 1)) (LitInt (+ (+ 1 1) 1))) (<= (LitInt (+ (+ 1 1) 1)) (|Seq#Length| |x#0|)))) (=> (and (<= (LitInt (+ 1 1)) (LitInt (+ (+ 1 1) 1))) (<= (LitInt (+ (+ 1 1) 1)) (|Seq#Length| |x#0|))) (=> (= |newtype$check#1_13@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 116)) (and (<= (LitInt 0) |newtype$check#1_13@0|) (< |newtype$check#1_13@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_13@0|) (< |newtype$check#1_13@0| 100)) (=> (= |newtype$check#1_14@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 115)) (and (<= (LitInt 0) |newtype$check#1_14@0|) (< |newtype$check#1_14@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_14@0|) (< |newtype$check#1_14@0| 100)) (=> (= |newtype$check#1_15@0| (LitInt (+ 1 1))) (and (=> (= (ControlFlow 0 42) (- 0 114)) (and (<= (LitInt 0) |newtype$check#1_15@0|) (< |newtype$check#1_15@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_15@0|) (< |newtype$check#1_15@0| 100)) (=> (= |newtype$check#1_16@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 113)) (and (<= (LitInt 0) |newtype$check#1_16@0|) (< |newtype$check#1_16@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_16@0|) (< |newtype$check#1_16@0| 100)) (=> (= |newtype$check#1_17@0| (LitInt (+ (+ 1 1) 1))) (and (=> (= (ControlFlow 0 42) (- 0 112)) (and (<= (LitInt 0) |newtype$check#1_17@0|) (< |newtype$check#1_17@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_17@0|) (< |newtype$check#1_17@0| 100)) (and (=> (= (ControlFlow 0 42) (- 0 111)) (and (<= 0 (LitInt (+ (+ 1 1) 1))) (<= (LitInt (+ (+ 1 1) 1)) (|Seq#Length| |x#0|)))) (=> (and (<= 0 (LitInt (+ (+ 1 1) 1))) (<= (LitInt (+ (+ 1 1) 1)) (|Seq#Length| |x#0|))) (=> (= |newtype$check#1_18@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 110)) (and (<= (LitInt 0) |newtype$check#1_18@0|) (< |newtype$check#1_18@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_18@0|) (< |newtype$check#1_18@0| 100)) (=> (= |newtype$check#1_19@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 109)) (and (<= (LitInt 0) |newtype$check#1_19@0|) (< |newtype$check#1_19@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_19@0|) (< |newtype$check#1_19@0| 100)) (=> (= |newtype$check#1_20@0| (LitInt (+ 1 1))) (and (=> (= (ControlFlow 0 42) (- 0 108)) (and (<= (LitInt 0) |newtype$check#1_20@0|) (< |newtype$check#1_20@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_20@0|) (< |newtype$check#1_20@0| 100)) (=> (= |newtype$check#1_21@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 107)) (and (<= (LitInt 0) |newtype$check#1_21@0|) (< |newtype$check#1_21@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_21@0|) (< |newtype$check#1_21@0| 100)) (=> (= |newtype$check#1_22@0| (LitInt (+ (+ 1 1) 1))) (and (=> (= (ControlFlow 0 42) (- 0 106)) (and (<= (LitInt 0) |newtype$check#1_22@0|) (< |newtype$check#1_22@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_22@0|) (< |newtype$check#1_22@0| 100)) (=> (= |newtype$check#1_23@0| (LitInt 3)) (and (=> (= (ControlFlow 0 42) (- 0 105)) (and (<= (LitInt 0) |newtype$check#1_23@0|) (< |newtype$check#1_23@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_23@0|) (< |newtype$check#1_23@0| 100)) (=> (= |newtype$check#1_24@0| (LitInt (+ (+ (+ 1 1) 1) 3))) (and (=> (= (ControlFlow 0 42) (- 0 104)) (and (<= (LitInt 0) |newtype$check#1_24@0|) (< |newtype$check#1_24@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_24@0|) (< |newtype$check#1_24@0| 100)) (and (=> (= (ControlFlow 0 42) (- 0 103)) (and (<= (LitInt (+ (+ 1 1) 1)) (LitInt (+ (+ (+ 1 1) 1) 3))) (<= (LitInt (+ (+ (+ 1 1) 1) 3)) (|Seq#Length| |x#0|)))) (=> (and (<= (LitInt (+ (+ 1 1) 1)) (LitInt (+ (+ (+ 1 1) 1) 3))) (<= (LitInt (+ (+ (+ 1 1) 1) 3)) (|Seq#Length| |x#0|))) (=> (= |newtype$check#1_25@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 102)) (and (<= (LitInt 0) |newtype$check#1_25@0|) (< |newtype$check#1_25@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_25@0|) (< |newtype$check#1_25@0| 100)) (=> (= |newtype$check#1_26@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 101)) (and (<= (LitInt 0) |newtype$check#1_26@0|) (< |newtype$check#1_26@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_26@0|) (< |newtype$check#1_26@0| 100)) (=> (= |newtype$check#1_27@0| (LitInt (+ 1 1))) (and (=> (= (ControlFlow 0 42) (- 0 100)) (and (<= (LitInt 0) |newtype$check#1_27@0|) (< |newtype$check#1_27@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_27@0|) (< |newtype$check#1_27@0| 100)) (=> (= |newtype$check#1_28@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 99)) (and (<= (LitInt 0) |newtype$check#1_28@0|) (< |newtype$check#1_28@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_28@0|) (< |newtype$check#1_28@0| 100)) (=> (= |newtype$check#1_29@0| (LitInt (+ (+ 1 1) 1))) (and (=> (= (ControlFlow 0 42) (- 0 98)) (and (<= (LitInt 0) |newtype$check#1_29@0|) (< |newtype$check#1_29@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_29@0|) (< |newtype$check#1_29@0| 100)) (=> (= |newtype$check#1_30@0| (LitInt 3)) (and (=> (= (ControlFlow 0 42) (- 0 97)) (and (<= (LitInt 0) |newtype$check#1_30@0|) (< |newtype$check#1_30@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_30@0|) (< |newtype$check#1_30@0| 100)) (=> (= |newtype$check#1_31@0| (LitInt (+ (+ (+ 1 1) 1) 3))) (and (=> (= (ControlFlow 0 42) (- 0 96)) (and (<= (LitInt 0) |newtype$check#1_31@0|) (< |newtype$check#1_31@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_31@0|) (< |newtype$check#1_31@0| 100)) (and (=> (= (ControlFlow 0 42) (- 0 95)) (and (<= 0 (LitInt (+ (+ (+ 1 1) 1) 3))) (<= (LitInt (+ (+ (+ 1 1) 1) 3)) (|Seq#Length| |x#0|)))) (=> (and (<= 0 (LitInt (+ (+ (+ 1 1) 1) 3))) (<= (LitInt (+ (+ (+ 1 1) 1) 3)) (|Seq#Length| |x#0|))) (=> (= |newtype$check#1_32@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 94)) (and (<= (LitInt 0) |newtype$check#1_32@0|) (< |newtype$check#1_32@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_32@0|) (< |newtype$check#1_32@0| 100)) (=> (= |newtype$check#1_33@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 93)) (and (<= (LitInt 0) |newtype$check#1_33@0|) (< |newtype$check#1_33@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_33@0|) (< |newtype$check#1_33@0| 100)) (=> (= |newtype$check#1_34@0| (LitInt (+ 1 1))) (and (=> (= (ControlFlow 0 42) (- 0 92)) (and (<= (LitInt 0) |newtype$check#1_34@0|) (< |newtype$check#1_34@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_34@0|) (< |newtype$check#1_34@0| 100)) (=> (= |newtype$check#1_35@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 91)) (and (<= (LitInt 0) |newtype$check#1_35@0|) (< |newtype$check#1_35@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_35@0|) (< |newtype$check#1_35@0| 100)) (=> (= |newtype$check#1_36@0| (LitInt (+ (+ 1 1) 1))) (and (=> (= (ControlFlow 0 42) (- 0 90)) (and (<= (LitInt 0) |newtype$check#1_36@0|) (< |newtype$check#1_36@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_36@0|) (< |newtype$check#1_36@0| 100)) (=> (= |newtype$check#1_37@0| (LitInt 3)) (and (=> (= (ControlFlow 0 42) (- 0 89)) (and (<= (LitInt 0) |newtype$check#1_37@0|) (< |newtype$check#1_37@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_37@0|) (< |newtype$check#1_37@0| 100)) (=> (= |newtype$check#1_38@0| (LitInt (+ (+ (+ 1 1) 1) 3))) (and (=> (= (ControlFlow 0 42) (- 0 88)) (and (<= (LitInt 0) |newtype$check#1_38@0|) (< |newtype$check#1_38@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_38@0|) (< |newtype$check#1_38@0| 100)) (=> (= |newtype$check#1_39@0| (+ (+ (+ (+ 1 1) 1) 3) |two#0|)) (and (=> (= (ControlFlow 0 42) (- 0 87)) (and (<= (LitInt 0) |newtype$check#1_39@0|) (< |newtype$check#1_39@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_39@0|) (< |newtype$check#1_39@0| 100)) (and (=> (= (ControlFlow 0 42) (- 0 86)) (and (<= (LitInt (+ (+ (+ 1 1) 1) 3)) (+ (+ (+ (+ 1 1) 1) 3) |two#0|)) (<= (+ (+ (+ (+ 1 1) 1) 3) |two#0|) (|Seq#Length| |x#0|)))) (=> (and (<= (LitInt (+ (+ (+ 1 1) 1) 3)) (+ (+ (+ (+ 1 1) 1) 3) |two#0|)) (<= (+ (+ (+ (+ 1 1) 1) 3) |two#0|) (|Seq#Length| |x#0|))) (=> (= |newtype$check#1_40@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 85)) (and (<= (LitInt 0) |newtype$check#1_40@0|) (< |newtype$check#1_40@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_40@0|) (< |newtype$check#1_40@0| 100)) (=> (= |newtype$check#1_41@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 84)) (and (<= (LitInt 0) |newtype$check#1_41@0|) (< |newtype$check#1_41@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_41@0|) (< |newtype$check#1_41@0| 100)) (=> (= |newtype$check#1_42@0| (LitInt (+ 1 1))) (and (=> (= (ControlFlow 0 42) (- 0 83)) (and (<= (LitInt 0) |newtype$check#1_42@0|) (< |newtype$check#1_42@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_42@0|) (< |newtype$check#1_42@0| 100)) (=> (= |newtype$check#1_43@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 82)) (and (<= (LitInt 0) |newtype$check#1_43@0|) (< |newtype$check#1_43@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_43@0|) (< |newtype$check#1_43@0| 100)) (=> (= |newtype$check#1_44@0| (LitInt (+ (+ 1 1) 1))) (and (=> (= (ControlFlow 0 42) (- 0 81)) (and (<= (LitInt 0) |newtype$check#1_44@0|) (< |newtype$check#1_44@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_44@0|) (< |newtype$check#1_44@0| 100)) (=> (= |newtype$check#1_45@0| (LitInt 3)) (and (=> (= (ControlFlow 0 42) (- 0 80)) (and (<= (LitInt 0) |newtype$check#1_45@0|) (< |newtype$check#1_45@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_45@0|) (< |newtype$check#1_45@0| 100)) (=> (= |newtype$check#1_46@0| (LitInt (+ (+ (+ 1 1) 1) 3))) (and (=> (= (ControlFlow 0 42) (- 0 79)) (and (<= (LitInt 0) |newtype$check#1_46@0|) (< |newtype$check#1_46@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_46@0|) (< |newtype$check#1_46@0| 100)) (=> (= |newtype$check#1_47@0| (+ (+ (+ (+ 1 1) 1) 3) |two#0|)) (and (=> (= (ControlFlow 0 42) (- 0 78)) (and (<= (LitInt 0) |newtype$check#1_47@0|) (< |newtype$check#1_47@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_47@0|) (< |newtype$check#1_47@0| 100)) (and (=> (= (ControlFlow 0 42) (- 0 77)) (and (<= 0 (+ (+ (+ (+ 1 1) 1) 3) |two#0|)) (<= (+ (+ (+ (+ 1 1) 1) 3) |two#0|) (|Seq#Length| |x#0|)))) (=> (and (<= 0 (+ (+ (+ (+ 1 1) 1) 3) |two#0|)) (<= (+ (+ (+ (+ 1 1) 1) 3) |two#0|) (|Seq#Length| |x#0|))) (=> (= |newtype$check#1_48@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 76)) (and (<= (LitInt 0) |newtype$check#1_48@0|) (< |newtype$check#1_48@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_48@0|) (< |newtype$check#1_48@0| 100)) (=> (= |newtype$check#1_49@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 75)) (and (<= (LitInt 0) |newtype$check#1_49@0|) (< |newtype$check#1_49@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_49@0|) (< |newtype$check#1_49@0| 100)) (=> (= |newtype$check#1_50@0| (LitInt (+ 1 1))) (and (=> (= (ControlFlow 0 42) (- 0 74)) (and (<= (LitInt 0) |newtype$check#1_50@0|) (< |newtype$check#1_50@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_50@0|) (< |newtype$check#1_50@0| 100)) (=> (= |newtype$check#1_51@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 73)) (and (<= (LitInt 0) |newtype$check#1_51@0|) (< |newtype$check#1_51@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_51@0|) (< |newtype$check#1_51@0| 100)) (=> (= |newtype$check#1_52@0| (LitInt (+ (+ 1 1) 1))) (and (=> (= (ControlFlow 0 42) (- 0 72)) (and (<= (LitInt 0) |newtype$check#1_52@0|) (< |newtype$check#1_52@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_52@0|) (< |newtype$check#1_52@0| 100)) (=> (= |newtype$check#1_53@0| (LitInt 3)) (and (=> (= (ControlFlow 0 42) (- 0 71)) (and (<= (LitInt 0) |newtype$check#1_53@0|) (< |newtype$check#1_53@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_53@0|) (< |newtype$check#1_53@0| 100)) (=> (= |newtype$check#1_54@0| (LitInt (+ (+ (+ 1 1) 1) 3))) (and (=> (= (ControlFlow 0 42) (- 0 70)) (and (<= (LitInt 0) |newtype$check#1_54@0|) (< |newtype$check#1_54@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_54@0|) (< |newtype$check#1_54@0| 100)) (=> (= |newtype$check#1_55@0| (+ (+ (+ (+ 1 1) 1) 3) |two#0|)) (and (=> (= (ControlFlow 0 42) (- 0 69)) (and (<= (LitInt 0) |newtype$check#1_55@0|) (< |newtype$check#1_55@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_55@0|) (< |newtype$check#1_55@0| 100)) (=> (= |newtype$check#1_56@0| (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|)) (and (=> (= (ControlFlow 0 42) (- 0 68)) (and (<= (LitInt 0) |newtype$check#1_56@0|) (< |newtype$check#1_56@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_56@0|) (< |newtype$check#1_56@0| 100)) (and (=> (= (ControlFlow 0 42) (- 0 67)) (and (<= (+ (+ (+ (+ 1 1) 1) 3) |two#0|) (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|)) (<= (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|) (|Seq#Length| |x#0|)))) (=> (and (<= (+ (+ (+ (+ 1 1) 1) 3) |two#0|) (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|)) (<= (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|) (|Seq#Length| |x#0|))) (=> (= |newtype$check#1_57@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 66)) (and (<= (LitInt 0) |newtype$check#1_57@0|) (< |newtype$check#1_57@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_57@0|) (< |newtype$check#1_57@0| 100)) (=> (= |newtype$check#1_58@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 65)) (and (<= (LitInt 0) |newtype$check#1_58@0|) (< |newtype$check#1_58@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_58@0|) (< |newtype$check#1_58@0| 100)) (=> (= |newtype$check#1_59@0| (LitInt (+ 1 1))) (and (=> (= (ControlFlow 0 42) (- 0 64)) (and (<= (LitInt 0) |newtype$check#1_59@0|) (< |newtype$check#1_59@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_59@0|) (< |newtype$check#1_59@0| 100)) (=> (= |newtype$check#1_60@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 63)) (and (<= (LitInt 0) |newtype$check#1_60@0|) (< |newtype$check#1_60@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_60@0|) (< |newtype$check#1_60@0| 100)) (=> (= |newtype$check#1_61@0| (LitInt (+ (+ 1 1) 1))) (and (=> (= (ControlFlow 0 42) (- 0 62)) (and (<= (LitInt 0) |newtype$check#1_61@0|) (< |newtype$check#1_61@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_61@0|) (< |newtype$check#1_61@0| 100)) (=> (= |newtype$check#1_62@0| (LitInt 3)) (and (=> (= (ControlFlow 0 42) (- 0 61)) (and (<= (LitInt 0) |newtype$check#1_62@0|) (< |newtype$check#1_62@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_62@0|) (< |newtype$check#1_62@0| 100)) (=> (= |newtype$check#1_63@0| (LitInt (+ (+ (+ 1 1) 1) 3))) (and (=> (= (ControlFlow 0 42) (- 0 60)) (and (<= (LitInt 0) |newtype$check#1_63@0|) (< |newtype$check#1_63@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_63@0|) (< |newtype$check#1_63@0| 100)) (=> (= |newtype$check#1_64@0| (+ (+ (+ (+ 1 1) 1) 3) |two#0|)) (and (=> (= (ControlFlow 0 42) (- 0 59)) (and (<= (LitInt 0) |newtype$check#1_64@0|) (< |newtype$check#1_64@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_64@0|) (< |newtype$check#1_64@0| 100)) (=> (= |newtype$check#1_65@0| (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|)) (and (=> (= (ControlFlow 0 42) (- 0 58)) (and (<= (LitInt 0) |newtype$check#1_65@0|) (< |newtype$check#1_65@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_65@0|) (< |newtype$check#1_65@0| 100)) (and (=> (= (ControlFlow 0 42) (- 0 57)) (and (<= 0 (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|)) (<= (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|) (|Seq#Length| |x#0|)))) (=> (and (<= 0 (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|)) (<= (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|) (|Seq#Length| |x#0|))) (=> (= |newtype$check#1_66@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 56)) (and (<= (LitInt 0) |newtype$check#1_66@0|) (< |newtype$check#1_66@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_66@0|) (< |newtype$check#1_66@0| 100)) (=> (= |newtype$check#1_67@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 55)) (and (<= (LitInt 0) |newtype$check#1_67@0|) (< |newtype$check#1_67@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_67@0|) (< |newtype$check#1_67@0| 100)) (=> (= |newtype$check#1_68@0| (LitInt (+ 1 1))) (and (=> (= (ControlFlow 0 42) (- 0 54)) (and (<= (LitInt 0) |newtype$check#1_68@0|) (< |newtype$check#1_68@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_68@0|) (< |newtype$check#1_68@0| 100)) (=> (= |newtype$check#1_69@0| (LitInt 1)) (and (=> (= (ControlFlow 0 42) (- 0 53)) (and (<= (LitInt 0) |newtype$check#1_69@0|) (< |newtype$check#1_69@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_69@0|) (< |newtype$check#1_69@0| 100)) (=> (= |newtype$check#1_70@0| (LitInt (+ (+ 1 1) 1))) (and (=> (= (ControlFlow 0 42) (- 0 52)) (and (<= (LitInt 0) |newtype$check#1_70@0|) (< |newtype$check#1_70@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_70@0|) (< |newtype$check#1_70@0| 100)) (=> (= |newtype$check#1_71@0| (LitInt 3)) (and (=> (= (ControlFlow 0 42) (- 0 51)) (and (<= (LitInt 0) |newtype$check#1_71@0|) (< |newtype$check#1_71@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_71@0|) (< |newtype$check#1_71@0| 100)) (=> (= |newtype$check#1_72@0| (LitInt (+ (+ (+ 1 1) 1) 3))) (and (=> (= (ControlFlow 0 42) (- 0 50)) (and (<= (LitInt 0) |newtype$check#1_72@0|) (< |newtype$check#1_72@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_72@0|) (< |newtype$check#1_72@0| 100)) (=> (= |newtype$check#1_73@0| (+ (+ (+ (+ 1 1) 1) 3) |two#0|)) (and (=> (= (ControlFlow 0 42) (- 0 49)) (and (<= (LitInt 0) |newtype$check#1_73@0|) (< |newtype$check#1_73@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_73@0|) (< |newtype$check#1_73@0| 100)) (=> (= |newtype$check#1_74@0| (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|)) (and (=> (= (ControlFlow 0 42) (- 0 48)) (and (<= (LitInt 0) |newtype$check#1_74@0|) (< |newtype$check#1_74@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_74@0|) (< |newtype$check#1_74@0| 100)) (=> (= |newtype$check#1_75@0| (LitInt 0)) (and (=> (= (ControlFlow 0 42) (- 0 47)) (and (<= (LitInt 0) |newtype$check#1_75@0|) (< |newtype$check#1_75@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_75@0|) (< |newtype$check#1_75@0| 100)) (=> (= |newtype$check#1_76@0| (+ (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|) 0)) (and (=> (= (ControlFlow 0 42) (- 0 46)) (and (<= (LitInt 0) |newtype$check#1_76@0|) (< |newtype$check#1_76@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#1_76@0|) (< |newtype$check#1_76@0| 100)) (and (=> (= (ControlFlow 0 42) (- 0 45)) (and (<= (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|) (+ (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|) 0)) (<= (+ (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|) 0) (|Seq#Length| |x#0|)))) (=> (and (<= (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|) (+ (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|) 0)) (<= (+ (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|) 0) (|Seq#Length| |x#0|))) (=> (= |slices#0@2| (|Seq#Build| (|Seq#Build| (|Seq#Build| (|Seq#Build| (|Seq#Build| (|Seq#Build| (|Seq#Build| |Seq#Empty| ($Box SeqType (|Seq#Take| |x#0| (LitInt 1)))) ($Box SeqType (|Seq#Drop| (|Seq#Take| |x#0| (LitInt (+ 1 1))) (LitInt 1)))) ($Box SeqType (|Seq#Drop| (|Seq#Take| |x#0| (LitInt (+ (+ 1 1) 1))) (LitInt (+ 1 1))))) ($Box SeqType (|Seq#Drop| (|Seq#Take| |x#0| (LitInt (+ (+ (+ 1 1) 1) 3))) (LitInt (+ (+ 1 1) 1))))) ($Box SeqType (|Seq#Drop| (|Seq#Take| |x#0| (+ (+ (+ (+ 1 1) 1) 3) |two#0|)) (LitInt (+ (+ (+ 1 1) 1) 3))))) ($Box SeqType (|Seq#Drop| (|Seq#Take| |x#0| (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|)) (+ (+ (+ (+ 1 1) 1) 3) |two#0|)))) ($Box SeqType (|Seq#Drop| (|Seq#Take| |x#0| (+ (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|) 0)) (+ (+ (+ (+ (+ 1 1) 1) 3) |two#0|) |two#0|))))) (and (=> (= (ControlFlow 0 42) (- 0 44)) (and (<= 0 (LitInt 5)) (< (LitInt 5) (|Seq#Length| |slices#0@2|)))) (and (=> (= (ControlFlow 0 42) (- 0 43)) (= (|Seq#Length| ($Unbox SeqType (|Seq#Index| |slices#0@2| (LitInt 5)))) (LitInt 2))) (=> (= (|Seq#Length| ($Unbox SeqType (|Seq#Index| |slices#0@2| (LitInt 5)))) (LitInt 2)) (=> (= |slices#0@3| |slices#0@2|) (and (=> (= (ControlFlow 0 42) 5) anon7_Then_correct) (=> (= (ControlFlow 0 42) 6) anon7_Else_correct))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let ((anon6_Then_correct  (=> (= |newtype$check#0_0@0| (LitInt 0)) (and (=> (= (ControlFlow 0 7) (- 0 41)) (and (<= (LitInt 0) |newtype$check#0_0@0|) (< |newtype$check#0_0@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_0@0|) (< |newtype$check#0_0@0| 100)) (and (=> (= (ControlFlow 0 7) (- 0 40)) (and (<= 0 (LitInt 0)) (<= (LitInt 0) (|Seq#Length| |x#0|)))) (=> (and (<= 0 (LitInt 0)) (<= (LitInt 0) (|Seq#Length| |x#0|))) (=> (= |newtype$check#0_1@0| (LitInt 0)) (and (=> (= (ControlFlow 0 7) (- 0 39)) (and (<= (LitInt 0) |newtype$check#0_1@0|) (< |newtype$check#0_1@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_1@0|) (< |newtype$check#0_1@0| 100)) (and (=> (= (ControlFlow 0 7) (- 0 38)) (and (<= 0 (LitInt 0)) (<= (LitInt 0) (|Seq#Length| |x#0|)))) (=> (and (<= 0 (LitInt 0)) (<= (LitInt 0) (|Seq#Length| |x#0|))) (=> (= |newtype$check#0_2@0| (LitInt 0)) (and (=> (= (ControlFlow 0 7) (- 0 37)) (and (<= (LitInt 0) |newtype$check#0_2@0|) (< |newtype$check#0_2@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_2@0|) (< |newtype$check#0_2@0| 100)) (=> (= |newtype$check#0_3@0| (+ 0 |two#0|)) (and (=> (= (ControlFlow 0 7) (- 0 36)) (and (<= (LitInt 0) |newtype$check#0_3@0|) (< |newtype$check#0_3@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_3@0|) (< |newtype$check#0_3@0| 100)) (and (=> (= (ControlFlow 0 7) (- 0 35)) (and (<= (LitInt 0) (+ 0 |two#0|)) (<= (+ 0 |two#0|) (|Seq#Length| |x#0|)))) (=> (and (<= (LitInt 0) (+ 0 |two#0|)) (<= (+ 0 |two#0|) (|Seq#Length| |x#0|))) (=> (= |newtype$check#0_4@0| (LitInt 0)) (and (=> (= (ControlFlow 0 7) (- 0 34)) (and (<= (LitInt 0) |newtype$check#0_4@0|) (< |newtype$check#0_4@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_4@0|) (< |newtype$check#0_4@0| 100)) (=> (= |newtype$check#0_5@0| (+ 0 |two#0|)) (and (=> (= (ControlFlow 0 7) (- 0 33)) (and (<= (LitInt 0) |newtype$check#0_5@0|) (< |newtype$check#0_5@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_5@0|) (< |newtype$check#0_5@0| 100)) (and (=> (= (ControlFlow 0 7) (- 0 32)) (and (<= 0 (+ 0 |two#0|)) (<= (+ 0 |two#0|) (|Seq#Length| |x#0|)))) (=> (and (<= 0 (+ 0 |two#0|)) (<= (+ 0 |two#0|) (|Seq#Length| |x#0|))) (=> (= |newtype$check#0_6@0| (LitInt 0)) (and (=> (= (ControlFlow 0 7) (- 0 31)) (and (<= (LitInt 0) |newtype$check#0_6@0|) (< |newtype$check#0_6@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_6@0|) (< |newtype$check#0_6@0| 100)) (=> (= |newtype$check#0_7@0| (+ 0 |two#0|)) (and (=> (= (ControlFlow 0 7) (- 0 30)) (and (<= (LitInt 0) |newtype$check#0_7@0|) (< |newtype$check#0_7@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_7@0|) (< |newtype$check#0_7@0| 100)) (=> (= |newtype$check#0_8@0| (LitInt 3)) (and (=> (= (ControlFlow 0 7) (- 0 29)) (and (<= (LitInt 0) |newtype$check#0_8@0|) (< |newtype$check#0_8@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_8@0|) (< |newtype$check#0_8@0| 100)) (=> (= |newtype$check#0_9@0| (+ (+ 0 |two#0|) 3)) (and (=> (= (ControlFlow 0 7) (- 0 28)) (and (<= (LitInt 0) |newtype$check#0_9@0|) (< |newtype$check#0_9@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_9@0|) (< |newtype$check#0_9@0| 100)) (and (=> (= (ControlFlow 0 7) (- 0 27)) (and (<= (+ 0 |two#0|) (+ (+ 0 |two#0|) 3)) (<= (+ (+ 0 |two#0|) 3) (|Seq#Length| |x#0|)))) (=> (and (<= (+ 0 |two#0|) (+ (+ 0 |two#0|) 3)) (<= (+ (+ 0 |two#0|) 3) (|Seq#Length| |x#0|))) (=> (= |newtype$check#0_10@0| (LitInt 0)) (and (=> (= (ControlFlow 0 7) (- 0 26)) (and (<= (LitInt 0) |newtype$check#0_10@0|) (< |newtype$check#0_10@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_10@0|) (< |newtype$check#0_10@0| 100)) (=> (= |newtype$check#0_11@0| (+ 0 |two#0|)) (and (=> (= (ControlFlow 0 7) (- 0 25)) (and (<= (LitInt 0) |newtype$check#0_11@0|) (< |newtype$check#0_11@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_11@0|) (< |newtype$check#0_11@0| 100)) (=> (= |newtype$check#0_12@0| (LitInt 3)) (and (=> (= (ControlFlow 0 7) (- 0 24)) (and (<= (LitInt 0) |newtype$check#0_12@0|) (< |newtype$check#0_12@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_12@0|) (< |newtype$check#0_12@0| 100)) (=> (= |newtype$check#0_13@0| (+ (+ 0 |two#0|) 3)) (and (=> (= (ControlFlow 0 7) (- 0 23)) (and (<= (LitInt 0) |newtype$check#0_13@0|) (< |newtype$check#0_13@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_13@0|) (< |newtype$check#0_13@0| 100)) (and (=> (= (ControlFlow 0 7) (- 0 22)) (and (<= 0 (+ (+ 0 |two#0|) 3)) (<= (+ (+ 0 |two#0|) 3) (|Seq#Length| |x#0|)))) (=> (and (<= 0 (+ (+ 0 |two#0|) 3)) (<= (+ (+ 0 |two#0|) 3) (|Seq#Length| |x#0|))) (=> (= |newtype$check#0_14@0| (LitInt 0)) (and (=> (= (ControlFlow 0 7) (- 0 21)) (and (<= (LitInt 0) |newtype$check#0_14@0|) (< |newtype$check#0_14@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_14@0|) (< |newtype$check#0_14@0| 100)) (=> (= |newtype$check#0_15@0| (+ 0 |two#0|)) (and (=> (= (ControlFlow 0 7) (- 0 20)) (and (<= (LitInt 0) |newtype$check#0_15@0|) (< |newtype$check#0_15@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_15@0|) (< |newtype$check#0_15@0| 100)) (=> (= |newtype$check#0_16@0| (LitInt 3)) (and (=> (= (ControlFlow 0 7) (- 0 19)) (and (<= (LitInt 0) |newtype$check#0_16@0|) (< |newtype$check#0_16@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_16@0|) (< |newtype$check#0_16@0| 100)) (=> (= |newtype$check#0_17@0| (+ (+ 0 |two#0|) 3)) (and (=> (= (ControlFlow 0 7) (- 0 18)) (and (<= (LitInt 0) |newtype$check#0_17@0|) (< |newtype$check#0_17@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_17@0|) (< |newtype$check#0_17@0| 100)) (=> (= |newtype$check#0_18@0| (LitInt 0)) (and (=> (= (ControlFlow 0 7) (- 0 17)) (and (<= (LitInt 0) |newtype$check#0_18@0|) (< |newtype$check#0_18@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_18@0|) (< |newtype$check#0_18@0| 100)) (=> (= |newtype$check#0_19@0| (+ (+ (+ 0 |two#0|) 3) 0)) (and (=> (= (ControlFlow 0 7) (- 0 16)) (and (<= (LitInt 0) |newtype$check#0_19@0|) (< |newtype$check#0_19@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_19@0|) (< |newtype$check#0_19@0| 100)) (and (=> (= (ControlFlow 0 7) (- 0 15)) (and (<= (+ (+ 0 |two#0|) 3) (+ (+ (+ 0 |two#0|) 3) 0)) (<= (+ (+ (+ 0 |two#0|) 3) 0) (|Seq#Length| |x#0|)))) (=> (and (<= (+ (+ 0 |two#0|) 3) (+ (+ (+ 0 |two#0|) 3) 0)) (<= (+ (+ (+ 0 |two#0|) 3) 0) (|Seq#Length| |x#0|))) (=> (= |newtype$check#0_20@0| (LitInt 0)) (and (=> (= (ControlFlow 0 7) (- 0 14)) (and (<= (LitInt 0) |newtype$check#0_20@0|) (< |newtype$check#0_20@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_20@0|) (< |newtype$check#0_20@0| 100)) (=> (= |newtype$check#0_21@0| (+ 0 |two#0|)) (and (=> (= (ControlFlow 0 7) (- 0 13)) (and (<= (LitInt 0) |newtype$check#0_21@0|) (< |newtype$check#0_21@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_21@0|) (< |newtype$check#0_21@0| 100)) (=> (= |newtype$check#0_22@0| (LitInt 3)) (and (=> (= (ControlFlow 0 7) (- 0 12)) (and (<= (LitInt 0) |newtype$check#0_22@0|) (< |newtype$check#0_22@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_22@0|) (< |newtype$check#0_22@0| 100)) (=> (= |newtype$check#0_23@0| (+ (+ 0 |two#0|) 3)) (and (=> (= (ControlFlow 0 7) (- 0 11)) (and (<= (LitInt 0) |newtype$check#0_23@0|) (< |newtype$check#0_23@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_23@0|) (< |newtype$check#0_23@0| 100)) (=> (= |newtype$check#0_24@0| (LitInt 0)) (and (=> (= (ControlFlow 0 7) (- 0 10)) (and (<= (LitInt 0) |newtype$check#0_24@0|) (< |newtype$check#0_24@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_24@0|) (< |newtype$check#0_24@0| 100)) (=> (= |newtype$check#0_25@0| (+ (+ (+ 0 |two#0|) 3) 0)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and (<= (LitInt 0) |newtype$check#0_25@0|) (< |newtype$check#0_25@0| 100))) (=> (and (<= (LitInt 0) |newtype$check#0_25@0|) (< |newtype$check#0_25@0| 100)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 (+ (+ (+ 0 |two#0|) 3) 0)) (<= (+ (+ (+ 0 |two#0|) 3) 0) (|Seq#Length| |x#0|)))) (=> (and (<= 0 (+ (+ (+ 0 |two#0|) 3) 0)) (<= (+ (+ (+ 0 |two#0|) 3) 0) (|Seq#Length| |x#0|))) (=> (and (= |slices#0@1| (|Seq#Build| (|Seq#Build| (|Seq#Build| (|Seq#Build| (|Seq#Build| |Seq#Empty| ($Box SeqType (|Seq#Take| |x#0| (LitInt 0)))) ($Box SeqType (|Seq#Drop| (|Seq#Take| |x#0| (+ 0 |two#0|)) (LitInt 0)))) ($Box SeqType (|Seq#Drop| (|Seq#Take| |x#0| (+ (+ 0 |two#0|) 3)) (+ 0 |two#0|)))) ($Box SeqType (|Seq#Drop| (|Seq#Take| |x#0| (+ (+ (+ 0 |two#0|) 3) 0)) (+ (+ 0 |two#0|) 3)))) ($Box SeqType (|Seq#Drop| |x#0| (+ (+ (+ 0 |two#0|) 3) 0))))) (= |slices#0@3| |slices#0@1|)) (and (=> (= (ControlFlow 0 7) 5) anon7_Then_correct) (=> (= (ControlFlow 0 7) 6) anon7_Else_correct)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let ((anon0_correct  (=> (= $_ModifiesFrame@0 (|lambda#0| null $Heap@@0 alloc false)) (=> (and ($Is SeqType |slices#0@0| (TSeq (TSeq _module._default.NumericSlice$T))) ($IsAlloc SeqType |slices#0@0| (TSeq (TSeq _module._default.NumericSlice$T)) $Heap@@0)) (and (=> (= (ControlFlow 0 135) 7) anon6_Then_correct) (=> (= (ControlFlow 0 135) 42) anon6_Else_correct))))))
(let ((PreconditionGeneratedEntry_correct  (=> (and (and (and (and ($IsGoodHeap $Heap@@0) ($IsHeapAnchor $Heap@@0)) (and ($Is SeqType |x#0| (TSeq _module._default.NumericSlice$T)) ($IsAlloc SeqType |x#0| (TSeq _module._default.NumericSlice$T) $Heap@@0))) (and (and (<= (LitInt 0) |two#0|) (< |two#0| 100)) (and ($Is SeqType |y#0| (TSeq _module._default.NumericSlice$T)) ($IsAlloc SeqType |y#0| (TSeq _module._default.NumericSlice$T) $Heap@@0)))) (and (and (and ($Is SeqType |slices#0| (TSeq (TSeq _module._default.NumericSlice$T))) ($IsAlloc SeqType |slices#0| (TSeq (TSeq _module._default.NumericSlice$T)) $Heap@@0)) true) (and (and (= 1 $FunctionContextHeight) (<= (LitInt 10) (|Seq#Length| |x#0|))) (and (= |two#0| (LitInt 2)) (= (ControlFlow 0 136) 135))))) anon0_correct)))
PreconditionGeneratedEntry_correct))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
