(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U) Int)
(declare-fun $generated@@91 () Int)
(declare-fun $generated@@92 () Int)
(declare-fun $generated@@93 (T@U) Bool)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! ($generated@@27 $generated@@13 $generated@@29 $generated@@28 $generated@@30)
 :pattern ( ($generated@@27 $generated@@13 $generated@@29 $generated@@28 $generated@@30))
)))
(assert ($generated@@31 $generated@@32))
(assert (= ($generated@@11 $generated@@34) 3))
(assert (forall (($generated@@37 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@37 $generated@@32)  (or (= $generated@@37 $generated@@35) (= ($generated@@36 $generated@@37) $generated@@32)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@37 $generated@@32))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@27 $generated@@34 $generated@@40 $generated@@38 $generated@@41) ($generated@@27 $generated@@34 $generated@@40 $generated@@39 $generated@@41))
 :pattern ( ($generated@@27 $generated@@34 $generated@@40 $generated@@38 $generated@@41))
 :pattern ( ($generated@@27 $generated@@34 $generated@@40 $generated@@39 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@27 $generated@@34 $generated@@44 $generated@@42 $generated@@45) ($generated@@27 $generated@@34 $generated@@44 $generated@@43 $generated@@45))
 :pattern ( ($generated@@27 $generated@@34 $generated@@44 $generated@@42 $generated@@45))
 :pattern ( ($generated@@27 $generated@@34 $generated@@44 $generated@@43 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@27 $generated@@34 $generated@@47 $generated@@46 $generated@@48) ($generated@@27 $generated@@34 $generated@@47 $generated@@32 $generated@@48))
 :pattern ( ($generated@@27 $generated@@34 $generated@@47 $generated@@46 $generated@@48))
 :pattern ( ($generated@@27 $generated@@34 $generated@@47 $generated@@32 $generated@@48))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@50 $generated@@57 $generated@@58 ($generated@@54 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@61) $generated@@59)
 :weight 0
)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (or (= $generated@@66 $generated@@67) (= ($generated@@50 $generated@@62 $generated@@63 ($generated@@54 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@67) ($generated@@50 $generated@@62 $generated@@63 $generated@@65 $generated@@67)))
 :weight 0
))) (= ($generated@@11 $generated@@51) 4)) (= ($generated@@11 $generated@@52) 5)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (= ($generated@@11 ($generated@@53 $generated@@68 $generated@@69)) 6))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@55 ($generated@@53 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@53 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@56 ($generated@@53 $generated@@72 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@53 $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@27 $generated@@34 $generated@@74 $generated@@39 $generated@@75)  (or (= $generated@@74 $generated@@35) ($generated@@16 ($generated@@49 $generated@@12 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@34 ($generated@@53 $generated@@51 $generated@@52) $generated@@75 $generated@@74) $generated)))))
 :pattern ( ($generated@@27 $generated@@34 $generated@@74 $generated@@39 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@27 $generated@@34 $generated@@76 $generated@@43 $generated@@77)  (or (= $generated@@76 $generated@@35) ($generated@@16 ($generated@@49 $generated@@12 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@34 ($generated@@53 $generated@@51 $generated@@52) $generated@@77 $generated@@76) $generated)))))
 :pattern ( ($generated@@27 $generated@@34 $generated@@76 $generated@@43 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@27 $generated@@34 $generated@@78 $generated@@32 $generated@@79)  (or (= $generated@@78 $generated@@35) ($generated@@16 ($generated@@49 $generated@@12 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@34 ($generated@@53 $generated@@51 $generated@@52) $generated@@79 $generated@@78) $generated)))))
 :pattern ( ($generated@@27 $generated@@34 $generated@@78 $generated@@32 $generated@@79))
)))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@80 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@49 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@49 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 $generated@@89) ($generated@@80 7))
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@33 $generated@@13 $generated@@90 $generated@@28) (<= ($generated@@80 6) ($generated@@18 $generated@@90)))
 :pattern ( ($generated@@33 $generated@@13 $generated@@90 $generated@@28))
)))
(assert  (=> (< 1 $generated@@91) ($generated@@33 $generated@@13 ($generated@@17 $generated@@92) $generated@@28)))
(assert  (=> (< 1 $generated@@91) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (and (and ($generated@@93 $generated@@94) (and (or (not (= $generated@@95 $generated@@35)) (not true)) ($generated@@33 $generated@@34 $generated@@95 $generated@@43))) ($generated@@16 ($generated@@49 $generated@@12 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@34 ($generated@@53 $generated@@51 $generated@@52) $generated@@94 $generated@@95) $generated)))) ($generated@@27 $generated@@13 ($generated@@17 ($generated@@88 $generated@@95)) $generated@@28 $generated@@94))
 :pattern ( ($generated@@88 $generated@@95) ($generated@@49 $generated@@12 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@34 ($generated@@53 $generated@@51 $generated@@52) $generated@@94 $generated@@95) $generated)))
))))
(assert  (=> (< 1 $generated@@91) (forall (($generated@@96 T@U) ) (!  (=> (and (or (not (= $generated@@96 $generated@@35)) (not true)) ($generated@@33 $generated@@34 $generated@@96 $generated@@43)) ($generated@@33 $generated@@13 ($generated@@17 ($generated@@88 $generated@@96)) $generated@@28))
 :pattern ( ($generated@@88 $generated@@96))
))))
(assert  (=> (< 1 $generated@@91) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@93 $generated@@97) ($generated@@27 $generated@@13 ($generated@@17 $generated@@92) $generated@@28 $generated@@97))
 :pattern ( ($generated@@27 $generated@@13 ($generated@@17 $generated@@92) $generated@@28 $generated@@97))
))))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@98 $generated@@38)  (and ($generated@@33 $generated@@34 $generated@@98 $generated@@39) (or (not (= $generated@@98 $generated@@35)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@98 $generated@@38))
 :pattern ( ($generated@@33 $generated@@34 $generated@@98 $generated@@39))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@99 $generated@@42)  (and ($generated@@33 $generated@@34 $generated@@99 $generated@@43) (or (not (= $generated@@99 $generated@@35)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@99 $generated@@42))
 :pattern ( ($generated@@33 $generated@@34 $generated@@99 $generated@@43))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@100 $generated@@46)  (and ($generated@@33 $generated@@34 $generated@@100 $generated@@32) (or (not (= $generated@@100 $generated@@35)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@100 $generated@@46))
 :pattern ( ($generated@@33 $generated@@34 $generated@@100 $generated@@32))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> ($generated@@27 $generated@@34 $generated@@101 $generated@@43 $generated@@102) ($generated@@27 $generated@@34 $generated@@101 $generated@@39 $generated@@102))
 :pattern ( ($generated@@27 $generated@@34 $generated@@101 $generated@@43 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@27 $generated@@34 $generated@@103 $generated@@32 $generated@@104) ($generated@@27 $generated@@34 $generated@@103 $generated@@43 $generated@@104))
 :pattern ( ($generated@@27 $generated@@34 $generated@@103 $generated@@32 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (! ($generated@@33 $generated@@34 $generated@@105 $generated@@39)
 :pattern ( ($generated@@33 $generated@@34 $generated@@105 $generated@@39))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@49 $generated@@107 ($generated@@85 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@85 $generated@@107 $generated@@106))
)))
(assert (= $generated@@92 ($generated@@80 7)))
(assert  (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@108 $generated@@111 $generated@@112 $generated@@113 ($generated@@110 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@108 $generated@@118 $generated@@119 $generated@@120 ($generated@@110 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@108 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@108 $generated@@127 $generated@@128 $generated@@129 ($generated@@110 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@108 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 Bool) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@16 ($generated@@108 $generated@@34 $generated@@51 $generated@@12 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))  (=> (and (or (not (= $generated@@140 $generated@@136)) (not true)) ($generated@@16 ($generated@@49 $generated@@12 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@34 ($generated@@53 $generated@@51 $generated@@52) $generated@@137 $generated@@140) $generated@@138)))) $generated@@139))
 :pattern ( ($generated@@108 $generated@@34 $generated@@51 $generated@@12 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@142 $generated@@43) ($generated@@33 $generated@@34 $generated@@142 $generated@@39))
 :pattern ( ($generated@@33 $generated@@34 $generated@@142 $generated@@43))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@143 $generated@@32) ($generated@@33 $generated@@34 $generated@@143 $generated@@43))
 :pattern ( ($generated@@33 $generated@@34 $generated@@143 $generated@@32))
)))
(assert (= ($generated@@144 $generated@@39) $generated@@0))
(assert (= ($generated@@145 $generated@@39) $generated@@7))
(assert (= ($generated@@144 $generated@@38) $generated@@1))
(assert (= ($generated@@145 $generated@@38) $generated@@7))
(assert (= ($generated@@144 $generated@@43) $generated@@2))
(assert (= ($generated@@145 $generated@@43) $generated@@8))
(assert (= ($generated@@144 $generated@@28) $generated@@3))
(assert (= ($generated@@145 $generated@@28) $generated@@9))
(assert (= ($generated@@144 $generated@@42) $generated@@4))
(assert (= ($generated@@145 $generated@@42) $generated@@8))
(assert (= ($generated@@144 $generated@@32) $generated@@5))
(assert (= ($generated@@145 $generated@@32) $generated@@10))
(assert (= ($generated@@144 $generated@@46) $generated@@6))
(assert (= ($generated@@145 $generated@@46) $generated@@10))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@146 $generated@@43)  (or (= $generated@@146 $generated@@35) ($generated@@31 ($generated@@36 $generated@@146))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@146 $generated@@43))
)))
(assert (forall (($generated@@147 Int) ) (! (= ($generated@@85 $generated@@13 ($generated@@17 ($generated@@80 $generated@@147))) ($generated@@82 $generated@@52 ($generated@@85 $generated@@13 ($generated@@17 $generated@@147))))
 :pattern ( ($generated@@85 $generated@@13 ($generated@@17 ($generated@@80 $generated@@147))))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@85 $generated@@149 ($generated@@82 $generated@@149 $generated@@148)) ($generated@@82 $generated@@52 ($generated@@85 $generated@@149 $generated@@148)))
 :pattern ( ($generated@@85 $generated@@149 ($generated@@82 $generated@@149 $generated@@148)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@156  (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@88 $generated@@150) ($generated@@80 7))) (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@92 ($generated@@80 7))))))
(let (($generated@@157  (=> (and (or (not (= ($generated@@88 $generated@@150) ($generated@@80 7))) (not true)) (= (ControlFlow 0 6) 2)) $generated@@156)))
(let (($generated@@158  (=> (and (= ($generated@@88 $generated@@150) ($generated@@80 7)) (= $generated@@151 ($generated@@80 7))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@80 6) $generated@@151)) (=> (<= ($generated@@80 6) $generated@@151) (=> (= (ControlFlow 0 4) 2) $generated@@156))))))
(let (($generated@@159  (=> (and (= $generated@@152 ($generated@@109 $generated@@35 $generated@@153 $generated false)) (= $generated@@154 ($generated@@80 7))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (<= ($generated@@80 6) $generated@@154)) (=> (<= ($generated@@80 6) $generated@@154) (and (=> (= (ControlFlow 0 7) 4) $generated@@158) (=> (= (ControlFlow 0 7) 6) $generated@@157)))))))
(let (($generated@@160  (=> (and ($generated@@93 $generated@@153) ($generated@@155 $generated@@153)) (=> (and (and (or (not (= $generated@@150 $generated@@35)) (not true)) (and ($generated@@33 $generated@@34 $generated@@150 $generated@@46) ($generated@@27 $generated@@34 $generated@@150 $generated@@46 $generated@@153))) (and (= 2 $generated@@91) (= (ControlFlow 0 9) 7))) $generated@@159))))
$generated@@160))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
