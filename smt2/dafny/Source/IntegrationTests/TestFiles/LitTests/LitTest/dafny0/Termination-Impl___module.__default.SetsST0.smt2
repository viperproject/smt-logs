(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) T@U)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T T@T) T@T)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@86 (Int) Int)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) Bool)
(declare-fun $generated@@102 (T@T T@U T@U) Bool)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@109 (T@U T@U T@U) Bool)
(declare-fun $generated@@110 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@19 T@U) ($generated@@20 T@U) ) (! ($generated@@18 ($generated@@17 $generated@@19 $generated@@20) $generated@@20)
 :pattern ( ($generated@@17 $generated@@19 $generated@@20))
)))
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ($generated@@23 T@U) ) (!  (=> ($generated@@18 $generated@@21 $generated@@23) ($generated@@18 ($generated@@17 $generated@@21 $generated@@22) $generated@@23))
 :pattern ( ($generated@@17 $generated@@21 $generated@@22) ($generated@@18 $generated@@21 $generated@@23))
)))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@18 $generated@@25 $generated@@27) ($generated@@18 ($generated@@24 $generated@@25 $generated@@26) $generated@@27))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26) ($generated@@18 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@18 $generated@@29 $generated@@30) ($generated@@18 ($generated@@24 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@24 $generated@@28 $generated@@29) ($generated@@18 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@18 ($generated@@17 $generated@@31 $generated@@32) $generated@@33)  (or (= $generated@@33 $generated@@32) ($generated@@18 $generated@@31 $generated@@33)))
 :pattern ( ($generated@@18 ($generated@@17 $generated@@31 $generated@@32) $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@18 $generated@@36 $generated@@37) (not ($generated@@18 ($generated@@34 $generated@@35 $generated@@36) $generated@@37)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36) ($generated@@18 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ) (!  (not ($generated@@18 $generated@@38 $generated@@39))
 :pattern ( ($generated@@18 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@18 ($generated@@40 $generated@@41 $generated@@42) $generated@@43)  (and ($generated@@18 $generated@@41 $generated@@43) ($generated@@18 $generated@@42 $generated@@43)))
 :pattern ( ($generated@@18 ($generated@@40 $generated@@41 $generated@@42) $generated@@43))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@24 ($generated@@24 $generated@@44 $generated@@45) $generated@@45) ($generated@@24 $generated@@44 $generated@@45))
 :pattern ( ($generated@@24 ($generated@@24 $generated@@44 $generated@@45) $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@40 ($generated@@40 $generated@@46 $generated@@47) $generated@@47) ($generated@@40 $generated@@46 $generated@@47))
 :pattern ( ($generated@@40 ($generated@@40 $generated@@46 $generated@@47) $generated@@47))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@18 ($generated@@34 $generated@@48 $generated@@49) $generated@@50)  (and ($generated@@18 $generated@@48 $generated@@50) (not ($generated@@18 $generated@@49 $generated@@50))))
 :pattern ( ($generated@@18 ($generated@@34 $generated@@48 $generated@@49) $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (!  (and (= (= ($generated@@51 $generated@@52) 0) (= $generated@@52 $generated@@38)) (=> (or (not (= ($generated@@51 $generated@@52) 0)) (not true)) (exists (($generated@@53 T@U) ) (! ($generated@@18 $generated@@52 $generated@@53)
 :pattern ( ($generated@@18 $generated@@52 $generated@@53))
))))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= (+ ($generated@@51 ($generated@@24 $generated@@54 $generated@@55)) ($generated@@51 ($generated@@40 $generated@@54 $generated@@55))) (+ ($generated@@51 $generated@@54) ($generated@@51 $generated@@55)))
 :pattern ( ($generated@@51 ($generated@@24 $generated@@54 $generated@@55)))
 :pattern ( ($generated@@51 ($generated@@40 $generated@@54 $generated@@55)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@57 $generated@@66 $generated@@67 ($generated@@63 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@70) $generated@@68)
 :weight 0
)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (or (= $generated@@75 $generated@@76) (= ($generated@@57 $generated@@71 $generated@@72 ($generated@@63 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@76) ($generated@@57 $generated@@71 $generated@@72 $generated@@74 $generated@@76)))
 :weight 0
))) (= ($generated@@1 $generated@@58) 3)) (= ($generated@@1 $generated@@59) 4)) (= ($generated@@1 $generated@@60) 5)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (= ($generated@@1 ($generated@@61 $generated@@77 $generated@@78)) 6))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@64 ($generated@@61 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@61 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@65 ($generated@@61 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@61 $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@56 $generated@@83 $generated@@84) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@6 ($generated@@62 $generated@@2 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@83 $generated@@85) $generated@@0))) ($generated@@6 ($generated@@62 $generated@@2 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@84 $generated@@85) $generated@@0))))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@84 $generated@@85) $generated@@0))
)))
 :pattern ( ($generated@@56 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@87 Int) ) (! (= ($generated@@86 $generated@@87) $generated@@87)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 $generated@@89) $generated@@89)
 :pattern ( ($generated@@88 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@91 $generated@@92 $generated@@93) (forall (($generated@@94 T@U) ) (!  (=> ($generated@@18 $generated@@92 $generated@@94) ($generated@@18 $generated@@93 $generated@@94))
 :pattern ( ($generated@@18 $generated@@92 $generated@@94))
 :pattern ( ($generated@@18 $generated@@93 $generated@@94))
)))
 :pattern ( ($generated@@91 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 ($generated@@62 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@62 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@98 $generated@@99 $generated@@100) (forall (($generated@@101 T@U) ) (!  (or (not ($generated@@18 $generated@@99 $generated@@101)) (not ($generated@@18 $generated@@100 $generated@@101)))
 :pattern ( ($generated@@18 $generated@@99 $generated@@101))
 :pattern ( ($generated@@18 $generated@@100 $generated@@101))
)))
 :pattern ( ($generated@@98 $generated@@99 $generated@@100))
)))
(assert (= ($generated@@1 $generated@@103) 7))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@102 $generated@@103 $generated@@106 ($generated@@104 $generated@@107)) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@18 $generated@@106 $generated@@108) ($generated@@105 $generated@@108 $generated@@107))
 :pattern ( ($generated@@18 $generated@@106 $generated@@108))
)))
 :pattern ( ($generated@@102 $generated@@103 $generated@@106 ($generated@@104 $generated@@107)))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@109 ($generated@@95 $generated@@114 $generated@@111) $generated@@112 $generated@@113) ($generated@@110 $generated@@114 $generated@@111 $generated@@112 $generated@@113))
 :pattern ( ($generated@@109 ($generated@@95 $generated@@114 $generated@@111) $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@56 $generated@@115 $generated@@116) (=> ($generated@@109 $generated@@117 $generated@@118 $generated@@115) ($generated@@109 $generated@@117 $generated@@118 $generated@@116)))
 :pattern ( ($generated@@56 $generated@@115 $generated@@116) ($generated@@109 $generated@@117 $generated@@118 $generated@@115))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (!  (=> ($generated@@56 $generated@@119 $generated@@120) (=> ($generated@@110 $generated@@123 $generated@@121 $generated@@122 $generated@@119) ($generated@@110 $generated@@123 $generated@@121 $generated@@122 $generated@@120)))
 :pattern ( ($generated@@56 $generated@@119 $generated@@120) ($generated@@110 $generated@@123 $generated@@121 $generated@@122 $generated@@119))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@18 ($generated@@24 $generated@@124 $generated@@125) $generated@@126)  (or ($generated@@18 $generated@@124 $generated@@126) ($generated@@18 $generated@@125 $generated@@126)))
 :pattern ( ($generated@@18 ($generated@@24 $generated@@124 $generated@@125) $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> ($generated@@98 $generated@@127 $generated@@128) (and (= ($generated@@34 ($generated@@24 $generated@@127 $generated@@128) $generated@@127) $generated@@128) (= ($generated@@34 ($generated@@24 $generated@@127 $generated@@128) $generated@@128) $generated@@127)))
 :pattern ( ($generated@@24 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or (not (= $generated@@129 $generated@@131)) (not true)) (=> (and ($generated@@56 $generated@@129 $generated@@130) ($generated@@56 $generated@@130 $generated@@131)) ($generated@@56 $generated@@129 $generated@@131)))
 :pattern ( ($generated@@56 $generated@@129 $generated@@130) ($generated@@56 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (and (= (+ (+ ($generated@@51 ($generated@@34 $generated@@132 $generated@@133)) ($generated@@51 ($generated@@34 $generated@@133 $generated@@132))) ($generated@@51 ($generated@@40 $generated@@132 $generated@@133))) ($generated@@51 ($generated@@24 $generated@@132 $generated@@133))) (= ($generated@@51 ($generated@@34 $generated@@132 $generated@@133)) (- ($generated@@51 $generated@@132) ($generated@@51 ($generated@@40 $generated@@132 $generated@@133)))))
 :pattern ( ($generated@@51 ($generated@@34 $generated@@132 $generated@@133)))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@105 ($generated@@95 $generated@@136 $generated@@134) $generated@@135) ($generated@@102 $generated@@136 $generated@@134 $generated@@135))
 :pattern ( ($generated@@105 ($generated@@95 $generated@@136 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (! (<= 0 ($generated@@51 $generated@@137))
 :pattern ( ($generated@@51 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@110 $generated@@103 $generated@@138 ($generated@@104 $generated@@139) $generated@@140) (forall (($generated@@141 T@U) ) (!  (=> ($generated@@18 $generated@@138 $generated@@141) ($generated@@109 $generated@@141 $generated@@139 $generated@@140))
 :pattern ( ($generated@@18 $generated@@138 $generated@@141))
)))
 :pattern ( ($generated@@110 $generated@@103 $generated@@138 ($generated@@104 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@104 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@104 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@144 ($generated@@104 $generated@@145)) $generated)
 :pattern ( ($generated@@104 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@62 $generated@@147 ($generated@@95 $generated@@147 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@95 $generated@@147 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@24 $generated@@148 ($generated@@24 $generated@@148 $generated@@149)) ($generated@@24 $generated@@148 $generated@@149))
 :pattern ( ($generated@@24 $generated@@148 ($generated@@24 $generated@@148 $generated@@149)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@40 $generated@@150 ($generated@@40 $generated@@150 $generated@@151)) ($generated@@40 $generated@@150 $generated@@151))
 :pattern ( ($generated@@40 $generated@@150 ($generated@@40 $generated@@150 $generated@@151)))
)))
(assert  (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@152 $generated@@155 $generated@@156 $generated@@157 ($generated@@154 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@160 $generated@@161) $generated@@158)
 :weight 0
)) (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@152 $generated@@162 $generated@@163 $generated@@164 ($generated@@154 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@152 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@152 $generated@@171 $generated@@172 $generated@@173 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@152 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@6 ($generated@@152 $generated@@60 $generated@@58 $generated@@2 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (or (not (= $generated@@184 $generated@@180)) (not true)) ($generated@@6 ($generated@@62 $generated@@2 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@181 $generated@@184) $generated@@182)))) $generated@@183))
 :pattern ( ($generated@@152 $generated@@60 $generated@@58 $generated@@2 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@105 $generated@@186 ($generated@@104 $generated@@187)) (and (= ($generated@@95 $generated@@103 ($generated@@62 $generated@@103 $generated@@186)) $generated@@186) ($generated@@102 $generated@@103 ($generated@@62 $generated@@103 $generated@@186) ($generated@@104 $generated@@187))))
 :pattern ( ($generated@@105 $generated@@186 ($generated@@104 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@18 $generated@@188 $generated@@189) (= ($generated@@51 ($generated@@17 $generated@@188 $generated@@189)) ($generated@@51 $generated@@188)))
 :pattern ( ($generated@@51 ($generated@@17 $generated@@188 $generated@@189)))
)))
(assert (forall (($generated@@190 Int) ) (! (= ($generated@@95 $generated@@3 ($generated@@7 ($generated@@86 $generated@@190))) ($generated@@88 $generated@@59 ($generated@@95 $generated@@3 ($generated@@7 $generated@@190))))
 :pattern ( ($generated@@95 $generated@@3 ($generated@@7 ($generated@@86 $generated@@190))))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@T) ) (! (= ($generated@@95 $generated@@192 ($generated@@88 $generated@@192 $generated@@191)) ($generated@@88 $generated@@59 ($generated@@95 $generated@@192 $generated@@191)))
 :pattern ( ($generated@@95 $generated@@192 ($generated@@88 $generated@@192 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (not ($generated@@18 $generated@@193 $generated@@194)) (= ($generated@@51 ($generated@@17 $generated@@193 $generated@@194)) (+ ($generated@@51 $generated@@193) 1)))
 :pattern ( ($generated@@51 ($generated@@17 $generated@@193 $generated@@194)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () Bool)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 () Bool)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Bool)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@219  (and (=> (= (ControlFlow 0 6) (- 0 9)) (exists (($generated@@220 T@U) )  (and ($generated@@105 $generated@@220 $generated@@195) (and ($generated@@18 $generated@@196 $generated@@220) (or (not (= $generated@@220 $generated@@197)) (not true)))))) (=> (exists (($generated@@221 T@U) )  (and ($generated@@105 $generated@@221 $generated@@195) (and ($generated@@18 $generated@@196 $generated@@221) (or (not (= $generated@@221 $generated@@197)) (not true))))) (=> (=> true (and ($generated@@105 $generated@@198 $generated@@195) ($generated@@109 $generated@@198 $generated@@195 $generated@@199))) (=> (and ($generated@@18 $generated@@196 $generated@@198) (or (not (= $generated@@198 $generated@@197)) (not true))) (and (=> (= (ControlFlow 0 6) (- 0 8)) true) (=> (= $generated@@200 ($generated@@34 $generated@@196 ($generated@@17 $generated@@38 $generated@@198))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (<= 0 $generated@@201) (= ($generated@@51 ($generated@@34 $generated@@200 $generated@@202)) $generated@@201))) (=> (or (<= 0 $generated@@201) (= ($generated@@51 ($generated@@34 $generated@@200 $generated@@202)) $generated@@201)) (=> (= (ControlFlow 0 6) (- 0 5)) (< ($generated@@51 ($generated@@34 $generated@@200 $generated@@202)) $generated@@201))))))))))))
(let (($generated@@222  (=> (= (ControlFlow 0 11) 6) $generated@@219)))
(let (($generated@@223  (=> (and (not ($generated@@18 $generated@@196 $generated@@203)) (= (ControlFlow 0 13) 11)) $generated@@222)))
(let (($generated@@224  (=> (and ($generated@@18 $generated@@196 $generated@@203) (= (ControlFlow 0 12) 11)) $generated@@222)))
(let (($generated@@225  (=> (and ($generated@@105 $generated@@203 $generated@@195) ($generated@@109 $generated@@203 $generated@@195 $generated@@199)) (and (=> (= (ControlFlow 0 14) 12) $generated@@224) (=> (= (ControlFlow 0 14) 13) $generated@@223)))))
(let (($generated@@226  (=> (and (not (and ($generated@@105 $generated@@203 $generated@@195) ($generated@@109 $generated@@203 $generated@@195 $generated@@199))) (= (ControlFlow 0 10) 6)) $generated@@219)))
(let (($generated@@227  (=> (and (and ($generated@@91 $generated@@202 $generated@@196) (not ($generated@@91 $generated@@196 $generated@@202))) (= $generated@@201 ($generated@@51 ($generated@@34 $generated@@196 $generated@@202)))) (and (=> (= (ControlFlow 0 15) 14) $generated@@225) (=> (= (ControlFlow 0 15) 10) $generated@@226)))))
(let (($generated@@228 true))
(let (($generated@@229  (=> $generated@@204 (and (=> (= (ControlFlow 0 16) 4) $generated@@228) (=> (= (ControlFlow 0 16) 15) $generated@@227)))))
(let (($generated@@230  (=> (not $generated@@204) (=> (and (= $generated@@205 ($generated@@51 ($generated@@34 $generated@@196 $generated@@202))) (= (ControlFlow 0 3) (- 0 2))) (<= ($generated@@86 0) $generated@@205)))))
(let (($generated@@231  (and (=> (= (ControlFlow 0 17) 3) $generated@@230) (=> (= (ControlFlow 0 17) 16) $generated@@229))))
(let (($generated@@232 true))
(let (($generated@@233  (=> (=> $generated@@206 (and ($generated@@105 $generated@@207 $generated@@195) ($generated@@109 $generated@@207 $generated@@195 $generated@@199))) (=> (and (and (and ($generated@@102 $generated@@103 $generated@@196 ($generated@@104 $generated@@195)) ($generated@@110 $generated@@103 $generated@@196 ($generated@@104 $generated@@195) $generated@@199)) (not false)) (and (and (forall (($generated@@234 T@U) ) (!  (=> (and (or (not (= $generated@@234 $generated@@208)) (not true)) ($generated@@6 ($generated@@62 $generated@@2 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@199 $generated@@234) $generated@@0)))) (= ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@199 $generated@@234) ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@199 $generated@@234)))
 :pattern ( ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@199 $generated@@234))
)) ($generated@@56 $generated@@199 $generated@@199)) (and (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (or (not (= $generated@@235 $generated@@208)) (not true)) ($generated@@6 ($generated@@62 $generated@@2 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@199 $generated@@235) $generated@@0)))) (or (= ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@199 $generated@@235) $generated@@236) ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@199 $generated@@235) $generated@@236)) ($generated@@6 ($generated@@152 $generated@@60 $generated@@58 $generated@@2 $generated@@209 $generated@@235 $generated@@236))))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@199 $generated@@235) $generated@@236))
)) (<= ($generated@@51 ($generated@@34 $generated@@196 $generated@@202)) $generated@@210)))) (and (=> (= (ControlFlow 0 18) 1) $generated@@232) (=> (= (ControlFlow 0 18) 17) $generated@@231))))))
(let (($generated@@237  (=> (and (and (= $generated@@209 ($generated@@153 $generated@@208 $generated@@199 $generated@@0 false)) (= $generated@@202 ($generated@@17 $generated@@38 $generated@@197))) (and (= $generated@@210 ($generated@@51 ($generated@@34 $generated@@211 $generated@@202))) (= (ControlFlow 0 19) 18))) $generated@@233)))
(let (($generated@@238  (=> (and ($generated@@212 $generated@@199) ($generated@@213 $generated@@199)) (=> (and (and (and (and ($generated@@102 $generated@@103 $generated@@211 ($generated@@104 $generated@@195)) ($generated@@110 $generated@@103 $generated@@211 ($generated@@104 $generated@@195) $generated@@199)) (and ($generated@@105 $generated@@197 $generated@@195) ($generated@@109 $generated@@197 $generated@@195 $generated@@199))) (and (and ($generated@@102 $generated@@103 $generated@@214 ($generated@@104 $generated@@195)) ($generated@@110 $generated@@103 $generated@@214 ($generated@@104 $generated@@195) $generated@@199)) true)) (and (and (and ($generated@@102 $generated@@103 $generated@@215 ($generated@@104 $generated@@195)) ($generated@@110 $generated@@103 $generated@@215 ($generated@@104 $generated@@195) $generated@@199)) true) (and (and (=> $generated@@216 (and ($generated@@105 $generated@@217 $generated@@195) ($generated@@109 $generated@@217 $generated@@195 $generated@@199))) true) (and (= 0 $generated@@218) (= (ControlFlow 0 20) 19))))) $generated@@237))))
$generated@@238))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
