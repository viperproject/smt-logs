(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@36 () Int)
(declare-fun $generated@@37 (T@U T@U T@U) Bool)
(declare-fun $generated@@38 (T@U T@U T@U) Bool)
(declare-fun $generated@@39 (T@U T@U T@U) Bool)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@U T@U T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@U T@U T@U) Bool)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@95 (T@U) Int)
(declare-fun $generated@@96 (T@U) Int)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@T T@T) T@T)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@114 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@23 $generated@@24) $generated@@3))
(assert (= ($generated@@6 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
 :pattern ( ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ) (! ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32))
 :pattern ( ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32)))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@T) ) (! (= ($generated@@33 $generated@@35 $generated@@34) $generated@@34)
 :pattern ( ($generated@@33 $generated@@35 $generated@@34))
)))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> (or ($generated@@38 $generated@@42 ($generated@@33 $generated@@26 $generated@@43) ($generated@@33 $generated@@26 $generated@@44)) (and (< 2 $generated@@36) (and ($generated@@31 $generated@@26 $generated@@43 ($generated@@27 $generated@@42)) ($generated@@31 $generated@@26 $generated@@44 ($generated@@27 $generated@@42))))) (and (forall (($generated@@45 T@U) ) (!  (=> ($generated@@40 $generated@@45 $generated@@42) (and ($generated@@41 $generated@@42 $generated@@45 ($generated@@33 $generated@@26 $generated@@43)) (=> ($generated@@39 $generated@@42 $generated@@45 ($generated@@33 $generated@@26 $generated@@43)) ($generated@@41 $generated@@42 $generated@@45 ($generated@@33 $generated@@26 $generated@@44)))))
 :pattern ( ($generated@@39 $generated@@42 $generated@@45 $generated@@44))
 :pattern ( ($generated@@39 $generated@@42 $generated@@45 $generated@@43))
)) (= ($generated@@37 $generated@@42 ($generated@@33 $generated@@26 $generated@@43) ($generated@@33 $generated@@26 $generated@@44)) (forall (($generated@@46 T@U) ) (!  (=> ($generated@@40 $generated@@46 $generated@@42) (=> ($generated@@39 $generated@@42 $generated@@46 ($generated@@33 $generated@@26 $generated@@43)) ($generated@@39 $generated@@42 $generated@@46 ($generated@@33 $generated@@26 $generated@@44))))
 :pattern ( ($generated@@39 $generated@@42 $generated@@46 $generated@@44))
 :pattern ( ($generated@@39 $generated@@42 $generated@@46 $generated@@43))
)))))
 :weight 3
 :pattern ( ($generated@@37 $generated@@42 ($generated@@33 $generated@@26 $generated@@43) ($generated@@33 $generated@@26 $generated@@44)))
))))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@31 $generated@@26 ($generated@@47 $generated@@49 $generated@@50) ($generated@@27 $generated@@48))  (and ($generated@@40 $generated@@49 $generated@@48) ($generated@@31 $generated@@26 $generated@@50 ($generated@@27 $generated@@48))))
 :pattern ( ($generated@@31 $generated@@26 ($generated@@47 $generated@@49 $generated@@50) ($generated@@27 $generated@@48)))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 $generated@@52) (= ($generated@@23 $generated@@52) $generated@@3))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@53 $generated@@54) (= ($generated@@23 $generated@@54) $generated@@4))
 :pattern ( ($generated@@53 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 ($generated@@55 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@55 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@53 $generated@@59) (exists (($generated@@60 T@U) ($generated@@61 T@U) ) (= $generated@@59 ($generated@@47 $generated@@60 $generated@@61))))
 :pattern ( ($generated@@53 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@51 $generated@@62) (= $generated@@62 $generated@@24))
 :pattern ( ($generated@@51 $generated@@62))
)))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (or ($generated@@38 $generated@@63 $generated@@64 $generated@@65) (and (< 2 $generated@@36) (and ($generated@@31 $generated@@26 $generated@@64 ($generated@@27 $generated@@63)) ($generated@@31 $generated@@26 $generated@@65 ($generated@@27 $generated@@63))))) (and (forall (($generated@@66 T@U) ) (!  (=> ($generated@@40 $generated@@66 $generated@@63) (and ($generated@@41 $generated@@63 $generated@@66 $generated@@64) (=> ($generated@@39 $generated@@63 $generated@@66 $generated@@64) ($generated@@41 $generated@@63 $generated@@66 $generated@@65))))
 :pattern ( ($generated@@39 $generated@@63 $generated@@66 $generated@@65))
 :pattern ( ($generated@@39 $generated@@63 $generated@@66 $generated@@64))
)) (= ($generated@@37 $generated@@63 $generated@@64 $generated@@65) (forall (($generated@@67 T@U) ) (!  (=> ($generated@@40 $generated@@67 $generated@@63) (=> ($generated@@39 $generated@@63 $generated@@67 $generated@@64) ($generated@@39 $generated@@63 $generated@@67 $generated@@65)))
 :pattern ( ($generated@@39 $generated@@63 $generated@@67 $generated@@65))
 :pattern ( ($generated@@39 $generated@@63 $generated@@67 $generated@@64))
)))))
 :pattern ( ($generated@@37 $generated@@63 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@68 ($generated@@56 $generated@@72 $generated@@69) $generated@@70 $generated@@71) ($generated@@25 $generated@@72 $generated@@69 $generated@@70 $generated@@71))
 :pattern ( ($generated@@68 ($generated@@56 $generated@@72 $generated@@69) $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ) (!  (and (= ($generated@@22 ($generated@@27 $generated@@74)) $generated@@2) (= ($generated@@73 ($generated@@27 $generated@@74)) $generated@@5))
 :pattern ( ($generated@@27 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@75 $generated@@76) (or ($generated@@51 $generated@@76) ($generated@@53 $generated@@76)))
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@31 $generated@@26 $generated@@78 ($generated@@27 $generated@@77)) (or ($generated@@51 $generated@@78) ($generated@@53 $generated@@78)))
 :pattern ( ($generated@@53 $generated@@78) ($generated@@31 $generated@@26 $generated@@78 ($generated@@27 $generated@@77)))
 :pattern ( ($generated@@51 $generated@@78) ($generated@@31 $generated@@26 $generated@@78 ($generated@@27 $generated@@77)))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@40 $generated@@79 $generated) (and (= ($generated@@56 $generated@@8 ($generated@@55 $generated@@8 $generated@@79)) $generated@@79) ($generated@@31 $generated@@8 ($generated@@55 $generated@@8 $generated@@79) $generated)))
 :pattern ( ($generated@@40 $generated@@79 $generated))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@40 ($generated@@56 $generated@@82 $generated@@80) $generated@@81) ($generated@@31 $generated@@82 $generated@@80 $generated@@81))
 :pattern ( ($generated@@40 ($generated@@56 $generated@@82 $generated@@80) $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@23 ($generated@@47 $generated@@83 $generated@@84)) $generated@@4)
 :pattern ( ($generated@@47 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@85 ($generated@@47 $generated@@86 $generated@@87)) $generated@@86)
 :pattern ( ($generated@@47 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 ($generated@@47 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@47 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@91 ($generated@@27 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@27 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@55 $generated@@94 ($generated@@56 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@56 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (< ($generated@@95 $generated@@97) ($generated@@96 ($generated@@47 $generated@@97 $generated@@98)))
 :pattern ( ($generated@@47 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (< ($generated@@96 $generated@@100) ($generated@@96 ($generated@@47 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@47 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@28 $generated@@103) (and ($generated@@53 $generated@@101) ($generated@@25 $generated@@26 $generated@@101 ($generated@@27 $generated@@102) $generated@@103))) ($generated@@68 ($generated@@85 $generated@@101) $generated@@102 $generated@@103))
 :pattern ( ($generated@@68 ($generated@@85 $generated@@101) $generated@@102 $generated@@103))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@104 $generated@@115 $generated@@116 $generated@@117 ($generated@@111 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@120 $generated@@121) $generated@@118)
 :weight 0
)) (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@104 $generated@@122 $generated@@123 $generated@@124 ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@104 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@104 $generated@@131 $generated@@132 $generated@@133 ($generated@@111 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@104 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)))) (= ($generated@@6 $generated@@105) 4)) (= ($generated@@6 $generated@@106) 5)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@108 $generated@@140 $generated@@141 ($generated@@112 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@142) $generated@@144) $generated@@142)
 :weight 0
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@108 $generated@@145 $generated@@146 ($generated@@112 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@108 $generated@@145 $generated@@146 $generated@@148 $generated@@150)))
 :weight 0
))) (= ($generated@@6 $generated@@109) 6)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (= ($generated@@6 ($generated@@110 $generated@@151 $generated@@152)) 7))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@113 ($generated@@110 $generated@@153 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@110 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@114 ($generated@@110 $generated@@155 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@110 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@11 ($generated@@104 $generated@@105 $generated@@106 $generated@@7 ($generated@@107 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@11 ($generated@@55 $generated@@7 ($generated@@108 $generated@@106 $generated@@109 ($generated@@108 $generated@@105 ($generated@@110 $generated@@106 $generated@@109) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@104 $generated@@105 $generated@@106 $generated@@7 ($generated@@107 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@95 ($generated@@56 $generated@@26 $generated@@163)) ($generated@@96 $generated@@163))
 :pattern ( ($generated@@95 ($generated@@56 $generated@@26 $generated@@163)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> ($generated@@40 $generated@@165 ($generated@@27 $generated@@164)) (and (= ($generated@@56 $generated@@26 ($generated@@55 $generated@@26 $generated@@165)) $generated@@165) ($generated@@31 $generated@@26 ($generated@@55 $generated@@26 $generated@@165) ($generated@@27 $generated@@164))))
 :pattern ( ($generated@@40 $generated@@165 ($generated@@27 $generated@@164)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and ($generated@@28 $generated@@168) (and ($generated@@53 $generated@@166) ($generated@@25 $generated@@26 $generated@@166 ($generated@@27 $generated@@167) $generated@@168))) ($generated@@25 $generated@@26 ($generated@@88 $generated@@166) ($generated@@27 $generated@@167) $generated@@168))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@88 $generated@@166) ($generated@@27 $generated@@167) $generated@@168))
)))
(assert (= $generated@@24 ($generated@@33 $generated@@26 $generated@@24)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@47 ($generated@@33 $generated@@109 $generated@@169) ($generated@@33 $generated@@26 $generated@@170)) ($generated@@33 $generated@@26 ($generated@@47 $generated@@169 $generated@@170)))
 :pattern ( ($generated@@47 ($generated@@33 $generated@@109 $generated@@169) ($generated@@33 $generated@@26 $generated@@170)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@T) ) (! (= ($generated@@56 $generated@@172 ($generated@@33 $generated@@172 $generated@@171)) ($generated@@33 $generated@@109 ($generated@@56 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@56 $generated@@172 ($generated@@33 $generated@@172 $generated@@171)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! ($generated@@25 $generated@@8 $generated@@174 $generated $generated@@173)
 :pattern ( ($generated@@25 $generated@@8 $generated@@174 $generated $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@28 $generated@@178) (= ($generated@@25 $generated@@26 ($generated@@47 $generated@@176 $generated@@177) ($generated@@27 $generated@@175) $generated@@178)  (and ($generated@@68 $generated@@176 $generated@@175 $generated@@178) ($generated@@25 $generated@@26 $generated@@177 ($generated@@27 $generated@@175) $generated@@178))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@47 $generated@@176 $generated@@177) ($generated@@27 $generated@@175) $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ) (! ($generated@@31 $generated@@8 $generated@@179 $generated)
 :pattern ( ($generated@@31 $generated@@8 $generated@@179 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@191  (=> (= $generated@@180 ($generated@@181 $generated@@182)) (=> (and (= $generated@@183 ($generated@@181 ($generated@@181 $generated@@182))) (= ($generated@@184 $generated@@182) $generated@@182)) (=> (and (and (and (= $generated@@185 ($generated@@107 $generated@@186 $generated@@187 $generated@@1 false)) ($generated@@25 $generated@@26 $generated@@188 ($generated@@27 $generated) $generated@@187)) (and ($generated@@25 $generated@@26 $generated@@189 ($generated@@27 $generated) $generated@@187) ($generated@@38 $generated $generated@@188 $generated@@189))) (and (and ($generated@@38 $generated $generated@@188 $generated@@189) (= (ControlFlow 0 2) (- 0 1))) ($generated@@38 $generated $generated@@188 $generated@@189))) (or ($generated@@37 $generated $generated@@188 $generated@@189) (forall (($generated@@192 Int) ) (!  (=> ($generated@@39 $generated ($generated@@56 $generated@@8 ($generated@@12 $generated@@192)) $generated@@188) ($generated@@39 $generated ($generated@@56 $generated@@8 ($generated@@12 $generated@@192)) $generated@@189))
 :pattern ( ($generated@@39 $generated ($generated@@56 $generated@@8 ($generated@@12 $generated@@192)) $generated@@189))
 :pattern ( ($generated@@39 $generated ($generated@@56 $generated@@8 ($generated@@12 $generated@@192)) $generated@@188))
))))))))
(let (($generated@@193  (=> (and ($generated@@28 $generated@@187) ($generated@@190 $generated@@187)) (=> (and (and ($generated@@31 $generated@@26 $generated@@188 ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@188 ($generated@@27 $generated) $generated@@187)) ($generated@@75 $generated@@188)) (=> (and (and (and (and ($generated@@31 $generated@@26 $generated@@189 ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@189 ($generated@@27 $generated) $generated@@187)) ($generated@@75 $generated@@189)) (= 3 $generated@@36)) (and (forall (($generated@@194 T@U) ) (!  (=> ($generated@@39 $generated ($generated@@56 $generated@@8 $generated@@194) $generated@@188) ($generated@@39 $generated ($generated@@56 $generated@@8 $generated@@194) $generated@@189))
 :pattern ( ($generated@@39 $generated ($generated@@56 $generated@@8 $generated@@194) $generated@@189))
 :pattern ( ($generated@@39 $generated ($generated@@56 $generated@@8 $generated@@194) $generated@@188))
)) (= (ControlFlow 0 3) 2))) $generated@@191)))))
$generated@@193)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
