(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U T@U Int) T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T T@T) T@T)
(declare-fun $generated@@50 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@82 (Int) Int)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@87 () Int)
(declare-fun $generated@@88 (T@U T@U Int) Bool)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) Bool)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated@@1) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@27 $generated@@1) $generated@@2))
(assert (= ($generated@@9 $generated@@29) 3))
(assert (forall (($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@33 $generated@@30)  (or (= $generated@@33 $generated@@31) (= ($generated@@32 $generated@@33) $generated@@30)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@33 $generated@@30))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@36 $generated@@35 $generated@@37) ($generated@@34 $generated@@29 $generated@@36 $generated@@30 $generated@@37))
 :pattern ( ($generated@@34 $generated@@29 $generated@@36 $generated@@35 $generated@@37))
 :pattern ( ($generated@@34 $generated@@29 $generated@@36 $generated@@30 $generated@@37))
)))
(assert (= ($generated@@25 $generated@@38) 0))
(assert (= ($generated@@39 $generated@@3 $generated@@7) $generated@@38))
(assert  (not ($generated@@40 $generated@@38)))
(assert (= ($generated@@25 $generated@@41) 0))
(assert (= ($generated@@39 $generated@@3 $generated@@8) $generated@@41))
(assert  (not ($generated@@40 $generated@@41)))
(assert  (and (and (and (and (and (and (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@46 $generated@@53 $generated@@54 ($generated@@50 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@57) $generated@@55)
 :weight 0
)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (or (= $generated@@62 $generated@@63) (= ($generated@@46 $generated@@58 $generated@@59 ($generated@@50 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@63) ($generated@@46 $generated@@58 $generated@@59 $generated@@61 $generated@@63)))
 :weight 0
))) (= ($generated@@9 $generated@@47) 4)) (= ($generated@@9 $generated@@48) 5)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (= ($generated@@9 ($generated@@49 $generated@@64 $generated@@65)) 6))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@51 ($generated@@49 $generated@@66 $generated@@67)) $generated@@66)
 :pattern ( ($generated@@49 $generated@@66 $generated@@67))
))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@52 ($generated@@49 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@49 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 Int) ) (!  (=> (and (and (and ($generated@@45 $generated@@70) ($generated@@45 $generated@@71)) (and (or (not (= $generated@@72 $generated@@31)) (not true)) ($generated@@28 $generated@@29 $generated@@72 $generated@@35))) (and ($generated@@42 $generated@@70) ($generated@@43 $generated@@70 $generated@@71))) (=> (forall (($generated@@74 T@U) ($generated@@75 T@U) )  (=> (and (or (not (= $generated@@74 $generated@@31)) (not true)) (= $generated@@74 $generated@@72)) (= ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@70 $generated@@74) $generated@@75) ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@71 $generated@@74) $generated@@75)))) (= ($generated@@44 $generated@@70 $generated@@72 $generated@@73) ($generated@@44 $generated@@71 $generated@@72 $generated@@73))))
 :pattern ( ($generated@@42 $generated@@70) ($generated@@43 $generated@@70 $generated@@71) ($generated@@44 $generated@@71 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@77 $generated@@30 $generated@@78)  (or (= $generated@@77 $generated@@31) ($generated@@14 ($generated@@76 $generated@@10 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@78 $generated@@77) $generated@@1)))))
 :pattern ( ($generated@@34 $generated@@29 $generated@@77 $generated@@30 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> ($generated@@43 $generated@@79 $generated@@80) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@14 ($generated@@76 $generated@@10 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@79 $generated@@81) $generated@@1))) ($generated@@14 ($generated@@76 $generated@@10 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@80 $generated@@81) $generated@@1))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@80 $generated@@81) $generated@@1))
)))
 :pattern ( ($generated@@43 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@83 Int) ) (! (= ($generated@@82 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@86 $generated@@85))
)))
(assert  (=> (<= 0 $generated@@87) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 Int) ) (!  (=> (or ($generated@@88 $generated@@89 $generated@@90 $generated@@91) (and (< 0 $generated@@87) (and (and (and ($generated@@45 $generated@@89) (or (not (= $generated@@90 $generated@@31)) (not true))) ($generated@@34 $generated@@29 $generated@@90 $generated@@35 $generated@@89)) (<= ($generated@@82 0) $generated@@91)))) ($generated@@34 $generated@@29 ($generated@@44 $generated@@89 $generated@@90 $generated@@91) $generated@@30 $generated@@89))
 :pattern ( ($generated@@34 $generated@@29 ($generated@@44 $generated@@89 $generated@@90 $generated@@91) $generated@@30 $generated@@89))
))))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@76 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@76 $generated@@94 $generated@@93))
)))
(assert ($generated@@40 $generated@@1))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and (and ($generated@@45 $generated@@95) (and (or (not (= $generated@@96 $generated@@31)) (not true)) (= ($generated@@32 $generated@@96) $generated@@30))) ($generated@@14 ($generated@@76 $generated@@10 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@95 $generated@@96) $generated@@1)))) ($generated@@34 $generated@@11 ($generated@@76 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@95 $generated@@96) $generated@@38)) $generated $generated@@95))
 :pattern ( ($generated@@76 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@95 $generated@@96) $generated@@38)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@97 ($generated@@92 $generated@@101 $generated@@98) $generated@@99 $generated@@100) ($generated@@34 $generated@@101 $generated@@98 $generated@@99 $generated@@100))
 :pattern ( ($generated@@97 ($generated@@92 $generated@@101 $generated@@98) $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> ($generated@@43 $generated@@102 $generated@@103) (=> ($generated@@97 $generated@@104 $generated@@105 $generated@@102) ($generated@@97 $generated@@104 $generated@@105 $generated@@103)))
 :pattern ( ($generated@@43 $generated@@102 $generated@@103) ($generated@@97 $generated@@104 $generated@@105 $generated@@102))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (!  (=> ($generated@@43 $generated@@106 $generated@@107) (=> ($generated@@34 $generated@@110 $generated@@108 $generated@@109 $generated@@106) ($generated@@34 $generated@@110 $generated@@108 $generated@@109 $generated@@107)))
 :pattern ( ($generated@@43 $generated@@106 $generated@@107) ($generated@@34 $generated@@110 $generated@@108 $generated@@109 $generated@@106))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (and ($generated@@45 $generated@@111) (and (or (not (= $generated@@112 $generated@@31)) (not true)) (= ($generated@@32 $generated@@112) $generated@@30))) ($generated@@28 $generated@@29 ($generated@@76 $generated@@29 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@111 $generated@@112) $generated@@41)) $generated@@30))
 :pattern ( ($generated@@76 $generated@@29 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@111 $generated@@112) $generated@@41)))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@113 $generated@@35)  (and ($generated@@28 $generated@@29 $generated@@113 $generated@@30) (or (not (= $generated@@113 $generated@@31)) (not true))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@113 $generated@@35))
 :pattern ( ($generated@@28 $generated@@29 $generated@@113 $generated@@30))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and (and ($generated@@45 $generated@@114) (and (or (not (= $generated@@115 $generated@@31)) (not true)) (= ($generated@@32 $generated@@115) $generated@@30))) ($generated@@14 ($generated@@76 $generated@@10 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@114 $generated@@115) $generated@@1)))) ($generated@@34 $generated@@29 ($generated@@76 $generated@@29 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@114 $generated@@115) $generated@@41)) $generated@@30 $generated@@114))
 :pattern ( ($generated@@76 $generated@@29 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@114 $generated@@115) $generated@@41)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or (not (= $generated@@116 $generated@@118)) (not true)) (=> (and ($generated@@43 $generated@@116 $generated@@117) ($generated@@43 $generated@@117 $generated@@118)) ($generated@@43 $generated@@116 $generated@@118)))
 :pattern ( ($generated@@43 $generated@@116 $generated@@117) ($generated@@43 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (and (= ($generated@@119 ($generated@@39 $generated@@120 $generated@@121)) $generated@@120) (= ($generated@@27 ($generated@@39 $generated@@120 $generated@@121)) $generated@@121))
 :pattern ( ($generated@@39 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@76 $generated@@123 ($generated@@92 $generated@@123 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@92 $generated@@123 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (and ($generated@@45 $generated@@124) (and (or (not (= $generated@@125 $generated@@31)) (not true)) (= ($generated@@32 $generated@@125) $generated@@30))) ($generated@@28 $generated@@11 ($generated@@76 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@124 $generated@@125) $generated@@38)) $generated))
 :pattern ( ($generated@@76 $generated@@11 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@124 $generated@@125) $generated@@38)))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@45 ($generated@@50 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@126 $generated@@127 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@126 $generated@@127) $generated@@128 $generated@@129))) ($generated@@43 $generated@@126 ($generated@@50 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@126 $generated@@127 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@126 $generated@@127) $generated@@128 $generated@@129))))
 :pattern ( ($generated@@50 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@126 $generated@@127 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@126 $generated@@127) $generated@@128 $generated@@129)))
)))
(assert (= ($generated@@26 $generated@@30) $generated@@4))
(assert (= ($generated@@130 $generated@@30) $generated@@6))
(assert (= ($generated@@26 $generated@@35) $generated@@5))
(assert (= ($generated@@130 $generated@@35) $generated@@6))
(assert  (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@131 $generated@@134 $generated@@135 $generated@@136 ($generated@@133 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@139 $generated@@140) $generated@@137)
 :weight 0
)) (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@131 $generated@@141 $generated@@142 $generated@@143 ($generated@@133 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@131 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@131 $generated@@150 $generated@@151 $generated@@152 ($generated@@133 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@131 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@14 ($generated@@131 $generated@@29 $generated@@47 $generated@@10 ($generated@@132 $generated@@159 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))  (=> (and (or (not (= $generated@@164 $generated@@159)) (not true)) ($generated@@14 ($generated@@76 $generated@@10 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@160 $generated@@164) $generated@@161)))) (or (= $generated@@164 $generated@@162) (= $generated@@164 $generated@@163))))
 :pattern ( ($generated@@131 $generated@@29 $generated@@47 $generated@@10 ($generated@@132 $generated@@159 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))
)))
(assert  (=> (<= 0 $generated@@87) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Int) ) (!  (=> (or ($generated@@88 $generated@@166 $generated@@167 $generated@@168) (and (< 0 $generated@@87) (and (and ($generated@@45 $generated@@166) (and (or (not (= $generated@@167 $generated@@31)) (not true)) (and ($generated@@28 $generated@@29 $generated@@167 $generated@@35) ($generated@@34 $generated@@29 $generated@@167 $generated@@35 $generated@@166)))) (<= ($generated@@82 0) $generated@@168)))) ($generated@@28 $generated@@29 ($generated@@44 $generated@@166 $generated@@167 $generated@@168) $generated@@30))
 :pattern ( ($generated@@44 $generated@@166 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 Int) ) (! (= ($generated@@92 $generated@@11 ($generated@@15 ($generated@@82 $generated@@169))) ($generated@@84 $generated@@48 ($generated@@92 $generated@@11 ($generated@@15 $generated@@169))))
 :pattern ( ($generated@@92 $generated@@11 ($generated@@15 ($generated@@82 $generated@@169))))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@92 $generated@@171 ($generated@@84 $generated@@171 $generated@@170)) ($generated@@84 $generated@@48 ($generated@@92 $generated@@171 $generated@@170)))
 :pattern ( ($generated@@92 $generated@@171 ($generated@@84 $generated@@171 $generated@@170)))
)))
(assert  (=> (<= 0 $generated@@87) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Int) ) (!  (=> (or ($generated@@88 $generated@@172 $generated@@173 $generated@@174) (and (< 0 $generated@@87) (and (and ($generated@@45 $generated@@172) (and (or (not (= $generated@@173 $generated@@31)) (not true)) (and ($generated@@28 $generated@@29 $generated@@173 $generated@@35) ($generated@@34 $generated@@29 $generated@@173 $generated@@35 $generated@@172)))) (<= ($generated@@82 0) $generated@@174)))) (= ($generated@@44 $generated@@172 $generated@@173 $generated@@174) ($generated@@76 $generated@@29 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@172 $generated@@173) $generated@@41))))
 :pattern ( ($generated@@44 $generated@@172 $generated@@173 $generated@@174) ($generated@@45 $generated@@172))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! ($generated@@34 $generated@@11 $generated@@176 $generated $generated@@175)
 :pattern ( ($generated@@34 $generated@@11 $generated@@176 $generated $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (! ($generated@@28 $generated@@11 $generated@@177 $generated)
 :pattern ( ($generated@@28 $generated@@11 $generated@@177 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@186  (=> (= $generated@@178 ($generated@@132 $generated@@31 $generated@@179 $generated@@1 $generated@@180 $generated@@181)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (or (not (= $generated@@181 $generated@@31)) (not true))) (=> (or (not (= $generated@@181 $generated@@31)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@14 ($generated@@131 $generated@@29 $generated@@47 $generated@@10 $generated@@178 $generated@@181 $generated@@38))) (=> ($generated@@14 ($generated@@131 $generated@@29 $generated@@47 $generated@@10 $generated@@178 $generated@@181 $generated@@38)) (=> (and (and (= $generated@@182 ($generated@@50 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@179 $generated@@181 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@179 $generated@@181) $generated@@38 ($generated@@92 $generated@@11 ($generated@@15 $generated@@183))))) ($generated@@45 $generated@@182)) (and ($generated@@97 ($generated@@92 $generated@@29 $generated@@180) $generated@@30 $generated@@182) ($generated@@34 $generated@@11 ($generated@@15 $generated@@183) $generated $generated@@182))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (<= ($generated@@82 0) $generated@@183)) (=> (and (<= ($generated@@82 0) $generated@@183) ($generated@@88 $generated@@182 $generated@@180 $generated@@183)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (not (= ($generated@@44 $generated@@182 $generated@@180 $generated@@183) $generated@@31)) (not true))) (=> (or (not (= ($generated@@44 $generated@@182 $generated@@180 $generated@@183) $generated@@31)) (not true)) (=> ($generated@@88 $generated@@182 $generated@@180 $generated@@183) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@14 ($generated@@131 $generated@@29 $generated@@47 $generated@@10 $generated@@178 ($generated@@44 $generated@@182 $generated@@180 $generated@@183) $generated@@38))) (=> ($generated@@14 ($generated@@131 $generated@@29 $generated@@47 $generated@@10 $generated@@178 ($generated@@44 $generated@@182 $generated@@180 $generated@@183) $generated@@38)) (=> (and (= $generated@@184 ($generated@@50 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@182 ($generated@@44 $generated@@182 $generated@@180 $generated@@183) ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@29 ($generated@@49 $generated@@47 $generated@@48) $generated@@182 ($generated@@44 $generated@@182 $generated@@180 $generated@@183)) $generated@@38 ($generated@@92 $generated@@11 ($generated@@15 $generated@@183))))) ($generated@@45 $generated@@184)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@14 ($generated@@131 $generated@@29 $generated@@47 $generated@@10 $generated@@178 $generated@@180 $generated@@38))) (=> ($generated@@14 ($generated@@131 $generated@@29 $generated@@47 $generated@@10 $generated@@178 $generated@@180 $generated@@38)) (=> ($generated@@97 ($generated@@92 $generated@@29 $generated@@180) $generated@@30 $generated@@184) (=> (and (= $generated@@185 (- $generated@@183 10)) ($generated@@34 $generated@@11 ($generated@@15 $generated@@185) $generated $generated@@184)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@82 0) $generated@@185)) (=> (<= ($generated@@82 0) $generated@@185) (=> (and ($generated@@88 $generated@@184 $generated@@180 (- $generated@@183 10)) (= (ControlFlow 0 2) (- 0 1))) (or (not (= ($generated@@44 $generated@@184 $generated@@180 (- $generated@@183 10)) $generated@@31)) (not true)))))))))))))))))))))))))
(let (($generated@@187  (=> (and (and (and ($generated@@45 $generated@@179) ($generated@@42 $generated@@179)) (and (or (not (= $generated@@180 $generated@@31)) (not true)) (and ($generated@@28 $generated@@29 $generated@@180 $generated@@35) ($generated@@34 $generated@@29 $generated@@180 $generated@@35 $generated@@179)))) (and (and ($generated@@28 $generated@@29 $generated@@181 $generated@@30) ($generated@@34 $generated@@29 $generated@@181 $generated@@30 $generated@@179)) (and (= 1 $generated@@87) (= (ControlFlow 0 10) 2)))) $generated@@186)))
$generated@@187)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 7))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 6))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 5))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
