(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@34 (Int) Int)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@39 () Int)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@T T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (Int Int) Int)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@56 (Int) T@U)
(declare-fun $generated@@59 (Int) T@U)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@76 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@80 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@84 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@135 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> (and ($generated@@24 $generated@@26) ($generated@@24 $generated@@27)) (= ($generated@@23 $generated@@26 $generated@@27) (= ($generated@@25 $generated@@26) ($generated@@25 $generated@@27))))
 :pattern ( ($generated@@23 $generated@@26 $generated@@27) ($generated@@24 $generated@@26))
 :pattern ( ($generated@@23 $generated@@26 $generated@@27) ($generated@@24 $generated@@27))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and ($generated@@28 $generated@@30) ($generated@@28 $generated@@31)) (= ($generated@@23 $generated@@30 $generated@@31) (= ($generated@@29 $generated@@30) ($generated@@29 $generated@@31))))
 :pattern ( ($generated@@23 $generated@@30 $generated@@31) ($generated@@28 $generated@@30))
 :pattern ( ($generated@@23 $generated@@30 $generated@@31) ($generated@@28 $generated@@31))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@23 $generated@@32 $generated@@33) (= $generated@@32 $generated@@33))
 :pattern ( ($generated@@23 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 Int) ) (! (= ($generated@@34 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@T) ) (! (= ($generated@@36 $generated@@38 $generated@@37) $generated@@37)
 :pattern ( ($generated@@36 $generated@@38 $generated@@37))
)))
(assert (= ($generated@@6 $generated@@41) 3))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@46 T@U) ) (!  (=> (or ($generated@@42 ($generated@@36 $generated@@41 $generated@@46)) (and (< 1 $generated@@39) ($generated@@43 $generated@@41 $generated@@46 $generated@@44))) (= ($generated@@40 ($generated@@36 $generated@@41 $generated@@46)) (ite ($generated@@24 ($generated@@36 $generated@@41 $generated@@46)) (let (($generated@@47 ($generated@@34 ($generated@@25 ($generated@@36 $generated@@41 $generated@@46)))))
$generated@@47) (let (($generated@@48 ($generated@@34 ($generated@@29 ($generated@@36 $generated@@41 $generated@@46)))))
($generated@@34 ($generated@@45 ($generated@@34 2) $generated@@48))))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@36 $generated@@41 $generated@@46)))
))))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@24 $generated@@50) (= ($generated@@49 $generated@@50) $generated@@3))
 :pattern ( ($generated@@24 $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@28 $generated@@51) (= ($generated@@49 $generated@@51) $generated@@4))
 :pattern ( ($generated@@28 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 ($generated@@52 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@52 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@24 $generated@@57) (exists (($generated@@58 Int) ) (= $generated@@57 ($generated@@56 $generated@@58))))
 :pattern ( ($generated@@24 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@28 $generated@@60) (exists (($generated@@61 Int) ) (= $generated@@60 ($generated@@59 $generated@@61))))
 :pattern ( ($generated@@28 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ) (!  (=> ($generated@@62 $generated@@63) (or ($generated@@24 $generated@@63) ($generated@@28 $generated@@63)))
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@43 $generated@@41 $generated@@64 $generated@@44) (or ($generated@@24 $generated@@64) ($generated@@28 $generated@@64)))
 :pattern ( ($generated@@28 $generated@@64) ($generated@@43 $generated@@41 $generated@@64 $generated@@44))
 :pattern ( ($generated@@24 $generated@@64) ($generated@@43 $generated@@41 $generated@@64 $generated@@44))
)))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@49 ($generated@@56 $generated@@65)) $generated@@3)
 :pattern ( ($generated@@56 $generated@@65))
)))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@25 ($generated@@56 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@56 $generated@@66))
)))
(assert (forall (($generated@@67 Int) ) (! (= ($generated@@49 ($generated@@59 $generated@@67)) $generated@@4)
 :pattern ( ($generated@@59 $generated@@67))
)))
(assert (forall (($generated@@68 Int) ) (! (= ($generated@@29 ($generated@@59 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@59 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@52 $generated@@70 ($generated@@53 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@53 $generated@@70 $generated@@69))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@71 T@U) ) (!  (=> (or ($generated@@42 $generated@@71) (and (< 1 $generated@@39) ($generated@@43 $generated@@41 $generated@@71 $generated@@44))) (= ($generated@@40 $generated@@71) (ite ($generated@@24 $generated@@71) (let (($generated@@72 ($generated@@25 $generated@@71)))
$generated@@72) (let (($generated@@73 ($generated@@29 $generated@@71)))
($generated@@45 ($generated@@34 2) $generated@@73)))))
 :pattern ( ($generated@@40 $generated@@71))
))))
(assert (forall (($generated@@74 Int) ) (! (= ($generated@@43 $generated@@41 ($generated@@56 $generated@@74) $generated@@44) ($generated@@43 $generated@@8 ($generated@@12 $generated@@74) $generated))
 :pattern ( ($generated@@43 $generated@@41 ($generated@@56 $generated@@74) $generated@@44))
)))
(assert (forall (($generated@@75 Int) ) (! (= ($generated@@43 $generated@@41 ($generated@@59 $generated@@75) $generated@@44) ($generated@@43 $generated@@8 ($generated@@12 $generated@@75) $generated))
 :pattern ( ($generated@@43 $generated@@41 ($generated@@59 $generated@@75) $generated@@44))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@76 $generated@@87 $generated@@88 $generated@@89 ($generated@@83 $generated@@87 $generated@@88 $generated@@89 $generated@@91 $generated@@92 $generated@@93 $generated@@90) $generated@@92 $generated@@93) $generated@@90)
 :weight 0
)) (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@99 $generated@@101) (= ($generated@@76 $generated@@94 $generated@@95 $generated@@96 ($generated@@83 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@99 $generated@@100 $generated@@97) $generated@@101 $generated@@102) ($generated@@76 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@101 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@76 $generated@@103 $generated@@104 $generated@@105 ($generated@@83 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@76 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)))) (= ($generated@@6 $generated@@77) 4)) (= ($generated@@6 $generated@@78) 5)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@80 $generated@@112 $generated@@113 ($generated@@84 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@114) $generated@@116) $generated@@114)
 :weight 0
))) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@80 $generated@@117 $generated@@118 ($generated@@84 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@80 $generated@@117 $generated@@118 $generated@@120 $generated@@122)))
 :weight 0
))) (= ($generated@@6 $generated@@81) 6)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (= ($generated@@6 ($generated@@82 $generated@@123 $generated@@124)) 7))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@82 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@82 $generated@@127 $generated@@128))
))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 Bool) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@11 ($generated@@76 $generated@@77 $generated@@78 $generated@@7 ($generated@@79 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))  (=> (and (or (not (= $generated@@133 $generated@@129)) (not true)) ($generated@@11 ($generated@@52 $generated@@7 ($generated@@80 $generated@@78 $generated@@81 ($generated@@80 $generated@@77 ($generated@@82 $generated@@78 $generated@@81) $generated@@130 $generated@@133) $generated@@131)))) $generated@@132))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78 $generated@@7 ($generated@@79 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and ($generated@@136 $generated@@138) (and ($generated@@24 $generated@@137) ($generated@@135 $generated@@41 $generated@@137 $generated@@44 $generated@@138))) ($generated@@135 $generated@@8 ($generated@@12 ($generated@@25 $generated@@137)) $generated $generated@@138))
 :pattern ( ($generated@@135 $generated@@8 ($generated@@12 ($generated@@25 $generated@@137)) $generated $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and ($generated@@136 $generated@@140) (and ($generated@@28 $generated@@139) ($generated@@135 $generated@@41 $generated@@139 $generated@@44 $generated@@140))) ($generated@@135 $generated@@8 ($generated@@12 ($generated@@29 $generated@@139)) $generated $generated@@140))
 :pattern ( ($generated@@135 $generated@@8 ($generated@@12 ($generated@@29 $generated@@139)) $generated $generated@@140))
)))
(assert (forall (($generated@@141 Int) ($generated@@142 Int) ) (! (= ($generated@@45 $generated@@141 $generated@@142) (* $generated@@141 $generated@@142))
 :pattern ( ($generated@@45 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and ($generated@@136 $generated@@144) ($generated@@43 $generated@@41 $generated@@143 $generated@@44)) ($generated@@135 $generated@@41 $generated@@143 $generated@@44 $generated@@144))
 :pattern ( ($generated@@135 $generated@@41 $generated@@143 $generated@@44 $generated@@144))
)))
(assert (= ($generated@@22 $generated@@44) $generated@@2))
(assert (= ($generated@@145 $generated@@44) $generated@@5))
(assert (forall (($generated@@146 Int) ) (! (= ($generated@@53 $generated@@8 ($generated@@12 ($generated@@34 $generated@@146))) ($generated@@36 $generated@@81 ($generated@@53 $generated@@8 ($generated@@12 $generated@@146))))
 :pattern ( ($generated@@53 $generated@@8 ($generated@@12 ($generated@@34 $generated@@146))))
)))
(assert (forall (($generated@@147 Int) ) (! (= ($generated@@56 ($generated@@34 $generated@@147)) ($generated@@36 $generated@@41 ($generated@@56 $generated@@147)))
 :pattern ( ($generated@@56 ($generated@@34 $generated@@147)))
)))
(assert (forall (($generated@@148 Int) ) (! (= ($generated@@59 ($generated@@34 $generated@@148)) ($generated@@36 $generated@@41 ($generated@@59 $generated@@148)))
 :pattern ( ($generated@@59 ($generated@@34 $generated@@148)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@53 $generated@@150 ($generated@@36 $generated@@150 $generated@@149)) ($generated@@36 $generated@@81 ($generated@@53 $generated@@150 $generated@@149)))
 :pattern ( ($generated@@53 $generated@@150 ($generated@@36 $generated@@150 $generated@@149)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! ($generated@@135 $generated@@8 $generated@@152 $generated $generated@@151)
 :pattern ( ($generated@@135 $generated@@8 $generated@@152 $generated $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! ($generated@@43 $generated@@8 $generated@@153 $generated)
 :pattern ( ($generated@@43 $generated@@8 $generated@@153 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 () Int)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 () Int)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 28) (let (($generated@@179  (=> (= (ControlFlow 0 22) (- 0 21)) (= (= ($generated@@40 $generated@@154) ($generated@@34 11)) (= (ite ($generated@@24 $generated@@154) (let (($generated@@180 ($generated@@25 $generated@@154)))
$generated@@180) (let (($generated@@181 ($generated@@29 $generated@@154)))
($generated@@45 ($generated@@34 2) $generated@@181))) ($generated@@34 11))))))
(let (($generated@@182  (=> (= $generated@@154 ($generated@@59 $generated@@155)) (=> (and (and (= $generated@@156 $generated@@155) ($generated@@43 $generated@@8 ($generated@@12 $generated@@156) $generated)) (and (= $generated@@157 $generated@@156) (= (ControlFlow 0 24) 22))) $generated@@179))))
(let (($generated@@183  (=> (= $generated@@154 ($generated@@56 $generated@@158)) (=> (and (and (= $generated@@159 $generated@@158) ($generated@@43 $generated@@8 ($generated@@12 $generated@@159) $generated)) (and (= $generated@@160 $generated@@159) (= (ControlFlow 0 23) 22))) $generated@@179))))
(let (($generated@@184 true))
(let (($generated@@185  (=> (or (not (= $generated@@154 ($generated@@56 $generated@@158))) (not true)) (and (=> (= (ControlFlow 0 25) 24) $generated@@182) (=> (= (ControlFlow 0 25) 20) $generated@@184)))))
(let (($generated@@186  (=> ($generated@@135 $generated@@41 $generated@@154 $generated@@44 $generated@@161) (=> (and ($generated@@42 $generated@@154) ($generated@@42 $generated@@154)) (and (=> (= (ControlFlow 0 26) 23) $generated@@183) (=> (= (ControlFlow 0 26) 25) $generated@@185))))))
(let (($generated@@187  (=> (and ($generated@@62 $generated@@154) (= (ControlFlow 0 16) (- 0 15))) (= (ite ($generated@@24 $generated@@154) (let (($generated@@188 ($generated@@25 $generated@@154)))
(= $generated@@188 ($generated@@34 11))) (let (($generated@@189 ($generated@@29 $generated@@154)))
(= ($generated@@45 ($generated@@34 2) $generated@@189) ($generated@@34 11)))) ($generated@@23 $generated@@154 ($generated@@56 ($generated@@34 11)))))))
(let (($generated@@190  (=> (= $generated@@154 ($generated@@59 $generated@@162)) (=> (and (and (= $generated@@163 $generated@@162) ($generated@@43 $generated@@8 ($generated@@12 $generated@@163) $generated)) (and (= $generated@@164 $generated@@163) (= (ControlFlow 0 18) 16))) $generated@@187))))
(let (($generated@@191  (=> (= $generated@@154 ($generated@@56 $generated@@165)) (=> (and (and (= $generated@@166 $generated@@165) ($generated@@43 $generated@@8 ($generated@@12 $generated@@166) $generated)) (and (= $generated@@167 $generated@@166) (= (ControlFlow 0 17) 16))) $generated@@187))))
(let (($generated@@192 true))
(let (($generated@@193  (=> (or (not (= $generated@@154 ($generated@@56 $generated@@165))) (not true)) (and (=> (= (ControlFlow 0 19) 18) $generated@@190) (=> (= (ControlFlow 0 19) 14) $generated@@192)))))
(let (($generated@@194  (=> (= (ControlFlow 0 6) (- 0 5)) (= (= (ite ($generated@@24 $generated@@154) (let (($generated@@195 ($generated@@25 $generated@@154)))
$generated@@195) (let (($generated@@196 ($generated@@29 $generated@@154)))
($generated@@45 ($generated@@34 2) $generated@@196))) ($generated@@34 11)) (ite ($generated@@24 $generated@@154) (let (($generated@@197 ($generated@@25 $generated@@154)))
(= $generated@@197 ($generated@@34 11))) (let (($generated@@198 ($generated@@29 $generated@@154)))
(= ($generated@@45 ($generated@@34 2) $generated@@198) ($generated@@34 11))))))))
(let (($generated@@199  (=> (= $generated@@154 ($generated@@59 $generated@@162)) (=> (and (and (= $generated@@168 $generated@@162) ($generated@@43 $generated@@8 ($generated@@12 $generated@@168) $generated)) (and (= $generated@@169 $generated@@168) (= (ControlFlow 0 8) 6))) $generated@@194))))
(let (($generated@@200  (=> (= $generated@@154 ($generated@@56 $generated@@165)) (=> (and (and (= $generated@@170 $generated@@165) ($generated@@43 $generated@@8 ($generated@@12 $generated@@170) $generated)) (and (= $generated@@171 $generated@@170) (= (ControlFlow 0 7) 6))) $generated@@194))))
(let (($generated@@201 true))
(let (($generated@@202  (=> (or (not (= $generated@@154 ($generated@@56 $generated@@165))) (not true)) (and (=> (= (ControlFlow 0 9) 8) $generated@@199) (=> (= (ControlFlow 0 9) 4) $generated@@201)))))
(let (($generated@@203  (and (=> (= (ControlFlow 0 10) 7) $generated@@200) (=> (= (ControlFlow 0 10) 9) $generated@@202))))
(let (($generated@@204  (=> (= $generated@@154 ($generated@@59 $generated@@155)) (=> (and (and (= $generated@@172 $generated@@155) ($generated@@43 $generated@@8 ($generated@@12 $generated@@172) $generated)) (and (= $generated@@173 $generated@@172) (= (ControlFlow 0 12) 10))) $generated@@203))))
(let (($generated@@205  (=> (= $generated@@154 ($generated@@56 $generated@@158)) (=> (and (and (= $generated@@174 $generated@@158) ($generated@@43 $generated@@8 ($generated@@12 $generated@@174) $generated)) (and (= $generated@@175 $generated@@174) (= (ControlFlow 0 11) 10))) $generated@@203))))
(let (($generated@@206 true))
(let (($generated@@207  (=> (or (not (= $generated@@154 ($generated@@56 $generated@@158))) (not true)) (and (=> (= (ControlFlow 0 13) 12) $generated@@204) (=> (= (ControlFlow 0 13) 3) $generated@@206)))))
(let (($generated@@208 true))
(let (($generated@@209 true))
(let (($generated@@210  (=> (= $generated@@176 ($generated@@79 $generated@@177 $generated@@161 $generated@@1 false)) (and (and (and (and (and (and (=> (= (ControlFlow 0 27) 1) $generated@@209) (=> (= (ControlFlow 0 27) 26) $generated@@186)) (=> (= (ControlFlow 0 27) 2) $generated@@208)) (=> (= (ControlFlow 0 27) 17) $generated@@191)) (=> (= (ControlFlow 0 27) 19) $generated@@193)) (=> (= (ControlFlow 0 27) 11) $generated@@205)) (=> (= (ControlFlow 0 27) 13) $generated@@207)))))
(let (($generated@@211  (=> (and ($generated@@136 $generated@@161) ($generated@@178 $generated@@161)) (=> (and (and (and ($generated@@43 $generated@@41 $generated@@154 $generated@@44) ($generated@@135 $generated@@41 $generated@@154 $generated@@44 $generated@@161)) ($generated@@62 $generated@@154)) (and (= 2 $generated@@39) (= (ControlFlow 0 28) 27))) $generated@@210))))
$generated@@211))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
