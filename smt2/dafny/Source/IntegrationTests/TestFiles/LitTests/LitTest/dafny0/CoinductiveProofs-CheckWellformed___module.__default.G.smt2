(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U) Int)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (Int) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (Int) T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@47 (T@U) Int)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@59 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@137 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@142 (T@T T@T) T@T)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@6 $generated@@26) 3))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (or ($generated@@24 $generated@@30 $generated@@31) (and (< 1 $generated@@22) ($generated@@25 $generated@@26 $generated@@31 ($generated@@27 $generated@@30)))) (= ($generated@@23 $generated@@30 $generated@@31) (ite ($generated@@28 $generated@@31) 0 ($generated@@29 0))))
 :pattern ( ($generated@@23 $generated@@30 $generated@@31))
))))
(assert (= ($generated@@32 $generated) $generated@@0))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (or (not (= $generated@@38 ($generated@@35 0))) (not true)) (= ($generated@@33 $generated@@36 $generated@@37 $generated@@38 ($generated@@34 $generated@@39) $generated@@40 $generated@@41) ($generated@@33 $generated@@36 $generated@@37 $generated@@38 $generated@@39 $generated@@40 $generated@@41)))
 :pattern ( ($generated@@33 $generated@@36 $generated@@37 $generated@@38 ($generated@@34 $generated@@39) $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (and ($generated@@42 $generated@@43 $generated@@44) ($generated@@42 $generated@@44 $generated@@45)) ($generated@@42 $generated@@43 $generated@@45))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44) ($generated@@42 $generated@@44 $generated@@45))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44) ($generated@@42 $generated@@43 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 Int) ($generated@@50 Int) ) (!  (=> (and (and (<= 0 $generated@@49) (<= 0 $generated@@50)) (<= (+ $generated@@49 $generated@@50) ($generated@@47 $generated@@48))) (= ($generated@@46 ($generated@@46 $generated@@48 ($generated@@35 $generated@@49)) ($generated@@35 $generated@@50)) ($generated@@46 $generated@@48 ($generated@@35 (+ $generated@@49 $generated@@50)))))
 :pattern ( ($generated@@46 ($generated@@46 $generated@@48 ($generated@@35 $generated@@49)) ($generated@@35 $generated@@50)))
)))
(assert (= ($generated@@51 $generated@@52) $generated@@3))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (= $generated@@57 $generated@@58) ($generated@@33 $generated@@53 $generated@@54 $generated@@55 ($generated@@34 $generated@@56) $generated@@57 $generated@@58))
 :pattern ( ($generated@@33 $generated@@53 $generated@@54 $generated@@55 ($generated@@34 $generated@@56) $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@59 $generated@@60 $generated@@61 ($generated@@34 $generated@@62) $generated@@63 $generated@@64) (= $generated@@63 $generated@@64))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61 ($generated@@34 $generated@@62) $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ) (! ($generated@@25 $generated@@26 $generated@@52 ($generated@@27 $generated@@65))
 :pattern ( ($generated@@25 $generated@@26 $generated@@52 ($generated@@27 $generated@@65)))
)))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@29 $generated@@66) $generated@@66)
 :pattern ( ($generated@@29 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@70 $generated@@73 $generated@@74) ($generated@@27 $generated@@72))  (and ($generated@@71 $generated@@73 $generated@@72) ($generated@@25 $generated@@26 $generated@@74 ($generated@@27 $generated@@72))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@70 $generated@@73 $generated@@74) ($generated@@27 $generated@@72)))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@28 $generated@@75) (= ($generated@@51 $generated@@75) $generated@@3))
 :pattern ( ($generated@@28 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@76 $generated@@77) (= ($generated@@51 $generated@@77) $generated@@4))
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 ($generated@@78 $generated@@81 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@78 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@76 $generated@@82) (exists (($generated@@83 T@U) ($generated@@84 T@U) ) (= $generated@@82 ($generated@@70 $generated@@83 $generated@@84))))
 :pattern ( ($generated@@76 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@28 $generated@@85) (= $generated@@85 $generated@@52))
 :pattern ( ($generated@@28 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (and ($generated@@25 $generated@@26 $generated@@92 ($generated@@27 $generated@@88)) ($generated@@25 $generated@@26 $generated@@93 ($generated@@27 $generated@@89))) (= ($generated@@33 $generated@@88 $generated@@89 $generated@@90 ($generated@@34 $generated@@91) $generated@@92 $generated@@93)  (and (=> (< 0 ($generated@@47 $generated@@90)) (or (and ($generated@@28 $generated@@92) ($generated@@28 $generated@@93)) (and (and ($generated@@76 $generated@@92) ($generated@@76 $generated@@93)) (=> (and ($generated@@76 $generated@@92) ($generated@@76 $generated@@93)) (and (= ($generated@@86 $generated@@92) ($generated@@86 $generated@@93)) ($generated@@33 $generated@@88 $generated@@89 ($generated@@46 $generated@@90 ($generated@@35 1)) $generated@@91 ($generated@@87 $generated@@92) ($generated@@87 $generated@@93))))))) (=> (and (or (not (= $generated@@90 ($generated@@35 0))) (not true)) (= ($generated@@47 $generated@@90) 0)) ($generated@@59 $generated@@88 $generated@@89 $generated@@91 $generated@@92 $generated@@93)))))
 :pattern ( ($generated@@33 $generated@@88 $generated@@89 $generated@@90 ($generated@@34 $generated@@91) $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (!  (and (= ($generated@@32 ($generated@@27 $generated@@95)) $generated@@2) (= ($generated@@94 ($generated@@27 $generated@@95)) $generated@@5))
 :pattern ( ($generated@@27 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and ($generated@@96 $generated@@98) (<= ($generated@@47 $generated@@98) ($generated@@47 $generated@@97))) (and (= ($generated@@96 ($generated@@46 $generated@@97 $generated@@98)) ($generated@@96 $generated@@97)) (= ($generated@@47 ($generated@@46 $generated@@97 $generated@@98)) (- ($generated@@47 $generated@@97) ($generated@@47 $generated@@98)))))
 :pattern ( ($generated@@46 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 Int) ) (!  (=> (<= 0 $generated@@99) (and ($generated@@96 ($generated@@35 $generated@@99)) (= ($generated@@47 ($generated@@35 $generated@@99)) $generated@@99)))
 :pattern ( ($generated@@35 $generated@@99))
)))
(assert (= ($generated@@6 $generated@@100) 4))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@24 $generated@@101 ($generated@@67 $generated@@26 $generated@@102)) (and (< 1 $generated@@22) ($generated@@25 $generated@@26 $generated@@102 ($generated@@27 $generated@@101)))) (= ($generated@@23 $generated@@101 ($generated@@67 $generated@@26 $generated@@102)) (ite ($generated@@28 ($generated@@67 $generated@@26 $generated@@102)) 0 ($generated@@29 0))))
 :weight 3
 :pattern ( ($generated@@23 $generated@@101 ($generated@@67 $generated@@26 $generated@@102)))
))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and ($generated@@25 $generated@@26 $generated@@106 ($generated@@27 $generated@@103)) ($generated@@25 $generated@@26 $generated@@107 ($generated@@27 $generated@@104))) (= ($generated@@59 $generated@@103 $generated@@104 ($generated@@34 $generated@@105) $generated@@106 $generated@@107)  (or (and ($generated@@28 $generated@@106) ($generated@@28 $generated@@107)) (and (and ($generated@@76 $generated@@106) ($generated@@76 $generated@@107)) (=> (and ($generated@@76 $generated@@106) ($generated@@76 $generated@@107)) (and (= ($generated@@86 $generated@@106) ($generated@@86 $generated@@107)) ($generated@@59 $generated@@103 $generated@@104 $generated@@105 ($generated@@87 $generated@@106) ($generated@@87 $generated@@107))))))))
 :pattern ( ($generated@@59 $generated@@103 $generated@@104 ($generated@@34 $generated@@105) $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@108 $generated@@109) (or ($generated@@28 $generated@@109) ($generated@@76 $generated@@109)))
 :pattern ( ($generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (or ($generated@@42 $generated@@110 $generated@@111) (= $generated@@110 $generated@@111)) ($generated@@42 $generated@@111 $generated@@110))
 :pattern ( ($generated@@42 $generated@@110 $generated@@111) ($generated@@42 $generated@@111 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@113 ($generated@@27 $generated@@112)) (or ($generated@@28 $generated@@113) ($generated@@76 $generated@@113)))
 :pattern ( ($generated@@76 $generated@@113) ($generated@@25 $generated@@26 $generated@@113 ($generated@@27 $generated@@112)))
 :pattern ( ($generated@@28 $generated@@113) ($generated@@25 $generated@@26 $generated@@113 ($generated@@27 $generated@@112)))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@71 $generated@@114 $generated) (and (= ($generated@@79 $generated@@8 ($generated@@78 $generated@@8 $generated@@114)) $generated@@114) ($generated@@25 $generated@@8 ($generated@@78 $generated@@8 $generated@@114) $generated)))
 :pattern ( ($generated@@71 $generated@@114 $generated))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@71 ($generated@@79 $generated@@117 $generated@@115) $generated@@116) ($generated@@25 $generated@@117 $generated@@115 $generated@@116))
 :pattern ( ($generated@@71 ($generated@@79 $generated@@117 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (<= 0 ($generated@@47 $generated@@118))
 :pattern ( ($generated@@47 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@51 ($generated@@70 $generated@@119 $generated@@120)) $generated@@4)
 :pattern ( ($generated@@70 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@86 ($generated@@70 $generated@@121 $generated@@122)) $generated@@121)
 :pattern ( ($generated@@70 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@87 ($generated@@70 $generated@@123 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@70 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@27 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@27 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@78 $generated@@128 ($generated@@79 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@79 $generated@@128 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (and (and (and (=> ($generated@@42 $generated@@129 $generated@@130) (or (not (= $generated@@129 $generated@@130)) (not true))) (=> (and ($generated@@96 $generated@@129) (not ($generated@@96 $generated@@130))) ($generated@@42 $generated@@129 $generated@@130))) (=> (and ($generated@@96 $generated@@129) ($generated@@96 $generated@@130)) (= ($generated@@42 $generated@@129 $generated@@130) (< ($generated@@47 $generated@@129) ($generated@@47 $generated@@130))))) (=> (and ($generated@@42 $generated@@129 $generated@@130) ($generated@@96 $generated@@130)) ($generated@@96 $generated@@129)))
 :pattern ( ($generated@@42 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@59 $generated@@131 $generated@@132 ($generated@@34 $generated@@133) $generated@@134 $generated@@135) (forall (($generated@@136 T@U) ) (! ($generated@@33 $generated@@131 $generated@@132 $generated@@136 ($generated@@34 $generated@@133) $generated@@134 $generated@@135)
 :pattern ( ($generated@@33 $generated@@131 $generated@@132 $generated@@136 ($generated@@34 $generated@@133) $generated@@134 $generated@@135))
)))
 :pattern ( ($generated@@59 $generated@@131 $generated@@132 ($generated@@34 $generated@@133) $generated@@134 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@137 $generated@@147 $generated@@148 $generated@@149 ($generated@@143 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@152 $generated@@153) $generated@@150)
 :weight 0
)) (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@137 $generated@@154 $generated@@155 $generated@@156 ($generated@@143 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@137 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@137 $generated@@163 $generated@@164 $generated@@165 ($generated@@143 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@137 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (= ($generated@@6 $generated@@138) 5)) (= ($generated@@6 $generated@@139) 6)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@141 $generated@@172 $generated@@173 ($generated@@144 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@174) $generated@@176) $generated@@174)
 :weight 0
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@181 $generated@@182) (= ($generated@@141 $generated@@177 $generated@@178 ($generated@@144 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@179) $generated@@182) ($generated@@141 $generated@@177 $generated@@178 $generated@@180 $generated@@182)))
 :weight 0
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@6 ($generated@@142 $generated@@183 $generated@@184)) 7))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@145 ($generated@@142 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@142 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@146 ($generated@@142 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@142 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Bool) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@11 ($generated@@137 $generated@@138 $generated@@139 $generated@@7 ($generated@@140 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))  (=> (and (or (not (= $generated@@193 $generated@@189)) (not true)) ($generated@@11 ($generated@@78 $generated@@7 ($generated@@141 $generated@@139 $generated@@100 ($generated@@141 $generated@@138 ($generated@@142 $generated@@139 $generated@@100) $generated@@190 $generated@@193) $generated@@191)))) $generated@@192))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139 $generated@@7 ($generated@@140 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> ($generated@@71 $generated@@196 ($generated@@27 $generated@@195)) (and (= ($generated@@79 $generated@@26 ($generated@@78 $generated@@26 $generated@@196)) $generated@@196) ($generated@@25 $generated@@26 ($generated@@78 $generated@@26 $generated@@196) ($generated@@27 $generated@@195))))
 :pattern ( ($generated@@71 $generated@@196 ($generated@@27 $generated@@195)))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> ($generated@@96 $generated@@197) (= $generated@@197 ($generated@@35 ($generated@@47 $generated@@197))))
 :pattern ( ($generated@@47 $generated@@197))
 :pattern ( ($generated@@96 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@96 $generated@@199) (<= ($generated@@47 $generated@@199) ($generated@@47 $generated@@198))) (or (and (= $generated@@199 ($generated@@35 0)) (= ($generated@@46 $generated@@198 $generated@@199) $generated@@198)) (and (or (not (= $generated@@199 ($generated@@35 0))) (not true)) ($generated@@42 ($generated@@46 $generated@@198 $generated@@199) $generated@@198))))
 :pattern ( ($generated@@46 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and ($generated@@42 $generated@@202 $generated@@206) ($generated@@33 $generated@@200 $generated@@201 $generated@@206 ($generated@@34 $generated@@203) $generated@@204 $generated@@205)) ($generated@@33 $generated@@200 $generated@@201 $generated@@202 ($generated@@34 $generated@@203) $generated@@204 $generated@@205))
 :pattern ( ($generated@@33 $generated@@200 $generated@@201 $generated@@202 ($generated@@34 $generated@@203) $generated@@204 $generated@@205) ($generated@@33 $generated@@200 $generated@@201 $generated@@206 ($generated@@34 $generated@@203) $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@59 $generated@@207 $generated@@208 ($generated@@34 $generated@@209) $generated@@210 $generated@@211) ($generated@@59 $generated@@207 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
 :pattern ( ($generated@@59 $generated@@207 $generated@@208 ($generated@@34 $generated@@209) $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 Int) ) (! (= ($generated@@79 $generated@@8 ($generated@@12 ($generated@@29 $generated@@212))) ($generated@@67 $generated@@100 ($generated@@79 $generated@@8 ($generated@@12 $generated@@212))))
 :pattern ( ($generated@@79 $generated@@8 ($generated@@12 ($generated@@29 $generated@@212))))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@T) ) (! (= ($generated@@79 $generated@@214 ($generated@@67 $generated@@214 $generated@@213)) ($generated@@67 $generated@@100 ($generated@@79 $generated@@214 $generated@@213)))
 :pattern ( ($generated@@79 $generated@@214 ($generated@@67 $generated@@214 $generated@@213)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (forall (($generated@@220 Int) ) (!  (=> (<= 0 $generated@@220) ($generated@@33 $generated@@215 $generated@@216 ($generated@@35 $generated@@220) ($generated@@34 $generated@@217) $generated@@218 $generated@@219))
 :pattern ( ($generated@@33 $generated@@215 $generated@@216 ($generated@@35 $generated@@220) ($generated@@34 $generated@@217) $generated@@218 $generated@@219))
)) ($generated@@59 $generated@@215 $generated@@216 ($generated@@34 $generated@@217) $generated@@218 $generated@@219))
 :pattern ( ($generated@@59 $generated@@215 $generated@@216 ($generated@@34 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (! ($generated@@25 $generated@@8 $generated@@221 $generated)
 :pattern ( ($generated@@25 $generated@@8 $generated@@221 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@236 true))
(let (($generated@@237  (=> (= $generated@@222 ($generated@@70 $generated@@223 $generated@@224)) (=> (and ($generated@@71 $generated@@223 $generated@@225) ($generated@@25 $generated@@26 $generated@@224 ($generated@@27 $generated@@225))) (=> (and (and (and (= $generated@@226 $generated@@224) ($generated@@25 $generated@@26 $generated@@226 ($generated@@27 $generated@@225))) (and (= $generated@@227 $generated@@226) (= $generated@@228 $generated@@223))) (and (and ($generated@@71 $generated@@228 $generated@@225) (= $generated@@229 $generated@@228)) (and ($generated@@108 $generated@@222) (= (ControlFlow 0 5) (- 0 4))))) ($generated@@59 $generated@@225 $generated@@225 ($generated@@34 ($generated@@34 $generated@@230)) $generated@@222 ($generated@@70 $generated@@229 $generated@@227)))))))
(let (($generated@@238  (=> (or (not (= $generated@@222 $generated@@52)) (not true)) (and (=> (= (ControlFlow 0 7) 5) $generated@@237) (=> (= (ControlFlow 0 7) 6) $generated@@236)))))
(let (($generated@@239  (=> (= $generated@@222 $generated@@52) (=> (and ($generated@@108 $generated@@222) (= (ControlFlow 0 3) (- 0 2))) ($generated@@59 $generated@@225 $generated@@225 ($generated@@34 ($generated@@34 $generated@@230)) $generated@@222 $generated@@52)))))
(let (($generated@@240 true))
(let (($generated@@241  (=> (= $generated@@231 ($generated@@140 $generated@@232 $generated@@233 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@240) (=> (= (ControlFlow 0 8) 3) $generated@@239)) (=> (= (ControlFlow 0 8) 7) $generated@@238)))))
(let (($generated@@242  (=> (and (and (and ($generated@@234 $generated@@233) ($generated@@235 $generated@@233)) ($generated@@25 $generated@@26 $generated@@222 ($generated@@27 $generated@@225))) (and (= 1 $generated@@22) (= (ControlFlow 0 9) 8))) $generated@@241)))
$generated@@242))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
