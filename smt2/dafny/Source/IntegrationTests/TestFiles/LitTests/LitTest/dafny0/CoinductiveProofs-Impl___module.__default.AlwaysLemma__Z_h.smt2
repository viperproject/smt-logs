(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 () Int)
(declare-fun $generated@@20 (T@U T@U T@U) Bool)
(declare-fun $generated@@21 (T@U T@U T@U) Bool)
(declare-fun $generated@@22 (T@T T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (Int) Int)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (Int) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U T@U) T@U)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@111 (T@U) Bool)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@119 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@120 (T@T T@T) T@T)
(declare-fun $generated@@121 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@122 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@T) T@T)
(declare-fun $generated@@124 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@3 $generated@@23) 3))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (or ($generated@@21 $generated@@28 $generated@@29 $generated@@30) (and (< 2 $generated@@19) ($generated@@22 $generated@@23 $generated@@30 ($generated@@24 $generated@@28)))) (and (=> (=> (< 0 ($generated@@25 $generated@@29)) false) (=> (= ($generated@@26 0) ($generated@@25 $generated@@29)) (forall (($generated@@31 T@U) ) (!  (=> ($generated@@27 $generated@@31 $generated@@29) ($generated@@21 $generated@@28 $generated@@31 $generated@@30))
 :pattern ( ($generated@@20 $generated@@28 $generated@@31 $generated@@30))
)))) (= ($generated@@20 $generated@@28 $generated@@29 $generated@@30)  (and (=> (< 0 ($generated@@25 $generated@@29)) false) (=> (= ($generated@@26 0) ($generated@@25 $generated@@29)) (forall (($generated@@32 T@U) ) (!  (=> ($generated@@27 $generated@@32 $generated@@29) ($generated@@20 $generated@@28 $generated@@32 $generated@@30))
 :pattern ( ($generated@@20 $generated@@28 $generated@@32 $generated@@30))
)))))))
 :pattern ( ($generated@@20 $generated@@28 $generated@@29 $generated@@30))
))))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (and ($generated@@27 $generated@@33 $generated@@34) ($generated@@27 $generated@@34 $generated@@35)) ($generated@@27 $generated@@33 $generated@@35))
 :pattern ( ($generated@@27 $generated@@33 $generated@@34) ($generated@@27 $generated@@34 $generated@@35))
 :pattern ( ($generated@@27 $generated@@33 $generated@@34) ($generated@@27 $generated@@33 $generated@@35))
)))
(assert (forall (($generated@@38 T@U) ) (!  (=> ($generated@@36 $generated@@38) ($generated@@37 $generated@@38))
 :pattern ( ($generated@@36 $generated@@38))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 Int) ($generated@@43 Int) ) (!  (=> (and (and (<= 0 $generated@@42) (<= 0 $generated@@43)) (<= (+ $generated@@42 $generated@@43) ($generated@@25 $generated@@41))) (= ($generated@@39 ($generated@@39 $generated@@41 ($generated@@40 $generated@@42)) ($generated@@40 $generated@@43)) ($generated@@39 $generated@@41 ($generated@@40 (+ $generated@@42 $generated@@43)))))
 :pattern ( ($generated@@39 ($generated@@39 $generated@@41 ($generated@@40 $generated@@42)) ($generated@@40 $generated@@43)))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> ($generated@@22 $generated@@23 $generated@@45 ($generated@@24 $generated@@44)) ($generated@@37 $generated@@45))
 :pattern ( ($generated@@37 $generated@@45) ($generated@@22 $generated@@23 $generated@@45 ($generated@@24 $generated@@44)))
)))
(assert (forall (($generated@@46 Int) ) (! (= ($generated@@26 $generated@@46) $generated@@46)
 :pattern ( ($generated@@26 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 $generated@@48) $generated@@48)
 :pattern ( ($generated@@47 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@22 $generated@@23 ($generated@@50 $generated@@53 $generated@@54) ($generated@@24 $generated@@52))  (and ($generated@@51 $generated@@53 $generated@@52) ($generated@@22 $generated@@23 $generated@@54 ($generated@@24 $generated@@52))))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@50 $generated@@53 $generated@@54) ($generated@@24 $generated@@52)))
)))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> (and ($generated@@22 $generated@@23 $generated@@56 ($generated@@24 $generated@@55)) (= $generated@@57 ($generated@@40 0))) ($generated@@20 $generated@@55 $generated@@57 $generated@@56))
 :pattern ( ($generated@@20 $generated@@55 $generated@@57 $generated@@56))
))))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@37 $generated@@59) (= ($generated@@58 $generated@@59) $generated@@1))
 :pattern ( ($generated@@37 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 ($generated@@60 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@60 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@37 $generated@@64) (exists (($generated@@65 T@U) ($generated@@66 T@U) ) (= $generated@@64 ($generated@@50 $generated@@65 $generated@@66))))
 :pattern ( ($generated@@37 $generated@@64))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@67 ($generated@@61 $generated@@72 $generated@@69) $generated@@70 $generated@@71) ($generated@@68 $generated@@72 $generated@@69 $generated@@70 $generated@@71))
 :pattern ( ($generated@@67 ($generated@@61 $generated@@72 $generated@@69) $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@75 T@U) ) (!  (and (= ($generated@@73 ($generated@@24 $generated@@75)) $generated@@0) (= ($generated@@74 ($generated@@24 $generated@@75)) $generated@@2))
 :pattern ( ($generated@@24 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (and ($generated@@76 $generated@@78) (<= ($generated@@25 $generated@@78) ($generated@@25 $generated@@77))) (and (= ($generated@@76 ($generated@@39 $generated@@77 $generated@@78)) ($generated@@76 $generated@@77)) (= ($generated@@25 ($generated@@39 $generated@@77 $generated@@78)) (- ($generated@@25 $generated@@77) ($generated@@25 $generated@@78)))))
 :pattern ( ($generated@@39 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@79 Int) ) (!  (=> (<= 0 $generated@@79) (and ($generated@@76 ($generated@@40 $generated@@79)) (= ($generated@@25 ($generated@@40 $generated@@79)) $generated@@79)))
 :pattern ( ($generated@@40 $generated@@79))
)))
(assert (= ($generated@@3 $generated@@80) 4))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@21 $generated@@81 ($generated@@47 $generated@@80 $generated@@82) $generated@@83) (and (< 2 $generated@@19) ($generated@@22 $generated@@23 $generated@@83 ($generated@@24 $generated@@81)))) (and (=> (=> (< 0 ($generated@@25 $generated@@82)) false) (=> (= ($generated@@26 0) ($generated@@25 $generated@@82)) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@27 $generated@@84 $generated@@82) ($generated@@21 $generated@@81 $generated@@84 $generated@@83))
 :pattern ( ($generated@@20 $generated@@81 $generated@@84 $generated@@83))
)))) (= ($generated@@20 $generated@@81 ($generated@@47 $generated@@80 $generated@@82) $generated@@83)  (and (=> (< 0 ($generated@@25 $generated@@82)) false) (=> (= ($generated@@26 0) ($generated@@25 $generated@@82)) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@27 $generated@@85 $generated@@82) ($generated@@20 $generated@@81 $generated@@85 $generated@@83))
 :pattern ( ($generated@@20 $generated@@81 $generated@@85 $generated@@83))
)))))))
 :weight 3
 :pattern ( ($generated@@20 $generated@@81 ($generated@@47 $generated@@80 $generated@@82) $generated@@83))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (or (or ($generated@@27 $generated@@86 $generated@@87) (= $generated@@86 $generated@@87)) ($generated@@27 $generated@@87 $generated@@86))
 :pattern ( ($generated@@27 $generated@@86 $generated@@87) ($generated@@27 $generated@@87 $generated@@86))
)))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (or ($generated@@21 $generated@@88 ($generated@@47 $generated@@80 $generated@@89) ($generated@@47 $generated@@23 $generated@@90)) (and (< 2 $generated@@19) ($generated@@22 $generated@@23 $generated@@90 ($generated@@24 $generated@@88)))) (and (=> (=> (< 0 ($generated@@25 $generated@@89)) false) (=> (= ($generated@@26 0) ($generated@@25 $generated@@89)) (forall (($generated@@91 T@U) ) (!  (=> ($generated@@27 $generated@@91 $generated@@89) ($generated@@21 $generated@@88 $generated@@91 $generated@@90))
 :pattern ( ($generated@@20 $generated@@88 $generated@@91 $generated@@90))
)))) (= ($generated@@20 $generated@@88 ($generated@@47 $generated@@80 $generated@@89) ($generated@@47 $generated@@23 $generated@@90))  (and (=> (< 0 ($generated@@25 $generated@@89)) false) (=> (= ($generated@@26 0) ($generated@@25 $generated@@89)) (forall (($generated@@92 T@U) ) (!  (=> ($generated@@27 $generated@@92 $generated@@89) ($generated@@20 $generated@@88 $generated@@92 $generated@@90))
 :pattern ( ($generated@@20 $generated@@88 $generated@@92 $generated@@90))
)))))))
 :weight 3
 :pattern ( ($generated@@20 $generated@@88 ($generated@@47 $generated@@80 $generated@@89) ($generated@@47 $generated@@23 $generated@@90)))
))))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@51 ($generated@@61 $generated@@95 $generated@@93) $generated@@94) ($generated@@22 $generated@@95 $generated@@93 $generated@@94))
 :pattern ( ($generated@@51 ($generated@@61 $generated@@95 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (<= 0 ($generated@@25 $generated@@96))
 :pattern ( ($generated@@25 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@58 ($generated@@50 $generated@@97 $generated@@98)) $generated@@1)
 :pattern ( ($generated@@50 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@99 ($generated@@50 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@50 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@102 ($generated@@50 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@50 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@105 ($generated@@24 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@24 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@60 $generated@@108 ($generated@@61 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@61 $generated@@108 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (and (and (and (=> ($generated@@27 $generated@@109 $generated@@110) (or (not (= $generated@@109 $generated@@110)) (not true))) (=> (and ($generated@@76 $generated@@109) (not ($generated@@76 $generated@@110))) ($generated@@27 $generated@@109 $generated@@110))) (=> (and ($generated@@76 $generated@@109) ($generated@@76 $generated@@110)) (= ($generated@@27 $generated@@109 $generated@@110) (< ($generated@@25 $generated@@109) ($generated@@25 $generated@@110))))) (=> (and ($generated@@27 $generated@@109 $generated@@110) ($generated@@76 $generated@@110)) ($generated@@76 $generated@@109)))
 :pattern ( ($generated@@27 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (and ($generated@@111 $generated@@114) (and ($generated@@37 $generated@@112) ($generated@@68 $generated@@23 $generated@@112 ($generated@@24 $generated@@113) $generated@@114))) ($generated@@67 ($generated@@99 $generated@@112) $generated@@113 $generated@@114))
 :pattern ( ($generated@@67 ($generated@@99 $generated@@112) $generated@@113 $generated@@114))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@115 $generated@@125 $generated@@126 $generated@@127 ($generated@@121 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@130 $generated@@131) $generated@@128)
 :weight 0
)) (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@115 $generated@@132 $generated@@133 $generated@@134 ($generated@@121 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@115 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@115 $generated@@141 $generated@@142 $generated@@143 ($generated@@121 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@115 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)))) (= ($generated@@3 $generated@@116) 5)) (= ($generated@@3 $generated@@117) 6)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@119 $generated@@150 $generated@@151 ($generated@@122 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@152) $generated@@154) $generated@@152)
 :weight 0
))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@159 $generated@@160) (= ($generated@@119 $generated@@155 $generated@@156 ($generated@@122 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@157) $generated@@160) ($generated@@119 $generated@@155 $generated@@156 $generated@@158 $generated@@160)))
 :weight 0
))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@3 ($generated@@120 $generated@@161 $generated@@162)) 7))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@123 ($generated@@120 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@120 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@124 ($generated@@120 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@120 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 Bool) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@8 ($generated@@115 $generated@@116 $generated@@117 $generated@@4 ($generated@@118 $generated@@167 $generated@@168 $generated@@169 $generated@@170) $generated@@171 $generated@@172))  (=> (and (or (not (= $generated@@171 $generated@@167)) (not true)) ($generated@@8 ($generated@@60 $generated@@4 ($generated@@119 $generated@@117 $generated@@80 ($generated@@119 $generated@@116 ($generated@@120 $generated@@117 $generated@@80) $generated@@168 $generated@@171) $generated@@169)))) $generated@@170))
 :pattern ( ($generated@@115 $generated@@116 $generated@@117 $generated@@4 ($generated@@118 $generated@@167 $generated@@168 $generated@@169 $generated@@170) $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> ($generated@@51 $generated@@174 ($generated@@24 $generated@@173)) (and (= ($generated@@61 $generated@@23 ($generated@@60 $generated@@23 $generated@@174)) $generated@@174) ($generated@@22 $generated@@23 ($generated@@60 $generated@@23 $generated@@174) ($generated@@24 $generated@@173))))
 :pattern ( ($generated@@51 $generated@@174 ($generated@@24 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> ($generated@@76 $generated@@175) (= $generated@@175 ($generated@@40 ($generated@@25 $generated@@175))))
 :pattern ( ($generated@@25 $generated@@175))
 :pattern ( ($generated@@76 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and ($generated@@111 $generated@@178) (and ($generated@@37 $generated@@176) ($generated@@68 $generated@@23 $generated@@176 ($generated@@24 $generated@@177) $generated@@178))) ($generated@@68 $generated@@23 ($generated@@102 $generated@@176) ($generated@@24 $generated@@177) $generated@@178))
 :pattern ( ($generated@@68 $generated@@23 ($generated@@102 $generated@@176) ($generated@@24 $generated@@177) $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and ($generated@@76 $generated@@180) (<= ($generated@@25 $generated@@180) ($generated@@25 $generated@@179))) (or (and (= $generated@@180 ($generated@@40 0)) (= ($generated@@39 $generated@@179 $generated@@180) $generated@@179)) (and (or (not (= $generated@@180 ($generated@@40 0))) (not true)) ($generated@@27 ($generated@@39 $generated@@179 $generated@@180) $generated@@179))))
 :pattern ( ($generated@@39 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 Int) ) (! (= ($generated@@61 $generated@@5 ($generated@@9 ($generated@@26 $generated@@181))) ($generated@@47 $generated@@80 ($generated@@61 $generated@@5 ($generated@@9 $generated@@181))))
 :pattern ( ($generated@@61 $generated@@5 ($generated@@9 ($generated@@26 $generated@@181))))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@61 $generated@@183 ($generated@@47 $generated@@183 $generated@@182)) ($generated@@47 $generated@@80 ($generated@@61 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@61 $generated@@183 ($generated@@47 $generated@@183 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@111 $generated@@187) (= ($generated@@68 $generated@@23 ($generated@@50 $generated@@185 $generated@@186) ($generated@@24 $generated@@184) $generated@@187)  (and ($generated@@67 $generated@@185 $generated@@184 $generated@@187) ($generated@@68 $generated@@23 $generated@@186 ($generated@@24 $generated@@184) $generated@@187))))
 :pattern ( ($generated@@68 $generated@@23 ($generated@@50 $generated@@185 $generated@@186) ($generated@@24 $generated@@184) $generated@@187))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@198  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@21 $generated@@188 $generated@@189 $generated@@190) (or ($generated@@20 $generated@@188 $generated@@189 $generated@@190) (=> (< 0 ($generated@@25 $generated@@189)) ($generated@@8 ($generated@@47 $generated@@4 ($generated@@7 false))))))) (=> (=> ($generated@@21 $generated@@188 $generated@@189 $generated@@190) (or ($generated@@20 $generated@@188 $generated@@189 $generated@@190) (=> (< 0 ($generated@@25 $generated@@189)) ($generated@@8 ($generated@@47 $generated@@4 ($generated@@7 false)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@21 $generated@@188 $generated@@189 $generated@@190) (or ($generated@@20 $generated@@188 $generated@@189 $generated@@190) (=> (= ($generated@@26 0) ($generated@@25 $generated@@189)) (forall (($generated@@199 T@U) ) (!  (=> ($generated@@27 $generated@@199 $generated@@189) ($generated@@20 $generated@@188 $generated@@199 $generated@@190))
 :pattern ( ($generated@@20 $generated@@188 $generated@@199 $generated@@190))
))))))))))
(let (($generated@@200  (=> (<= ($generated@@25 $generated@@189) 0) (=> (and (and (and ($generated@@111 $generated@@191) ($generated@@192 $generated@@191)) (= $generated@@193 $generated@@191)) (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and ($generated@@22 $generated@@23 $generated@@202 ($generated@@24 $generated@@188)) ($generated@@27 $generated@@201 $generated@@189)) ($generated@@20 $generated@@188 $generated@@201 $generated@@202))
 :pattern ( ($generated@@20 $generated@@188 $generated@@201 $generated@@202))
)) (= (ControlFlow 0 7) 2))) $generated@@198))))
(let (($generated@@203  (=> (< 0 ($generated@@25 $generated@@189)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@76 ($generated@@47 $generated@@80 ($generated@@40 1)))) (=> ($generated@@76 ($generated@@47 $generated@@80 ($generated@@40 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@25 ($generated@@47 $generated@@80 ($generated@@40 1))) ($generated@@25 $generated@@189))) (=> (<= ($generated@@25 ($generated@@47 $generated@@80 ($generated@@40 1))) ($generated@@25 $generated@@189)) (=> (= $generated@@194 ($generated@@39 $generated@@189 ($generated@@40 1))) (=> (and (and (and ($generated@@111 $generated@@195) ($generated@@192 $generated@@195)) ($generated@@21 $generated@@188 $generated@@194 $generated@@190)) (and (and ($generated@@21 $generated@@188 $generated@@194 $generated@@190) (and ($generated@@20 $generated@@188 $generated@@194 $generated@@190) (and (=> (< 0 ($generated@@25 $generated@@194)) false) (=> (= ($generated@@26 0) ($generated@@25 $generated@@194)) (forall (($generated@@204 T@U) ) (!  (=> ($generated@@27 $generated@@204 $generated@@194) ($generated@@20 $generated@@188 $generated@@204 $generated@@190))
 :pattern ( ($generated@@20 $generated@@188 $generated@@204 $generated@@190))
)))))) (and (= $generated@@193 $generated@@195) (= (ControlFlow 0 4) 2)))) $generated@@198)))))))))
(let (($generated@@205  (=> (= $generated@@196 ($generated@@118 $generated@@197 $generated@@193 $generated false)) (and (=> (= (ControlFlow 0 8) 4) $generated@@203) (=> (= (ControlFlow 0 8) 7) $generated@@200)))))
(let (($generated@@206  (=> (and ($generated@@111 $generated@@193) ($generated@@192 $generated@@193)) (=> (and (and (and ($generated@@22 $generated@@23 $generated@@190 ($generated@@24 $generated@@188)) ($generated@@68 $generated@@23 $generated@@190 ($generated@@24 $generated@@188) $generated@@193)) ($generated@@36 $generated@@190)) (and (= 3 $generated@@19) (= (ControlFlow 0 9) 8))) $generated@@205))))
$generated@@206))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
