(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (Int) T@U)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@92 (Int) Int)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@U) Bool)
(declare-fun $generated@@116 () Int)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@29 $generated@@30)) ($generated@@27 $generated@@28 $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@29 $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 Int) ($generated@@36 Int) ) (!  (=> (and (and (<= 0 $generated@@35) (<= 0 $generated@@36)) (<= (+ $generated@@35 $generated@@36) ($generated@@33 $generated@@34))) (= ($generated@@31 ($generated@@31 $generated@@34 ($generated@@32 $generated@@35)) ($generated@@32 $generated@@36)) ($generated@@31 $generated@@34 ($generated@@32 (+ $generated@@35 $generated@@36)))))
 :pattern ( ($generated@@31 ($generated@@31 $generated@@34 ($generated@@32 $generated@@35)) ($generated@@32 $generated@@36)))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@8 $generated@@43) 3) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@48 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@48 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@48 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@8 $generated@@49) 4)) (= ($generated@@8 $generated@@50) 5)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@8 ($generated@@51 $generated@@66 $generated@@67)) 6))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@51 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@51 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@51 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (and (and (and ($generated@@40 $generated@@73) ($generated@@40 $generated@@74)) (or ($generated@@41 $generated@@73 $generated@@75 $generated@@76) (and ($generated@@42 $generated@@43 $generated@@76 $generated@@44) ($generated@@45 $generated@@43 $generated@@76 $generated@@44 $generated@@73)))) (and ($generated@@37 $generated@@73) ($generated@@38 $generated@@73 $generated@@74))) (=> (forall (($generated@@77 T@U) ($generated@@78 T@U) )  (=> (and (or (not (= $generated@@77 $generated@@46)) (not true)) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@73 $generated@@77) $generated@@1)))) (= ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@73 $generated@@77) $generated@@78) ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@74 $generated@@77) $generated@@78)))) (= ($generated@@39 $generated@@72 $generated@@73 $generated@@75 $generated@@76) ($generated@@39 $generated@@72 $generated@@74 $generated@@75 $generated@@76))))
 :pattern ( ($generated@@37 $generated@@73) ($generated@@38 $generated@@73 $generated@@74) ($generated@@39 $generated@@72 $generated@@74 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@80 $generated@@44)  (or (= $generated@@80 $generated@@46) (= ($generated@@79 $generated@@80) $generated@@44)))
 :pattern ( ($generated@@42 $generated@@43 $generated@@80 $generated@@44))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@45 $generated@@43 $generated@@82 $generated@@81 $generated@@83) ($generated@@45 $generated@@43 $generated@@82 $generated@@44 $generated@@83))
 :pattern ( ($generated@@45 $generated@@43 $generated@@82 $generated@@81 $generated@@83))
 :pattern ( ($generated@@45 $generated@@43 $generated@@82 $generated@@44 $generated@@83))
)))
(assert (= ($generated@@24 $generated@@84) 0))
(assert (= ($generated@@85 $generated@@5 $generated@@7) $generated@@84))
(assert  (not ($generated@@86 $generated@@84)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@45 $generated@@43 $generated@@87 $generated@@44 $generated@@88)  (or (= $generated@@87 $generated@@46) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@88 $generated@@87) $generated@@1)))))
 :pattern ( ($generated@@45 $generated@@43 $generated@@87 $generated@@44 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@38 $generated@@89 $generated@@90) (forall (($generated@@91 T@U) ) (!  (=> ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@89 $generated@@91) $generated@@1))) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@90 $generated@@91) $generated@@1))))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@90 $generated@@91) $generated@@1))
)))
 :pattern ( ($generated@@38 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@93 Int) ) (! (= ($generated@@92 $generated@@93) $generated@@93)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 $generated@@95) $generated@@95)
 :pattern ( ($generated@@94 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 ($generated@@47 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@47 $generated@@99 $generated@@98))
)))
(assert ($generated@@86 $generated@@1))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (!  (=> ($generated@@38 $generated@@100 $generated@@101) (=> ($generated@@45 $generated@@104 $generated@@102 $generated@@103 $generated@@100) ($generated@@45 $generated@@104 $generated@@102 $generated@@103 $generated@@101)))
 :pattern ( ($generated@@38 $generated@@100 $generated@@101) ($generated@@45 $generated@@104 $generated@@102 $generated@@103 $generated@@100))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and ($generated@@105 $generated@@107) (<= ($generated@@33 $generated@@107) ($generated@@33 $generated@@106))) (and (= ($generated@@105 ($generated@@31 $generated@@106 $generated@@107)) ($generated@@105 $generated@@106)) (= ($generated@@33 ($generated@@31 $generated@@106 $generated@@107)) (- ($generated@@33 $generated@@106) ($generated@@33 $generated@@107)))))
 :pattern ( ($generated@@31 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (and ($generated@@40 $generated@@108) (and (or (not (= $generated@@109 $generated@@46)) (not true)) (= ($generated@@79 $generated@@109) $generated@@44))) ($generated@@42 $generated@@43 ($generated@@47 $generated@@43 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@108 $generated@@109) $generated@@84)) $generated@@44))
 :pattern ( ($generated@@47 $generated@@43 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@108 $generated@@109) $generated@@84)))
)))
(assert (forall (($generated@@110 Int) ) (!  (=> (<= 0 $generated@@110) (and ($generated@@105 ($generated@@32 $generated@@110)) (= ($generated@@33 ($generated@@32 $generated@@110)) $generated@@110)))
 :pattern ( ($generated@@32 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@111 $generated@@81)  (and ($generated@@42 $generated@@43 $generated@@111 $generated@@44) (or (not (= $generated@@111 $generated@@46)) (not true))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@111 $generated@@81))
 :pattern ( ($generated@@42 $generated@@43 $generated@@111 $generated@@44))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and (and ($generated@@40 $generated@@112) (and (or (not (= $generated@@113 $generated@@46)) (not true)) (= ($generated@@79 $generated@@113) $generated@@44))) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@112 $generated@@113) $generated@@1)))) ($generated@@45 $generated@@43 ($generated@@47 $generated@@43 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@112 $generated@@113) $generated@@84)) $generated@@44 $generated@@112))
 :pattern ( ($generated@@47 $generated@@43 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@112 $generated@@113) $generated@@84)))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (or ($generated@@27 $generated@@114 $generated@@115) (= $generated@@114 $generated@@115)) ($generated@@27 $generated@@115 $generated@@114))
 :pattern ( ($generated@@27 $generated@@114 $generated@@115) ($generated@@27 $generated@@115 $generated@@114))
)))
(assert  (=> (<= 1 $generated@@116) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or ($generated@@41 $generated@@119 $generated@@120 $generated@@121) (and (< 1 $generated@@116) (and (and ($generated@@40 $generated@@119) ($generated@@42 $generated@@43 $generated@@121 $generated@@44)) (or (not (= $generated@@121 $generated@@46)) (not true))))) (and (and (=> (< 0 ($generated@@33 $generated@@120)) (=> (or (not (= ($generated@@47 $generated@@43 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@119 $generated@@121) $generated@@84)) $generated@@46)) (not true)) ($generated@@41 $generated@@119 ($generated@@31 $generated@@120 ($generated@@32 1)) ($generated@@47 $generated@@43 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@119 $generated@@121) $generated@@84))))) (=> (=> (< 0 ($generated@@33 $generated@@120)) (and (or (not (= ($generated@@47 $generated@@43 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@119 $generated@@121) $generated@@84)) $generated@@46)) (not true)) ($generated@@39 $generated@@118 $generated@@119 ($generated@@31 $generated@@120 ($generated@@32 1)) ($generated@@47 $generated@@43 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@119 $generated@@121) $generated@@84))))) (=> (= ($generated@@92 0) ($generated@@33 $generated@@120)) (forall (($generated@@122 T@U) ) (!  (=> ($generated@@27 $generated@@122 $generated@@120) ($generated@@41 $generated@@119 $generated@@122 $generated@@121))
 :pattern ( ($generated@@39 $generated@@118 $generated@@119 $generated@@122 $generated@@121))
))))) (= ($generated@@39 ($generated@@117 $generated@@118) $generated@@119 $generated@@120 $generated@@121)  (and (=> (< 0 ($generated@@33 $generated@@120)) (and (or (not (= ($generated@@47 $generated@@43 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@119 $generated@@121) $generated@@84)) $generated@@46)) (not true)) ($generated@@39 $generated@@118 $generated@@119 ($generated@@31 $generated@@120 ($generated@@32 1)) ($generated@@47 $generated@@43 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@119 $generated@@121) $generated@@84))))) (=> (= ($generated@@92 0) ($generated@@33 $generated@@120)) (forall (($generated@@123 T@U) ) (!  (=> ($generated@@27 $generated@@123 $generated@@120) ($generated@@39 $generated@@118 $generated@@119 $generated@@123 $generated@@121))
 :pattern ( ($generated@@39 $generated@@118 $generated@@119 $generated@@123 $generated@@121))
)))))))
 :pattern ( ($generated@@39 ($generated@@117 $generated@@118) $generated@@119 $generated@@120 $generated@@121) ($generated@@40 $generated@@119))
))))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (or (not (= $generated@@124 $generated@@126)) (not true)) (=> (and ($generated@@38 $generated@@124 $generated@@125) ($generated@@38 $generated@@125 $generated@@126)) ($generated@@38 $generated@@124 $generated@@126)))
 :pattern ( ($generated@@38 $generated@@124 $generated@@125) ($generated@@38 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (and (= ($generated@@127 ($generated@@85 $generated@@128 $generated@@129)) $generated@@128) (= ($generated@@26 ($generated@@85 $generated@@128 $generated@@129)) $generated@@129))
 :pattern ( ($generated@@85 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@39 ($generated@@117 $generated@@130) $generated@@131 $generated@@132 $generated@@133) ($generated@@39 $generated@@130 $generated@@131 $generated@@132 $generated@@133))
 :pattern ( ($generated@@39 ($generated@@117 $generated@@130) $generated@@131 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ) (! (<= 0 ($generated@@33 $generated@@134))
 :pattern ( ($generated@@33 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@47 $generated@@136 ($generated@@97 $generated@@136 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@97 $generated@@136 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (and (and (and (=> ($generated@@27 $generated@@137 $generated@@138) (or (not (= $generated@@137 $generated@@138)) (not true))) (=> (and ($generated@@105 $generated@@137) (not ($generated@@105 $generated@@138))) ($generated@@27 $generated@@137 $generated@@138))) (=> (and ($generated@@105 $generated@@137) ($generated@@105 $generated@@138)) (= ($generated@@27 $generated@@137 $generated@@138) (< ($generated@@33 $generated@@137) ($generated@@33 $generated@@138))))) (=> (and ($generated@@27 $generated@@137 $generated@@138) ($generated@@105 $generated@@138)) ($generated@@105 $generated@@137)))
 :pattern ( ($generated@@27 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@105 $generated@@139) (= $generated@@139 ($generated@@32 ($generated@@33 $generated@@139))))
 :pattern ( ($generated@@33 $generated@@139))
 :pattern ( ($generated@@105 $generated@@139))
)))
(assert (= ($generated@@25 $generated@@44) $generated@@3))
(assert (= ($generated@@140 $generated@@44) $generated@@6))
(assert (= ($generated@@25 $generated@@81) $generated@@4))
(assert (= ($generated@@140 $generated@@81) $generated@@6))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and ($generated@@105 $generated@@142) (<= ($generated@@33 $generated@@142) ($generated@@33 $generated@@141))) (or (and (= $generated@@142 ($generated@@32 0)) (= ($generated@@31 $generated@@141 $generated@@142) $generated@@141)) (and (or (not (= $generated@@142 ($generated@@32 0))) (not true)) ($generated@@27 ($generated@@31 $generated@@141 $generated@@142) $generated@@141))))
 :pattern ( ($generated@@31 $generated@@141 $generated@@142))
)))
(assert  (=> (<= 1 $generated@@116) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and ($generated@@40 $generated@@144) ($generated@@42 $generated@@43 $generated@@145 $generated@@44)) (= $generated@@146 ($generated@@32 0))) ($generated@@39 $generated@@143 $generated@@144 $generated@@146 $generated@@145))
 :pattern ( ($generated@@39 $generated@@143 $generated@@144 $generated@@146 $generated@@145))
))))
(assert  (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@147 $generated@@150 $generated@@151 $generated@@152 ($generated@@149 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@155 $generated@@156) $generated@@153)
 :weight 0
)) (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@147 $generated@@157 $generated@@158 $generated@@159 ($generated@@149 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@147 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@147 $generated@@166 $generated@@167 $generated@@168 ($generated@@149 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@147 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@13 ($generated@@147 $generated@@43 $generated@@49 $generated@@9 ($generated@@148 $generated@@175 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (or (not (= $generated@@180 $generated@@175)) (not true)) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@43 ($generated@@51 $generated@@49 $generated@@50) $generated@@176 $generated@@180) $generated@@177)))) (or (= $generated@@180 $generated@@178) (= $generated@@180 $generated@@179))))
 :pattern ( ($generated@@147 $generated@@43 $generated@@49 $generated@@9 ($generated@@148 $generated@@175 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@97 $generated@@10 ($generated@@14 ($generated@@92 $generated@@182))) ($generated@@94 $generated@@50 ($generated@@97 $generated@@10 ($generated@@14 $generated@@182))))
 :pattern ( ($generated@@97 $generated@@10 ($generated@@14 ($generated@@92 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@97 $generated@@184 ($generated@@94 $generated@@184 $generated@@183)) ($generated@@94 $generated@@50 ($generated@@97 $generated@@184 $generated@@183)))
 :pattern ( ($generated@@97 $generated@@184 ($generated@@94 $generated@@184 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! ($generated@@45 $generated@@50 $generated@@186 $generated $generated@@185)
 :pattern ( ($generated@@45 $generated@@50 $generated@@186 $generated $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! ($generated@@42 $generated@@50 $generated@@187 $generated)
 :pattern ( ($generated@@42 $generated@@50 $generated@@187 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@193  (=> (= $generated@@188 ($generated@@148 $generated@@46 $generated@@189 $generated@@1 $generated@@190 $generated@@191)) (=> (and (and (or (not (= $generated@@190 $generated@@46)) (not true)) ($generated@@45 $generated@@50 $generated@@192 $generated $generated@@189)) (and ($generated@@45 $generated@@43 $generated@@190 $generated@@44 $generated@@189) (= (ControlFlow 0 2) (- 0 1)))) (or (not (= $generated@@190 $generated@@46)) (not true))))))
(let (($generated@@194  (=> (and (and (and ($generated@@40 $generated@@189) ($generated@@37 $generated@@189)) (and ($generated@@42 $generated@@43 $generated@@190 $generated@@44) ($generated@@45 $generated@@43 $generated@@190 $generated@@44 $generated@@189))) (and (and ($generated@@42 $generated@@43 $generated@@191 $generated@@44) ($generated@@45 $generated@@43 $generated@@191 $generated@@44 $generated@@189)) (and (= 2 $generated@@116) (= (ControlFlow 0 3) 2)))) $generated@@193)))
$generated@@194)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
