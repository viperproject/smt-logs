(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (Int) T@U)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (Int) Int)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@104 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@T T@T) T@T)
(declare-fun $generated@@107 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@150 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@201 () T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@1))
(assert (= ($generated@@23 $generated@@0) $generated@@2))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> (and ($generated@@24 $generated@@25 $generated@@26) ($generated@@24 $generated@@26 $generated@@27)) ($generated@@24 $generated@@25 $generated@@27))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26) ($generated@@24 $generated@@26 $generated@@27))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26) ($generated@@24 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 Int) ($generated@@33 Int) ) (!  (=> (and (and (<= 0 $generated@@32) (<= 0 $generated@@33)) (<= (+ $generated@@32 $generated@@33) ($generated@@30 $generated@@31))) (= ($generated@@28 ($generated@@28 $generated@@31 ($generated@@29 $generated@@32)) ($generated@@29 $generated@@33)) ($generated@@28 $generated@@31 ($generated@@29 (+ $generated@@32 $generated@@33)))))
 :pattern ( ($generated@@28 ($generated@@28 $generated@@31 ($generated@@29 $generated@@32)) ($generated@@29 $generated@@33)))
)))
(assert  (and (= ($generated@@7 $generated@@38) 3) (= ($generated@@7 $generated@@42) 4)))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (or ($generated@@39 $generated@@45 $generated@@46 $generated@@47 $generated@@49 ($generated@@37 $generated@@38 $generated@@50)) (and (< 1 $generated@@34) (and (or (not (= $generated@@49 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@49 ($generated@@43 $generated@@45 $generated@@46))))) (and (and (=> (< 0 ($generated@@30 $generated@@50)) ($generated@@39 $generated@@45 $generated@@46 $generated@@47 $generated@@49 ($generated@@28 $generated@@50 ($generated@@29 1)))) (=> (=> (< 0 ($generated@@30 $generated@@50)) ($generated@@35 $generated@@45 $generated@@46 $generated@@47 ($generated@@36 $generated@@48) $generated@@49 ($generated@@28 $generated@@50 ($generated@@29 1)))) (=> (= ($generated@@44 0) ($generated@@30 $generated@@50)) (forall (($generated@@51 T@U) ) (!  (=> ($generated@@24 $generated@@51 $generated@@50) ($generated@@39 $generated@@45 $generated@@46 $generated@@47 $generated@@49 $generated@@51))
 :pattern ( ($generated@@35 $generated@@45 $generated@@46 $generated@@47 ($generated@@36 $generated@@48) $generated@@49 $generated@@51))
))))) (= ($generated@@35 $generated@@45 $generated@@46 $generated@@47 ($generated@@36 $generated@@48) $generated@@49 ($generated@@37 $generated@@38 $generated@@50))  (and (=> (< 0 ($generated@@30 $generated@@50)) ($generated@@35 $generated@@45 $generated@@46 $generated@@47 ($generated@@36 $generated@@48) $generated@@49 ($generated@@28 $generated@@50 ($generated@@29 1)))) (=> (= ($generated@@44 0) ($generated@@30 $generated@@50)) (forall (($generated@@52 T@U) ) (!  (=> ($generated@@24 $generated@@52 $generated@@50) ($generated@@35 $generated@@45 $generated@@46 $generated@@47 ($generated@@36 $generated@@48) $generated@@49 $generated@@52))
 :pattern ( ($generated@@35 $generated@@45 $generated@@46 $generated@@47 ($generated@@36 $generated@@48) $generated@@49 $generated@@52))
)))))))
 :weight 3
 :pattern ( ($generated@@35 $generated@@45 $generated@@46 $generated@@47 ($generated@@36 $generated@@48) $generated@@49 ($generated@@37 $generated@@38 $generated@@50)))
))))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (or ($generated@@39 $generated@@53 $generated@@54 $generated@@55 $generated@@57 $generated@@58) (and (< 1 $generated@@34) (and (or (not (= $generated@@57 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@57 ($generated@@43 $generated@@53 $generated@@54))))) (and (and (=> (< 0 ($generated@@30 $generated@@58)) ($generated@@39 $generated@@53 $generated@@54 $generated@@55 $generated@@57 ($generated@@28 $generated@@58 ($generated@@29 1)))) (=> (=> (< 0 ($generated@@30 $generated@@58)) ($generated@@35 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 ($generated@@28 $generated@@58 ($generated@@29 1)))) (=> (= ($generated@@44 0) ($generated@@30 $generated@@58)) (forall (($generated@@59 T@U) ) (!  (=> ($generated@@24 $generated@@59 $generated@@58) ($generated@@39 $generated@@53 $generated@@54 $generated@@55 $generated@@57 $generated@@59))
 :pattern ( ($generated@@35 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@59))
))))) (= ($generated@@35 $generated@@53 $generated@@54 $generated@@55 ($generated@@36 $generated@@56) $generated@@57 $generated@@58)  (and (=> (< 0 ($generated@@30 $generated@@58)) ($generated@@35 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 ($generated@@28 $generated@@58 ($generated@@29 1)))) (=> (= ($generated@@44 0) ($generated@@30 $generated@@58)) (forall (($generated@@60 T@U) ) (!  (=> ($generated@@24 $generated@@60 $generated@@58) ($generated@@35 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@60))
 :pattern ( ($generated@@35 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@60))
)))))))
 :pattern ( ($generated@@35 $generated@@53 $generated@@54 $generated@@55 ($generated@@36 $generated@@56) $generated@@57 $generated@@58))
))))
(assert (forall (($generated@@61 Int) ) (! (= ($generated@@44 $generated@@61) $generated@@61)
 :pattern ( ($generated@@44 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@37 $generated@@63 $generated@@62) $generated@@62)
 :pattern ( ($generated@@37 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 ($generated@@64 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@64 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@71 ($generated@@43 $generated@@69 $generated@@70))  (and ($generated@@41 $generated@@42 $generated@@71 ($generated@@68 $generated@@69 $generated@@70)) (or (not (= $generated@@71 $generated@@40)) (not true))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@71 ($generated@@43 $generated@@69 $generated@@70)))
 :pattern ( ($generated@@41 $generated@@42 $generated@@71 ($generated@@68 $generated@@69 $generated@@70)))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@35 $generated@@72 $generated@@73 $generated@@74 ($generated@@36 $generated@@75) $generated@@76 $generated@@77) ($generated@@35 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77))
 :pattern ( ($generated@@35 $generated@@72 $generated@@73 $generated@@74 ($generated@@36 $generated@@75) $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@78 ($generated@@65 $generated@@83 $generated@@80) $generated@@81 $generated@@82) ($generated@@79 $generated@@83 $generated@@80 $generated@@81 $generated@@82))
 :pattern ( ($generated@@78 ($generated@@65 $generated@@83 $generated@@80) $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@87 ($generated@@68 $generated@@85 $generated@@86))  (or (= $generated@@87 $generated@@40) (= ($generated@@84 $generated@@87) ($generated@@68 $generated@@85 $generated@@86))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@87 ($generated@@68 $generated@@85 $generated@@86)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and ($generated@@88 $generated@@90) (<= ($generated@@30 $generated@@90) ($generated@@30 $generated@@89))) (and (= ($generated@@88 ($generated@@28 $generated@@89 $generated@@90)) ($generated@@88 $generated@@89)) (= ($generated@@30 ($generated@@28 $generated@@89 $generated@@90)) (- ($generated@@30 $generated@@89) ($generated@@30 $generated@@90)))))
 :pattern ( ($generated@@28 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 Int) ) (!  (=> (<= 0 $generated@@91) (and ($generated@@88 ($generated@@29 $generated@@91)) (= ($generated@@30 ($generated@@29 $generated@@91)) $generated@@91)))
 :pattern ( ($generated@@29 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@79 $generated@@42 $generated@@94 ($generated@@43 $generated@@92 $generated@@93) $generated@@95) ($generated@@79 $generated@@42 $generated@@94 ($generated@@68 $generated@@92 $generated@@93) $generated@@95))
 :pattern ( ($generated@@79 $generated@@42 $generated@@94 ($generated@@43 $generated@@92 $generated@@93) $generated@@95))
 :pattern ( ($generated@@79 $generated@@42 $generated@@94 ($generated@@68 $generated@@92 $generated@@93) $generated@@95))
)))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@39 $generated@@96 $generated@@97 $generated@@98 ($generated@@37 $generated@@42 $generated@@100) ($generated@@37 $generated@@38 $generated@@101)) (and (< 1 $generated@@34) (and (or (not (= $generated@@100 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@100 ($generated@@43 $generated@@96 $generated@@97))))) (and (and (=> (< 0 ($generated@@30 $generated@@101)) ($generated@@39 $generated@@96 $generated@@97 $generated@@98 ($generated@@37 $generated@@42 $generated@@100) ($generated@@28 $generated@@101 ($generated@@29 1)))) (=> (=> (< 0 ($generated@@30 $generated@@101)) ($generated@@35 $generated@@96 $generated@@97 $generated@@98 ($generated@@36 $generated@@99) ($generated@@37 $generated@@42 $generated@@100) ($generated@@28 $generated@@101 ($generated@@29 1)))) (=> (= ($generated@@44 0) ($generated@@30 $generated@@101)) (forall (($generated@@102 T@U) ) (!  (=> ($generated@@24 $generated@@102 $generated@@101) ($generated@@39 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@102))
 :pattern ( ($generated@@35 $generated@@96 $generated@@97 $generated@@98 ($generated@@36 $generated@@99) $generated@@100 $generated@@102))
))))) (= ($generated@@35 $generated@@96 $generated@@97 $generated@@98 ($generated@@36 $generated@@99) ($generated@@37 $generated@@42 $generated@@100) ($generated@@37 $generated@@38 $generated@@101))  (and (=> (< 0 ($generated@@30 $generated@@101)) ($generated@@35 $generated@@96 $generated@@97 $generated@@98 ($generated@@36 $generated@@99) ($generated@@37 $generated@@42 $generated@@100) ($generated@@28 $generated@@101 ($generated@@29 1)))) (=> (= ($generated@@44 0) ($generated@@30 $generated@@101)) (forall (($generated@@103 T@U) ) (!  (=> ($generated@@24 $generated@@103 $generated@@101) ($generated@@35 $generated@@96 $generated@@97 $generated@@98 ($generated@@36 $generated@@99) $generated@@100 $generated@@103))
 :pattern ( ($generated@@35 $generated@@96 $generated@@97 $generated@@98 ($generated@@36 $generated@@99) $generated@@100 $generated@@103))
)))))))
 :weight 3
 :pattern ( ($generated@@35 $generated@@96 $generated@@97 $generated@@98 ($generated@@36 $generated@@99) ($generated@@37 $generated@@42 $generated@@100) ($generated@@37 $generated@@38 $generated@@101)))
))))
(assert  (and (and (and (and (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@104 $generated@@110 $generated@@111 ($generated@@107 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@112) $generated@@114) $generated@@112)
 :weight 0
)) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@104 $generated@@115 $generated@@116 ($generated@@107 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@104 $generated@@115 $generated@@116 $generated@@118 $generated@@120)))
 :weight 0
))) (= ($generated@@7 $generated@@105) 5)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@7 ($generated@@106 $generated@@121 $generated@@122)) 6))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@108 ($generated@@106 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@106 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@109 ($generated@@106 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@106 $generated@@125 $generated@@126))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@79 $generated@@42 $generated@@129 ($generated@@68 $generated@@127 $generated@@128) $generated@@130)  (or (= $generated@@129 $generated@@40) ($generated@@12 ($generated@@64 $generated@@8 ($generated@@104 $generated@@105 $generated@@38 ($generated@@104 $generated@@42 ($generated@@106 $generated@@105 $generated@@38) $generated@@130 $generated@@129) $generated@@3)))))
 :pattern ( ($generated@@79 $generated@@42 $generated@@129 ($generated@@68 $generated@@127 $generated@@128) $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (or ($generated@@24 $generated@@131 $generated@@132) (= $generated@@131 $generated@@132)) ($generated@@24 $generated@@132 $generated@@131))
 :pattern ( ($generated@@24 $generated@@131 $generated@@132) ($generated@@24 $generated@@132 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (! (<= 0 ($generated@@30 $generated@@133))
 :pattern ( ($generated@@30 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@134 ($generated@@43 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@43 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@137 ($generated@@43 $generated@@138 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@43 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@140 ($generated@@68 $generated@@141 $generated@@142)) $generated@@141)
 :pattern ( ($generated@@68 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@143 ($generated@@68 $generated@@144 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@68 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@64 $generated@@147 ($generated@@65 $generated@@147 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@65 $generated@@147 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (and (and (and (=> ($generated@@24 $generated@@148 $generated@@149) (or (not (= $generated@@148 $generated@@149)) (not true))) (=> (and ($generated@@88 $generated@@148) (not ($generated@@88 $generated@@149))) ($generated@@24 $generated@@148 $generated@@149))) (=> (and ($generated@@88 $generated@@148) ($generated@@88 $generated@@149)) (= ($generated@@24 $generated@@148 $generated@@149) (< ($generated@@30 $generated@@148) ($generated@@30 $generated@@149))))) (=> (and ($generated@@24 $generated@@148 $generated@@149) ($generated@@88 $generated@@149)) ($generated@@88 $generated@@148)))
 :pattern ( ($generated@@24 $generated@@148 $generated@@149))
)))
(assert  (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@150 $generated@@153 $generated@@154 $generated@@155 ($generated@@152 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@158 $generated@@159) $generated@@156)
 :weight 0
)) (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@150 $generated@@160 $generated@@161 $generated@@162 ($generated@@152 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@150 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@150 $generated@@169 $generated@@170 $generated@@171 ($generated@@152 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@150 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 Bool) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@12 ($generated@@150 $generated@@42 $generated@@105 $generated@@8 ($generated@@151 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))  (=> (and (or (not (= $generated@@182 $generated@@178)) (not true)) ($generated@@12 ($generated@@64 $generated@@8 ($generated@@104 $generated@@105 $generated@@38 ($generated@@104 $generated@@42 ($generated@@106 $generated@@105 $generated@@38) $generated@@179 $generated@@182) $generated@@180)))) $generated@@181))
 :pattern ( ($generated@@150 $generated@@42 $generated@@105 $generated@@8 ($generated@@151 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (and (= ($generated@@23 ($generated@@43 $generated@@185 $generated@@186)) $generated@@4) (= ($generated@@184 ($generated@@43 $generated@@185 $generated@@186)) $generated@@6))
 :pattern ( ($generated@@43 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (and (= ($generated@@23 ($generated@@68 $generated@@187 $generated@@188)) $generated@@5) (= ($generated@@184 ($generated@@68 $generated@@187 $generated@@188)) $generated@@6))
 :pattern ( ($generated@@68 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ) (!  (=> ($generated@@88 $generated@@189) (= $generated@@189 ($generated@@29 ($generated@@30 $generated@@189))))
 :pattern ( ($generated@@30 $generated@@189))
 :pattern ( ($generated@@88 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and ($generated@@88 $generated@@191) (<= ($generated@@30 $generated@@191) ($generated@@30 $generated@@190))) (or (and (= $generated@@191 ($generated@@29 0)) (= ($generated@@28 $generated@@190 $generated@@191) $generated@@190)) (and (or (not (= $generated@@191 ($generated@@29 0))) (not true)) ($generated@@24 ($generated@@28 $generated@@190 $generated@@191) $generated@@190))))
 :pattern ( ($generated@@28 $generated@@190 $generated@@191))
)))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (or (not (= $generated@@196 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@196 ($generated@@43 $generated@@192 $generated@@193))) (= $generated@@197 ($generated@@29 0))) ($generated@@35 $generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
 :pattern ( ($generated@@35 $generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 Int) ) (! (= ($generated@@65 $generated@@9 ($generated@@13 ($generated@@44 $generated@@198))) ($generated@@37 $generated@@38 ($generated@@65 $generated@@9 ($generated@@13 $generated@@198))))
 :pattern ( ($generated@@65 $generated@@9 ($generated@@13 ($generated@@44 $generated@@198))))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@T) ) (! (= ($generated@@65 $generated@@200 ($generated@@37 $generated@@200 $generated@@199)) ($generated@@37 $generated@@38 ($generated@@65 $generated@@200 $generated@@199)))
 :pattern ( ($generated@@65 $generated@@200 ($generated@@37 $generated@@200 $generated@@199)))
)))
(assert (= ($generated@@7 $generated@@201) 7))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! ($generated@@79 $generated@@201 $generated@@203 $generated $generated@@202)
 :pattern ( ($generated@@79 $generated@@201 $generated@@203 $generated $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! ($generated@@79 $generated@@38 $generated@@205 $generated@@0 $generated@@204)
 :pattern ( ($generated@@79 $generated@@38 $generated@@205 $generated@@0 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! ($generated@@41 $generated@@201 $generated@@206 $generated)
 :pattern ( ($generated@@41 $generated@@201 $generated@@206 $generated))
)))
(assert (forall (($generated@@207 T@U) ) (! ($generated@@41 $generated@@38 $generated@@207 $generated@@0)
 :pattern ( ($generated@@41 $generated@@38 $generated@@207 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@222  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@39 $generated@@208 $generated@@209 $generated $generated@@210 $generated@@211) (or ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 $generated@@212) $generated@@210 $generated@@211) (=> (< 0 ($generated@@30 $generated@@211)) ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 ($generated@@36 $generated@@212)) $generated@@210 ($generated@@28 $generated@@211 ($generated@@29 1))))))) (=> (=> ($generated@@39 $generated@@208 $generated@@209 $generated $generated@@210 $generated@@211) (or ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 $generated@@212) $generated@@210 $generated@@211) (=> (< 0 ($generated@@30 $generated@@211)) ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 ($generated@@36 $generated@@212)) $generated@@210 ($generated@@28 $generated@@211 ($generated@@29 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@39 $generated@@208 $generated@@209 $generated $generated@@210 $generated@@211) (or ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 $generated@@212) $generated@@210 $generated@@211) (=> (= ($generated@@44 0) ($generated@@30 $generated@@211)) (forall (($generated@@223 T@U) ) (!  (=> ($generated@@24 $generated@@223 $generated@@211) ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 ($generated@@36 $generated@@212)) $generated@@210 $generated@@223))
 :pattern ( ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 ($generated@@36 $generated@@212)) $generated@@210 $generated@@223))
))))))))))
(let (($generated@@224  (=> (<= ($generated@@30 $generated@@211) 0) (=> (and (and (and ($generated@@213 $generated@@214) ($generated@@215 $generated@@214)) (= $generated@@216 $generated@@214)) (and (forall (($generated@@225 T@U) ) (!  (=> ($generated@@24 $generated@@225 $generated@@211) ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 $generated@@212) $generated@@210 $generated@@225))
 :pattern ( ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 $generated@@212) $generated@@210 $generated@@225))
 :pattern ( ($generated@@24 $generated@@225 $generated@@211))
)) (= (ControlFlow 0 11) 2))) $generated@@222))))
(let (($generated@@226  (=> (< 0 ($generated@@30 $generated@@211)) (and (=> (= (ControlFlow 0 4) (- 0 10)) ($generated@@88 ($generated@@37 $generated@@38 ($generated@@29 1)))) (=> ($generated@@88 ($generated@@37 $generated@@38 ($generated@@29 1))) (and (=> (= (ControlFlow 0 4) (- 0 9)) (<= ($generated@@30 ($generated@@37 $generated@@38 ($generated@@29 1))) ($generated@@30 $generated@@211))) (=> (<= ($generated@@30 ($generated@@37 $generated@@38 ($generated@@29 1))) ($generated@@30 $generated@@211)) (=> (= $generated@@217 ($generated@@28 $generated@@211 ($generated@@29 1))) (=> (and (and (and ($generated@@213 $generated@@218) ($generated@@215 $generated@@218)) ($generated@@39 $generated@@208 $generated@@209 $generated $generated@@210 $generated@@217)) (and (and ($generated@@39 $generated@@208 $generated@@209 $generated $generated@@210 $generated@@217) (and ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 $generated@@212) $generated@@210 $generated@@217) (and (=> (< 0 ($generated@@30 $generated@@217)) ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 $generated@@212) $generated@@210 ($generated@@28 $generated@@217 ($generated@@29 1)))) (=> (= ($generated@@44 0) ($generated@@30 $generated@@217)) (forall (($generated@@227 T@U) ) (!  (=> ($generated@@24 $generated@@227 $generated@@217) ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 $generated@@212) $generated@@210 $generated@@227))
 :pattern ( ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 $generated@@212) $generated@@210 $generated@@227))
)))))) (and (= $generated@@216 $generated@@218) ($generated@@78 ($generated@@65 $generated@@42 $generated@@210) ($generated@@68 $generated@@208 $generated@@209) $generated@@218)))) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@88 ($generated@@37 $generated@@38 ($generated@@29 1)))) (=> ($generated@@88 ($generated@@37 $generated@@38 ($generated@@29 1))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (<= ($generated@@30 ($generated@@37 $generated@@38 ($generated@@29 1))) ($generated@@30 $generated@@211))) (=> (<= ($generated@@30 ($generated@@37 $generated@@38 ($generated@@29 1))) ($generated@@30 $generated@@211)) (=> (and (and (= $generated@@219 ($generated@@28 $generated@@211 ($generated@@29 1))) ($generated@@79 $generated@@38 $generated@@219 $generated@@0 $generated@@218)) (and ($generated@@39 $generated@@208 $generated@@209 $generated $generated@@210 ($generated@@28 $generated@@211 ($generated@@29 1))) ($generated@@39 $generated@@208 $generated@@209 $generated $generated@@210 ($generated@@28 $generated@@211 ($generated@@29 1))))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> ($generated@@39 $generated@@208 $generated@@209 $generated $generated@@210 ($generated@@28 $generated@@211 ($generated@@29 1))) (or ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 $generated@@212) $generated@@210 ($generated@@28 $generated@@211 ($generated@@29 1))) (=> (< 0 ($generated@@30 ($generated@@28 $generated@@211 ($generated@@29 1)))) ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 ($generated@@36 $generated@@212)) $generated@@210 ($generated@@28 ($generated@@28 $generated@@211 ($generated@@29 1)) ($generated@@29 1))))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@39 $generated@@208 $generated@@209 $generated $generated@@210 ($generated@@28 $generated@@211 ($generated@@29 1))) (or ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 $generated@@212) $generated@@210 ($generated@@28 $generated@@211 ($generated@@29 1))) (=> (= ($generated@@44 0) ($generated@@30 ($generated@@28 $generated@@211 ($generated@@29 1)))) (forall (($generated@@228 T@U) ) (!  (=> ($generated@@24 $generated@@228 ($generated@@28 $generated@@211 ($generated@@29 1))) ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 ($generated@@36 $generated@@212)) $generated@@210 $generated@@228))
 :pattern ( ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 ($generated@@36 $generated@@212)) $generated@@210 $generated@@228))
)))))) (=> (and ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 $generated@@212) $generated@@210 ($generated@@28 $generated@@211 ($generated@@29 1))) (= (ControlFlow 0 4) 2)) $generated@@222)))))))))))))))))
(let (($generated@@229  (=> (= $generated@@220 ($generated@@151 $generated@@40 $generated@@221 $generated@@3 false)) (=> (and (and ($generated@@213 $generated@@216) ($generated@@215 $generated@@216)) (and (= $generated@@221 $generated@@216) (forall (($generated@@230 T@U) ) (!  (=> (and ($generated@@12 ($generated@@37 $generated@@8 ($generated@@11 true))) ($generated@@24 $generated@@230 $generated@@211)) ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 $generated@@212) $generated@@210 $generated@@230))
 :pattern ( ($generated@@35 $generated@@208 $generated@@209 $generated ($generated@@36 $generated@@212) $generated@@210 $generated@@230))
)))) (and (=> (= (ControlFlow 0 12) 4) $generated@@226) (=> (= (ControlFlow 0 12) 11) $generated@@224))))))
(let (($generated@@231  (=> (and ($generated@@213 $generated@@221) ($generated@@215 $generated@@221)) (=> (and (and (or (not (= $generated@@210 $generated@@40)) (not true)) (and ($generated@@41 $generated@@42 $generated@@210 ($generated@@43 $generated@@208 $generated@@209)) ($generated@@79 $generated@@42 $generated@@210 ($generated@@43 $generated@@208 $generated@@209) $generated@@221))) (and (= 3 $generated@@34) (= (ControlFlow 0 13) 12))) $generated@@229))))
$generated@@231))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
