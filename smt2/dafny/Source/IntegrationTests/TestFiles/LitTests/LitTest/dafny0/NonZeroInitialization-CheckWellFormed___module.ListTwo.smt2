(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@24 (T@U T@U T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@60 () Int)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@110 (T@U) Int)
(declare-fun $generated@@111 (T@U) Int)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 (T@T T@T) T@T)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@T) T@T)
(declare-fun $generated@@129 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ) (!  (not ($generated@@21 $generated@@22 $generated@@23))
 :pattern ( ($generated@@21 $generated@@22 $generated@@23))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (! (= ($generated@@24 $generated@@26 ($generated@@25 $generated@@27) $generated@@28) ($generated@@24 $generated@@26 $generated@@27 $generated@@28))
 :pattern ( ($generated@@24 $generated@@26 ($generated@@25 $generated@@27) $generated@@28))
)))
(assert (= ($generated@@29 $generated@@30) $generated@@2))
(assert (= ($generated@@5 $generated@@32) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> ($generated@@34 $generated@@36) ($generated@@31 $generated@@32 $generated@@30 ($generated@@33 $generated@@35) $generated@@36))
 :pattern ( ($generated@@31 $generated@@32 $generated@@30 ($generated@@33 $generated@@35) $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ) (! ($generated@@37 $generated@@32 $generated@@30 ($generated@@33 $generated@@38))
 :pattern ( ($generated@@37 $generated@@32 $generated@@30 ($generated@@33 $generated@@38)))
)))
(assert (forall (($generated@@40 Int) ) (! (= ($generated@@39 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@37 $generated@@32 ($generated@@44 $generated@@47 $generated@@48) ($generated@@33 $generated@@46))  (and ($generated@@45 $generated@@47 $generated@@46) ($generated@@37 $generated@@32 $generated@@48 ($generated@@33 $generated@@46))))
 :pattern ( ($generated@@37 $generated@@32 ($generated@@44 $generated@@47 $generated@@48) ($generated@@33 $generated@@46)))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@49 $generated@@50) (= ($generated@@29 $generated@@50) $generated@@2))
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 $generated@@52) (= ($generated@@29 $generated@@52) $generated@@3))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 ($generated@@53 $generated@@56 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@53 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@51 $generated@@57) (exists (($generated@@58 T@U) ($generated@@59 T@U) ) (= $generated@@57 ($generated@@44 $generated@@58 $generated@@59))))
 :pattern ( ($generated@@51 $generated@@57))
)))
(assert  (=> (<= 1 $generated@@60) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (or ($generated@@61 $generated@@63 $generated@@65) (and (< 1 $generated@@60) ($generated@@37 $generated@@32 $generated@@65 ($generated@@33 $generated@@63)))) (and (=> (not ($generated@@49 $generated@@65)) (let (($generated@@66 ($generated@@62 $generated@@65)))
($generated@@61 $generated@@63 $generated@@66))) (= ($generated@@24 $generated@@63 ($generated@@25 $generated@@64) $generated@@65) (ite ($generated@@49 $generated@@65) 0 (let (($generated@@67 ($generated@@62 $generated@@65)))
(+ ($generated@@24 $generated@@63 $generated@@64 $generated@@67) 1))))))
 :pattern ( ($generated@@24 $generated@@63 ($generated@@25 $generated@@64) $generated@@65))
))))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@49 $generated@@68) (= $generated@@68 $generated@@30))
 :pattern ( ($generated@@49 $generated@@68))
)))
(assert (= ($generated@@5 $generated@@69) 4))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@37 $generated@@69 $generated@@71 ($generated@@70 $generated@@72)) (forall (($generated@@73 T@U) ) (!  (=> ($generated@@21 $generated@@71 $generated@@73) ($generated@@45 $generated@@73 $generated@@72))
 :pattern ( ($generated@@21 $generated@@71 $generated@@73))
)))
 :pattern ( ($generated@@37 $generated@@69 $generated@@71 ($generated@@70 $generated@@72)))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@54 $generated@@78 $generated@@75) $generated@@76 $generated@@77) ($generated@@31 $generated@@78 $generated@@75 $generated@@76 $generated@@77))
 :pattern ( ($generated@@74 ($generated@@54 $generated@@78 $generated@@75) $generated@@76 $generated@@77))
)))
(assert  (=> (<= 1 $generated@@60) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@61 $generated@@79 ($generated@@41 $generated@@32 $generated@@81)) (and (< 1 $generated@@60) ($generated@@37 $generated@@32 $generated@@81 ($generated@@33 $generated@@79)))) (and (=> (not ($generated@@10 ($generated@@41 $generated@@6 ($generated@@9 ($generated@@49 ($generated@@41 $generated@@32 $generated@@81)))))) (let (($generated@@82 ($generated@@41 $generated@@32 ($generated@@62 ($generated@@41 $generated@@32 $generated@@81)))))
($generated@@61 $generated@@79 $generated@@82))) (= ($generated@@24 $generated@@79 ($generated@@25 $generated@@80) ($generated@@41 $generated@@32 $generated@@81)) (ite ($generated@@49 ($generated@@41 $generated@@32 $generated@@81)) 0 (let (($generated@@83 ($generated@@41 $generated@@32 ($generated@@62 ($generated@@41 $generated@@32 $generated@@81)))))
($generated@@39 (+ ($generated@@24 $generated@@79 ($generated@@25 $generated@@80) $generated@@83) 1)))))))
 :weight 3
 :pattern ( ($generated@@24 $generated@@79 ($generated@@25 $generated@@80) ($generated@@41 $generated@@32 $generated@@81)))
))))
(assert (forall (($generated@@86 T@U) ) (!  (and (= ($generated@@84 ($generated@@33 $generated@@86)) $generated@@1) (= ($generated@@85 ($generated@@33 $generated@@86)) $generated@@4))
 :pattern ( ($generated@@33 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@37 $generated@@32 $generated@@88 ($generated@@33 $generated@@87)) (or ($generated@@49 $generated@@88) ($generated@@51 $generated@@88)))
 :pattern ( ($generated@@51 $generated@@88) ($generated@@37 $generated@@32 $generated@@88 ($generated@@33 $generated@@87)))
 :pattern ( ($generated@@49 $generated@@88) ($generated@@37 $generated@@32 $generated@@88 ($generated@@33 $generated@@87)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@45 ($generated@@54 $generated@@91 $generated@@89) $generated@@90) ($generated@@37 $generated@@91 $generated@@89 $generated@@90))
 :pattern ( ($generated@@45 ($generated@@54 $generated@@91 $generated@@89) $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@31 $generated@@69 $generated@@92 ($generated@@70 $generated@@93) $generated@@94) (forall (($generated@@95 T@U) ) (!  (=> ($generated@@21 $generated@@92 $generated@@95) ($generated@@74 $generated@@95 $generated@@93 $generated@@94))
 :pattern ( ($generated@@21 $generated@@92 $generated@@95))
)))
 :pattern ( ($generated@@31 $generated@@69 $generated@@92 ($generated@@70 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@29 ($generated@@44 $generated@@96 $generated@@97)) $generated@@3)
 :pattern ( ($generated@@44 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@98 ($generated@@44 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@44 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@62 ($generated@@44 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@44 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@103 ($generated@@70 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@70 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@84 ($generated@@70 $generated@@105)) $generated)
 :pattern ( ($generated@@70 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 ($generated@@33 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@33 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@53 $generated@@109 ($generated@@54 $generated@@109 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@54 $generated@@109 $generated@@108))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (< ($generated@@110 $generated@@112) ($generated@@111 ($generated@@44 $generated@@112 $generated@@113)))
 :pattern ( ($generated@@44 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (< ($generated@@111 $generated@@115) ($generated@@111 ($generated@@44 $generated@@114 $generated@@115)))
 :pattern ( ($generated@@44 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and ($generated@@34 $generated@@118) (and ($generated@@51 $generated@@116) ($generated@@31 $generated@@32 $generated@@116 ($generated@@33 $generated@@117) $generated@@118))) ($generated@@74 ($generated@@98 $generated@@116) $generated@@117 $generated@@118))
 :pattern ( ($generated@@74 ($generated@@98 $generated@@116) $generated@@117 $generated@@118))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@119 $generated@@130 $generated@@131 $generated@@132 ($generated@@126 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@135 $generated@@136) $generated@@133)
 :weight 0
)) (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@119 $generated@@137 $generated@@138 $generated@@139 ($generated@@126 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@119 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@119 $generated@@146 $generated@@147 $generated@@148 ($generated@@126 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)))) (= ($generated@@5 $generated@@120) 5)) (= ($generated@@5 $generated@@121) 6)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@123 $generated@@155 $generated@@156 ($generated@@127 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@157) $generated@@159) $generated@@157)
 :weight 0
))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@164 $generated@@165) (= ($generated@@123 $generated@@160 $generated@@161 ($generated@@127 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@162) $generated@@165) ($generated@@123 $generated@@160 $generated@@161 $generated@@163 $generated@@165)))
 :weight 0
))) (= ($generated@@5 $generated@@124) 7)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@5 ($generated@@125 $generated@@166 $generated@@167)) 8))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@128 ($generated@@125 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@125 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@129 ($generated@@125 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@125 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@10 ($generated@@119 $generated@@120 $generated@@121 $generated@@6 ($generated@@122 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))  (=> (and (or (not (= $generated@@176 $generated@@172)) (not true)) ($generated@@10 ($generated@@53 $generated@@6 ($generated@@123 $generated@@121 $generated@@124 ($generated@@123 $generated@@120 ($generated@@125 $generated@@121 $generated@@124) $generated@@173 $generated@@176) $generated@@174)))) $generated@@175))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121 $generated@@6 ($generated@@122 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@110 ($generated@@54 $generated@@32 $generated@@178)) ($generated@@111 $generated@@178))
 :pattern ( ($generated@@110 ($generated@@54 $generated@@32 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@45 $generated@@179 ($generated@@70 $generated@@180)) (and (= ($generated@@54 $generated@@69 ($generated@@53 $generated@@69 $generated@@179)) $generated@@179) ($generated@@37 $generated@@69 ($generated@@53 $generated@@69 $generated@@179) ($generated@@70 $generated@@180))))
 :pattern ( ($generated@@45 $generated@@179 ($generated@@70 $generated@@180)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@45 $generated@@182 ($generated@@33 $generated@@181)) (and (= ($generated@@54 $generated@@32 ($generated@@53 $generated@@32 $generated@@182)) $generated@@182) ($generated@@37 $generated@@32 ($generated@@53 $generated@@32 $generated@@182) ($generated@@33 $generated@@181))))
 :pattern ( ($generated@@45 $generated@@182 ($generated@@33 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and ($generated@@34 $generated@@185) (and ($generated@@51 $generated@@183) ($generated@@31 $generated@@32 $generated@@183 ($generated@@33 $generated@@184) $generated@@185))) ($generated@@31 $generated@@32 ($generated@@62 $generated@@183) ($generated@@33 $generated@@184) $generated@@185))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@62 $generated@@183) ($generated@@33 $generated@@184) $generated@@185))
)))
(assert (= $generated@@30 ($generated@@41 $generated@@32 $generated@@30)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@44 ($generated@@41 $generated@@124 $generated@@186) ($generated@@41 $generated@@32 $generated@@187)) ($generated@@41 $generated@@32 ($generated@@44 $generated@@186 $generated@@187)))
 :pattern ( ($generated@@44 ($generated@@41 $generated@@124 $generated@@186) ($generated@@41 $generated@@32 $generated@@187)))
)))
(assert (forall (($generated@@188 Int) ) (! (= ($generated@@54 $generated@@7 ($generated@@11 ($generated@@39 $generated@@188))) ($generated@@41 $generated@@124 ($generated@@54 $generated@@7 ($generated@@11 $generated@@188))))
 :pattern ( ($generated@@54 $generated@@7 ($generated@@11 ($generated@@39 $generated@@188))))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@T) ) (! (= ($generated@@54 $generated@@190 ($generated@@41 $generated@@190 $generated@@189)) ($generated@@41 $generated@@124 ($generated@@54 $generated@@190 $generated@@189)))
 :pattern ( ($generated@@54 $generated@@190 ($generated@@41 $generated@@190 $generated@@189)))
)))
(assert  (=> (<= 1 $generated@@60) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (or ($generated@@61 $generated@@191 $generated@@193) (and (< 1 $generated@@60) ($generated@@37 $generated@@32 $generated@@193 ($generated@@33 $generated@@191)))) (<= ($generated@@39 0) ($generated@@24 $generated@@191 $generated@@192 $generated@@193)))
 :pattern ( ($generated@@24 $generated@@191 $generated@@192 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@34 $generated@@197) (= ($generated@@31 $generated@@32 ($generated@@44 $generated@@195 $generated@@196) ($generated@@33 $generated@@194) $generated@@197)  (and ($generated@@74 $generated@@195 $generated@@194 $generated@@197) ($generated@@31 $generated@@32 $generated@@196 ($generated@@33 $generated@@194) $generated@@197))))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@44 $generated@@195 $generated@@196) ($generated@@33 $generated@@194) $generated@@197))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@204  (=> (and ($generated@@61 ($generated@@70 $generated@@198) ($generated@@41 $generated@@32 ($generated@@44 ($generated@@54 $generated@@69 ($generated@@41 $generated@@69 $generated@@22)) ($generated@@41 $generated@@32 ($generated@@44 ($generated@@54 $generated@@69 ($generated@@41 $generated@@69 $generated@@22)) ($generated@@41 $generated@@32 $generated@@30)))))) (= (ControlFlow 0 3) (- 0 2))) (<= ($generated@@39 2) ($generated@@39 ($generated@@24 ($generated@@70 $generated@@198) ($generated@@25 ($generated@@25 $generated@@199)) ($generated@@41 $generated@@32 ($generated@@44 ($generated@@54 $generated@@69 ($generated@@41 $generated@@69 $generated@@22)) ($generated@@41 $generated@@32 ($generated@@44 ($generated@@54 $generated@@69 ($generated@@41 $generated@@69 $generated@@22)) ($generated@@41 $generated@@32 $generated@@30)))))))))))
(let (($generated@@205 true))
(let (($generated@@206  (=> (= $generated@@200 ($generated@@122 $generated@@201 $generated@@202 $generated@@0 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@205) (=> (= (ControlFlow 0 4) 3) $generated@@204)))))
(let (($generated@@207  (=> (and (and ($generated@@34 $generated@@202) ($generated@@203 $generated@@202)) (and (= 2 $generated@@60) (= (ControlFlow 0 5) 4))) $generated@@206)))
$generated@@207)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
