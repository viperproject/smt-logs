(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@75 (Int) Int)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated@@3) 0))
(assert (= ($generated@@28 $generated) $generated@@1))
(assert (= ($generated@@28 $generated@@0) $generated@@2))
(assert (= ($generated@@29 $generated@@3) $generated@@4))
(assert (= ($generated@@11 $generated@@31) 3))
(assert (forall (($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@35 $generated@@32)  (or (= $generated@@35 $generated@@33) (= ($generated@@34 $generated@@35) $generated@@32)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@35 $generated@@32))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@36 $generated@@31 $generated@@38 $generated@@37 $generated@@39) ($generated@@36 $generated@@31 $generated@@38 $generated@@32 $generated@@39))
 :pattern ( ($generated@@36 $generated@@31 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@36 $generated@@31 $generated@@38 $generated@@32 $generated@@39))
)))
(assert (= ($generated@@27 $generated@@40) 0))
(assert (= ($generated@@41 $generated@@5 $generated@@9) $generated@@40))
(assert  (not ($generated@@42 $generated@@40)))
(assert (= ($generated@@27 $generated@@43) 0))
(assert (= ($generated@@41 $generated@@5 $generated@@10) $generated@@43))
(assert  (not ($generated@@42 $generated@@43)))
(assert  (and (and (and (and (and (and (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@45 $generated@@52 $generated@@53 ($generated@@49 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@56) $generated@@54)
 :weight 0
)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (or (= $generated@@61 $generated@@62) (= ($generated@@45 $generated@@57 $generated@@58 ($generated@@49 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@62) ($generated@@45 $generated@@57 $generated@@58 $generated@@60 $generated@@62)))
 :weight 0
))) (= ($generated@@11 $generated@@46) 4)) (= ($generated@@11 $generated@@47) 5)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@11 ($generated@@48 $generated@@63 $generated@@64)) 6))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@50 ($generated@@48 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@51 ($generated@@48 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@48 $generated@@67 $generated@@68))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@36 $generated@@31 $generated@@69 $generated@@32 $generated@@70)  (or (= $generated@@69 $generated@@33) ($generated@@16 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@70 $generated@@69) $generated@@3)))))
 :pattern ( ($generated@@36 $generated@@31 $generated@@69 $generated@@32 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@71 $generated@@72 $generated@@73) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@16 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@72 $generated@@74) $generated@@3))) ($generated@@16 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@73 $generated@@74) $generated@@3))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@73 $generated@@74) $generated@@3))
)))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@75 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@44 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@44 $generated@@82 $generated@@81))
)))
(assert ($generated@@42 $generated@@3))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (and ($generated@@83 $generated@@84) (and (or (not (= $generated@@85 $generated@@33)) (not true)) (= ($generated@@34 $generated@@85) $generated@@32))) ($generated@@16 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@84 $generated@@85) $generated@@3)))) ($generated@@36 $generated@@12 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@84 $generated@@85) $generated@@40)) $generated $generated@@84))
 :pattern ( ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@84 $generated@@85) $generated@@40)))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (and ($generated@@83 $generated@@86) (and (or (not (= $generated@@87 $generated@@33)) (not true)) (= ($generated@@34 $generated@@87) $generated@@32))) ($generated@@16 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@86 $generated@@87) $generated@@3)))) ($generated@@36 $generated@@13 ($generated@@44 $generated@@13 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@86 $generated@@87) $generated@@43)) $generated@@0 $generated@@86))
 :pattern ( ($generated@@44 $generated@@13 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@86 $generated@@87) $generated@@43)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (!  (=> ($generated@@71 $generated@@88 $generated@@89) (=> ($generated@@36 $generated@@92 $generated@@90 $generated@@91 $generated@@88) ($generated@@36 $generated@@92 $generated@@90 $generated@@91 $generated@@89)))
 :pattern ( ($generated@@71 $generated@@88 $generated@@89) ($generated@@36 $generated@@92 $generated@@90 $generated@@91 $generated@@88))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@93 $generated@@37)  (and ($generated@@30 $generated@@31 $generated@@93 $generated@@32) (or (not (= $generated@@93 $generated@@33)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@93 $generated@@37))
 :pattern ( ($generated@@30 $generated@@31 $generated@@93 $generated@@32))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or (not (= $generated@@94 $generated@@96)) (not true)) (=> (and ($generated@@71 $generated@@94 $generated@@95) ($generated@@71 $generated@@95 $generated@@96)) ($generated@@71 $generated@@94 $generated@@96)))
 :pattern ( ($generated@@71 $generated@@94 $generated@@95) ($generated@@71 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (and (= ($generated@@97 ($generated@@41 $generated@@98 $generated@@99)) $generated@@98) (= ($generated@@29 ($generated@@41 $generated@@98 $generated@@99)) $generated@@99))
 :pattern ( ($generated@@41 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@44 $generated@@101 ($generated@@80 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@80 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@83 $generated@@102) (and (or (not (= $generated@@103 $generated@@33)) (not true)) (= ($generated@@34 $generated@@103) $generated@@32))) ($generated@@30 $generated@@12 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@102 $generated@@103) $generated@@40)) $generated))
 :pattern ( ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@102 $generated@@103) $generated@@40)))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (and ($generated@@83 $generated@@104) (and (or (not (= $generated@@105 $generated@@33)) (not true)) (= ($generated@@34 $generated@@105) $generated@@32))) ($generated@@30 $generated@@13 ($generated@@44 $generated@@13 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@104 $generated@@105) $generated@@43)) $generated@@0))
 :pattern ( ($generated@@44 $generated@@13 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@104 $generated@@105) $generated@@43)))
)))
(assert  (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@106 $generated@@109 $generated@@110 $generated@@111 ($generated@@108 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@114 $generated@@115) $generated@@112)
 :weight 0
)) (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@106 $generated@@116 $generated@@117 $generated@@118 ($generated@@108 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@106 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@106 $generated@@125 $generated@@126 $generated@@127 ($generated@@108 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@106 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 Bool) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@16 ($generated@@106 $generated@@31 $generated@@46 $generated@@12 ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))  (=> (and (or (not (= $generated@@138 $generated@@134)) (not true)) ($generated@@16 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@135 $generated@@138) $generated@@136)))) $generated@@137))
 :pattern ( ($generated@@106 $generated@@31 $generated@@46 $generated@@12 ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> ($generated@@83 ($generated@@49 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@140 $generated@@141 ($generated@@49 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@140 $generated@@141) $generated@@142 $generated@@143))) ($generated@@71 $generated@@140 ($generated@@49 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@140 $generated@@141 ($generated@@49 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@140 $generated@@141) $generated@@142 $generated@@143))))
 :pattern ( ($generated@@49 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@140 $generated@@141 ($generated@@49 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@140 $generated@@141) $generated@@142 $generated@@143)))
)))
(assert (= ($generated@@28 $generated@@32) $generated@@6))
(assert (= ($generated@@144 $generated@@32) $generated@@8))
(assert (= ($generated@@28 $generated@@37) $generated@@7))
(assert (= ($generated@@144 $generated@@37) $generated@@8))
(assert (forall (($generated@@145 Int) ) (! (= ($generated@@80 $generated@@13 ($generated@@17 ($generated@@75 $generated@@145))) ($generated@@77 $generated@@47 ($generated@@80 $generated@@13 ($generated@@17 $generated@@145))))
 :pattern ( ($generated@@80 $generated@@13 ($generated@@17 ($generated@@75 $generated@@145))))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@80 $generated@@147 ($generated@@77 $generated@@147 $generated@@146)) ($generated@@77 $generated@@47 ($generated@@80 $generated@@147 $generated@@146)))
 :pattern ( ($generated@@80 $generated@@147 ($generated@@77 $generated@@147 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! ($generated@@36 $generated@@13 $generated@@149 $generated@@0 $generated@@148)
 :pattern ( ($generated@@36 $generated@@13 $generated@@149 $generated@@0 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! ($generated@@36 $generated@@12 $generated@@151 $generated $generated@@150)
 :pattern ( ($generated@@36 $generated@@12 $generated@@151 $generated $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! ($generated@@30 $generated@@13 $generated@@152 $generated@@0)
 :pattern ( ($generated@@30 $generated@@13 $generated@@152 $generated@@0))
)))
(assert (forall (($generated@@153 T@U) ) (! ($generated@@30 $generated@@12 $generated@@153 $generated)
 :pattern ( ($generated@@30 $generated@@12 $generated@@153 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () Bool)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@162  (=> (= $generated@@154 ($generated@@107 $generated@@33 $generated@@155 $generated@@3 false)) (=> (and (= $generated@@156 ($generated@@16 ($generated@@77 $generated@@12 ($generated@@15 false)))) (= $generated@@157 ($generated@@75 65))) (=> (and (and (and (or (not (= $generated@@158 $generated@@33)) (not true)) ($generated@@30 $generated@@31 $generated@@158 $generated@@32)) (and (not ($generated@@16 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@155 $generated@@158) $generated@@3)))) (= ($generated@@16 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@155 $generated@@158) $generated@@40))) $generated@@156))) (and (and (= ($generated@@18 ($generated@@44 $generated@@13 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@155 $generated@@158) $generated@@43))) $generated@@157) (= $generated@@159 ($generated@@49 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@155 $generated@@158 ($generated@@49 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@155 $generated@@158) $generated@@3 ($generated@@80 $generated@@12 ($generated@@15 true)))))) (and ($generated@@83 $generated@@159) ($generated@@160 $generated@@159)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not ($generated@@16 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@159 $generated@@158) $generated@@40))))) (=> (not ($generated@@16 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@159 $generated@@158) $generated@@40)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@18 ($generated@@44 $generated@@13 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@159 $generated@@158) $generated@@43))) ($generated@@75 65))) (=> (= ($generated@@18 ($generated@@44 $generated@@13 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@159 $generated@@158) $generated@@43))) ($generated@@75 65)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@16 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@159 $generated@@158) $generated@@40))) ($generated@@16 ($generated@@77 $generated@@12 ($generated@@15 false))))) (=> (= ($generated@@16 ($generated@@44 $generated@@12 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@159 $generated@@158) $generated@@40))) ($generated@@16 ($generated@@77 $generated@@12 ($generated@@15 false)))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@18 ($generated@@44 $generated@@13 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@31 ($generated@@48 $generated@@46 $generated@@47) $generated@@159 $generated@@158) $generated@@43))) ($generated@@75 65))))))))))))))
(let (($generated@@163  (=> (and (and ($generated@@83 $generated@@155) ($generated@@160 $generated@@155)) (and (= 0 $generated@@161) (= (ControlFlow 0 6) 2))) $generated@@162)))
$generated@@163)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
