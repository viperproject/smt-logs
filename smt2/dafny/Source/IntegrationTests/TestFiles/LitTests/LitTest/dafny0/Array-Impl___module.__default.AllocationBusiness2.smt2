(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T T@T) T@T)
(declare-fun $generated@@67 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@98 (Int) Int)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@103 (T@T T@U) T@U)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@108 (T@U T@U) Bool)
(declare-fun $generated@@109 (T@U T@U) Bool)
(declare-fun $generated@@113 (T@U Int) T@U)
(declare-fun $generated@@118 (T@U T@U T@U) Bool)
(declare-fun $generated@@123 (Int) T@U)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Int)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@194 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@229 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert (= ($generated@@31 $generated@@2) 0))
(assert (= ($generated@@32 $generated) $generated@@0))
(assert (= ($generated@@33 $generated@@2) $generated@@3))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (and (or (not (= $generated@@40 $generated@@36)) (not true)) (= ($generated@@37 $generated@@40) ($generated@@35 $generated@@39))) ($generated@@38 $generated@@17 ($generated@@21 ($generated@@34 $generated@@40)) $generated))
 :pattern ( ($generated@@34 $generated@@40) ($generated@@35 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (and (or (not (= $generated@@43 $generated@@36)) (not true)) (= ($generated@@37 $generated@@43) ($generated@@35 $generated@@42))) ($generated@@38 $generated@@17 ($generated@@21 ($generated@@41 $generated@@43)) $generated))
 :pattern ( ($generated@@41 $generated@@43) ($generated@@35 $generated@@42))
)))
(assert (= ($generated@@15 $generated@@45) 3))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@48 ($generated@@46 $generated@@47) $generated@@49) ($generated@@44 $generated@@45 $generated@@48 ($generated@@35 $generated@@47) $generated@@49))
 :pattern ( ($generated@@44 $generated@@45 $generated@@48 ($generated@@46 $generated@@47) $generated@@49))
 :pattern ( ($generated@@44 $generated@@45 $generated@@48 ($generated@@35 $generated@@47) $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@38 $generated@@45 $generated@@51 $generated@@50)  (or (= $generated@@51 $generated@@36) (= ($generated@@37 $generated@@51) $generated@@50)))
 :pattern ( ($generated@@38 $generated@@45 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@54 $generated@@52 $generated@@55) ($generated@@44 $generated@@45 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@44 $generated@@45 $generated@@54 $generated@@52 $generated@@55))
 :pattern ( ($generated@@44 $generated@@45 $generated@@54 $generated@@53 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@57 $generated@@56 $generated@@58) ($generated@@44 $generated@@45 $generated@@57 $generated@@50 $generated@@58))
 :pattern ( ($generated@@44 $generated@@45 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@44 $generated@@45 $generated@@57 $generated@@50 $generated@@58))
)))
(assert (= ($generated@@31 $generated@@59) 0))
(assert (= ($generated@@60 $generated@@10 $generated@@14) $generated@@59))
(assert ($generated@@61 $generated@@59))
(assert  (and (and (and (and (and (and (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@63 $generated@@70 $generated@@71 ($generated@@67 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@74) $generated@@72)
 :weight 0
)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (or (= $generated@@79 $generated@@80) (= ($generated@@63 $generated@@75 $generated@@76 ($generated@@67 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@77) $generated@@80) ($generated@@63 $generated@@75 $generated@@76 $generated@@78 $generated@@80)))
 :weight 0
))) (= ($generated@@15 $generated@@64) 4)) (= ($generated@@15 $generated@@65) 5)) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (= ($generated@@15 ($generated@@66 $generated@@81 $generated@@82)) 6))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@68 ($generated@@66 $generated@@83 $generated@@84)) $generated@@83)
 :pattern ( ($generated@@66 $generated@@83 $generated@@84))
))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@69 ($generated@@66 $generated@@85 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@66 $generated@@85 $generated@@86))
))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@88 ($generated@@35 $generated@@87) $generated@@89)  (or (= $generated@@88 $generated@@36) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@89 $generated@@88) $generated@@2)))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@88 ($generated@@35 $generated@@87) $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@90 $generated@@53 $generated@@91)  (or (= $generated@@90 $generated@@36) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@91 $generated@@90) $generated@@2)))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@90 $generated@@53 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@92 $generated@@50 $generated@@93)  (or (= $generated@@92 $generated@@36) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@93 $generated@@92) $generated@@2)))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@92 $generated@@50 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@94 $generated@@95 $generated@@96) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@95 $generated@@97) $generated@@2))) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@96 $generated@@97) $generated@@2))))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@96 $generated@@97) $generated@@2))
)))
 :pattern ( ($generated@@94 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@99 Int) ) (! (= ($generated@@98 $generated@@99) $generated@@99)
 :pattern ( ($generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@100 $generated@@102 $generated@@101) $generated@@101)
 :pattern ( ($generated@@100 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@103 $generated@@105 ($generated@@62 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@62 $generated@@105 $generated@@104))
)))
(assert (= ($generated@@15 $generated@@106) 7))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@38 $generated@@106 $generated@@110 ($generated@@107 $generated@@111)) (forall (($generated@@112 T@U) ) (!  (=> ($generated@@108 $generated@@110 $generated@@112) ($generated@@109 $generated@@112 $generated@@111))
 :pattern ( ($generated@@108 $generated@@110 $generated@@112))
)))
 :pattern ( ($generated@@38 $generated@@106 $generated@@110 ($generated@@107 $generated@@111)))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 Int) ) (! (= ($generated@@31 ($generated@@113 $generated@@114 $generated@@115)) (+ ($generated@@31 $generated@@114) 1))
 :pattern ( ($generated@@113 $generated@@114 $generated@@115))
)))
(assert ($generated@@61 $generated@@2))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@38 $generated@@45 $generated@@117 ($generated@@46 $generated@@116))  (and ($generated@@38 $generated@@45 $generated@@117 ($generated@@35 $generated@@116)) (or (not (= $generated@@117 $generated@@36)) (not true))))
 :pattern ( ($generated@@38 $generated@@45 $generated@@117 ($generated@@46 $generated@@116)))
 :pattern ( ($generated@@38 $generated@@45 $generated@@117 ($generated@@35 $generated@@116)))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@118 ($generated@@103 $generated@@122 $generated@@119) $generated@@120 $generated@@121) ($generated@@44 $generated@@122 $generated@@119 $generated@@120 $generated@@121))
 :pattern ( ($generated@@118 ($generated@@103 $generated@@122 $generated@@119) $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 Int) ($generated@@129 Int) ) (!  (=> (and (and (and ($generated@@124 $generated@@126) (and (or (not (= $generated@@127 $generated@@36)) (not true)) (= ($generated@@37 $generated@@127) ($generated@@35 $generated@@125)))) (and (and (<= 0 $generated@@128) (< $generated@@128 ($generated@@34 $generated@@127))) (and (<= 0 $generated@@129) (< $generated@@129 ($generated@@41 $generated@@127))))) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@126 $generated@@127) $generated@@2)))) ($generated@@118 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@126 $generated@@127) ($generated@@113 ($generated@@123 $generated@@128) $generated@@129)) $generated@@125 $generated@@126))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@126 $generated@@127) ($generated@@113 ($generated@@123 $generated@@128) $generated@@129)) ($generated@@35 $generated@@125))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@94 $generated@@130 $generated@@131) (=> ($generated@@118 $generated@@132 $generated@@133 $generated@@130) ($generated@@118 $generated@@132 $generated@@133 $generated@@131)))
 :pattern ( ($generated@@94 $generated@@130 $generated@@131) ($generated@@118 $generated@@132 $generated@@133 $generated@@130))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@T) ) (!  (=> ($generated@@94 $generated@@134 $generated@@135) (=> ($generated@@44 $generated@@138 $generated@@136 $generated@@137 $generated@@134) ($generated@@44 $generated@@138 $generated@@136 $generated@@137 $generated@@135)))
 :pattern ( ($generated@@94 $generated@@134 $generated@@135) ($generated@@44 $generated@@138 $generated@@136 $generated@@137 $generated@@134))
)))
(assert (forall (($generated@@140 T@U) ) (!  (and (= ($generated@@32 ($generated@@35 $generated@@140)) $generated@@6) (= ($generated@@139 ($generated@@35 $generated@@140)) $generated@@12))
 :pattern ( ($generated@@35 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (!  (and (= ($generated@@32 ($generated@@46 $generated@@141)) $generated@@7) (= ($generated@@139 ($generated@@46 $generated@@141)) $generated@@12))
 :pattern ( ($generated@@46 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> ($generated@@109 $generated@@142 $generated@@53) (and (= ($generated@@103 $generated@@45 ($generated@@62 $generated@@45 $generated@@142)) $generated@@142) ($generated@@38 $generated@@45 ($generated@@62 $generated@@45 $generated@@142) $generated@@53)))
 :pattern ( ($generated@@109 $generated@@142 $generated@@53))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@109 $generated@@143 $generated@@52) (and (= ($generated@@103 $generated@@45 ($generated@@62 $generated@@45 $generated@@143)) $generated@@143) ($generated@@38 $generated@@45 ($generated@@62 $generated@@45 $generated@@143) $generated@@52)))
 :pattern ( ($generated@@109 $generated@@143 $generated@@52))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> ($generated@@109 $generated@@144 $generated@@56) (and (= ($generated@@103 $generated@@45 ($generated@@62 $generated@@45 $generated@@144)) $generated@@144) ($generated@@38 $generated@@45 ($generated@@62 $generated@@45 $generated@@144) $generated@@56)))
 :pattern ( ($generated@@109 $generated@@144 $generated@@56))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@109 $generated@@145 $generated@@50) (and (= ($generated@@103 $generated@@45 ($generated@@62 $generated@@45 $generated@@145)) $generated@@145) ($generated@@38 $generated@@45 ($generated@@62 $generated@@45 $generated@@145) $generated@@50)))
 :pattern ( ($generated@@109 $generated@@145 $generated@@50))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@38 $generated@@45 $generated@@147 ($generated@@35 $generated@@146))  (or (= $generated@@147 $generated@@36) (= ($generated@@37 $generated@@147) ($generated@@35 $generated@@146))))
 :pattern ( ($generated@@38 $generated@@45 $generated@@147 ($generated@@35 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@38 $generated@@45 $generated@@148 $generated@@52)  (and ($generated@@38 $generated@@45 $generated@@148 $generated@@53) (or (not (= $generated@@148 $generated@@36)) (not true))))
 :pattern ( ($generated@@38 $generated@@45 $generated@@148 $generated@@52))
 :pattern ( ($generated@@38 $generated@@45 $generated@@148 $generated@@53))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@38 $generated@@45 $generated@@149 $generated@@56)  (and ($generated@@38 $generated@@45 $generated@@149 $generated@@50) (or (not (= $generated@@149 $generated@@36)) (not true))))
 :pattern ( ($generated@@38 $generated@@45 $generated@@149 $generated@@56))
 :pattern ( ($generated@@38 $generated@@45 $generated@@149 $generated@@50))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@124 $generated@@150) (and (or (not (= $generated@@151 $generated@@36)) (not true)) (= ($generated@@37 $generated@@151) $generated@@50))) ($generated@@38 $generated@@106 ($generated@@62 $generated@@106 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@150 $generated@@151) $generated@@59)) ($generated@@107 $generated@@52)))
 :pattern ( ($generated@@62 $generated@@106 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@150 $generated@@151) $generated@@59)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and ($generated@@124 $generated@@152) (and (or (not (= $generated@@153 $generated@@36)) (not true)) (= ($generated@@37 $generated@@153) $generated@@50))) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@152 $generated@@153) $generated@@2)))) ($generated@@44 $generated@@106 ($generated@@62 $generated@@106 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@152 $generated@@153) $generated@@59)) ($generated@@107 $generated@@52) $generated@@152))
 :pattern ( ($generated@@62 $generated@@106 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@152 $generated@@153) $generated@@59)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (or (not (= $generated@@154 $generated@@156)) (not true)) (=> (and ($generated@@94 $generated@@154 $generated@@155) ($generated@@94 $generated@@155 $generated@@156)) ($generated@@94 $generated@@154 $generated@@156)))
 :pattern ( ($generated@@94 $generated@@154 $generated@@155) ($generated@@94 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Int) ($generated@@161 Int) ) (!  (=> (and (and ($generated@@124 $generated@@158) (and (or (not (= $generated@@159 $generated@@36)) (not true)) (= ($generated@@37 $generated@@159) ($generated@@35 $generated@@157)))) (and (and (<= 0 $generated@@160) (< $generated@@160 ($generated@@34 $generated@@159))) (and (<= 0 $generated@@161) (< $generated@@161 ($generated@@41 $generated@@159))))) ($generated@@109 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@158 $generated@@159) ($generated@@113 ($generated@@123 $generated@@160) $generated@@161)) $generated@@157))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@158 $generated@@159) ($generated@@113 ($generated@@123 $generated@@160) $generated@@161)) ($generated@@35 $generated@@157))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (and (= ($generated@@162 ($generated@@60 $generated@@163 $generated@@164)) $generated@@163) (= ($generated@@33 ($generated@@60 $generated@@163 $generated@@164)) $generated@@164))
 :pattern ( ($generated@@60 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> ($generated@@109 $generated@@165 $generated) (and (= ($generated@@103 $generated@@17 ($generated@@62 $generated@@17 $generated@@165)) $generated@@165) ($generated@@38 $generated@@17 ($generated@@62 $generated@@17 $generated@@165) $generated)))
 :pattern ( ($generated@@109 $generated@@165 $generated))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@T) ) (! (= ($generated@@109 ($generated@@103 $generated@@168 $generated@@166) $generated@@167) ($generated@@38 $generated@@168 $generated@@166 $generated@@167))
 :pattern ( ($generated@@109 ($generated@@103 $generated@@168 $generated@@166) $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (<= 0 ($generated@@34 $generated@@169))
 :pattern ( ($generated@@34 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (! (<= 0 ($generated@@41 $generated@@170))
 :pattern ( ($generated@@41 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@44 $generated@@106 $generated@@171 ($generated@@107 $generated@@172) $generated@@173) (forall (($generated@@174 T@U) ) (!  (=> ($generated@@108 $generated@@171 $generated@@174) ($generated@@118 $generated@@174 $generated@@172 $generated@@173))
 :pattern ( ($generated@@108 $generated@@171 $generated@@174))
)))
 :pattern ( ($generated@@44 $generated@@106 $generated@@171 ($generated@@107 $generated@@172) $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! ($generated@@38 $generated@@45 $generated@@175 $generated@@53)
 :pattern ( ($generated@@38 $generated@@45 $generated@@175 $generated@@53))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@176 ($generated@@107 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@107 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@32 ($generated@@107 $generated@@178)) $generated@@1)
 :pattern ( ($generated@@107 $generated@@178))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@31 ($generated@@123 $generated@@179)) 1)
 :pattern ( ($generated@@123 $generated@@179))
)))
(assert (forall (($generated@@181 Int) ) (! (= ($generated@@180 ($generated@@123 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@123 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@182 ($generated@@35 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@35 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ) (! (= ($generated@@184 ($generated@@46 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@46 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@T) ) (! (= ($generated@@62 $generated@@187 ($generated@@103 $generated@@187 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@103 $generated@@187 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and ($generated@@124 $generated@@189) (and (or (not (= $generated@@190 $generated@@36)) (not true)) (= ($generated@@37 $generated@@190) ($generated@@35 $generated@@188)))) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@189 $generated@@190) $generated@@2)))) ($generated@@44 $generated@@17 ($generated@@21 ($generated@@34 $generated@@190)) $generated $generated@@189))
 :pattern ( ($generated@@34 $generated@@190) ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@189 $generated@@190) $generated@@2)) ($generated@@35 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and ($generated@@124 $generated@@192) (and (or (not (= $generated@@193 $generated@@36)) (not true)) (= ($generated@@37 $generated@@193) ($generated@@35 $generated@@191)))) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@192 $generated@@193) $generated@@2)))) ($generated@@44 $generated@@17 ($generated@@21 ($generated@@41 $generated@@193)) $generated $generated@@192))
 :pattern ( ($generated@@41 $generated@@193) ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@192 $generated@@193) $generated@@2)) ($generated@@35 $generated@@191))
)))
(assert  (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@194 $generated@@197 $generated@@198 $generated@@199 ($generated@@196 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@202 $generated@@203) $generated@@200)
 :weight 0
)) (and (forall (($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@194 $generated@@204 $generated@@205 $generated@@206 ($generated@@196 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@194 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ($generated@@215 T@T) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@194 $generated@@213 $generated@@214 $generated@@215 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@194 $generated@@213 $generated@@214 $generated@@215 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (= ($generated@@20 ($generated@@194 $generated@@45 $generated@@64 $generated@@16 ($generated@@195 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (or (not (= $generated@@226 $generated@@222)) (not true)) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@223 $generated@@226) $generated@@224)))) $generated@@225))
 :pattern ( ($generated@@194 $generated@@45 $generated@@64 $generated@@16 ($generated@@195 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 Int) ) (!  (and (= ($generated@@228 ($generated@@113 $generated@@230 $generated@@231)) $generated@@230) (= ($generated@@229 ($generated@@113 $generated@@230 $generated@@231)) $generated@@231))
 :pattern ( ($generated@@113 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> ($generated@@109 $generated@@232 ($generated@@107 $generated@@233)) (and (= ($generated@@103 $generated@@106 ($generated@@62 $generated@@106 $generated@@232)) $generated@@232) ($generated@@38 $generated@@106 ($generated@@62 $generated@@106 $generated@@232) ($generated@@107 $generated@@233))))
 :pattern ( ($generated@@109 $generated@@232 ($generated@@107 $generated@@233)))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> ($generated@@109 $generated@@235 ($generated@@35 $generated@@234)) (and (= ($generated@@103 $generated@@45 ($generated@@62 $generated@@45 $generated@@235)) $generated@@235) ($generated@@38 $generated@@45 ($generated@@62 $generated@@45 $generated@@235) ($generated@@35 $generated@@234))))
 :pattern ( ($generated@@109 $generated@@235 ($generated@@35 $generated@@234)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> ($generated@@109 $generated@@237 ($generated@@46 $generated@@236)) (and (= ($generated@@103 $generated@@45 ($generated@@62 $generated@@45 $generated@@237)) $generated@@237) ($generated@@38 $generated@@45 ($generated@@62 $generated@@45 $generated@@237) ($generated@@46 $generated@@236))))
 :pattern ( ($generated@@109 $generated@@237 ($generated@@46 $generated@@236)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> ($generated@@124 ($generated@@67 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@238 $generated@@239 ($generated@@67 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@238 $generated@@239) $generated@@240 $generated@@241))) ($generated@@94 $generated@@238 ($generated@@67 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@238 $generated@@239 ($generated@@67 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@238 $generated@@239) $generated@@240 $generated@@241))))
 :pattern ( ($generated@@67 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@238 $generated@@239 ($generated@@67 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@238 $generated@@239) $generated@@240 $generated@@241)))
)))
(assert (= ($generated@@32 $generated@@53) $generated@@4))
(assert (= ($generated@@139 $generated@@53) $generated@@11))
(assert (= ($generated@@32 $generated@@52) $generated@@5))
(assert (= ($generated@@139 $generated@@52) $generated@@11))
(assert (= ($generated@@32 $generated@@56) $generated@@8))
(assert (= ($generated@@139 $generated@@56) $generated@@13))
(assert (= ($generated@@32 $generated@@50) $generated@@9))
(assert (= ($generated@@139 $generated@@50) $generated@@13))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@103 $generated@@17 ($generated@@21 ($generated@@98 $generated@@242))) ($generated@@100 $generated@@65 ($generated@@103 $generated@@17 ($generated@@21 $generated@@242))))
 :pattern ( ($generated@@103 $generated@@17 ($generated@@21 ($generated@@98 $generated@@242))))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@T) ) (! (= ($generated@@103 $generated@@244 ($generated@@100 $generated@@244 $generated@@243)) ($generated@@100 $generated@@65 ($generated@@103 $generated@@244 $generated@@243)))
 :pattern ( ($generated@@103 $generated@@244 ($generated@@100 $generated@@244 $generated@@243)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! ($generated@@44 $generated@@17 $generated@@246 $generated $generated@@245)
 :pattern ( ($generated@@44 $generated@@17 $generated@@246 $generated $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! ($generated@@38 $generated@@17 $generated@@247 $generated)
 :pattern ( ($generated@@38 $generated@@17 $generated@@247 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () Int)
(declare-fun $generated@@255 () Int)
(declare-fun $generated@@256 () Bool)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@259  (=> (= $generated@@248 ($generated@@195 $generated@@36 $generated@@249 $generated@@2 false)) (=> (and (or (not (= $generated@@250 $generated@@36)) (not true)) ($generated@@38 $generated@@45 $generated@@250 $generated@@50)) (=> (and (and (not ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@249 $generated@@250) $generated@@2)))) (= $generated@@251 ($generated@@67 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@249 $generated@@250 ($generated@@67 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@249 $generated@@250) $generated@@2 ($generated@@103 $generated@@16 ($generated@@19 true)))))) (and ($generated@@124 $generated@@251) ($generated@@252 $generated@@251))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (not (= $generated@@253 $generated@@36)) (not true))) (=> (or (not (= $generated@@253 $generated@@36)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 $generated@@254) (< $generated@@254 ($generated@@34 $generated@@253)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 $generated@@255) (< $generated@@255 ($generated@@41 $generated@@253)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= ($generated@@62 $generated@@45 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@251 $generated@@253) ($generated@@113 ($generated@@123 $generated@@254) $generated@@255))) $generated@@36)) (not true))) (=> (= (ControlFlow 0 2) (- 0 1)) (not ($generated@@108 ($generated@@62 $generated@@106 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@251 ($generated@@62 $generated@@45 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@45 ($generated@@66 $generated@@64 $generated@@65) $generated@@251 $generated@@253) ($generated@@113 ($generated@@123 $generated@@254) $generated@@255)))) $generated@@59)) ($generated@@103 $generated@@45 $generated@@250)))))))))))))))
(let (($generated@@260  (=> (and (and ($generated@@124 $generated@@249) ($generated@@252 $generated@@249)) (and ($generated@@38 $generated@@45 $generated@@253 ($generated@@46 $generated@@56)) ($generated@@44 $generated@@45 $generated@@253 ($generated@@46 $generated@@56) $generated@@249))) (=> (and (and (and (=> $generated@@256 (and ($generated@@38 $generated@@45 $generated@@257 $generated@@56) ($generated@@44 $generated@@45 $generated@@257 $generated@@56 $generated@@249))) true) (and (= 1 $generated@@258) (<= ($generated@@98 0) $generated@@254))) (and (and (< $generated@@254 ($generated@@34 $generated@@253)) (<= ($generated@@98 0) $generated@@255)) (and (< $generated@@255 ($generated@@41 $generated@@253)) (= (ControlFlow 0 8) 2)))) $generated@@259))))
$generated@@260)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
