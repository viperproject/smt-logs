(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated@@2) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@27 $generated@@2) $generated@@3))
(assert (= ($generated@@9 $generated@@29) 3))
(assert (forall (($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@33 $generated@@30)  (or (= $generated@@33 $generated@@31) (= ($generated@@32 $generated@@33) $generated@@30)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@33 $generated@@30))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@36 $generated@@35 $generated@@37) ($generated@@34 $generated@@29 $generated@@36 $generated@@30 $generated@@37))
 :pattern ( ($generated@@34 $generated@@29 $generated@@36 $generated@@35 $generated@@37))
 :pattern ( ($generated@@34 $generated@@29 $generated@@36 $generated@@30 $generated@@37))
)))
(assert (= ($generated@@25 $generated@@38) 0))
(assert (= ($generated@@39 $generated@@4 $generated@@8) $generated@@38))
(assert  (not ($generated@@40 $generated@@38)))
(assert  (and (and (and (and (and (and (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@42 $generated@@49 $generated@@50 ($generated@@46 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@53) $generated@@51)
 :weight 0
)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@58 $generated@@59) (= ($generated@@42 $generated@@54 $generated@@55 ($generated@@46 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@59) ($generated@@42 $generated@@54 $generated@@55 $generated@@57 $generated@@59)))
 :weight 0
))) (= ($generated@@9 $generated@@43) 4)) (= ($generated@@9 $generated@@44) 5)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (= ($generated@@9 ($generated@@45 $generated@@60 $generated@@61)) 6))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@47 ($generated@@45 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@62 $generated@@63))
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@64 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@45 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@66 $generated@@30 $generated@@67)  (or (= $generated@@66 $generated@@31) ($generated@@14 ($generated@@41 $generated@@10 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@67 $generated@@66) $generated@@2)))))
 :pattern ( ($generated@@34 $generated@@29 $generated@@66 $generated@@30 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@68 $generated@@69 $generated@@70) (forall (($generated@@71 T@U) ) (!  (=> ($generated@@14 ($generated@@41 $generated@@10 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@69 $generated@@71) $generated@@2))) ($generated@@14 ($generated@@41 $generated@@10 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@70 $generated@@71) $generated@@2))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@70 $generated@@71) $generated@@2))
)))
 :pattern ( ($generated@@68 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@41 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@41 $generated@@74 $generated@@73))
)))
(assert (= ($generated@@9 $generated@@75) 7))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@28 $generated@@75 $generated@@79 ($generated@@76 $generated@@80)) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@77 $generated@@79 $generated@@81) ($generated@@78 $generated@@81 $generated@@80))
 :pattern ( ($generated@@77 $generated@@79 $generated@@81))
)))
 :pattern ( ($generated@@28 $generated@@75 $generated@@79 ($generated@@76 $generated@@80)))
)))
(assert ($generated@@40 $generated@@2))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and (and ($generated@@82 $generated@@83) (and (or (not (= $generated@@84 $generated@@31)) (not true)) (= ($generated@@32 $generated@@84) $generated@@30))) ($generated@@14 ($generated@@41 $generated@@10 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@83 $generated@@84) $generated@@2)))) ($generated@@34 $generated@@11 ($generated@@41 $generated@@11 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@83 $generated@@84) $generated@@38)) $generated $generated@@83))
 :pattern ( ($generated@@41 $generated@@11 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@83 $generated@@84) $generated@@38)))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@85 ($generated@@72 $generated@@89 $generated@@86) $generated@@87 $generated@@88) ($generated@@34 $generated@@89 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@85 ($generated@@72 $generated@@89 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@68 $generated@@90 $generated@@91) (=> ($generated@@85 $generated@@92 $generated@@93 $generated@@90) ($generated@@85 $generated@@92 $generated@@93 $generated@@91)))
 :pattern ( ($generated@@68 $generated@@90 $generated@@91) ($generated@@85 $generated@@92 $generated@@93 $generated@@90))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (!  (=> ($generated@@68 $generated@@94 $generated@@95) (=> ($generated@@34 $generated@@98 $generated@@96 $generated@@97 $generated@@94) ($generated@@34 $generated@@98 $generated@@96 $generated@@97 $generated@@95)))
 :pattern ( ($generated@@68 $generated@@94 $generated@@95) ($generated@@34 $generated@@98 $generated@@96 $generated@@97 $generated@@94))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@78 $generated@@99 $generated@@30) (and (= ($generated@@72 $generated@@29 ($generated@@41 $generated@@29 $generated@@99)) $generated@@99) ($generated@@28 $generated@@29 ($generated@@41 $generated@@29 $generated@@99) $generated@@30)))
 :pattern ( ($generated@@78 $generated@@99 $generated@@30))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@78 $generated@@100 $generated@@35) (and (= ($generated@@72 $generated@@29 ($generated@@41 $generated@@29 $generated@@100)) $generated@@100) ($generated@@28 $generated@@29 ($generated@@41 $generated@@29 $generated@@100) $generated@@35)))
 :pattern ( ($generated@@78 $generated@@100 $generated@@35))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@101 $generated@@35)  (and ($generated@@28 $generated@@29 $generated@@101 $generated@@30) (or (not (= $generated@@101 $generated@@31)) (not true))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@101 $generated@@35))
 :pattern ( ($generated@@28 $generated@@29 $generated@@101 $generated@@30))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or (not (= $generated@@102 $generated@@104)) (not true)) (=> (and ($generated@@68 $generated@@102 $generated@@103) ($generated@@68 $generated@@103 $generated@@104)) ($generated@@68 $generated@@102 $generated@@104)))
 :pattern ( ($generated@@68 $generated@@102 $generated@@103) ($generated@@68 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (and (= ($generated@@105 ($generated@@39 $generated@@106 $generated@@107)) $generated@@106) (= ($generated@@27 ($generated@@39 $generated@@106 $generated@@107)) $generated@@107))
 :pattern ( ($generated@@39 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@78 $generated@@108 $generated) (and (= ($generated@@72 $generated@@11 ($generated@@41 $generated@@11 $generated@@108)) $generated@@108) ($generated@@28 $generated@@11 ($generated@@41 $generated@@11 $generated@@108) $generated)))
 :pattern ( ($generated@@78 $generated@@108 $generated))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@78 ($generated@@72 $generated@@111 $generated@@109) $generated@@110) ($generated@@28 $generated@@111 $generated@@109 $generated@@110))
 :pattern ( ($generated@@78 ($generated@@72 $generated@@111 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@34 $generated@@75 $generated@@112 ($generated@@76 $generated@@113) $generated@@114) (forall (($generated@@115 T@U) ) (!  (=> ($generated@@77 $generated@@112 $generated@@115) ($generated@@85 $generated@@115 $generated@@113 $generated@@114))
 :pattern ( ($generated@@77 $generated@@112 $generated@@115))
)))
 :pattern ( ($generated@@34 $generated@@75 $generated@@112 ($generated@@76 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@76 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@76 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@26 ($generated@@76 $generated@@118)) $generated@@1)
 :pattern ( ($generated@@76 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@41 $generated@@120 ($generated@@72 $generated@@120 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@72 $generated@@120 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@82 $generated@@121) (and (or (not (= $generated@@122 $generated@@31)) (not true)) (= ($generated@@32 $generated@@122) $generated@@30))) ($generated@@28 $generated@@11 ($generated@@41 $generated@@11 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@121 $generated@@122) $generated@@38)) $generated))
 :pattern ( ($generated@@41 $generated@@11 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@121 $generated@@122) $generated@@38)))
)))
(assert  (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@123 $generated@@126 $generated@@127 $generated@@128 ($generated@@125 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@131 $generated@@132) $generated@@129)
 :weight 0
)) (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@123 $generated@@133 $generated@@134 $generated@@135 ($generated@@125 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@123 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@123 $generated@@142 $generated@@143 $generated@@144 ($generated@@125 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@123 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@14 ($generated@@123 $generated@@29 $generated@@43 $generated@@10 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))  (=> (and (or (not (= $generated@@155 $generated@@151)) (not true)) ($generated@@14 ($generated@@41 $generated@@10 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@152 $generated@@155) $generated@@153)))) $generated@@154))
 :pattern ( ($generated@@123 $generated@@29 $generated@@43 $generated@@10 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@78 $generated@@157 ($generated@@76 $generated@@158)) (and (= ($generated@@72 $generated@@75 ($generated@@41 $generated@@75 $generated@@157)) $generated@@157) ($generated@@28 $generated@@75 ($generated@@41 $generated@@75 $generated@@157) ($generated@@76 $generated@@158))))
 :pattern ( ($generated@@78 $generated@@157 ($generated@@76 $generated@@158)))
)))
(assert (= ($generated@@26 $generated@@30) $generated@@5))
(assert (= ($generated@@159 $generated@@30) $generated@@7))
(assert (= ($generated@@26 $generated@@35) $generated@@6))
(assert (= ($generated@@159 $generated@@35) $generated@@7))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! ($generated@@34 $generated@@11 $generated@@161 $generated $generated@@160)
 :pattern ( ($generated@@34 $generated@@11 $generated@@161 $generated $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! ($generated@@28 $generated@@11 $generated@@162 $generated)
 :pattern ( ($generated@@28 $generated@@11 $generated@@162 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 (T@U Int) Bool)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 (T@U Int) Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@174 true))
(let (($generated@@175  (=> (and (=> ($generated@@77 $generated@@163 ($generated@@72 $generated@@29 $generated@@164)) ($generated@@165 $generated@@166 ($generated@@16 ($generated@@41 $generated@@11 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@167 $generated@@164) $generated@@38))))) (= (ControlFlow 0 4) 1)) $generated@@174)))
(let (($generated@@176  (=> (and ($generated@@77 $generated@@163 ($generated@@72 $generated@@29 $generated@@164)) ($generated@@85 ($generated@@72 $generated@@29 $generated@@166) $generated@@30 $generated@@167)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@164 $generated@@31)) (not true))) (=> (or (not (= $generated@@164 $generated@@31)) (not true)) (=> (= $generated@@168 ($generated@@16 ($generated@@41 $generated@@11 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@167 $generated@@164) $generated@@38)))) (=> (and (and ($generated@@34 $generated@@11 ($generated@@15 $generated@@168) $generated $generated@@167) ($generated@@169 $generated@@166 ($generated@@16 ($generated@@41 $generated@@11 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@167 $generated@@164) $generated@@38))))) (and ($generated@@165 $generated@@166 ($generated@@16 ($generated@@41 $generated@@11 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@167 $generated@@164) $generated@@38)))) (= (ControlFlow 0 2) 1))) $generated@@174)))))))
(let (($generated@@177  (=> (= $generated@@170 ($generated@@124 $generated@@31 $generated@@171 $generated@@2 false)) (=> (and ($generated@@82 $generated@@167) ($generated@@172 $generated@@167)) (=> (and (and (forall (($generated@@178 T@U) ) (!  (=> (and (or (not (= $generated@@178 $generated@@31)) (not true)) ($generated@@14 ($generated@@41 $generated@@10 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@171 $generated@@178) $generated@@2)))) (= ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@167 $generated@@178) ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@171 $generated@@178)))
 :pattern ( ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@167 $generated@@178))
)) ($generated@@68 $generated@@171 $generated@@167)) (and ($generated@@28 $generated@@29 $generated@@164 $generated@@35) ($generated@@34 $generated@@29 $generated@@164 $generated@@35 $generated@@167))) (and (=> (= (ControlFlow 0 5) 2) $generated@@176) (=> (= (ControlFlow 0 5) 4) $generated@@175)))))))
(let (($generated@@179  (=> (and (and (and ($generated@@82 $generated@@171) ($generated@@172 $generated@@171)) (and (or (not (= $generated@@166 $generated@@31)) (not true)) (and ($generated@@28 $generated@@29 $generated@@166 $generated@@35) ($generated@@34 $generated@@29 $generated@@166 $generated@@35 $generated@@171)))) (and (and ($generated@@28 $generated@@75 $generated@@163 ($generated@@76 $generated@@35)) ($generated@@34 $generated@@75 $generated@@163 ($generated@@76 $generated@@35) $generated@@171)) (and (= 2 $generated@@173) (= (ControlFlow 0 6) 5)))) $generated@@177)))
$generated@@179))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
