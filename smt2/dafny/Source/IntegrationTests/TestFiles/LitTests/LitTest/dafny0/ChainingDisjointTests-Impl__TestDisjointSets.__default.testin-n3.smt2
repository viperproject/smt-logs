(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@52 (T@U T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@78 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@82 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (!  (=> ($generated@@21 $generated@@22 $generated@@24) ($generated@@21 ($generated@@20 $generated@@22 $generated@@23) $generated@@24))
 :pattern ( ($generated@@20 $generated@@22 $generated@@23) ($generated@@21 $generated@@22 $generated@@24))
)))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@21 $generated@@26 $generated@@27) ($generated@@21 ($generated@@20 $generated@@25 $generated@@26) $generated@@27))
 :pattern ( ($generated@@20 $generated@@25 $generated@@26) ($generated@@21 $generated@@26 $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@21 $generated@@30 $generated@@31) (not ($generated@@21 ($generated@@28 $generated@@29 $generated@@30) $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30) ($generated@@21 $generated@@30 $generated@@31))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@20 ($generated@@20 $generated@@32 $generated@@33) $generated@@33) ($generated@@20 $generated@@32 $generated@@33))
 :pattern ( ($generated@@20 ($generated@@20 $generated@@32 $generated@@33) $generated@@33))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@21 ($generated@@28 $generated@@34 $generated@@35) $generated@@36)  (and ($generated@@21 $generated@@34 $generated@@36) (not ($generated@@21 $generated@@35 $generated@@36))))
 :pattern ( ($generated@@21 ($generated@@28 $generated@@34 $generated@@35) $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@38 $generated@@40 ($generated@@37 $generated@@40 $generated@@39)) $generated@@39)
 :pattern ( ($generated@@37 $generated@@40 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@43) (forall (($generated@@44 T@U) ) (!  (or (not ($generated@@21 $generated@@42 $generated@@44)) (not ($generated@@21 $generated@@43 $generated@@44)))
 :pattern ( ($generated@@21 $generated@@42 $generated@@44))
 :pattern ( ($generated@@21 $generated@@43 $generated@@44))
)))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43))
)))
(assert (= ($generated@@3 $generated@@46) 3))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@49 ($generated@@47 $generated@@50)) (forall (($generated@@51 T@U) ) (!  (=> ($generated@@21 $generated@@49 $generated@@51) ($generated@@48 $generated@@51 $generated@@50))
 :pattern ( ($generated@@21 $generated@@49 $generated@@51))
)))
 :pattern ( ($generated@@45 $generated@@46 $generated@@49 ($generated@@47 $generated@@50)))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@52 ($generated@@38 $generated@@57 $generated@@54) $generated@@55 $generated@@56) ($generated@@53 $generated@@57 $generated@@54 $generated@@55 $generated@@56))
 :pattern ( ($generated@@52 ($generated@@38 $generated@@57 $generated@@54) $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@21 ($generated@@20 $generated@@58 $generated@@59) $generated@@60)  (or ($generated@@21 $generated@@58 $generated@@60) ($generated@@21 $generated@@59 $generated@@60)))
 :pattern ( ($generated@@21 ($generated@@20 $generated@@58 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> ($generated@@41 $generated@@61 $generated@@62) (and (= ($generated@@28 ($generated@@20 $generated@@61 $generated@@62) $generated@@61) $generated@@62) (= ($generated@@28 ($generated@@20 $generated@@61 $generated@@62) $generated@@62) $generated@@61)))
 :pattern ( ($generated@@20 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ) (!  (=> ($generated@@48 $generated@@63 $generated) (and (= ($generated@@38 $generated@@5 ($generated@@37 $generated@@5 $generated@@63)) $generated@@63) ($generated@@45 $generated@@5 ($generated@@37 $generated@@5 $generated@@63) $generated)))
 :pattern ( ($generated@@48 $generated@@63 $generated))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@48 ($generated@@38 $generated@@66 $generated@@64) $generated@@65) ($generated@@45 $generated@@66 $generated@@64 $generated@@65))
 :pattern ( ($generated@@48 ($generated@@38 $generated@@66 $generated@@64) $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@53 $generated@@46 $generated@@67 ($generated@@47 $generated@@68) $generated@@69) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@21 $generated@@67 $generated@@70) ($generated@@52 $generated@@70 $generated@@68 $generated@@69))
 :pattern ( ($generated@@21 $generated@@67 $generated@@70))
)))
 :pattern ( ($generated@@53 $generated@@46 $generated@@67 ($generated@@47 $generated@@68) $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 ($generated@@47 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@47 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@19 ($generated@@47 $generated@@73)) $generated@@1)
 :pattern ( ($generated@@47 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@37 $generated@@75 ($generated@@38 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@38 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@20 $generated@@76 ($generated@@20 $generated@@76 $generated@@77)) ($generated@@20 $generated@@76 $generated@@77))
 :pattern ( ($generated@@20 $generated@@76 ($generated@@20 $generated@@76 $generated@@77)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@78 $generated@@89 $generated@@90 $generated@@91 ($generated@@85 $generated@@89 $generated@@90 $generated@@91 $generated@@93 $generated@@94 $generated@@95 $generated@@92) $generated@@94 $generated@@95) $generated@@92)
 :weight 0
)) (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (or (= $generated@@101 $generated@@103) (= ($generated@@78 $generated@@96 $generated@@97 $generated@@98 ($generated@@85 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@102 $generated@@99) $generated@@103 $generated@@104) ($generated@@78 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@103 $generated@@104)))
 :weight 0
)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@111 $generated@@113) (= ($generated@@78 $generated@@105 $generated@@106 $generated@@107 ($generated@@85 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@112 $generated@@113) ($generated@@78 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@112 $generated@@113)))
 :weight 0
)))) (= ($generated@@3 $generated@@79) 4)) (= ($generated@@3 $generated@@80) 5)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@82 $generated@@114 $generated@@115 ($generated@@86 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@116) $generated@@118) $generated@@116)
 :weight 0
))) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@82 $generated@@119 $generated@@120 ($generated@@86 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@82 $generated@@119 $generated@@120 $generated@@122 $generated@@124)))
 :weight 0
))) (= ($generated@@3 $generated@@83) 6)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (= ($generated@@3 ($generated@@84 $generated@@125 $generated@@126)) 7))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@127 $generated@@128)) $generated@@127)
 :pattern ( ($generated@@84 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@129 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@84 $generated@@129 $generated@@130))
))))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 Bool) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@8 ($generated@@78 $generated@@79 $generated@@80 $generated@@4 ($generated@@81 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))  (=> (and (or (not (= $generated@@135 $generated@@131)) (not true)) ($generated@@8 ($generated@@37 $generated@@4 ($generated@@82 $generated@@80 $generated@@83 ($generated@@82 $generated@@79 ($generated@@84 $generated@@80 $generated@@83) $generated@@132 $generated@@135) $generated@@133)))) $generated@@134))
 :pattern ( ($generated@@78 $generated@@79 $generated@@80 $generated@@4 ($generated@@81 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@48 $generated@@137 ($generated@@47 $generated@@138)) (and (= ($generated@@38 $generated@@46 ($generated@@37 $generated@@46 $generated@@137)) $generated@@137) ($generated@@45 $generated@@46 ($generated@@37 $generated@@46 $generated@@137) ($generated@@47 $generated@@138))))
 :pattern ( ($generated@@48 $generated@@137 ($generated@@47 $generated@@138)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! ($generated@@53 $generated@@5 $generated@@140 $generated $generated@@139)
 :pattern ( ($generated@@53 $generated@@5 $generated@@140 $generated $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! ($generated@@45 $generated@@5 $generated@@141 $generated)
 :pattern ( ($generated@@45 $generated@@5 $generated@@141 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@152  (=> (= $generated@@142 ($generated@@81 $generated@@143 $generated@@144 $generated@@2 false)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@41 $generated@@145 $generated@@146)) (=> ($generated@@41 $generated@@145 $generated@@146) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@41 $generated@@145 $generated@@147)) (=> ($generated@@41 $generated@@145 $generated@@147) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@41 $generated@@146 $generated@@147)) (=> ($generated@@41 $generated@@146 $generated@@147) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@41 $generated@@145 $generated@@148)) (=> ($generated@@41 $generated@@145 $generated@@148) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@41 $generated@@146 $generated@@148)) (=> ($generated@@41 $generated@@146 $generated@@148) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@41 $generated@@147 $generated@@148)))))))))))))))
(let (($generated@@153  (=> (and (and (and (and ($generated@@149 $generated@@144) ($generated@@150 $generated@@144)) (and ($generated@@45 $generated@@46 $generated@@145 ($generated@@47 $generated)) ($generated@@53 $generated@@46 $generated@@145 ($generated@@47 $generated) $generated@@144))) (and (and ($generated@@45 $generated@@46 $generated@@146 ($generated@@47 $generated)) ($generated@@53 $generated@@46 $generated@@146 ($generated@@47 $generated) $generated@@144)) (and ($generated@@45 $generated@@46 $generated@@147 ($generated@@47 $generated)) ($generated@@53 $generated@@46 $generated@@147 ($generated@@47 $generated) $generated@@144)))) (and (and (and ($generated@@45 $generated@@46 $generated@@148 ($generated@@47 $generated)) ($generated@@53 $generated@@46 $generated@@148 ($generated@@47 $generated) $generated@@144)) (and (= 0 $generated@@151) ($generated@@41 $generated@@145 $generated@@146))) (and (and ($generated@@41 $generated@@145 $generated@@146) ($generated@@41 ($generated@@20 $generated@@145 $generated@@146) $generated@@147)) (and ($generated@@41 ($generated@@20 ($generated@@20 $generated@@145 $generated@@146) $generated@@147) $generated@@148) (= (ControlFlow 0 8) 2))))) $generated@@152)))
$generated@@153)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
