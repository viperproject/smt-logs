(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () Int)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@T T@T) T@T)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U) Bool)
(declare-fun $generated@@102 (Int) Int)
(declare-fun $generated@@104 (T@T T@U) T@U)
(declare-fun $generated@@107 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U) Bool)
(declare-fun $generated@@113 (T@U) Bool)
(declare-fun $generated@@115 (T@T T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Int)
(declare-fun $generated@@160 (T@U) Int)
(declare-fun $generated@@168 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated@@1) 0))
(assert (= ($generated@@30 $generated) $generated@@0))
(assert (= ($generated@@31 $generated@@1) $generated@@2))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@32 ($generated@@33 $generated@@34) $generated@@35 $generated@@36 $generated@@37 $generated@@38) ($generated@@32 $generated@@34 $generated@@35 $generated@@36 $generated@@37 $generated@@38))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@34) $generated@@35 $generated@@36 $generated@@37 $generated@@38))
)))
(assert (= ($generated@@39 $generated@@40) $generated@@5))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@46) 3) (= ($generated@@13 $generated@@50) 4)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@56 $generated@@65 $generated@@66 ($generated@@62 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@69) $generated@@67)
 :weight 0
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (or (= $generated@@74 $generated@@75) (= ($generated@@56 $generated@@70 $generated@@71 ($generated@@62 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@75) ($generated@@56 $generated@@70 $generated@@71 $generated@@73 $generated@@75)))
 :weight 0
))) (= ($generated@@13 $generated@@57) 5)) (= ($generated@@13 $generated@@58) 6)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@13 ($generated@@59 $generated@@76 $generated@@77)) 7))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@63 ($generated@@59 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@59 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@64 ($generated@@59 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@59 $generated@@80 $generated@@81))
))))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (or ($generated@@43 $generated@@83 $generated@@84 $generated@@85 $generated@@86) (and (< 1 $generated@@41) (and (and (and ($generated@@42 $generated@@83) (and (or (not (= $generated@@84 $generated@@44)) (not true)) (and ($generated@@45 $generated@@46 $generated@@84 $generated@@47) ($generated@@48 $generated@@46 $generated@@84 $generated@@47 $generated@@83)))) ($generated@@45 $generated@@46 $generated@@85 $generated@@49)) ($generated@@45 $generated@@50 $generated@@86 ($generated@@51 $generated))))) (and (=> (not ($generated@@52 $generated@@86)) (let (($generated@@87 ($generated@@53 $generated@@86)))
(let (($generated@@88 ($generated@@20 ($generated@@54 $generated@@15 ($generated@@55 $generated@@86)))))
 (=> (or (not (= $generated@@85 $generated@@44)) (not true)) (=> (= ($generated@@20 ($generated@@54 $generated@@15 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@83 $generated@@85) $generated@@60))) $generated@@88) ($generated@@43 $generated@@83 $generated@@84 ($generated@@54 $generated@@46 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@83 $generated@@85) $generated@@61)) $generated@@87)))))) (= ($generated@@32 ($generated@@33 $generated@@82) $generated@@83 $generated@@84 $generated@@85 $generated@@86) (ite ($generated@@52 $generated@@86) (= $generated@@85 $generated@@44) (let (($generated@@89 ($generated@@53 $generated@@86)))
(let (($generated@@90 ($generated@@20 ($generated@@54 $generated@@15 ($generated@@55 $generated@@86)))))
 (and (and (or (not (= $generated@@85 $generated@@44)) (not true)) (= ($generated@@20 ($generated@@54 $generated@@15 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@83 $generated@@85) $generated@@60))) $generated@@90)) ($generated@@32 $generated@@82 $generated@@83 $generated@@84 ($generated@@54 $generated@@46 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@83 $generated@@85) $generated@@61)) $generated@@89))))))))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@82) $generated@@83 $generated@@84 $generated@@85 $generated@@86) ($generated@@42 $generated@@83))
))))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@92 $generated@@49)  (or (= $generated@@92 $generated@@44) (= ($generated@@91 $generated@@92) $generated@@49)))
 :pattern ( ($generated@@45 $generated@@46 $generated@@92 $generated@@49))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@48 $generated@@46 $generated@@93 $generated@@47 $generated@@94) ($generated@@48 $generated@@46 $generated@@93 $generated@@49 $generated@@94))
 :pattern ( ($generated@@48 $generated@@46 $generated@@93 $generated@@47 $generated@@94))
 :pattern ( ($generated@@48 $generated@@46 $generated@@93 $generated@@49 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@42 $generated@@96) ($generated@@48 $generated@@50 $generated@@40 ($generated@@51 $generated@@95) $generated@@96))
 :pattern ( ($generated@@48 $generated@@50 $generated@@40 ($generated@@51 $generated@@95) $generated@@96))
)))
(assert (= ($generated@@29 $generated@@60) 0))
(assert (= ($generated@@97 $generated@@7 $generated@@11) $generated@@60))
(assert  (not ($generated@@98 $generated@@60)))
(assert (= ($generated@@29 $generated@@61) 0))
(assert (= ($generated@@97 $generated@@7 $generated@@12) $generated@@61))
(assert  (not ($generated@@98 $generated@@61)))
(assert (forall (($generated@@99 T@U) ) (! ($generated@@45 $generated@@50 $generated@@40 ($generated@@51 $generated@@99))
 :pattern ( ($generated@@45 $generated@@50 $generated@@40 ($generated@@51 $generated@@99)))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@48 $generated@@46 $generated@@100 $generated@@49 $generated@@101)  (or (= $generated@@100 $generated@@44) ($generated@@18 ($generated@@54 $generated@@14 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@101 $generated@@100) $generated@@1)))))
 :pattern ( ($generated@@48 $generated@@46 $generated@@100 $generated@@49 $generated@@101))
)))
(assert (forall (($generated@@103 Int) ) (! (= ($generated@@102 $generated@@103) $generated@@103)
 :pattern ( ($generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@104 $generated@@106 $generated@@105) $generated@@105)
 :pattern ( ($generated@@104 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@45 $generated@@50 ($generated@@107 $generated@@110 $generated@@111) ($generated@@51 $generated@@109))  (and ($generated@@108 $generated@@110 $generated@@109) ($generated@@45 $generated@@50 $generated@@111 ($generated@@51 $generated@@109))))
 :pattern ( ($generated@@45 $generated@@50 ($generated@@107 $generated@@110 $generated@@111) ($generated@@51 $generated@@109)))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@52 $generated@@112) (= ($generated@@39 $generated@@112) $generated@@5))
 :pattern ( ($generated@@52 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 $generated@@114) (= ($generated@@39 $generated@@114) $generated@@6))
 :pattern ( ($generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@115 $generated@@117 ($generated@@54 $generated@@117 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@54 $generated@@117 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@113 $generated@@118) (exists (($generated@@119 T@U) ($generated@@120 T@U) ) (= $generated@@118 ($generated@@107 $generated@@119 $generated@@120))))
 :pattern ( ($generated@@113 $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@52 $generated@@121) (= $generated@@121 $generated@@40))
 :pattern ( ($generated@@52 $generated@@121))
)))
(assert ($generated@@98 $generated@@1))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@122) (and (or (not (= $generated@@123 $generated@@44)) (not true)) (= ($generated@@91 $generated@@123) $generated@@49))) ($generated@@18 ($generated@@54 $generated@@14 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@122 $generated@@123) $generated@@1)))) ($generated@@48 $generated@@15 ($generated@@54 $generated@@15 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@122 $generated@@123) $generated@@60)) $generated $generated@@122))
 :pattern ( ($generated@@54 $generated@@15 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@122 $generated@@123) $generated@@60)))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@124 ($generated@@115 $generated@@128 $generated@@125) $generated@@126 $generated@@127) ($generated@@48 $generated@@128 $generated@@125 $generated@@126 $generated@@127))
 :pattern ( ($generated@@124 ($generated@@115 $generated@@128 $generated@@125) $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@130 T@U) ) (!  (and (= ($generated@@30 ($generated@@51 $generated@@130)) $generated@@3) (= ($generated@@129 ($generated@@51 $generated@@130)) $generated@@9))
 :pattern ( ($generated@@51 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@42 $generated@@131) (and (or (not (= $generated@@132 $generated@@44)) (not true)) (= ($generated@@91 $generated@@132) $generated@@49))) ($generated@@45 $generated@@46 ($generated@@54 $generated@@46 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@131 $generated@@132) $generated@@61)) $generated@@49))
 :pattern ( ($generated@@54 $generated@@46 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@131 $generated@@132) $generated@@61)))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@108 $generated@@133 $generated@@47) (and (= ($generated@@115 $generated@@46 ($generated@@54 $generated@@46 $generated@@133)) $generated@@133) ($generated@@45 $generated@@46 ($generated@@54 $generated@@46 $generated@@133) $generated@@47)))
 :pattern ( ($generated@@108 $generated@@133 $generated@@47))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@108 $generated@@134 $generated@@49) (and (= ($generated@@115 $generated@@46 ($generated@@54 $generated@@46 $generated@@134)) $generated@@134) ($generated@@45 $generated@@46 ($generated@@54 $generated@@46 $generated@@134) $generated@@49)))
 :pattern ( ($generated@@108 $generated@@134 $generated@@49))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@135 $generated@@47)  (and ($generated@@45 $generated@@46 $generated@@135 $generated@@49) (or (not (= $generated@@135 $generated@@44)) (not true))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@135 $generated@@47))
 :pattern ( ($generated@@45 $generated@@46 $generated@@135 $generated@@49))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@136) (and (or (not (= $generated@@137 $generated@@44)) (not true)) (= ($generated@@91 $generated@@137) $generated@@49))) ($generated@@18 ($generated@@54 $generated@@14 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@136 $generated@@137) $generated@@1)))) ($generated@@48 $generated@@46 ($generated@@54 $generated@@46 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@136 $generated@@137) $generated@@61)) $generated@@49 $generated@@136))
 :pattern ( ($generated@@54 $generated@@46 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@136 $generated@@137) $generated@@61)))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> ($generated@@45 $generated@@50 $generated@@139 ($generated@@51 $generated@@138)) (or ($generated@@52 $generated@@139) ($generated@@113 $generated@@139)))
 :pattern ( ($generated@@113 $generated@@139) ($generated@@45 $generated@@50 $generated@@139 ($generated@@51 $generated@@138)))
 :pattern ( ($generated@@52 $generated@@139) ($generated@@45 $generated@@50 $generated@@139 ($generated@@51 $generated@@138)))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (and (= ($generated@@140 ($generated@@97 $generated@@141 $generated@@142)) $generated@@141) (= ($generated@@31 ($generated@@97 $generated@@141 $generated@@142)) $generated@@142))
 :pattern ( ($generated@@97 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@108 $generated@@143 $generated) (and (= ($generated@@115 $generated@@15 ($generated@@54 $generated@@15 $generated@@143)) $generated@@143) ($generated@@45 $generated@@15 ($generated@@54 $generated@@15 $generated@@143) $generated)))
 :pattern ( ($generated@@108 $generated@@143 $generated))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@108 ($generated@@115 $generated@@146 $generated@@144) $generated@@145) ($generated@@45 $generated@@146 $generated@@144 $generated@@145))
 :pattern ( ($generated@@108 ($generated@@115 $generated@@146 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@39 ($generated@@107 $generated@@147 $generated@@148)) $generated@@6)
 :pattern ( ($generated@@107 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@55 ($generated@@107 $generated@@149 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@107 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@53 ($generated@@107 $generated@@151 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@107 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@153 ($generated@@51 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@51 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@54 $generated@@156 ($generated@@115 $generated@@156 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@115 $generated@@156 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and ($generated@@42 $generated@@157) (and (or (not (= $generated@@158 $generated@@44)) (not true)) (= ($generated@@91 $generated@@158) $generated@@49))) ($generated@@45 $generated@@15 ($generated@@54 $generated@@15 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@157 $generated@@158) $generated@@60)) $generated))
 :pattern ( ($generated@@54 $generated@@15 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@157 $generated@@158) $generated@@60)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (< ($generated@@159 $generated@@161) ($generated@@160 ($generated@@107 $generated@@161 $generated@@162)))
 :pattern ( ($generated@@107 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (< ($generated@@160 $generated@@164) ($generated@@160 ($generated@@107 $generated@@163 $generated@@164)))
 :pattern ( ($generated@@107 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@42 $generated@@167) (and ($generated@@113 $generated@@165) ($generated@@48 $generated@@50 $generated@@165 ($generated@@51 $generated@@166) $generated@@167))) ($generated@@124 ($generated@@55 $generated@@165) $generated@@166 $generated@@167))
 :pattern ( ($generated@@124 ($generated@@55 $generated@@165) $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@168 $generated@@171 $generated@@172 $generated@@173 ($generated@@170 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@176 $generated@@177) $generated@@174)
 :weight 0
)) (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@183 $generated@@185) (= ($generated@@168 $generated@@178 $generated@@179 $generated@@180 ($generated@@170 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@168 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@168 $generated@@187 $generated@@188 $generated@@189 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@168 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 Bool) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@18 ($generated@@168 $generated@@46 $generated@@57 $generated@@14 ($generated@@169 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))  (=> (and (or (not (= $generated@@200 $generated@@196)) (not true)) ($generated@@18 ($generated@@54 $generated@@14 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@197 $generated@@200) $generated@@198)))) $generated@@199))
 :pattern ( ($generated@@168 $generated@@46 $generated@@57 $generated@@14 ($generated@@169 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ) (! (= ($generated@@159 ($generated@@115 $generated@@50 $generated@@202)) ($generated@@160 $generated@@202))
 :pattern ( ($generated@@159 ($generated@@115 $generated@@50 $generated@@202)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> ($generated@@108 $generated@@204 ($generated@@51 $generated@@203)) (and (= ($generated@@115 $generated@@50 ($generated@@54 $generated@@50 $generated@@204)) $generated@@204) ($generated@@45 $generated@@50 ($generated@@54 $generated@@50 $generated@@204) ($generated@@51 $generated@@203))))
 :pattern ( ($generated@@108 $generated@@204 ($generated@@51 $generated@@203)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and ($generated@@42 $generated@@207) (and ($generated@@113 $generated@@205) ($generated@@48 $generated@@50 $generated@@205 ($generated@@51 $generated@@206) $generated@@207))) ($generated@@48 $generated@@50 ($generated@@53 $generated@@205) ($generated@@51 $generated@@206) $generated@@207))
 :pattern ( ($generated@@48 $generated@@50 ($generated@@53 $generated@@205) ($generated@@51 $generated@@206) $generated@@207))
)))
(assert (= ($generated@@30 $generated@@47) $generated@@4))
(assert (= ($generated@@129 $generated@@47) $generated@@10))
(assert (= ($generated@@30 $generated@@49) $generated@@8))
(assert (= ($generated@@129 $generated@@49) $generated@@10))
(assert (= $generated@@40 ($generated@@104 $generated@@50 $generated@@40)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@107 ($generated@@104 $generated@@58 $generated@@208) ($generated@@104 $generated@@50 $generated@@209)) ($generated@@104 $generated@@50 ($generated@@107 $generated@@208 $generated@@209)))
 :pattern ( ($generated@@107 ($generated@@104 $generated@@58 $generated@@208) ($generated@@104 $generated@@50 $generated@@209)))
)))
(assert (forall (($generated@@210 Int) ) (! (= ($generated@@115 $generated@@15 ($generated@@19 ($generated@@102 $generated@@210))) ($generated@@104 $generated@@58 ($generated@@115 $generated@@15 ($generated@@19 $generated@@210))))
 :pattern ( ($generated@@115 $generated@@15 ($generated@@19 ($generated@@102 $generated@@210))))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@T) ) (! (= ($generated@@115 $generated@@212 ($generated@@104 $generated@@212 $generated@@211)) ($generated@@104 $generated@@58 ($generated@@115 $generated@@212 $generated@@211)))
 :pattern ( ($generated@@115 $generated@@212 ($generated@@104 $generated@@212 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! ($generated@@48 $generated@@15 $generated@@214 $generated $generated@@213)
 :pattern ( ($generated@@48 $generated@@15 $generated@@214 $generated $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> ($generated@@42 $generated@@218) (= ($generated@@48 $generated@@50 ($generated@@107 $generated@@216 $generated@@217) ($generated@@51 $generated@@215) $generated@@218)  (and ($generated@@124 $generated@@216 $generated@@215 $generated@@218) ($generated@@48 $generated@@50 $generated@@217 ($generated@@51 $generated@@215) $generated@@218))))
 :pattern ( ($generated@@48 $generated@@50 ($generated@@107 $generated@@216 $generated@@217) ($generated@@51 $generated@@215) $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ) (! ($generated@@45 $generated@@15 $generated@@219 $generated)
 :pattern ( ($generated@@45 $generated@@15 $generated@@219 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@225 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@226  (=> (= $generated@@220 ($generated@@169 $generated@@44 $generated@@221 $generated@@1 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@43 $generated@@221 $generated@@222 $generated@@44 ($generated@@104 $generated@@50 $generated@@40)) (or ($generated@@32 ($generated@@33 $generated@@223) $generated@@221 $generated@@222 $generated@@44 ($generated@@104 $generated@@50 $generated@@40)) (=> ($generated@@18 ($generated@@104 $generated@@14 ($generated@@17 ($generated@@52 ($generated@@104 $generated@@50 $generated@@40))))) (= $generated@@44 $generated@@44))))) (=> (=> ($generated@@43 $generated@@221 $generated@@222 $generated@@44 ($generated@@104 $generated@@50 $generated@@40)) (or ($generated@@32 ($generated@@33 $generated@@223) $generated@@221 $generated@@222 $generated@@44 ($generated@@104 $generated@@50 $generated@@40)) (=> ($generated@@18 ($generated@@104 $generated@@14 ($generated@@17 ($generated@@52 ($generated@@104 $generated@@50 $generated@@40))))) (= $generated@@44 $generated@@44)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@43 $generated@@221 $generated@@222 $generated@@44 ($generated@@104 $generated@@50 $generated@@40)) (or ($generated@@32 ($generated@@33 $generated@@223) $generated@@221 $generated@@222 $generated@@44 ($generated@@104 $generated@@50 $generated@@40)) (=> (not ($generated@@18 ($generated@@104 $generated@@14 ($generated@@17 ($generated@@52 ($generated@@104 $generated@@50 $generated@@40)))))) (or (not (= $generated@@44 $generated@@44)) (not true)))))) (=> (=> ($generated@@43 $generated@@221 $generated@@222 $generated@@44 ($generated@@104 $generated@@50 $generated@@40)) (or ($generated@@32 ($generated@@33 $generated@@223) $generated@@221 $generated@@222 $generated@@44 ($generated@@104 $generated@@50 $generated@@40)) (=> (not ($generated@@18 ($generated@@104 $generated@@14 ($generated@@17 ($generated@@52 ($generated@@104 $generated@@50 $generated@@40)))))) (or (not (= $generated@@44 $generated@@44)) (not true))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@43 $generated@@221 $generated@@222 $generated@@44 ($generated@@104 $generated@@50 $generated@@40)) (or ($generated@@32 ($generated@@33 $generated@@223) $generated@@221 $generated@@222 $generated@@44 ($generated@@104 $generated@@50 $generated@@40)) (=> (not ($generated@@18 ($generated@@104 $generated@@14 ($generated@@17 ($generated@@52 ($generated@@104 $generated@@50 $generated@@40)))))) (let (($generated@@227 ($generated@@102 ($generated@@20 ($generated@@54 $generated@@15 ($generated@@55 ($generated@@104 $generated@@50 $generated@@40)))))))
(= ($generated@@20 ($generated@@54 $generated@@15 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@221 $generated@@44) $generated@@60))) $generated@@227)))))) (=> (=> ($generated@@43 $generated@@221 $generated@@222 $generated@@44 ($generated@@104 $generated@@50 $generated@@40)) (or ($generated@@32 ($generated@@33 $generated@@223) $generated@@221 $generated@@222 $generated@@44 ($generated@@104 $generated@@50 $generated@@40)) (=> (not ($generated@@18 ($generated@@104 $generated@@14 ($generated@@17 ($generated@@52 ($generated@@104 $generated@@50 $generated@@40)))))) (let (($generated@@228 ($generated@@102 ($generated@@20 ($generated@@54 $generated@@15 ($generated@@55 ($generated@@104 $generated@@50 $generated@@40)))))))
(= ($generated@@20 ($generated@@54 $generated@@15 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@221 $generated@@44) $generated@@60))) $generated@@228))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@43 $generated@@221 $generated@@222 $generated@@44 ($generated@@104 $generated@@50 $generated@@40)) (or ($generated@@32 ($generated@@33 $generated@@223) $generated@@221 $generated@@222 $generated@@44 ($generated@@104 $generated@@50 $generated@@40)) (=> (not ($generated@@18 ($generated@@104 $generated@@14 ($generated@@17 ($generated@@52 ($generated@@104 $generated@@50 $generated@@40)))))) (let (($generated@@229 ($generated@@104 $generated@@50 ($generated@@53 ($generated@@104 $generated@@50 $generated@@40)))))
($generated@@32 ($generated@@33 ($generated@@33 $generated@@223)) $generated@@221 $generated@@222 ($generated@@54 $generated@@46 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@46 ($generated@@59 $generated@@57 $generated@@58) $generated@@221 $generated@@44) $generated@@61)) $generated@@229)))))))))))))))
(let (($generated@@230  (=> (and (and (and ($generated@@42 $generated@@221) ($generated@@224 $generated@@221)) (and (or (not (= $generated@@222 $generated@@44)) (not true)) (and ($generated@@45 $generated@@46 $generated@@222 $generated@@47) ($generated@@48 $generated@@46 $generated@@222 $generated@@47 $generated@@221)))) (and (and ($generated@@45 $generated@@46 $generated@@225 $generated@@49) ($generated@@48 $generated@@46 $generated@@225 $generated@@49 $generated@@221)) (and (= 2 $generated@@41) (= (ControlFlow 0 6) 2)))) $generated@@226)))
$generated@@230)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
