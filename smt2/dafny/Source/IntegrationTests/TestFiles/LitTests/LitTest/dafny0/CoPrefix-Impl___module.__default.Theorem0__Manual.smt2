(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (Int) T@U)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () Int)
(declare-fun $generated@@36 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@47 (T@U) Int)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@61 (T@U T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@70 () Bool)
(declare-fun $generated@@71 (Int T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@74 () Bool)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@U) Bool)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@140 (T@T T@T) T@T)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@198 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> (and ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@25 $generated@@26)) ($generated@@23 $generated@@24 $generated@@26))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@25 $generated@@26))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 Int) ($generated@@32 Int) ) (!  (=> (and (and (<= 0 $generated@@31) (<= 0 $generated@@32)) (<= (+ $generated@@31 $generated@@32) ($generated@@29 $generated@@30))) (= ($generated@@27 ($generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@28 $generated@@32)) ($generated@@27 $generated@@30 ($generated@@28 (+ $generated@@31 $generated@@32)))))
 :pattern ( ($generated@@27 ($generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@28 $generated@@32)))
)))
(assert (= ($generated@@33 $generated@@34) $generated@@3))
(assert  (and (= ($generated@@6 $generated@@39) 3) (= ($generated@@6 $generated@@40) 4)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (or ($generated@@41 ($generated@@38 $generated@@39 $generated@@50) ($generated@@38 $generated@@40 $generated@@51) ($generated@@38 $generated@@40 $generated@@52)) (and (< 2 $generated@@35) (and ($generated@@42 $generated@@40 $generated@@51 $generated@@43) ($generated@@42 $generated@@40 $generated@@52 $generated@@43)))) (and (and (=> (< 0 ($generated@@29 $generated@@50)) (=> (not ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@44 ($generated@@38 $generated@@40 $generated@@51)))))) (let (($generated@@53 ($generated@@38 $generated@@40 ($generated@@45 ($generated@@38 $generated@@40 $generated@@51)))))
(let (($generated@@54 ($generated@@46 ($generated@@47 ($generated@@38 $generated@@40 $generated@@51)))))
 (=> ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@48 ($generated@@38 $generated@@40 $generated@@52))))) (=> (<= $generated@@54 ($generated@@46 ($generated@@47 ($generated@@38 $generated@@40 $generated@@52)))) ($generated@@41 ($generated@@27 $generated@@50 ($generated@@28 1)) $generated@@53 ($generated@@38 $generated@@40 ($generated@@45 ($generated@@38 $generated@@40 $generated@@52)))))))))) (=> (=> (< 0 ($generated@@29 $generated@@50)) (ite ($generated@@44 ($generated@@38 $generated@@40 $generated@@51)) true (let (($generated@@55 ($generated@@38 $generated@@40 ($generated@@45 ($generated@@38 $generated@@40 $generated@@51)))))
(let (($generated@@56 ($generated@@46 ($generated@@47 ($generated@@38 $generated@@40 $generated@@51)))))
 (and (and ($generated@@48 ($generated@@38 $generated@@40 $generated@@52)) (<= $generated@@56 ($generated@@46 ($generated@@47 ($generated@@38 $generated@@40 $generated@@52))))) ($generated@@36 ($generated@@37 $generated@@49) ($generated@@27 $generated@@50 ($generated@@28 1)) $generated@@55 ($generated@@38 $generated@@40 ($generated@@45 ($generated@@38 $generated@@40 $generated@@52))))))))) (=> (= ($generated@@46 0) ($generated@@29 $generated@@50)) (forall (($generated@@57 T@U) ) (!  (=> ($generated@@23 $generated@@57 $generated@@50) ($generated@@41 $generated@@57 $generated@@51 $generated@@52))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@49) $generated@@57 $generated@@51 $generated@@52))
))))) (= ($generated@@36 ($generated@@37 $generated@@49) ($generated@@38 $generated@@39 $generated@@50) ($generated@@38 $generated@@40 $generated@@51) ($generated@@38 $generated@@40 $generated@@52))  (and (=> (< 0 ($generated@@29 $generated@@50)) (ite ($generated@@44 ($generated@@38 $generated@@40 $generated@@51)) true (let (($generated@@58 ($generated@@38 $generated@@40 ($generated@@45 ($generated@@38 $generated@@40 $generated@@51)))))
(let (($generated@@59 ($generated@@46 ($generated@@47 ($generated@@38 $generated@@40 $generated@@51)))))
 (and (and ($generated@@48 ($generated@@38 $generated@@40 $generated@@52)) (<= $generated@@59 ($generated@@46 ($generated@@47 ($generated@@38 $generated@@40 $generated@@52))))) ($generated@@36 ($generated@@37 $generated@@49) ($generated@@27 $generated@@50 ($generated@@28 1)) $generated@@58 ($generated@@38 $generated@@40 ($generated@@45 ($generated@@38 $generated@@40 $generated@@52))))))))) (=> (= ($generated@@46 0) ($generated@@29 $generated@@50)) (forall (($generated@@60 T@U) ) (!  (=> ($generated@@23 $generated@@60 $generated@@50) ($generated@@36 ($generated@@37 $generated@@49) $generated@@60 $generated@@51 $generated@@52))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@49) $generated@@60 $generated@@51 $generated@@52))
)))))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@37 $generated@@49) ($generated@@38 $generated@@39 $generated@@50) ($generated@@38 $generated@@40 $generated@@51) ($generated@@38 $generated@@40 $generated@@52)))
))))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@40 $generated@@63 $generated@@43) ($generated@@42 $generated@@40 $generated@@64 $generated@@43)) ($generated@@61 ($generated@@37 $generated@@62) $generated@@63 $generated@@64)) (forall (($generated@@65 T@U) ) (! ($generated@@36 ($generated@@37 $generated@@62) $generated@@65 $generated@@63 $generated@@64)
 :pattern ( ($generated@@36 ($generated@@37 $generated@@62) $generated@@65 $generated@@63 $generated@@64))
)))
 :pattern ( ($generated@@61 ($generated@@37 $generated@@62) $generated@@63 $generated@@64))
))))
(assert ($generated@@42 $generated@@40 $generated@@34 $generated@@43))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@46 $generated@@66) $generated@@66)
 :pattern ( ($generated@@46 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@38 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@38 $generated@@68 $generated@@67))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@72 T@U) ) (!  (=> (or $generated@@70 (< 1 $generated@@35)) (and $generated@@70 (= ($generated@@69 ($generated@@37 $generated@@72)) ($generated@@38 $generated@@40 ($generated@@71 ($generated@@46 0) ($generated@@38 $generated@@40 ($generated@@69 $generated@@72)))))))
 :pattern ( ($generated@@69 ($generated@@37 $generated@@72)))
))))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@75 T@U) ) (!  (=> (or $generated@@74 (< 1 $generated@@35)) (and $generated@@74 (= ($generated@@73 ($generated@@37 $generated@@75)) ($generated@@38 $generated@@40 ($generated@@71 ($generated@@46 1) ($generated@@38 $generated@@40 ($generated@@73 $generated@@75)))))))
 :pattern ( ($generated@@73 ($generated@@37 $generated@@75)))
))))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@44 $generated@@76) (= ($generated@@33 $generated@@76) $generated@@3))
 :pattern ( ($generated@@44 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@48 $generated@@77) (= ($generated@@33 $generated@@77) $generated@@4))
 :pattern ( ($generated@@48 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 ($generated@@78 $generated@@81 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@78 $generated@@81 $generated@@80))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@40 $generated@@83 $generated@@43) ($generated@@42 $generated@@40 $generated@@84 $generated@@43)) (forall (($generated@@85 T@U) ) (! ($generated@@36 ($generated@@37 $generated@@82) $generated@@85 $generated@@83 $generated@@84)
 :pattern ( ($generated@@36 ($generated@@37 $generated@@82) $generated@@85 $generated@@83 $generated@@84))
))) ($generated@@61 ($generated@@37 $generated@@82) $generated@@83 $generated@@84))
 :pattern ( ($generated@@61 ($generated@@37 $generated@@82) $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@48 $generated@@86) (exists (($generated@@87 Int) ($generated@@88 T@U) ) (= $generated@@86 ($generated@@71 $generated@@87 $generated@@88))))
 :pattern ( ($generated@@48 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@44 $generated@@89) (= $generated@@89 $generated@@34))
 :pattern ( ($generated@@44 $generated@@89))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@41 $generated@@91 $generated@@92 $generated@@93) (and (< 2 $generated@@35) (and ($generated@@42 $generated@@40 $generated@@92 $generated@@43) ($generated@@42 $generated@@40 $generated@@93 $generated@@43)))) (and (and (=> (< 0 ($generated@@29 $generated@@91)) (=> (not ($generated@@44 $generated@@92)) (let (($generated@@94 ($generated@@45 $generated@@92)))
(let (($generated@@95 ($generated@@47 $generated@@92)))
 (=> ($generated@@48 $generated@@93) (=> (<= $generated@@95 ($generated@@47 $generated@@93)) ($generated@@41 ($generated@@27 $generated@@91 ($generated@@28 1)) $generated@@94 ($generated@@45 $generated@@93)))))))) (=> (=> (< 0 ($generated@@29 $generated@@91)) (ite ($generated@@44 $generated@@92) true (let (($generated@@96 ($generated@@45 $generated@@92)))
(let (($generated@@97 ($generated@@47 $generated@@92)))
 (and (and ($generated@@48 $generated@@93) (<= $generated@@97 ($generated@@47 $generated@@93))) ($generated@@36 $generated@@90 ($generated@@27 $generated@@91 ($generated@@28 1)) $generated@@96 ($generated@@45 $generated@@93))))))) (=> (= ($generated@@46 0) ($generated@@29 $generated@@91)) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@23 $generated@@98 $generated@@91) ($generated@@41 $generated@@98 $generated@@92 $generated@@93))
 :pattern ( ($generated@@36 $generated@@90 $generated@@98 $generated@@92 $generated@@93))
))))) (= ($generated@@36 ($generated@@37 $generated@@90) $generated@@91 $generated@@92 $generated@@93)  (and (=> (< 0 ($generated@@29 $generated@@91)) (ite ($generated@@44 $generated@@92) true (let (($generated@@99 ($generated@@45 $generated@@92)))
(let (($generated@@100 ($generated@@47 $generated@@92)))
 (and (and ($generated@@48 $generated@@93) (<= $generated@@100 ($generated@@47 $generated@@93))) ($generated@@36 $generated@@90 ($generated@@27 $generated@@91 ($generated@@28 1)) $generated@@99 ($generated@@45 $generated@@93))))))) (=> (= ($generated@@46 0) ($generated@@29 $generated@@91)) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@23 $generated@@101 $generated@@91) ($generated@@36 $generated@@90 $generated@@101 $generated@@92 $generated@@93))
 :pattern ( ($generated@@36 $generated@@90 $generated@@101 $generated@@92 $generated@@93))
)))))))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@90) $generated@@91 $generated@@92 $generated@@93))
))))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@61 ($generated@@37 $generated@@102) $generated@@103 $generated@@104) ($generated@@61 $generated@@102 $generated@@103 $generated@@104))
 :pattern ( ($generated@@61 ($generated@@37 $generated@@102) $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and ($generated@@105 $generated@@107) (<= ($generated@@29 $generated@@107) ($generated@@29 $generated@@106))) (and (= ($generated@@105 ($generated@@27 $generated@@106 $generated@@107)) ($generated@@105 $generated@@106)) (= ($generated@@29 ($generated@@27 $generated@@106 $generated@@107)) (- ($generated@@29 $generated@@106) ($generated@@29 $generated@@107)))))
 :pattern ( ($generated@@27 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 Int) ) (!  (=> (<= 0 $generated@@108) (and ($generated@@105 ($generated@@28 $generated@@108)) (= ($generated@@29 ($generated@@28 $generated@@108)) $generated@@108)))
 :pattern ( ($generated@@28 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (or ($generated@@23 $generated@@109 $generated@@110) (= $generated@@109 $generated@@110)) ($generated@@23 $generated@@110 $generated@@109))
 :pattern ( ($generated@@23 $generated@@109 $generated@@110) ($generated@@23 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@42 $generated@@40 $generated@@111 $generated@@43) (or ($generated@@44 $generated@@111) ($generated@@48 $generated@@111)))
 :pattern ( ($generated@@48 $generated@@111) ($generated@@42 $generated@@40 $generated@@111 $generated@@43))
 :pattern ( ($generated@@44 $generated@@111) ($generated@@42 $generated@@40 $generated@@111 $generated@@43))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@36 ($generated@@37 $generated@@112) $generated@@113 $generated@@114 $generated@@115) ($generated@@36 $generated@@112 $generated@@113 $generated@@114 $generated@@115))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@112) $generated@@113 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (! (<= 0 ($generated@@29 $generated@@116))
 :pattern ( ($generated@@29 $generated@@116))
)))
(assert (forall (($generated@@117 Int) ($generated@@118 T@U) ) (! (= ($generated@@33 ($generated@@71 $generated@@117 $generated@@118)) $generated@@4)
 :pattern ( ($generated@@71 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 Int) ($generated@@120 T@U) ) (! (= ($generated@@47 ($generated@@71 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@71 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 Int) ($generated@@122 T@U) ) (! (= ($generated@@45 ($generated@@71 $generated@@121 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@71 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@78 $generated@@124 ($generated@@79 $generated@@124 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@79 $generated@@124 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (and (and (and (=> ($generated@@23 $generated@@125 $generated@@126) (or (not (= $generated@@125 $generated@@126)) (not true))) (=> (and ($generated@@105 $generated@@125) (not ($generated@@105 $generated@@126))) ($generated@@23 $generated@@125 $generated@@126))) (=> (and ($generated@@105 $generated@@125) ($generated@@105 $generated@@126)) (= ($generated@@23 $generated@@125 $generated@@126) (< ($generated@@29 $generated@@125) ($generated@@29 $generated@@126))))) (=> (and ($generated@@23 $generated@@125 $generated@@126) ($generated@@105 $generated@@126)) ($generated@@105 $generated@@125)))
 :pattern ( ($generated@@23 $generated@@125 $generated@@126))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (or ($generated@@127 $generated@@129 $generated@@130) (and (< 1 $generated@@35) (and ($generated@@42 $generated@@40 $generated@@129 $generated@@43) ($generated@@42 $generated@@40 $generated@@130 $generated@@43)))) (and (=> (not ($generated@@44 $generated@@129)) (let (($generated@@131 ($generated@@45 $generated@@129)))
(let (($generated@@132 ($generated@@47 $generated@@129)))
 (=> ($generated@@48 $generated@@130) (=> (<= $generated@@132 ($generated@@47 $generated@@130)) ($generated@@127 $generated@@131 ($generated@@45 $generated@@130))))))) (= ($generated@@61 ($generated@@37 $generated@@128) $generated@@129 $generated@@130) (ite ($generated@@44 $generated@@129) true (let (($generated@@133 ($generated@@45 $generated@@129)))
(let (($generated@@134 ($generated@@47 $generated@@129)))
 (and (and ($generated@@48 $generated@@130) (<= $generated@@134 ($generated@@47 $generated@@130))) ($generated@@61 $generated@@128 $generated@@133 ($generated@@45 $generated@@130)))))))))
 :pattern ( ($generated@@61 ($generated@@37 $generated@@128) $generated@@129 $generated@@130))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@135 $generated@@145 $generated@@146 $generated@@147 ($generated@@141 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@150 $generated@@151) $generated@@148)
 :weight 0
)) (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@135 $generated@@152 $generated@@153 $generated@@154 ($generated@@141 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@135 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@135 $generated@@161 $generated@@162 $generated@@163 ($generated@@141 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@135 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)))) (= ($generated@@6 $generated@@136) 5)) (= ($generated@@6 $generated@@137) 6)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@139 $generated@@170 $generated@@171 ($generated@@142 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@172) $generated@@174) $generated@@172)
 :weight 0
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@179 $generated@@180) (= ($generated@@139 $generated@@175 $generated@@176 ($generated@@142 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@177) $generated@@180) ($generated@@139 $generated@@175 $generated@@176 $generated@@178 $generated@@180)))
 :weight 0
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@6 ($generated@@140 $generated@@181 $generated@@182)) 7))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@143 ($generated@@140 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@140 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@144 ($generated@@140 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@140 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@11 ($generated@@135 $generated@@136 $generated@@137 $generated@@7 ($generated@@138 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@11 ($generated@@78 $generated@@7 ($generated@@139 $generated@@137 $generated@@39 ($generated@@139 $generated@@136 ($generated@@140 $generated@@137 $generated@@39) $generated@@188 $generated@@191) $generated@@189)))) $generated@@190))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137 $generated@@7 ($generated@@138 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@193 T@U) ) (!  (=> (or $generated@@70 (< 1 $generated@@35)) ($generated@@42 $generated@@40 ($generated@@69 $generated@@193) $generated@@43))
 :pattern ( ($generated@@69 $generated@@193))
))))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@194 T@U) ) (!  (=> (or $generated@@74 (< 1 $generated@@35)) ($generated@@42 $generated@@40 ($generated@@73 $generated@@194) $generated@@43))
 :pattern ( ($generated@@73 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@69 ($generated@@37 $generated@@195)) ($generated@@69 $generated@@195))
 :pattern ( ($generated@@69 ($generated@@37 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@73 ($generated@@37 $generated@@196)) ($generated@@73 $generated@@196))
 :pattern ( ($generated@@73 ($generated@@37 $generated@@196)))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> ($generated@@105 $generated@@197) (= $generated@@197 ($generated@@28 ($generated@@29 $generated@@197))))
 :pattern ( ($generated@@29 $generated@@197))
 :pattern ( ($generated@@105 $generated@@197))
)))
(assert (= ($generated@@22 $generated@@43) $generated@@2))
(assert (= ($generated@@198 $generated@@43) $generated@@5))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@40 $generated@@200 $generated@@43) ($generated@@42 $generated@@40 $generated@@201 $generated@@43)) (= $generated@@202 ($generated@@28 0))) ($generated@@36 $generated@@199 $generated@@202 $generated@@200 $generated@@201))
 :pattern ( ($generated@@36 $generated@@199 $generated@@202 $generated@@200 $generated@@201))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and ($generated@@105 $generated@@204) (<= ($generated@@29 $generated@@204) ($generated@@29 $generated@@203))) (or (and (= $generated@@204 ($generated@@28 0)) (= ($generated@@27 $generated@@203 $generated@@204) $generated@@203)) (and (or (not (= $generated@@204 ($generated@@28 0))) (not true)) ($generated@@23 ($generated@@27 $generated@@203 $generated@@204) $generated@@203))))
 :pattern ( ($generated@@27 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@79 $generated@@8 ($generated@@12 ($generated@@46 $generated@@205))) ($generated@@38 $generated@@39 ($generated@@79 $generated@@8 ($generated@@12 $generated@@205))))
 :pattern ( ($generated@@79 $generated@@8 ($generated@@12 ($generated@@46 $generated@@205))))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@T) ) (! (= ($generated@@79 $generated@@207 ($generated@@38 $generated@@207 $generated@@206)) ($generated@@38 $generated@@39 ($generated@@79 $generated@@207 $generated@@206)))
 :pattern ( ($generated@@79 $generated@@207 ($generated@@38 $generated@@207 $generated@@206)))
)))
(assert (forall (($generated@@208 Int) ($generated@@209 T@U) ) (! (= ($generated@@42 $generated@@40 ($generated@@71 $generated@@208 $generated@@209) $generated@@43)  (and ($generated@@42 $generated@@8 ($generated@@12 $generated@@208) $generated) ($generated@@42 $generated@@40 $generated@@209 $generated@@43)))
 :pattern ( ($generated@@42 $generated@@40 ($generated@@71 $generated@@208 $generated@@209) $generated@@43))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (or ($generated@@41 ($generated@@38 $generated@@39 $generated@@211) $generated@@212 $generated@@213) (and (< 2 $generated@@35) (and ($generated@@42 $generated@@40 $generated@@212 $generated@@43) ($generated@@42 $generated@@40 $generated@@213 $generated@@43)))) (and (and (=> (< 0 ($generated@@29 $generated@@211)) (=> (not ($generated@@44 $generated@@212)) (let (($generated@@214 ($generated@@45 $generated@@212)))
(let (($generated@@215 ($generated@@47 $generated@@212)))
 (=> ($generated@@48 $generated@@213) (=> (<= $generated@@215 ($generated@@47 $generated@@213)) ($generated@@41 ($generated@@27 $generated@@211 ($generated@@28 1)) $generated@@214 ($generated@@45 $generated@@213)))))))) (=> (=> (< 0 ($generated@@29 $generated@@211)) (ite ($generated@@44 $generated@@212) true (let (($generated@@216 ($generated@@45 $generated@@212)))
(let (($generated@@217 ($generated@@47 $generated@@212)))
 (and (and ($generated@@48 $generated@@213) (<= $generated@@217 ($generated@@47 $generated@@213))) ($generated@@36 ($generated@@37 $generated@@210) ($generated@@27 $generated@@211 ($generated@@28 1)) $generated@@216 ($generated@@45 $generated@@213))))))) (=> (= ($generated@@46 0) ($generated@@29 $generated@@211)) (forall (($generated@@218 T@U) ) (!  (=> ($generated@@23 $generated@@218 $generated@@211) ($generated@@41 $generated@@218 $generated@@212 $generated@@213))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@210) $generated@@218 $generated@@212 $generated@@213))
))))) (= ($generated@@36 ($generated@@37 $generated@@210) ($generated@@38 $generated@@39 $generated@@211) $generated@@212 $generated@@213)  (and (=> (< 0 ($generated@@29 $generated@@211)) (ite ($generated@@44 $generated@@212) true (let (($generated@@219 ($generated@@45 $generated@@212)))
(let (($generated@@220 ($generated@@47 $generated@@212)))
 (and (and ($generated@@48 $generated@@213) (<= $generated@@220 ($generated@@47 $generated@@213))) ($generated@@36 ($generated@@37 $generated@@210) ($generated@@27 $generated@@211 ($generated@@28 1)) $generated@@219 ($generated@@45 $generated@@213))))))) (=> (= ($generated@@46 0) ($generated@@29 $generated@@211)) (forall (($generated@@221 T@U) ) (!  (=> ($generated@@23 $generated@@221 $generated@@211) ($generated@@36 ($generated@@37 $generated@@210) $generated@@221 $generated@@212 $generated@@213))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@210) $generated@@221 $generated@@212 $generated@@213))
)))))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@37 $generated@@210) ($generated@@38 $generated@@39 $generated@@211) $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@222 T@U) ) (! ($generated@@42 $generated@@8 $generated@@222 $generated)
 :pattern ( ($generated@@42 $generated@@8 $generated@@222 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 (T@U) Bool)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@230  (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> ($generated@@127 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223)))) (or ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@61 ($generated@@37 $generated@@223) ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223))))))) (=> ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@44 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))))))) ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 true))))))) (=> (=> ($generated@@127 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223)))) (or ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@61 ($generated@@37 $generated@@223) ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223))))))) (=> ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@44 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))))))) ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 true)))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@127 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223)))) (or ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@61 ($generated@@37 $generated@@223) ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223))))))) (=> (not ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@44 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223)))))))) ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@48 ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 ($generated@@37 $generated@@223)))))))))))) (=> (=> ($generated@@127 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223)))) (or ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@61 ($generated@@37 $generated@@223) ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223))))))) (=> (not ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@44 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223)))))))) ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@48 ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 ($generated@@37 $generated@@223))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@127 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223)))) (or ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@61 ($generated@@37 $generated@@223) ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223))))))) (=> (not ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@44 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223)))))))) (let (($generated@@231 ($generated@@46 ($generated@@47 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 ($generated@@37 $generated@@223))))))))
(<= $generated@@231 ($generated@@46 ($generated@@47 ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 ($generated@@37 $generated@@223)))))))))))) (=> (=> ($generated@@127 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223)))) (or ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@61 ($generated@@37 $generated@@223) ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223))))))) (=> (not ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@44 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223)))))))) (let (($generated@@232 ($generated@@46 ($generated@@47 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 ($generated@@37 $generated@@223))))))))
(<= $generated@@232 ($generated@@46 ($generated@@47 ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 ($generated@@37 $generated@@223))))))))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@127 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223)))) (or ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@61 ($generated@@37 $generated@@223) ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223))))))) (=> (not ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 ($generated@@44 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223)))))))) (let (($generated@@233 ($generated@@38 $generated@@40 ($generated@@45 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 ($generated@@37 $generated@@223))))))))
($generated@@61 ($generated@@37 ($generated@@37 $generated@@223)) $generated@@233 ($generated@@38 $generated@@40 ($generated@@45 ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 ($generated@@37 $generated@@223))))))))))))))))))))
(let (($generated@@234  (=> (and (and (and ($generated@@224 $generated@@225) ($generated@@226 $generated@@225)) (= $generated@@227 $generated@@225)) (and (forall (($generated@@235 T@U) ) (!  (=> ($generated@@11 ($generated@@38 $generated@@7 ($generated@@10 true))) ($generated@@36 ($generated@@37 $generated@@223) $generated@@235 ($generated@@38 $generated@@40 ($generated@@69 ($generated@@37 $generated@@223))) ($generated@@38 $generated@@40 ($generated@@73 ($generated@@37 $generated@@223)))))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@223) $generated@@235 ($generated@@69 ($generated@@37 $generated@@223)) ($generated@@73 ($generated@@37 $generated@@223))))
)) (= (ControlFlow 0 7) 3))) $generated@@230)))
(let (($generated@@236 true))
(let (($generated@@237  (=> (= $generated@@228 ($generated@@138 $generated@@229 $generated@@227 $generated@@1 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@236) (=> (= (ControlFlow 0 8) 7) $generated@@234)))))
(let (($generated@@238  (=> (and (and ($generated@@224 $generated@@227) ($generated@@226 $generated@@227)) (and (= 4 $generated@@35) (= (ControlFlow 0 9) 8))) $generated@@237)))
$generated@@238))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
