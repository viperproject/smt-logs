(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 () Bool)
(declare-fun $generated@@32 () Int)
(declare-fun $generated@@33 (Int) Int)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@65 (Int) Bool)
(declare-fun $generated@@67 (Int) Int)
(declare-fun $generated@@68 (Int) Bool)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) Int)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24)
 :pattern ( ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24))
)))
(assert (= ($generated@@25 $generated@@26) $generated@@2))
(assert (= ($generated@@5 $generated@@28) 3))
(assert ($generated@@27 $generated@@28 $generated@@26 $generated@@29))
(assert  (=> (<= 0 $generated@@30) (=> (or $generated@@31 (< 0 $generated@@30)) (= $generated@@32 ($generated@@33 13)))))
(assert  (=> (<= 0 $generated@@30) (=> (or $generated@@31 (< 0 $generated@@30)) (= $generated@@32 ($generated@@33 13)))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@35 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@35 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@35 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@5 $generated@@36) 4)) (= ($generated@@5 $generated@@37) 5)) (= ($generated@@5 $generated@@38) 6)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@5 ($generated@@39 $generated@@55 $generated@@56)) 7))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@39 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@39 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@39 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> ($generated@@34 $generated@@61 $generated@@62) (forall (($generated@@63 T@U) ) (!  (=> ($generated@@10 ($generated@@40 $generated@@6 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@61 $generated@@63) $generated))) ($generated@@10 ($generated@@40 $generated@@6 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@62 $generated@@63) $generated))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@62 $generated@@63) $generated))
)))
 :pattern ( ($generated@@34 $generated@@61 $generated@@62))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@66 Int) ) (!  (=> (or ($generated@@65 $generated@@66) (and (< 0 $generated@@30) (< 0 $generated@@66))) (= ($generated@@64 $generated@@66) (+ $generated@@66 2)))
 :pattern ( ($generated@@64 $generated@@66))
))))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@69 Int) ) (!  (=> (or ($generated@@68 $generated@@69) (and (< 1 $generated@@30) (< 0 $generated@@69))) (= ($generated@@67 $generated@@69) (+ $generated@@69 3)))
 :pattern ( ($generated@@67 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@27 $generated@@7 $generated@@70 $generated@@22) (< 0 ($generated@@12 $generated@@70)))
 :pattern ( ($generated@@27 $generated@@7 $generated@@70 $generated@@22))
)))
(assert (forall (($generated@@71 Int) ) (! (= ($generated@@33 $generated@@71) $generated@@71)
 :pattern ( ($generated@@33 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 ($generated@@40 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@40 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@78 ($generated@@75 $generated@@82 $generated@@79) $generated@@80 $generated@@81) ($generated@@21 $generated@@82 $generated@@79 $generated@@80 $generated@@81))
 :pattern ( ($generated@@78 ($generated@@75 $generated@@82 $generated@@79) $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> ($generated@@34 $generated@@83 $generated@@84) (=> ($generated@@78 $generated@@85 $generated@@86 $generated@@83) ($generated@@78 $generated@@85 $generated@@86 $generated@@84)))
 :pattern ( ($generated@@34 $generated@@83 $generated@@84) ($generated@@78 $generated@@85 $generated@@86 $generated@@83))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (!  (=> ($generated@@34 $generated@@87 $generated@@88) (=> ($generated@@21 $generated@@91 $generated@@89 $generated@@90 $generated@@87) ($generated@@21 $generated@@91 $generated@@89 $generated@@90 $generated@@88)))
 :pattern ( ($generated@@34 $generated@@87 $generated@@88) ($generated@@21 $generated@@91 $generated@@89 $generated@@90 $generated@@87))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@92 Int) ) (!  (=> (or ($generated@@65 ($generated@@33 $generated@@92)) (and (< 0 $generated@@30) (< 0 $generated@@92))) (= ($generated@@64 ($generated@@33 $generated@@92)) ($generated@@33 (+ $generated@@92 2))))
 :weight 3
 :pattern ( ($generated@@64 ($generated@@33 $generated@@92)))
))))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@93 Int) ) (!  (=> (or ($generated@@68 ($generated@@33 $generated@@93)) (and (< 1 $generated@@30) (< 0 $generated@@93))) (= ($generated@@67 ($generated@@33 $generated@@93)) ($generated@@33 (+ $generated@@93 3))))
 :weight 3
 :pattern ( ($generated@@67 ($generated@@33 $generated@@93)))
))))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@96 T@U) ) (!  (=> (or ($generated@@95 $generated@@96) (and (< 0 $generated@@30) ($generated@@27 $generated@@28 $generated@@96 $generated@@29))) (= ($generated@@94 $generated@@96) ($generated@@33 10)))
 :pattern ( ($generated@@94 $generated@@96))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (or (not (= $generated@@97 $generated@@99)) (not true)) (=> (and ($generated@@34 $generated@@97 $generated@@98) ($generated@@34 $generated@@98 $generated@@99)) ($generated@@34 $generated@@97 $generated@@99)))
 :pattern ( ($generated@@34 $generated@@97 $generated@@98) ($generated@@34 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@40 $generated@@101 ($generated@@75 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@75 $generated@@101 $generated@@100))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@102 T@U) ) (!  (=> (or ($generated@@95 ($generated@@72 $generated@@28 $generated@@102)) (and (< 0 $generated@@30) ($generated@@27 $generated@@28 $generated@@102 $generated@@29))) (= ($generated@@94 ($generated@@72 $generated@@28 $generated@@102)) ($generated@@33 10)))
 :weight 3
 :pattern ( ($generated@@94 ($generated@@72 $generated@@28 $generated@@102)))
))))
(assert  (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@103 $generated@@106 $generated@@107 $generated@@108 ($generated@@105 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@111 $generated@@112) $generated@@109)
 :weight 0
)) (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@103 $generated@@113 $generated@@114 $generated@@115 ($generated@@105 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@103 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@103 $generated@@122 $generated@@123 $generated@@124 ($generated@@105 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@103 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)))))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 Bool) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@10 ($generated@@103 $generated@@38 $generated@@36 $generated@@6 ($generated@@104 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))  (=> (and (or (not (= $generated@@135 $generated@@131)) (not true)) ($generated@@10 ($generated@@40 $generated@@6 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@132 $generated@@135) $generated@@133)))) $generated@@134))
 :pattern ( ($generated@@103 $generated@@38 $generated@@36 $generated@@6 ($generated@@104 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and ($generated@@137 $generated@@139) ($generated@@27 $generated@@28 $generated@@138 $generated@@29)) ($generated@@21 $generated@@28 $generated@@138 $generated@@29 $generated@@139))
 :pattern ( ($generated@@21 $generated@@28 $generated@@138 $generated@@29 $generated@@139))
)))
(assert (= ($generated@@140 $generated@@29) $generated@@0))
(assert (= ($generated@@141 $generated@@29) $generated@@3))
(assert (= ($generated@@140 $generated@@22) $generated@@1))
(assert (= ($generated@@141 $generated@@22) $generated@@4))
(assert (= $generated@@26 ($generated@@72 $generated@@28 $generated@@26)))
(assert (forall (($generated@@142 Int) ) (! (= ($generated@@75 $generated@@7 ($generated@@11 ($generated@@33 $generated@@142))) ($generated@@72 $generated@@37 ($generated@@75 $generated@@7 ($generated@@11 $generated@@142))))
 :pattern ( ($generated@@75 $generated@@7 ($generated@@11 ($generated@@33 $generated@@142))))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@75 $generated@@144 ($generated@@72 $generated@@144 $generated@@143)) ($generated@@72 $generated@@37 ($generated@@75 $generated@@144 $generated@@143)))
 :pattern ( ($generated@@75 $generated@@144 ($generated@@72 $generated@@144 $generated@@143)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@162  (=> (and (and (= $generated@@145 ($generated@@104 $generated@@146 $generated@@147 $generated false)) (= $generated@@148 ($generated@@72 $generated@@28 $generated@@26))) (and ($generated@@78 ($generated@@75 $generated@@28 $generated@@148) $generated@@29 $generated@@147) ($generated@@95 $generated@@148))) (=> (and (and (and ($generated@@95 $generated@@148) (= $generated@@149 ($generated@@94 $generated@@148))) (and $generated@@31 $generated@@31)) (and (and $generated@@31 $generated@@31) (and (= $generated@@150 ($generated@@33 (+ $generated@@32 $generated@@32))) (= $generated@@151 ($generated@@33 8))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (< 0 $generated@@151)) (=> (< 0 $generated@@151) (=> (= $generated@@152 ($generated@@33 8)) (=> (and (and ($generated@@21 $generated@@7 ($generated@@11 $generated@@152) $generated@@22 $generated@@147) ($generated@@68 $generated@@152)) (and ($generated@@68 $generated@@152) (= $generated@@153 ($generated@@67 $generated@@152)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= $generated@@153 ($generated@@33 11))) (=> (= $generated@@153 ($generated@@33 11)) (=> (and (and ($generated@@78 ($generated@@75 $generated@@7 ($generated@@11 $generated@@152)) $generated@@22 $generated@@147) ($generated@@65 $generated@@152)) (and ($generated@@65 $generated@@152) (= $generated@@154 ($generated@@64 $generated@@152)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= $generated@@154 ($generated@@33 10))) (=> (= $generated@@154 ($generated@@33 10)) (=> (and (and (and ($generated@@137 $generated@@155) ($generated@@156 $generated@@155)) (= $generated@@157 (+ $generated@@152 3))) (and (forall (($generated@@163 T@U) ) (!  (=> (and (or (not (= $generated@@163 $generated@@146)) (not true)) ($generated@@10 ($generated@@40 $generated@@6 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@147 $generated@@163) $generated)))) (= ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@155 $generated@@163) ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@147 $generated@@163)))
 :pattern ( ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@155 $generated@@163))
)) ($generated@@34 $generated@@147 $generated@@155))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= $generated@@157 ($generated@@33 11))) (=> (= $generated@@157 ($generated@@33 11)) (=> (and ($generated@@137 $generated@@158) ($generated@@156 $generated@@158)) (=> (and (and (= $generated@@159 (+ $generated@@152 2)) (forall (($generated@@164 T@U) ) (!  (=> (and (or (not (= $generated@@164 $generated@@146)) (not true)) ($generated@@10 ($generated@@40 $generated@@6 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@155 $generated@@164) $generated)))) (= ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@158 $generated@@164) ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@155 $generated@@164)))
 :pattern ( ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@158 $generated@@164))
))) (and ($generated@@34 $generated@@155 $generated@@158) (= (ControlFlow 0 2) (- 0 1)))) (= $generated@@159 ($generated@@33 10))))))))))))))))))))
(let (($generated@@165  (=> (and ($generated@@137 $generated@@147) ($generated@@156 $generated@@147)) (=> (and (and (and ($generated@@27 $generated@@28 $generated@@160 $generated@@29) ($generated@@21 $generated@@28 $generated@@160 $generated@@29 $generated@@147)) true) (and (and (< 0 $generated@@161) true) (and (= 2 $generated@@30) (= (ControlFlow 0 7) 2)))) $generated@@162))))
$generated@@165)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
