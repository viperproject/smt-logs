(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (Int Int T@U T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@50 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@60 (T@T T@U T@U) Bool)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T T@T) T@T)
(declare-fun $generated@@70 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@92 (Int) Int)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@116 (Int Int) Int)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (forall (($generated@@26 Int) ($generated@@27 Int) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@25 ($generated@@24 $generated@@26 $generated@@27 $generated@@28 $generated@@29)) $generated@@4)
 :pattern ( ($generated@@24 $generated@@26 $generated@@27 $generated@@28 $generated@@29))
)))
(assert (forall (($generated@@31 Int) ($generated@@32 Int) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@30 ($generated@@24 $generated@@31 $generated@@32 $generated@@33 $generated@@34)) $generated@@31)
 :pattern ( ($generated@@24 $generated@@31 $generated@@32 $generated@@33 $generated@@34))
)))
(assert (forall (($generated@@36 Int) ($generated@@37 Int) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@35 ($generated@@24 $generated@@36 $generated@@37 $generated@@38 $generated@@39)) $generated@@37)
 :pattern ( ($generated@@24 $generated@@36 $generated@@37 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 Int) ($generated@@42 Int) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@40 ($generated@@24 $generated@@41 $generated@@42 $generated@@43 $generated@@44)) $generated@@43)
 :pattern ( ($generated@@24 $generated@@41 $generated@@42 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 Int) ($generated@@47 Int) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@45 ($generated@@24 $generated@@46 $generated@@47 $generated@@48 $generated@@49)) $generated@@49)
 :pattern ( ($generated@@24 $generated@@46 $generated@@47 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! ($generated@@50 $generated@@10 $generated@@52 $generated@@51 $generated@@53)
 :pattern ( ($generated@@50 $generated@@10 $generated@@52 $generated@@51 $generated@@53))
)))
(assert (= ($generated@@8 $generated@@54) 3))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@50 $generated@@54 $generated@@57 $generated@@55 $generated@@58) ($generated@@50 $generated@@54 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@50 $generated@@54 $generated@@57 $generated@@55 $generated@@58))
 :pattern ( ($generated@@50 $generated@@54 $generated@@57 $generated@@56 $generated@@58))
)))
(assert (= ($generated@@8 $generated@@61) 4))
(assert (forall (($generated@@63 T@U) ) (!  (=> ($generated@@60 $generated@@61 $generated@@63 $generated@@62) ($generated@@59 $generated@@63))
 :pattern ( ($generated@@59 $generated@@63) ($generated@@60 $generated@@61 $generated@@63 $generated@@62))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@66 $generated@@73 $generated@@74 ($generated@@70 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@77) $generated@@75)
 :weight 0
)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (or (= $generated@@82 $generated@@83) (= ($generated@@66 $generated@@78 $generated@@79 ($generated@@70 $generated@@78 $generated@@79 $generated@@81 $generated@@82 $generated@@80) $generated@@83) ($generated@@66 $generated@@78 $generated@@79 $generated@@81 $generated@@83)))
 :weight 0
))) (= ($generated@@8 $generated@@67) 5)) (= ($generated@@8 $generated@@68) 6)) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (= ($generated@@8 ($generated@@69 $generated@@84 $generated@@85)) 7))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@71 ($generated@@69 $generated@@86 $generated@@87)) $generated@@86)
 :pattern ( ($generated@@69 $generated@@86 $generated@@87))
))) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (! (= ($generated@@72 ($generated@@69 $generated@@88 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@69 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@50 $generated@@54 $generated@@90 $generated@@56 $generated@@91)  (or (= $generated@@90 $generated@@64) ($generated@@13 ($generated@@65 $generated@@9 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@54 ($generated@@69 $generated@@67 $generated@@68) $generated@@91 $generated@@90) $generated)))))
 :pattern ( ($generated@@50 $generated@@54 $generated@@90 $generated@@56 $generated@@91))
)))
(assert (forall (($generated@@93 Int) ) (! (= ($generated@@92 $generated@@93) $generated@@93)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 $generated@@95) $generated@@95)
 :pattern ( ($generated@@94 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@59 $generated@@97) (= ($generated@@25 $generated@@97) $generated@@4))
 :pattern ( ($generated@@59 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 ($generated@@65 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@65 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@102 Int) ($generated@@103 Int) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@101 $generated@@106) (= ($generated@@50 $generated@@61 ($generated@@24 $generated@@102 $generated@@103 $generated@@104 $generated@@105) $generated@@62 $generated@@106)  (and (and (and ($generated@@50 $generated@@10 ($generated@@14 $generated@@102) $generated@@51 $generated@@106) ($generated@@50 $generated@@10 ($generated@@14 $generated@@103) $generated@@51 $generated@@106)) ($generated@@50 $generated@@54 $generated@@104 $generated@@55 $generated@@106)) ($generated@@50 $generated@@54 $generated@@105 $generated@@55 $generated@@106))))
 :pattern ( ($generated@@50 $generated@@61 ($generated@@24 $generated@@102 $generated@@103 $generated@@104 $generated@@105) $generated@@62 $generated@@106))
)))
(assert (forall (($generated@@107 Int) ($generated@@108 Int) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@24 ($generated@@92 $generated@@107) ($generated@@92 $generated@@108) ($generated@@94 $generated@@54 $generated@@109) ($generated@@94 $generated@@54 $generated@@110)) ($generated@@94 $generated@@61 ($generated@@24 $generated@@107 $generated@@108 $generated@@109 $generated@@110)))
 :pattern ( ($generated@@24 ($generated@@92 $generated@@107) ($generated@@92 $generated@@108) ($generated@@94 $generated@@54 $generated@@109) ($generated@@94 $generated@@54 $generated@@110)))
)))
(assert (forall (($generated@@111 Int) ($generated@@112 Int) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@60 $generated@@61 ($generated@@24 $generated@@111 $generated@@112 $generated@@113 $generated@@114) $generated@@62)  (and (and (and ($generated@@60 $generated@@10 ($generated@@14 $generated@@111) $generated@@51) ($generated@@60 $generated@@10 ($generated@@14 $generated@@112) $generated@@51)) ($generated@@60 $generated@@54 $generated@@113 $generated@@55)) ($generated@@60 $generated@@54 $generated@@114 $generated@@55)))
 :pattern ( ($generated@@60 $generated@@61 ($generated@@24 $generated@@111 $generated@@112 $generated@@113 $generated@@114) $generated@@62))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@60 $generated@@54 $generated@@115 $generated@@55)  (and ($generated@@60 $generated@@54 $generated@@115 $generated@@56) (or (not (= $generated@@115 $generated@@64)) (not true))))
 :pattern ( ($generated@@60 $generated@@54 $generated@@115 $generated@@55))
 :pattern ( ($generated@@60 $generated@@54 $generated@@115 $generated@@56))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@60 $generated@@10 $generated@@117 $generated@@51) (= ($generated@@116 ($generated@@15 $generated@@117) ($generated@@92 2)) ($generated@@92 1)))
 :pattern ( ($generated@@60 $generated@@10 $generated@@117 $generated@@51))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@59 $generated@@118) (exists (($generated@@119 Int) ($generated@@120 Int) ($generated@@121 T@U) ($generated@@122 T@U) ) (= $generated@@118 ($generated@@24 $generated@@119 $generated@@120 $generated@@121 $generated@@122))))
 :pattern ( ($generated@@59 $generated@@118))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@65 $generated@@124 ($generated@@98 $generated@@124 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@98 $generated@@124 $generated@@123))
)))
(assert  (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@125 $generated@@128 $generated@@129 $generated@@130 ($generated@@127 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@133 $generated@@134) $generated@@131)
 :weight 0
)) (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@125 $generated@@135 $generated@@136 $generated@@137 ($generated@@127 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@125 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@125 $generated@@144 $generated@@145 $generated@@146 ($generated@@127 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@125 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Bool) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@13 ($generated@@125 $generated@@54 $generated@@67 $generated@@9 ($generated@@126 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))  (=> (and (or (not (= $generated@@157 $generated@@153)) (not true)) ($generated@@13 ($generated@@65 $generated@@9 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@54 ($generated@@69 $generated@@67 $generated@@68) $generated@@154 $generated@@157) $generated@@155)))) $generated@@156))
 :pattern ( ($generated@@125 $generated@@54 $generated@@67 $generated@@9 ($generated@@126 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 Int) ($generated@@160 Int) ) (! (= ($generated@@116 $generated@@159 $generated@@160) (mod $generated@@159 $generated@@160))
 :pattern ( ($generated@@116 $generated@@159 $generated@@160))
)))
(assert (= ($generated@@161 $generated@@55) $generated@@0))
(assert (= ($generated@@162 $generated@@55) $generated@@5))
(assert (= ($generated@@161 $generated@@62) $generated@@1))
(assert (= ($generated@@162 $generated@@62) $generated@@6))
(assert (= ($generated@@161 $generated@@51) $generated@@2))
(assert (= ($generated@@162 $generated@@51) $generated@@7))
(assert (= ($generated@@161 $generated@@56) $generated@@3))
(assert (= ($generated@@162 $generated@@56) $generated@@5))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@60 $generated@@54 $generated@@165 $generated@@56)  (or (= $generated@@165 $generated@@64) ($generated@@163 ($generated@@164 $generated@@165))))
 :pattern ( ($generated@@60 $generated@@54 $generated@@165 $generated@@56))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@101 $generated@@167) (and ($generated@@59 $generated@@166) ($generated@@50 $generated@@61 $generated@@166 $generated@@62 $generated@@167))) ($generated@@50 $generated@@10 ($generated@@14 ($generated@@30 $generated@@166)) $generated@@51 $generated@@167))
 :pattern ( ($generated@@50 $generated@@10 ($generated@@14 ($generated@@30 $generated@@166)) $generated@@51 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and ($generated@@101 $generated@@169) (and ($generated@@59 $generated@@168) ($generated@@50 $generated@@61 $generated@@168 $generated@@62 $generated@@169))) ($generated@@50 $generated@@10 ($generated@@14 ($generated@@35 $generated@@168)) $generated@@51 $generated@@169))
 :pattern ( ($generated@@50 $generated@@10 ($generated@@14 ($generated@@35 $generated@@168)) $generated@@51 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and ($generated@@101 $generated@@171) (and ($generated@@59 $generated@@170) ($generated@@50 $generated@@61 $generated@@170 $generated@@62 $generated@@171))) ($generated@@50 $generated@@54 ($generated@@40 $generated@@170) $generated@@55 $generated@@171))
 :pattern ( ($generated@@50 $generated@@54 ($generated@@40 $generated@@170) $generated@@55 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@101 $generated@@173) (and ($generated@@59 $generated@@172) ($generated@@50 $generated@@61 $generated@@172 $generated@@62 $generated@@173))) ($generated@@50 $generated@@54 ($generated@@45 $generated@@172) $generated@@55 $generated@@173))
 :pattern ( ($generated@@50 $generated@@54 ($generated@@45 $generated@@172) $generated@@55 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@98 $generated@@10 ($generated@@14 ($generated@@92 $generated@@174))) ($generated@@94 $generated@@68 ($generated@@98 $generated@@10 ($generated@@14 $generated@@174))))
 :pattern ( ($generated@@98 $generated@@10 ($generated@@14 ($generated@@92 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@98 $generated@@176 ($generated@@94 $generated@@176 $generated@@175)) ($generated@@94 $generated@@68 ($generated@@98 $generated@@176 $generated@@175)))
 :pattern ( ($generated@@98 $generated@@176 ($generated@@94 $generated@@176 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Bool)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Bool)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@194  (=> (= $generated@@177 ($generated@@126 $generated@@64 $generated@@178 $generated false)) (=> (and (and (=> $generated@@179 (= ($generated@@116 $generated@@180 ($generated@@92 2)) ($generated@@92 1))) (= ($generated@@116 $generated@@181 ($generated@@92 2)) ($generated@@92 1))) (and (=> $generated@@182 (and ($generated@@60 $generated@@54 $generated@@183 $generated@@55) ($generated@@50 $generated@@54 $generated@@183 $generated@@55 $generated@@178))) (=> $generated@@184 (and ($generated@@60 $generated@@54 $generated@@185 $generated@@55) ($generated@@50 $generated@@54 $generated@@185 $generated@@55 $generated@@178))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) $generated@@179) (=> $generated@@179 (and (=> (= (ControlFlow 0 2) (- 0 3)) $generated@@182) (=> $generated@@182 (=> (= (ControlFlow 0 2) (- 0 1)) $generated@@184)))))))))
(let (($generated@@195  (=> (and ($generated@@101 $generated@@178) ($generated@@186 $generated@@178)) (=> (and (and (=> $generated@@179 (= ($generated@@116 $generated@@187 ($generated@@92 2)) ($generated@@92 1))) true) (and (= ($generated@@116 $generated@@188 ($generated@@92 2)) ($generated@@92 1)) true)) (=> (and (and (and (=> $generated@@182 (and ($generated@@60 $generated@@54 $generated@@189 $generated@@55) ($generated@@50 $generated@@54 $generated@@189 $generated@@55 $generated@@178))) true) (and (=> $generated@@184 (and ($generated@@60 $generated@@54 $generated@@190 $generated@@55) ($generated@@50 $generated@@54 $generated@@190 $generated@@55 $generated@@178))) true)) (and (and (=> $generated@@191 (and ($generated@@60 $generated@@61 $generated@@192 $generated@@62) ($generated@@50 $generated@@61 $generated@@192 $generated@@62 $generated@@178))) true) (and (= 2 $generated@@193) (= (ControlFlow 0 5) 2)))) $generated@@194)))))
$generated@@195)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
