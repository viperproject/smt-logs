(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 () Int)
(declare-fun $generated@@19 (T@U T@U Int) Bool)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (Int) Int)
(declare-fun $generated@@32 (T@U Int) Bool)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 () Int)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@37 (Int) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@76 (T@T T@U T@U) Bool)
(declare-fun $generated@@81 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@85 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert  (=> (<= 2 $generated@@18) (forall (($generated@@22 T@U) ($generated@@23 Int) ($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> ($generated@@21 $generated@@24 $generated@@25) (=> ($generated@@19 $generated@@22 $generated@@24 $generated@@23) ($generated@@19 $generated@@22 $generated@@25 $generated@@23)))
 :pattern ( ($generated@@19 $generated@@22 $generated@@24 $generated@@23) ($generated@@20 $generated@@24 $generated@@26) ($generated@@20 $generated@@25 $generated@@26))
))))
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@2 $generated@@30) 3))
(assert  (=> (<= 2 $generated@@18) (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 Int) ) (!  (=> (or ($generated@@32 ($generated@@29 $generated@@30 $generated@@39) ($generated@@31 $generated@@40)) (< 2 $generated@@18)) (and (and (=> (< 0 ($generated@@33 $generated@@39)) (=> (<= 20 (+ $generated@@34 $generated@@35)) ($generated@@32 ($generated@@36 $generated@@39 ($generated@@37 1)) ($generated@@31 (+ $generated@@40 1))))) (=> (=> (< 0 ($generated@@33 $generated@@39)) (or (< (+ $generated@@34 $generated@@35) 20) ($generated@@19 ($generated@@28 $generated@@38) ($generated@@36 $generated@@39 ($generated@@37 1)) ($generated@@31 (+ $generated@@40 1))))) (=> (= ($generated@@31 0) ($generated@@33 $generated@@39)) (forall (($generated@@41 T@U) ) (!  (=> ($generated@@20 $generated@@41 $generated@@39) ($generated@@32 $generated@@41 $generated@@40))
 :pattern ( ($generated@@19 ($generated@@28 $generated@@38) $generated@@41 $generated@@40))
))))) (= ($generated@@19 ($generated@@28 $generated@@38) ($generated@@29 $generated@@30 $generated@@39) ($generated@@31 $generated@@40))  (and (=> (< 0 ($generated@@33 $generated@@39)) (or (< (+ $generated@@34 $generated@@35) 20) ($generated@@19 ($generated@@28 $generated@@38) ($generated@@36 $generated@@39 ($generated@@37 1)) ($generated@@31 (+ $generated@@40 1))))) (=> (= ($generated@@31 0) ($generated@@33 $generated@@39)) (exists (($generated@@42 T@U) ) (!  (and ($generated@@20 $generated@@42 $generated@@39) ($generated@@19 ($generated@@28 $generated@@38) $generated@@42 $generated@@40))
 :pattern ( ($generated@@19 ($generated@@28 $generated@@38) $generated@@42 $generated@@40))
)))))))
 :weight 3
 :pattern ( ($generated@@19 ($generated@@28 $generated@@38) ($generated@@29 $generated@@30 $generated@@39) ($generated@@31 $generated@@40)))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (and ($generated@@21 $generated@@43 $generated@@44) ($generated@@21 $generated@@44 $generated@@45)) ($generated@@21 $generated@@43 $generated@@45))
 :pattern ( ($generated@@21 $generated@@43 $generated@@44) ($generated@@21 $generated@@44 $generated@@45))
 :pattern ( ($generated@@21 $generated@@43 $generated@@44) ($generated@@21 $generated@@43 $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 Int) ($generated@@48 Int) ) (!  (=> (and (and (<= 0 $generated@@47) (<= 0 $generated@@48)) (<= (+ $generated@@47 $generated@@48) ($generated@@33 $generated@@46))) (= ($generated@@36 ($generated@@36 $generated@@46 ($generated@@37 $generated@@47)) ($generated@@37 $generated@@48)) ($generated@@36 $generated@@46 ($generated@@37 (+ $generated@@47 $generated@@48)))))
 :pattern ( ($generated@@36 ($generated@@36 $generated@@46 ($generated@@37 $generated@@47)) ($generated@@37 $generated@@48)))
)))
(assert  (=> (<= 2 $generated@@18) (forall (($generated@@49 T@U) ($generated@@50 Int) ($generated@@51 T@U) ) (!  (=> (= $generated@@51 ($generated@@37 0)) (not ($generated@@19 $generated@@49 $generated@@51 $generated@@50)))
 :pattern ( ($generated@@19 $generated@@49 $generated@@51 $generated@@50))
))))
(assert (forall (($generated@@52 Int) ) (! (= ($generated@@31 $generated@@52) $generated@@52)
 :pattern ( ($generated@@31 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@29 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@29 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 ($generated@@55 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@55 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 Int) ) (! (= ($generated@@19 ($generated@@28 $generated@@59) $generated@@60 $generated@@61) ($generated@@19 $generated@@59 $generated@@60 $generated@@61))
 :pattern ( ($generated@@19 ($generated@@28 $generated@@59) $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and ($generated@@62 $generated@@64) (<= ($generated@@33 $generated@@64) ($generated@@33 $generated@@63))) (and (= ($generated@@62 ($generated@@36 $generated@@63 $generated@@64)) ($generated@@62 $generated@@63)) (= ($generated@@33 ($generated@@36 $generated@@63 $generated@@64)) (- ($generated@@33 $generated@@63) ($generated@@33 $generated@@64)))))
 :pattern ( ($generated@@36 $generated@@63 $generated@@64))
)))
(assert  (=> (<= 2 $generated@@18) (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 Int) ) (!  (=> (or ($generated@@32 $generated@@66 $generated@@67) (< 2 $generated@@18)) (and (and (=> (< 0 ($generated@@33 $generated@@66)) (=> (<= 20 (+ $generated@@34 $generated@@35)) ($generated@@32 ($generated@@36 $generated@@66 ($generated@@37 1)) (+ $generated@@67 1)))) (=> (=> (< 0 ($generated@@33 $generated@@66)) (or (< (+ $generated@@34 $generated@@35) 20) ($generated@@19 $generated@@65 ($generated@@36 $generated@@66 ($generated@@37 1)) (+ $generated@@67 1)))) (=> (= ($generated@@31 0) ($generated@@33 $generated@@66)) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@20 $generated@@68 $generated@@66) ($generated@@32 $generated@@68 $generated@@67))
 :pattern ( ($generated@@19 $generated@@65 $generated@@68 $generated@@67))
))))) (= ($generated@@19 ($generated@@28 $generated@@65) $generated@@66 $generated@@67)  (and (=> (< 0 ($generated@@33 $generated@@66)) (or (< (+ $generated@@34 $generated@@35) 20) ($generated@@19 $generated@@65 ($generated@@36 $generated@@66 ($generated@@37 1)) (+ $generated@@67 1)))) (=> (= ($generated@@31 0) ($generated@@33 $generated@@66)) (exists (($generated@@69 T@U) ) (!  (and ($generated@@20 $generated@@69 $generated@@66) ($generated@@19 $generated@@65 $generated@@69 $generated@@67))
 :pattern ( ($generated@@19 $generated@@65 $generated@@69 $generated@@67))
)))))))
 :pattern ( ($generated@@19 ($generated@@28 $generated@@65) $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@70 Int) ) (!  (=> (<= 0 $generated@@70) (and ($generated@@62 ($generated@@37 $generated@@70)) (= ($generated@@33 ($generated@@37 $generated@@70)) $generated@@70)))
 :pattern ( ($generated@@37 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (or (or ($generated@@21 $generated@@71 $generated@@72) (= $generated@@71 $generated@@72)) ($generated@@21 $generated@@72 $generated@@71))
 :pattern ( ($generated@@21 $generated@@71 $generated@@72) ($generated@@21 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@20 $generated@@73 $generated@@74) ($generated@@21 $generated@@73 $generated@@74))
 :pattern ( ($generated@@20 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ) (! (<= 0 ($generated@@33 $generated@@75))
 :pattern ( ($generated@@33 $generated@@75))
)))
(assert  (=> (< 0 $generated@@18) ($generated@@76 $generated@@4 ($generated@@8 $generated@@34) $generated)))
(assert  (=> (< 0 $generated@@18) ($generated@@76 $generated@@4 ($generated@@8 $generated@@35) $generated)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@55 $generated@@78 ($generated@@56 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@56 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (and (and (and (=> ($generated@@21 $generated@@79 $generated@@80) (or (not (= $generated@@79 $generated@@80)) (not true))) (=> (and ($generated@@62 $generated@@79) (not ($generated@@62 $generated@@80))) ($generated@@21 $generated@@79 $generated@@80))) (=> (and ($generated@@62 $generated@@79) ($generated@@62 $generated@@80)) (= ($generated@@21 $generated@@79 $generated@@80) (< ($generated@@33 $generated@@79) ($generated@@33 $generated@@80))))) (=> (and ($generated@@21 $generated@@79 $generated@@80) ($generated@@62 $generated@@80)) ($generated@@62 $generated@@79)))
 :pattern ( ($generated@@21 $generated@@79 $generated@@80))
)))
(assert (= $generated@@35 ($generated@@31 25)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@81 $generated@@91 $generated@@92 $generated@@93 ($generated@@87 $generated@@91 $generated@@92 $generated@@93 $generated@@95 $generated@@96 $generated@@97 $generated@@94) $generated@@96 $generated@@97) $generated@@94)
 :weight 0
)) (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@103 $generated@@105) (= ($generated@@81 $generated@@98 $generated@@99 $generated@@100 ($generated@@87 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@104 $generated@@101) $generated@@105 $generated@@106) ($generated@@81 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@105 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@81 $generated@@107 $generated@@108 $generated@@109 ($generated@@87 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@114 $generated@@115) ($generated@@81 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@114 $generated@@115)))
 :weight 0
)))) (= ($generated@@2 $generated@@82) 4)) (= ($generated@@2 $generated@@83) 5)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@85 $generated@@116 $generated@@117 ($generated@@88 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@118) $generated@@120) $generated@@118)
 :weight 0
))) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 $generated@@121 $generated@@122 ($generated@@88 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@121 $generated@@122 $generated@@124 $generated@@126)))
 :weight 0
))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (= ($generated@@2 ($generated@@86 $generated@@127 $generated@@128)) 6))) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (! (= ($generated@@89 ($generated@@86 $generated@@129 $generated@@130)) $generated@@129)
 :pattern ( ($generated@@86 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@131 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@86 $generated@@131 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 Bool) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@7 ($generated@@81 $generated@@82 $generated@@83 $generated@@3 ($generated@@84 $generated@@133 $generated@@134 $generated@@135 $generated@@136) $generated@@137 $generated@@138))  (=> (and (or (not (= $generated@@137 $generated@@133)) (not true)) ($generated@@7 ($generated@@55 $generated@@3 ($generated@@85 $generated@@83 $generated@@30 ($generated@@85 $generated@@82 ($generated@@86 $generated@@83 $generated@@30) $generated@@134 $generated@@137) $generated@@135)))) $generated@@136))
 :pattern ( ($generated@@81 $generated@@82 $generated@@83 $generated@@3 ($generated@@84 $generated@@133 $generated@@134 $generated@@135 $generated@@136) $generated@@137 $generated@@138))
)))
(assert  (=> (<= 2 $generated@@18) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 Int) ) (!  (=> (or ($generated@@32 ($generated@@29 $generated@@30 $generated@@140) $generated@@141) (< 2 $generated@@18)) (and (and (=> (< 0 ($generated@@33 $generated@@140)) (=> (<= 20 (+ $generated@@34 $generated@@35)) ($generated@@32 ($generated@@36 $generated@@140 ($generated@@37 1)) (+ $generated@@141 1)))) (=> (=> (< 0 ($generated@@33 $generated@@140)) (or (< (+ $generated@@34 $generated@@35) 20) ($generated@@19 ($generated@@28 $generated@@139) ($generated@@36 $generated@@140 ($generated@@37 1)) (+ $generated@@141 1)))) (=> (= ($generated@@31 0) ($generated@@33 $generated@@140)) (forall (($generated@@142 T@U) ) (!  (=> ($generated@@20 $generated@@142 $generated@@140) ($generated@@32 $generated@@142 $generated@@141))
 :pattern ( ($generated@@19 ($generated@@28 $generated@@139) $generated@@142 $generated@@141))
))))) (= ($generated@@19 ($generated@@28 $generated@@139) ($generated@@29 $generated@@30 $generated@@140) $generated@@141)  (and (=> (< 0 ($generated@@33 $generated@@140)) (or (< (+ $generated@@34 $generated@@35) 20) ($generated@@19 ($generated@@28 $generated@@139) ($generated@@36 $generated@@140 ($generated@@37 1)) (+ $generated@@141 1)))) (=> (= ($generated@@31 0) ($generated@@33 $generated@@140)) (exists (($generated@@143 T@U) ) (!  (and ($generated@@20 $generated@@143 $generated@@140) ($generated@@19 ($generated@@28 $generated@@139) $generated@@143 $generated@@141))
 :pattern ( ($generated@@19 ($generated@@28 $generated@@139) $generated@@143 $generated@@141))
)))))))
 :weight 3
 :pattern ( ($generated@@19 ($generated@@28 $generated@@139) ($generated@@29 $generated@@30 $generated@@140) $generated@@141))
))))
(assert (forall (($generated@@144 T@U) ) (!  (=> ($generated@@62 $generated@@144) (= $generated@@144 ($generated@@37 ($generated@@33 $generated@@144))))
 :pattern ( ($generated@@33 $generated@@144))
 :pattern ( ($generated@@62 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and ($generated@@62 $generated@@146) (<= ($generated@@33 $generated@@146) ($generated@@33 $generated@@145))) (or (and (= $generated@@146 ($generated@@37 0)) (= ($generated@@36 $generated@@145 $generated@@146) $generated@@145)) (and (or (not (= $generated@@146 ($generated@@37 0))) (not true)) ($generated@@21 ($generated@@36 $generated@@145 $generated@@146) $generated@@145))))
 :pattern ( ($generated@@36 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 Int) ) (! (= ($generated@@56 $generated@@4 ($generated@@8 ($generated@@31 $generated@@147))) ($generated@@29 $generated@@30 ($generated@@56 $generated@@4 ($generated@@8 $generated@@147))))
 :pattern ( ($generated@@56 $generated@@4 ($generated@@8 ($generated@@31 $generated@@147))))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@56 $generated@@149 ($generated@@29 $generated@@149 $generated@@148)) ($generated@@29 $generated@@30 ($generated@@56 $generated@@149 $generated@@148)))
 :pattern ( ($generated@@56 $generated@@149 ($generated@@29 $generated@@149 $generated@@148)))
)))
(assert (forall (($generated@@150 T@U) ) (! ($generated@@76 $generated@@4 $generated@@150 $generated)
 :pattern ( ($generated@@76 $generated@@4 $generated@@150 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@162  (=> (= (ControlFlow 0 2) (- 0 1)) (< (+ $generated@@34 $generated@@35) 20))))
(let (($generated@@163  (=> (<= ($generated@@33 $generated@@151) 0) (=> (and (and (and ($generated@@152 $generated@@153) ($generated@@154 $generated@@153)) (= $generated@@155 $generated@@153)) (and (forall (($generated@@164 T@U) ($generated@@165 Int) ) (!  (=> (and ($generated@@21 $generated@@164 $generated@@151) ($generated@@19 ($generated@@28 $generated@@156) $generated@@164 $generated@@165)) (< (+ $generated@@34 $generated@@35) 20))
 :pattern ( ($generated@@19 ($generated@@28 $generated@@156) $generated@@164 $generated@@165))
)) (= (ControlFlow 0 4) 2))) $generated@@162))))
(let (($generated@@166  (=> (< 0 ($generated@@33 $generated@@151)) (=> (and (= $generated@@157 (+ $generated@@34 $generated@@35)) (= (ControlFlow 0 3) 2)) $generated@@162))))
(let (($generated@@167  (=> (= $generated@@158 ($generated@@84 $generated@@159 $generated@@160 $generated@@1 false)) (=> (and (and ($generated@@152 $generated@@155) ($generated@@154 $generated@@155)) (and (= $generated@@160 $generated@@155) (forall (($generated@@168 T@U) ($generated@@169 Int) ) (!  (=> (and ($generated@@19 ($generated@@28 $generated@@156) $generated@@168 $generated@@169) (or ($generated@@21 $generated@@168 $generated@@151) (and (= $generated@@168 $generated@@151) (and (<= 0 $generated@@169) (< $generated@@169 $generated@@161))))) (< (+ $generated@@34 $generated@@35) 20))
 :pattern ( ($generated@@19 ($generated@@28 $generated@@156) $generated@@168 $generated@@169))
)))) (and (=> (= (ControlFlow 0 5) 3) $generated@@166) (=> (= (ControlFlow 0 5) 4) $generated@@163))))))
(let (($generated@@170  (=> (and (and (and ($generated@@152 $generated@@160) ($generated@@154 $generated@@160)) (= 3 $generated@@18)) (and (and ($generated@@32 $generated@@151 $generated@@161) (and ($generated@@19 ($generated@@28 $generated@@156) $generated@@151 $generated@@161) (and (=> (< 0 ($generated@@33 $generated@@151)) (or (< (+ $generated@@34 $generated@@35) 20) ($generated@@19 ($generated@@28 $generated@@156) ($generated@@36 $generated@@151 ($generated@@37 1)) (+ $generated@@161 1)))) (=> (= ($generated@@31 0) ($generated@@33 $generated@@151)) (exists (($generated@@171 T@U) ) (!  (and ($generated@@20 $generated@@171 $generated@@151) ($generated@@19 ($generated@@28 $generated@@156) $generated@@171 $generated@@161))
 :pattern ( ($generated@@19 ($generated@@28 $generated@@156) $generated@@171 $generated@@161))
)))))) (= (ControlFlow 0 6) 5))) $generated@@167)))
$generated@@170))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
