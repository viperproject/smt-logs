(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 (T@U T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@T T@U T@U) Bool)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@153 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@24) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@27 $generated@@31) (= ($generated@@23 $generated@@24 ($generated@@25 $generated@@29 $generated@@30) ($generated@@26 $generated@@28) $generated@@31)  (and ($generated@@23 $generated@@24 $generated@@29 ($generated@@26 $generated@@28) $generated@@31) ($generated@@23 $generated@@24 $generated@@30 ($generated@@26 $generated@@28) $generated@@31))))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@25 $generated@@29 $generated@@30) ($generated@@26 $generated@@28) $generated@@31))
)))
(assert (= ($generated@@7 $generated@@32) 4))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@23 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37) ($generated@@23 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
 :pattern ( ($generated@@23 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37))
 :pattern ( ($generated@@23 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@38 $generated@@40 ($generated@@39 $generated@@41) $generated@@42) ($generated@@38 $generated@@40 $generated@@41 $generated@@42))
 :pattern ( ($generated@@38 $generated@@40 ($generated@@39 $generated@@41) $generated@@42))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@45 $generated@@52 $generated@@53 ($generated@@49 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@56) $generated@@54)
 :weight 0
)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (or (= $generated@@61 $generated@@62) (= ($generated@@45 $generated@@57 $generated@@58 ($generated@@49 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@62) ($generated@@45 $generated@@57 $generated@@58 $generated@@60 $generated@@62)))
 :weight 0
))) (= ($generated@@7 $generated@@46) 5)) (= ($generated@@7 $generated@@47) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@7 ($generated@@48 $generated@@63 $generated@@64)) 7))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@50 ($generated@@48 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@51 ($generated@@48 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@48 $generated@@67 $generated@@68))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@23 $generated@@32 $generated@@70 ($generated@@34 $generated@@69) $generated@@71)  (or (= $generated@@70 $generated@@43) ($generated@@12 ($generated@@44 $generated@@8 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@71 $generated@@70) $generated)))))
 :pattern ( ($generated@@23 $generated@@32 $generated@@70 ($generated@@34 $generated@@69) $generated@@71))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@74 $generated@@79 ($generated@@73 $generated@@24 $generated@@81)) (and (< 1 $generated@@72) ($generated@@75 $generated@@24 $generated@@81 ($generated@@26 $generated@@79)))) (and (=> (not ($generated@@12 ($generated@@73 $generated@@8 ($generated@@11 ($generated@@76 ($generated@@73 $generated@@24 $generated@@81)))))) (let (($generated@@82 ($generated@@73 $generated@@24 ($generated@@77 ($generated@@73 $generated@@24 $generated@@81)))))
($generated@@74 $generated@@79 $generated@@82))) (= ($generated@@38 $generated@@79 ($generated@@39 $generated@@80) ($generated@@73 $generated@@24 $generated@@81)) (ite ($generated@@76 ($generated@@73 $generated@@24 $generated@@81)) (let (($generated@@83 ($generated@@73 $generated@@32 ($generated@@78 ($generated@@73 $generated@@24 $generated@@81)))))
$generated@@83) (let (($generated@@84 ($generated@@73 $generated@@24 ($generated@@77 ($generated@@73 $generated@@24 $generated@@81)))))
($generated@@73 $generated@@32 ($generated@@38 $generated@@79 ($generated@@39 $generated@@80) $generated@@84)))))))
 :weight 3
 :pattern ( ($generated@@38 $generated@@79 ($generated@@39 $generated@@80) ($generated@@73 $generated@@24 $generated@@81)))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@73 $generated@@86 $generated@@85) $generated@@85)
 :pattern ( ($generated@@73 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@76 $generated@@88) (= ($generated@@87 $generated@@88) $generated@@3))
 :pattern ( ($generated@@76 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@89 $generated@@90) (= ($generated@@87 $generated@@90) $generated@@4))
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 ($generated@@44 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@44 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@89 $generated@@94) (exists (($generated@@95 T@U) ($generated@@96 T@U) ) (= $generated@@94 ($generated@@25 $generated@@95 $generated@@96))))
 :pattern ( ($generated@@89 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@75 $generated@@24 ($generated@@25 $generated@@98 $generated@@99) ($generated@@26 $generated@@97))  (and ($generated@@75 $generated@@24 $generated@@98 ($generated@@26 $generated@@97)) ($generated@@75 $generated@@24 $generated@@99 ($generated@@26 $generated@@97))))
 :pattern ( ($generated@@75 $generated@@24 ($generated@@25 $generated@@98 $generated@@99) ($generated@@26 $generated@@97)))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@76 $generated@@101) (exists (($generated@@102 T@U) ) (= $generated@@101 ($generated@@100 $generated@@102))))
 :pattern ( ($generated@@76 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@75 $generated@@32 $generated@@104 ($generated@@33 $generated@@103))  (and ($generated@@75 $generated@@32 $generated@@104 ($generated@@34 $generated@@103)) (or (not (= $generated@@104 $generated@@43)) (not true))))
 :pattern ( ($generated@@75 $generated@@32 $generated@@104 ($generated@@33 $generated@@103)))
 :pattern ( ($generated@@75 $generated@@32 $generated@@104 ($generated@@34 $generated@@103)))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (or ($generated@@74 $generated@@105 $generated@@107) (and (< 1 $generated@@72) ($generated@@75 $generated@@24 $generated@@107 ($generated@@26 $generated@@105)))) (and (=> (not ($generated@@76 $generated@@107)) (let (($generated@@108 ($generated@@77 $generated@@107)))
($generated@@74 $generated@@105 $generated@@108))) (= ($generated@@38 $generated@@105 ($generated@@39 $generated@@106) $generated@@107) (ite ($generated@@76 $generated@@107) (let (($generated@@109 ($generated@@78 $generated@@107)))
$generated@@109) (let (($generated@@110 ($generated@@77 $generated@@107)))
($generated@@38 $generated@@105 $generated@@106 $generated@@110))))))
 :pattern ( ($generated@@38 $generated@@105 ($generated@@39 $generated@@106) $generated@@107))
))))
(assert (forall (($generated@@113 T@U) ) (!  (and (= ($generated@@111 ($generated@@34 $generated@@113)) $generated@@0) (= ($generated@@112 ($generated@@34 $generated@@113)) $generated@@5))
 :pattern ( ($generated@@34 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (!  (and (= ($generated@@111 ($generated@@33 $generated@@114)) $generated@@1) (= ($generated@@112 ($generated@@33 $generated@@114)) $generated@@5))
 :pattern ( ($generated@@33 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (!  (and (= ($generated@@111 ($generated@@26 $generated@@115)) $generated@@2) (= ($generated@@112 ($generated@@26 $generated@@115)) $generated@@6))
 :pattern ( ($generated@@26 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@75 $generated@@32 $generated@@118 ($generated@@34 $generated@@117))  (or (= $generated@@118 $generated@@43) (= ($generated@@116 $generated@@118) ($generated@@34 $generated@@117))))
 :pattern ( ($generated@@75 $generated@@32 $generated@@118 ($generated@@34 $generated@@117)))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> ($generated@@27 $generated@@121) (= ($generated@@23 $generated@@24 ($generated@@100 $generated@@120) ($generated@@26 $generated@@119) $generated@@121) ($generated@@23 $generated@@32 $generated@@120 ($generated@@33 $generated@@119) $generated@@121)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@100 $generated@@120) ($generated@@26 $generated@@119) $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@75 $generated@@24 $generated@@123 ($generated@@26 $generated@@122)) (or ($generated@@76 $generated@@123) ($generated@@89 $generated@@123)))
 :pattern ( ($generated@@89 $generated@@123) ($generated@@75 $generated@@24 $generated@@123 ($generated@@26 $generated@@122)))
 :pattern ( ($generated@@76 $generated@@123) ($generated@@75 $generated@@24 $generated@@123 ($generated@@26 $generated@@122)))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@87 ($generated@@25 $generated@@124 $generated@@125)) $generated@@4)
 :pattern ( ($generated@@25 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@77 ($generated@@25 $generated@@126 $generated@@127)) $generated@@126)
 :pattern ( ($generated@@25 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@128 ($generated@@25 $generated@@129 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@25 $generated@@129 $generated@@130))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (or ($generated@@74 $generated@@132 $generated@@134) (and (< 1 $generated@@72) (and ($generated@@75 $generated@@24 $generated@@134 ($generated@@26 $generated@@132)) ($generated@@23 $generated@@24 $generated@@134 ($generated@@26 $generated@@132) $generated@@131)))) ($generated@@27 $generated@@131)) ($generated@@23 $generated@@32 ($generated@@38 $generated@@132 $generated@@133 $generated@@134) ($generated@@33 $generated@@132) $generated@@131))
 :pattern ( ($generated@@23 $generated@@32 ($generated@@38 $generated@@132 $generated@@133 $generated@@134) ($generated@@33 $generated@@132) $generated@@131))
))))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@135 ($generated@@34 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@34 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@137 ($generated@@33 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@33 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@26 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@26 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@87 ($generated@@100 $generated@@141)) $generated@@3)
 :pattern ( ($generated@@100 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@78 ($generated@@100 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@100 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@44 $generated@@144 ($generated@@91 $generated@@144 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@91 $generated@@144 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (< ($generated@@145 $generated@@146) ($generated@@145 ($generated@@25 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@25 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (< ($generated@@145 $generated@@149) ($generated@@145 ($generated@@25 $generated@@148 $generated@@149)))
 :pattern ( ($generated@@25 $generated@@148 $generated@@149))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (or ($generated@@74 $generated@@150 $generated@@152) (and (< 1 $generated@@72) ($generated@@75 $generated@@24 $generated@@152 ($generated@@26 $generated@@150)))) ($generated@@75 $generated@@32 ($generated@@38 $generated@@150 $generated@@151 $generated@@152) ($generated@@33 $generated@@150)))
 :pattern ( ($generated@@38 $generated@@150 $generated@@151 $generated@@152))
))))
(assert  (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@153 $generated@@156 $generated@@157 $generated@@158 ($generated@@155 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@161 $generated@@162) $generated@@159)
 :weight 0
)) (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@153 $generated@@163 $generated@@164 $generated@@165 ($generated@@155 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@153 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@153 $generated@@172 $generated@@173 $generated@@174 ($generated@@155 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@153 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@12 ($generated@@153 $generated@@32 $generated@@46 $generated@@8 ($generated@@154 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (or (not (= $generated@@185 $generated@@181)) (not true)) ($generated@@12 ($generated@@44 $generated@@8 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@182 $generated@@185) $generated@@183)))) $generated@@184))
 :pattern ( ($generated@@153 $generated@@32 $generated@@46 $generated@@8 ($generated@@154 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@75 $generated@@24 ($generated@@100 $generated@@188) ($generated@@26 $generated@@187)) ($generated@@75 $generated@@32 $generated@@188 ($generated@@33 $generated@@187)))
 :pattern ( ($generated@@75 $generated@@24 ($generated@@100 $generated@@188) ($generated@@26 $generated@@187)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and ($generated@@27 $generated@@191) (and ($generated@@76 $generated@@189) ($generated@@23 $generated@@24 $generated@@189 ($generated@@26 $generated@@190) $generated@@191))) ($generated@@23 $generated@@32 ($generated@@78 $generated@@189) ($generated@@33 $generated@@190) $generated@@191))
 :pattern ( ($generated@@23 $generated@@32 ($generated@@78 $generated@@189) ($generated@@33 $generated@@190) $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and ($generated@@27 $generated@@194) (and ($generated@@89 $generated@@192) ($generated@@23 $generated@@24 $generated@@192 ($generated@@26 $generated@@193) $generated@@194))) ($generated@@23 $generated@@24 ($generated@@77 $generated@@192) ($generated@@26 $generated@@193) $generated@@194))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@77 $generated@@192) ($generated@@26 $generated@@193) $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and ($generated@@27 $generated@@197) (and ($generated@@89 $generated@@195) ($generated@@23 $generated@@24 $generated@@195 ($generated@@26 $generated@@196) $generated@@197))) ($generated@@23 $generated@@24 ($generated@@128 $generated@@195) ($generated@@26 $generated@@196) $generated@@197))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@128 $generated@@195) ($generated@@26 $generated@@196) $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@25 ($generated@@73 $generated@@24 $generated@@198) ($generated@@73 $generated@@24 $generated@@199)) ($generated@@73 $generated@@24 ($generated@@25 $generated@@198 $generated@@199)))
 :pattern ( ($generated@@25 ($generated@@73 $generated@@24 $generated@@198) ($generated@@73 $generated@@24 $generated@@199)))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@100 ($generated@@73 $generated@@32 $generated@@200)) ($generated@@73 $generated@@24 ($generated@@100 $generated@@200)))
 :pattern ( ($generated@@100 ($generated@@73 $generated@@32 $generated@@200)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@T) ) (! (= ($generated@@91 $generated@@202 ($generated@@73 $generated@@202 $generated@@201)) ($generated@@73 $generated@@47 ($generated@@91 $generated@@202 $generated@@201)))
 :pattern ( ($generated@@91 $generated@@202 ($generated@@73 $generated@@202 $generated@@201)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@213 true))
(let (($generated@@214  (=> (and (and (and (= $generated@@203 ($generated@@25 $generated@@204 $generated@@205)) ($generated@@75 $generated@@24 $generated@@204 ($generated@@26 $generated@@206))) (and ($generated@@75 $generated@@24 $generated@@205 ($generated@@26 $generated@@206)) (= $generated@@207 $generated@@204))) (and (and ($generated@@75 $generated@@24 $generated@@207 ($generated@@26 $generated@@206)) (= $generated@@208 $generated@@207)) (and ($generated@@23 $generated@@24 $generated@@208 ($generated@@26 $generated@@206) $generated@@209) (= (ControlFlow 0 4) (- 0 3))))) (< ($generated@@145 $generated@@208) ($generated@@145 $generated@@203)))))
(let (($generated@@215  (=> (or (not (= $generated@@203 ($generated@@100 $generated@@210))) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@214) (=> (= (ControlFlow 0 6) 5) $generated@@213)))))
(let (($generated@@216 true))
(let (($generated@@217 true))
(let (($generated@@218  (=> (= $generated@@211 ($generated@@154 $generated@@43 $generated@@209 $generated false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@217) (=> (= (ControlFlow 0 7) 2) $generated@@216)) (=> (= (ControlFlow 0 7) 6) $generated@@215)))))
(let (($generated@@219  (=> (and (and (and ($generated@@27 $generated@@209) ($generated@@212 $generated@@209)) ($generated@@75 $generated@@24 $generated@@203 ($generated@@26 $generated@@206))) (and (= 1 $generated@@72) (= (ControlFlow 0 8) 7))) $generated@@218)))
$generated@@219))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
