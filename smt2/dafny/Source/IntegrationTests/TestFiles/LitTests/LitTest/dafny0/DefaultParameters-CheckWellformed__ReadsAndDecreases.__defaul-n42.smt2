(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U Int T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (Int) Int)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (Int T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U Int Int) Bool)
(declare-fun $generated@@32 (T@U T@U Int Int) Int)
(declare-fun $generated@@36 (T@U T@U) Int)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (Int T@U) Bool)
(declare-fun $generated@@40 (T@U Int T@U) Int)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@52 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@T T@T) T@T)
(declare-fun $generated@@60 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (= ($generated@@5 $generated@@27) 3))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@33 T@U) ($generated@@34 Int) ($generated@@35 T@U) ) (!  (=> (or ($generated@@28 ($generated@@25 $generated@@34) ($generated@@26 $generated@@27 $generated@@35)) (and (< 1 $generated@@22) ($generated@@29 $generated@@27 $generated@@35 $generated@@30))) (and (=> (< ($generated@@25 0) ($generated@@25 $generated@@34)) ($generated@@31 ($generated@@26 $generated@@27 $generated@@35) ($generated@@25 (- $generated@@34 1)) ($generated@@25 0))) (= ($generated@@23 ($generated@@24 $generated@@33) ($generated@@25 $generated@@34) ($generated@@26 $generated@@27 $generated@@35)) (ite (<= ($generated@@25 $generated@@34) ($generated@@25 0)) 0 ($generated@@32 ($generated@@24 $generated@@33) ($generated@@26 $generated@@27 $generated@@35) ($generated@@25 (- $generated@@34 1)) ($generated@@25 0))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@24 $generated@@33) ($generated@@25 $generated@@34) ($generated@@26 $generated@@27 $generated@@35)))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (or ($generated@@37 $generated@@42) (and (< 1 $generated@@22) (and (or (not (= $generated@@42 $generated@@38)) (not true)) ($generated@@29 $generated@@27 $generated@@42 $generated@@30)))) (and ($generated@@39 ($generated@@25 2) $generated@@42) (= ($generated@@36 ($generated@@24 $generated@@41) $generated@@42) ($generated@@40 $generated@@41 ($generated@@25 2) $generated@@42))))
 :pattern ( ($generated@@36 ($generated@@24 $generated@@41) $generated@@42))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@43 T@U) ($generated@@44 Int) ($generated@@45 T@U) ) (!  (=> (or ($generated@@39 ($generated@@25 $generated@@44) ($generated@@26 $generated@@27 $generated@@45)) (and (< 1 $generated@@22) ($generated@@29 $generated@@27 $generated@@45 $generated@@30))) (and (=> (< ($generated@@25 0) ($generated@@25 $generated@@44)) (and ($generated@@37 ($generated@@26 $generated@@27 $generated@@45)) ($generated@@31 ($generated@@26 $generated@@27 $generated@@45) ($generated@@25 (- $generated@@44 1)) ($generated@@25 ($generated@@36 ($generated@@24 $generated@@43) ($generated@@26 $generated@@27 $generated@@45)))))) (= ($generated@@40 ($generated@@24 $generated@@43) ($generated@@25 $generated@@44) ($generated@@26 $generated@@27 $generated@@45)) (ite (<= ($generated@@25 $generated@@44) ($generated@@25 0)) 0 ($generated@@32 ($generated@@24 $generated@@43) ($generated@@26 $generated@@27 $generated@@45) ($generated@@25 (- $generated@@44 1)) ($generated@@25 ($generated@@36 ($generated@@24 $generated@@43) ($generated@@26 $generated@@27 $generated@@45))))))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@24 $generated@@43) ($generated@@25 $generated@@44) ($generated@@26 $generated@@27 $generated@@45)))
))))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@29 $generated@@27 $generated@@48 $generated@@46)  (or (= $generated@@48 $generated@@38) (= ($generated@@47 $generated@@48) $generated@@46)))
 :pattern ( ($generated@@29 $generated@@27 $generated@@48 $generated@@46))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@49 T@U) ($generated@@50 Int) ($generated@@51 T@U) ) (!  (=> (or ($generated@@39 ($generated@@25 $generated@@50) $generated@@51) (and (< 1 $generated@@22) ($generated@@29 $generated@@27 $generated@@51 $generated@@30))) (and (=> (< ($generated@@25 0) ($generated@@25 $generated@@50)) (and ($generated@@37 $generated@@51) ($generated@@31 $generated@@51 ($generated@@25 (- $generated@@50 1)) ($generated@@36 ($generated@@24 $generated@@49) $generated@@51)))) (= ($generated@@40 ($generated@@24 $generated@@49) ($generated@@25 $generated@@50) $generated@@51) (ite (<= ($generated@@25 $generated@@50) ($generated@@25 0)) 0 ($generated@@32 ($generated@@24 $generated@@49) $generated@@51 ($generated@@25 (- $generated@@50 1)) ($generated@@36 ($generated@@24 $generated@@49) $generated@@51))))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@24 $generated@@49) ($generated@@25 $generated@@50) $generated@@51))
))))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@52 $generated@@27 $generated@@53 $generated@@30 $generated@@54) ($generated@@52 $generated@@27 $generated@@53 $generated@@46 $generated@@54))
 :pattern ( ($generated@@52 $generated@@27 $generated@@53 $generated@@30 $generated@@54))
 :pattern ( ($generated@@52 $generated@@27 $generated@@53 $generated@@46 $generated@@54))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@56 $generated@@63 $generated@@64 ($generated@@60 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@67) $generated@@65)
 :weight 0
)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (or (= $generated@@72 $generated@@73) (= ($generated@@56 $generated@@68 $generated@@69 ($generated@@60 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@73) ($generated@@56 $generated@@68 $generated@@69 $generated@@71 $generated@@73)))
 :weight 0
))) (= ($generated@@5 $generated@@57) 4)) (= ($generated@@5 $generated@@58) 5)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (= ($generated@@5 ($generated@@59 $generated@@74 $generated@@75)) 6))) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (! (= ($generated@@61 ($generated@@59 $generated@@76 $generated@@77)) $generated@@76)
 :pattern ( ($generated@@59 $generated@@76 $generated@@77))
))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@62 ($generated@@59 $generated@@78 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@59 $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@52 $generated@@27 $generated@@80 $generated@@46 $generated@@81)  (or (= $generated@@80 $generated@@38) ($generated@@10 ($generated@@55 $generated@@6 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@27 ($generated@@59 $generated@@57 $generated@@58) $generated@@81 $generated@@80) $generated@@1)))))
 :pattern ( ($generated@@52 $generated@@27 $generated@@80 $generated@@46 $generated@@81))
)))
(assert (forall (($generated@@82 Int) ) (! (= ($generated@@25 $generated@@82) $generated@@82)
 :pattern ( ($generated@@25 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@26 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@26 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@55 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@55 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@52 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@88 ($generated@@85 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@93 T@U) ($generated@@94 Int) ($generated@@95 T@U) ) (!  (=> (or ($generated@@28 ($generated@@25 $generated@@94) $generated@@95) (and (< 1 $generated@@22) ($generated@@29 $generated@@27 $generated@@95 $generated@@30))) (and (=> (< ($generated@@25 0) ($generated@@25 $generated@@94)) ($generated@@31 $generated@@95 ($generated@@25 (- $generated@@94 1)) ($generated@@25 0))) (= ($generated@@23 ($generated@@24 $generated@@93) ($generated@@25 $generated@@94) $generated@@95) (ite (<= ($generated@@25 $generated@@94) ($generated@@25 0)) 0 ($generated@@32 ($generated@@24 $generated@@93) $generated@@95 ($generated@@25 (- $generated@@94 1)) ($generated@@25 0))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@24 $generated@@93) ($generated@@25 $generated@@94) $generated@@95))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@37 ($generated@@26 $generated@@27 $generated@@97)) (and (< 1 $generated@@22) (and (or (not (= $generated@@97 $generated@@38)) (not true)) ($generated@@29 $generated@@27 $generated@@97 $generated@@30)))) (and ($generated@@39 ($generated@@25 2) ($generated@@26 $generated@@27 $generated@@97)) (= ($generated@@36 ($generated@@24 $generated@@96) ($generated@@26 $generated@@27 $generated@@97)) ($generated@@25 ($generated@@40 ($generated@@24 $generated@@96) ($generated@@25 2) ($generated@@26 $generated@@27 $generated@@97))))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@24 $generated@@96) ($generated@@26 $generated@@27 $generated@@97)))
))))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@29 $generated@@27 $generated@@98 $generated@@30)  (and ($generated@@29 $generated@@27 $generated@@98 $generated@@46) (or (not (= $generated@@98 $generated@@38)) (not true))))
 :pattern ( ($generated@@29 $generated@@27 $generated@@98 $generated@@30))
 :pattern ( ($generated@@29 $generated@@27 $generated@@98 $generated@@46))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 Int) ($generated@@101 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@99) $generated@@100 $generated@@101) ($generated@@23 $generated@@99 $generated@@100 $generated@@101))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@99) $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 Int) ($generated@@104 T@U) ) (! (= ($generated@@40 ($generated@@24 $generated@@102) $generated@@103 $generated@@104) ($generated@@40 $generated@@102 $generated@@103 $generated@@104))
 :pattern ( ($generated@@40 ($generated@@24 $generated@@102) $generated@@103 $generated@@104))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 Int) ($generated@@108 Int) ) (!  (=> (or ($generated@@31 $generated@@106 ($generated@@25 $generated@@107) $generated@@108) (and (< 1 $generated@@22) (and (or (not (= $generated@@106 $generated@@38)) (not true)) ($generated@@29 $generated@@27 $generated@@106 $generated@@30)))) (and (and ($generated@@28 ($generated@@25 $generated@@107) $generated@@106) ($generated@@39 ($generated@@25 $generated@@107) $generated@@106)) (= ($generated@@32 ($generated@@24 $generated@@105) $generated@@106 ($generated@@25 $generated@@107) $generated@@108) (+ ($generated@@23 ($generated@@24 $generated@@105) ($generated@@25 $generated@@107) $generated@@106) ($generated@@40 ($generated@@24 $generated@@105) ($generated@@25 $generated@@107) $generated@@106)))))
 :weight 3
 :pattern ( ($generated@@32 ($generated@@24 $generated@@105) $generated@@106 ($generated@@25 $generated@@107) $generated@@108))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@109 T@U) ($generated@@110 Int) ($generated@@111 T@U) ) (!  (=> (or ($generated@@39 $generated@@110 $generated@@111) (and (< 1 $generated@@22) ($generated@@29 $generated@@27 $generated@@111 $generated@@30))) (and (=> (< ($generated@@25 0) $generated@@110) (and ($generated@@37 $generated@@111) ($generated@@31 $generated@@111 (- $generated@@110 1) ($generated@@36 $generated@@109 $generated@@111)))) (= ($generated@@40 ($generated@@24 $generated@@109) $generated@@110 $generated@@111) (ite (<= $generated@@110 ($generated@@25 0)) 0 ($generated@@32 $generated@@109 $generated@@111 (- $generated@@110 1) ($generated@@36 $generated@@109 $generated@@111))))))
 :pattern ( ($generated@@40 ($generated@@24 $generated@@109) $generated@@110 $generated@@111))
))))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@55 $generated@@113 ($generated@@85 $generated@@113 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@85 $generated@@113 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@36 ($generated@@24 $generated@@114) $generated@@115) ($generated@@36 $generated@@114 $generated@@115))
 :pattern ( ($generated@@36 ($generated@@24 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 Int) ($generated@@119 Int) ) (! (= ($generated@@32 ($generated@@24 $generated@@116) $generated@@117 $generated@@118 $generated@@119) ($generated@@32 $generated@@116 $generated@@117 $generated@@118 $generated@@119))
 :pattern ( ($generated@@32 ($generated@@24 $generated@@116) $generated@@117 $generated@@118 $generated@@119))
)))
(assert  (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@120 $generated@@123 $generated@@124 $generated@@125 ($generated@@122 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@128 $generated@@129) $generated@@126)
 :weight 0
)) (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@120 $generated@@130 $generated@@131 $generated@@132 ($generated@@122 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@120 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@120 $generated@@139 $generated@@140 $generated@@141 ($generated@@122 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@120 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 Bool) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@10 ($generated@@120 $generated@@27 $generated@@57 $generated@@6 ($generated@@121 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))  (=> (and (or (not (= $generated@@152 $generated@@148)) (not true)) ($generated@@10 ($generated@@55 $generated@@6 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@27 ($generated@@59 $generated@@57 $generated@@58) $generated@@149 $generated@@152) $generated@@150)))) $generated@@151))
 :pattern ( ($generated@@120 $generated@@27 $generated@@57 $generated@@6 ($generated@@121 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Int) ($generated@@157 Int) ) (!  (=> (or ($generated@@31 ($generated@@26 $generated@@27 $generated@@155) ($generated@@25 $generated@@156) ($generated@@25 $generated@@157)) (and (< 1 $generated@@22) (and (or (not (= $generated@@155 $generated@@38)) (not true)) ($generated@@29 $generated@@27 $generated@@155 $generated@@30)))) (and (and ($generated@@28 ($generated@@25 $generated@@156) ($generated@@26 $generated@@27 $generated@@155)) ($generated@@39 ($generated@@25 $generated@@156) ($generated@@26 $generated@@27 $generated@@155))) (= ($generated@@32 ($generated@@24 $generated@@154) ($generated@@26 $generated@@27 $generated@@155) ($generated@@25 $generated@@156) ($generated@@25 $generated@@157)) ($generated@@25 (+ ($generated@@23 ($generated@@24 $generated@@154) ($generated@@25 $generated@@156) ($generated@@26 $generated@@27 $generated@@155)) ($generated@@40 ($generated@@24 $generated@@154) ($generated@@25 $generated@@156) ($generated@@26 $generated@@27 $generated@@155)))))))
 :weight 3
 :pattern ( ($generated@@32 ($generated@@24 $generated@@154) ($generated@@26 $generated@@27 $generated@@155) ($generated@@25 $generated@@156) ($generated@@25 $generated@@157)))
))))
(assert (= ($generated@@21 $generated@@30) $generated@@2))
(assert (= ($generated@@158 $generated@@30) $generated@@4))
(assert (= ($generated@@21 $generated@@46) $generated@@3))
(assert (= ($generated@@158 $generated@@46) $generated@@4))
(assert (forall (($generated@@159 Int) ) (! (= ($generated@@85 $generated@@7 ($generated@@11 ($generated@@25 $generated@@159))) ($generated@@26 $generated@@58 ($generated@@85 $generated@@7 ($generated@@11 $generated@@159))))
 :pattern ( ($generated@@85 $generated@@7 ($generated@@11 ($generated@@25 $generated@@159))))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@85 $generated@@161 ($generated@@26 $generated@@161 $generated@@160)) ($generated@@26 $generated@@58 ($generated@@85 $generated@@161 $generated@@160)))
 :pattern ( ($generated@@85 $generated@@161 ($generated@@26 $generated@@161 $generated@@160)))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@162 T@U) ($generated@@163 Int) ($generated@@164 T@U) ) (!  (=> (or ($generated@@28 $generated@@163 $generated@@164) (and (< 1 $generated@@22) ($generated@@29 $generated@@27 $generated@@164 $generated@@30))) (and (=> (< ($generated@@25 0) $generated@@163) ($generated@@31 $generated@@164 (- $generated@@163 1) ($generated@@25 0))) (= ($generated@@23 ($generated@@24 $generated@@162) $generated@@163 $generated@@164) (ite (<= $generated@@163 ($generated@@25 0)) 0 ($generated@@32 $generated@@162 $generated@@164 (- $generated@@163 1) ($generated@@25 0))))))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@162) $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! ($generated@@52 $generated@@7 $generated@@166 $generated $generated@@165)
 :pattern ( ($generated@@52 $generated@@7 $generated@@166 $generated $generated@@165))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Int) ($generated@@170 Int) ) (!  (=> (or ($generated@@31 $generated@@168 $generated@@169 $generated@@170) (and (< 1 $generated@@22) (and (or (not (= $generated@@168 $generated@@38)) (not true)) ($generated@@29 $generated@@27 $generated@@168 $generated@@30)))) (and (and ($generated@@28 $generated@@169 $generated@@168) ($generated@@39 $generated@@169 $generated@@168)) (= ($generated@@32 ($generated@@24 $generated@@167) $generated@@168 $generated@@169 $generated@@170) (+ ($generated@@23 $generated@@167 $generated@@169 $generated@@168) ($generated@@40 $generated@@167 $generated@@169 $generated@@168)))))
 :pattern ( ($generated@@32 ($generated@@24 $generated@@167) $generated@@168 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ) (! ($generated@@29 $generated@@7 $generated@@171 $generated)
 :pattern ( ($generated@@29 $generated@@7 $generated@@171 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181  (=> (< ($generated@@25 0) $generated@@172) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (not (= $generated@@173 $generated@@38)) (not true))) (=> (or (not (= $generated@@173 $generated@@38)) (not true)) (=> ($generated@@88 ($generated@@85 $generated@@27 $generated@@173) $generated@@46 $generated@@174) (=> (and (and (= $generated@@175 (- $generated@@172 1)) ($generated@@52 $generated@@7 ($generated@@11 $generated@@175) $generated $generated@@174)) (and (= $generated@@176 ($generated@@36 ($generated@@24 $generated@@177) $generated@@173)) ($generated@@52 $generated@@7 ($generated@@11 $generated@@176) $generated $generated@@174))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@172) (= $generated@@175 $generated@@172))) (=> (or (<= 0 $generated@@172) (= $generated@@175 $generated@@172)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@175 $generated@@172)))))))))))
(let (($generated@@182 true))
(let (($generated@@183 true))
(let (($generated@@184  (=> (= $generated@@178 ($generated@@121 $generated@@38 $generated@@174 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@183) (=> (= (ControlFlow 0 7) 2) $generated@@182)) (=> (= (ControlFlow 0 7) 4) $generated@@181)))))
(let (($generated@@185  (=> (and (and (and ($generated@@179 $generated@@174) ($generated@@180 $generated@@174)) ($generated@@29 $generated@@27 $generated@@173 $generated@@30)) (and (= 1 $generated@@22) (= (ControlFlow 0 8) 7))) $generated@@184)))
$generated@@185))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
