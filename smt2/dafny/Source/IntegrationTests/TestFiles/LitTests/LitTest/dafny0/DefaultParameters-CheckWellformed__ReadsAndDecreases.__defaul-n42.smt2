(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 (T@T T@T) T@T)
(declare-fun $generated@@55 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@81 (Int) Int)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (T@T T@U) T@U)
(declare-fun $generated@@96 (T@U Int) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@121 (T@U T@U) Bool)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@160 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and (or (not (= $generated@@32 $generated@@28)) (not true)) (= ($generated@@29 $generated@@32) ($generated@@27 $generated@@31))) ($generated@@30 $generated@@10 ($generated@@14 ($generated@@26 $generated@@32)) $generated))
 :pattern ( ($generated@@26 $generated@@32) ($generated@@27 $generated@@31))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and (or (not (= $generated@@36 $generated@@28)) (not true)) (= ($generated@@29 $generated@@36) ($generated@@34 $generated@@35))) ($generated@@30 $generated@@10 ($generated@@14 ($generated@@33 $generated@@36)) $generated))
 :pattern ( ($generated@@33 $generated@@36) ($generated@@34 $generated@@35))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (and (or (not (= $generated@@39 $generated@@28)) (not true)) (= ($generated@@29 $generated@@39) ($generated@@34 $generated@@38))) ($generated@@30 $generated@@10 ($generated@@14 ($generated@@37 $generated@@39)) $generated))
 :pattern ( ($generated@@37 $generated@@39) ($generated@@34 $generated@@38))
)))
(assert (= ($generated@@8 $generated@@41) 3))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@44 ($generated@@42 $generated@@43) $generated@@45) ($generated@@40 $generated@@41 $generated@@44 ($generated@@27 $generated@@43) $generated@@45))
 :pattern ( ($generated@@40 $generated@@41 $generated@@44 ($generated@@42 $generated@@43) $generated@@45))
 :pattern ( ($generated@@40 $generated@@41 $generated@@44 ($generated@@27 $generated@@43) $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@48 ($generated@@46 $generated@@47) $generated@@49) ($generated@@40 $generated@@41 $generated@@48 ($generated@@34 $generated@@47) $generated@@49))
 :pattern ( ($generated@@40 $generated@@41 $generated@@48 ($generated@@46 $generated@@47) $generated@@49))
 :pattern ( ($generated@@40 $generated@@41 $generated@@48 ($generated@@34 $generated@@47) $generated@@49))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@51 $generated@@58 $generated@@59 ($generated@@55 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@62) $generated@@60)
 :weight 0
)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (or (= $generated@@67 $generated@@68) (= ($generated@@51 $generated@@63 $generated@@64 ($generated@@55 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@68) ($generated@@51 $generated@@63 $generated@@64 $generated@@66 $generated@@68)))
 :weight 0
))) (= ($generated@@8 $generated@@52) 4)) (= ($generated@@8 $generated@@53) 5)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (= ($generated@@8 ($generated@@54 $generated@@69 $generated@@70)) 6))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@56 ($generated@@54 $generated@@71 $generated@@72)) $generated@@71)
 :pattern ( ($generated@@54 $generated@@71 $generated@@72))
))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@57 ($generated@@54 $generated@@73 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@54 $generated@@73 $generated@@74))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@76 ($generated@@27 $generated@@75) $generated@@77)  (or (= $generated@@76 $generated@@28) ($generated@@13 ($generated@@50 $generated@@9 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@77 $generated@@76) $generated@@1)))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@76 ($generated@@27 $generated@@75) $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@79 ($generated@@34 $generated@@78) $generated@@80)  (or (= $generated@@79 $generated@@28) ($generated@@13 ($generated@@50 $generated@@9 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@80 $generated@@79) $generated@@1)))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@79 ($generated@@34 $generated@@78) $generated@@80))
)))
(assert (forall (($generated@@82 Int) ) (! (= ($generated@@81 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (and (and (and ($generated@@87 $generated@@90) (and (or (not (= $generated@@91 $generated@@28)) (not true)) (= ($generated@@29 $generated@@91) ($generated@@27 $generated@@89)))) (and (<= 0 $generated@@92) (< $generated@@92 ($generated@@26 $generated@@91)))) ($generated@@13 ($generated@@50 $generated@@9 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@90 $generated@@91) $generated@@1)))) ($generated@@88 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@90 $generated@@91) ($generated@@86 $generated@@92)) $generated@@89 $generated@@90))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@90 $generated@@91) ($generated@@86 $generated@@92)) ($generated@@27 $generated@@89))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@93 $generated@@95 ($generated@@50 $generated@@95 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@50 $generated@@95 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 Int) ) (! (= ($generated@@24 ($generated@@96 $generated@@97 $generated@@98)) (+ ($generated@@24 $generated@@97) 1))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@30 $generated@@41 $generated@@100 ($generated@@42 $generated@@99))  (and ($generated@@30 $generated@@41 $generated@@100 ($generated@@27 $generated@@99)) (or (not (= $generated@@100 $generated@@28)) (not true))))
 :pattern ( ($generated@@30 $generated@@41 $generated@@100 ($generated@@42 $generated@@99)))
 :pattern ( ($generated@@30 $generated@@41 $generated@@100 ($generated@@27 $generated@@99)))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@30 $generated@@41 $generated@@102 ($generated@@46 $generated@@101))  (and ($generated@@30 $generated@@41 $generated@@102 ($generated@@34 $generated@@101)) (or (not (= $generated@@102 $generated@@28)) (not true))))
 :pattern ( ($generated@@30 $generated@@41 $generated@@102 ($generated@@46 $generated@@101)))
 :pattern ( ($generated@@30 $generated@@41 $generated@@102 ($generated@@34 $generated@@101)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@88 ($generated@@93 $generated@@106 $generated@@103) $generated@@104 $generated@@105) ($generated@@40 $generated@@106 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@88 ($generated@@93 $generated@@106 $generated@@103) $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 Int) ($generated@@111 Int) ) (!  (=> (and (and (and ($generated@@87 $generated@@108) (and (or (not (= $generated@@109 $generated@@28)) (not true)) (= ($generated@@29 $generated@@109) ($generated@@34 $generated@@107)))) (and (and (<= 0 $generated@@110) (< $generated@@110 ($generated@@33 $generated@@109))) (and (<= 0 $generated@@111) (< $generated@@111 ($generated@@37 $generated@@109))))) ($generated@@13 ($generated@@50 $generated@@9 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@108 $generated@@109) $generated@@1)))) ($generated@@88 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@108 $generated@@109) ($generated@@96 ($generated@@86 $generated@@110) $generated@@111)) $generated@@107 $generated@@108))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@108 $generated@@109) ($generated@@96 ($generated@@86 $generated@@110) $generated@@111)) ($generated@@34 $generated@@107))
)))
(assert (forall (($generated@@113 T@U) ) (!  (and (= ($generated@@25 ($generated@@27 $generated@@113)) $generated@@2) (= ($generated@@112 ($generated@@27 $generated@@113)) $generated@@6))
 :pattern ( ($generated@@27 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (!  (and (= ($generated@@25 ($generated@@42 $generated@@114)) $generated@@3) (= ($generated@@112 ($generated@@42 $generated@@114)) $generated@@6))
 :pattern ( ($generated@@42 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (!  (and (= ($generated@@25 ($generated@@34 $generated@@115)) $generated@@4) (= ($generated@@112 ($generated@@34 $generated@@115)) $generated@@7))
 :pattern ( ($generated@@34 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (!  (and (= ($generated@@25 ($generated@@46 $generated@@116)) $generated@@5) (= ($generated@@112 ($generated@@46 $generated@@116)) $generated@@7))
 :pattern ( ($generated@@46 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@30 $generated@@41 $generated@@118 ($generated@@27 $generated@@117))  (or (= $generated@@118 $generated@@28) (= ($generated@@29 $generated@@118) ($generated@@27 $generated@@117))))
 :pattern ( ($generated@@30 $generated@@41 $generated@@118 ($generated@@27 $generated@@117)))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@30 $generated@@41 $generated@@120 ($generated@@34 $generated@@119))  (or (= $generated@@120 $generated@@28) (= ($generated@@29 $generated@@120) ($generated@@34 $generated@@119))))
 :pattern ( ($generated@@30 $generated@@41 $generated@@120 ($generated@@34 $generated@@119)))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 Int) ($generated@@126 Int) ) (!  (=> (and (and ($generated@@87 $generated@@123) (and (or (not (= $generated@@124 $generated@@28)) (not true)) (= ($generated@@29 $generated@@124) ($generated@@34 $generated@@122)))) (and (and (<= 0 $generated@@125) (< $generated@@125 ($generated@@33 $generated@@124))) (and (<= 0 $generated@@126) (< $generated@@126 ($generated@@37 $generated@@124))))) ($generated@@121 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@123 $generated@@124) ($generated@@96 ($generated@@86 $generated@@125) $generated@@126)) $generated@@122))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@123 $generated@@124) ($generated@@96 ($generated@@86 $generated@@125) $generated@@126)) ($generated@@34 $generated@@122))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@121 $generated@@127 $generated) (and (= ($generated@@93 $generated@@10 ($generated@@50 $generated@@10 $generated@@127)) $generated@@127) ($generated@@30 $generated@@10 ($generated@@50 $generated@@10 $generated@@127) $generated)))
 :pattern ( ($generated@@121 $generated@@127 $generated))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@121 ($generated@@93 $generated@@130 $generated@@128) $generated@@129) ($generated@@30 $generated@@130 $generated@@128 $generated@@129))
 :pattern ( ($generated@@121 ($generated@@93 $generated@@130 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! (<= 0 ($generated@@26 $generated@@131))
 :pattern ( ($generated@@26 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (! (<= 0 ($generated@@33 $generated@@132))
 :pattern ( ($generated@@33 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (<= 0 ($generated@@37 $generated@@133))
 :pattern ( ($generated@@37 $generated@@133))
)))
(assert (forall (($generated@@134 Int) ) (! (= ($generated@@24 ($generated@@86 $generated@@134)) 1)
 :pattern ( ($generated@@86 $generated@@134))
)))
(assert (forall (($generated@@136 Int) ) (! (= ($generated@@135 ($generated@@86 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@86 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@137 ($generated@@27 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@27 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@42 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@42 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@141 ($generated@@34 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@34 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@143 ($generated@@46 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@46 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@50 $generated@@146 ($generated@@93 $generated@@146 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@93 $generated@@146 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and ($generated@@87 $generated@@148) (and (or (not (= $generated@@149 $generated@@28)) (not true)) (= ($generated@@29 $generated@@149) ($generated@@27 $generated@@147)))) ($generated@@13 ($generated@@50 $generated@@9 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@148 $generated@@149) $generated@@1)))) ($generated@@40 $generated@@10 ($generated@@14 ($generated@@26 $generated@@149)) $generated $generated@@148))
 :pattern ( ($generated@@26 $generated@@149) ($generated@@50 $generated@@9 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@148 $generated@@149) $generated@@1)) ($generated@@27 $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and ($generated@@87 $generated@@151) (and (or (not (= $generated@@152 $generated@@28)) (not true)) (= ($generated@@29 $generated@@152) ($generated@@34 $generated@@150)))) ($generated@@13 ($generated@@50 $generated@@9 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@151 $generated@@152) $generated@@1)))) ($generated@@40 $generated@@10 ($generated@@14 ($generated@@33 $generated@@152)) $generated $generated@@151))
 :pattern ( ($generated@@33 $generated@@152) ($generated@@50 $generated@@9 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@151 $generated@@152) $generated@@1)) ($generated@@34 $generated@@150))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and ($generated@@87 $generated@@154) (and (or (not (= $generated@@155 $generated@@28)) (not true)) (= ($generated@@29 $generated@@155) ($generated@@34 $generated@@153)))) ($generated@@13 ($generated@@50 $generated@@9 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@154 $generated@@155) $generated@@1)))) ($generated@@40 $generated@@10 ($generated@@14 ($generated@@37 $generated@@155)) $generated $generated@@154))
 :pattern ( ($generated@@37 $generated@@155) ($generated@@50 $generated@@9 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@154 $generated@@155) $generated@@1)) ($generated@@34 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Int) ) (!  (=> (and (and ($generated@@87 $generated@@157) (and (or (not (= $generated@@158 $generated@@28)) (not true)) (= ($generated@@29 $generated@@158) ($generated@@27 $generated@@156)))) (and (<= 0 $generated@@159) (< $generated@@159 ($generated@@26 $generated@@158)))) ($generated@@121 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@157 $generated@@158) ($generated@@86 $generated@@159)) $generated@@156))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@157 $generated@@158) ($generated@@86 $generated@@159)) ($generated@@27 $generated@@156))
)))
(assert  (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@160 $generated@@163 $generated@@164 $generated@@165 ($generated@@162 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@168 $generated@@169) $generated@@166)
 :weight 0
)) (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@160 $generated@@170 $generated@@171 $generated@@172 ($generated@@162 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@176 $generated@@173) $generated@@177 $generated@@178) ($generated@@160 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@177 $generated@@178)))
 :weight 0
)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@160 $generated@@179 $generated@@180 $generated@@181 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@160 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@13 ($generated@@160 $generated@@41 $generated@@52 $generated@@9 ($generated@@161 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (or (not (= $generated@@192 $generated@@188)) (not true)) ($generated@@13 ($generated@@50 $generated@@9 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@41 ($generated@@54 $generated@@52 $generated@@53) $generated@@189 $generated@@192) $generated@@190)))) $generated@@191))
 :pattern ( ($generated@@160 $generated@@41 $generated@@52 $generated@@9 ($generated@@161 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 Int) ) (!  (and (= ($generated@@194 ($generated@@96 $generated@@196 $generated@@197)) $generated@@196) (= ($generated@@195 ($generated@@96 $generated@@196 $generated@@197)) $generated@@197))
 :pattern ( ($generated@@96 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@121 $generated@@199 ($generated@@27 $generated@@198)) (and (= ($generated@@93 $generated@@41 ($generated@@50 $generated@@41 $generated@@199)) $generated@@199) ($generated@@30 $generated@@41 ($generated@@50 $generated@@41 $generated@@199) ($generated@@27 $generated@@198))))
 :pattern ( ($generated@@121 $generated@@199 ($generated@@27 $generated@@198)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> ($generated@@121 $generated@@201 ($generated@@42 $generated@@200)) (and (= ($generated@@93 $generated@@41 ($generated@@50 $generated@@41 $generated@@201)) $generated@@201) ($generated@@30 $generated@@41 ($generated@@50 $generated@@41 $generated@@201) ($generated@@42 $generated@@200))))
 :pattern ( ($generated@@121 $generated@@201 ($generated@@42 $generated@@200)))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@121 $generated@@203 ($generated@@34 $generated@@202)) (and (= ($generated@@93 $generated@@41 ($generated@@50 $generated@@41 $generated@@203)) $generated@@203) ($generated@@30 $generated@@41 ($generated@@50 $generated@@41 $generated@@203) ($generated@@34 $generated@@202))))
 :pattern ( ($generated@@121 $generated@@203 ($generated@@34 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> ($generated@@121 $generated@@205 ($generated@@46 $generated@@204)) (and (= ($generated@@93 $generated@@41 ($generated@@50 $generated@@41 $generated@@205)) $generated@@205) ($generated@@30 $generated@@41 ($generated@@50 $generated@@41 $generated@@205) ($generated@@46 $generated@@204))))
 :pattern ( ($generated@@121 $generated@@205 ($generated@@46 $generated@@204)))
)))
(assert (forall (($generated@@206 Int) ) (! (= ($generated@@93 $generated@@10 ($generated@@14 ($generated@@81 $generated@@206))) ($generated@@83 $generated@@53 ($generated@@93 $generated@@10 ($generated@@14 $generated@@206))))
 :pattern ( ($generated@@93 $generated@@10 ($generated@@14 ($generated@@81 $generated@@206))))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@T) ) (! (= ($generated@@93 $generated@@208 ($generated@@83 $generated@@208 $generated@@207)) ($generated@@83 $generated@@53 ($generated@@93 $generated@@208 $generated@@207)))
 :pattern ( ($generated@@93 $generated@@208 ($generated@@83 $generated@@208 $generated@@207)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! ($generated@@40 $generated@@10 $generated@@210 $generated $generated@@209)
 :pattern ( ($generated@@40 $generated@@10 $generated@@210 $generated $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ) (! ($generated@@30 $generated@@10 $generated@@211 $generated)
 :pattern ( ($generated@@30 $generated@@10 $generated@@211 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@212 () Bool)
(declare-fun $generated@@213 () Bool)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () Bool)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Bool)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 (T@U) Bool)
(declare-fun $generated@@221 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@222 true))
(let (($generated@@223 true))
(let (($generated@@224  (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@212) (=> $generated@@212 (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@213) (=> $generated@@213 (and (=> (= (ControlFlow 0 3) 1) $generated@@223) (=> (= (ControlFlow 0 3) 2) $generated@@222))))))))
(let (($generated@@225  (=> (not (and (< 0 ($generated@@33 $generated@@214)) (< 0 ($generated@@37 $generated@@214)))) (=> (and (= $generated@@213 true) (= (ControlFlow 0 10) 3)) $generated@@224))))
(let (($generated@@226  (=> (and (< 0 ($generated@@33 $generated@@214)) (< 0 ($generated@@37 $generated@@214))) (and (=> (= (ControlFlow 0 6) (- 0 9)) (or (not (= $generated@@214 $generated@@28)) (not true))) (=> (or (not (= $generated@@214 $generated@@28)) (not true)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (and (<= 0 ($generated@@81 0)) (< ($generated@@81 0) ($generated@@33 $generated@@214)))) (=> (and (<= 0 ($generated@@81 0)) (< ($generated@@81 0) ($generated@@33 $generated@@214))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 ($generated@@81 0)) (< ($generated@@81 0) ($generated@@37 $generated@@214)))) (=> (and (<= 0 ($generated@@81 0)) (< ($generated@@81 0) ($generated@@37 $generated@@214))) (=> (= $generated@@215 ($generated@@13 ($generated@@160 $generated@@41 $generated@@52 $generated@@9 $generated@@216 $generated@@214 ($generated@@96 ($generated@@86 ($generated@@81 0)) ($generated@@81 0))))) (=> (and (= $generated@@213 $generated@@215) (= (ControlFlow 0 6) 3)) $generated@@224)))))))))))
(let (($generated@@227  (=> (<= ($generated@@33 $generated@@214) 0) (and (=> (= (ControlFlow 0 13) 6) $generated@@226) (=> (= (ControlFlow 0 13) 10) $generated@@225)))))
(let (($generated@@228  (=> (< 0 ($generated@@33 $generated@@214)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (not (= $generated@@214 $generated@@28)) (not true))) (=> (or (not (= $generated@@214 $generated@@28)) (not true)) (and (=> (= (ControlFlow 0 11) 6) $generated@@226) (=> (= (ControlFlow 0 11) 10) $generated@@225)))))))
(let (($generated@@229  (and (=> (= (ControlFlow 0 14) (- 0 15)) (or (not (= $generated@@214 $generated@@28)) (not true))) (=> (or (not (= $generated@@214 $generated@@28)) (not true)) (and (=> (= (ControlFlow 0 14) 11) $generated@@228) (=> (= (ControlFlow 0 14) 13) $generated@@227))))))
(let (($generated@@230  (=> (<= ($generated@@26 $generated@@217) 0) (=> (and (= $generated@@212 true) (= (ControlFlow 0 19) 14)) $generated@@229))))
(let (($generated@@231  (=> (< 0 ($generated@@26 $generated@@217)) (and (=> (= (ControlFlow 0 16) (- 0 18)) (or (not (= $generated@@217 $generated@@28)) (not true))) (=> (or (not (= $generated@@217 $generated@@28)) (not true)) (and (=> (= (ControlFlow 0 16) (- 0 17)) (and (<= 0 ($generated@@81 0)) (< ($generated@@81 0) ($generated@@26 $generated@@217)))) (=> (and (<= 0 ($generated@@81 0)) (< ($generated@@81 0) ($generated@@26 $generated@@217))) (=> (= $generated@@218 ($generated@@13 ($generated@@160 $generated@@41 $generated@@52 $generated@@9 $generated@@216 $generated@@217 ($generated@@86 ($generated@@81 0))))) (=> (and (= $generated@@212 $generated@@218) (= (ControlFlow 0 16) 14)) $generated@@229)))))))))
(let (($generated@@232  (=> (= $generated@@216 ($generated@@161 $generated@@28 $generated@@219 $generated@@1 false)) (and (=> (= (ControlFlow 0 20) (- 0 21)) (or (not (= $generated@@217 $generated@@28)) (not true))) (=> (or (not (= $generated@@217 $generated@@28)) (not true)) (and (=> (= (ControlFlow 0 20) 16) $generated@@231) (=> (= (ControlFlow 0 20) 19) $generated@@230)))))))
(let (($generated@@233  (=> (and ($generated@@87 $generated@@219) ($generated@@220 $generated@@219)) (=> (and (and ($generated@@30 $generated@@41 $generated@@217 ($generated@@42 $generated)) ($generated@@30 $generated@@41 $generated@@214 ($generated@@46 $generated))) (and (= 0 $generated@@221) (= (ControlFlow 0 22) 20))) $generated@@232))))
$generated@@233)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 5))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 4))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
