(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@39 () Int)
(declare-fun $generated@@40 (T@U T@U) Int)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@50 (T@U T@U) Int)
(declare-fun $generated@@60 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@122 (T@U) Int)
(declare-fun $generated@@123 (T@U) Int)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@T T@T) T@T)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@27 $generated@@28) $generated@@4))
(assert (= ($generated@@27 $generated@@29) $generated@@6))
(assert (= ($generated@@10 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@33 $generated@@35) ($generated@@30 $generated@@31 $generated@@28 ($generated@@32 $generated@@34) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@28 ($generated@@32 $generated@@34) $generated@@35))
)))
(assert ($generated@@36 $generated@@31 $generated@@29 $generated@@37))
(assert (forall (($generated@@38 T@U) ) (! ($generated@@36 $generated@@31 $generated@@28 ($generated@@32 $generated@@38))
 :pattern ( ($generated@@36 $generated@@31 $generated@@28 ($generated@@32 $generated@@38)))
)))
(assert  (=> (<= 2 $generated@@39) (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (or ($generated@@43 ($generated@@42 $generated@@31 $generated@@52)) (and (< 2 $generated@@39) ($generated@@36 $generated@@31 $generated@@52 ($generated@@32 $generated@@37)))) (and (=> (not ($generated@@15 ($generated@@42 $generated@@11 ($generated@@14 ($generated@@44 ($generated@@42 $generated@@31 $generated@@52)))))) (let (($generated@@53 ($generated@@42 $generated@@31 ($generated@@45 ($generated@@42 $generated@@31 $generated@@52)))))
(let (($generated@@54 ($generated@@42 $generated@@31 ($generated@@46 $generated@@31 ($generated@@47 ($generated@@42 $generated@@31 $generated@@52))))))
 (and ($generated@@48 $generated@@54) ($generated@@43 $generated@@53))))) (= ($generated@@40 ($generated@@41 $generated@@51) ($generated@@42 $generated@@31 $generated@@52)) (ite ($generated@@44 ($generated@@42 $generated@@31 $generated@@52)) 1 (let (($generated@@55 ($generated@@42 $generated@@31 ($generated@@45 ($generated@@42 $generated@@31 $generated@@52)))))
(let (($generated@@56 ($generated@@42 $generated@@31 ($generated@@46 $generated@@31 ($generated@@47 ($generated@@42 $generated@@31 $generated@@52))))))
($generated@@49 (+ ($generated@@50 ($generated@@41 $generated@@51) $generated@@56) ($generated@@40 ($generated@@41 $generated@@51) $generated@@55)))))))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@41 $generated@@51) ($generated@@42 $generated@@31 $generated@@52)))
))))
(assert (forall (($generated@@57 Int) ) (! (= ($generated@@49 $generated@@57) $generated@@57)
 :pattern ( ($generated@@49 $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@42 $generated@@59 $generated@@58) $generated@@58)
 :pattern ( ($generated@@42 $generated@@59 $generated@@58))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@36 $generated@@31 ($generated@@60 $generated@@63 $generated@@64) ($generated@@32 $generated@@62))  (and ($generated@@61 $generated@@63 $generated@@62) ($generated@@36 $generated@@31 $generated@@64 ($generated@@32 $generated@@62))))
 :pattern ( ($generated@@36 $generated@@31 ($generated@@60 $generated@@63 $generated@@64) ($generated@@32 $generated@@62)))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@44 $generated@@65) (= ($generated@@27 $generated@@65) $generated@@4))
 :pattern ( ($generated@@44 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@66 $generated@@67) (= ($generated@@27 $generated@@67) $generated@@5))
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@68 $generated@@69) (= ($generated@@27 $generated@@69) $generated@@6))
 :pattern ( ($generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@70 $generated@@71) (= ($generated@@27 $generated@@71) $generated@@7))
 :pattern ( ($generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@46 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@46 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@66 $generated@@75) (exists (($generated@@76 T@U) ($generated@@77 T@U) ) (= $generated@@75 ($generated@@60 $generated@@76 $generated@@77))))
 :pattern ( ($generated@@66 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@44 $generated@@78) (= $generated@@78 $generated@@28))
 :pattern ( ($generated@@44 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@68 $generated@@79) (= $generated@@79 $generated@@29))
 :pattern ( ($generated@@68 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@70 $generated@@81) (exists (($generated@@82 T@U) ) (= $generated@@81 ($generated@@80 $generated@@82))))
 :pattern ( ($generated@@70 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@83 ($generated@@72 $generated@@87 $generated@@84) $generated@@85 $generated@@86) ($generated@@30 $generated@@87 $generated@@84 $generated@@85 $generated@@86))
 :pattern ( ($generated@@83 ($generated@@72 $generated@@87 $generated@@84) $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (!  (and (= ($generated@@26 ($generated@@32 $generated@@89)) $generated@@3) (= ($generated@@88 ($generated@@32 $generated@@89)) $generated@@9))
 :pattern ( ($generated@@32 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@61 $generated@@90 $generated@@37) (and (= ($generated@@72 $generated@@31 ($generated@@46 $generated@@31 $generated@@90)) $generated@@90) ($generated@@36 $generated@@31 ($generated@@46 $generated@@31 $generated@@90) $generated@@37)))
 :pattern ( ($generated@@61 $generated@@90 $generated@@37))
)))
(assert  (=> (<= 2 $generated@@39) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (or ($generated@@43 $generated@@92) (and (< 2 $generated@@39) ($generated@@36 $generated@@31 $generated@@92 ($generated@@32 $generated@@37)))) (and (=> (not ($generated@@44 $generated@@92)) (let (($generated@@93 ($generated@@45 $generated@@92)))
(let (($generated@@94 ($generated@@46 $generated@@31 ($generated@@47 $generated@@92))))
 (and ($generated@@48 $generated@@94) ($generated@@43 $generated@@93))))) (= ($generated@@40 ($generated@@41 $generated@@91) $generated@@92) (ite ($generated@@44 $generated@@92) 1 (let (($generated@@95 ($generated@@45 $generated@@92)))
(let (($generated@@96 ($generated@@46 $generated@@31 ($generated@@47 $generated@@92))))
(+ ($generated@@50 $generated@@91 $generated@@96) ($generated@@40 $generated@@91 $generated@@95))))))))
 :pattern ( ($generated@@40 ($generated@@41 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@36 $generated@@31 ($generated@@80 $generated@@97) $generated@@37) ($generated@@36 $generated@@31 $generated@@97 ($generated@@32 $generated@@37)))
 :pattern ( ($generated@@36 $generated@@31 ($generated@@80 $generated@@97) $generated@@37))
)))
(assert  (=> (<= 2 $generated@@39) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (or ($generated@@48 ($generated@@42 $generated@@31 $generated@@100)) (and (< 2 $generated@@39) ($generated@@36 $generated@@31 $generated@@100 $generated@@37))) (and (=> (not ($generated@@15 ($generated@@42 $generated@@11 ($generated@@14 ($generated@@68 ($generated@@42 $generated@@31 $generated@@100)))))) (let (($generated@@101 ($generated@@42 $generated@@31 ($generated@@98 ($generated@@42 $generated@@31 $generated@@100)))))
($generated@@43 $generated@@101))) (= ($generated@@50 ($generated@@41 $generated@@99) ($generated@@42 $generated@@31 $generated@@100)) (ite ($generated@@68 ($generated@@42 $generated@@31 $generated@@100)) 1 (let (($generated@@102 ($generated@@42 $generated@@31 ($generated@@98 ($generated@@42 $generated@@31 $generated@@100)))))
($generated@@49 (+ 1 ($generated@@40 ($generated@@41 $generated@@99) $generated@@102))))))))
 :weight 3
 :pattern ( ($generated@@50 ($generated@@41 $generated@@99) ($generated@@42 $generated@@31 $generated@@100)))
))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@36 $generated@@31 $generated@@104 ($generated@@32 $generated@@103)) (or ($generated@@44 $generated@@104) ($generated@@66 $generated@@104)))
 :pattern ( ($generated@@66 $generated@@104) ($generated@@36 $generated@@31 $generated@@104 ($generated@@32 $generated@@103)))
 :pattern ( ($generated@@44 $generated@@104) ($generated@@36 $generated@@31 $generated@@104 ($generated@@32 $generated@@103)))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@36 $generated@@31 $generated@@105 $generated@@37) (or ($generated@@68 $generated@@105) ($generated@@70 $generated@@105)))
 :pattern ( ($generated@@70 $generated@@105) ($generated@@36 $generated@@31 $generated@@105 $generated@@37))
 :pattern ( ($generated@@68 $generated@@105) ($generated@@36 $generated@@31 $generated@@105 $generated@@37))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@61 $generated@@106 $generated) (and (= ($generated@@72 $generated@@12 ($generated@@46 $generated@@12 $generated@@106)) $generated@@106) ($generated@@36 $generated@@12 ($generated@@46 $generated@@12 $generated@@106) $generated)))
 :pattern ( ($generated@@61 $generated@@106 $generated))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@61 ($generated@@72 $generated@@109 $generated@@107) $generated@@108) ($generated@@36 $generated@@109 $generated@@107 $generated@@108))
 :pattern ( ($generated@@61 ($generated@@72 $generated@@109 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@27 ($generated@@60 $generated@@110 $generated@@111)) $generated@@5)
 :pattern ( ($generated@@60 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@47 ($generated@@60 $generated@@112 $generated@@113)) $generated@@112)
 :pattern ( ($generated@@60 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@45 ($generated@@60 $generated@@114 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@60 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@32 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@32 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@27 ($generated@@80 $generated@@118)) $generated@@7)
 :pattern ( ($generated@@80 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@98 ($generated@@80 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@80 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@46 $generated@@121 ($generated@@72 $generated@@121 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@72 $generated@@121 $generated@@120))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (< ($generated@@122 $generated@@124) ($generated@@123 ($generated@@60 $generated@@124 $generated@@125)))
 :pattern ( ($generated@@60 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (< ($generated@@123 $generated@@127) ($generated@@123 ($generated@@60 $generated@@126 $generated@@127)))
 :pattern ( ($generated@@60 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@50 ($generated@@41 $generated@@128) $generated@@129) ($generated@@50 $generated@@128 $generated@@129))
 :pattern ( ($generated@@50 ($generated@@41 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@40 ($generated@@41 $generated@@130) $generated@@131) ($generated@@40 $generated@@130 $generated@@131))
 :pattern ( ($generated@@40 ($generated@@41 $generated@@130) $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (! (< ($generated@@123 $generated@@132) ($generated@@123 ($generated@@80 $generated@@132)))
 :pattern ( ($generated@@80 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and ($generated@@33 $generated@@135) (and ($generated@@66 $generated@@133) ($generated@@30 $generated@@31 $generated@@133 ($generated@@32 $generated@@134) $generated@@135))) ($generated@@83 ($generated@@47 $generated@@133) $generated@@134 $generated@@135))
 :pattern ( ($generated@@83 ($generated@@47 $generated@@133) $generated@@134 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@136 $generated@@147 $generated@@148 $generated@@149 ($generated@@143 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@152 $generated@@153) $generated@@150)
 :weight 0
)) (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@136 $generated@@154 $generated@@155 $generated@@156 ($generated@@143 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@136 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@136 $generated@@163 $generated@@164 $generated@@165 ($generated@@143 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@136 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (= ($generated@@10 $generated@@137) 4)) (= ($generated@@10 $generated@@138) 5)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@140 $generated@@172 $generated@@173 ($generated@@144 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@174) $generated@@176) $generated@@174)
 :weight 0
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@181 $generated@@182) (= ($generated@@140 $generated@@177 $generated@@178 ($generated@@144 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@179) $generated@@182) ($generated@@140 $generated@@177 $generated@@178 $generated@@180 $generated@@182)))
 :weight 0
))) (= ($generated@@10 $generated@@141) 6)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@10 ($generated@@142 $generated@@183 $generated@@184)) 7))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@145 ($generated@@142 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@142 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@146 ($generated@@142 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@142 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Bool) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@15 ($generated@@136 $generated@@137 $generated@@138 $generated@@11 ($generated@@139 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))  (=> (and (or (not (= $generated@@193 $generated@@189)) (not true)) ($generated@@15 ($generated@@46 $generated@@11 ($generated@@140 $generated@@138 $generated@@141 ($generated@@140 $generated@@137 ($generated@@142 $generated@@138 $generated@@141) $generated@@190 $generated@@193) $generated@@191)))) $generated@@192))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138 $generated@@11 ($generated@@139 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@122 ($generated@@72 $generated@@31 $generated@@195)) ($generated@@123 $generated@@195))
 :pattern ( ($generated@@122 ($generated@@72 $generated@@31 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@61 $generated@@197 ($generated@@32 $generated@@196)) (and (= ($generated@@72 $generated@@31 ($generated@@46 $generated@@31 $generated@@197)) $generated@@197) ($generated@@36 $generated@@31 ($generated@@46 $generated@@31 $generated@@197) ($generated@@32 $generated@@196))))
 :pattern ( ($generated@@61 $generated@@197 ($generated@@32 $generated@@196)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and ($generated@@33 $generated@@200) (and ($generated@@66 $generated@@198) ($generated@@30 $generated@@31 $generated@@198 ($generated@@32 $generated@@199) $generated@@200))) ($generated@@30 $generated@@31 ($generated@@45 $generated@@198) ($generated@@32 $generated@@199) $generated@@200))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@45 $generated@@198) ($generated@@32 $generated@@199) $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and ($generated@@33 $generated@@202) ($generated@@36 $generated@@31 $generated@@201 $generated@@37)) ($generated@@30 $generated@@31 $generated@@201 $generated@@37 $generated@@202))
 :pattern ( ($generated@@30 $generated@@31 $generated@@201 $generated@@37 $generated@@202))
)))
(assert (= ($generated@@26 $generated@@37) $generated@@2))
(assert (= ($generated@@88 $generated@@37) $generated@@8))
(assert (= $generated@@28 ($generated@@42 $generated@@31 $generated@@28)))
(assert (= $generated@@29 ($generated@@42 $generated@@31 $generated@@29)))
(assert  (=> (<= 2 $generated@@39) (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (or ($generated@@48 $generated@@204) (and (< 2 $generated@@39) ($generated@@36 $generated@@31 $generated@@204 $generated@@37))) (and (=> (not ($generated@@68 $generated@@204)) (let (($generated@@205 ($generated@@98 $generated@@204)))
($generated@@43 $generated@@205))) (= ($generated@@50 ($generated@@41 $generated@@203) $generated@@204) (ite ($generated@@68 $generated@@204) 1 (let (($generated@@206 ($generated@@98 $generated@@204)))
(+ 1 ($generated@@40 $generated@@203 $generated@@206)))))))
 :pattern ( ($generated@@50 ($generated@@41 $generated@@203) $generated@@204))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@60 ($generated@@42 $generated@@141 $generated@@207) ($generated@@42 $generated@@31 $generated@@208)) ($generated@@42 $generated@@31 ($generated@@60 $generated@@207 $generated@@208)))
 :pattern ( ($generated@@60 ($generated@@42 $generated@@141 $generated@@207) ($generated@@42 $generated@@31 $generated@@208)))
)))
(assert (forall (($generated@@209 Int) ) (! (= ($generated@@72 $generated@@12 ($generated@@16 ($generated@@49 $generated@@209))) ($generated@@42 $generated@@141 ($generated@@72 $generated@@12 ($generated@@16 $generated@@209))))
 :pattern ( ($generated@@72 $generated@@12 ($generated@@16 ($generated@@49 $generated@@209))))
)))
(assert (forall (($generated@@210 T@U) ) (! (= ($generated@@80 ($generated@@42 $generated@@31 $generated@@210)) ($generated@@42 $generated@@31 ($generated@@80 $generated@@210)))
 :pattern ( ($generated@@80 ($generated@@42 $generated@@31 $generated@@210)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@T) ) (! (= ($generated@@72 $generated@@212 ($generated@@42 $generated@@212 $generated@@211)) ($generated@@42 $generated@@141 ($generated@@72 $generated@@212 $generated@@211)))
 :pattern ( ($generated@@72 $generated@@212 ($generated@@42 $generated@@212 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and ($generated@@33 $generated@@214) (and ($generated@@70 $generated@@213) ($generated@@30 $generated@@31 $generated@@213 $generated@@37 $generated@@214))) ($generated@@30 $generated@@31 ($generated@@98 $generated@@213) ($generated@@32 $generated@@37) $generated@@214))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@98 $generated@@213) ($generated@@32 $generated@@37) $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! ($generated@@30 $generated@@12 $generated@@216 $generated $generated@@215)
 :pattern ( ($generated@@30 $generated@@12 $generated@@216 $generated $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> ($generated@@33 $generated@@220) (= ($generated@@30 $generated@@31 ($generated@@60 $generated@@218 $generated@@219) ($generated@@32 $generated@@217) $generated@@220)  (and ($generated@@83 $generated@@218 $generated@@217 $generated@@220) ($generated@@30 $generated@@31 $generated@@219 ($generated@@32 $generated@@217) $generated@@220))))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@60 $generated@@218 $generated@@219) ($generated@@32 $generated@@217) $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (! ($generated@@36 $generated@@12 $generated@@221 $generated)
 :pattern ( ($generated@@36 $generated@@12 $generated@@221 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@230 true))
(let (($generated@@231  (=> (= $generated@@222 ($generated@@80 $generated@@223)) (=> (and ($generated@@36 $generated@@31 $generated@@223 ($generated@@32 $generated@@37)) (= $generated@@224 $generated@@223)) (=> (and (and ($generated@@36 $generated@@31 $generated@@224 ($generated@@32 $generated@@37)) (= $generated@@225 $generated@@224)) (and ($generated@@30 $generated@@31 $generated@@225 ($generated@@32 $generated@@37) $generated@@226) (= (ControlFlow 0 4) (- 0 3)))) (< ($generated@@123 $generated@@225) ($generated@@123 $generated@@222)))))))
(let (($generated@@232  (=> (or (not (= $generated@@222 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@231) (=> (= (ControlFlow 0 6) 5) $generated@@230)))))
(let (($generated@@233 true))
(let (($generated@@234 true))
(let (($generated@@235  (=> (= $generated@@227 ($generated@@139 $generated@@228 $generated@@226 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@234) (=> (= (ControlFlow 0 7) 2) $generated@@233)) (=> (= (ControlFlow 0 7) 6) $generated@@232)))))
(let (($generated@@236  (=> (and (and (and ($generated@@33 $generated@@226) ($generated@@229 $generated@@226)) ($generated@@36 $generated@@31 $generated@@222 $generated@@37)) (and (= 2 $generated@@39) (= (ControlFlow 0 8) 7))) $generated@@235)))
$generated@@236))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
