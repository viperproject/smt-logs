(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () Int)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T T@T) T@T)
(declare-fun $generated@@51 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@112 (T@U) Bool)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@137 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@9 $generated@@32) 3))
(assert  (=> (< 0 $generated@@26) (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and (or (not (= $generated@@36 $generated@@28)) (not true)) (= ($generated@@29 $generated@@36) ($generated@@30 $generated@@35))) ($generated@@31 $generated@@32 ($generated@@27 $generated@@35 $generated@@36) ($generated@@33 $generated@@34)))
 :pattern ( ($generated@@27 $generated@@35 $generated@@36))
))))
(assert (= ($generated@@9 $generated@@38) 4))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@41 ($generated@@39 $generated@@40) $generated@@42) ($generated@@37 $generated@@38 $generated@@41 ($generated@@30 $generated@@40) $generated@@42))
 :pattern ( ($generated@@37 $generated@@38 $generated@@41 ($generated@@39 $generated@@40) $generated@@42))
 :pattern ( ($generated@@37 $generated@@38 $generated@@41 ($generated@@30 $generated@@40) $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@44 $generated@@34 $generated@@45) ($generated@@37 $generated@@38 $generated@@44 $generated@@43 $generated@@45))
 :pattern ( ($generated@@37 $generated@@38 $generated@@44 $generated@@34 $generated@@45))
 :pattern ( ($generated@@37 $generated@@38 $generated@@44 $generated@@43 $generated@@45))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@47 $generated@@54 $generated@@55 ($generated@@51 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@58) $generated@@56)
 :weight 0
)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (or (= $generated@@63 $generated@@64) (= ($generated@@47 $generated@@59 $generated@@60 ($generated@@51 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@64) ($generated@@47 $generated@@59 $generated@@60 $generated@@62 $generated@@64)))
 :weight 0
))) (= ($generated@@9 $generated@@48) 5)) (= ($generated@@9 $generated@@49) 6)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (= ($generated@@9 ($generated@@50 $generated@@65 $generated@@66)) 7))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@52 ($generated@@50 $generated@@67 $generated@@68)) $generated@@67)
 :pattern ( ($generated@@50 $generated@@67 $generated@@68))
))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@53 ($generated@@50 $generated@@69 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@50 $generated@@69 $generated@@70))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@72 ($generated@@30 $generated@@71) $generated@@73)  (or (= $generated@@72 $generated@@28) ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@73 $generated@@72) $generated@@2)))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@72 ($generated@@30 $generated@@71) $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@74 $generated@@43 $generated@@75)  (or (= $generated@@74 $generated@@28) ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@75 $generated@@74) $generated@@2)))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@74 $generated@@43 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@76 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@77 $generated@@79) $generated@@2))) ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@78 $generated@@79) $generated@@2))))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@78 $generated@@79) $generated@@2))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@46 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@46 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@85 ($generated@@33 $generated@@86)) (forall (($generated@@87 T@U) ) (!  (=> ($generated@@83 $generated@@85 $generated@@87) ($generated@@84 $generated@@87 $generated@@86))
 :pattern ( ($generated@@83 $generated@@85 $generated@@87))
)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@85 ($generated@@33 $generated@@86)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@31 $generated@@38 $generated@@89 ($generated@@39 $generated@@88))  (and ($generated@@31 $generated@@38 $generated@@89 ($generated@@30 $generated@@88)) (or (not (= $generated@@89 $generated@@28)) (not true))))
 :pattern ( ($generated@@31 $generated@@38 $generated@@89 ($generated@@39 $generated@@88)))
 :pattern ( ($generated@@31 $generated@@38 $generated@@89 ($generated@@30 $generated@@88)))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@90 ($generated@@80 $generated@@94 $generated@@91) $generated@@92 $generated@@93) ($generated@@37 $generated@@94 $generated@@91 $generated@@92 $generated@@93))
 :pattern ( ($generated@@90 ($generated@@80 $generated@@94 $generated@@91) $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@76 $generated@@95 $generated@@96) (=> ($generated@@90 $generated@@97 $generated@@98 $generated@@95) ($generated@@90 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@76 $generated@@95 $generated@@96) ($generated@@90 $generated@@97 $generated@@98 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (!  (=> ($generated@@76 $generated@@99 $generated@@100) (=> ($generated@@37 $generated@@103 $generated@@101 $generated@@102 $generated@@99) ($generated@@37 $generated@@103 $generated@@101 $generated@@102 $generated@@100)))
 :pattern ( ($generated@@76 $generated@@99 $generated@@100) ($generated@@37 $generated@@103 $generated@@101 $generated@@102 $generated@@99))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@25 ($generated@@39 $generated@@105)) $generated@@5) (= ($generated@@104 ($generated@@39 $generated@@105)) $generated@@8))
 :pattern ( ($generated@@39 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (!  (and (= ($generated@@25 ($generated@@30 $generated@@106)) $generated@@6) (= ($generated@@104 ($generated@@30 $generated@@106)) $generated@@8))
 :pattern ( ($generated@@30 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@84 $generated@@107 $generated@@43) (and (= ($generated@@80 $generated@@38 ($generated@@46 $generated@@38 $generated@@107)) $generated@@107) ($generated@@31 $generated@@38 ($generated@@46 $generated@@38 $generated@@107) $generated@@43)))
 :pattern ( ($generated@@84 $generated@@107 $generated@@43))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@84 $generated@@108 $generated@@34) (and (= ($generated@@80 $generated@@38 ($generated@@46 $generated@@38 $generated@@108)) $generated@@108) ($generated@@31 $generated@@38 ($generated@@46 $generated@@38 $generated@@108) $generated@@34)))
 :pattern ( ($generated@@84 $generated@@108 $generated@@34))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@31 $generated@@38 $generated@@110 ($generated@@30 $generated@@109))  (or (= $generated@@110 $generated@@28) (= ($generated@@29 $generated@@110) ($generated@@30 $generated@@109))))
 :pattern ( ($generated@@31 $generated@@38 $generated@@110 ($generated@@30 $generated@@109)))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@31 $generated@@38 $generated@@111 $generated@@34)  (and ($generated@@31 $generated@@38 $generated@@111 $generated@@43) (or (not (= $generated@@111 $generated@@28)) (not true))))
 :pattern ( ($generated@@31 $generated@@38 $generated@@111 $generated@@34))
 :pattern ( ($generated@@31 $generated@@38 $generated@@111 $generated@@43))
)))
(assert  (=> (< 0 $generated@@26) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and (and ($generated@@112 $generated@@114) (and (or (not (= $generated@@115 $generated@@28)) (not true)) (= ($generated@@29 $generated@@115) ($generated@@30 $generated@@113)))) ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@114 $generated@@115) $generated@@2)))) ($generated@@37 $generated@@32 ($generated@@27 $generated@@113 $generated@@115) ($generated@@33 $generated@@34) $generated@@114))
 :pattern ( ($generated@@27 $generated@@113 $generated@@115) ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@114 $generated@@115) $generated@@2)))
))))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or (not (= $generated@@116 $generated@@118)) (not true)) (=> (and ($generated@@76 $generated@@116 $generated@@117) ($generated@@76 $generated@@117 $generated@@118)) ($generated@@76 $generated@@116 $generated@@118)))
 :pattern ( ($generated@@76 $generated@@116 $generated@@117) ($generated@@76 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@84 $generated@@119 $generated) (and (= ($generated@@80 $generated@@11 ($generated@@46 $generated@@11 $generated@@119)) $generated@@119) ($generated@@31 $generated@@11 ($generated@@46 $generated@@11 $generated@@119) $generated)))
 :pattern ( ($generated@@84 $generated@@119 $generated))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@122 $generated@@120) $generated@@121) ($generated@@31 $generated@@122 $generated@@120 $generated@@121))
 :pattern ( ($generated@@84 ($generated@@80 $generated@@122 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@37 $generated@@32 $generated@@123 ($generated@@33 $generated@@124) $generated@@125) (forall (($generated@@126 T@U) ) (!  (=> ($generated@@83 $generated@@123 $generated@@126) ($generated@@90 $generated@@126 $generated@@124 $generated@@125))
 :pattern ( ($generated@@83 $generated@@123 $generated@@126))
)))
 :pattern ( ($generated@@37 $generated@@32 $generated@@123 ($generated@@33 $generated@@124) $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ) (! ($generated@@31 $generated@@38 $generated@@127 $generated@@43)
 :pattern ( ($generated@@31 $generated@@38 $generated@@127 $generated@@43))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@33 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@33 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@25 ($generated@@33 $generated@@130)) $generated@@1)
 :pattern ( ($generated@@33 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@39 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@39 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@133 ($generated@@30 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@30 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@46 $generated@@136 ($generated@@80 $generated@@136 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@80 $generated@@136 $generated@@135))
)))
(assert  (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@137 $generated@@140 $generated@@141 $generated@@142 ($generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@145 $generated@@146) $generated@@143)
 :weight 0
)) (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@137 $generated@@147 $generated@@148 $generated@@149 ($generated@@139 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@137 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@137 $generated@@156 $generated@@157 $generated@@158 ($generated@@139 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@137 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@14 ($generated@@137 $generated@@38 $generated@@48 $generated@@10 ($generated@@138 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (or (not (= $generated@@169 $generated@@165)) (not true)) ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@166 $generated@@169) $generated@@167)))) $generated@@168))
 :pattern ( ($generated@@137 $generated@@38 $generated@@48 $generated@@10 ($generated@@138 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@84 $generated@@171 ($generated@@33 $generated@@172)) (and (= ($generated@@80 $generated@@32 ($generated@@46 $generated@@32 $generated@@171)) $generated@@171) ($generated@@31 $generated@@32 ($generated@@46 $generated@@32 $generated@@171) ($generated@@33 $generated@@172))))
 :pattern ( ($generated@@84 $generated@@171 ($generated@@33 $generated@@172)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> ($generated@@84 $generated@@174 ($generated@@39 $generated@@173)) (and (= ($generated@@80 $generated@@38 ($generated@@46 $generated@@38 $generated@@174)) $generated@@174) ($generated@@31 $generated@@38 ($generated@@46 $generated@@38 $generated@@174) ($generated@@39 $generated@@173))))
 :pattern ( ($generated@@84 $generated@@174 ($generated@@39 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@84 $generated@@176 ($generated@@30 $generated@@175)) (and (= ($generated@@80 $generated@@38 ($generated@@46 $generated@@38 $generated@@176)) $generated@@176) ($generated@@31 $generated@@38 ($generated@@46 $generated@@38 $generated@@176) ($generated@@30 $generated@@175))))
 :pattern ( ($generated@@84 $generated@@176 ($generated@@30 $generated@@175)))
)))
(assert (= ($generated@@25 $generated@@43) $generated@@3))
(assert (= ($generated@@104 $generated@@43) $generated@@7))
(assert (= ($generated@@25 $generated@@34) $generated@@4))
(assert (= ($generated@@104 $generated@@34) $generated@@7))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! ($generated@@37 $generated@@11 $generated@@178 $generated $generated@@177)
 :pattern ( ($generated@@37 $generated@@11 $generated@@178 $generated $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! ($generated@@31 $generated@@11 $generated@@179 $generated)
 :pattern ( ($generated@@31 $generated@@11 $generated@@179 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Bool)
(declare-fun $generated@@188 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@189  (=> (= $generated@@180 ($generated@@138 $generated@@28 $generated@@181 $generated@@2 false)) (=> (and (or (not (= $generated@@182 $generated@@28)) (not true)) (and ($generated@@31 $generated@@38 $generated@@182 ($generated@@39 $generated@@183)) ($generated@@37 $generated@@38 $generated@@182 ($generated@@39 $generated@@183) $generated@@181))) (=> (and (and ($generated@@112 $generated@@184) ($generated@@185 $generated@@184)) (and (or (not (= $generated@@186 $generated@@28)) (not true)) (and ($generated@@31 $generated@@38 $generated@@186 ($generated@@39 $generated)) ($generated@@37 $generated@@38 $generated@@186 ($generated@@39 $generated) $generated@@184)))) (=> (and (and (and (forall (($generated@@190 T@U) ) (!  (=> ($generated@@83 ($generated@@27 $generated $generated@@186) ($generated@@80 $generated@@38 $generated@@190)) (or (not (= $generated@@190 $generated@@28)) (not true)))
 :pattern (  (or (not (= $generated@@190 $generated@@28)) (not true)))
)) (forall (($generated@@191 T@U) ) (!  (=> ($generated@@83 ($generated@@27 $generated $generated@@186) ($generated@@80 $generated@@38 $generated@@191)) (not ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@181 $generated@@191) $generated@@2)))))
 :pattern ( ($generated@@83 ($generated@@27 $generated $generated@@186) ($generated@@80 $generated@@38 $generated@@191)))
))) (not ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@181 $generated@@186) $generated@@2))))) (and (forall (($generated@@192 T@U) ) (!  (=> (and (or (not (= $generated@@192 $generated@@28)) (not true)) ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@181 $generated@@192) $generated@@2)))) (= ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@184 $generated@@192) ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@181 $generated@@192)))
 :pattern ( ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@184 $generated@@192))
)) ($generated@@76 $generated@@181 $generated@@184))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@186 $generated@@28)) (not true))) (=> (or (not (= $generated@@186 $generated@@28)) (not true)) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@193 T@U) ($generated@@194 T@U) )  (=> (and (and (or (not (= $generated@@193 $generated@@28)) (not true)) ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@38 ($generated@@50 $generated@@48 $generated@@49) $generated@@184 $generated@@193) $generated@@2)))) ($generated@@83 ($generated@@27 $generated $generated@@186) ($generated@@80 $generated@@38 $generated@@193))) ($generated@@14 ($generated@@137 $generated@@38 $generated@@48 $generated@@10 $generated@@180 $generated@@193 $generated@@194))))))))))))))
(let (($generated@@195  (=> (and ($generated@@112 $generated@@181) ($generated@@185 $generated@@181)) (=> (and (and (=> $generated@@187 (and ($generated@@31 $generated@@38 $generated@@188 ($generated@@39 $generated)) ($generated@@37 $generated@@38 $generated@@188 ($generated@@39 $generated) $generated@@181))) true) (and (= 2 $generated@@26) (= (ControlFlow 0 5) 2))) $generated@@189))))
$generated@@195)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
