(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (Int) T@U)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@116 (T@U) Int)
(declare-fun $generated@@117 (T@U) Bool)
(declare-fun $generated@@131 (T@U) Int)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@146 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@148 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert  (=> (< 0 $generated@@23) (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@30) ($generated@@28 $generated@@31 $generated@@26)) ($generated@@25 $generated@@31 $generated@@26 $generated@@30)) ($generated@@29 $generated@@7 ($generated@@11 ($generated@@24 $generated@@31)) $generated $generated@@30))
 :pattern ( ($generated@@24 $generated@@31) ($generated@@25 $generated@@31 $generated@@26 $generated@@30))
))))
(assert  (=> (< 0 $generated@@23) (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@33) ($generated@@28 $generated@@34 $generated@@26)) ($generated@@25 $generated@@34 $generated@@26 $generated@@33)) ($generated@@29 $generated@@7 ($generated@@11 ($generated@@32 $generated@@34)) $generated $generated@@33))
 :pattern ( ($generated@@32 $generated@@34) ($generated@@25 $generated@@34 $generated@@26 $generated@@33))
))))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (and (or (not (= $generated@@41 $generated@@37)) (not true)) (= ($generated@@38 $generated@@41) ($generated@@36 $generated@@40))) ($generated@@39 $generated@@7 ($generated@@11 ($generated@@35 $generated@@41)) $generated))
 :pattern ( ($generated@@35 $generated@@41) ($generated@@36 $generated@@40))
)))
(assert (= ($generated@@5 $generated@@42) 3))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@29 $generated@@42 $generated@@45 ($generated@@43 $generated@@44) $generated@@46) ($generated@@29 $generated@@42 $generated@@45 ($generated@@36 $generated@@44) $generated@@46))
 :pattern ( ($generated@@29 $generated@@42 $generated@@45 ($generated@@43 $generated@@44) $generated@@46))
 :pattern ( ($generated@@29 $generated@@42 $generated@@45 ($generated@@36 $generated@@44) $generated@@46))
)))
(assert ($generated@@47 $generated@@26))
(assert  (and (and (and (and (and (and (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@49 $generated@@56 $generated@@57 ($generated@@53 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@60) $generated@@58)
 :weight 0
)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (= $generated@@65 $generated@@66) (= ($generated@@49 $generated@@61 $generated@@62 ($generated@@53 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@66) ($generated@@49 $generated@@61 $generated@@62 $generated@@64 $generated@@66)))
 :weight 0
))) (= ($generated@@5 $generated@@50) 4)) (= ($generated@@5 $generated@@51) 5)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (= ($generated@@5 ($generated@@52 $generated@@67 $generated@@68)) 6))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@54 ($generated@@52 $generated@@69 $generated@@70)) $generated@@69)
 :pattern ( ($generated@@52 $generated@@69 $generated@@70))
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@52 $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@29 $generated@@42 $generated@@74 ($generated@@36 $generated@@73) $generated@@75)  (or (= $generated@@74 $generated@@37) ($generated@@10 ($generated@@48 $generated@@6 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@75 $generated@@74) $generated@@1)))))
 :pattern ( ($generated@@29 $generated@@42 $generated@@74 ($generated@@36 $generated@@73) $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@76 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@10 ($generated@@48 $generated@@6 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@77 $generated@@79) $generated@@1))) ($generated@@10 ($generated@@48 $generated@@6 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@78 $generated@@79) $generated@@1))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@78 $generated@@79) $generated@@1))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@80 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Int) ) (!  (=> (and (and (and ($generated@@27 $generated@@87) (and (or (not (= $generated@@88 $generated@@37)) (not true)) (= ($generated@@38 $generated@@88) ($generated@@36 $generated@@86)))) (and (<= 0 $generated@@89) (< $generated@@89 ($generated@@35 $generated@@88)))) ($generated@@10 ($generated@@48 $generated@@6 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@87 $generated@@88) $generated@@1)))) ($generated@@25 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@87 $generated@@88) ($generated@@85 $generated@@89)) $generated@@86 $generated@@87))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@87 $generated@@88) ($generated@@85 $generated@@89)) ($generated@@36 $generated@@86))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 ($generated@@48 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@48 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@32 $generated@@93) ($generated@@80 25))
 :pattern ( ($generated@@32 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@39 $generated@@42 $generated@@95 ($generated@@43 $generated@@94))  (and ($generated@@39 $generated@@42 $generated@@95 ($generated@@36 $generated@@94)) (or (not (= $generated@@95 $generated@@37)) (not true))))
 :pattern ( ($generated@@39 $generated@@42 $generated@@95 ($generated@@43 $generated@@94)))
 :pattern ( ($generated@@39 $generated@@42 $generated@@95 ($generated@@36 $generated@@94)))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@25 ($generated@@90 $generated@@99 $generated@@96) $generated@@97 $generated@@98) ($generated@@29 $generated@@99 $generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@25 ($generated@@90 $generated@@99 $generated@@96) $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@76 $generated@@100 $generated@@101) (=> ($generated@@25 $generated@@102 $generated@@103 $generated@@100) ($generated@@25 $generated@@102 $generated@@103 $generated@@101)))
 :pattern ( ($generated@@76 $generated@@100 $generated@@101) ($generated@@25 $generated@@102 $generated@@103 $generated@@100))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (!  (=> ($generated@@76 $generated@@104 $generated@@105) (=> ($generated@@29 $generated@@108 $generated@@106 $generated@@107 $generated@@104) ($generated@@29 $generated@@108 $generated@@106 $generated@@107 $generated@@105)))
 :pattern ( ($generated@@76 $generated@@104 $generated@@105) ($generated@@29 $generated@@108 $generated@@106 $generated@@107 $generated@@104))
)))
(assert (forall (($generated@@110 T@U) ) (!  (and (= ($generated@@22 ($generated@@36 $generated@@110)) $generated@@2) (= ($generated@@109 ($generated@@36 $generated@@110)) $generated@@4))
 :pattern ( ($generated@@36 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (!  (and (= ($generated@@22 ($generated@@43 $generated@@111)) $generated@@3) (= ($generated@@109 ($generated@@43 $generated@@111)) $generated@@4))
 :pattern ( ($generated@@43 $generated@@111))
)))
(assert  (=> (< 0 $generated@@23) (forall (($generated@@112 T@U) ) (!  (=> ($generated@@28 $generated@@112 $generated@@26) ($generated@@39 $generated@@7 ($generated@@11 ($generated@@24 $generated@@112)) $generated))
 :pattern ( ($generated@@24 $generated@@112))
))))
(assert  (=> (< 0 $generated@@23) (forall (($generated@@113 T@U) ) (!  (=> ($generated@@28 $generated@@113 $generated@@26) ($generated@@39 $generated@@7 ($generated@@11 ($generated@@32 $generated@@113)) $generated))
 :pattern ( ($generated@@32 $generated@@113))
))))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@39 $generated@@42 $generated@@115 ($generated@@36 $generated@@114))  (or (= $generated@@115 $generated@@37) (= ($generated@@38 $generated@@115) ($generated@@36 $generated@@114))))
 :pattern ( ($generated@@39 $generated@@42 $generated@@115 ($generated@@36 $generated@@114)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@118 T@U) ) (!  (=> (or ($generated@@117 $generated@@118) (and (< 1 $generated@@23) ($generated@@28 $generated@@118 $generated@@26))) (= ($generated@@116 $generated@@118) ($generated@@32 $generated@@118)))
 :pattern ( ($generated@@116 $generated@@118))
))))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or (not (= $generated@@119 $generated@@121)) (not true)) (=> (and ($generated@@76 $generated@@119 $generated@@120) ($generated@@76 $generated@@120 $generated@@121)) ($generated@@76 $generated@@119 $generated@@121)))
 :pattern ( ($generated@@76 $generated@@119 $generated@@120) ($generated@@76 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@28 $generated@@122 $generated) (and (= ($generated@@90 $generated@@7 ($generated@@48 $generated@@7 $generated@@122)) $generated@@122) ($generated@@39 $generated@@7 ($generated@@48 $generated@@7 $generated@@122) $generated)))
 :pattern ( ($generated@@28 $generated@@122 $generated))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@28 ($generated@@90 $generated@@125 $generated@@123) $generated@@124) ($generated@@39 $generated@@125 $generated@@123 $generated@@124))
 :pattern ( ($generated@@28 ($generated@@90 $generated@@125 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (<= 0 ($generated@@35 $generated@@126))
 :pattern ( ($generated@@35 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@47 $generated@@127) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@28 $generated@@129 $generated@@127) ($generated@@25 $generated@@129 $generated@@127 $generated@@128))
 :pattern ( ($generated@@25 $generated@@129 $generated@@127 $generated@@128))
)))
 :pattern ( ($generated@@47 $generated@@127))
)))
(assert (forall (($generated@@130 Int) ) (! (= ($generated@@21 ($generated@@85 $generated@@130)) 1)
 :pattern ( ($generated@@85 $generated@@130))
)))
(assert (forall (($generated@@132 Int) ) (! (= ($generated@@131 ($generated@@85 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@85 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@133 ($generated@@36 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@36 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@135 ($generated@@43 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@43 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@48 $generated@@138 ($generated@@90 $generated@@138 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@90 $generated@@138 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@140) (and (or (not (= $generated@@141 $generated@@37)) (not true)) (= ($generated@@38 $generated@@141) ($generated@@36 $generated@@139)))) ($generated@@10 ($generated@@48 $generated@@6 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@140 $generated@@141) $generated@@1)))) ($generated@@29 $generated@@7 ($generated@@11 ($generated@@35 $generated@@141)) $generated $generated@@140))
 :pattern ( ($generated@@35 $generated@@141) ($generated@@48 $generated@@6 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@140 $generated@@141) $generated@@1)) ($generated@@36 $generated@@139))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Int) ) (!  (=> (and (and ($generated@@27 $generated@@143) (and (or (not (= $generated@@144 $generated@@37)) (not true)) (= ($generated@@38 $generated@@144) ($generated@@36 $generated@@142)))) (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@35 $generated@@144)))) ($generated@@28 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@143 $generated@@144) ($generated@@85 $generated@@145)) $generated@@142))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@143 $generated@@144) ($generated@@85 $generated@@145)) ($generated@@36 $generated@@142))
)))
(assert  (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@146 $generated@@149 $generated@@150 $generated@@151 ($generated@@148 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@154 $generated@@155) $generated@@152)
 :weight 0
)) (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@146 $generated@@156 $generated@@157 $generated@@158 ($generated@@148 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@146 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@171 $generated@@173) (= ($generated@@146 $generated@@165 $generated@@166 $generated@@167 ($generated@@148 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@146 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 Bool) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@10 ($generated@@146 $generated@@42 $generated@@50 $generated@@6 ($generated@@147 $generated@@174 $generated@@175 $generated@@176 $generated@@177) $generated@@178 $generated@@179))  (=> (and (or (not (= $generated@@178 $generated@@174)) (not true)) ($generated@@10 ($generated@@48 $generated@@6 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@175 $generated@@178) $generated@@176)))) $generated@@177))
 :pattern ( ($generated@@146 $generated@@42 $generated@@50 $generated@@6 ($generated@@147 $generated@@174 $generated@@175 $generated@@176 $generated@@177) $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@28 $generated@@181 ($generated@@36 $generated@@180)) (and (= ($generated@@90 $generated@@42 ($generated@@48 $generated@@42 $generated@@181)) $generated@@181) ($generated@@39 $generated@@42 ($generated@@48 $generated@@42 $generated@@181) ($generated@@36 $generated@@180))))
 :pattern ( ($generated@@28 $generated@@181 ($generated@@36 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> ($generated@@28 $generated@@183 ($generated@@43 $generated@@182)) (and (= ($generated@@90 $generated@@42 ($generated@@48 $generated@@42 $generated@@183)) $generated@@183) ($generated@@39 $generated@@42 ($generated@@48 $generated@@42 $generated@@183) ($generated@@43 $generated@@182))))
 :pattern ( ($generated@@28 $generated@@183 ($generated@@43 $generated@@182)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@184 T@U) ) (!  (=> (or ($generated@@117 ($generated@@82 $generated@@51 $generated@@184)) (and (< 1 $generated@@23) ($generated@@28 $generated@@184 $generated@@26))) (= ($generated@@116 ($generated@@82 $generated@@51 $generated@@184)) ($generated@@32 ($generated@@82 $generated@@51 $generated@@184))))
 :weight 3
 :pattern ( ($generated@@116 ($generated@@82 $generated@@51 $generated@@184)))
))))
(assert (forall (($generated@@185 Int) ) (! (= ($generated@@90 $generated@@7 ($generated@@11 ($generated@@80 $generated@@185))) ($generated@@82 $generated@@51 ($generated@@90 $generated@@7 ($generated@@11 $generated@@185))))
 :pattern ( ($generated@@90 $generated@@7 ($generated@@11 ($generated@@80 $generated@@185))))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@T) ) (! (= ($generated@@90 $generated@@187 ($generated@@82 $generated@@187 $generated@@186)) ($generated@@82 $generated@@51 ($generated@@90 $generated@@187 $generated@@186)))
 :pattern ( ($generated@@90 $generated@@187 ($generated@@82 $generated@@187 $generated@@186)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! ($generated@@29 $generated@@7 $generated@@189 $generated $generated@@188)
 :pattern ( ($generated@@29 $generated@@7 $generated@@189 $generated $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! ($generated@@39 $generated@@7 $generated@@190 $generated)
 :pattern ( ($generated@@39 $generated@@7 $generated@@190 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@202  (=> (= $generated@@191 ($generated@@147 $generated@@37 $generated@@192 $generated@@1 false)) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@25 $generated@@193 $generated@@26 $generated@@194)) (=> ($generated@@25 $generated@@193 $generated@@26 $generated@@194) (and (=> (= (ControlFlow 0 2) (- 0 8)) (or (not (= $generated@@195 $generated@@37)) (not true))) (=> (or (not (= $generated@@195 $generated@@37)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@29 $generated@@42 $generated@@195 ($generated@@36 $generated) $generated@@194)) (=> ($generated@@29 $generated@@42 $generated@@195 ($generated@@36 $generated) $generated@@194) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 ($generated@@80 3)) (< ($generated@@80 3) ($generated@@35 $generated@@195)))) (=> (and (<= 0 ($generated@@80 3)) (< ($generated@@80 3) ($generated@@35 $generated@@195))) (=> (= $generated@@196 (+ ($generated@@24 $generated@@193) ($generated@@12 ($generated@@48 $generated@@7 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@194 $generated@@195) ($generated@@85 ($generated@@80 3))))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@25 $generated@@193 $generated@@26 $generated@@194)) (=> ($generated@@25 $generated@@193 $generated@@26 $generated@@194) (=> ($generated@@117 $generated@@193) (=> (and ($generated@@117 $generated@@193) (= $generated@@197 ($generated@@116 $generated@@193))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@195 $generated@@37)) (not true))) (=> (or (not (= $generated@@195 $generated@@37)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@80 3)) (< ($generated@@80 3) ($generated@@35 $generated@@195)))) (=> (and (<= 0 ($generated@@80 3)) (< ($generated@@80 3) ($generated@@35 $generated@@195))) (=> (and (= $generated@@198 (+ ($generated@@24 $generated@@193) ($generated@@12 ($generated@@48 $generated@@7 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@192 $generated@@195) ($generated@@85 ($generated@@80 3))))))) ($generated@@25 $generated@@193 $generated@@26 $generated@@192)) (=> (and (and ($generated@@117 $generated@@193) ($generated@@117 $generated@@193)) (and (= $generated@@199 ($generated@@116 $generated@@193)) (= (ControlFlow 0 2) (- 0 1)))) (= (+ ($generated@@12 ($generated@@48 $generated@@7 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@200 $generated@@195) ($generated@@85 ($generated@@80 3))))) ($generated@@24 $generated@@193)) ($generated@@24 $generated@@193))))))))))))))))))))))))
(let (($generated@@203  (=> (and (and ($generated@@27 $generated@@194) ($generated@@201 $generated@@194)) (and ($generated@@28 $generated@@193 $generated@@26) ($generated@@25 $generated@@193 $generated@@26 $generated@@200))) (=> (and (and (and (and ($generated@@39 $generated@@42 $generated@@195 ($generated@@43 $generated)) ($generated@@29 $generated@@42 $generated@@195 ($generated@@43 $generated) $generated@@200)) (= 2 $generated@@23)) (and (= $generated@@200 $generated@@194) (and ($generated@@76 $generated@@200 $generated@@192) ($generated@@27 $generated@@192)))) (and (and ($generated@@29 $generated@@42 $generated@@195 ($generated@@43 $generated) $generated@@200) (= ($generated@@35 $generated@@195) ($generated@@80 100))) (and (= (+ ($generated@@24 $generated@@193) ($generated@@12 ($generated@@48 $generated@@7 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@200 $generated@@195) ($generated@@85 ($generated@@80 3)))))) ($generated@@24 $generated@@193)) (= (ControlFlow 0 10) 2)))) $generated@@202))))
$generated@@203)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
