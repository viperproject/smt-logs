(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U T@U) Bool)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (Int) T@U)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@T T@U T@U) Bool)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@54 (Int) Int)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@T) T@T)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@28 $generated@@29) (=> ($generated@@23 $generated@@26 $generated@@28 $generated@@27) ($generated@@23 $generated@@26 $generated@@29 $generated@@27)))
 :pattern ( ($generated@@23 $generated@@26 $generated@@28 $generated@@27) ($generated@@24 $generated@@28 $generated@@30) ($generated@@24 $generated@@29 $generated@@30))
))))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@32 $generated@@33)) ($generated@@25 $generated@@31 $generated@@33))
 :pattern ( ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@32 $generated@@33))
 :pattern ( ($generated@@25 $generated@@31 $generated@@32) ($generated@@25 $generated@@31 $generated@@33))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (and ($generated@@35 $generated@@37) ($generated@@35 $generated@@38)) (= ($generated@@34 $generated@@37 $generated@@38) (= ($generated@@36 $generated@@37) ($generated@@36 $generated@@38))))
 :pattern ( ($generated@@34 $generated@@37 $generated@@38) ($generated@@35 $generated@@37))
 :pattern ( ($generated@@34 $generated@@37 $generated@@38) ($generated@@35 $generated@@38))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 Int) ($generated@@44 Int) ) (!  (=> (and (and (<= 0 $generated@@43) (<= 0 $generated@@44)) (<= (+ $generated@@43 $generated@@44) ($generated@@41 $generated@@42))) (= ($generated@@39 ($generated@@39 $generated@@42 ($generated@@40 $generated@@43)) ($generated@@40 $generated@@44)) ($generated@@39 $generated@@42 ($generated@@40 (+ $generated@@43 $generated@@44)))))
 :pattern ( ($generated@@39 ($generated@@39 $generated@@42 ($generated@@40 $generated@@43)) ($generated@@40 $generated@@44)))
)))
(assert (= ($generated@@45 $generated@@46) $generated@@3))
(assert (= ($generated@@6 $generated@@48) 3))
(assert ($generated@@47 $generated@@48 $generated@@46 $generated@@49))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@34 $generated@@50 $generated@@51) (= $generated@@50 $generated@@51))
 :pattern ( ($generated@@34 $generated@@50 $generated@@51))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (or ($generated@@53 $generated@@59 $generated@@60) (and (< 3 $generated@@22) ($generated@@47 $generated@@48 $generated@@60 $generated@@49))) (and (and (=> (< 0 ($generated@@41 $generated@@59)) (=> (not (and ($generated@@35 $generated@@60) (= ($generated@@36 $generated@@60) ($generated@@54 0)))) (forall (($generated@@61 T@U) ) (!  (=> ($generated@@47 $generated@@48 $generated@@61 $generated@@49) (and (and (and ($generated@@56 $generated@@60) ($generated@@56 ($generated@@55 ($generated@@55 $generated@@61)))) (and ($generated@@57 $generated@@61) ($generated@@57 ($generated@@55 $generated@@61)))) (=> ($generated@@34 $generated@@60 ($generated@@55 ($generated@@55 $generated@@61))) ($generated@@53 ($generated@@39 $generated@@59 ($generated@@40 1)) $generated@@61))))
 :pattern ( ($generated@@23 $generated@@58 ($generated@@39 $generated@@59 ($generated@@40 1)) $generated@@61))
 :pattern ( ($generated@@55 ($generated@@55 $generated@@61)))
)))) (=> (=> (< 0 ($generated@@41 $generated@@59)) (or (and ($generated@@35 $generated@@60) (= ($generated@@36 $generated@@60) ($generated@@54 0))) (exists (($generated@@62 T@U) ) (!  (and ($generated@@47 $generated@@48 $generated@@62 $generated@@49) (and ($generated@@34 $generated@@60 ($generated@@55 ($generated@@55 $generated@@62))) ($generated@@23 $generated@@58 ($generated@@39 $generated@@59 ($generated@@40 1)) $generated@@62)))
 :pattern ( ($generated@@23 $generated@@58 ($generated@@39 $generated@@59 ($generated@@40 1)) $generated@@62))
 :pattern ( ($generated@@55 ($generated@@55 $generated@@62)))
)))) (=> (= ($generated@@54 0) ($generated@@41 $generated@@59)) (forall (($generated@@63 T@U) ) (!  (=> ($generated@@24 $generated@@63 $generated@@59) ($generated@@53 $generated@@63 $generated@@60))
 :pattern ( ($generated@@23 $generated@@58 $generated@@63 $generated@@60))
))))) (= ($generated@@23 ($generated@@52 $generated@@58) $generated@@59 $generated@@60)  (and (=> (< 0 ($generated@@41 $generated@@59)) (or (and ($generated@@35 $generated@@60) (= ($generated@@36 $generated@@60) ($generated@@54 0))) (exists (($generated@@64 T@U) ) (!  (and ($generated@@47 $generated@@48 $generated@@64 $generated@@49) (and ($generated@@34 $generated@@60 ($generated@@55 ($generated@@55 $generated@@64))) ($generated@@23 $generated@@58 ($generated@@39 $generated@@59 ($generated@@40 1)) $generated@@64)))
 :pattern ( ($generated@@23 $generated@@58 ($generated@@39 $generated@@59 ($generated@@40 1)) $generated@@64))
 :pattern ( ($generated@@55 ($generated@@55 $generated@@64)))
)))) (=> (= ($generated@@54 0) ($generated@@41 $generated@@59)) (exists (($generated@@65 T@U) ) (!  (and ($generated@@24 $generated@@65 $generated@@59) ($generated@@23 $generated@@58 $generated@@65 $generated@@60))
 :pattern ( ($generated@@23 $generated@@58 $generated@@65 $generated@@60))
)))))))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@58) $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@54 $generated@@66) $generated@@66)
 :pattern ( ($generated@@54 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@35 $generated@@70) (= ($generated@@45 $generated@@70) $generated@@2))
 :pattern ( ($generated@@35 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 $generated@@72) (= ($generated@@45 $generated@@72) $generated@@3))
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@73 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@73 $generated@@76 $generated@@75))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and ($generated@@47 $generated@@48 $generated@@78 $generated@@49) (= $generated@@79 ($generated@@40 0))) (not ($generated@@23 $generated@@77 $generated@@79 $generated@@78)))
 :pattern ( ($generated@@23 $generated@@77 $generated@@79 $generated@@78))
))))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@71 $generated@@80) (= $generated@@80 $generated@@46))
 :pattern ( ($generated@@71 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@35 $generated@@82) (exists (($generated@@83 Int) ) (= $generated@@82 ($generated@@81 $generated@@83))))
 :pattern ( ($generated@@35 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@47 $generated@@8 $generated@@85 $generated@@84) (<= ($generated@@54 0) ($generated@@13 $generated@@85)))
 :pattern ( ($generated@@47 $generated@@8 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@23 ($generated@@52 $generated@@86) $generated@@87 $generated@@88) ($generated@@23 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@86) $generated@@87 $generated@@88))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@89 T@U) ) (!  (=> (or ($generated@@57 $generated@@89) (and (< 1 $generated@@22) ($generated@@47 $generated@@48 $generated@@89 $generated@@49))) (= ($generated@@55 $generated@@89) (ite ($generated@@35 $generated@@89) (let (($generated@@90 ($generated@@36 $generated@@89)))
($generated@@81 (+ $generated@@90 1))) $generated@@46)))
 :pattern ( ($generated@@55 $generated@@89))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (and ($generated@@91 $generated@@93) (<= ($generated@@41 $generated@@93) ($generated@@41 $generated@@92))) (and (= ($generated@@91 ($generated@@39 $generated@@92 $generated@@93)) ($generated@@91 $generated@@92)) (= ($generated@@41 ($generated@@39 $generated@@92 $generated@@93)) (- ($generated@@41 $generated@@92) ($generated@@41 $generated@@93)))))
 :pattern ( ($generated@@39 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 Int) ) (!  (=> (<= 0 $generated@@94) (and ($generated@@91 ($generated@@40 $generated@@94)) (= ($generated@@41 ($generated@@40 $generated@@94)) $generated@@94)))
 :pattern ( ($generated@@40 $generated@@94))
)))
(assert (forall (($generated@@95 Int) ) (! (= ($generated@@47 $generated@@48 ($generated@@81 $generated@@95) $generated@@49) ($generated@@47 $generated@@8 ($generated@@12 $generated@@95) $generated@@84))
 :pattern ( ($generated@@47 $generated@@48 ($generated@@81 $generated@@95) $generated@@49))
)))
(assert (= ($generated@@6 $generated@@96) 4))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (or ($generated@@53 ($generated@@67 $generated@@96 $generated@@98) $generated@@99) (and (< 3 $generated@@22) ($generated@@47 $generated@@48 $generated@@99 $generated@@49))) (and (and (=> (< 0 ($generated@@41 $generated@@98)) (=> (not (and ($generated@@35 $generated@@99) (= ($generated@@36 $generated@@99) ($generated@@54 0)))) (forall (($generated@@100 T@U) ) (!  (=> ($generated@@47 $generated@@48 $generated@@100 $generated@@49) (and (and (and ($generated@@56 $generated@@99) ($generated@@56 ($generated@@55 ($generated@@55 $generated@@100)))) (and ($generated@@57 $generated@@100) ($generated@@57 ($generated@@55 $generated@@100)))) (=> ($generated@@34 $generated@@99 ($generated@@55 ($generated@@55 $generated@@100))) ($generated@@53 ($generated@@39 $generated@@98 ($generated@@40 1)) $generated@@100))))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@97) ($generated@@39 $generated@@98 ($generated@@40 1)) $generated@@100))
 :pattern ( ($generated@@55 ($generated@@55 $generated@@100)))
)))) (=> (=> (< 0 ($generated@@41 $generated@@98)) (or (and ($generated@@35 $generated@@99) (= ($generated@@36 $generated@@99) ($generated@@54 0))) (exists (($generated@@101 T@U) ) (!  (and ($generated@@47 $generated@@48 $generated@@101 $generated@@49) (and ($generated@@34 $generated@@99 ($generated@@55 ($generated@@55 $generated@@101))) ($generated@@23 ($generated@@52 $generated@@97) ($generated@@39 $generated@@98 ($generated@@40 1)) $generated@@101)))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@97) ($generated@@39 $generated@@98 ($generated@@40 1)) $generated@@101))
 :pattern ( ($generated@@55 ($generated@@55 $generated@@101)))
)))) (=> (= ($generated@@54 0) ($generated@@41 $generated@@98)) (forall (($generated@@102 T@U) ) (!  (=> ($generated@@24 $generated@@102 $generated@@98) ($generated@@53 $generated@@102 $generated@@99))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@97) $generated@@102 $generated@@99))
))))) (= ($generated@@23 ($generated@@52 $generated@@97) ($generated@@67 $generated@@96 $generated@@98) $generated@@99)  (and (=> (< 0 ($generated@@41 $generated@@98)) (or (and ($generated@@35 $generated@@99) (= ($generated@@36 $generated@@99) ($generated@@54 0))) (exists (($generated@@103 T@U) ) (!  (and ($generated@@47 $generated@@48 $generated@@103 $generated@@49) (and ($generated@@34 $generated@@99 ($generated@@55 ($generated@@55 $generated@@103))) ($generated@@23 ($generated@@52 $generated@@97) ($generated@@39 $generated@@98 ($generated@@40 1)) $generated@@103)))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@97) ($generated@@39 $generated@@98 ($generated@@40 1)) $generated@@103))
 :pattern ( ($generated@@55 ($generated@@55 $generated@@103)))
)))) (=> (= ($generated@@54 0) ($generated@@41 $generated@@98)) (exists (($generated@@104 T@U) ) (!  (and ($generated@@24 $generated@@104 $generated@@98) ($generated@@23 ($generated@@52 $generated@@97) $generated@@104 $generated@@99))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@97) $generated@@104 $generated@@99))
)))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@52 $generated@@97) ($generated@@67 $generated@@96 $generated@@98) $generated@@99))
))))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@56 $generated@@105) (or ($generated@@35 $generated@@105) ($generated@@71 $generated@@105)))
 :pattern ( ($generated@@56 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (or ($generated@@25 $generated@@106 $generated@@107) (= $generated@@106 $generated@@107)) ($generated@@25 $generated@@107 $generated@@106))
 :pattern ( ($generated@@25 $generated@@106 $generated@@107) ($generated@@25 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@24 $generated@@108 $generated@@109) ($generated@@25 $generated@@108 $generated@@109))
 :pattern ( ($generated@@24 $generated@@108 $generated@@109))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@110 T@U) ) (!  (=> (or ($generated@@57 $generated@@110) (and (< 1 $generated@@22) ($generated@@47 $generated@@48 $generated@@110 $generated@@49))) ($generated@@47 $generated@@48 ($generated@@55 $generated@@110) $generated@@49))
 :pattern ( ($generated@@55 $generated@@110))
))))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@47 $generated@@48 $generated@@111 $generated@@49) (or ($generated@@35 $generated@@111) ($generated@@71 $generated@@111)))
 :pattern ( ($generated@@71 $generated@@111) ($generated@@47 $generated@@48 $generated@@111 $generated@@49))
 :pattern ( ($generated@@35 $generated@@111) ($generated@@47 $generated@@48 $generated@@111 $generated@@49))
)))
(assert (forall (($generated@@112 T@U) ) (! (<= 0 ($generated@@41 $generated@@112))
 :pattern ( ($generated@@41 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (and ($generated@@71 $generated@@113) ($generated@@71 $generated@@114)) ($generated@@34 $generated@@113 $generated@@114))
 :pattern ( ($generated@@34 $generated@@113 $generated@@114) ($generated@@71 $generated@@113))
 :pattern ( ($generated@@34 $generated@@113 $generated@@114) ($generated@@71 $generated@@114))
)))
(assert (forall (($generated@@115 Int) ) (! (= ($generated@@45 ($generated@@81 $generated@@115)) $generated@@2)
 :pattern ( ($generated@@81 $generated@@115))
)))
(assert (forall (($generated@@116 Int) ) (! (= ($generated@@36 ($generated@@81 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@81 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@73 $generated@@118 ($generated@@74 $generated@@118 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@74 $generated@@118 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@119 $generated@@120) (or (not (= $generated@@119 $generated@@120)) (not true))) (=> (and ($generated@@91 $generated@@119) (not ($generated@@91 $generated@@120))) ($generated@@25 $generated@@119 $generated@@120))) (=> (and ($generated@@91 $generated@@119) ($generated@@91 $generated@@120)) (= ($generated@@25 $generated@@119 $generated@@120) (< ($generated@@41 $generated@@119) ($generated@@41 $generated@@120))))) (=> (and ($generated@@25 $generated@@119 $generated@@120) ($generated@@91 $generated@@120)) ($generated@@91 $generated@@119)))
 :pattern ( ($generated@@25 $generated@@119 $generated@@120))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (or ($generated@@53 ($generated@@67 $generated@@96 $generated@@122) ($generated@@67 $generated@@48 $generated@@123)) (and (< 3 $generated@@22) ($generated@@47 $generated@@48 $generated@@123 $generated@@49))) (and (and (=> (< 0 ($generated@@41 $generated@@122)) (=> (not (and ($generated@@35 ($generated@@67 $generated@@48 $generated@@123)) (= ($generated@@54 ($generated@@36 ($generated@@67 $generated@@48 $generated@@123))) ($generated@@54 0)))) (forall (($generated@@124 T@U) ) (!  (=> ($generated@@47 $generated@@48 $generated@@124 $generated@@49) (and (and (and ($generated@@56 ($generated@@67 $generated@@48 $generated@@123)) ($generated@@56 ($generated@@55 ($generated@@55 $generated@@124)))) (and ($generated@@57 $generated@@124) ($generated@@57 ($generated@@55 $generated@@124)))) (=> ($generated@@34 $generated@@123 ($generated@@55 ($generated@@55 $generated@@124))) ($generated@@53 ($generated@@39 $generated@@122 ($generated@@40 1)) $generated@@124))))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@121) ($generated@@39 $generated@@122 ($generated@@40 1)) $generated@@124))
 :pattern ( ($generated@@55 ($generated@@55 $generated@@124)))
)))) (=> (=> (< 0 ($generated@@41 $generated@@122)) (or (and ($generated@@35 ($generated@@67 $generated@@48 $generated@@123)) (= ($generated@@54 ($generated@@36 ($generated@@67 $generated@@48 $generated@@123))) ($generated@@54 0))) (exists (($generated@@125 T@U) ) (!  (and ($generated@@47 $generated@@48 $generated@@125 $generated@@49) (and ($generated@@34 $generated@@123 ($generated@@55 ($generated@@55 $generated@@125))) ($generated@@23 ($generated@@52 $generated@@121) ($generated@@39 $generated@@122 ($generated@@40 1)) $generated@@125)))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@121) ($generated@@39 $generated@@122 ($generated@@40 1)) $generated@@125))
 :pattern ( ($generated@@55 ($generated@@55 $generated@@125)))
)))) (=> (= ($generated@@54 0) ($generated@@41 $generated@@122)) (forall (($generated@@126 T@U) ) (!  (=> ($generated@@24 $generated@@126 $generated@@122) ($generated@@53 $generated@@126 $generated@@123))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@121) $generated@@126 $generated@@123))
))))) (= ($generated@@23 ($generated@@52 $generated@@121) ($generated@@67 $generated@@96 $generated@@122) ($generated@@67 $generated@@48 $generated@@123))  (and (=> (< 0 ($generated@@41 $generated@@122)) (or (and ($generated@@35 ($generated@@67 $generated@@48 $generated@@123)) (= ($generated@@54 ($generated@@36 ($generated@@67 $generated@@48 $generated@@123))) ($generated@@54 0))) (exists (($generated@@127 T@U) ) (!  (and ($generated@@47 $generated@@48 $generated@@127 $generated@@49) (and ($generated@@34 $generated@@123 ($generated@@55 ($generated@@55 $generated@@127))) ($generated@@23 ($generated@@52 $generated@@121) ($generated@@39 $generated@@122 ($generated@@40 1)) $generated@@127)))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@121) ($generated@@39 $generated@@122 ($generated@@40 1)) $generated@@127))
 :pattern ( ($generated@@55 ($generated@@55 $generated@@127)))
)))) (=> (= ($generated@@54 0) ($generated@@41 $generated@@122)) (exists (($generated@@128 T@U) ) (!  (and ($generated@@24 $generated@@128 $generated@@122) ($generated@@23 ($generated@@52 $generated@@121) $generated@@128 $generated@@123))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@121) $generated@@128 $generated@@123))
)))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@52 $generated@@121) ($generated@@67 $generated@@96 $generated@@122) ($generated@@67 $generated@@48 $generated@@123)))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@129 $generated@@139 $generated@@140 $generated@@141 ($generated@@135 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@144 $generated@@145) $generated@@142)
 :weight 0
)) (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@129 $generated@@146 $generated@@147 $generated@@148 ($generated@@135 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@129 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@129 $generated@@155 $generated@@156 $generated@@157 ($generated@@135 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@129 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)))) (= ($generated@@6 $generated@@130) 5)) (= ($generated@@6 $generated@@131) 6)) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@133 $generated@@164 $generated@@165 ($generated@@136 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@166) $generated@@168) $generated@@166)
 :weight 0
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@173 $generated@@174) (= ($generated@@133 $generated@@169 $generated@@170 ($generated@@136 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@171) $generated@@174) ($generated@@133 $generated@@169 $generated@@170 $generated@@172 $generated@@174)))
 :weight 0
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@6 ($generated@@134 $generated@@175 $generated@@176)) 7))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@137 ($generated@@134 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@134 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@138 ($generated@@134 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@134 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@11 ($generated@@129 $generated@@130 $generated@@131 $generated@@7 ($generated@@132 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (or (not (= $generated@@185 $generated@@181)) (not true)) ($generated@@11 ($generated@@73 $generated@@7 ($generated@@133 $generated@@131 $generated@@96 ($generated@@133 $generated@@130 ($generated@@134 $generated@@131 $generated@@96) $generated@@182 $generated@@185) $generated@@183)))) $generated@@184))
 :pattern ( ($generated@@129 $generated@@130 $generated@@131 $generated@@7 ($generated@@132 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@187 T@U) ) (!  (=> (or ($generated@@57 ($generated@@67 $generated@@48 $generated@@187)) (and (< 1 $generated@@22) ($generated@@47 $generated@@48 $generated@@187 $generated@@49))) (= ($generated@@55 ($generated@@67 $generated@@48 $generated@@187)) (ite ($generated@@35 ($generated@@67 $generated@@48 $generated@@187)) (let (($generated@@188 ($generated@@54 ($generated@@36 ($generated@@67 $generated@@48 $generated@@187)))))
($generated@@67 $generated@@48 ($generated@@81 ($generated@@54 (+ $generated@@188 1))))) $generated@@46)))
 :weight 3
 :pattern ( ($generated@@55 ($generated@@67 $generated@@48 $generated@@187)))
))))
(assert (forall (($generated@@189 T@U) ) (!  (=> ($generated@@91 $generated@@189) (= $generated@@189 ($generated@@40 ($generated@@41 $generated@@189))))
 :pattern ( ($generated@@41 $generated@@189))
 :pattern ( ($generated@@91 $generated@@189))
)))
(assert (= ($generated@@190 $generated@@84) $generated@@0))
(assert (= ($generated@@191 $generated@@84) $generated@@4))
(assert (= ($generated@@190 $generated@@49) $generated@@1))
(assert (= ($generated@@191 $generated@@49) $generated@@5))
(assert (= $generated@@46 ($generated@@67 $generated@@48 $generated@@46)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and ($generated@@91 $generated@@193) (<= ($generated@@41 $generated@@193) ($generated@@41 $generated@@192))) (or (and (= $generated@@193 ($generated@@40 0)) (= ($generated@@39 $generated@@192 $generated@@193) $generated@@192)) (and (or (not (= $generated@@193 ($generated@@40 0))) (not true)) ($generated@@25 ($generated@@39 $generated@@192 $generated@@193) $generated@@192))))
 :pattern ( ($generated@@39 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 Int) ) (! (= ($generated@@74 $generated@@8 ($generated@@12 ($generated@@54 $generated@@194))) ($generated@@67 $generated@@96 ($generated@@74 $generated@@8 ($generated@@12 $generated@@194))))
 :pattern ( ($generated@@74 $generated@@8 ($generated@@12 ($generated@@54 $generated@@194))))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@81 ($generated@@54 $generated@@195)) ($generated@@67 $generated@@48 ($generated@@81 $generated@@195)))
 :pattern ( ($generated@@81 ($generated@@54 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@T) ) (! (= ($generated@@74 $generated@@197 ($generated@@67 $generated@@197 $generated@@196)) ($generated@@67 $generated@@96 ($generated@@74 $generated@@197 $generated@@196)))
 :pattern ( ($generated@@74 $generated@@197 ($generated@@67 $generated@@197 $generated@@196)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@207  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@11 ($generated@@67 $generated@@7 ($generated@@10 false))))))
(let (($generated@@208  (=> (<= ($generated@@41 $generated@@198) 0) (=> (and (and (and ($generated@@199 $generated@@200) ($generated@@201 $generated@@200)) (= $generated@@202 $generated@@200)) (and (forall (($generated@@209 T@U) ) (!  (=> (and ($generated@@25 $generated@@209 $generated@@198) ($generated@@23 ($generated@@52 $generated@@203) $generated@@209 ($generated@@67 $generated@@48 $generated@@46))) ($generated@@11 ($generated@@67 $generated@@7 ($generated@@10 false))))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@203) $generated@@209 $generated@@46))
 :pattern ( ($generated@@25 $generated@@209 $generated@@198))
)) (= (ControlFlow 0 4) 2))) $generated@@207))))
(let (($generated@@210  (=> (and (< 0 ($generated@@41 $generated@@198)) (= (ControlFlow 0 3) 2)) $generated@@207)))
(let (($generated@@211  (=> (= $generated@@204 ($generated@@132 $generated@@205 $generated@@206 $generated false)) (=> (and (and ($generated@@199 $generated@@202) ($generated@@201 $generated@@202)) (and (= $generated@@206 $generated@@202) (forall (($generated@@212 T@U) ) (!  (=> (and ($generated@@23 ($generated@@52 $generated@@203) $generated@@212 ($generated@@67 $generated@@48 $generated@@46)) ($generated@@25 $generated@@212 $generated@@198)) ($generated@@11 ($generated@@67 $generated@@7 ($generated@@10 false))))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@203) $generated@@212 ($generated@@67 $generated@@48 $generated@@46)))
)))) (and (=> (= (ControlFlow 0 5) 3) $generated@@210) (=> (= (ControlFlow 0 5) 4) $generated@@208))))))
(let (($generated@@213  (=> (and (and (and ($generated@@199 $generated@@206) ($generated@@201 $generated@@206)) (= 4 $generated@@22)) (and (and ($generated@@53 $generated@@198 ($generated@@67 $generated@@48 $generated@@46)) (and ($generated@@23 ($generated@@52 $generated@@203) $generated@@198 ($generated@@67 $generated@@48 $generated@@46)) (and (=> (< 0 ($generated@@41 $generated@@198)) (or (and ($generated@@35 ($generated@@67 $generated@@48 $generated@@46)) (= ($generated@@54 ($generated@@36 ($generated@@67 $generated@@48 $generated@@46))) ($generated@@54 0))) (exists (($generated@@214 T@U) ) (!  (and ($generated@@47 $generated@@48 $generated@@214 $generated@@49) (and ($generated@@34 $generated@@46 ($generated@@55 ($generated@@55 $generated@@214))) ($generated@@23 ($generated@@52 $generated@@203) ($generated@@39 $generated@@198 ($generated@@40 1)) $generated@@214)))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@203) ($generated@@39 $generated@@198 ($generated@@40 1)) $generated@@214))
 :pattern ( ($generated@@55 ($generated@@55 $generated@@214)))
)))) (=> (= ($generated@@54 0) ($generated@@41 $generated@@198)) (exists (($generated@@215 T@U) ) (!  (and ($generated@@24 $generated@@215 $generated@@198) ($generated@@23 ($generated@@52 $generated@@203) $generated@@215 ($generated@@67 $generated@@48 $generated@@46)))
 :pattern ( ($generated@@23 ($generated@@52 $generated@@203) $generated@@215 $generated@@46))
)))))) (= (ControlFlow 0 6) 5))) $generated@@211)))
$generated@@213))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
