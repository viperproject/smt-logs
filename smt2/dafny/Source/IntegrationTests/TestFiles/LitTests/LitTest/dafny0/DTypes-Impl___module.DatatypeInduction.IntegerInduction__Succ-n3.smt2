(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@75 (Int) Int)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@107 (T@U T@U) Bool)
(declare-fun $generated@@113 (T@U) Bool)
(declare-fun $generated@@118 (T@U) Int)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@137 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@171 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and (or (not (= $generated@@32 $generated@@28)) (not true)) (= ($generated@@29 $generated@@32) ($generated@@27 $generated@@31))) ($generated@@30 $generated@@10 ($generated@@14 ($generated@@26 $generated@@32)) $generated))
 :pattern ( ($generated@@26 $generated@@32) ($generated@@27 $generated@@31))
)))
(assert (= ($generated@@8 $generated@@34) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@36) $generated@@38) ($generated@@33 $generated@@34 $generated@@37 ($generated@@27 $generated@@36) $generated@@38))
 :pattern ( ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@36) $generated@@38))
 :pattern ( ($generated@@33 $generated@@34 $generated@@37 ($generated@@27 $generated@@36) $generated@@38))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@42 ($generated@@39 $generated@@41) $generated@@43) ($generated@@33 $generated@@34 $generated@@42 ($generated@@40 $generated@@41) $generated@@43))
 :pattern ( ($generated@@33 $generated@@34 $generated@@42 ($generated@@39 $generated@@41) $generated@@43))
 :pattern ( ($generated@@33 $generated@@34 $generated@@42 ($generated@@40 $generated@@41) $generated@@43))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@45 $generated@@52 $generated@@53 ($generated@@49 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@56) $generated@@54)
 :weight 0
)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (or (= $generated@@61 $generated@@62) (= ($generated@@45 $generated@@57 $generated@@58 ($generated@@49 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@62) ($generated@@45 $generated@@57 $generated@@58 $generated@@60 $generated@@62)))
 :weight 0
))) (= ($generated@@8 $generated@@46) 4)) (= ($generated@@8 $generated@@47) 5)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@8 ($generated@@48 $generated@@63 $generated@@64)) 6))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@50 ($generated@@48 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@51 ($generated@@48 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@48 $generated@@67 $generated@@68))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@70 ($generated@@27 $generated@@69) $generated@@71)  (or (= $generated@@70 $generated@@28) ($generated@@13 ($generated@@44 $generated@@9 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@71 $generated@@70) $generated@@1)))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@70 ($generated@@27 $generated@@69) $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@73 ($generated@@40 $generated@@72) $generated@@74)  (or (= $generated@@73 $generated@@28) ($generated@@13 ($generated@@44 $generated@@9 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@74 $generated@@73) $generated@@1)))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@73 ($generated@@40 $generated@@72) $generated@@74))
)))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@75 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 Int) ) (!  (=> (and (and (and ($generated@@81 $generated@@84) (and (or (not (= $generated@@85 $generated@@28)) (not true)) (= ($generated@@29 $generated@@85) ($generated@@27 $generated@@83)))) (and (<= 0 $generated@@86) (< $generated@@86 ($generated@@26 $generated@@85)))) ($generated@@13 ($generated@@44 $generated@@9 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@84 $generated@@85) $generated@@1)))) ($generated@@82 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@84 $generated@@85) ($generated@@80 $generated@@86)) $generated@@83 $generated@@84))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@84 $generated@@85) ($generated@@80 $generated@@86)) ($generated@@27 $generated@@83))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@44 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@44 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@30 $generated@@34 $generated@@91 ($generated@@35 $generated@@90))  (and ($generated@@30 $generated@@34 $generated@@91 ($generated@@27 $generated@@90)) (or (not (= $generated@@91 $generated@@28)) (not true))))
 :pattern ( ($generated@@30 $generated@@34 $generated@@91 ($generated@@35 $generated@@90)))
 :pattern ( ($generated@@30 $generated@@34 $generated@@91 ($generated@@27 $generated@@90)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@30 $generated@@34 $generated@@93 ($generated@@39 $generated@@92))  (and ($generated@@30 $generated@@34 $generated@@93 ($generated@@40 $generated@@92)) (or (not (= $generated@@93 $generated@@28)) (not true))))
 :pattern ( ($generated@@30 $generated@@34 $generated@@93 ($generated@@39 $generated@@92)))
 :pattern ( ($generated@@30 $generated@@34 $generated@@93 ($generated@@40 $generated@@92)))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@82 ($generated@@87 $generated@@97 $generated@@94) $generated@@95 $generated@@96) ($generated@@33 $generated@@97 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@82 ($generated@@87 $generated@@97 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ) (!  (and (= ($generated@@25 ($generated@@27 $generated@@99)) $generated@@2) (= ($generated@@98 ($generated@@27 $generated@@99)) $generated@@6))
 :pattern ( ($generated@@27 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (!  (and (= ($generated@@25 ($generated@@35 $generated@@100)) $generated@@3) (= ($generated@@98 ($generated@@35 $generated@@100)) $generated@@6))
 :pattern ( ($generated@@35 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (!  (and (= ($generated@@25 ($generated@@40 $generated@@101)) $generated@@4) (= ($generated@@98 ($generated@@40 $generated@@101)) $generated@@7))
 :pattern ( ($generated@@40 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (!  (and (= ($generated@@25 ($generated@@39 $generated@@102)) $generated@@5) (= ($generated@@98 ($generated@@39 $generated@@102)) $generated@@7))
 :pattern ( ($generated@@39 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@30 $generated@@34 $generated@@104 ($generated@@27 $generated@@103))  (or (= $generated@@104 $generated@@28) (= ($generated@@29 $generated@@104) ($generated@@27 $generated@@103))))
 :pattern ( ($generated@@30 $generated@@34 $generated@@104 ($generated@@27 $generated@@103)))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@30 $generated@@34 $generated@@106 ($generated@@40 $generated@@105))  (or (= $generated@@106 $generated@@28) (= ($generated@@29 $generated@@106) ($generated@@40 $generated@@105))))
 :pattern ( ($generated@@30 $generated@@34 $generated@@106 ($generated@@40 $generated@@105)))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@107 $generated@@108 $generated) (and (= ($generated@@87 $generated@@10 ($generated@@44 $generated@@10 $generated@@108)) $generated@@108) ($generated@@30 $generated@@10 ($generated@@44 $generated@@10 $generated@@108) $generated)))
 :pattern ( ($generated@@107 $generated@@108 $generated))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@107 ($generated@@87 $generated@@111 $generated@@109) $generated@@110) ($generated@@30 $generated@@111 $generated@@109 $generated@@110))
 :pattern ( ($generated@@107 ($generated@@87 $generated@@111 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (<= 0 ($generated@@26 $generated@@112))
 :pattern ( ($generated@@26 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@113 $generated@@114) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@107 $generated@@116 $generated@@114) ($generated@@82 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@82 $generated@@116 $generated@@114 $generated@@115))
)))
 :pattern ( ($generated@@113 $generated@@114))
)))
(assert (forall (($generated@@117 Int) ) (! (= ($generated@@24 ($generated@@80 $generated@@117)) 1)
 :pattern ( ($generated@@80 $generated@@117))
)))
(assert (forall (($generated@@119 Int) ) (! (= ($generated@@118 ($generated@@80 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@80 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@27 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@27 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@35 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@35 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@124 ($generated@@40 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@40 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@39 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@39 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@44 $generated@@129 ($generated@@87 $generated@@129 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@87 $generated@@129 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and (and ($generated@@81 $generated@@131) (and (or (not (= $generated@@132 $generated@@28)) (not true)) (= ($generated@@29 $generated@@132) ($generated@@27 $generated@@130)))) ($generated@@13 ($generated@@44 $generated@@9 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@131 $generated@@132) $generated@@1)))) ($generated@@33 $generated@@10 ($generated@@14 ($generated@@26 $generated@@132)) $generated $generated@@131))
 :pattern ( ($generated@@26 $generated@@132) ($generated@@44 $generated@@9 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@131 $generated@@132) $generated@@1)) ($generated@@27 $generated@@130))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 Int) ) (!  (=> (and (and ($generated@@81 $generated@@134) (and (or (not (= $generated@@135 $generated@@28)) (not true)) (= ($generated@@29 $generated@@135) ($generated@@27 $generated@@133)))) (and (<= 0 $generated@@136) (< $generated@@136 ($generated@@26 $generated@@135)))) ($generated@@107 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@134 $generated@@135) ($generated@@80 $generated@@136)) $generated@@133))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@134 $generated@@135) ($generated@@80 $generated@@136)) ($generated@@27 $generated@@133))
)))
(assert  (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@137 $generated@@140 $generated@@141 $generated@@142 ($generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@145 $generated@@146) $generated@@143)
 :weight 0
)) (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@137 $generated@@147 $generated@@148 $generated@@149 ($generated@@139 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@137 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@137 $generated@@156 $generated@@157 $generated@@158 ($generated@@139 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@137 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@13 ($generated@@137 $generated@@34 $generated@@46 $generated@@9 ($generated@@138 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (or (not (= $generated@@169 $generated@@165)) (not true)) ($generated@@13 ($generated@@44 $generated@@9 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@166 $generated@@169) $generated@@167)))) $generated@@168))
 :pattern ( ($generated@@137 $generated@@34 $generated@@46 $generated@@9 ($generated@@138 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (* $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@107 $generated@@175 ($generated@@27 $generated@@174)) (and (= ($generated@@87 $generated@@34 ($generated@@44 $generated@@34 $generated@@175)) $generated@@175) ($generated@@30 $generated@@34 ($generated@@44 $generated@@34 $generated@@175) ($generated@@27 $generated@@174))))
 :pattern ( ($generated@@107 $generated@@175 ($generated@@27 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@107 $generated@@177 ($generated@@35 $generated@@176)) (and (= ($generated@@87 $generated@@34 ($generated@@44 $generated@@34 $generated@@177)) $generated@@177) ($generated@@30 $generated@@34 ($generated@@44 $generated@@34 $generated@@177) ($generated@@35 $generated@@176))))
 :pattern ( ($generated@@107 $generated@@177 ($generated@@35 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@107 $generated@@179 ($generated@@40 $generated@@178)) (and (= ($generated@@87 $generated@@34 ($generated@@44 $generated@@34 $generated@@179)) $generated@@179) ($generated@@30 $generated@@34 ($generated@@44 $generated@@34 $generated@@179) ($generated@@40 $generated@@178))))
 :pattern ( ($generated@@107 $generated@@179 ($generated@@40 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@107 $generated@@181 ($generated@@39 $generated@@180)) (and (= ($generated@@87 $generated@@34 ($generated@@44 $generated@@34 $generated@@181)) $generated@@181) ($generated@@30 $generated@@34 ($generated@@44 $generated@@34 $generated@@181) ($generated@@39 $generated@@180))))
 :pattern ( ($generated@@107 $generated@@181 ($generated@@39 $generated@@180)))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@87 $generated@@10 ($generated@@14 ($generated@@75 $generated@@182))) ($generated@@77 $generated@@47 ($generated@@87 $generated@@10 ($generated@@14 $generated@@182))))
 :pattern ( ($generated@@87 $generated@@10 ($generated@@14 ($generated@@75 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@87 $generated@@184 ($generated@@77 $generated@@184 $generated@@183)) ($generated@@77 $generated@@47 ($generated@@87 $generated@@184 $generated@@183)))
 :pattern ( ($generated@@87 $generated@@184 ($generated@@77 $generated@@184 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! ($generated@@33 $generated@@10 $generated@@186 $generated $generated@@185)
 :pattern ( ($generated@@33 $generated@@10 $generated@@186 $generated $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! ($generated@@30 $generated@@10 $generated@@187 $generated)
 :pattern ( ($generated@@30 $generated@@10 $generated@@187 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@196  (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@197 Int) ) (!  (=> (and (forall (($generated@@198 Int) ) (!  (=> (and (<= 0 $generated@@198) (< $generated@@198 $generated@@197)) (=> (and (<= ($generated@@75 0) $generated@@198) (< $generated@@198 ($generated@@26 $generated@@189))) (= ($generated@@15 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@188 $generated@@189) ($generated@@80 $generated@@198)))) ($generated@@171 $generated@@198 $generated@@198))))
 :pattern ( ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@188 $generated@@189) ($generated@@80 $generated@@198))))
)) true) (=> (and (<= ($generated@@75 0) $generated@@197) (< $generated@@197 ($generated@@26 $generated@@189))) (= ($generated@@15 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@188 $generated@@189) ($generated@@80 $generated@@197)))) ($generated@@171 $generated@@197 $generated@@197))))
 :pattern ( ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@188 $generated@@189) ($generated@@80 $generated@@197))))
)))))
(let (($generated@@199  (=> (and (not (and (<= ($generated@@75 0) $generated@@190) (< $generated@@190 ($generated@@26 $generated@@189)))) (= (ControlFlow 0 7) 3)) $generated@@196)))
(let (($generated@@200  (=> (and (<= ($generated@@75 0) $generated@@190) (< $generated@@190 ($generated@@26 $generated@@189))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (not (= $generated@@189 $generated@@28)) (not true))) (=> (or (not (= $generated@@189 $generated@@28)) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 $generated@@190) (< $generated@@190 ($generated@@26 $generated@@189)))) (=> (= (ControlFlow 0 4) 3) $generated@@196)))))))
(let (($generated@@201  (=> (< $generated@@190 ($generated@@75 0)) (and (=> (= (ControlFlow 0 10) 4) $generated@@200) (=> (= (ControlFlow 0 10) 7) $generated@@199)))))
(let (($generated@@202  (=> (<= ($generated@@75 0) $generated@@190) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= $generated@@189 $generated@@28)) (not true))) (and (=> (= (ControlFlow 0 8) 4) $generated@@200) (=> (= (ControlFlow 0 8) 7) $generated@@199))))))
(let (($generated@@203  (and (=> (= (ControlFlow 0 11) 8) $generated@@202) (=> (= (ControlFlow 0 11) 10) $generated@@201))))
(let (($generated@@204 true))
(let (($generated@@205  (=> (= $generated@@191 ($generated@@138 $generated@@28 $generated@@188 $generated@@1 false)) (and (=> (= (ControlFlow 0 12) 11) $generated@@203) (=> (= (ControlFlow 0 12) 1) $generated@@204)))))
(let (($generated@@206  (=> (and (and ($generated@@81 $generated@@188) ($generated@@192 $generated@@188)) ($generated@@113 $generated@@193)) (=> (and (and (and (or (not (= $generated@@194 $generated@@28)) (not true)) (and ($generated@@30 $generated@@34 $generated@@194 ($generated@@39 $generated@@193)) ($generated@@33 $generated@@34 $generated@@194 ($generated@@39 $generated@@193) $generated@@188))) (and ($generated@@30 $generated@@34 $generated@@189 ($generated@@35 $generated)) ($generated@@33 $generated@@34 $generated@@189 ($generated@@35 $generated) $generated@@188))) (and (and (= 0 $generated@@195) (or (= ($generated@@26 $generated@@189) ($generated@@75 0)) (= ($generated@@15 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@188 $generated@@189) ($generated@@80 ($generated@@75 0))))) ($generated@@75 0)))) (and (forall (($generated@@207 Int) ) (!  (=> (and (<= ($generated@@75 1) $generated@@207) (< $generated@@207 ($generated@@26 $generated@@189))) (= ($generated@@15 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@188 $generated@@189) ($generated@@80 $generated@@207)))) (- (+ ($generated@@15 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@188 $generated@@189) ($generated@@80 (- $generated@@207 1))))) ($generated@@171 ($generated@@75 2) $generated@@207)) 1)))
 :pattern ( ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@34 ($generated@@48 $generated@@46 $generated@@47) $generated@@188 $generated@@189) ($generated@@80 $generated@@207))))
)) (= (ControlFlow 0 13) 12)))) $generated@@205))))
$generated@@206))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
