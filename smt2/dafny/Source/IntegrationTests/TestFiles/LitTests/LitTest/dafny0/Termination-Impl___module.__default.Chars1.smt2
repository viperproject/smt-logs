(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U) T@U)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@20 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@T T@T) T@T)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@26 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@27 (T@T) T@T)
(declare-fun $generated@@28 (T@T) T@T)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (Int) T@U)
(declare-fun $generated@@59 (T@U) Int)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@71 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@72 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@73 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T T@U T@U) Bool)
(declare-fun $generated@@110 () T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (= ($generated@@18 $generated) $generated@@0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@29 T@T) ($generated@@30 T@T) ($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@20 $generated@@29 $generated@@30 ($generated@@26 $generated@@29 $generated@@30 $generated@@32 $generated@@33 $generated@@31) $generated@@33) $generated@@31)
 :weight 0
)) (forall (($generated@@34 T@T) ($generated@@35 T@T) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (or (= $generated@@38 $generated@@39) (= ($generated@@20 $generated@@34 $generated@@35 ($generated@@26 $generated@@34 $generated@@35 $generated@@37 $generated@@38 $generated@@36) $generated@@39) ($generated@@20 $generated@@34 $generated@@35 $generated@@37 $generated@@39)))
 :weight 0
))) (= ($generated@@2 $generated@@21) 3)) (= ($generated@@2 $generated@@22) 4)) (= ($generated@@2 $generated@@23) 5)) (forall (($generated@@40 T@T) ($generated@@41 T@T) ) (= ($generated@@2 ($generated@@24 $generated@@40 $generated@@41)) 6))) (forall (($generated@@42 T@T) ($generated@@43 T@T) ) (! (= ($generated@@27 ($generated@@24 $generated@@42 $generated@@43)) $generated@@42)
 :pattern ( ($generated@@24 $generated@@42 $generated@@43))
))) (forall (($generated@@44 T@T) ($generated@@45 T@T) ) (! (= ($generated@@28 ($generated@@24 $generated@@44 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@24 $generated@@44 $generated@@45))
))))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> ($generated@@19 $generated@@46 $generated@@47) (forall (($generated@@48 T@U) ) (!  (=> ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@46 $generated@@48) $generated@@1))) ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@47 $generated@@48) $generated@@1))))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@47 $generated@@48) $generated@@1))
)))
 :pattern ( ($generated@@19 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 Int) ) (! (= ($generated@@49 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 ($generated@@25 $generated@@56 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@25 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@57 $generated@@60 $generated@@61) ($generated@@58 (- ($generated@@59 $generated@@60) ($generated@@59 $generated@@61))))
 :pattern ( ($generated@@57 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@62 $generated@@63 $generated@@64) ($generated@@58 (+ ($generated@@59 $generated@@63) ($generated@@59 $generated@@64))))
 :pattern ( ($generated@@62 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or (not (= $generated@@65 $generated@@67)) (not true)) (=> (and ($generated@@19 $generated@@65 $generated@@66) ($generated@@19 $generated@@66 $generated@@67)) ($generated@@19 $generated@@65 $generated@@67)))
 :pattern ( ($generated@@19 $generated@@65 $generated@@66) ($generated@@19 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@25 $generated@@69 ($generated@@54 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@54 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@70 Int) ) (!  (=> (or (and (<= 0 $generated@@70) (< $generated@@70 55296)) (and (<= 57344 $generated@@70) (< $generated@@70 1114112))) (= ($generated@@59 ($generated@@58 $generated@@70)) $generated@@70))
 :pattern ( ($generated@@58 $generated@@70))
)))
(assert  (and (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@71 $generated@@74 $generated@@75 $generated@@76 ($generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@80 $generated@@77) $generated@@79 $generated@@80) $generated@@77)
 :weight 0
)) (and (forall (($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (or (= $generated@@86 $generated@@88) (= ($generated@@71 $generated@@81 $generated@@82 $generated@@83 ($generated@@73 $generated@@81 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@87 $generated@@84) $generated@@88 $generated@@89) ($generated@@71 $generated@@81 $generated@@82 $generated@@83 $generated@@85 $generated@@88 $generated@@89)))
 :weight 0
)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@96 $generated@@98) (= ($generated@@71 $generated@@90 $generated@@91 $generated@@92 ($generated@@73 $generated@@90 $generated@@91 $generated@@92 $generated@@94 $generated@@95 $generated@@96 $generated@@93) $generated@@97 $generated@@98) ($generated@@71 $generated@@90 $generated@@91 $generated@@92 $generated@@94 $generated@@97 $generated@@98)))
 :weight 0
)))))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 Bool) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@7 ($generated@@71 $generated@@23 $generated@@21 $generated@@3 ($generated@@72 $generated@@99 $generated@@100 $generated@@101 $generated@@102) $generated@@103 $generated@@104))  (=> (and (or (not (= $generated@@103 $generated@@99)) (not true)) ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@100 $generated@@103) $generated@@101)))) $generated@@102))
 :pattern ( ($generated@@71 $generated@@23 $generated@@21 $generated@@3 ($generated@@72 $generated@@99 $generated@@100 $generated@@101 $generated@@102) $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@58 ($generated@@59 $generated@@105)) $generated@@105) (or (and (<= 0 ($generated@@59 $generated@@105)) (< ($generated@@59 $generated@@105) 55296)) (and (<= 57344 ($generated@@59 $generated@@105)) (< ($generated@@59 $generated@@105) 1114112))))
 :pattern ( ($generated@@59 $generated@@105))
)))
(assert (forall (($generated@@106 Int) ) (! (= ($generated@@54 $generated@@4 ($generated@@8 ($generated@@49 $generated@@106))) ($generated@@51 $generated@@22 ($generated@@54 $generated@@4 ($generated@@8 $generated@@106))))
 :pattern ( ($generated@@54 $generated@@4 ($generated@@8 ($generated@@49 $generated@@106))))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@54 $generated@@108 ($generated@@51 $generated@@108 $generated@@107)) ($generated@@51 $generated@@22 ($generated@@54 $generated@@108 $generated@@107)))
 :pattern ( ($generated@@54 $generated@@108 ($generated@@51 $generated@@108 $generated@@107)))
)))
(assert (= ($generated@@2 $generated@@110) 7))
(assert (forall (($generated@@111 T@U) ) (! ($generated@@109 $generated@@110 $generated@@111 $generated)
 :pattern ( ($generated@@109 $generated@@110 $generated@@111 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@112 () T@U)
(declare-fun $generated@@113 () T@U)
(declare-fun $generated@@114 () Bool)
(declare-fun $generated@@115 () Int)
(declare-fun $generated@@116 () T@U)
(declare-fun $generated@@117 () T@U)
(declare-fun $generated@@118 () Int)
(declare-fun $generated@@119 () T@U)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 () T@U)
(declare-fun $generated@@122 () T@U)
(declare-fun $generated@@123 () T@U)
(declare-fun $generated@@124 () T@U)
(declare-fun $generated@@125 () Int)
(declare-fun $generated@@126 () T@U)
(declare-fun $generated@@127 () T@U)
(declare-fun $generated@@128 (T@U) Bool)
(declare-fun $generated@@129 (T@U) Bool)
(declare-fun $generated@@130 () T@U)
(declare-fun $generated@@131 () T@U)
(declare-fun $generated@@132 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@133 true))
(let (($generated@@134  (=> (and (< ($generated@@59 $generated@@112) ($generated@@59 $generated@@113)) (= (ControlFlow 0 17) 15)) $generated@@133)))
(let (($generated@@135  (=> (and (<= ($generated@@59 $generated@@113) ($generated@@59 $generated@@112)) (= (ControlFlow 0 16) 15)) $generated@@133)))
(let (($generated@@136  (=> (and (not $generated@@114) (<= ($generated@@59 $generated@@113) ($generated@@59 $generated@@112))) (and (=> (= (ControlFlow 0 18) 16) $generated@@135) (=> (= (ControlFlow 0 18) 17) $generated@@134)))))
(let (($generated@@137  (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@115) (= (ite (<= ($generated@@59 $generated@@116) ($generated@@59 $generated@@117)) (- ($generated@@59 $generated@@117) ($generated@@59 $generated@@116)) (- ($generated@@59 $generated@@116) ($generated@@59 $generated@@117))) $generated@@115))) (=> (or (<= 0 $generated@@115) (= (ite (<= ($generated@@59 $generated@@116) ($generated@@59 $generated@@117)) (- ($generated@@59 $generated@@117) ($generated@@59 $generated@@116)) (- ($generated@@59 $generated@@116) ($generated@@59 $generated@@117))) $generated@@115)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< (ite (<= ($generated@@59 $generated@@116) ($generated@@59 $generated@@117)) (- ($generated@@59 $generated@@117) ($generated@@59 $generated@@116)) (- ($generated@@59 $generated@@116) ($generated@@59 $generated@@117))) $generated@@115)) (=> (< (ite (<= ($generated@@59 $generated@@116) ($generated@@59 $generated@@117)) (- ($generated@@59 $generated@@117) ($generated@@59 $generated@@116)) (- ($generated@@59 $generated@@116) ($generated@@59 $generated@@117))) $generated@@115) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@114 (<= ($generated@@59 $generated@@116) ($generated@@59 $generated@@117))))))))))
(let (($generated@@138  (=> (= $generated@@118 ($generated@@49 1)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (and (<= 0 $generated@@118) (< $generated@@118 55296)) (and (<= 57344 $generated@@118) (< $generated@@118 1114112)))) (=> (or (and (<= 0 $generated@@118) (< $generated@@118 55296)) (and (<= 57344 $generated@@118) (< $generated@@118 1114112))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (and (<= 0 (+ ($generated@@59 $generated@@113) ($generated@@59 ($generated@@58 ($generated@@49 1))))) (< (+ ($generated@@59 $generated@@113) ($generated@@59 ($generated@@58 ($generated@@49 1)))) 55296)) (and (<= 57344 (+ ($generated@@59 $generated@@113) ($generated@@59 ($generated@@58 ($generated@@49 1))))) (< (+ ($generated@@59 $generated@@113) ($generated@@59 ($generated@@58 ($generated@@49 1)))) 1114112)))) (=> (or (and (<= 0 (+ ($generated@@59 $generated@@113) ($generated@@59 ($generated@@58 ($generated@@49 1))))) (< (+ ($generated@@59 $generated@@113) ($generated@@59 ($generated@@58 ($generated@@49 1)))) 55296)) (and (<= 57344 (+ ($generated@@59 $generated@@113) ($generated@@59 ($generated@@58 ($generated@@49 1))))) (< (+ ($generated@@59 $generated@@113) ($generated@@59 ($generated@@58 ($generated@@49 1)))) 1114112))) (=> (and (and (= $generated@@119 ($generated@@62 $generated@@113 ($generated@@58 ($generated@@49 1)))) (= $generated@@116 $generated@@119)) (and (= $generated@@117 $generated@@112) (= (ControlFlow 0 10) 4))) $generated@@137))))))))
(let (($generated@@139  (=> (= $generated@@120 ($generated@@49 1)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (and (<= 0 $generated@@120) (< $generated@@120 55296)) (and (<= 57344 $generated@@120) (< $generated@@120 1114112)))) (=> (or (and (<= 0 $generated@@120) (< $generated@@120 55296)) (and (<= 57344 $generated@@120) (< $generated@@120 1114112))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (and (<= 0 (- ($generated@@59 $generated@@112) ($generated@@59 ($generated@@58 ($generated@@49 1))))) (< (- ($generated@@59 $generated@@112) ($generated@@59 ($generated@@58 ($generated@@49 1)))) 55296)) (and (<= 57344 (- ($generated@@59 $generated@@112) ($generated@@59 ($generated@@58 ($generated@@49 1))))) (< (- ($generated@@59 $generated@@112) ($generated@@59 ($generated@@58 ($generated@@49 1)))) 1114112)))) (=> (or (and (<= 0 (- ($generated@@59 $generated@@112) ($generated@@59 ($generated@@58 ($generated@@49 1))))) (< (- ($generated@@59 $generated@@112) ($generated@@59 ($generated@@58 ($generated@@49 1)))) 55296)) (and (<= 57344 (- ($generated@@59 $generated@@112) ($generated@@59 ($generated@@58 ($generated@@49 1))))) (< (- ($generated@@59 $generated@@112) ($generated@@59 ($generated@@58 ($generated@@49 1)))) 1114112))) (=> (and (and (= $generated@@121 ($generated@@57 $generated@@112 ($generated@@58 ($generated@@49 1)))) (= $generated@@116 $generated@@113)) (and (= $generated@@117 $generated@@121) (= (ControlFlow 0 7) 4))) $generated@@137))))))))
(let (($generated@@140  (=> (and (or (not (= $generated@@113 $generated@@112)) (not true)) (= $generated@@115 (ite (<= ($generated@@59 $generated@@113) ($generated@@59 $generated@@112)) (- ($generated@@59 $generated@@112) ($generated@@59 $generated@@113)) (- ($generated@@59 $generated@@113) ($generated@@59 $generated@@112))))) (and (=> (= (ControlFlow 0 13) 7) $generated@@139) (=> (= (ControlFlow 0 13) 10) $generated@@138)))))
(let (($generated@@141 true))
(let (($generated@@142  (=> $generated@@114 (and (=> (= (ControlFlow 0 14) 2) $generated@@141) (=> (= (ControlFlow 0 14) 13) $generated@@140)))))
(let (($generated@@143  (and (=> (= (ControlFlow 0 19) 18) $generated@@136) (=> (= (ControlFlow 0 19) 14) $generated@@142))))
(let (($generated@@144 true))
(let (($generated@@145  (=> (and (and (and ($generated@@109 $generated@@110 $generated@@113 $generated) ($generated@@109 $generated@@110 $generated@@112 $generated)) (and (not false) (=> $generated@@114 (<= ($generated@@59 $generated@@113) ($generated@@59 $generated@@112))))) (and (and (forall (($generated@@146 T@U) ) (!  (=> (and (or (not (= $generated@@146 $generated@@123)) (not true)) ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@122 $generated@@146) $generated@@1)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@122 $generated@@146) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@122 $generated@@146)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@122 $generated@@146))
)) ($generated@@19 $generated@@122 $generated@@122)) (and (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (or (not (= $generated@@147 $generated@@123)) (not true)) ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@122 $generated@@147) $generated@@1)))) (or (= ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@122 $generated@@147) $generated@@148) ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@122 $generated@@147) $generated@@148)) ($generated@@7 ($generated@@71 $generated@@23 $generated@@21 $generated@@3 $generated@@124 $generated@@147 $generated@@148))))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@122 $generated@@147) $generated@@148))
)) (<= (ite (<= ($generated@@59 $generated@@113) ($generated@@59 $generated@@112)) (- ($generated@@59 $generated@@112) ($generated@@59 $generated@@113)) (- ($generated@@59 $generated@@113) ($generated@@59 $generated@@112))) $generated@@125)))) (and (=> (= (ControlFlow 0 20) 1) $generated@@144) (=> (= (ControlFlow 0 20) 19) $generated@@143)))))
(let (($generated@@149  (=> (and (= $generated@@124 ($generated@@72 $generated@@123 $generated@@122 $generated@@1 false)) (= $generated@@125 (ite (<= ($generated@@59 $generated@@126) ($generated@@59 $generated@@127)) (- ($generated@@59 $generated@@127) ($generated@@59 $generated@@126)) (- ($generated@@59 $generated@@126) ($generated@@59 $generated@@127))))) (and (=> (= (ControlFlow 0 21) (- 0 22)) (=> $generated@@114 (<= ($generated@@59 $generated@@126) ($generated@@59 $generated@@127)))) (=> (=> $generated@@114 (<= ($generated@@59 $generated@@126) ($generated@@59 $generated@@127))) (=> (= (ControlFlow 0 21) 20) $generated@@145))))))
(let (($generated@@150  (=> (and ($generated@@128 $generated@@122) ($generated@@129 $generated@@122)) (=> (and (and ($generated@@109 $generated@@110 $generated@@126 $generated) ($generated@@109 $generated@@110 $generated@@127 $generated)) (and ($generated@@109 $generated@@110 $generated@@130 $generated) true)) (=> (and (and (and ($generated@@109 $generated@@110 $generated@@131 $generated) true) (= 0 $generated@@132)) (and (<= ($generated@@59 $generated@@126) ($generated@@59 $generated@@127)) (= (ControlFlow 0 23) 21))) $generated@@149)))))
$generated@@150))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 10) (- 11))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 7) (- 8))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
