(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@67 (Int) Int)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (and (or (not (= $generated@@28 $generated@@24)) (not true)) (= ($generated@@25 $generated@@28) ($generated@@23 $generated@@27))) ($generated@@26 $generated@@7 ($generated@@11 ($generated@@22 $generated@@28)) $generated))
 :pattern ( ($generated@@22 $generated@@28) ($generated@@23 $generated@@27))
)))
(assert (= ($generated@@5 $generated@@30) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@33 ($generated@@31 $generated@@32) $generated@@34) ($generated@@29 $generated@@30 $generated@@33 ($generated@@23 $generated@@32) $generated@@34))
 :pattern ( ($generated@@29 $generated@@30 $generated@@33 ($generated@@31 $generated@@32) $generated@@34))
 :pattern ( ($generated@@29 $generated@@30 $generated@@33 ($generated@@23 $generated@@32) $generated@@34))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@36 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@36 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@36 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@5 $generated@@37) 4)) (= ($generated@@5 $generated@@38) 5)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@5 ($generated@@39 $generated@@54 $generated@@55)) 6))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@39 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@39 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@39 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@61 ($generated@@23 $generated@@60) $generated@@62)  (or (= $generated@@61 $generated@@24) ($generated@@10 ($generated@@35 $generated@@6 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@30 ($generated@@39 $generated@@37 $generated@@38) $generated@@62 $generated@@61) $generated@@1)))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@61 ($generated@@23 $generated@@60) $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@63 $generated@@64 $generated@@65) (forall (($generated@@66 T@U) ) (!  (=> ($generated@@10 ($generated@@35 $generated@@6 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@30 ($generated@@39 $generated@@37 $generated@@38) $generated@@64 $generated@@66) $generated@@1))) ($generated@@10 ($generated@@35 $generated@@6 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@30 ($generated@@39 $generated@@37 $generated@@38) $generated@@65 $generated@@66) $generated@@1))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@30 ($generated@@39 $generated@@37 $generated@@38) $generated@@65 $generated@@66) $generated@@1))
)))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@68 Int) ) (! (= ($generated@@67 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 $generated@@70) $generated@@70)
 :pattern ( ($generated@@69 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@35 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@35 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@26 $generated@@30 $generated@@76 ($generated@@31 $generated@@75))  (and ($generated@@26 $generated@@30 $generated@@76 ($generated@@23 $generated@@75)) (or (not (= $generated@@76 $generated@@24)) (not true))))
 :pattern ( ($generated@@26 $generated@@30 $generated@@76 ($generated@@31 $generated@@75)))
 :pattern ( ($generated@@26 $generated@@30 $generated@@76 ($generated@@23 $generated@@75)))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (!  (=> ($generated@@63 $generated@@77 $generated@@78) (=> ($generated@@29 $generated@@81 $generated@@79 $generated@@80 $generated@@77) ($generated@@29 $generated@@81 $generated@@79 $generated@@80 $generated@@78)))
 :pattern ( ($generated@@63 $generated@@77 $generated@@78) ($generated@@29 $generated@@81 $generated@@79 $generated@@80 $generated@@77))
)))
(assert (forall (($generated@@83 T@U) ) (!  (and (= ($generated@@21 ($generated@@23 $generated@@83)) $generated@@2) (= ($generated@@82 ($generated@@23 $generated@@83)) $generated@@4))
 :pattern ( ($generated@@23 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (!  (and (= ($generated@@21 ($generated@@31 $generated@@84)) $generated@@3) (= ($generated@@82 ($generated@@31 $generated@@84)) $generated@@4))
 :pattern ( ($generated@@31 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@26 $generated@@30 $generated@@86 ($generated@@23 $generated@@85))  (or (= $generated@@86 $generated@@24) (= ($generated@@25 $generated@@86) ($generated@@23 $generated@@85))))
 :pattern ( ($generated@@26 $generated@@30 $generated@@86 ($generated@@23 $generated@@85)))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (or (not (= $generated@@87 $generated@@89)) (not true)) (=> (and ($generated@@63 $generated@@87 $generated@@88) ($generated@@63 $generated@@88 $generated@@89)) ($generated@@63 $generated@@87 $generated@@89)))
 :pattern ( ($generated@@63 $generated@@87 $generated@@88) ($generated@@63 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (! (<= 0 ($generated@@22 $generated@@90))
 :pattern ( ($generated@@22 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@91 ($generated@@23 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@23 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@93 ($generated@@31 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@31 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@35 $generated@@96 ($generated@@72 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@72 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and (and ($generated@@97 $generated@@99) (and (or (not (= $generated@@100 $generated@@24)) (not true)) (= ($generated@@25 $generated@@100) ($generated@@23 $generated@@98)))) ($generated@@10 ($generated@@35 $generated@@6 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@30 ($generated@@39 $generated@@37 $generated@@38) $generated@@99 $generated@@100) $generated@@1)))) ($generated@@29 $generated@@7 ($generated@@11 ($generated@@22 $generated@@100)) $generated $generated@@99))
 :pattern ( ($generated@@22 $generated@@100) ($generated@@35 $generated@@6 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@30 ($generated@@39 $generated@@37 $generated@@38) $generated@@99 $generated@@100) $generated@@1)) ($generated@@23 $generated@@98))
)))
(assert  (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@101 $generated@@104 $generated@@105 $generated@@106 ($generated@@103 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@109 $generated@@110) $generated@@107)
 :weight 0
)) (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@116 $generated@@118) (= ($generated@@101 $generated@@111 $generated@@112 $generated@@113 ($generated@@103 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@101 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@101 $generated@@120 $generated@@121 $generated@@122 ($generated@@103 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@101 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@10 ($generated@@101 $generated@@30 $generated@@37 $generated@@6 ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))  (=> (and (or (not (= $generated@@134 $generated@@129)) (not true)) ($generated@@10 ($generated@@35 $generated@@6 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@30 ($generated@@39 $generated@@37 $generated@@38) $generated@@130 $generated@@134) $generated@@131)))) (or (= $generated@@134 $generated@@132) (= $generated@@134 $generated@@133))))
 :pattern ( ($generated@@101 $generated@@30 $generated@@37 $generated@@6 ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 Int) ) (! (= ($generated@@72 $generated@@7 ($generated@@11 ($generated@@67 $generated@@136))) ($generated@@69 $generated@@38 ($generated@@72 $generated@@7 ($generated@@11 $generated@@136))))
 :pattern ( ($generated@@72 $generated@@7 ($generated@@11 ($generated@@67 $generated@@136))))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@72 $generated@@138 ($generated@@69 $generated@@138 $generated@@137)) ($generated@@69 $generated@@38 ($generated@@72 $generated@@138 $generated@@137)))
 :pattern ( ($generated@@72 $generated@@138 ($generated@@69 $generated@@138 $generated@@137)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! ($generated@@29 $generated@@7 $generated@@140 $generated $generated@@139)
 :pattern ( ($generated@@29 $generated@@7 $generated@@140 $generated $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! ($generated@@26 $generated@@7 $generated@@141 $generated)
 :pattern ( ($generated@@26 $generated@@7 $generated@@141 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@149 true))
(let (($generated@@150  (=> (and (< ($generated@@22 $generated@@142) ($generated@@67 10)) (= (ControlFlow 0 5) 1)) $generated@@149)))
(let (($generated@@151  (=> (<= ($generated@@67 10) ($generated@@22 $generated@@142)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@142 $generated@@24)) (not true))) (=> (or (not (= $generated@@142 $generated@@24)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@143 $generated@@24)) (not true))) (=> (or (not (= $generated@@143 $generated@@24)) (not true)) (=> (= (ControlFlow 0 2) 1) $generated@@149))))))))
(let (($generated@@152  (=> (and (= $generated@@144 ($generated@@102 $generated@@24 $generated@@145 $generated@@1 $generated@@142 $generated@@143)) (or (not (= $generated@@142 $generated@@143)) (not true))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (not (= $generated@@142 $generated@@24)) (not true))) (=> (or (not (= $generated@@142 $generated@@24)) (not true)) (and (=> (= (ControlFlow 0 6) 2) $generated@@151) (=> (= (ControlFlow 0 6) 5) $generated@@150)))))))
(let (($generated@@153  (=> (and (and ($generated@@97 $generated@@145) ($generated@@146 $generated@@145)) (and ($generated@@26 $generated@@30 $generated@@142 ($generated@@31 $generated)) ($generated@@29 $generated@@30 $generated@@142 ($generated@@31 $generated) $generated@@145))) (=> (and (and (and ($generated@@26 $generated@@30 $generated@@143 ($generated@@31 $generated)) ($generated@@29 $generated@@30 $generated@@143 ($generated@@31 $generated) $generated@@145)) (<= ($generated@@67 0) $generated@@147)) (and (= 0 $generated@@148) (= (ControlFlow 0 8) 6))) $generated@@152))))
$generated@@153))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
