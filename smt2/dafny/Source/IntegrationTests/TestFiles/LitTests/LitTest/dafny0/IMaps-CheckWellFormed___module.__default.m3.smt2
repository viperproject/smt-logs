(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@T) T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@71 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@118 () T@U)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@159 (T@U) Int)
(declare-fun $generated@@171 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@210 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@26) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)) ($generated@@24 $generated@@30))
 :pattern ( ($generated@@24 $generated@@30) ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@31 $generated@@35 $generated@@36) ($generated@@27 $generated@@33 $generated@@34))  (and ($generated@@32 $generated@@35 $generated@@33) ($generated@@32 $generated@@36 $generated@@34)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@31 $generated@@35 $generated@@36) ($generated@@27 $generated@@33 $generated@@34)))
)))
(assert  (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@40 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@40 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@40 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@7 ($generated@@37 $generated@@55 $generated@@56)) 4))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@37 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@37 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@37 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@37 $generated@@59 $generated@@60))
))) (= ($generated@@7 $generated@@38) 5)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@25 ($generated@@37 $generated@@38 $generated@@8) $generated@@61 ($generated@@39 $generated@@62)) (forall (($generated@@63 T@U) ) (!  (=> ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 $generated@@61 $generated@@63)) ($generated@@32 $generated@@63 $generated@@62))
 :pattern ( ($generated@@40 $generated@@38 $generated@@8 $generated@@61 $generated@@63))
)))
 :pattern ( ($generated@@25 ($generated@@37 $generated@@38 $generated@@8) $generated@@61 ($generated@@39 $generated@@62)))
)))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@64 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@70 $generated@@76) (= ($generated@@69 $generated@@26 ($generated@@31 $generated@@74 $generated@@75) ($generated@@27 $generated@@72 $generated@@73) $generated@@76)  (and ($generated@@71 $generated@@74 $generated@@72 $generated@@76) ($generated@@71 $generated@@75 $generated@@73 $generated@@76))))
 :pattern ( ($generated@@69 $generated@@26 ($generated@@31 $generated@@74 $generated@@75) ($generated@@27 $generated@@72 $generated@@73) $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@24 $generated@@78) (= ($generated@@77 $generated@@78) $generated@@4))
 :pattern ( ($generated@@24 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@79 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@24 $generated@@83) (exists (($generated@@84 T@U) ($generated@@85 T@U) ) (= $generated@@83 ($generated@@31 $generated@@84 $generated@@85))))
 :pattern ( ($generated@@24 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@71 ($generated@@80 $generated@@89 $generated@@86) $generated@@87 $generated@@88) ($generated@@69 $generated@@89 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@71 ($generated@@80 $generated@@89 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@92 T@U) ) (!  (not ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 ($generated@@90 $generated@@91) $generated@@92)))
 :pattern ( ($generated@@40 $generated@@38 $generated@@8 ($generated@@90 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (!  (or (= $generated@@93 $generated@@91) (exists (($generated@@94 T@U) ) ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 ($generated@@90 $generated@@93) $generated@@94))))
 :pattern ( ($generated@@90 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ) (!  (or (= $generated@@96 $generated@@91) (exists (($generated@@97 T@U) ) ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 ($generated@@95 $generated@@96) $generated@@97))))
 :pattern ( ($generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@69 ($generated@@37 $generated@@38 $generated@@8) $generated@@98 ($generated@@39 $generated@@99) $generated@@100) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 $generated@@98 $generated@@101)) ($generated@@71 $generated@@101 $generated@@99 $generated@@100))
 :pattern ( ($generated@@40 $generated@@38 $generated@@8 $generated@@98 $generated@@101))
)))
 :pattern ( ($generated@@69 ($generated@@37 $generated@@38 $generated@@8) $generated@@98 ($generated@@39 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 ($generated@@102 $generated@@106) $generated@@107))  (and ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 ($generated@@90 $generated@@106) ($generated@@103 ($generated@@79 $generated@@26 $generated@@107)))) (= ($generated@@40 $generated@@38 $generated@@38 ($generated@@104 $generated@@106) ($generated@@103 ($generated@@79 $generated@@26 $generated@@107))) ($generated@@105 ($generated@@79 $generated@@26 $generated@@107)))))
 :pattern ( ($generated@@40 $generated@@38 $generated@@8 ($generated@@102 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 ($generated@@95 $generated@@108) $generated@@109)) (exists (($generated@@110 T@U) ) (!  (and ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 ($generated@@90 $generated@@108) $generated@@110)) (= $generated@@109 ($generated@@40 $generated@@38 $generated@@38 ($generated@@104 $generated@@108) $generated@@110)))
 :pattern ( ($generated@@40 $generated@@38 $generated@@8 ($generated@@90 $generated@@108) $generated@@110))
 :pattern ( ($generated@@40 $generated@@38 $generated@@38 ($generated@@104 $generated@@108) $generated@@110))
)))
 :pattern ( ($generated@@40 $generated@@38 $generated@@8 ($generated@@95 $generated@@108) $generated@@109))
)))
(assert (= ($generated@@7 $generated@@111) 6))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@69 $generated@@111 $generated@@113 ($generated@@112 $generated@@114 $generated@@115) $generated@@116) (forall (($generated@@117 T@U) ) (!  (=> ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 ($generated@@90 $generated@@113) $generated@@117)) (and ($generated@@71 ($generated@@40 $generated@@38 $generated@@38 ($generated@@104 $generated@@113) $generated@@117) $generated@@115 $generated@@116) ($generated@@71 $generated@@117 $generated@@114 $generated@@116)))
 :pattern ( ($generated@@40 $generated@@38 $generated@@38 ($generated@@104 $generated@@113) $generated@@117))
 :pattern ( ($generated@@40 $generated@@38 $generated@@8 ($generated@@90 $generated@@113) $generated@@117))
)))
 :pattern ( ($generated@@69 $generated@@111 $generated@@113 ($generated@@112 $generated@@114 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@119 T@U) ) (! (= (= $generated@@119 $generated@@91) (= ($generated@@90 $generated@@119) $generated@@118))
 :pattern ( ($generated@@90 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ) (! (= (= $generated@@120 $generated@@91) (= ($generated@@95 $generated@@120) $generated@@118))
 :pattern ( ($generated@@95 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ) (! (= (= $generated@@121 $generated@@91) (= ($generated@@102 $generated@@121) $generated@@118))
 :pattern ( ($generated@@102 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (!  (or (= $generated@@122 $generated@@91) (exists (($generated@@123 T@U) ($generated@@124 T@U) ) ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 ($generated@@102 $generated@@122) ($generated@@80 $generated@@26 ($generated@@31 $generated@@123 $generated@@124))))))
 :pattern ( ($generated@@102 $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@32 $generated@@125 $generated) (and (= ($generated@@80 $generated@@9 ($generated@@79 $generated@@9 $generated@@125)) $generated@@125) ($generated@@25 $generated@@9 ($generated@@79 $generated@@9 $generated@@125) $generated)))
 :pattern ( ($generated@@32 $generated@@125 $generated))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@32 ($generated@@80 $generated@@128 $generated@@126) $generated@@127) ($generated@@25 $generated@@128 $generated@@126 $generated@@127))
 :pattern ( ($generated@@32 ($generated@@80 $generated@@128 $generated@@126) $generated@@127))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@129 ($generated@@112 $generated@@130 $generated@@131)) $generated@@130)
 :pattern ( ($generated@@112 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@132 ($generated@@112 $generated@@133 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@112 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@23 ($generated@@112 $generated@@135 $generated@@136)) $generated@@2)
 :pattern ( ($generated@@112 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@77 ($generated@@31 $generated@@137 $generated@@138)) $generated@@4)
 :pattern ( ($generated@@31 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@139 ($generated@@27 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@27 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@142 ($generated@@27 $generated@@143 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@27 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@103 ($generated@@31 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@31 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@105 ($generated@@31 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@31 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@149 ($generated@@39 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@39 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@23 ($generated@@39 $generated@@151)) $generated@@1)
 :pattern ( ($generated@@39 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@79 $generated@@153 ($generated@@80 $generated@@153 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@80 $generated@@153 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@25 $generated@@111 $generated@@154 ($generated@@112 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 ($generated@@90 $generated@@154) $generated@@157)) (and ($generated@@32 ($generated@@40 $generated@@38 $generated@@38 ($generated@@104 $generated@@154) $generated@@157) $generated@@156) ($generated@@32 $generated@@157 $generated@@155)))
 :pattern ( ($generated@@40 $generated@@38 $generated@@38 ($generated@@104 $generated@@154) $generated@@157))
 :pattern ( ($generated@@40 $generated@@38 $generated@@8 ($generated@@90 $generated@@154) $generated@@157))
)))
 :pattern ( ($generated@@25 $generated@@111 $generated@@154 ($generated@@112 $generated@@155 $generated@@156)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (< ($generated@@158 $generated@@160) ($generated@@159 ($generated@@31 $generated@@160 $generated@@161)))
 :pattern ( ($generated@@31 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (< ($generated@@158 $generated@@163) ($generated@@159 ($generated@@31 $generated@@162 $generated@@163)))
 :pattern ( ($generated@@31 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@32 $generated@@164 ($generated@@112 $generated@@165 $generated@@166)) (and (= ($generated@@80 $generated@@111 ($generated@@79 $generated@@111 $generated@@164)) $generated@@164) ($generated@@25 $generated@@111 ($generated@@79 $generated@@111 $generated@@164) ($generated@@112 $generated@@165 $generated@@166))))
 :pattern ( ($generated@@32 $generated@@164 ($generated@@112 $generated@@165 $generated@@166)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@32 $generated@@169 ($generated@@27 $generated@@167 $generated@@168)) (and (= ($generated@@80 $generated@@26 ($generated@@79 $generated@@26 $generated@@169)) $generated@@169) ($generated@@25 $generated@@26 ($generated@@79 $generated@@26 $generated@@169) ($generated@@27 $generated@@167 $generated@@168))))
 :pattern ( ($generated@@32 $generated@@169 ($generated@@27 $generated@@167 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ) (!  (not ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 $generated@@118 $generated@@170)))
 :pattern ( ($generated@@40 $generated@@38 $generated@@8 $generated@@118 $generated@@170))
)))
(assert  (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@171 $generated@@176 $generated@@177 $generated@@178 ($generated@@175 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@181 $generated@@182) $generated@@179)
 :weight 0
)) (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@171 $generated@@183 $generated@@184 $generated@@185 ($generated@@175 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@171 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@171 $generated@@192 $generated@@193 $generated@@194 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@171 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)))) (= ($generated@@7 $generated@@172) 7)) (= ($generated@@7 $generated@@173) 8)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 Bool) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@12 ($generated@@171 $generated@@172 $generated@@173 $generated@@8 ($generated@@174 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@205 $generated@@206))  (=> (and (or (not (= $generated@@205 $generated@@201)) (not true)) ($generated@@12 ($generated@@79 $generated@@8 ($generated@@40 $generated@@173 $generated@@38 ($generated@@40 $generated@@172 ($generated@@37 $generated@@173 $generated@@38) $generated@@202 $generated@@205) $generated@@203)))) $generated@@204))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173 $generated@@8 ($generated@@174 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (and (= ($generated@@23 ($generated@@27 $generated@@208 $generated@@209)) $generated@@5) (= ($generated@@207 ($generated@@27 $generated@@208 $generated@@209)) $generated@@6))
 :pattern ( ($generated@@27 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@211 Int) ($generated@@212 Int) ) (! (= ($generated@@210 $generated@@211 $generated@@212) (* $generated@@211 $generated@@212))
 :pattern ( ($generated@@210 $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ) (! (= ($generated@@158 ($generated@@80 $generated@@26 $generated@@213)) ($generated@@159 $generated@@213))
 :pattern ( ($generated@@158 ($generated@@80 $generated@@26 $generated@@213)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> ($generated@@32 $generated@@214 ($generated@@39 $generated@@215)) (and (= ($generated@@80 ($generated@@37 $generated@@38 $generated@@8) ($generated@@79 ($generated@@37 $generated@@38 $generated@@8) $generated@@214)) $generated@@214) ($generated@@25 ($generated@@37 $generated@@38 $generated@@8) ($generated@@79 ($generated@@37 $generated@@38 $generated@@8) $generated@@214) ($generated@@39 $generated@@215))))
 :pattern ( ($generated@@32 $generated@@214 ($generated@@39 $generated@@215)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and ($generated@@70 $generated@@218) (and ($generated@@24 $generated@@216) (exists (($generated@@219 T@U) ) (! ($generated@@69 $generated@@26 $generated@@216 ($generated@@27 $generated@@217 $generated@@219) $generated@@218)
 :pattern ( ($generated@@69 $generated@@26 $generated@@216 ($generated@@27 $generated@@217 $generated@@219) $generated@@218))
)))) ($generated@@71 ($generated@@103 $generated@@216) $generated@@217 $generated@@218))
 :pattern ( ($generated@@71 ($generated@@103 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and ($generated@@70 $generated@@222) (and ($generated@@24 $generated@@220) (exists (($generated@@223 T@U) ) (! ($generated@@69 $generated@@26 $generated@@220 ($generated@@27 $generated@@223 $generated@@221) $generated@@222)
 :pattern ( ($generated@@69 $generated@@26 $generated@@220 ($generated@@27 $generated@@223 $generated@@221) $generated@@222))
)))) ($generated@@71 ($generated@@105 $generated@@220) $generated@@221 $generated@@222))
 :pattern ( ($generated@@71 ($generated@@105 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@31 ($generated@@66 $generated@@38 $generated@@224) ($generated@@66 $generated@@38 $generated@@225)) ($generated@@66 $generated@@26 ($generated@@31 $generated@@224 $generated@@225)))
 :pattern ( ($generated@@31 ($generated@@66 $generated@@38 $generated@@224) ($generated@@66 $generated@@38 $generated@@225)))
)))
(assert (forall (($generated@@226 Int) ) (! (= ($generated@@80 $generated@@9 ($generated@@13 ($generated@@64 $generated@@226))) ($generated@@66 $generated@@38 ($generated@@80 $generated@@9 ($generated@@13 $generated@@226))))
 :pattern ( ($generated@@80 $generated@@9 ($generated@@13 ($generated@@64 $generated@@226))))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@T) ) (! (= ($generated@@80 $generated@@228 ($generated@@66 $generated@@228 $generated@@227)) ($generated@@66 $generated@@38 ($generated@@80 $generated@@228 $generated@@227)))
 :pattern ( ($generated@@80 $generated@@228 ($generated@@66 $generated@@228 $generated@@227)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! ($generated@@69 $generated@@9 $generated@@230 $generated $generated@@229)
 :pattern ( ($generated@@69 $generated@@9 $generated@@230 $generated $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> ($generated@@25 $generated@@111 $generated@@231 ($generated@@112 $generated@@232 $generated@@233)) (and (and ($generated@@25 ($generated@@37 $generated@@38 $generated@@8) ($generated@@90 $generated@@231) ($generated@@39 $generated@@232)) ($generated@@25 ($generated@@37 $generated@@38 $generated@@8) ($generated@@95 $generated@@231) ($generated@@39 $generated@@233))) ($generated@@25 ($generated@@37 $generated@@38 $generated@@8) ($generated@@102 $generated@@231) ($generated@@39 ($generated@@27 $generated@@232 $generated@@233)))))
 :pattern ( ($generated@@25 $generated@@111 $generated@@231 ($generated@@112 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@234 T@U) ) (! ($generated@@25 $generated@@9 $generated@@234 $generated)
 :pattern ( ($generated@@25 $generated@@9 $generated@@234 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@241 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@242 true))
(let (($generated@@243  (=> (and (and (<= ($generated@@64 0) $generated@@235) (< $generated@@235 100)) ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 ($generated@@90 $generated@@236) ($generated@@80 $generated@@9 ($generated@@13 $generated@@235))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 ($generated@@90 $generated@@236) ($generated@@80 $generated@@9 ($generated@@13 $generated@@235))))) (=> ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 ($generated@@90 $generated@@236) ($generated@@80 $generated@@9 ($generated@@13 $generated@@235)))) (=> (and (= ($generated@@14 ($generated@@79 $generated@@9 ($generated@@40 $generated@@38 $generated@@38 ($generated@@104 $generated@@236) ($generated@@80 $generated@@9 ($generated@@13 $generated@@235))))) ($generated@@210 $generated@@235 $generated@@235)) (= (ControlFlow 0 3) 1)) $generated@@242))))))
(let (($generated@@244  (=> (and (< $generated@@235 ($generated@@64 0)) (= (ControlFlow 0 6) 3)) $generated@@243)))
(let (($generated@@245  (=> (and (<= ($generated@@64 0) $generated@@235) (= (ControlFlow 0 5) 3)) $generated@@243)))
(let (($generated@@246  (=> (and (=> (and (<= ($generated@@64 0) $generated@@235) (< $generated@@235 100)) (and ($generated@@12 ($generated@@40 $generated@@38 $generated@@8 ($generated@@90 $generated@@236) ($generated@@80 $generated@@9 ($generated@@13 $generated@@235)))) (= ($generated@@14 ($generated@@79 $generated@@9 ($generated@@40 $generated@@38 $generated@@38 ($generated@@104 $generated@@236) ($generated@@80 $generated@@9 ($generated@@13 $generated@@235))))) ($generated@@210 $generated@@235 $generated@@235)))) (= (ControlFlow 0 2) 1)) $generated@@242)))
(let (($generated@@247  (=> (= $generated@@237 ($generated@@174 $generated@@238 $generated@@239 $generated@@3 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@246) (=> (= (ControlFlow 0 7) 5) $generated@@245)) (=> (= (ControlFlow 0 7) 6) $generated@@244)))))
(let (($generated@@248  (=> (and ($generated@@70 $generated@@239) ($generated@@240 $generated@@239)) (=> (and (and ($generated@@25 $generated@@111 $generated@@236 ($generated@@112 $generated $generated)) ($generated@@69 $generated@@111 $generated@@236 ($generated@@112 $generated $generated) $generated@@239)) (and (= 0 $generated@@241) (= (ControlFlow 0 8) 7))) $generated@@247))))
$generated@@248))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
