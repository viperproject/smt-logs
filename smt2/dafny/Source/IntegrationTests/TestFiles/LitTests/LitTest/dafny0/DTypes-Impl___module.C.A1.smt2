(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 (T@T T@T) T@T)
(declare-fun $generated@@55 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated) $generated@@0))
(assert (= ($generated@@14 $generated@@32) 3))
(assert (forall (($generated@@36 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@36 $generated@@33)  (or (= $generated@@36 $generated@@34) (= ($generated@@35 $generated@@36) $generated@@33)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 $generated@@33))
)))
(assert (forall (($generated@@38 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@38 $generated@@37)  (or (= $generated@@38 $generated@@34) (= ($generated@@35 $generated@@38) $generated@@37)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@38 $generated@@37))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@39 $generated@@32 $generated@@42 $generated@@40 $generated@@43) ($generated@@39 $generated@@32 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@39 $generated@@32 $generated@@42 $generated@@40 $generated@@43))
 :pattern ( ($generated@@39 $generated@@32 $generated@@42 $generated@@41 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@39 $generated@@32 $generated@@45 $generated@@44 $generated@@46) ($generated@@39 $generated@@32 $generated@@45 $generated@@33 $generated@@46))
 :pattern ( ($generated@@39 $generated@@32 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@39 $generated@@32 $generated@@45 $generated@@33 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@39 $generated@@32 $generated@@48 $generated@@47 $generated@@49) ($generated@@39 $generated@@32 $generated@@48 $generated@@37 $generated@@49))
 :pattern ( ($generated@@39 $generated@@32 $generated@@48 $generated@@47 $generated@@49))
 :pattern ( ($generated@@39 $generated@@32 $generated@@48 $generated@@37 $generated@@49))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@51 $generated@@58 $generated@@59 ($generated@@55 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@62) $generated@@60)
 :weight 0
)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (or (= $generated@@67 $generated@@68) (= ($generated@@51 $generated@@63 $generated@@64 ($generated@@55 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@68) ($generated@@51 $generated@@63 $generated@@64 $generated@@66 $generated@@68)))
 :weight 0
))) (= ($generated@@14 $generated@@52) 4)) (= ($generated@@14 $generated@@53) 5)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (= ($generated@@14 ($generated@@54 $generated@@69 $generated@@70)) 6))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@56 ($generated@@54 $generated@@71 $generated@@72)) $generated@@71)
 :pattern ( ($generated@@54 $generated@@71 $generated@@72))
))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@57 ($generated@@54 $generated@@73 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@54 $generated@@73 $generated@@74))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@39 $generated@@32 $generated@@75 $generated@@41 $generated@@76)  (or (= $generated@@75 $generated@@34) ($generated@@19 ($generated@@50 $generated@@15 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@32 ($generated@@54 $generated@@52 $generated@@53) $generated@@76 $generated@@75) $generated@@1)))))
 :pattern ( ($generated@@39 $generated@@32 $generated@@75 $generated@@41 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@39 $generated@@32 $generated@@77 $generated@@33 $generated@@78)  (or (= $generated@@77 $generated@@34) ($generated@@19 ($generated@@50 $generated@@15 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@32 ($generated@@54 $generated@@52 $generated@@53) $generated@@78 $generated@@77) $generated@@1)))))
 :pattern ( ($generated@@39 $generated@@32 $generated@@77 $generated@@33 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@39 $generated@@32 $generated@@79 $generated@@37 $generated@@80)  (or (= $generated@@79 $generated@@34) ($generated@@19 ($generated@@50 $generated@@15 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@32 ($generated@@54 $generated@@52 $generated@@53) $generated@@80 $generated@@79) $generated@@1)))))
 :pattern ( ($generated@@39 $generated@@32 $generated@@79 $generated@@37 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@50 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@50 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@88 ($generated@@84 $generated@@86 $generated@@87))  (and ($generated@@31 $generated@@32 $generated@@88 ($generated@@85 $generated@@86 $generated@@87)) (or (not (= $generated@@88 $generated@@34)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@88 ($generated@@84 $generated@@86 $generated@@87)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@88 ($generated@@85 $generated@@86 $generated@@87)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@91 ($generated@@85 $generated@@89 $generated@@90))  (or (= $generated@@91 $generated@@34) (= ($generated@@35 $generated@@91) ($generated@@85 $generated@@89 $generated@@90))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@91 ($generated@@85 $generated@@89 $generated@@90)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@39 $generated@@32 $generated@@94 ($generated@@84 $generated@@92 $generated@@93) $generated@@95) ($generated@@39 $generated@@32 $generated@@94 ($generated@@85 $generated@@92 $generated@@93) $generated@@95))
 :pattern ( ($generated@@39 $generated@@32 $generated@@94 ($generated@@84 $generated@@92 $generated@@93) $generated@@95))
 :pattern ( ($generated@@39 $generated@@32 $generated@@94 ($generated@@85 $generated@@92 $generated@@93) $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@96 $generated@@40)  (and ($generated@@31 $generated@@32 $generated@@96 $generated@@41) (or (not (= $generated@@96 $generated@@34)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@96 $generated@@40))
 :pattern ( ($generated@@31 $generated@@32 $generated@@96 $generated@@41))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@97 $generated@@44)  (and ($generated@@31 $generated@@32 $generated@@97 $generated@@33) (or (not (= $generated@@97 $generated@@34)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@97 $generated@@44))
 :pattern ( ($generated@@31 $generated@@32 $generated@@97 $generated@@33))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@98 $generated@@47)  (and ($generated@@31 $generated@@32 $generated@@98 $generated@@37) (or (not (= $generated@@98 $generated@@34)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@98 $generated@@47))
 :pattern ( ($generated@@31 $generated@@32 $generated@@98 $generated@@37))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@39 $generated@@32 $generated@@101 ($generated@@85 $generated@@99 $generated@@100) $generated@@102)  (or (= $generated@@101 $generated@@34) ($generated@@19 ($generated@@50 $generated@@15 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@32 ($generated@@54 $generated@@52 $generated@@53) $generated@@102 $generated@@101) $generated@@1)))))
 :pattern ( ($generated@@39 $generated@@32 $generated@@101 ($generated@@85 $generated@@99 $generated@@100) $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@103 ($generated@@85 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@85 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@106 ($generated@@85 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@85 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@109 ($generated@@84 $generated@@110 $generated@@111)) $generated@@110)
 :pattern ( ($generated@@84 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@112 ($generated@@84 $generated@@113 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@84 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (! ($generated@@31 $generated@@32 $generated@@115 $generated@@41)
 :pattern ( ($generated@@31 $generated@@32 $generated@@115 $generated@@41))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@50 $generated@@117 ($generated@@81 $generated@@117 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@81 $generated@@117 $generated@@116))
)))
(assert  (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@118 $generated@@121 $generated@@122 $generated@@123 ($generated@@120 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@126 $generated@@127) $generated@@124)
 :weight 0
)) (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@118 $generated@@128 $generated@@129 $generated@@130 ($generated@@120 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@118 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@118 $generated@@137 $generated@@138 $generated@@139 ($generated@@120 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@118 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@19 ($generated@@118 $generated@@32 $generated@@52 $generated@@15 ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))  (=> (and (or (not (= $generated@@150 $generated@@146)) (not true)) ($generated@@19 ($generated@@50 $generated@@15 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@32 ($generated@@54 $generated@@52 $generated@@53) $generated@@147 $generated@@150) $generated@@148)))) $generated@@149))
 :pattern ( ($generated@@118 $generated@@32 $generated@@52 $generated@@15 ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (and (= ($generated@@30 ($generated@@85 $generated@@153 $generated@@154)) $generated@@8) (= ($generated@@152 ($generated@@85 $generated@@153 $generated@@154)) $generated@@13))
 :pattern ( ($generated@@85 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (and (= ($generated@@30 ($generated@@84 $generated@@155 $generated@@156)) $generated@@9) (= ($generated@@152 ($generated@@84 $generated@@155 $generated@@156)) $generated@@13))
 :pattern ( ($generated@@84 $generated@@155 $generated@@156))
)))
(assert (= ($generated@@30 $generated@@41) $generated@@2))
(assert (= ($generated@@152 $generated@@41) $generated@@10))
(assert (= ($generated@@30 $generated@@40) $generated@@3))
(assert (= ($generated@@152 $generated@@40) $generated@@10))
(assert (= ($generated@@30 $generated@@33) $generated@@4))
(assert (= ($generated@@152 $generated@@33) $generated@@11))
(assert (= ($generated@@30 $generated@@44) $generated@@5))
(assert (= ($generated@@152 $generated@@44) $generated@@11))
(assert (= ($generated@@30 $generated@@47) $generated@@6))
(assert (= ($generated@@152 $generated@@47) $generated@@12))
(assert (= ($generated@@30 $generated@@37) $generated@@7))
(assert (= ($generated@@152 $generated@@37) $generated@@12))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! ($generated@@39 $generated@@16 $generated@@158 $generated $generated@@157)
 :pattern ( ($generated@@39 $generated@@16 $generated@@158 $generated $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! ($generated@@31 $generated@@16 $generated@@159 $generated)
 :pattern ( ($generated@@31 $generated@@16 $generated@@159 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@169  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@170 T@U) )  (=> ($generated@@31 $generated@@32 $generated@@170 ($generated@@85 $generated $generated@@47)) (=> (= $generated@@160 $generated@@170) (= $generated@@170 $generated@@34)))))))
(let (($generated@@171  (=> (and (or (not (= $generated@@160 $generated@@161)) (not true)) (= (ControlFlow 0 5) 2)) $generated@@169)))
(let (($generated@@172  (=> (and (= $generated@@160 $generated@@161) (= (ControlFlow 0 4) 2)) $generated@@169)))
(let (($generated@@173  (=> (and ($generated@@31 $generated@@32 $generated@@161 ($generated@@85 $generated $generated@@47)) ($generated@@39 $generated@@32 $generated@@161 ($generated@@85 $generated $generated@@47) $generated@@162)) (and (=> (= (ControlFlow 0 6) 4) $generated@@172) (=> (= (ControlFlow 0 6) 5) $generated@@171)))))
(let (($generated@@174  (=> (and (not (and ($generated@@31 $generated@@32 $generated@@161 ($generated@@85 $generated $generated@@47)) ($generated@@39 $generated@@32 $generated@@161 ($generated@@85 $generated $generated@@47) $generated@@162))) (= (ControlFlow 0 3) 2)) $generated@@169)))
(let (($generated@@175  (=> (= $generated@@163 ($generated@@119 $generated@@34 $generated@@162 $generated@@1 false)) (and (=> (= (ControlFlow 0 7) 6) $generated@@173) (=> (= (ControlFlow 0 7) 3) $generated@@174)))))
(let (($generated@@176  (=> (and ($generated@@164 $generated@@162) ($generated@@165 $generated@@162)) (=> (and (and (or (not (= $generated@@166 $generated@@34)) (not true)) (and ($generated@@31 $generated@@32 $generated@@166 $generated@@44) ($generated@@39 $generated@@32 $generated@@166 $generated@@44 $generated@@162))) (and ($generated@@31 $generated@@32 $generated@@160 ($generated@@85 $generated $generated@@44)) ($generated@@39 $generated@@32 $generated@@160 ($generated@@85 $generated $generated@@44) $generated@@162))) (=> (and (and (and ($generated@@31 $generated@@32 $generated@@167 $generated@@41) ($generated@@39 $generated@@32 $generated@@167 $generated@@41 $generated@@162)) true) (and (= 1 $generated@@168) (= (ControlFlow 0 8) 7))) $generated@@175)))))
$generated@@176))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
