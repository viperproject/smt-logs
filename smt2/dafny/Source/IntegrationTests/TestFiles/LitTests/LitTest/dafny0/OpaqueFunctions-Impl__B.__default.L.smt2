(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@T T@T) T@T)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@67 (T@U T@U) T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@23 $generated@@1) $generated@@2))
(assert (= ($generated@@24 $generated@@25) $generated@@3))
(assert (= ($generated@@24 $generated@@26) $generated@@3))
(assert (= ($generated@@5 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@31 $generated@@26)  (or (= $generated@@31 $generated@@29) (= ($generated@@30 $generated@@31) $generated@@26)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@31 $generated@@26))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@38 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@38 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@38 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@5 $generated@@39) 4)) (= ($generated@@5 $generated@@40) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@5 ($generated@@41 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@41 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@41 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@41 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@41 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@33 $generated@@63 $generated@@64) (and ($generated@@34 $generated@@63) (and (or (not (= $generated@@64 $generated@@29)) (not true)) (and ($generated@@27 $generated@@28 $generated@@64 $generated@@25) ($generated@@35 $generated@@28 $generated@@64 $generated@@25 $generated@@63))))) (and (=> ($generated@@32 $generated@@63 $generated@@64) (<= ($generated@@36 0) ($generated@@12 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@63 $generated@@64) $generated@@42))))) (=> (= ($generated@@12 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@63 $generated@@64) $generated@@42))) ($generated@@36 8)) ($generated@@32 $generated@@63 $generated@@64))))
 :pattern ( ($generated@@32 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@35 $generated@@28 $generated@@65 $generated@@25 $generated@@66) ($generated@@35 $generated@@28 $generated@@65 $generated@@26 $generated@@66))
 :pattern ( ($generated@@35 $generated@@28 $generated@@65 $generated@@25 $generated@@66))
 :pattern ( ($generated@@35 $generated@@28 $generated@@65 $generated@@26 $generated@@66))
)))
(assert (= ($generated@@21 $generated@@42) 0))
(assert (= ($generated@@67 $generated@@68 $generated@@4) $generated@@42))
(assert  (not ($generated@@69 $generated@@42)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@35 $generated@@28 $generated@@70 $generated@@26 $generated@@71)  (or (= $generated@@70 $generated@@29) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@71 $generated@@70) $generated@@1)))))
 :pattern ( ($generated@@35 $generated@@28 $generated@@70 $generated@@26 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> ($generated@@72 $generated@@73 $generated@@74) (forall (($generated@@75 T@U) ) (!  (=> ($generated@@10 ($generated@@37 $generated@@6 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@73 $generated@@75) $generated@@1))) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@74 $generated@@75) $generated@@1))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@74 $generated@@75) $generated@@1))
)))
 :pattern ( ($generated@@72 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@36 $generated@@76) $generated@@76)
 :pattern ( ($generated@@36 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@37 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@37 $generated@@82 $generated@@81))
)))
(assert ($generated@@69 $generated@@1))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and (and ($generated@@34 $generated@@83) (and (or (not (= $generated@@84 $generated@@29)) (not true)) (= ($generated@@30 $generated@@84) $generated@@26))) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@83 $generated@@84) $generated@@1)))) ($generated@@35 $generated@@7 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@83 $generated@@84) $generated@@42)) $generated $generated@@83))
 :pattern ( ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@83 $generated@@84) $generated@@42)))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@85 ($generated@@80 $generated@@89 $generated@@86) $generated@@87 $generated@@88) ($generated@@35 $generated@@89 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@85 ($generated@@80 $generated@@89 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@72 $generated@@90 $generated@@91) (=> ($generated@@85 $generated@@92 $generated@@93 $generated@@90) ($generated@@85 $generated@@92 $generated@@93 $generated@@91)))
 :pattern ( ($generated@@72 $generated@@90 $generated@@91) ($generated@@85 $generated@@92 $generated@@93 $generated@@90))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (!  (=> ($generated@@72 $generated@@94 $generated@@95) (=> ($generated@@35 $generated@@98 $generated@@96 $generated@@97 $generated@@94) ($generated@@35 $generated@@98 $generated@@96 $generated@@97 $generated@@95)))
 :pattern ( ($generated@@72 $generated@@94 $generated@@95) ($generated@@35 $generated@@98 $generated@@96 $generated@@97 $generated@@94))
)))
(assert  (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@99 $generated@@102 $generated@@103 $generated@@104 ($generated@@101 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@107 $generated@@108) $generated@@105)
 :weight 0
)) (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@99 $generated@@109 $generated@@110 $generated@@111 ($generated@@101 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@99 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@99 $generated@@118 $generated@@119 $generated@@120 ($generated@@101 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@99 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@10 ($generated@@99 $generated@@28 $generated@@39 $generated@@6 ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))  (=> (and (or (not (= $generated@@131 $generated@@127)) (not true)) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@128 $generated@@131) $generated@@129)))) (= $generated@@131 $generated@@130)))
 :pattern ( ($generated@@99 $generated@@28 $generated@@39 $generated@@6 ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@133 $generated@@25)  (and ($generated@@27 $generated@@28 $generated@@133 $generated@@26) (or (not (= $generated@@133 $generated@@29)) (not true))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@133 $generated@@25))
 :pattern ( ($generated@@27 $generated@@28 $generated@@133 $generated@@26))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (or (not (= $generated@@134 $generated@@136)) (not true)) (=> (and ($generated@@72 $generated@@134 $generated@@135) ($generated@@72 $generated@@135 $generated@@136)) ($generated@@72 $generated@@134 $generated@@136)))
 :pattern ( ($generated@@72 $generated@@134 $generated@@135) ($generated@@72 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (and (= ($generated@@137 ($generated@@67 $generated@@138 $generated@@139)) $generated@@138) (= ($generated@@23 ($generated@@67 $generated@@138 $generated@@139)) $generated@@139))
 :pattern ( ($generated@@67 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@37 $generated@@141 ($generated@@80 $generated@@141 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@80 $generated@@141 $generated@@140))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and ($generated@@34 $generated@@143) ($generated@@34 $generated@@144)) (and (or (not (= $generated@@145 $generated@@29)) (not true)) ($generated@@27 $generated@@28 $generated@@145 $generated@@25))) (and ($generated@@142 $generated@@143) ($generated@@72 $generated@@143 $generated@@144))) (=> (forall (($generated@@146 T@U) ($generated@@147 T@U) )  (=> (and (or (not (= $generated@@146 $generated@@29)) (not true)) (= $generated@@146 $generated@@145)) (= ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@143 $generated@@146) $generated@@147) ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@144 $generated@@146) $generated@@147)))) (= ($generated@@32 $generated@@143 $generated@@145) ($generated@@32 $generated@@144 $generated@@145))))
 :pattern ( ($generated@@142 $generated@@143) ($generated@@72 $generated@@143 $generated@@144) ($generated@@32 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and ($generated@@34 $generated@@148) (and (or (not (= $generated@@149 $generated@@29)) (not true)) (= ($generated@@30 $generated@@149) $generated@@26))) ($generated@@27 $generated@@7 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@148 $generated@@149) $generated@@42)) $generated))
 :pattern ( ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@148 $generated@@149) $generated@@42)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and ($generated@@34 $generated@@151) ($generated@@34 $generated@@152)) (and (or (not (= $generated@@153 $generated@@29)) (not true)) ($generated@@27 $generated@@28 $generated@@153 $generated@@25))) (and ($generated@@142 $generated@@151) ($generated@@72 $generated@@151 $generated@@152))) (=> (forall (($generated@@154 T@U) ($generated@@155 T@U) )  (=> (and (or (not (= $generated@@154 $generated@@29)) (not true)) (= $generated@@154 $generated@@153)) (= ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@151 $generated@@154) $generated@@155) ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@152 $generated@@154) $generated@@155)))) (= ($generated@@150 $generated@@151 $generated@@153) ($generated@@150 $generated@@152 $generated@@153))))
 :pattern ( ($generated@@142 $generated@@151) ($generated@@72 $generated@@151 $generated@@152) ($generated@@150 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> ($generated@@34 ($generated@@43 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@156 $generated@@157 ($generated@@43 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@156 $generated@@157) $generated@@158 $generated@@159))) ($generated@@72 $generated@@156 ($generated@@43 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@156 $generated@@157 ($generated@@43 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@156 $generated@@157) $generated@@158 $generated@@159))))
 :pattern ( ($generated@@43 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@156 $generated@@157 ($generated@@43 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@156 $generated@@157) $generated@@158 $generated@@159)))
)))
(assert (forall (($generated@@160 Int) ) (! (= ($generated@@80 $generated@@7 ($generated@@11 ($generated@@36 $generated@@160))) ($generated@@77 $generated@@40 ($generated@@80 $generated@@7 ($generated@@11 $generated@@160))))
 :pattern ( ($generated@@80 $generated@@7 ($generated@@11 ($generated@@36 $generated@@160))))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@80 $generated@@162 ($generated@@77 $generated@@162 $generated@@161)) ($generated@@77 $generated@@40 ($generated@@80 $generated@@162 $generated@@161)))
 :pattern ( ($generated@@80 $generated@@162 ($generated@@77 $generated@@162 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! ($generated@@35 $generated@@7 $generated@@164 $generated $generated@@163)
 :pattern ( ($generated@@35 $generated@@7 $generated@@164 $generated $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! ($generated@@27 $generated@@7 $generated@@165 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@165 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@175  (and (=> (= (ControlFlow 0 10) (- 0 13)) (or (not (= $generated@@166 $generated@@29)) (not true))) (=> (or (not (= $generated@@166 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@10 ($generated@@99 $generated@@28 $generated@@39 $generated@@6 $generated@@167 $generated@@166 $generated@@42))) (=> ($generated@@10 ($generated@@99 $generated@@28 $generated@@39 $generated@@6 $generated@@167 $generated@@166 $generated@@42)) (=> (= $generated@@168 ($generated@@36 8)) (=> (and (= $generated@@169 ($generated@@43 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@170 $generated@@166 ($generated@@43 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@170 $generated@@166) $generated@@42 ($generated@@80 $generated@@7 ($generated@@11 $generated@@168))))) ($generated@@34 $generated@@169)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (not (= $generated@@166 $generated@@29)) (not true))) (=> (and (and ($generated@@85 ($generated@@80 $generated@@28 $generated@@166) $generated@@26 $generated@@169) ($generated@@33 $generated@@169 $generated@@166)) (and ($generated@@33 $generated@@169 $generated@@166) (= (ControlFlow 0 10) (- 0 9)))) ($generated@@32 $generated@@169 $generated@@166)))))))))))
(let (($generated@@176  (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (not (= $generated@@166 $generated@@29)) (not true))) (=> (or (not (= $generated@@166 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@10 ($generated@@99 $generated@@28 $generated@@39 $generated@@6 $generated@@167 $generated@@166 $generated@@42))) (=> ($generated@@10 ($generated@@99 $generated@@28 $generated@@39 $generated@@6 $generated@@167 $generated@@166 $generated@@42)) (=> (= $generated@@171 ($generated@@36 7)) (=> (and (= $generated@@172 ($generated@@43 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@170 $generated@@166 ($generated@@43 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@170 $generated@@166) $generated@@42 ($generated@@80 $generated@@7 ($generated@@11 $generated@@171))))) ($generated@@34 $generated@@172)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= $generated@@166 $generated@@29)) (not true))) (=> (and (and ($generated@@85 ($generated@@80 $generated@@28 $generated@@166) $generated@@26 $generated@@172) ($generated@@33 $generated@@172 $generated@@166)) (and ($generated@@33 $generated@@172 $generated@@166) (= (ControlFlow 0 5) (- 0 4)))) ($generated@@32 $generated@@172 $generated@@166)))))))))))
(let (($generated@@177  (and (=> (= (ControlFlow 0 14) 5) $generated@@176) (=> (= (ControlFlow 0 14) 10) $generated@@175))))
(let (($generated@@178  (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@166 $generated@@29)) (not true))) (=> (and (and ($generated@@85 ($generated@@80 $generated@@28 $generated@@166) $generated@@26 $generated@@170) ($generated@@33 $generated@@170 $generated@@166)) (and ($generated@@33 $generated@@170 $generated@@166) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@32 $generated@@170 $generated@@166)))))
(let (($generated@@179  (=> (= $generated@@167 ($generated@@100 $generated@@29 $generated@@170 $generated@@1 $generated@@166)) (and (=> (= (ControlFlow 0 15) (- 0 18)) (or (not (= $generated@@166 $generated@@29)) (not true))) (=> (and ($generated@@85 ($generated@@80 $generated@@28 $generated@@166) $generated@@26 $generated@@170) ($generated@@173 $generated@@170 $generated@@166)) (and (=> (= (ControlFlow 0 15) (- 0 17)) (or (not (= $generated@@166 $generated@@29)) (not true))) (=> ($generated@@173 $generated@@170 $generated@@166) (and (=> (= (ControlFlow 0 15) (- 0 16)) (= ($generated@@150 $generated@@170 $generated@@166) ($generated@@12 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@170 $generated@@166) $generated@@42))))) (=> (= ($generated@@150 $generated@@170 $generated@@166) ($generated@@12 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@28 ($generated@@41 $generated@@39 $generated@@40) $generated@@170 $generated@@166) $generated@@42)))) (and (=> (= (ControlFlow 0 15) 2) $generated@@178) (=> (= (ControlFlow 0 15) 14) $generated@@177)))))))))))
(let (($generated@@180  (=> (and ($generated@@34 $generated@@170) ($generated@@142 $generated@@170)) (=> (and (and ($generated@@27 $generated@@28 $generated@@166 $generated@@25) ($generated@@35 $generated@@28 $generated@@166 $generated@@25 $generated@@170)) (and (= 0 $generated@@174) (= (ControlFlow 0 19) 15))) $generated@@179))))
$generated@@180)))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 15) (- 16))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
