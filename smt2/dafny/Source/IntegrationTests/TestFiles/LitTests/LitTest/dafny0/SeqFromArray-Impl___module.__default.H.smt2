(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@T T@T) T@T)
(declare-fun $generated@@44 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@67 (Int) Int)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@72 (Int) T@U)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U Int) T@U)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@121 (T@U) Int)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated@@2) 0))
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and (or (not (= $generated@@30 $generated@@26)) (not true)) (= ($generated@@27 $generated@@30) ($generated@@25 $generated@@29))) ($generated@@28 $generated@@8 ($generated@@12 ($generated@@24 $generated@@30)) $generated))
 :pattern ( ($generated@@24 $generated@@30) ($generated@@25 $generated@@29))
)))
(assert (= ($generated@@6 $generated@@32) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@35 ($generated@@33 $generated@@34) $generated@@36) ($generated@@31 $generated@@32 $generated@@35 ($generated@@25 $generated@@34) $generated@@36))
 :pattern ( ($generated@@31 $generated@@32 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
 :pattern ( ($generated@@31 $generated@@32 $generated@@35 ($generated@@25 $generated@@34) $generated@@36))
)))
(assert (= ($generated@@37 $generated@@38) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@40 $generated@@47 $generated@@48 ($generated@@44 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@51) $generated@@49)
 :weight 0
)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (or (= $generated@@56 $generated@@57) (= ($generated@@40 $generated@@52 $generated@@53 ($generated@@44 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@57) ($generated@@40 $generated@@52 $generated@@53 $generated@@55 $generated@@57)))
 :weight 0
))) (= ($generated@@6 $generated@@41) 4)) (= ($generated@@6 $generated@@42) 5)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (= ($generated@@6 ($generated@@43 $generated@@58 $generated@@59)) 6))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@45 ($generated@@43 $generated@@60 $generated@@61)) $generated@@60)
 :pattern ( ($generated@@43 $generated@@60 $generated@@61))
))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@46 ($generated@@43 $generated@@62 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@43 $generated@@62 $generated@@63))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@65 ($generated@@25 $generated@@64) $generated@@66)  (or (= $generated@@65 $generated@@26) ($generated@@11 ($generated@@39 $generated@@7 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@66 $generated@@65) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@65 ($generated@@25 $generated@@64) $generated@@66))
)))
(assert (forall (($generated@@68 Int) ) (! (= ($generated@@67 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 $generated@@70) $generated@@70)
 :pattern ( ($generated@@69 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 Int) ) (!  (=> (and (and (and ($generated@@73 $generated@@76) (and (or (not (= $generated@@77 $generated@@26)) (not true)) (= ($generated@@27 $generated@@77) ($generated@@25 $generated@@75)))) (and (<= 0 $generated@@78) (< $generated@@78 ($generated@@24 $generated@@77)))) ($generated@@11 ($generated@@39 $generated@@7 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@76 $generated@@77) $generated@@2)))) ($generated@@74 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@76 $generated@@77) ($generated@@72 $generated@@78)) $generated@@75 $generated@@76))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@76 $generated@@77) ($generated@@72 $generated@@78)) ($generated@@25 $generated@@75))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@79 $generated@@81 $generated@@82)  (and (= ($generated@@37 $generated@@81) ($generated@@37 $generated@@82)) (forall (($generated@@83 Int) ) (!  (=> (and (<= 0 $generated@@83) (< $generated@@83 ($generated@@37 $generated@@81))) (= ($generated@@80 $generated@@81 $generated@@83) ($generated@@80 $generated@@82 $generated@@83)))
 :pattern ( ($generated@@80 $generated@@81 $generated@@83))
 :pattern ( ($generated@@80 $generated@@82 $generated@@83))
))))
 :pattern ( ($generated@@79 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 ($generated@@39 $generated@@86 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@39 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@28 $generated@@32 $generated@@88 ($generated@@33 $generated@@87))  (and ($generated@@28 $generated@@32 $generated@@88 ($generated@@25 $generated@@87)) (or (not (= $generated@@88 $generated@@26)) (not true))))
 :pattern ( ($generated@@28 $generated@@32 $generated@@88 ($generated@@33 $generated@@87)))
 :pattern ( ($generated@@28 $generated@@32 $generated@@88 ($generated@@25 $generated@@87)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@74 ($generated@@84 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@31 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@74 ($generated@@84 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ) (!  (and (= ($generated@@23 ($generated@@25 $generated@@94)) $generated@@3) (= ($generated@@93 ($generated@@25 $generated@@94)) $generated@@5))
 :pattern ( ($generated@@25 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (!  (and (= ($generated@@23 ($generated@@33 $generated@@95)) $generated@@4) (= ($generated@@93 ($generated@@33 $generated@@95)) $generated@@5))
 :pattern ( ($generated@@33 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@28 $generated@@32 $generated@@97 ($generated@@25 $generated@@96))  (or (= $generated@@97 $generated@@26) (= ($generated@@27 $generated@@97) ($generated@@25 $generated@@96))))
 :pattern ( ($generated@@28 $generated@@32 $generated@@97 ($generated@@25 $generated@@96)))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (forall (($generated@@101 Int) ) (!  (=> (and (<= 0 $generated@@101) (< $generated@@101 ($generated@@37 ($generated@@98 $generated@@99 $generated@@100)))) (= ($generated@@80 ($generated@@98 $generated@@99 $generated@@100) $generated@@101) ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@99 $generated@@100) ($generated@@72 $generated@@101))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@99 $generated@@100) ($generated@@72 $generated@@101)))
 :pattern ( ($generated@@80 ($generated@@98 $generated@@99 $generated@@100) $generated@@101))
))
 :pattern ( ($generated@@98 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@79 $generated@@102 $generated@@103) (= $generated@@102 $generated@@103))
 :pattern ( ($generated@@79 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@104 $generated@@105 $generated) (and (= ($generated@@84 $generated@@8 ($generated@@39 $generated@@8 $generated@@105)) $generated@@105) ($generated@@28 $generated@@8 ($generated@@39 $generated@@8 $generated@@105) $generated)))
 :pattern ( ($generated@@104 $generated@@105 $generated))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@104 ($generated@@84 $generated@@108 $generated@@106) $generated@@107) ($generated@@28 $generated@@108 $generated@@106 $generated@@107))
 :pattern ( ($generated@@104 ($generated@@84 $generated@@108 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (<= 0 ($generated@@24 $generated@@109))
 :pattern ( ($generated@@24 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (<= 0 ($generated@@37 $generated@@110))
 :pattern ( ($generated@@37 $generated@@110))
)))
(assert (= ($generated@@6 $generated@@111) 7))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@31 $generated@@111 $generated@@113 ($generated@@112 $generated@@114) $generated@@115) (forall (($generated@@116 Int) ) (!  (=> (and (<= 0 $generated@@116) (< $generated@@116 ($generated@@37 $generated@@113))) ($generated@@74 ($generated@@80 $generated@@113 $generated@@116) $generated@@114 $generated@@115))
 :pattern ( ($generated@@80 $generated@@113 $generated@@116))
)))
 :pattern ( ($generated@@31 $generated@@111 $generated@@113 ($generated@@112 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 ($generated@@112 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@112 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@23 ($generated@@112 $generated@@119)) $generated@@1)
 :pattern ( ($generated@@112 $generated@@119))
)))
(assert (forall (($generated@@120 Int) ) (! (= ($generated@@22 ($generated@@72 $generated@@120)) 1)
 :pattern ( ($generated@@72 $generated@@120))
)))
(assert (forall (($generated@@122 Int) ) (! (= ($generated@@121 ($generated@@72 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@72 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@25 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@25 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@33 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@33 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@39 $generated@@128 ($generated@@84 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@84 $generated@@128 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (and ($generated@@73 $generated@@130) (and (or (not (= $generated@@131 $generated@@26)) (not true)) (= ($generated@@27 $generated@@131) ($generated@@25 $generated@@129)))) ($generated@@11 ($generated@@39 $generated@@7 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@130 $generated@@131) $generated@@2)))) ($generated@@31 $generated@@8 ($generated@@12 ($generated@@24 $generated@@131)) $generated $generated@@130))
 :pattern ( ($generated@@24 $generated@@131) ($generated@@39 $generated@@7 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@130 $generated@@131) $generated@@2)) ($generated@@25 $generated@@129))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 Int) ) (!  (=> (and (and ($generated@@73 $generated@@133) (and (or (not (= $generated@@134 $generated@@26)) (not true)) (= ($generated@@27 $generated@@134) ($generated@@25 $generated@@132)))) (and (<= 0 $generated@@135) (< $generated@@135 ($generated@@24 $generated@@134)))) ($generated@@104 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@133 $generated@@134) ($generated@@72 $generated@@135)) $generated@@132))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@133 $generated@@134) ($generated@@72 $generated@@135)) ($generated@@25 $generated@@132))
)))
(assert  (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@136 $generated@@139 $generated@@140 $generated@@141 ($generated@@138 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@144 $generated@@145) $generated@@142)
 :weight 0
)) (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@136 $generated@@146 $generated@@147 $generated@@148 ($generated@@138 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@136 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@136 $generated@@155 $generated@@156 $generated@@157 ($generated@@138 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@136 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@11 ($generated@@136 $generated@@32 $generated@@41 $generated@@7 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@11 ($generated@@39 $generated@@7 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@136 $generated@@32 $generated@@41 $generated@@7 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@37 ($generated@@98 $generated@@170 $generated@@171)) ($generated@@24 $generated@@171))
 :pattern ( ($generated@@37 ($generated@@98 $generated@@170 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@104 $generated@@172 ($generated@@112 $generated@@173)) (and (= ($generated@@84 $generated@@111 ($generated@@39 $generated@@111 $generated@@172)) $generated@@172) ($generated@@28 $generated@@111 ($generated@@39 $generated@@111 $generated@@172) ($generated@@112 $generated@@173))))
 :pattern ( ($generated@@104 $generated@@172 ($generated@@112 $generated@@173)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@104 $generated@@175 ($generated@@25 $generated@@174)) (and (= ($generated@@84 $generated@@32 ($generated@@39 $generated@@32 $generated@@175)) $generated@@175) ($generated@@28 $generated@@32 ($generated@@39 $generated@@32 $generated@@175) ($generated@@25 $generated@@174))))
 :pattern ( ($generated@@104 $generated@@175 ($generated@@25 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@104 $generated@@177 ($generated@@33 $generated@@176)) (and (= ($generated@@84 $generated@@32 ($generated@@39 $generated@@32 $generated@@177)) $generated@@177) ($generated@@28 $generated@@32 ($generated@@39 $generated@@32 $generated@@177) ($generated@@33 $generated@@176))))
 :pattern ( ($generated@@104 $generated@@177 ($generated@@33 $generated@@176)))
)))
(assert (forall (($generated@@178 Int) ) (! (= ($generated@@84 $generated@@8 ($generated@@12 ($generated@@67 $generated@@178))) ($generated@@69 $generated@@42 ($generated@@84 $generated@@8 ($generated@@12 $generated@@178))))
 :pattern ( ($generated@@84 $generated@@8 ($generated@@12 ($generated@@67 $generated@@178))))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@84 $generated@@180 ($generated@@69 $generated@@180 $generated@@179)) ($generated@@69 $generated@@42 ($generated@@84 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@84 $generated@@180 ($generated@@69 $generated@@180 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= ($generated@@37 $generated@@181) 0) (= $generated@@181 $generated@@38))
 :pattern ( ($generated@@37 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! ($generated@@31 $generated@@8 $generated@@183 $generated $generated@@182)
 :pattern ( ($generated@@31 $generated@@8 $generated@@183 $generated $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@28 $generated@@111 $generated@@184 ($generated@@112 $generated@@185)) (forall (($generated@@186 Int) ) (!  (=> (and (<= 0 $generated@@186) (< $generated@@186 ($generated@@37 $generated@@184))) ($generated@@104 ($generated@@80 $generated@@184 $generated@@186) $generated@@185))
 :pattern ( ($generated@@80 $generated@@184 $generated@@186))
)))
 :pattern ( ($generated@@28 $generated@@111 $generated@@184 ($generated@@112 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ) (! ($generated@@28 $generated@@8 $generated@@187 $generated)
 :pattern ( ($generated@@28 $generated@@8 $generated@@187 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 74) (let (($generated@@205  (=> (= (ControlFlow 0 62) (- 0 61)) (forall (($generated@@206 Int) ) (!  (=> (and (<= ($generated@@67 0) $generated@@206) (< $generated@@206 $generated@@190)) (= ($generated@@13 ($generated@@39 $generated@@8 ($generated@@80 $generated@@189 $generated@@206))) ($generated@@13 ($generated@@39 $generated@@8 ($generated@@80 $generated@@188 $generated@@206)))))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@80 $generated@@188 $generated@@206)))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@80 $generated@@189 $generated@@206)))
)))))
(let (($generated@@207  (=> (and (not (and (<= ($generated@@67 0) $generated@@191) (< $generated@@191 $generated@@190))) (= (ControlFlow 0 66) 62)) $generated@@205)))
(let (($generated@@208  (=> (and (<= ($generated@@67 0) $generated@@191) (< $generated@@191 $generated@@190)) (and (=> (= (ControlFlow 0 63) (- 0 65)) (and (<= 0 $generated@@191) (< $generated@@191 ($generated@@37 $generated@@189)))) (and (=> (= (ControlFlow 0 63) (- 0 64)) (and (<= 0 $generated@@191) (< $generated@@191 ($generated@@37 $generated@@188)))) (=> (= (ControlFlow 0 63) 62) $generated@@205))))))
(let (($generated@@209  (=> (< $generated@@191 ($generated@@67 0)) (and (=> (= (ControlFlow 0 68) 63) $generated@@208) (=> (= (ControlFlow 0 68) 66) $generated@@207)))))
(let (($generated@@210  (=> (<= ($generated@@67 0) $generated@@191) (and (=> (= (ControlFlow 0 67) 63) $generated@@208) (=> (= (ControlFlow 0 67) 66) $generated@@207)))))
(let (($generated@@211  (and (=> (= (ControlFlow 0 69) 67) $generated@@210) (=> (= (ControlFlow 0 69) 68) $generated@@209))))
(let (($generated@@212 true))
(let (($generated@@213  (=> ($generated@@79 $generated@@189 $generated@@188) (and (=> (= (ControlFlow 0 70) 69) $generated@@211) (=> (= (ControlFlow 0 70) 60) $generated@@212)))))
(let (($generated@@214  (=> (= (ControlFlow 0 49) (- 0 48)) (forall (($generated@@215 Int) ) (!  (=> (and (<= ($generated@@67 0) $generated@@215) (< $generated@@215 $generated@@190)) (= ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@194) ($generated@@72 $generated@@215)))) ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@193) ($generated@@72 $generated@@215))))))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@193) ($generated@@72 $generated@@215))))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@194) ($generated@@72 $generated@@215))))
)))))
(let (($generated@@216  (=> (and (not (and (<= ($generated@@67 0) $generated@@195) (< $generated@@195 $generated@@190))) (= (ControlFlow 0 55) 49)) $generated@@214)))
(let (($generated@@217  (=> (and (<= ($generated@@67 0) $generated@@195) (< $generated@@195 $generated@@190)) (and (=> (= (ControlFlow 0 50) (- 0 54)) (or (not (= $generated@@194 $generated@@26)) (not true))) (=> (or (not (= $generated@@194 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 50) (- 0 53)) (and (<= 0 $generated@@195) (< $generated@@195 ($generated@@24 $generated@@194)))) (and (=> (= (ControlFlow 0 50) (- 0 52)) (or (not (= $generated@@193 $generated@@26)) (not true))) (=> (or (not (= $generated@@193 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 50) (- 0 51)) (and (<= 0 $generated@@195) (< $generated@@195 ($generated@@24 $generated@@193)))) (=> (= (ControlFlow 0 50) 49) $generated@@214))))))))))
(let (($generated@@218  (=> (< $generated@@195 ($generated@@67 0)) (and (=> (= (ControlFlow 0 57) 50) $generated@@217) (=> (= (ControlFlow 0 57) 55) $generated@@216)))))
(let (($generated@@219  (=> (<= ($generated@@67 0) $generated@@195) (and (=> (= (ControlFlow 0 56) 50) $generated@@217) (=> (= (ControlFlow 0 56) 55) $generated@@216)))))
(let (($generated@@220  (and (=> (= (ControlFlow 0 58) 56) $generated@@219) (=> (= (ControlFlow 0 58) 57) $generated@@218))))
(let (($generated@@221 true))
(let (($generated@@222  (=> ($generated@@79 $generated@@189 $generated@@188) (and (=> (= (ControlFlow 0 59) 58) $generated@@220) (=> (= (ControlFlow 0 59) 47) $generated@@221)))))
(let (($generated@@223  (=> (= (ControlFlow 0 29) (- 0 28)) (forall (($generated@@224 Int) ) (!  (=> (and (<= ($generated@@67 0) $generated@@224) (< $generated@@224 $generated@@190)) (= ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@194) ($generated@@72 $generated@@224)))) ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@193) ($generated@@72 $generated@@224))))))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@193) ($generated@@72 $generated@@224))))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@194) ($generated@@72 $generated@@224))))
)))))
(let (($generated@@225  (=> (and (not (and (<= ($generated@@67 0) $generated@@196) (< $generated@@196 $generated@@190))) (= (ControlFlow 0 35) 29)) $generated@@223)))
(let (($generated@@226  (=> (and (<= ($generated@@67 0) $generated@@196) (< $generated@@196 $generated@@190)) (and (=> (= (ControlFlow 0 30) (- 0 34)) (or (not (= $generated@@194 $generated@@26)) (not true))) (=> (or (not (= $generated@@194 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 30) (- 0 33)) (and (<= 0 $generated@@196) (< $generated@@196 ($generated@@24 $generated@@194)))) (and (=> (= (ControlFlow 0 30) (- 0 32)) (or (not (= $generated@@193 $generated@@26)) (not true))) (=> (or (not (= $generated@@193 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (and (<= 0 $generated@@196) (< $generated@@196 ($generated@@24 $generated@@193)))) (=> (= (ControlFlow 0 30) 29) $generated@@223))))))))))
(let (($generated@@227  (=> (< $generated@@196 ($generated@@67 0)) (and (=> (= (ControlFlow 0 37) 30) $generated@@226) (=> (= (ControlFlow 0 37) 35) $generated@@225)))))
(let (($generated@@228  (=> (<= ($generated@@67 0) $generated@@196) (and (=> (= (ControlFlow 0 36) 30) $generated@@226) (=> (= (ControlFlow 0 36) 35) $generated@@225)))))
(let (($generated@@229  (and (=> (= (ControlFlow 0 38) 36) $generated@@228) (=> (= (ControlFlow 0 38) 37) $generated@@227))))
(let (($generated@@230 true))
(let (($generated@@231  (=> (forall (($generated@@232 Int) ) (!  (=> (and (<= ($generated@@67 0) $generated@@232) (< $generated@@232 $generated@@190)) (= ($generated@@13 ($generated@@39 $generated@@8 ($generated@@80 $generated@@189 $generated@@232))) ($generated@@13 ($generated@@39 $generated@@8 ($generated@@80 $generated@@188 $generated@@232)))))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@80 $generated@@188 $generated@@232)))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@80 $generated@@189 $generated@@232)))
)) (and (=> (= (ControlFlow 0 39) 38) $generated@@229) (=> (= (ControlFlow 0 39) 27) $generated@@230)))))
(let (($generated@@233  (=> (and (not (and (<= ($generated@@67 0) $generated@@197) (< $generated@@197 $generated@@190))) (= (ControlFlow 0 43) 39)) $generated@@231)))
(let (($generated@@234  (=> (and (<= ($generated@@67 0) $generated@@197) (< $generated@@197 $generated@@190)) (and (=> (= (ControlFlow 0 40) (- 0 42)) (and (<= 0 $generated@@197) (< $generated@@197 ($generated@@37 $generated@@189)))) (=> (and (<= 0 $generated@@197) (< $generated@@197 ($generated@@37 $generated@@189))) (and (=> (= (ControlFlow 0 40) (- 0 41)) (and (<= 0 $generated@@197) (< $generated@@197 ($generated@@37 $generated@@188)))) (=> (and (<= 0 $generated@@197) (< $generated@@197 ($generated@@37 $generated@@188))) (=> (= (ControlFlow 0 40) 39) $generated@@231))))))))
(let (($generated@@235  (=> (< $generated@@197 ($generated@@67 0)) (and (=> (= (ControlFlow 0 45) 40) $generated@@234) (=> (= (ControlFlow 0 45) 43) $generated@@233)))))
(let (($generated@@236  (=> (<= ($generated@@67 0) $generated@@197) (and (=> (= (ControlFlow 0 44) 40) $generated@@234) (=> (= (ControlFlow 0 44) 43) $generated@@233)))))
(let (($generated@@237  (and (=> (= (ControlFlow 0 46) 44) $generated@@236) (=> (= (ControlFlow 0 46) 45) $generated@@235))))
(let (($generated@@238  (=> (forall (($generated@@239 Int) ) (!  (=> (and (<= ($generated@@67 0) $generated@@239) (< $generated@@239 $generated@@190)) (= ($generated@@13 ($generated@@39 $generated@@8 ($generated@@80 $generated@@189 $generated@@239))) ($generated@@13 ($generated@@39 $generated@@8 ($generated@@80 $generated@@188 $generated@@239)))))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@80 $generated@@188 $generated@@239)))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@80 $generated@@189 $generated@@239)))
)) (and (=> (= (ControlFlow 0 15) (- 0 19)) (or (not (= $generated@@194 $generated@@26)) (not true))) (=> (or (not (= $generated@@194 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 15) (- 0 18)) (and (<= 0 $generated@@198) (< $generated@@198 ($generated@@24 $generated@@194)))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (or (not (= $generated@@193 $generated@@26)) (not true))) (=> (or (not (= $generated@@193 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= 0 $generated@@198) (< $generated@@198 ($generated@@24 $generated@@193)))) (=> (= (ControlFlow 0 15) (- 0 14)) (= ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@194) ($generated@@72 $generated@@198)))) ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@193) ($generated@@72 $generated@@198)))))))))))))))
(let (($generated@@240  (=> (and (not (and (<= ($generated@@67 0) $generated@@199) (< $generated@@199 $generated@@190))) (= (ControlFlow 0 23) 15)) $generated@@238)))
(let (($generated@@241  (=> (and (<= ($generated@@67 0) $generated@@199) (< $generated@@199 $generated@@190)) (and (=> (= (ControlFlow 0 20) (- 0 22)) (and (<= 0 $generated@@199) (< $generated@@199 ($generated@@37 $generated@@189)))) (=> (and (<= 0 $generated@@199) (< $generated@@199 ($generated@@37 $generated@@189))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (and (<= 0 $generated@@199) (< $generated@@199 ($generated@@37 $generated@@188)))) (=> (and (<= 0 $generated@@199) (< $generated@@199 ($generated@@37 $generated@@188))) (=> (= (ControlFlow 0 20) 15) $generated@@238))))))))
(let (($generated@@242  (=> (< $generated@@199 ($generated@@67 0)) (and (=> (= (ControlFlow 0 25) 20) $generated@@241) (=> (= (ControlFlow 0 25) 23) $generated@@240)))))
(let (($generated@@243  (=> (<= ($generated@@67 0) $generated@@199) (and (=> (= (ControlFlow 0 24) 20) $generated@@241) (=> (= (ControlFlow 0 24) 23) $generated@@240)))))
(let (($generated@@244  (and (=> (= (ControlFlow 0 26) 24) $generated@@243) (=> (= (ControlFlow 0 26) 25) $generated@@242))))
(let (($generated@@245 true))
(let (($generated@@246 true))
(let (($generated@@247  (=> (and (and (and (and (and (and (or (not (= ($generated@@13 ($generated@@39 $generated@@8 ($generated@@80 $generated@@189 $generated@@198))) ($generated@@13 ($generated@@39 $generated@@8 ($generated@@80 $generated@@188 $generated@@198))))) (not true)) (not (forall (($generated@@248 Int) ) (!  (=> (and (<= ($generated@@67 0) $generated@@248) (< $generated@@248 $generated@@190)) (= ($generated@@13 ($generated@@39 $generated@@8 ($generated@@80 $generated@@189 $generated@@248))) ($generated@@13 ($generated@@39 $generated@@8 ($generated@@80 $generated@@188 $generated@@248)))))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@80 $generated@@188 $generated@@248)))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@80 $generated@@189 $generated@@248)))
)))) (not (forall (($generated@@249 Int) ) (!  (=> (and (<= ($generated@@67 0) $generated@@249) (< $generated@@249 $generated@@190)) (= ($generated@@13 ($generated@@39 $generated@@8 ($generated@@80 $generated@@189 $generated@@249))) ($generated@@13 ($generated@@39 $generated@@8 ($generated@@80 $generated@@188 $generated@@249)))))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@80 $generated@@188 $generated@@249)))
 :pattern ( ($generated@@39 $generated@@8 ($generated@@80 $generated@@189 $generated@@249)))
)))) (not ($generated@@79 $generated@@189 $generated@@188))) (not ($generated@@79 $generated@@189 $generated@@188))) (not ($generated@@11 ($generated@@69 $generated@@7 ($generated@@10 true))))) (= (ControlFlow 0 11) (- 0 10))) false)))
(let (($generated@@250 true))
(let (($generated@@251  (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= 0 $generated@@198) (< $generated@@198 ($generated@@37 $generated@@189)))) (=> (and (<= 0 $generated@@198) (< $generated@@198 ($generated@@37 $generated@@189))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= 0 $generated@@198) (< $generated@@198 ($generated@@37 $generated@@188)))) (=> (and (<= 0 $generated@@198) (< $generated@@198 ($generated@@37 $generated@@188))) (=> (= ($generated@@13 ($generated@@39 $generated@@8 ($generated@@80 $generated@@189 $generated@@198))) ($generated@@13 ($generated@@39 $generated@@8 ($generated@@80 $generated@@188 $generated@@198)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (not (= $generated@@194 $generated@@26)) (not true))) (=> (or (not (= $generated@@194 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 $generated@@198) (< $generated@@198 ($generated@@24 $generated@@194)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@193 $generated@@26)) (not true))) (=> (or (not (= $generated@@193 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@198) (< $generated@@198 ($generated@@24 $generated@@193)))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@194) ($generated@@72 $generated@@198)))) ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@32 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@193) ($generated@@72 $generated@@198)))))))))))))))))))
(let (($generated@@252  (=> (= $generated@@200 ($generated@@137 $generated@@26 $generated@@192 $generated@@2 false)) (and (=> (= (ControlFlow 0 71) (- 0 73)) (or (not (= $generated@@194 $generated@@26)) (not true))) (=> (or (not (= $generated@@194 $generated@@26)) (not true)) (=> (= $generated@@189 ($generated@@98 $generated@@192 $generated@@194)) (and (=> (= (ControlFlow 0 71) (- 0 72)) (or (not (= $generated@@193 $generated@@26)) (not true))) (=> (or (not (= $generated@@193 $generated@@26)) (not true)) (=> (= $generated@@188 ($generated@@98 $generated@@192 $generated@@193)) (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 71) 2) $generated@@251) (=> (= (ControlFlow 0 71) 70) $generated@@213)) (=> (= (ControlFlow 0 71) 59) $generated@@222)) (=> (= (ControlFlow 0 71) 9) $generated@@250)) (=> (= (ControlFlow 0 71) 11) $generated@@247)) (=> (= (ControlFlow 0 71) 46) $generated@@237)) (=> (= (ControlFlow 0 71) 12) $generated@@246)) (=> (= (ControlFlow 0 71) 26) $generated@@244)) (=> (= (ControlFlow 0 71) 13) $generated@@245)))))))))))
(let (($generated@@253  (=> (and (and ($generated@@73 $generated@@192) ($generated@@201 $generated@@192)) (and ($generated@@28 $generated@@32 $generated@@194 ($generated@@33 $generated)) ($generated@@31 $generated@@32 $generated@@194 ($generated@@33 $generated) $generated@@192))) (=> (and (and (and ($generated@@28 $generated@@32 $generated@@193 ($generated@@33 $generated)) ($generated@@31 $generated@@32 $generated@@193 ($generated@@33 $generated) $generated@@192)) (and (<= ($generated@@67 0) $generated@@190) (<= ($generated@@67 0) $generated@@198))) (and (and ($generated@@28 $generated@@111 $generated@@202 ($generated@@112 $generated)) ($generated@@31 $generated@@111 $generated@@202 ($generated@@112 $generated) $generated@@192)) true)) (=> (and (and (and (and ($generated@@28 $generated@@111 $generated@@203 ($generated@@112 $generated)) ($generated@@31 $generated@@111 $generated@@203 ($generated@@112 $generated) $generated@@192)) true) (= 0 $generated@@204)) (and (and (< $generated@@198 $generated@@190) (= $generated@@190 ($generated@@24 $generated@@194))) (and (= ($generated@@24 $generated@@194) ($generated@@24 $generated@@193)) (= (ControlFlow 0 74) 71)))) $generated@@252)))))
$generated@@253)))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
