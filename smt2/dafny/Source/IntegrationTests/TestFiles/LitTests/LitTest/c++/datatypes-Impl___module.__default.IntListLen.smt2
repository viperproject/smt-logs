(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@T T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (Int T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@93 (T@U) Int)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@101 (T@U) Int)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@6 $generated@@23) 3))
(assert (forall (($generated@@27 Int) ($generated@@28 T@U) ) (! (= ($generated@@22 $generated@@23 ($generated@@24 $generated@@27 $generated@@28) $generated@@25)  (and ($generated@@22 $generated@@8 ($generated@@12 $generated@@27) $generated@@26) ($generated@@22 $generated@@23 $generated@@28 $generated@@25)))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@24 $generated@@27 $generated@@28) $generated@@25))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (! ($generated@@29 $generated@@8 $generated@@30 $generated@@26 $generated@@31)
 :pattern ( ($generated@@29 $generated@@8 $generated@@30 $generated@@26 $generated@@31))
)))
(assert (= ($generated@@32 $generated@@33) $generated@@2))
(assert ($generated@@22 $generated@@23 $generated@@33 $generated@@25))
(assert  (and (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@35 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@35 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@35 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@6 $generated@@36) 4)) (= ($generated@@6 $generated@@37) 5)) (= ($generated@@6 $generated@@38) 6)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@6 ($generated@@39 $generated@@55 $generated@@56)) 7))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@39 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@39 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@39 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> ($generated@@34 $generated@@61 $generated@@62) (forall (($generated@@63 T@U) ) (!  (=> ($generated@@11 ($generated@@40 $generated@@7 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@61 $generated@@63) $generated))) ($generated@@11 ($generated@@40 $generated@@7 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@62 $generated@@63) $generated))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@62 $generated@@63) $generated))
)))
 :pattern ( ($generated@@34 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@64 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 $generated@@70) (= ($generated@@32 $generated@@70) $generated@@2))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 $generated@@72) (= ($generated@@32 $generated@@72) $generated@@3))
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@40 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@40 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@71 $generated@@76) (exists (($generated@@77 Int) ($generated@@78 T@U) ) (= $generated@@76 ($generated@@24 $generated@@77 $generated@@78))))
 :pattern ( ($generated@@71 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@69 $generated@@79) (= $generated@@79 $generated@@33))
 :pattern ( ($generated@@69 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (!  (=> ($generated@@34 $generated@@80 $generated@@81) (=> ($generated@@29 $generated@@84 $generated@@82 $generated@@83 $generated@@80) ($generated@@29 $generated@@84 $generated@@82 $generated@@83 $generated@@81)))
 :pattern ( ($generated@@34 $generated@@80 $generated@@81) ($generated@@29 $generated@@84 $generated@@82 $generated@@83 $generated@@80))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@85 $generated@@86) (or ($generated@@69 $generated@@86) ($generated@@71 $generated@@86)))
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@22 $generated@@23 $generated@@87 $generated@@25) (or ($generated@@69 $generated@@87) ($generated@@71 $generated@@87)))
 :pattern ( ($generated@@71 $generated@@87) ($generated@@22 $generated@@23 $generated@@87 $generated@@25))
 :pattern ( ($generated@@69 $generated@@87) ($generated@@22 $generated@@23 $generated@@87 $generated@@25))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (or (not (= $generated@@88 $generated@@90)) (not true)) (=> (and ($generated@@34 $generated@@88 $generated@@89) ($generated@@34 $generated@@89 $generated@@90)) ($generated@@34 $generated@@88 $generated@@90)))
 :pattern ( ($generated@@34 $generated@@88 $generated@@89) ($generated@@34 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 Int) ($generated@@92 T@U) ) (! (= ($generated@@32 ($generated@@24 $generated@@91 $generated@@92)) $generated@@3)
 :pattern ( ($generated@@24 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 Int) ($generated@@95 T@U) ) (! (= ($generated@@93 ($generated@@24 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@24 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 Int) ($generated@@98 T@U) ) (! (= ($generated@@96 ($generated@@24 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@24 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@40 $generated@@100 ($generated@@73 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@73 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@102 Int) ($generated@@103 T@U) ) (! (< ($generated@@101 $generated@@103) ($generated@@101 ($generated@@24 $generated@@102 $generated@@103)))
 :pattern ( ($generated@@24 $generated@@102 $generated@@103))
)))
(assert  (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@104 $generated@@107 $generated@@108 $generated@@109 ($generated@@106 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@112 $generated@@113) $generated@@110)
 :weight 0
)) (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@104 $generated@@114 $generated@@115 $generated@@116 ($generated@@106 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@104 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@104 $generated@@123 $generated@@124 $generated@@125 ($generated@@106 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@104 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 Bool) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@11 ($generated@@104 $generated@@38 $generated@@36 $generated@@7 ($generated@@105 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@136 $generated@@137))  (=> (and (or (not (= $generated@@136 $generated@@132)) (not true)) ($generated@@11 ($generated@@40 $generated@@7 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@133 $generated@@136) $generated@@134)))) $generated@@135))
 :pattern ( ($generated@@104 $generated@@38 $generated@@36 $generated@@7 ($generated@@105 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and ($generated@@138 $generated@@140) ($generated@@22 $generated@@23 $generated@@139 $generated@@25)) ($generated@@29 $generated@@23 $generated@@139 $generated@@25 $generated@@140))
 :pattern ( ($generated@@29 $generated@@23 $generated@@139 $generated@@25 $generated@@140))
)))
(assert (= ($generated@@141 $generated@@26) $generated@@0))
(assert (= ($generated@@142 $generated@@26) $generated@@4))
(assert (= ($generated@@141 $generated@@25) $generated@@1))
(assert (= ($generated@@142 $generated@@25) $generated@@5))
(assert (= $generated@@33 ($generated@@66 $generated@@23 $generated@@33)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and ($generated@@138 $generated@@144) (and ($generated@@71 $generated@@143) ($generated@@29 $generated@@23 $generated@@143 $generated@@25 $generated@@144))) ($generated@@29 $generated@@8 ($generated@@12 ($generated@@93 $generated@@143)) $generated@@26 $generated@@144))
 :pattern ( ($generated@@29 $generated@@8 ($generated@@12 ($generated@@93 $generated@@143)) $generated@@26 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and ($generated@@138 $generated@@146) (and ($generated@@71 $generated@@145) ($generated@@29 $generated@@23 $generated@@145 $generated@@25 $generated@@146))) ($generated@@29 $generated@@23 ($generated@@96 $generated@@145) $generated@@25 $generated@@146))
 :pattern ( ($generated@@29 $generated@@23 ($generated@@96 $generated@@145) $generated@@25 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@22 $generated@@8 $generated@@147 $generated@@26)  (and (<= ($generated@@64 0) ($generated@@13 $generated@@147)) (< ($generated@@13 $generated@@147) 4294967296)))
 :pattern ( ($generated@@22 $generated@@8 $generated@@147 $generated@@26))
)))
(assert (forall (($generated@@148 Int) ($generated@@149 T@U) ) (! (= ($generated@@24 ($generated@@64 $generated@@148) ($generated@@66 $generated@@23 $generated@@149)) ($generated@@66 $generated@@23 ($generated@@24 $generated@@148 $generated@@149)))
 :pattern ( ($generated@@24 ($generated@@64 $generated@@148) ($generated@@66 $generated@@23 $generated@@149)))
)))
(assert (forall (($generated@@150 Int) ) (! (= ($generated@@73 $generated@@8 ($generated@@12 ($generated@@64 $generated@@150))) ($generated@@66 $generated@@37 ($generated@@73 $generated@@8 ($generated@@12 $generated@@150))))
 :pattern ( ($generated@@73 $generated@@8 ($generated@@12 ($generated@@64 $generated@@150))))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@73 $generated@@152 ($generated@@66 $generated@@152 $generated@@151)) ($generated@@66 $generated@@37 ($generated@@73 $generated@@152 $generated@@151)))
 :pattern ( ($generated@@73 $generated@@152 ($generated@@66 $generated@@152 $generated@@151)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () Int)
(declare-fun $generated@@173 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@174 true))
(let (($generated@@175  (=> (and (< $generated@@153 4294967295) (= $generated@@154 ($generated@@64 1))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= ($generated@@64 0) $generated@@154) (< $generated@@154 4294967296))) (=> (and (<= ($generated@@64 0) $generated@@154) (< $generated@@154 4294967296)) (=> (and (= $generated@@155 (+ $generated@@153 1)) (= (ControlFlow 0 5) (- 0 4))) (and (<= ($generated@@64 0) $generated@@155) (< $generated@@155 4294967296))))))))
(let (($generated@@176  (=> (= $generated@@156 ($generated@@24 $generated@@157 $generated@@158)) (=> (and (and (<= ($generated@@64 0) $generated@@157) (< $generated@@157 4294967296)) (and ($generated@@22 $generated@@23 $generated@@158 $generated@@25) ($generated@@29 $generated@@23 $generated@@158 $generated@@25 $generated@@159))) (=> (and (and (and (and ($generated@@22 $generated@@23 $generated@@160 $generated@@25) ($generated@@29 $generated@@23 $generated@@160 $generated@@25 $generated@@159)) (= $generated@@161 $generated@@158)) (and ($generated@@22 $generated@@23 $generated@@161 $generated@@25) (= $generated@@160 $generated@@161))) (and (and (and (<= ($generated@@64 0) $generated@@162) (< $generated@@162 4294967296)) (= $generated@@163 $generated@@157)) (and ($generated@@22 $generated@@8 ($generated@@12 $generated@@163) $generated@@26) (= $generated@@162 $generated@@163)))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (< ($generated@@101 $generated@@160) ($generated@@101 $generated@@156))) (=> (< ($generated@@101 $generated@@160) ($generated@@101 $generated@@156)) (=> (and (and (<= ($generated@@64 0) $generated@@164) (< $generated@@164 4294967296)) (and ($generated@@138 $generated@@165) ($generated@@166 $generated@@165))) (=> (and (and (and (<= ($generated@@64 0) $generated@@153) (< $generated@@153 4294967296)) (forall (($generated@@177 T@U) ) (!  (=> (and (or (not (= $generated@@177 $generated@@167)) (not true)) ($generated@@11 ($generated@@40 $generated@@7 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@159 $generated@@177) $generated)))) (= ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@165 $generated@@177) ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@159 $generated@@177)))
 :pattern ( ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@165 $generated@@177))
))) (and ($generated@@34 $generated@@159 $generated@@165) (= $generated@@168 ($generated@@64 4294967295)))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= ($generated@@64 0) $generated@@168) (< $generated@@168 4294967296))) (=> (and (<= ($generated@@64 0) $generated@@168) (< $generated@@168 4294967296)) (and (=> (= (ControlFlow 0 8) 5) $generated@@175) (=> (= (ControlFlow 0 8) 7) $generated@@174)))))))))))))
(let (($generated@@178 true))
(let (($generated@@179  (=> (or (not (= $generated@@156 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 11) 8) $generated@@176) (=> (= (ControlFlow 0 11) 3) $generated@@178)))))
(let (($generated@@180  (=> (= $generated@@156 $generated@@33) (=> (and (= $generated@@169 ($generated@@64 0)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@64 0) $generated@@169) (< $generated@@169 4294967296))))))
(let (($generated@@181  (=> (= $generated@@170 ($generated@@105 $generated@@167 $generated@@159 $generated false)) (and (=> (= (ControlFlow 0 12) 2) $generated@@180) (=> (= (ControlFlow 0 12) 11) $generated@@179)))))
(let (($generated@@182  (=> (and ($generated@@138 $generated@@159) ($generated@@166 $generated@@159)) (=> (and (and (and (and ($generated@@22 $generated@@23 $generated@@156 $generated@@25) ($generated@@29 $generated@@23 $generated@@156 $generated@@25 $generated@@159)) ($generated@@85 $generated@@156)) (and (<= ($generated@@64 0) $generated@@171) (< $generated@@171 4294967296))) (and (and (and (<= ($generated@@64 0) $generated@@172) (< $generated@@172 4294967296)) true) (and (= 2 $generated@@173) (= (ControlFlow 0 13) 12)))) $generated@@181))))
$generated@@182)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
