(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@23 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) Int)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@66 (Int) Int)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@77 (T@T T@U T@U) Bool)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@122 (Int) T@U)
(declare-fun $generated@@123 (T@U) Int)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (! ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22)
 :pattern ( ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22))
)))
(assert  (and (and (forall (($generated@@29 T@T) ($generated@@30 T@T) ($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@23 $generated@@29 $generated@@30 ($generated@@28 $generated@@29 $generated@@30 $generated@@32 $generated@@33 $generated@@31) $generated@@33) $generated@@31)
 :weight 0
)) (forall (($generated@@34 T@T) ($generated@@35 T@T) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (or (= $generated@@38 $generated@@39) (= ($generated@@23 $generated@@34 $generated@@35 ($generated@@28 $generated@@34 $generated@@35 $generated@@37 $generated@@38 $generated@@36) $generated@@39) ($generated@@23 $generated@@34 $generated@@35 $generated@@37 $generated@@39)))
 :weight 0
))) (= ($generated@@3 $generated@@24) 3)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@8 ($generated@@23 $generated@@24 $generated@@4 ($generated@@25 $generated@@40 $generated@@41) $generated@@42))  (and ($generated@@26 $generated@@42 $generated@@40) ($generated@@27 $generated@@41 $generated@@42)))
 :pattern ( ($generated@@23 $generated@@24 $generated@@4 ($generated@@25 $generated@@40 $generated@@41) $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ) (!  (not ($generated@@27 $generated@@43 $generated@@44))
 :pattern ( ($generated@@27 $generated@@43 $generated@@44))
)))
(assert (= ($generated@@45 $generated@@46) 0))
(assert (forall (($generated@@48 T@U) ) (!  (and (= (= ($generated@@47 $generated@@48) 0) (= $generated@@48 $generated@@43)) (=> (or (not (= ($generated@@47 $generated@@48) 0)) (not true)) (exists (($generated@@49 T@U) ) (! ($generated@@27 $generated@@48 $generated@@49)
 :pattern ( ($generated@@27 $generated@@48 $generated@@49))
))))
 :pattern ( ($generated@@47 $generated@@48))
)))
(assert  (and (and (and (and (= ($generated@@3 $generated@@51) 4) (= ($generated@@3 $generated@@52) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@3 ($generated@@53 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@55 ($generated@@53 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@53 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@56 ($generated@@53 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@53 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> ($generated@@50 $generated@@63 $generated@@64) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@8 ($generated@@54 $generated@@4 ($generated@@23 $generated@@51 $generated@@24 ($generated@@23 $generated@@52 ($generated@@53 $generated@@51 $generated@@24) $generated@@63 $generated@@65) $generated@@0))) ($generated@@8 ($generated@@54 $generated@@4 ($generated@@23 $generated@@51 $generated@@24 ($generated@@23 $generated@@52 ($generated@@53 $generated@@51 $generated@@24) $generated@@64 $generated@@65) $generated@@0))))
 :pattern ( ($generated@@23 $generated@@51 $generated@@24 ($generated@@23 $generated@@52 ($generated@@53 $generated@@51 $generated@@24) $generated@@64 $generated@@65) $generated@@0))
)))
 :pattern ( ($generated@@50 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 Int) ) (! (= ($generated@@66 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 $generated@@69) $generated@@69)
 :pattern ( ($generated@@68 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 ($generated@@54 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@54 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@27 ($generated@@74 $generated@@75) $generated@@76) ($generated@@8 ($generated@@23 $generated@@24 $generated@@4 $generated@@75 $generated@@76)))
 :pattern ( ($generated@@27 ($generated@@74 $generated@@75) $generated@@76))
)))
(assert (= ($generated@@3 $generated@@78) 7))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@77 $generated@@78 $generated@@80 ($generated@@79 $generated@@81)) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@27 $generated@@80 $generated@@82) ($generated@@26 $generated@@82 $generated@@81))
 :pattern ( ($generated@@27 $generated@@80 $generated@@82))
)))
 :pattern ( ($generated@@77 $generated@@78 $generated@@80 ($generated@@79 $generated@@81)))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@45 ($generated@@83 $generated@@84 $generated@@85)) (+ 1 ($generated@@45 $generated@@84)))
 :pattern ( ($generated@@83 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@86 ($generated@@71 $generated@@90 $generated@@87) $generated@@88 $generated@@89) ($generated@@19 $generated@@90 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@86 ($generated@@71 $generated@@90 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@50 $generated@@91 $generated@@92) (=> ($generated@@86 $generated@@93 $generated@@94 $generated@@91) ($generated@@86 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@50 $generated@@91 $generated@@92) ($generated@@86 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (!  (=> ($generated@@50 $generated@@95 $generated@@96) (=> ($generated@@19 $generated@@99 $generated@@97 $generated@@98 $generated@@95) ($generated@@19 $generated@@99 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@50 $generated@@95 $generated@@96) ($generated@@19 $generated@@99 $generated@@97 $generated@@98 $generated@@95))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@26 $generated@@100 $generated@@20) (and (= ($generated@@71 $generated@@5 ($generated@@54 $generated@@5 $generated@@100)) $generated@@100) ($generated@@77 $generated@@5 ($generated@@54 $generated@@5 $generated@@100) $generated@@20)))
 :pattern ( ($generated@@26 $generated@@100 $generated@@20))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@101 $generated@@102 $generated@@103) (= $generated@@102 $generated@@103))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or (not (= $generated@@104 $generated@@106)) (not true)) (=> (and ($generated@@50 $generated@@104 $generated@@105) ($generated@@50 $generated@@105 $generated@@106)) ($generated@@50 $generated@@104 $generated@@106)))
 :pattern ( ($generated@@50 $generated@@104 $generated@@105) ($generated@@50 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@26 ($generated@@71 $generated@@109 $generated@@107) $generated@@108) ($generated@@77 $generated@@109 $generated@@107 $generated@@108))
 :pattern ( ($generated@@26 ($generated@@71 $generated@@109 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! (<= 0 ($generated@@47 $generated@@110))
 :pattern ( ($generated@@47 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (<= 0 ($generated@@45 $generated@@111))
 :pattern ( ($generated@@45 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@19 $generated@@78 $generated@@112 ($generated@@79 $generated@@113) $generated@@114) (forall (($generated@@115 T@U) ) (!  (=> ($generated@@27 $generated@@112 $generated@@115) ($generated@@86 $generated@@115 $generated@@113 $generated@@114))
 :pattern ( ($generated@@27 $generated@@112 $generated@@115))
)))
 :pattern ( ($generated@@19 $generated@@78 $generated@@112 ($generated@@79 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@79 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@79 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@79 $generated@@119)) $generated)
 :pattern ( ($generated@@79 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@54 $generated@@121 ($generated@@71 $generated@@121 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@71 $generated@@121 $generated@@120))
)))
(assert (forall (($generated@@124 Int) ) (!  (=> (or (and (<= 0 $generated@@124) (< $generated@@124 55296)) (and (<= 57344 $generated@@124) (< $generated@@124 1114112))) (= ($generated@@123 ($generated@@122 $generated@@124)) $generated@@124))
 :pattern ( ($generated@@122 $generated@@124))
)))
(assert  (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@125 $generated@@128 $generated@@129 $generated@@130 ($generated@@127 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@133 $generated@@134) $generated@@131)
 :weight 0
)) (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@125 $generated@@135 $generated@@136 $generated@@137 ($generated@@127 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@125 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@125 $generated@@144 $generated@@145 $generated@@146 ($generated@@127 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@125 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Bool) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@8 ($generated@@125 $generated@@52 $generated@@51 $generated@@4 ($generated@@126 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))  (=> (and (or (not (= $generated@@157 $generated@@153)) (not true)) ($generated@@8 ($generated@@54 $generated@@4 ($generated@@23 $generated@@51 $generated@@24 ($generated@@23 $generated@@52 ($generated@@53 $generated@@51 $generated@@24) $generated@@154 $generated@@157) $generated@@155)))) $generated@@156))
 :pattern ( ($generated@@125 $generated@@52 $generated@@51 $generated@@4 ($generated@@126 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (and (= ($generated@@159 ($generated@@83 $generated@@161 $generated@@162)) $generated@@161) (= ($generated@@160 ($generated@@83 $generated@@161 $generated@@162)) $generated@@162))
 :pattern ( ($generated@@83 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@26 $generated@@163 ($generated@@79 $generated@@164)) (and (= ($generated@@71 $generated@@78 ($generated@@54 $generated@@78 $generated@@163)) $generated@@163) ($generated@@77 $generated@@78 ($generated@@54 $generated@@78 $generated@@163) ($generated@@79 $generated@@164))))
 :pattern ( ($generated@@26 $generated@@163 ($generated@@79 $generated@@164)))
)))
(assert (forall (($generated@@165 T@U) ) (!  (and (= ($generated@@122 ($generated@@123 $generated@@165)) $generated@@165) (or (and (<= 0 ($generated@@123 $generated@@165)) (< ($generated@@123 $generated@@165) 55296)) (and (<= 57344 ($generated@@123 $generated@@165)) (< ($generated@@123 $generated@@165) 1114112))))
 :pattern ( ($generated@@123 $generated@@165))
)))
(assert (= ($generated@@118 $generated@@20) $generated@@1))
(assert (= ($generated@@166 $generated@@20) $generated@@2))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@101 $generated@@167 $generated@@168) (forall (($generated@@169 T@U) ) (! (= ($generated@@27 $generated@@167 $generated@@169) ($generated@@27 $generated@@168 $generated@@169))
 :pattern ( ($generated@@27 $generated@@167 $generated@@169))
 :pattern ( ($generated@@27 $generated@@168 $generated@@169))
)))
 :pattern ( ($generated@@101 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (! (= ($generated@@77 $generated@@5 $generated@@170 $generated@@20)  (and (<= ($generated@@66 0) ($generated@@10 $generated@@170)) (< ($generated@@10 $generated@@170) 4294967296)))
 :pattern ( ($generated@@77 $generated@@5 $generated@@170 $generated@@20))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@71 $generated@@5 ($generated@@9 ($generated@@66 $generated@@171))) ($generated@@68 $generated@@24 ($generated@@71 $generated@@5 ($generated@@9 $generated@@171))))
 :pattern ( ($generated@@71 $generated@@5 ($generated@@9 ($generated@@66 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@T) ) (! (= ($generated@@71 $generated@@173 ($generated@@68 $generated@@173 $generated@@172)) ($generated@@68 $generated@@24 ($generated@@71 $generated@@173 $generated@@172)))
 :pattern ( ($generated@@71 $generated@@173 ($generated@@68 $generated@@173 $generated@@172)))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= ($generated@@45 $generated@@174) 0) (= $generated@@174 $generated@@46))
 :pattern ( ($generated@@45 $generated@@174))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@180 () Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(assert  (and (= ($generated@@3 $generated@@178) 8) (= ($generated@@3 $generated@@179) 9)))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@193  (=> (= $generated@@175 ($generated@@74 ($generated@@25 $generated@@20 $generated@@176))) (=> (and (= $generated@@177 ($generated@@68 $generated@@178 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 $generated@@46 ($generated@@71 $generated@@179 ($generated@@122 83))) ($generated@@71 $generated@@179 ($generated@@122 101))) ($generated@@71 $generated@@179 ($generated@@122 116))) ($generated@@71 $generated@@179 ($generated@@122 67))) ($generated@@71 $generated@@179 ($generated@@122 111))) ($generated@@71 $generated@@179 ($generated@@122 109))) ($generated@@71 $generated@@179 ($generated@@122 112))) ($generated@@71 $generated@@179 ($generated@@122 114))) ($generated@@71 $generated@@179 ($generated@@122 101))) ($generated@@71 $generated@@179 ($generated@@122 104))) ($generated@@71 $generated@@179 ($generated@@122 101))) ($generated@@71 $generated@@179 ($generated@@122 110))) ($generated@@71 $generated@@179 ($generated@@122 115))) ($generated@@71 $generated@@179 ($generated@@122 105))) ($generated@@71 $generated@@179 ($generated@@122 111))) ($generated@@71 $generated@@179 ($generated@@122 110))) ($generated@@71 $generated@@179 ($generated@@122 73))) ($generated@@71 $generated@@179 ($generated@@122 110))) ($generated@@71 $generated@@179 ($generated@@122 69))) ($generated@@71 $generated@@179 ($generated@@122 113))) ($generated@@71 $generated@@179 ($generated@@122 117))) ($generated@@71 $generated@@179 ($generated@@122 97))) ($generated@@71 $generated@@179 ($generated@@122 108))) ($generated@@71 $generated@@179 ($generated@@122 105))) ($generated@@71 $generated@@179 ($generated@@122 116))) ($generated@@71 $generated@@179 ($generated@@122 121))))) (= $generated@@180 ($generated@@101 $generated@@175 $generated@@176))) (and (=> (= (ControlFlow 0 2) (- 0 4)) $generated@@180) (=> $generated@@180 (=> (and ($generated@@181 $generated@@182) ($generated@@183 $generated@@182)) (=> (and (and (forall (($generated@@194 T@U) ) (!  (=> (and (or (not (= $generated@@194 $generated@@184)) (not true)) ($generated@@8 ($generated@@54 $generated@@4 ($generated@@23 $generated@@51 $generated@@24 ($generated@@23 $generated@@52 ($generated@@53 $generated@@51 $generated@@24) $generated@@185 $generated@@194) $generated@@0)))) (= ($generated@@23 $generated@@52 ($generated@@53 $generated@@51 $generated@@24) $generated@@182 $generated@@194) ($generated@@23 $generated@@52 ($generated@@53 $generated@@51 $generated@@24) $generated@@185 $generated@@194)))
 :pattern ( ($generated@@23 $generated@@52 ($generated@@53 $generated@@51 $generated@@24) $generated@@182 $generated@@194))
)) ($generated@@50 $generated@@185 $generated@@182)) (and (= $generated@@186 ($generated@@68 $generated@@178 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 ($generated@@83 $generated@@46 ($generated@@71 $generated@@179 ($generated@@122 83))) ($generated@@71 $generated@@179 ($generated@@122 101))) ($generated@@71 $generated@@179 ($generated@@122 116))) ($generated@@71 $generated@@179 ($generated@@122 67))) ($generated@@71 $generated@@179 ($generated@@122 111))) ($generated@@71 $generated@@179 ($generated@@122 109))) ($generated@@71 $generated@@179 ($generated@@122 112))) ($generated@@71 $generated@@179 ($generated@@122 114))) ($generated@@71 $generated@@179 ($generated@@122 101))) ($generated@@71 $generated@@179 ($generated@@122 104))) ($generated@@71 $generated@@179 ($generated@@122 101))) ($generated@@71 $generated@@179 ($generated@@122 110))) ($generated@@71 $generated@@179 ($generated@@122 115))) ($generated@@71 $generated@@179 ($generated@@122 105))) ($generated@@71 $generated@@179 ($generated@@122 111))) ($generated@@71 $generated@@179 ($generated@@122 110))) ($generated@@71 $generated@@179 ($generated@@122 73))) ($generated@@71 $generated@@179 ($generated@@122 110))) ($generated@@71 $generated@@179 ($generated@@122 77))) ($generated@@71 $generated@@179 ($generated@@122 101))) ($generated@@71 $generated@@179 ($generated@@122 109))) ($generated@@71 $generated@@179 ($generated@@122 98))) ($generated@@71 $generated@@179 ($generated@@122 101))) ($generated@@71 $generated@@179 ($generated@@122 114))) ($generated@@71 $generated@@179 ($generated@@122 115))) ($generated@@71 $generated@@179 ($generated@@122 104))) ($generated@@71 $generated@@179 ($generated@@122 105))) ($generated@@71 $generated@@179 ($generated@@122 112))))) (= $generated@@187 ($generated@@66 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@66 0) $generated@@187) (< $generated@@187 4294967296))) (=> (and (<= ($generated@@66 0) $generated@@187) (< $generated@@187 4294967296)) (=> (and (= $generated@@188 ($generated@@27 $generated@@175 ($generated@@71 $generated@@5 ($generated@@9 ($generated@@66 0))))) (= (ControlFlow 0 2) (- 0 1))) $generated@@188)))))))))))
(let (($generated@@195  (=> (and (not ($generated@@27 $generated@@176 ($generated@@71 $generated@@5 ($generated@@9 $generated@@189)))) (= (ControlFlow 0 7) 2)) $generated@@193)))
(let (($generated@@196  (=> (and ($generated@@27 $generated@@176 ($generated@@71 $generated@@5 ($generated@@9 $generated@@189))) (= (ControlFlow 0 6) 2)) $generated@@193)))
(let (($generated@@197  (=> (and (<= ($generated@@66 0) $generated@@189) (< $generated@@189 4294967296)) (and (=> (= (ControlFlow 0 8) 6) $generated@@196) (=> (= (ControlFlow 0 8) 7) $generated@@195)))))
(let (($generated@@198  (=> (and (not (and (<= ($generated@@66 0) $generated@@189) (< $generated@@189 4294967296))) (= (ControlFlow 0 5) 2)) $generated@@193)))
(let (($generated@@199  (=> (= $generated@@190 ($generated@@126 $generated@@184 $generated@@185 $generated@@0 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@197) (=> (= (ControlFlow 0 9) 5) $generated@@198)))))
(let (($generated@@200  (=> (and (and ($generated@@181 $generated@@185) ($generated@@183 $generated@@185)) (and ($generated@@77 $generated@@78 $generated@@176 ($generated@@79 $generated@@20)) ($generated@@19 $generated@@78 $generated@@176 ($generated@@79 $generated@@20) $generated@@185))) (=> (and (and (and ($generated@@77 $generated@@78 $generated@@191 ($generated@@79 $generated@@20)) ($generated@@19 $generated@@78 $generated@@191 ($generated@@79 $generated@@20) $generated@@185)) true) (and (and (= 1 $generated@@192) (forall (($generated@@201 T@U) ) (!  (=> (and (<= ($generated@@66 0) ($generated@@10 $generated@@201)) (< ($generated@@10 $generated@@201) 4294967296)) (=> (and (<= ($generated@@66 0) ($generated@@10 $generated@@201)) (< ($generated@@10 $generated@@201) 10)) ($generated@@27 $generated@@176 ($generated@@71 $generated@@5 $generated@@201))))
 :pattern ( ($generated@@27 $generated@@176 ($generated@@71 $generated@@5 $generated@@201)))
))) (and (= ($generated@@47 $generated@@176) ($generated@@66 10)) (= (ControlFlow 0 10) 9)))) $generated@@199))))
$generated@@200))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
