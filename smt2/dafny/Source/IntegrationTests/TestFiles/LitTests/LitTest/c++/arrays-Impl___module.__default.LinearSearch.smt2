(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@73 (Int) Int)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@106 (T@U T@U) Bool)
(declare-fun $generated@@119 (T@U) Int)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated@@1) 0))
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (or (not (= $generated@@31 $generated@@27)) (not true)) (= ($generated@@28 $generated@@31) ($generated@@26 $generated@@30))) ($generated@@29 $generated@@9 ($generated@@13 ($generated@@25 $generated@@31)) $generated))
 :pattern ( ($generated@@25 $generated@@31) ($generated@@26 $generated@@30))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! ($generated@@32 $generated@@9 $generated@@34 $generated@@33 $generated@@35)
 :pattern ( ($generated@@32 $generated@@9 $generated@@34 $generated@@33 $generated@@35))
)))
(assert (= ($generated@@7 $generated@@36) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40) ($generated@@32 $generated@@36 $generated@@39 ($generated@@26 $generated@@38) $generated@@40))
 :pattern ( ($generated@@32 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40))
 :pattern ( ($generated@@32 $generated@@36 $generated@@39 ($generated@@26 $generated@@38) $generated@@40))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@42 $generated@@49 $generated@@50 ($generated@@46 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@53) $generated@@51)
 :weight 0
)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@58 $generated@@59) (= ($generated@@42 $generated@@54 $generated@@55 ($generated@@46 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@59) ($generated@@42 $generated@@54 $generated@@55 $generated@@57 $generated@@59)))
 :weight 0
))) (= ($generated@@7 $generated@@43) 4)) (= ($generated@@7 $generated@@44) 5)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (= ($generated@@7 ($generated@@45 $generated@@60 $generated@@61)) 6))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@47 ($generated@@45 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@62 $generated@@63))
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@64 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@45 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@67 ($generated@@26 $generated@@66) $generated@@68)  (or (= $generated@@67 $generated@@27) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@68 $generated@@67) $generated@@1)))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@67 ($generated@@26 $generated@@66) $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@69 $generated@@70 $generated@@71) (forall (($generated@@72 T@U) ) (!  (=> ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@70 $generated@@72) $generated@@1))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@71 $generated@@72) $generated@@1))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@71 $generated@@72) $generated@@1))
)))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 Int) ) (! (= ($generated@@73 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 Int) ) (!  (=> (and (and (and ($generated@@79 $generated@@82) (and (or (not (= $generated@@83 $generated@@27)) (not true)) (= ($generated@@28 $generated@@83) ($generated@@26 $generated@@81)))) (and (<= 0 $generated@@84) (< $generated@@84 ($generated@@25 $generated@@83)))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@82 $generated@@83) $generated@@1)))) ($generated@@80 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@82 $generated@@83) ($generated@@78 $generated@@84)) $generated@@81 $generated@@82))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@82 $generated@@83) ($generated@@78 $generated@@84)) ($generated@@26 $generated@@81))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@41 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@41 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@89 ($generated@@37 $generated@@88))  (and ($generated@@29 $generated@@36 $generated@@89 ($generated@@26 $generated@@88)) (or (not (= $generated@@89 $generated@@27)) (not true))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@89 ($generated@@37 $generated@@88)))
 :pattern ( ($generated@@29 $generated@@36 $generated@@89 ($generated@@26 $generated@@88)))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@80 ($generated@@85 $generated@@93 $generated@@90) $generated@@91 $generated@@92) ($generated@@32 $generated@@93 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@80 ($generated@@85 $generated@@93 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@69 $generated@@94 $generated@@95) (=> ($generated@@80 $generated@@96 $generated@@97 $generated@@94) ($generated@@80 $generated@@96 $generated@@97 $generated@@95)))
 :pattern ( ($generated@@69 $generated@@94 $generated@@95) ($generated@@80 $generated@@96 $generated@@97 $generated@@94))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (!  (=> ($generated@@69 $generated@@98 $generated@@99) (=> ($generated@@32 $generated@@102 $generated@@100 $generated@@101 $generated@@98) ($generated@@32 $generated@@102 $generated@@100 $generated@@101 $generated@@99)))
 :pattern ( ($generated@@69 $generated@@98 $generated@@99) ($generated@@32 $generated@@102 $generated@@100 $generated@@101 $generated@@98))
)))
(assert (forall (($generated@@104 T@U) ) (!  (and (= ($generated@@24 ($generated@@26 $generated@@104)) $generated@@2) (= ($generated@@103 ($generated@@26 $generated@@104)) $generated@@5))
 :pattern ( ($generated@@26 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@24 ($generated@@37 $generated@@105)) $generated@@3) (= ($generated@@103 ($generated@@37 $generated@@105)) $generated@@5))
 :pattern ( ($generated@@37 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@106 $generated@@107 $generated@@33) (and (= ($generated@@85 $generated@@9 ($generated@@41 $generated@@9 $generated@@107)) $generated@@107) ($generated@@29 $generated@@9 ($generated@@41 $generated@@9 $generated@@107) $generated@@33)))
 :pattern ( ($generated@@106 $generated@@107 $generated@@33))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@109 ($generated@@26 $generated@@108))  (or (= $generated@@109 $generated@@27) (= ($generated@@28 $generated@@109) ($generated@@26 $generated@@108))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@109 ($generated@@26 $generated@@108)))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or (not (= $generated@@110 $generated@@112)) (not true)) (=> (and ($generated@@69 $generated@@110 $generated@@111) ($generated@@69 $generated@@111 $generated@@112)) ($generated@@69 $generated@@110 $generated@@112)))
 :pattern ( ($generated@@69 $generated@@110 $generated@@111) ($generated@@69 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@106 $generated@@113 $generated) (and (= ($generated@@85 $generated@@9 ($generated@@41 $generated@@9 $generated@@113)) $generated@@113) ($generated@@29 $generated@@9 ($generated@@41 $generated@@9 $generated@@113) $generated)))
 :pattern ( ($generated@@106 $generated@@113 $generated))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@106 ($generated@@85 $generated@@116 $generated@@114) $generated@@115) ($generated@@29 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@106 ($generated@@85 $generated@@116 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (<= 0 ($generated@@25 $generated@@117))
 :pattern ( ($generated@@25 $generated@@117))
)))
(assert (forall (($generated@@118 Int) ) (! (= ($generated@@23 ($generated@@78 $generated@@118)) 1)
 :pattern ( ($generated@@78 $generated@@118))
)))
(assert (forall (($generated@@120 Int) ) (! (= ($generated@@119 ($generated@@78 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@78 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@121 ($generated@@26 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@26 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@37 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@37 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@41 $generated@@126 ($generated@@85 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@85 $generated@@126 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and ($generated@@79 $generated@@128) (and (or (not (= $generated@@129 $generated@@27)) (not true)) (= ($generated@@28 $generated@@129) ($generated@@26 $generated@@127)))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@128 $generated@@129) $generated@@1)))) ($generated@@32 $generated@@9 ($generated@@13 ($generated@@25 $generated@@129)) $generated $generated@@128))
 :pattern ( ($generated@@25 $generated@@129) ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@128 $generated@@129) $generated@@1)) ($generated@@26 $generated@@127))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 Int) ) (!  (=> (and (and ($generated@@79 $generated@@131) (and (or (not (= $generated@@132 $generated@@27)) (not true)) (= ($generated@@28 $generated@@132) ($generated@@26 $generated@@130)))) (and (<= 0 $generated@@133) (< $generated@@133 ($generated@@25 $generated@@132)))) ($generated@@106 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@131 $generated@@132) ($generated@@78 $generated@@133)) $generated@@130))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@131 $generated@@132) ($generated@@78 $generated@@133)) ($generated@@26 $generated@@130))
)))
(assert  (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@134 $generated@@137 $generated@@138 $generated@@139 ($generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@142 $generated@@143) $generated@@140)
 :weight 0
)) (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@134 $generated@@144 $generated@@145 $generated@@146 ($generated@@136 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@134 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@134 $generated@@153 $generated@@154 $generated@@155 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@134 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Bool) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@12 ($generated@@134 $generated@@36 $generated@@43 $generated@@8 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@162)) (not true)) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@163 $generated@@166) $generated@@164)))) $generated@@165))
 :pattern ( ($generated@@134 $generated@@36 $generated@@43 $generated@@8 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@106 $generated@@169 ($generated@@26 $generated@@168)) (and (= ($generated@@85 $generated@@36 ($generated@@41 $generated@@36 $generated@@169)) $generated@@169) ($generated@@29 $generated@@36 ($generated@@41 $generated@@36 $generated@@169) ($generated@@26 $generated@@168))))
 :pattern ( ($generated@@106 $generated@@169 ($generated@@26 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@106 $generated@@171 ($generated@@37 $generated@@170)) (and (= ($generated@@85 $generated@@36 ($generated@@41 $generated@@36 $generated@@171)) $generated@@171) ($generated@@29 $generated@@36 ($generated@@41 $generated@@36 $generated@@171) ($generated@@37 $generated@@170))))
 :pattern ( ($generated@@106 $generated@@171 ($generated@@37 $generated@@170)))
)))
(assert (= ($generated@@24 $generated@@33) $generated@@4))
(assert (= ($generated@@103 $generated@@33) $generated@@6))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@29 $generated@@9 $generated@@172 $generated@@33)  (and (<= ($generated@@73 0) ($generated@@14 $generated@@172)) (< ($generated@@14 $generated@@172) 4294967296)))
 :pattern ( ($generated@@29 $generated@@9 $generated@@172 $generated@@33))
)))
(assert (forall (($generated@@173 Int) ) (! (= ($generated@@85 $generated@@9 ($generated@@13 ($generated@@73 $generated@@173))) ($generated@@75 $generated@@44 ($generated@@85 $generated@@9 ($generated@@13 $generated@@173))))
 :pattern ( ($generated@@85 $generated@@9 ($generated@@13 ($generated@@73 $generated@@173))))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@85 $generated@@175 ($generated@@75 $generated@@175 $generated@@174)) ($generated@@75 $generated@@44 ($generated@@85 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@85 $generated@@175 ($generated@@75 $generated@@175 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! ($generated@@32 $generated@@9 $generated@@177 $generated $generated@@176)
 :pattern ( ($generated@@32 $generated@@9 $generated@@177 $generated $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (! ($generated@@29 $generated@@9 $generated@@178 $generated)
 :pattern ( ($generated@@29 $generated@@9 $generated@@178 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@197  (and (=> (= (ControlFlow 0 10) (- 0 12)) (<= ($generated@@73 0) $generated@@179)) (=> (<= ($generated@@73 0) $generated@@179) (and (=> (= (ControlFlow 0 10) (- 0 11)) (<= $generated@@179 $generated@@180)) (=> (<= $generated@@179 $generated@@180) (=> (= (ControlFlow 0 10) (- 0 9)) (or (= $generated@@179 $generated@@180) (= ($generated@@14 ($generated@@41 $generated@@9 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@182) ($generated@@78 $generated@@179)))) $generated@@183)))))))))
(let (($generated@@198  (=> (= ($generated@@14 ($generated@@41 $generated@@9 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@182) ($generated@@78 $generated@@184)))) $generated@@183) (=> (and (= $generated@@179 $generated@@184) (= (ControlFlow 0 14) 10)) $generated@@197))))
(let (($generated@@199  (=> (<= $generated@@180 $generated@@184) (=> (and (= $generated@@179 $generated@@184) (= (ControlFlow 0 13) 10)) $generated@@197))))
(let (($generated@@200  (=> (and (or (not (= ($generated@@14 ($generated@@41 $generated@@9 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@182) ($generated@@78 $generated@@184)))) $generated@@183)) (not true)) (= $generated@@185 ($generated@@73 1))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (and (<= ($generated@@73 0) $generated@@185) (< $generated@@185 4294967296))) (=> (and (<= ($generated@@73 0) $generated@@185) (< $generated@@185 4294967296)) (=> (= $generated@@186 (+ $generated@@184 1)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (and (<= ($generated@@73 0) $generated@@186) (< $generated@@186 4294967296))) (=> (and (<= ($generated@@73 0) $generated@@186) (< $generated@@186 4294967296)) (=> (= $generated@@187 (+ $generated@@184 1)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@188) (= (- $generated@@180 $generated@@187) $generated@@188))) (=> (or (<= 0 $generated@@188) (= (- $generated@@180 $generated@@187) $generated@@188)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< (- $generated@@180 $generated@@187) $generated@@188)) (=> (< (- $generated@@180 $generated@@187) $generated@@188) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@189 (<= $generated@@187 $generated@@180))))))))))))))))
(let (($generated@@201  (=> (and (< $generated@@184 $generated@@180) (= $generated@@188 (- $generated@@180 $generated@@184))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (or (not (= $generated@@182 $generated@@27)) (not true))) (=> (or (not (= $generated@@182 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= 0 $generated@@184) (< $generated@@184 ($generated@@25 $generated@@182)))) (=> (and (<= 0 $generated@@184) (< $generated@@184 ($generated@@25 $generated@@182))) (and (=> (= (ControlFlow 0 15) 14) $generated@@198) (=> (= (ControlFlow 0 15) 4) $generated@@200)))))))))
(let (($generated@@202  (=> $generated@@189 (and (=> (= (ControlFlow 0 18) 13) $generated@@199) (=> (= (ControlFlow 0 18) 15) $generated@@201)))))
(let (($generated@@203 true))
(let (($generated@@204  (and (=> (= (ControlFlow 0 19) 2) $generated@@203) (=> (= (ControlFlow 0 19) 18) $generated@@202))))
(let (($generated@@205 true))
(let (($generated@@206  (=> (and (<= ($generated@@73 0) $generated@@184) (< $generated@@184 4294967296)) (=> (and (and (and (and (<= 0 $generated@@184) (not false)) (= $generated@@190 0)) (=> $generated@@189 (<= $generated@@184 $generated@@180))) (and (and (forall (($generated@@207 T@U) ) (!  (=> (and (or (not (= $generated@@207 $generated@@27)) (not true)) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@207) $generated@@1)))) (= ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@207) ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@207)))
 :pattern ( ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@207))
)) ($generated@@69 $generated@@181 $generated@@181)) (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (or (not (= $generated@@208 $generated@@27)) (not true)) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@208) $generated@@1)))) (or (= ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@208) $generated@@209) ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@208) $generated@@209)) ($generated@@12 ($generated@@134 $generated@@36 $generated@@43 $generated@@8 $generated@@191 $generated@@208 $generated@@209))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@208) $generated@@209))
)) (<= (- $generated@@180 $generated@@184) $generated@@192)))) (and (=> (= (ControlFlow 0 20) 1) $generated@@205) (=> (= (ControlFlow 0 20) 19) $generated@@204))))))
(let (($generated@@210  (=> (and (= $generated@@191 ($generated@@135 $generated@@27 $generated@@181 $generated@@1 false)) (= $generated@@190 ($generated@@73 0))) (and (=> (= (ControlFlow 0 21) (- 0 23)) (and (<= ($generated@@73 0) $generated@@190) (< $generated@@190 4294967296))) (=> (and (<= ($generated@@73 0) $generated@@190) (< $generated@@190 4294967296)) (=> (and (= $generated@@193 ($generated@@73 0)) (= $generated@@192 (- $generated@@180 $generated@@193))) (and (=> (= (ControlFlow 0 21) (- 0 22)) (=> $generated@@189 (<= $generated@@193 $generated@@180))) (=> (=> $generated@@189 (<= $generated@@193 $generated@@180)) (=> (= (ControlFlow 0 21) 20) $generated@@206)))))))))
(let (($generated@@211  (=> (and (and (and (and ($generated@@79 $generated@@181) ($generated@@194 $generated@@181)) (and ($generated@@29 $generated@@36 $generated@@182 ($generated@@37 $generated@@33)) ($generated@@32 $generated@@36 $generated@@182 ($generated@@37 $generated@@33) $generated@@181))) (and (and (<= ($generated@@73 0) $generated@@180) (< $generated@@180 4294967296)) (and (<= ($generated@@73 0) $generated@@183) (< $generated@@183 4294967296)))) (and (and (and (<= ($generated@@73 0) $generated@@195) (< $generated@@195 4294967296)) (= 1 $generated@@196)) (and (= ($generated@@25 $generated@@182) $generated@@180) (= (ControlFlow 0 24) 21)))) $generated@@210)))
$generated@@211)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
