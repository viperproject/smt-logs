(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) 0))
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@6 $generated@@25) 3))
(assert (forall (($generated@@29 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@29 $generated@@26)  (or (= $generated@@29 $generated@@27) (= ($generated@@28 $generated@@29) $generated@@26)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@29 $generated@@26))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@30 $generated@@25 $generated@@32 $generated@@31 $generated@@33) ($generated@@30 $generated@@25 $generated@@32 $generated@@26 $generated@@33))
 :pattern ( ($generated@@30 $generated@@25 $generated@@32 $generated@@31 $generated@@33))
 :pattern ( ($generated@@30 $generated@@25 $generated@@32 $generated@@26 $generated@@33))
)))
(assert (= ($generated@@22 $generated@@34) 0))
(assert (= ($generated@@35 $generated@@1 $generated@@5) $generated@@34))
(assert  (not ($generated@@36 $generated@@34)))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@37 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@37 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@37 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@6 $generated@@38) 4)) (= ($generated@@6 $generated@@39) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@6 ($generated@@40 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@40 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@40 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@40 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@40 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@65) (and (or (not (= $generated@@66 $generated@@27)) (not true)) (= ($generated@@28 $generated@@66) $generated@@26))) ($generated@@11 ($generated@@42 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@65 $generated@@66) $generated)))) ($generated@@43 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@65 $generated@@66) $generated@@34) $generated@@44 $generated@@65))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@65 $generated@@66) $generated@@34))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@30 $generated@@25 $generated@@67 $generated@@26 $generated@@68)  (or (= $generated@@67 $generated@@27) ($generated@@11 ($generated@@42 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@68 $generated@@67) $generated)))))
 :pattern ( ($generated@@30 $generated@@25 $generated@@67 $generated@@26 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@69 $generated@@70 $generated@@71) (forall (($generated@@72 T@U) ) (!  (=> ($generated@@11 ($generated@@42 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@70 $generated@@72) $generated))) ($generated@@11 ($generated@@42 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@71 $generated@@72) $generated))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@71 $generated@@72) $generated))
)))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@42 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@42 $generated@@75 $generated@@74))
)))
(assert ($generated@@36 $generated))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@43 ($generated@@73 $generated@@79 $generated@@76) $generated@@77 $generated@@78) ($generated@@30 $generated@@79 $generated@@76 $generated@@77 $generated@@78))
 :pattern ( ($generated@@43 ($generated@@73 $generated@@79 $generated@@76) $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@69 $generated@@80 $generated@@81) (=> ($generated@@43 $generated@@82 $generated@@83 $generated@@80) ($generated@@43 $generated@@82 $generated@@83 $generated@@81)))
 :pattern ( ($generated@@69 $generated@@80 $generated@@81) ($generated@@43 $generated@@82 $generated@@83 $generated@@80))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (!  (=> ($generated@@69 $generated@@84 $generated@@85) (=> ($generated@@30 $generated@@88 $generated@@86 $generated@@87 $generated@@84) ($generated@@30 $generated@@88 $generated@@86 $generated@@87 $generated@@85)))
 :pattern ( ($generated@@69 $generated@@84 $generated@@85) ($generated@@30 $generated@@88 $generated@@86 $generated@@87 $generated@@84))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@89 $generated@@90 $generated@@26) (and (= ($generated@@73 $generated@@25 ($generated@@42 $generated@@25 $generated@@90)) $generated@@90) ($generated@@24 $generated@@25 ($generated@@42 $generated@@25 $generated@@90) $generated@@26)))
 :pattern ( ($generated@@89 $generated@@90 $generated@@26))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@89 $generated@@91 $generated@@31) (and (= ($generated@@73 $generated@@25 ($generated@@42 $generated@@25 $generated@@91)) $generated@@91) ($generated@@24 $generated@@25 ($generated@@42 $generated@@25 $generated@@91) $generated@@31)))
 :pattern ( ($generated@@89 $generated@@91 $generated@@31))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@92 $generated@@31)  (and ($generated@@24 $generated@@25 $generated@@92 $generated@@26) (or (not (= $generated@@92 $generated@@27)) (not true))))
 :pattern ( ($generated@@24 $generated@@25 $generated@@92 $generated@@31))
 :pattern ( ($generated@@24 $generated@@25 $generated@@92 $generated@@26))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or (not (= $generated@@93 $generated@@95)) (not true)) (=> (and ($generated@@69 $generated@@93 $generated@@94) ($generated@@69 $generated@@94 $generated@@95)) ($generated@@69 $generated@@93 $generated@@95)))
 :pattern ( ($generated@@69 $generated@@93 $generated@@94) ($generated@@69 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (and (= ($generated@@96 ($generated@@35 $generated@@97 $generated@@98)) $generated@@97) (= ($generated@@23 ($generated@@35 $generated@@97 $generated@@98)) $generated@@98))
 :pattern ( ($generated@@35 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@89 ($generated@@73 $generated@@101 $generated@@99) $generated@@100) ($generated@@24 $generated@@101 $generated@@99 $generated@@100))
 :pattern ( ($generated@@89 ($generated@@73 $generated@@101 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@42 $generated@@103 ($generated@@73 $generated@@103 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@73 $generated@@103 $generated@@102))
)))
(assert  (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@104 $generated@@107 $generated@@108 $generated@@109 ($generated@@106 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@112 $generated@@113) $generated@@110)
 :weight 0
)) (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@104 $generated@@114 $generated@@115 $generated@@116 ($generated@@106 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@104 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@104 $generated@@123 $generated@@124 $generated@@125 ($generated@@106 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@104 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 Bool) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@11 ($generated@@104 $generated@@25 $generated@@38 $generated@@7 ($generated@@105 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@136 $generated@@137))  (=> (and (or (not (= $generated@@136 $generated@@132)) (not true)) ($generated@@11 ($generated@@42 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@133 $generated@@136) $generated@@134)))) $generated@@135))
 :pattern ( ($generated@@104 $generated@@25 $generated@@38 $generated@@7 ($generated@@105 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and ($generated@@41 $generated@@138) (and (or (not (= $generated@@139 $generated@@27)) (not true)) (= ($generated@@28 $generated@@139) $generated@@26))) ($generated@@89 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@138 $generated@@139) $generated@@34) $generated@@44))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@138 $generated@@139) $generated@@34))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> ($generated@@41 ($generated@@45 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@140 $generated@@141 ($generated@@45 $generated@@38 $generated@@39 ($generated@@37 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@140 $generated@@141) $generated@@142 $generated@@143))) ($generated@@69 $generated@@140 ($generated@@45 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@140 $generated@@141 ($generated@@45 $generated@@38 $generated@@39 ($generated@@37 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@140 $generated@@141) $generated@@142 $generated@@143))))
 :pattern ( ($generated@@45 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@140 $generated@@141 ($generated@@45 $generated@@38 $generated@@39 ($generated@@37 $generated@@25 ($generated@@40 $generated@@38 $generated@@39) $generated@@140 $generated@@141) $generated@@142 $generated@@143)))
)))
(assert (= ($generated@@144 $generated@@26) $generated@@2))
(assert (= ($generated@@145 $generated@@26) $generated@@4))
(assert (= ($generated@@144 $generated@@31) $generated@@3))
(assert (= ($generated@@145 $generated@@31) $generated@@4))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@151  (=> (and (= $generated@@146 ($generated@@105 $generated@@27 $generated@@147 $generated false)) (= (ControlFlow 0 2) (- 0 1))) true)))
(let (($generated@@152  (=> (and ($generated@@41 $generated@@147) ($generated@@148 $generated@@147)) (=> (and (and ($generated@@89 $generated@@149 $generated@@44) ($generated@@43 $generated@@149 $generated@@44 $generated@@147)) (and (= 0 $generated@@150) (= (ControlFlow 0 3) 2))) $generated@@151))))
$generated@@152)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
