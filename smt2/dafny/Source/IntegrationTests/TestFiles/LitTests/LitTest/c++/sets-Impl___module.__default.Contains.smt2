(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (Int) Int)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@U Int) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@76 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@80 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@84 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (! ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22)
 :pattern ( ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22))
)))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@25 $generated@@26) $generated@@27)  (or (= $generated@@26 $generated@@27) ($generated@@23 $generated@@25 $generated@@27)))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@25 $generated@@26) $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ) (!  (not ($generated@@23 $generated@@28 $generated@@29))
 :pattern ( ($generated@@23 $generated@@28 $generated@@29))
)))
(assert (= ($generated@@30 $generated@@28) 0))
(assert (forall (($generated@@32 Int) ) (! (= ($generated@@31 $generated@@32) $generated@@32)
 :pattern ( ($generated@@31 $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@T) ) (! (= ($generated@@33 $generated@@35 $generated@@34) $generated@@34)
 :pattern ( ($generated@@33 $generated@@35 $generated@@34))
)))
(assert (= ($generated@@3 $generated@@37) 3))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (and ($generated@@36 $generated@@37 $generated@@40 ($generated@@38 $generated@@42)) ($generated@@39 $generated@@41 $generated@@42)) ($generated@@36 $generated@@37 ($generated@@24 $generated@@40 $generated@@41) ($generated@@38 $generated@@42)))
 :pattern ( ($generated@@36 $generated@@37 ($generated@@24 $generated@@40 $generated@@41) ($generated@@38 $generated@@42)))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 ($generated@@43 $generated@@46 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@43 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@30 ($generated@@24 $generated@@47 $generated@@48)) (+ 1 ($generated@@30 $generated@@47)))
 :pattern ( ($generated@@24 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@49 ($generated@@44 $generated@@53 $generated@@50) $generated@@51 $generated@@52) ($generated@@19 $generated@@53 $generated@@50 $generated@@51 $generated@@52))
 :pattern ( ($generated@@49 ($generated@@44 $generated@@53 $generated@@50) $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (!  (=> ($generated@@39 $generated@@54 $generated@@20) (and (= ($generated@@44 $generated@@5 ($generated@@43 $generated@@5 $generated@@54)) $generated@@54) ($generated@@36 $generated@@5 ($generated@@43 $generated@@5 $generated@@54) $generated@@20)))
 :pattern ( ($generated@@39 $generated@@54 $generated@@20))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 Int) ($generated@@58 T@U) ) (!  (and (=> (= $generated@@57 ($generated@@30 $generated@@56)) (= ($generated@@55 ($generated@@24 $generated@@56 $generated@@58) $generated@@57) $generated@@58)) (=> (or (not (= $generated@@57 ($generated@@30 $generated@@56))) (not true)) (= ($generated@@55 ($generated@@24 $generated@@56 $generated@@58) $generated@@57) ($generated@@55 $generated@@56 $generated@@57))))
 :pattern ( ($generated@@55 ($generated@@24 $generated@@56 $generated@@58) $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@23 $generated@@59 $generated@@60) (exists (($generated@@61 Int) ) (!  (and (and (<= 0 $generated@@61) (< $generated@@61 ($generated@@30 $generated@@59))) (= ($generated@@55 $generated@@59 $generated@@61) $generated@@60))
 :pattern ( ($generated@@55 $generated@@59 $generated@@61))
)))
 :pattern ( ($generated@@23 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@39 ($generated@@44 $generated@@64 $generated@@62) $generated@@63) ($generated@@36 $generated@@64 $generated@@62 $generated@@63))
 :pattern ( ($generated@@39 ($generated@@44 $generated@@64 $generated@@62) $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (! (<= 0 ($generated@@30 $generated@@65))
 :pattern ( ($generated@@30 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@19 $generated@@37 $generated@@66 ($generated@@38 $generated@@67) $generated@@68) (forall (($generated@@69 Int) ) (!  (=> (and (<= 0 $generated@@69) (< $generated@@69 ($generated@@30 $generated@@66))) ($generated@@49 ($generated@@55 $generated@@66 $generated@@69) $generated@@67 $generated@@68))
 :pattern ( ($generated@@55 $generated@@66 $generated@@69))
)))
 :pattern ( ($generated@@19 $generated@@37 $generated@@66 ($generated@@38 $generated@@67) $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@70 ($generated@@38 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@38 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@72 ($generated@@38 $generated@@73)) $generated)
 :pattern ( ($generated@@38 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@43 $generated@@75 ($generated@@44 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@44 $generated@@75 $generated@@74))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@76 $generated@@87 $generated@@88 $generated@@89 ($generated@@83 $generated@@87 $generated@@88 $generated@@89 $generated@@91 $generated@@92 $generated@@93 $generated@@90) $generated@@92 $generated@@93) $generated@@90)
 :weight 0
)) (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@99 $generated@@101) (= ($generated@@76 $generated@@94 $generated@@95 $generated@@96 ($generated@@83 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@99 $generated@@100 $generated@@97) $generated@@101 $generated@@102) ($generated@@76 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@101 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@76 $generated@@103 $generated@@104 $generated@@105 ($generated@@83 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@76 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)))) (= ($generated@@3 $generated@@77) 4)) (= ($generated@@3 $generated@@78) 5)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@80 $generated@@112 $generated@@113 ($generated@@84 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@114) $generated@@116) $generated@@114)
 :weight 0
))) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@80 $generated@@117 $generated@@118 ($generated@@84 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@80 $generated@@117 $generated@@118 $generated@@120 $generated@@122)))
 :weight 0
))) (= ($generated@@3 $generated@@81) 6)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (= ($generated@@3 ($generated@@82 $generated@@123 $generated@@124)) 7))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@82 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@82 $generated@@127 $generated@@128))
))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 Bool) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@8 ($generated@@76 $generated@@77 $generated@@78 $generated@@4 ($generated@@79 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))  (=> (and (or (not (= $generated@@133 $generated@@129)) (not true)) ($generated@@8 ($generated@@43 $generated@@4 ($generated@@80 $generated@@78 $generated@@81 ($generated@@80 $generated@@77 ($generated@@82 $generated@@78 $generated@@81) $generated@@130 $generated@@133) $generated@@131)))) $generated@@132))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78 $generated@@4 ($generated@@79 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (and (= ($generated@@135 ($generated@@24 $generated@@137 $generated@@138)) $generated@@137) (= ($generated@@136 ($generated@@24 $generated@@137 $generated@@138)) $generated@@138))
 :pattern ( ($generated@@24 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> ($generated@@39 $generated@@139 ($generated@@38 $generated@@140)) (and (= ($generated@@44 $generated@@37 ($generated@@43 $generated@@37 $generated@@139)) $generated@@139) ($generated@@36 $generated@@37 ($generated@@43 $generated@@37 $generated@@139) ($generated@@38 $generated@@140))))
 :pattern ( ($generated@@39 $generated@@139 ($generated@@38 $generated@@140)))
)))
(assert (= ($generated@@72 $generated@@20) $generated@@1))
(assert (= ($generated@@141 $generated@@20) $generated@@2))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@36 $generated@@5 $generated@@142 $generated@@20)  (and (<= ($generated@@31 0) ($generated@@10 $generated@@142)) (< ($generated@@10 $generated@@142) 4294967296)))
 :pattern ( ($generated@@36 $generated@@5 $generated@@142 $generated@@20))
)))
(assert (forall (($generated@@143 Int) ) (! (= ($generated@@44 $generated@@5 ($generated@@9 ($generated@@31 $generated@@143))) ($generated@@33 $generated@@81 ($generated@@44 $generated@@5 ($generated@@9 $generated@@143))))
 :pattern ( ($generated@@44 $generated@@5 ($generated@@9 ($generated@@31 $generated@@143))))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@44 $generated@@145 ($generated@@33 $generated@@145 $generated@@144)) ($generated@@33 $generated@@81 ($generated@@44 $generated@@145 $generated@@144)))
 :pattern ( ($generated@@44 $generated@@145 ($generated@@33 $generated@@145 $generated@@144)))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= ($generated@@30 $generated@@146) 0) (= $generated@@146 $generated@@28))
 :pattern ( ($generated@@30 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@147 ($generated@@38 $generated@@148)) (forall (($generated@@149 Int) ) (!  (=> (and (<= 0 $generated@@149) (< $generated@@149 ($generated@@30 $generated@@147))) ($generated@@39 ($generated@@55 $generated@@147 $generated@@149) $generated@@148))
 :pattern ( ($generated@@55 $generated@@147 $generated@@149))
)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@147 ($generated@@38 $generated@@148)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@175  (=> (and (not ($generated@@23 $generated@@150 ($generated@@44 $generated@@37 $generated@@151))) (= (ControlFlow 0 3) (- 0 2))) ($generated@@8 ($generated@@33 $generated@@4 ($generated@@7 false))))))
(let (($generated@@176 true))
(let (($generated@@177  (and (=> (= (ControlFlow 0 4) 1) $generated@@176) (=> (= (ControlFlow 0 4) 3) $generated@@175))))
(let (($generated@@178  (=> (not ($generated@@23 $generated@@150 ($generated@@44 $generated@@37 $generated@@152))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@8 ($generated@@33 $generated@@4 ($generated@@7 false)))) (=> ($generated@@8 ($generated@@33 $generated@@4 ($generated@@7 false))) (=> (= (ControlFlow 0 6) 4) $generated@@177))))))
(let (($generated@@179  (=> (and ($generated@@23 $generated@@150 ($generated@@44 $generated@@37 $generated@@152)) (= (ControlFlow 0 5) 4)) $generated@@177)))
(let (($generated@@180  (and (=> (= (ControlFlow 0 8) 5) $generated@@179) (=> (= (ControlFlow 0 8) 6) $generated@@178))))
(let (($generated@@181  (=> (and (not ($generated@@23 $generated@@150 ($generated@@44 $generated@@37 $generated@@153))) (= (ControlFlow 0 11) 8)) $generated@@180)))
(let (($generated@@182  (=> ($generated@@23 $generated@@150 ($generated@@44 $generated@@37 $generated@@153)) (and (=> (= (ControlFlow 0 9) (- 0 10)) ($generated@@8 ($generated@@33 $generated@@4 ($generated@@7 false)))) (=> ($generated@@8 ($generated@@33 $generated@@4 ($generated@@7 false))) (=> (= (ControlFlow 0 9) 8) $generated@@180))))))
(let (($generated@@183  (and (=> (= (ControlFlow 0 12) 9) $generated@@182) (=> (= (ControlFlow 0 12) 11) $generated@@181))))
(let (($generated@@184  (=> (not ($generated@@23 $generated@@150 ($generated@@44 $generated@@37 $generated@@154))) (and (=> (= (ControlFlow 0 14) (- 0 15)) ($generated@@8 ($generated@@33 $generated@@4 ($generated@@7 false)))) (=> ($generated@@8 ($generated@@33 $generated@@4 ($generated@@7 false))) (=> (= (ControlFlow 0 14) 12) $generated@@183))))))
(let (($generated@@185  (=> (and ($generated@@23 $generated@@150 ($generated@@44 $generated@@37 $generated@@154)) (= (ControlFlow 0 13) 12)) $generated@@183)))
(let (($generated@@186  (=> (and (= $generated@@155 ($generated@@79 $generated@@156 $generated@@157 $generated@@0 false)) (= $generated@@158 ($generated@@31 1))) (and (=> (= (ControlFlow 0 16) (- 0 25)) (and (<= ($generated@@31 0) $generated@@158) (< $generated@@158 4294967296))) (=> (and (<= ($generated@@31 0) $generated@@158) (< $generated@@158 4294967296)) (=> (and (= $generated@@154 ($generated@@33 $generated@@37 ($generated@@24 $generated@@28 ($generated@@44 $generated@@5 ($generated@@9 ($generated@@31 1)))))) (= $generated@@159 ($generated@@31 1))) (and (=> (= (ControlFlow 0 16) (- 0 24)) (and (<= ($generated@@31 0) $generated@@159) (< $generated@@159 4294967296))) (=> (and (<= ($generated@@31 0) $generated@@159) (< $generated@@159 4294967296)) (=> (= $generated@@160 ($generated@@31 2)) (and (=> (= (ControlFlow 0 16) (- 0 23)) (and (<= ($generated@@31 0) $generated@@160) (< $generated@@160 4294967296))) (=> (and (<= ($generated@@31 0) $generated@@160) (< $generated@@160 4294967296)) (=> (and (= $generated@@153 ($generated@@33 $generated@@37 ($generated@@24 ($generated@@24 $generated@@28 ($generated@@44 $generated@@5 ($generated@@9 ($generated@@31 1)))) ($generated@@44 $generated@@5 ($generated@@9 ($generated@@31 2)))))) (= $generated@@161 ($generated@@31 1))) (and (=> (= (ControlFlow 0 16) (- 0 22)) (and (<= ($generated@@31 0) $generated@@161) (< $generated@@161 4294967296))) (=> (and (<= ($generated@@31 0) $generated@@161) (< $generated@@161 4294967296)) (=> (= $generated@@162 ($generated@@31 2)) (and (=> (= (ControlFlow 0 16) (- 0 21)) (and (<= ($generated@@31 0) $generated@@162) (< $generated@@162 4294967296))) (=> (and (<= ($generated@@31 0) $generated@@162) (< $generated@@162 4294967296)) (=> (= $generated@@163 ($generated@@31 3)) (and (=> (= (ControlFlow 0 16) (- 0 20)) (and (<= ($generated@@31 0) $generated@@163) (< $generated@@163 4294967296))) (=> (and (<= ($generated@@31 0) $generated@@163) (< $generated@@163 4294967296)) (=> (and (= $generated@@152 ($generated@@33 $generated@@37 ($generated@@24 ($generated@@24 ($generated@@24 $generated@@28 ($generated@@44 $generated@@5 ($generated@@9 ($generated@@31 1)))) ($generated@@44 $generated@@5 ($generated@@9 ($generated@@31 2)))) ($generated@@44 $generated@@5 ($generated@@9 ($generated@@31 3)))))) (= $generated@@164 ($generated@@31 1))) (and (=> (= (ControlFlow 0 16) (- 0 19)) (and (<= ($generated@@31 0) $generated@@164) (< $generated@@164 4294967296))) (=> (and (<= ($generated@@31 0) $generated@@164) (< $generated@@164 4294967296)) (=> (= $generated@@165 ($generated@@31 2)) (and (=> (= (ControlFlow 0 16) (- 0 18)) (and (<= ($generated@@31 0) $generated@@165) (< $generated@@165 4294967296))) (=> (and (<= ($generated@@31 0) $generated@@165) (< $generated@@165 4294967296)) (=> (= $generated@@166 ($generated@@31 3)) (and (=> (= (ControlFlow 0 16) (- 0 17)) (and (<= ($generated@@31 0) $generated@@166) (< $generated@@166 4294967296))) (=> (and (<= ($generated@@31 0) $generated@@166) (< $generated@@166 4294967296)) (=> (and (= $generated@@151 ($generated@@33 $generated@@37 ($generated@@24 ($generated@@24 ($generated@@24 $generated@@28 ($generated@@44 $generated@@5 ($generated@@9 ($generated@@31 1)))) ($generated@@44 $generated@@5 ($generated@@9 ($generated@@31 2)))) ($generated@@44 $generated@@5 ($generated@@9 ($generated@@31 3)))))) (= $generated@@150 ($generated@@24 ($generated@@24 ($generated@@24 $generated@@28 ($generated@@44 $generated@@37 $generated@@154)) ($generated@@44 $generated@@37 $generated@@152)) ($generated@@44 $generated@@37 $generated@@154)))) (and (=> (= (ControlFlow 0 16) 13) $generated@@185) (=> (= (ControlFlow 0 16) 14) $generated@@184))))))))))))))))))))))))))))))))
(let (($generated@@187  (=> (and ($generated@@167 $generated@@157) ($generated@@168 $generated@@157)) (=> (and (and (and ($generated@@36 $generated@@37 $generated@@169 ($generated@@38 $generated@@20)) ($generated@@19 $generated@@37 $generated@@169 ($generated@@38 $generated@@20) $generated@@157)) true) (and (and ($generated@@36 $generated@@37 $generated@@170 ($generated@@38 $generated@@20)) ($generated@@19 $generated@@37 $generated@@170 ($generated@@38 $generated@@20) $generated@@157)) true)) (=> (and (and (and (and ($generated@@36 $generated@@37 $generated@@171 ($generated@@38 $generated@@20)) ($generated@@19 $generated@@37 $generated@@171 ($generated@@38 $generated@@20) $generated@@157)) true) (and (and ($generated@@36 $generated@@37 $generated@@172 ($generated@@38 $generated@@20)) ($generated@@19 $generated@@37 $generated@@172 ($generated@@38 $generated@@20) $generated@@157)) true)) (and (and (and ($generated@@36 $generated@@37 $generated@@173 ($generated@@38 ($generated@@38 $generated@@20))) ($generated@@19 $generated@@37 $generated@@173 ($generated@@38 ($generated@@38 $generated@@20)) $generated@@157)) true) (and (= 1 $generated@@174) (= (ControlFlow 0 26) 16)))) $generated@@186)))))
$generated@@187))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
