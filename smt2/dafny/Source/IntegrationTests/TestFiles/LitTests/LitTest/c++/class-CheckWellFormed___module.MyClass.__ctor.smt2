(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@53 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@92 (Int) Int)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert  (=> (< 1 $generated@@30) (forall (($generated@@37 T@U) ) (!  (=> (and (or (not (= $generated@@37 $generated@@32)) (not true)) (= ($generated@@33 $generated@@37) $generated@@34)) ($generated@@35 $generated@@14 ($generated@@18 ($generated@@31 $generated@@37)) $generated@@36))
 :pattern ( ($generated@@31 $generated@@37))
))))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! ($generated@@38 $generated@@14 $generated@@39 $generated@@36 $generated@@40)
 :pattern ( ($generated@@38 $generated@@14 $generated@@39 $generated@@36 $generated@@40))
)))
(assert (= ($generated@@12 $generated@@41) 3))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@38 $generated@@41 $generated@@45 ($generated@@42 $generated@@44) $generated@@46) ($generated@@38 $generated@@41 $generated@@45 ($generated@@43 $generated@@44) $generated@@46))
 :pattern ( ($generated@@38 $generated@@41 $generated@@45 ($generated@@42 $generated@@44) $generated@@46))
 :pattern ( ($generated@@38 $generated@@41 $generated@@45 ($generated@@43 $generated@@44) $generated@@46))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@48 $generated@@56 $generated@@57 ($generated@@53 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@60) $generated@@58)
 :weight 0
)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (= $generated@@65 $generated@@66) (= ($generated@@48 $generated@@61 $generated@@62 ($generated@@53 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@66) ($generated@@48 $generated@@61 $generated@@62 $generated@@64 $generated@@66)))
 :weight 0
))) (= ($generated@@12 $generated@@49) 4)) (= ($generated@@12 $generated@@50) 5)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (= ($generated@@12 ($generated@@51 $generated@@67 $generated@@68)) 6))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@69 $generated@@70)) $generated@@69)
 :pattern ( ($generated@@51 $generated@@69 $generated@@70))
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@55 ($generated@@51 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@51 $generated@@71 $generated@@72))
))))
(assert  (=> (< 1 $generated@@30) (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@73) (and (or (not (= $generated@@74 $generated@@32)) (not true)) (= ($generated@@33 $generated@@74) $generated@@34))) ($generated@@17 ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@73 $generated@@74) $generated)))) ($generated@@38 $generated@@14 ($generated@@18 ($generated@@31 $generated@@74)) $generated@@36 $generated@@73))
 :pattern ( ($generated@@31 $generated@@74) ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@73 $generated@@74) $generated)))
))))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@35 $generated@@41 $generated@@75 $generated@@34)  (or (= $generated@@75 $generated@@32) (= ($generated@@33 $generated@@75) $generated@@34)))
 :pattern ( ($generated@@35 $generated@@41 $generated@@75 $generated@@34))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@38 $generated@@41 $generated@@77 $generated@@76 $generated@@78) ($generated@@38 $generated@@41 $generated@@77 $generated@@34 $generated@@78))
 :pattern ( ($generated@@38 $generated@@41 $generated@@77 $generated@@76 $generated@@78))
 :pattern ( ($generated@@38 $generated@@41 $generated@@77 $generated@@34 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@38 $generated@@41 $generated@@80 ($generated@@43 $generated@@79) $generated@@81)  (or (= $generated@@80 $generated@@32) ($generated@@17 ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@81 $generated@@80) $generated)))))
 :pattern ( ($generated@@38 $generated@@41 $generated@@80 ($generated@@43 $generated@@79) $generated@@81))
)))
(assert (= ($generated@@28 $generated@@82) 0))
(assert (= ($generated@@83 $generated@@6 $generated@@10) $generated@@82))
(assert  (not ($generated@@84 $generated@@82)))
(assert (= ($generated@@28 $generated@@85) 0))
(assert (= ($generated@@83 $generated@@6 $generated@@11) $generated@@85))
(assert  (not ($generated@@84 $generated@@85)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@38 $generated@@41 $generated@@86 $generated@@34 $generated@@87)  (or (= $generated@@86 $generated@@32) ($generated@@17 ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@87 $generated@@86) $generated)))))
 :pattern ( ($generated@@38 $generated@@41 $generated@@86 $generated@@34 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@88 $generated@@89 $generated@@90) (forall (($generated@@91 T@U) ) (!  (=> ($generated@@17 ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@89 $generated@@91) $generated))) ($generated@@17 ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@90 $generated@@91) $generated))))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@90 $generated@@91) $generated))
)))
 :pattern ( ($generated@@88 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@93 Int) ) (! (= ($generated@@92 $generated@@93) $generated@@93)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 $generated@@95) $generated@@95)
 :pattern ( ($generated@@94 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 ($generated@@47 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@47 $generated@@99 $generated@@98))
)))
(assert ($generated@@84 $generated))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@35 $generated@@41 $generated@@101 ($generated@@42 $generated@@100))  (and ($generated@@35 $generated@@41 $generated@@101 ($generated@@43 $generated@@100)) (or (not (= $generated@@101 $generated@@32)) (not true))))
 :pattern ( ($generated@@35 $generated@@41 $generated@@101 ($generated@@42 $generated@@100)))
 :pattern ( ($generated@@35 $generated@@41 $generated@@101 ($generated@@43 $generated@@100)))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (!  (=> ($generated@@88 $generated@@102 $generated@@103) (=> ($generated@@38 $generated@@106 $generated@@104 $generated@@105 $generated@@102) ($generated@@38 $generated@@106 $generated@@104 $generated@@105 $generated@@103)))
 :pattern ( ($generated@@88 $generated@@102 $generated@@103) ($generated@@38 $generated@@106 $generated@@104 $generated@@105 $generated@@102))
)))
(assert (forall (($generated@@109 T@U) ) (!  (and (= ($generated@@107 ($generated@@43 $generated@@109)) $generated@@1) (= ($generated@@108 ($generated@@43 $generated@@109)) $generated@@7))
 :pattern ( ($generated@@43 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (!  (and (= ($generated@@107 ($generated@@42 $generated@@110)) $generated@@2) (= ($generated@@108 ($generated@@42 $generated@@110)) $generated@@7))
 :pattern ( ($generated@@42 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (and ($generated@@52 $generated@@111) (and (or (not (= $generated@@112 $generated@@32)) (not true)) (= ($generated@@33 $generated@@112) $generated@@34))) ($generated@@35 $generated@@14 ($generated@@47 $generated@@14 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@111 $generated@@112) $generated@@82)) $generated@@36))
 :pattern ( ($generated@@47 $generated@@14 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@111 $generated@@112) $generated@@82)))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@35 $generated@@41 $generated@@114 ($generated@@43 $generated@@113))  (or (= $generated@@114 $generated@@32) (= ($generated@@33 $generated@@114) ($generated@@43 $generated@@113))))
 :pattern ( ($generated@@35 $generated@@41 $generated@@114 ($generated@@43 $generated@@113)))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@35 $generated@@41 $generated@@115 $generated@@76)  (and ($generated@@35 $generated@@41 $generated@@115 $generated@@34) (or (not (= $generated@@115 $generated@@32)) (not true))))
 :pattern ( ($generated@@35 $generated@@41 $generated@@115 $generated@@76))
 :pattern ( ($generated@@35 $generated@@41 $generated@@115 $generated@@34))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@116) (and (or (not (= $generated@@117 $generated@@32)) (not true)) (= ($generated@@33 $generated@@117) $generated@@34))) ($generated@@17 ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@116 $generated@@117) $generated)))) ($generated@@38 $generated@@14 ($generated@@47 $generated@@14 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@116 $generated@@117) $generated@@82)) $generated@@36 $generated@@116))
 :pattern ( ($generated@@47 $generated@@14 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@116 $generated@@117) $generated@@82)))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (and ($generated@@52 $generated@@118) (and (or (not (= $generated@@119 $generated@@32)) (not true)) (= ($generated@@33 $generated@@119) $generated@@34))) ($generated@@35 $generated@@41 ($generated@@47 $generated@@41 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@118 $generated@@119) $generated@@85)) ($generated@@42 $generated@@36)))
 :pattern ( ($generated@@47 $generated@@41 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@118 $generated@@119) $generated@@85)))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@120) (and (or (not (= $generated@@121 $generated@@32)) (not true)) (= ($generated@@33 $generated@@121) $generated@@34))) ($generated@@17 ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@120 $generated@@121) $generated)))) ($generated@@38 $generated@@41 ($generated@@47 $generated@@41 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@120 $generated@@121) $generated@@85)) ($generated@@42 $generated@@36) $generated@@120))
 :pattern ( ($generated@@47 $generated@@41 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@120 $generated@@121) $generated@@85)))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (or (not (= $generated@@122 $generated@@124)) (not true)) (=> (and ($generated@@88 $generated@@122 $generated@@123) ($generated@@88 $generated@@123 $generated@@124)) ($generated@@88 $generated@@122 $generated@@124)))
 :pattern ( ($generated@@88 $generated@@122 $generated@@123) ($generated@@88 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (and (= ($generated@@125 ($generated@@83 $generated@@126 $generated@@127)) $generated@@126) (= ($generated@@29 ($generated@@83 $generated@@126 $generated@@127)) $generated@@127))
 :pattern ( ($generated@@83 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@43 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@43 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@42 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@42 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@47 $generated@@133 ($generated@@97 $generated@@133 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@97 $generated@@133 $generated@@132))
)))
(assert  (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@134 $generated@@137 $generated@@138 $generated@@139 ($generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@142 $generated@@143) $generated@@140)
 :weight 0
)) (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@134 $generated@@144 $generated@@145 $generated@@146 ($generated@@136 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@134 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@134 $generated@@153 $generated@@154 $generated@@155 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@134 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Bool) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@17 ($generated@@134 $generated@@41 $generated@@49 $generated@@13 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@162)) (not true)) ($generated@@17 ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@163 $generated@@166) $generated@@164)))) $generated@@165))
 :pattern ( ($generated@@134 $generated@@41 $generated@@49 $generated@@13 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (= ($generated@@107 $generated@@76) $generated@@3))
(assert (= ($generated@@108 $generated@@76) $generated@@8))
(assert (= ($generated@@107 $generated@@34) $generated@@4))
(assert (= ($generated@@108 $generated@@34) $generated@@8))
(assert (= ($generated@@107 $generated@@36) $generated@@5))
(assert (= ($generated@@108 $generated@@36) $generated@@9))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@35 $generated@@14 $generated@@168 $generated@@36)  (and (<= ($generated@@92 0) ($generated@@19 $generated@@168)) (< ($generated@@19 $generated@@168) 4294967296)))
 :pattern ( ($generated@@35 $generated@@14 $generated@@168 $generated@@36))
)))
(assert (forall (($generated@@169 Int) ) (! (= ($generated@@97 $generated@@14 ($generated@@18 ($generated@@92 $generated@@169))) ($generated@@94 $generated@@50 ($generated@@97 $generated@@14 ($generated@@18 $generated@@169))))
 :pattern ( ($generated@@97 $generated@@14 ($generated@@18 ($generated@@92 $generated@@169))))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@97 $generated@@171 ($generated@@94 $generated@@171 $generated@@170)) ($generated@@94 $generated@@50 ($generated@@97 $generated@@171 $generated@@170)))
 :pattern ( ($generated@@97 $generated@@171 ($generated@@94 $generated@@171 $generated@@170)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@181  (=> (and (= $generated@@172 ($generated@@135 $generated@@32 $generated@@173 $generated false)) (= $generated@@174 ($generated@@92 100))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@92 0) $generated@@174) (< $generated@@174 4294967296))) (=> (and (<= ($generated@@92 0) $generated@@174) (< $generated@@174 4294967296)) (=> (< $generated@@175 100) (=> (and (and (and ($generated@@52 $generated@@176) ($generated@@177 $generated@@176)) (and (forall (($generated@@182 T@U) ) (!  (=> (and (or (not (= $generated@@182 $generated@@32)) (not true)) ($generated@@17 ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@173 $generated@@182) $generated)))) (= ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@176 $generated@@182) ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@173 $generated@@182)))
 :pattern ( ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@176 $generated@@182))
)) ($generated@@88 $generated@@173 $generated@@176))) (and (and (or (not (= $generated@@178 $generated@@32)) (not true)) (and ($generated@@35 $generated@@41 $generated@@178 $generated@@76) ($generated@@38 $generated@@41 $generated@@178 $generated@@76 $generated@@176))) (= $generated@@179 ($generated@@92 300)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@92 0) $generated@@179) (< $generated@@179 4294967296))) (=> (and (<= ($generated@@92 0) $generated@@179) (< $generated@@179 4294967296)) (=> (< ($generated@@19 ($generated@@47 $generated@@14 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@41 ($generated@@51 $generated@@49 $generated@@50) $generated@@176 $generated@@178) $generated@@82))) 300) (=> (and (= $generated@@180 ($generated@@92 300)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@92 0) $generated@@180) (< $generated@@180 4294967296)))))))))))))
(let (($generated@@183  (=> (and ($generated@@52 $generated@@173) ($generated@@177 $generated@@173)) (=> (and (and (<= ($generated@@92 0) $generated@@175) (< $generated@@175 4294967296)) (and (= 2 $generated@@30) (= (ControlFlow 0 5) 2))) $generated@@181))))
$generated@@183)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
