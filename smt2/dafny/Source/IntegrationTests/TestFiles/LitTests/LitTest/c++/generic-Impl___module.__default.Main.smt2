(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@T T@T) T@T)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@T T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (= ($generated@@8 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@29) $generated@@31) ($generated@@25 $generated@@26 $generated@@30 ($generated@@28 $generated@@29) $generated@@31))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@29) $generated@@31))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 ($generated@@28 $generated@@29) $generated@@31))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@35 ($generated@@32 $generated@@34) $generated@@36) ($generated@@25 $generated@@26 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
 :pattern ( ($generated@@25 $generated@@26 $generated@@35 ($generated@@32 $generated@@34) $generated@@36))
 :pattern ( ($generated@@25 $generated@@26 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@39 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@39 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@39 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@8 $generated@@40) 4)) (= ($generated@@8 $generated@@41) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@8 ($generated@@42 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@42 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@42 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@42 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@42 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@64 ($generated@@28 $generated@@63) $generated@@65)  (or (= $generated@@64 $generated@@37) ($generated@@13 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@65 $generated@@64) $generated@@1)))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@64 ($generated@@28 $generated@@63) $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@67 ($generated@@33 $generated@@66) $generated@@68)  (or (= $generated@@67 $generated@@37) ($generated@@13 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@68 $generated@@67) $generated@@1)))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@67 ($generated@@33 $generated@@66) $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@69 $generated@@70 $generated@@71) (forall (($generated@@72 T@U) ) (!  (=> ($generated@@13 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@70 $generated@@72) $generated@@1))) ($generated@@13 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@71 $generated@@72) $generated@@1))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@71 $generated@@72) $generated@@1))
)))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@38 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@38 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@79 $generated@@26 $generated@@81 ($generated@@27 $generated@@80))  (and ($generated@@79 $generated@@26 $generated@@81 ($generated@@28 $generated@@80)) (or (not (= $generated@@81 $generated@@37)) (not true))))
 :pattern ( ($generated@@79 $generated@@26 $generated@@81 ($generated@@27 $generated@@80)))
 :pattern ( ($generated@@79 $generated@@26 $generated@@81 ($generated@@28 $generated@@80)))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@79 $generated@@26 $generated@@83 ($generated@@32 $generated@@82))  (and ($generated@@79 $generated@@26 $generated@@83 ($generated@@33 $generated@@82)) (or (not (= $generated@@83 $generated@@37)) (not true))))
 :pattern ( ($generated@@79 $generated@@26 $generated@@83 ($generated@@32 $generated@@82)))
 :pattern ( ($generated@@79 $generated@@26 $generated@@83 ($generated@@33 $generated@@82)))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (!  (=> ($generated@@69 $generated@@84 $generated@@85) (=> ($generated@@25 $generated@@88 $generated@@86 $generated@@87 $generated@@84) ($generated@@25 $generated@@88 $generated@@86 $generated@@87 $generated@@85)))
 :pattern ( ($generated@@69 $generated@@84 $generated@@85) ($generated@@25 $generated@@88 $generated@@86 $generated@@87 $generated@@84))
)))
(assert (forall (($generated@@90 T@U) ) (!  (and (= ($generated@@24 ($generated@@27 $generated@@90)) $generated@@2) (= ($generated@@89 ($generated@@27 $generated@@90)) $generated@@6))
 :pattern ( ($generated@@27 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ) (!  (and (= ($generated@@24 ($generated@@32 $generated@@91)) $generated@@3) (= ($generated@@89 ($generated@@32 $generated@@91)) $generated@@7))
 :pattern ( ($generated@@32 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ) (!  (and (= ($generated@@24 ($generated@@28 $generated@@92)) $generated@@4) (= ($generated@@89 ($generated@@28 $generated@@92)) $generated@@6))
 :pattern ( ($generated@@28 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (!  (and (= ($generated@@24 ($generated@@33 $generated@@93)) $generated@@5) (= ($generated@@89 ($generated@@33 $generated@@93)) $generated@@7))
 :pattern ( ($generated@@33 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@79 $generated@@26 $generated@@96 ($generated@@28 $generated@@95))  (or (= $generated@@96 $generated@@37) (= ($generated@@94 $generated@@96) ($generated@@28 $generated@@95))))
 :pattern ( ($generated@@79 $generated@@26 $generated@@96 ($generated@@28 $generated@@95)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@79 $generated@@26 $generated@@98 ($generated@@33 $generated@@97))  (or (= $generated@@98 $generated@@37) (= ($generated@@94 $generated@@98) ($generated@@33 $generated@@97))))
 :pattern ( ($generated@@79 $generated@@26 $generated@@98 ($generated@@33 $generated@@97)))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or (not (= $generated@@99 $generated@@101)) (not true)) (=> (and ($generated@@69 $generated@@99 $generated@@100) ($generated@@69 $generated@@100 $generated@@101)) ($generated@@69 $generated@@99 $generated@@101)))
 :pattern ( ($generated@@69 $generated@@99 $generated@@100) ($generated@@69 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@102 ($generated@@27 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@27 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@104 ($generated@@32 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@32 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 ($generated@@28 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@28 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 ($generated@@33 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@33 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@38 $generated@@111 ($generated@@76 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@76 $generated@@111 $generated@@110))
)))
(assert  (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@112 $generated@@115 $generated@@116 $generated@@117 ($generated@@114 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@120 $generated@@121) $generated@@118)
 :weight 0
)) (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@112 $generated@@122 $generated@@123 $generated@@124 ($generated@@114 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@112 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@112 $generated@@131 $generated@@132 $generated@@133 ($generated@@114 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@112 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 Bool) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@13 ($generated@@112 $generated@@26 $generated@@40 $generated@@9 ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))  (=> (and (or (not (= $generated@@144 $generated@@140)) (not true)) ($generated@@13 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@141 $generated@@144) $generated@@142)))) $generated@@143))
 :pattern ( ($generated@@112 $generated@@26 $generated@@40 $generated@@9 ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@76 $generated@@147 ($generated@@73 $generated@@147 $generated@@146)) ($generated@@73 $generated@@41 ($generated@@76 $generated@@147 $generated@@146)))
 :pattern ( ($generated@@76 $generated@@147 ($generated@@73 $generated@@147 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! ($generated@@25 $generated@@9 $generated@@149 $generated $generated@@148)
 :pattern ( ($generated@@25 $generated@@9 $generated@@149 $generated $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (! ($generated@@79 $generated@@9 $generated@@150 $generated)
 :pattern ( ($generated@@79 $generated@@9 $generated@@150 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Bool)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () Bool)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@170  (=> (and (= $generated@@151 ($generated@@113 $generated@@37 $generated@@152 $generated@@1 false)) (= $generated@@153 ($generated@@13 ($generated@@73 $generated@@9 ($generated@@12 true))))) (=> (and (and (and (or (not (= $generated@@154 $generated@@37)) (not true)) (and ($generated@@79 $generated@@26 $generated@@154 ($generated@@27 $generated@@155)) ($generated@@25 $generated@@26 $generated@@154 ($generated@@27 $generated@@155) $generated@@152))) (= $generated@@156 ($generated@@76 $generated@@9 ($generated@@12 $generated@@153)))) (and ($generated@@157 $generated@@158) ($generated@@159 $generated@@158))) (=> (and (and (and (and (and (or (not (= $generated@@160 $generated@@37)) (not true)) (and ($generated@@79 $generated@@26 $generated@@160 ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@160 ($generated@@27 $generated) $generated@@158))) (not ($generated@@13 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@152 $generated@@160) $generated@@1))))) (and (forall (($generated@@171 T@U) ) (!  (=> (and (or (not (= $generated@@171 $generated@@37)) (not true)) ($generated@@13 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@152 $generated@@171) $generated@@1)))) (= ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@158 $generated@@171) ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@152 $generated@@171)))
 :pattern ( ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@158 $generated@@171))
)) ($generated@@69 $generated@@152 $generated@@158))) (and (and (or (not (= $generated@@161 $generated@@37)) (not true)) (and ($generated@@79 $generated@@26 $generated@@161 ($generated@@32 $generated@@162)) ($generated@@25 $generated@@26 $generated@@161 ($generated@@32 $generated@@162) $generated@@152))) (and ($generated@@157 $generated@@163) ($generated@@159 $generated@@163)))) (and (and (and (or (not (= $generated@@164 $generated@@37)) (not true)) (and ($generated@@79 $generated@@26 $generated@@164 ($generated@@32 $generated)) ($generated@@25 $generated@@26 $generated@@164 ($generated@@32 $generated) $generated@@163))) (not ($generated@@13 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@158 $generated@@164) $generated@@1))))) (and (forall (($generated@@172 T@U) ) (!  (=> (and (or (not (= $generated@@172 $generated@@37)) (not true)) ($generated@@13 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@158 $generated@@172) $generated@@1)))) (= ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@163 $generated@@172) ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@158 $generated@@172)))
 :pattern ( ($generated@@39 $generated@@26 ($generated@@42 $generated@@40 $generated@@41) $generated@@163 $generated@@172))
)) ($generated@@69 $generated@@158 $generated@@163)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@164 $generated@@37)) (not true))) (=> (or (not (= $generated@@164 $generated@@37)) (not true)) (=> (= (ControlFlow 0 2) (- 0 1)) true)))))))))
(let (($generated@@173  (=> (and (and (and ($generated@@157 $generated@@152) ($generated@@159 $generated@@152)) (and (=> $generated@@165 (and ($generated@@79 $generated@@26 $generated@@166 ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@166 ($generated@@27 $generated) $generated@@152))) true)) (and (and (=> $generated@@167 (and ($generated@@79 $generated@@26 $generated@@168 ($generated@@32 $generated)) ($generated@@25 $generated@@26 $generated@@168 ($generated@@32 $generated) $generated@@152))) true) (and (= 2 $generated@@169) (= (ControlFlow 0 5) 2)))) $generated@@170)))
$generated@@173)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
