(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (T@T T@U T@U) Bool)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@34 (T@U T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@60 (T@U) Int)
(declare-fun $generated@@61 (T@U) Int)
(declare-fun $generated@@66 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@70 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T T@T) T@T)
(declare-fun $generated@@73 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@3 $generated@@21) 3))
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (!  (=> ($generated@@20 $generated@@21 $generated@@24 ($generated@@22 $generated@@23)) ($generated@@19 $generated@@24))
 :pattern ( ($generated@@19 $generated@@24) ($generated@@20 $generated@@21 $generated@@24 ($generated@@22 $generated@@23)))
)))
(assert (forall (($generated@@26 T@U) ) (! (= ($generated@@19 $generated@@26) (= ($generated@@25 $generated@@26) $generated@@0))
 :pattern ( ($generated@@19 $generated@@26))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@T) ) (! (= ($generated@@28 $generated@@30 ($generated@@27 $generated@@30 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@27 $generated@@30 $generated@@29))
)))
(assert (forall (($generated@@32 T@U) ) (!  (=> ($generated@@19 $generated@@32) (exists (($generated@@33 T@U) ) (= $generated@@32 ($generated@@31 $generated@@33))))
 :pattern ( ($generated@@19 $generated@@32))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@34 ($generated@@28 $generated@@39 $generated@@36) $generated@@37 $generated@@38) ($generated@@35 $generated@@39 $generated@@36 $generated@@37 $generated@@38))
 :pattern ( ($generated@@34 ($generated@@28 $generated@@39 $generated@@36) $generated@@37 $generated@@38))
)))
(assert (forall (($generated@@42 T@U) ) (!  (and (= ($generated@@40 ($generated@@22 $generated@@42)) $generated@@1) (= ($generated@@41 ($generated@@22 $generated@@42)) $generated@@2))
 :pattern ( ($generated@@22 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> ($generated@@43 $generated@@46) (= ($generated@@35 $generated@@21 ($generated@@31 $generated@@45) ($generated@@22 $generated@@44) $generated@@46) ($generated@@34 $generated@@45 $generated@@44 $generated@@46)))
 :pattern ( ($generated@@35 $generated@@21 ($generated@@31 $generated@@45) ($generated@@22 $generated@@44) $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@47 ($generated@@28 $generated@@50 $generated@@48) $generated@@49) ($generated@@20 $generated@@50 $generated@@48 $generated@@49))
 :pattern ( ($generated@@47 ($generated@@28 $generated@@50 $generated@@48) $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@25 ($generated@@31 $generated@@51)) $generated@@0)
 :pattern ( ($generated@@31 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@52 ($generated@@22 $generated@@53)) $generated@@53)
 :pattern ( ($generated@@22 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@54 ($generated@@31 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@31 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@27 $generated@@57 ($generated@@28 $generated@@57 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@28 $generated@@57 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@20 $generated@@21 ($generated@@31 $generated@@59) ($generated@@22 $generated@@58)) ($generated@@47 $generated@@59 $generated@@58))
 :pattern ( ($generated@@20 $generated@@21 ($generated@@31 $generated@@59) ($generated@@22 $generated@@58)))
)))
(assert (forall (($generated@@62 T@U) ) (! (< ($generated@@60 $generated@@62) ($generated@@61 ($generated@@31 $generated@@62)))
 :pattern ( ($generated@@31 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (and ($generated@@43 $generated@@65) (and ($generated@@19 $generated@@63) ($generated@@35 $generated@@21 $generated@@63 ($generated@@22 $generated@@64) $generated@@65))) ($generated@@34 ($generated@@54 $generated@@63) $generated@@64 $generated@@65))
 :pattern ( ($generated@@34 ($generated@@54 $generated@@63) $generated@@64 $generated@@65))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@66 $generated@@77 $generated@@78 $generated@@79 ($generated@@73 $generated@@77 $generated@@78 $generated@@79 $generated@@81 $generated@@82 $generated@@83 $generated@@80) $generated@@82 $generated@@83) $generated@@80)
 :weight 0
)) (and (forall (($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (or (= $generated@@89 $generated@@91) (= ($generated@@66 $generated@@84 $generated@@85 $generated@@86 ($generated@@73 $generated@@84 $generated@@85 $generated@@86 $generated@@88 $generated@@89 $generated@@90 $generated@@87) $generated@@91 $generated@@92) ($generated@@66 $generated@@84 $generated@@85 $generated@@86 $generated@@88 $generated@@91 $generated@@92)))
 :weight 0
)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@99 $generated@@101) (= ($generated@@66 $generated@@93 $generated@@94 $generated@@95 ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@97 $generated@@98 $generated@@99 $generated@@96) $generated@@100 $generated@@101) ($generated@@66 $generated@@93 $generated@@94 $generated@@95 $generated@@97 $generated@@100 $generated@@101)))
 :weight 0
)))) (= ($generated@@3 $generated@@67) 4)) (= ($generated@@3 $generated@@68) 5)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@70 $generated@@102 $generated@@103 ($generated@@74 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@104) $generated@@106) $generated@@104)
 :weight 0
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@70 $generated@@107 $generated@@108 ($generated@@74 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@70 $generated@@107 $generated@@108 $generated@@110 $generated@@112)))
 :weight 0
))) (= ($generated@@3 $generated@@71) 6)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (= ($generated@@3 ($generated@@72 $generated@@113 $generated@@114)) 7))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (! (= ($generated@@75 ($generated@@72 $generated@@115 $generated@@116)) $generated@@115)
 :pattern ( ($generated@@72 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (! (= ($generated@@76 ($generated@@72 $generated@@117 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@72 $generated@@117 $generated@@118))
))))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 Bool) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@8 ($generated@@66 $generated@@67 $generated@@68 $generated@@4 ($generated@@69 $generated@@119 $generated@@120 $generated@@121 $generated@@122) $generated@@123 $generated@@124))  (=> (and (or (not (= $generated@@123 $generated@@119)) (not true)) ($generated@@8 ($generated@@27 $generated@@4 ($generated@@70 $generated@@68 $generated@@71 ($generated@@70 $generated@@67 ($generated@@72 $generated@@68 $generated@@71) $generated@@120 $generated@@123) $generated@@121)))) $generated@@122))
 :pattern ( ($generated@@66 $generated@@67 $generated@@68 $generated@@4 ($generated@@69 $generated@@119 $generated@@120 $generated@@121 $generated@@122) $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@60 ($generated@@28 $generated@@21 $generated@@125)) ($generated@@61 $generated@@125))
 :pattern ( ($generated@@60 ($generated@@28 $generated@@21 $generated@@125)))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@47 $generated@@127 ($generated@@22 $generated@@126)) (and (= ($generated@@28 $generated@@21 ($generated@@27 $generated@@21 $generated@@127)) $generated@@127) ($generated@@20 $generated@@21 ($generated@@27 $generated@@21 $generated@@127) ($generated@@22 $generated@@126))))
 :pattern ( ($generated@@47 $generated@@127 ($generated@@22 $generated@@126)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@128 () T@U)
(declare-fun $generated@@129 () T@U)
(declare-fun $generated@@130 () T@U)
(declare-fun $generated@@131 () T@U)
(declare-fun $generated@@132 () T@U)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@135 () Bool)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@138  (=> (= $generated@@128 ($generated@@69 $generated@@129 $generated@@130 $generated false)) (=> (and (= $generated@@131 ($generated@@31 $generated@@132)) (= (ControlFlow 0 2) (- 0 1))) true))))
(let (($generated@@139  (=> (and ($generated@@43 $generated@@130) ($generated@@133 $generated@@130)) (=> (and (and (and ($generated@@47 $generated@@132 $generated@@134) ($generated@@34 $generated@@132 $generated@@134 $generated@@130)) (=> $generated@@135 (and ($generated@@20 $generated@@21 $generated@@136 ($generated@@22 $generated@@134)) ($generated@@35 $generated@@21 $generated@@136 ($generated@@22 $generated@@134) $generated@@130)))) (and (= 1 $generated@@137) (= (ControlFlow 0 3) 2))) $generated@@138))))
$generated@@139)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
