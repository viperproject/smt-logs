(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@33 (Int) Int)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (Int Bool) T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@55 (T@U) Int)
(declare-fun $generated@@60 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@64 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T T@T) T@T)
(declare-fun $generated@@67 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@68 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@119 (T@U) Bool)
(declare-fun $generated@@124 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27)
 :pattern ( ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27))
)))
(assert (= ($generated@@7 $generated@@30) 3))
(assert (forall (($generated@@32 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@32 $generated@@31) ($generated@@28 $generated@@32))
 :pattern ( ($generated@@28 $generated@@32) ($generated@@29 $generated@@30 $generated@@32 $generated@@31))
)))
(assert (forall (($generated@@34 Int) ) (! (= ($generated@@33 $generated@@34) $generated@@34)
 :pattern ( ($generated@@33 $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@T) ) (! (= ($generated@@35 $generated@@37 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@37 $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@28 $generated@@39) (= ($generated@@38 $generated@@39) $generated@@4))
 :pattern ( ($generated@@28 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 ($generated@@40 $generated@@43 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@40 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@45 Int) ($generated@@46 Bool) ) (! (= ($generated@@29 $generated@@30 ($generated@@44 $generated@@45 $generated@@46) $generated@@31)  (and ($generated@@29 $generated@@9 ($generated@@13 $generated@@45) $generated@@25) ($generated@@29 $generated@@8 ($generated@@11 $generated@@46) $generated)))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@44 $generated@@45 $generated@@46) $generated@@31))
)))
(assert (forall (($generated@@47 T@U) ) (!  (=> ($generated@@28 $generated@@47) (exists (($generated@@48 Int) ($generated@@49 Bool) ) (= $generated@@47 ($generated@@44 $generated@@48 $generated@@49))))
 :pattern ( ($generated@@28 $generated@@47))
)))
(assert (forall (($generated@@51 Int) ($generated@@52 Bool) ) (! (= ($generated@@50 ($generated@@44 $generated@@51 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@44 $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@53 Int) ($generated@@54 Bool) ) (! (= ($generated@@38 ($generated@@44 $generated@@53 $generated@@54)) $generated@@4)
 :pattern ( ($generated@@44 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@56 Int) ($generated@@57 Bool) ) (! (= ($generated@@55 ($generated@@44 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@44 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@40 $generated@@59 ($generated@@41 $generated@@59 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@41 $generated@@59 $generated@@58))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@60 $generated@@71 $generated@@72 $generated@@73 ($generated@@67 $generated@@71 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@77 $generated@@74) $generated@@76 $generated@@77) $generated@@74)
 :weight 0
)) (and (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or (= $generated@@83 $generated@@85) (= ($generated@@60 $generated@@78 $generated@@79 $generated@@80 ($generated@@67 $generated@@78 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@84 $generated@@81) $generated@@85 $generated@@86) ($generated@@60 $generated@@78 $generated@@79 $generated@@80 $generated@@82 $generated@@85 $generated@@86)))
 :weight 0
)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (or (= $generated@@93 $generated@@95) (= ($generated@@60 $generated@@87 $generated@@88 $generated@@89 ($generated@@67 $generated@@87 $generated@@88 $generated@@89 $generated@@91 $generated@@92 $generated@@93 $generated@@90) $generated@@94 $generated@@95) ($generated@@60 $generated@@87 $generated@@88 $generated@@89 $generated@@91 $generated@@94 $generated@@95)))
 :weight 0
)))) (= ($generated@@7 $generated@@61) 4)) (= ($generated@@7 $generated@@62) 5)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@64 $generated@@96 $generated@@97 ($generated@@68 $generated@@96 $generated@@97 $generated@@99 $generated@@100 $generated@@98) $generated@@100) $generated@@98)
 :weight 0
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@64 $generated@@101 $generated@@102 ($generated@@68 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@64 $generated@@101 $generated@@102 $generated@@104 $generated@@106)))
 :weight 0
))) (= ($generated@@7 $generated@@65) 6)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@7 ($generated@@66 $generated@@107 $generated@@108)) 7))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@69 ($generated@@66 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@66 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@70 ($generated@@66 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@66 $generated@@111 $generated@@112))
))))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 Bool) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@12 ($generated@@60 $generated@@61 $generated@@62 $generated@@8 ($generated@@63 $generated@@113 $generated@@114 $generated@@115 $generated@@116) $generated@@117 $generated@@118))  (=> (and (or (not (= $generated@@117 $generated@@113)) (not true)) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@64 $generated@@62 $generated@@65 ($generated@@64 $generated@@61 ($generated@@66 $generated@@62 $generated@@65) $generated@@114 $generated@@117) $generated@@115)))) $generated@@116))
 :pattern ( ($generated@@60 $generated@@61 $generated@@62 $generated@@8 ($generated@@63 $generated@@113 $generated@@114 $generated@@115 $generated@@116) $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (and ($generated@@119 $generated@@121) (and ($generated@@28 $generated@@120) ($generated@@24 $generated@@30 $generated@@120 $generated@@31 $generated@@121))) ($generated@@24 $generated@@8 ($generated@@11 ($generated@@50 $generated@@120)) $generated $generated@@121))
 :pattern ( ($generated@@24 $generated@@8 ($generated@@11 ($generated@@50 $generated@@120)) $generated $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (and ($generated@@119 $generated@@123) ($generated@@29 $generated@@30 $generated@@122 $generated@@31)) ($generated@@24 $generated@@30 $generated@@122 $generated@@31 $generated@@123))
 :pattern ( ($generated@@24 $generated@@30 $generated@@122 $generated@@31 $generated@@123))
)))
(assert (= ($generated@@23 $generated@@31) $generated@@2))
(assert (= ($generated@@124 $generated@@31) $generated@@5))
(assert (= ($generated@@23 $generated@@25) $generated@@3))
(assert (= ($generated@@124 $generated@@25) $generated@@6))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@119 $generated@@126) (and ($generated@@28 $generated@@125) ($generated@@24 $generated@@30 $generated@@125 $generated@@31 $generated@@126))) ($generated@@24 $generated@@9 ($generated@@13 ($generated@@55 $generated@@125)) $generated@@25 $generated@@126))
 :pattern ( ($generated@@24 $generated@@9 ($generated@@13 ($generated@@55 $generated@@125)) $generated@@25 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@29 $generated@@9 $generated@@127 $generated@@25)  (and (<= ($generated@@33 0) ($generated@@14 $generated@@127)) (< ($generated@@14 $generated@@127) 4294967296)))
 :pattern ( ($generated@@29 $generated@@9 $generated@@127 $generated@@25))
)))
(assert (forall (($generated@@128 Int) ($generated@@129 T@U) ) (! (= ($generated@@44 ($generated@@33 $generated@@128) ($generated@@12 ($generated@@35 $generated@@8 $generated@@129))) ($generated@@35 $generated@@30 ($generated@@44 $generated@@128 ($generated@@12 $generated@@129))))
 :pattern ( ($generated@@44 ($generated@@33 $generated@@128) ($generated@@12 ($generated@@35 $generated@@8 $generated@@129))))
)))
(assert (forall (($generated@@130 Int) ) (! (= ($generated@@41 $generated@@9 ($generated@@13 ($generated@@33 $generated@@130))) ($generated@@35 $generated@@65 ($generated@@41 $generated@@9 ($generated@@13 $generated@@130))))
 :pattern ( ($generated@@41 $generated@@9 ($generated@@13 ($generated@@33 $generated@@130))))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@41 $generated@@132 ($generated@@35 $generated@@132 $generated@@131)) ($generated@@35 $generated@@65 ($generated@@41 $generated@@132 $generated@@131)))
 :pattern ( ($generated@@41 $generated@@132 ($generated@@35 $generated@@132 $generated@@131)))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! ($generated@@24 $generated@@8 $generated@@134 $generated $generated@@133)
 :pattern ( ($generated@@24 $generated@@8 $generated@@134 $generated $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (! ($generated@@29 $generated@@8 $generated@@135 $generated)
 :pattern ( ($generated@@29 $generated@@8 $generated@@135 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () Int)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@147  (=> (and (or (not (= $generated@@136 ($generated@@33 22))) (not true)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@11 false))))))
(let (($generated@@148 true))
(let (($generated@@149  (=> (and (= $generated@@137 ($generated@@63 $generated@@138 $generated@@139 $generated@@1 false)) (= $generated@@140 ($generated@@33 22))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= ($generated@@33 0) $generated@@140) (< $generated@@140 4294967296))) (=> (and (<= ($generated@@33 0) $generated@@140) (< $generated@@140 4294967296)) (=> (= $generated@@141 ($generated@@35 $generated@@30 ($generated@@44 ($generated@@33 22) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@11 false)))))) (=> (and (and ($generated@@28 $generated@@141) ($generated@@28 $generated@@141)) (and (= $generated@@136 ($generated@@55 $generated@@141)) (= $generated@@142 ($generated@@33 22)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= ($generated@@33 0) $generated@@142) (< $generated@@142 4294967296))) (=> (and (<= ($generated@@33 0) $generated@@142) (< $generated@@142 4294967296)) (and (=> (= (ControlFlow 0 4) 1) $generated@@148) (=> (= (ControlFlow 0 4) 3) $generated@@147)))))))))))
(let (($generated@@150  (=> (and ($generated@@119 $generated@@139) ($generated@@143 $generated@@139)) (=> (and (and ($generated@@29 $generated@@30 $generated@@144 $generated@@31) ($generated@@24 $generated@@30 $generated@@144 $generated@@31 $generated@@139)) true) (=> (and (and (and (<= ($generated@@33 0) $generated@@145) (< $generated@@145 4294967296)) true) (and (= 2 $generated@@146) (= (ControlFlow 0 7) 4))) $generated@@149)))))
$generated@@150)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
