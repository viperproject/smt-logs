(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@U Int) T@U)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@T T@T) T@T)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@38 (T@T) T@T)
(declare-fun $generated@@39 (T@T) T@T)
(declare-fun $generated@@62 (Int) Int)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@T T@U T@U) Bool)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U Int) T@U)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@126 (Int) T@U)
(declare-fun $generated@@127 (T@U) Int)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (! ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22)
 :pattern ( ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22))
)))
(assert (= ($generated@@23 $generated@@24) 0))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 Int) ) (!  (=> (and (<= 0 $generated@@29) (<= $generated@@29 ($generated@@23 $generated@@27))) (= ($generated@@25 ($generated@@26 $generated@@27 $generated@@28) $generated@@29) ($generated@@26 ($generated@@25 $generated@@27 $generated@@29) $generated@@28)))
 :pattern ( ($generated@@25 ($generated@@26 $generated@@27 $generated@@28) $generated@@29))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@40 T@T) ($generated@@41 T@T) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@31 $generated@@40 $generated@@41 ($generated@@37 $generated@@40 $generated@@41 $generated@@43 $generated@@44 $generated@@42) $generated@@44) $generated@@42)
 :weight 0
)) (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (or (= $generated@@49 $generated@@50) (= ($generated@@31 $generated@@45 $generated@@46 ($generated@@37 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@50) ($generated@@31 $generated@@45 $generated@@46 $generated@@48 $generated@@50)))
 :weight 0
))) (= ($generated@@3 $generated@@32) 3)) (= ($generated@@3 $generated@@33) 4)) (= ($generated@@3 $generated@@34) 5)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (= ($generated@@3 ($generated@@35 $generated@@51 $generated@@52)) 6))) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (! (= ($generated@@38 ($generated@@35 $generated@@53 $generated@@54)) $generated@@53)
 :pattern ( ($generated@@35 $generated@@53 $generated@@54))
))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@39 ($generated@@35 $generated@@55 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@35 $generated@@55 $generated@@56))
))))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> ($generated@@30 $generated@@57 $generated@@58) (forall (($generated@@59 T@U) ) (!  (=> ($generated@@8 ($generated@@36 $generated@@4 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@57 $generated@@59) $generated@@0))) ($generated@@8 ($generated@@36 $generated@@4 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@58 $generated@@59) $generated@@0))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@58 $generated@@59) $generated@@0))
)))
 :pattern ( ($generated@@30 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 Int) ) (!  (=> (= $generated@@61 0) (= ($generated@@25 $generated@@60 $generated@@61) $generated@@60))
 :pattern ( ($generated@@25 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@62 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@66 $generated@@65))
)))
(assert (= ($generated@@3 $generated@@68) 7))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and ($generated@@67 $generated@@68 $generated@@71 ($generated@@69 $generated@@73)) ($generated@@70 $generated@@72 $generated@@73)) ($generated@@67 $generated@@68 ($generated@@26 $generated@@71 $generated@@72) ($generated@@69 $generated@@73)))
 :pattern ( ($generated@@67 $generated@@68 ($generated@@26 $generated@@71 $generated@@72) ($generated@@69 $generated@@73)))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 Int) ) (!  (=> (and (<= 0 $generated@@75) (<= $generated@@75 ($generated@@23 $generated@@74))) (= ($generated@@23 ($generated@@25 $generated@@74 $generated@@75)) (- ($generated@@23 $generated@@74) $generated@@75)))
 :pattern ( ($generated@@23 ($generated@@25 $generated@@74 $generated@@75)))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@76 $generated@@78 $generated@@79)  (and (= ($generated@@23 $generated@@78) ($generated@@23 $generated@@79)) (forall (($generated@@80 Int) ) (!  (=> (and (<= 0 $generated@@80) (< $generated@@80 ($generated@@23 $generated@@78))) (= ($generated@@77 $generated@@78 $generated@@80) ($generated@@77 $generated@@79 $generated@@80)))
 :pattern ( ($generated@@77 $generated@@78 $generated@@80))
 :pattern ( ($generated@@77 $generated@@79 $generated@@80))
))))
 :pattern ( ($generated@@76 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@36 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@36 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@23 ($generated@@26 $generated@@84 $generated@@85)) (+ 1 ($generated@@23 $generated@@84)))
 :pattern ( ($generated@@26 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@86 ($generated@@81 $generated@@90 $generated@@87) $generated@@88 $generated@@89) ($generated@@19 $generated@@90 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@86 ($generated@@81 $generated@@90 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@30 $generated@@91 $generated@@92) (=> ($generated@@86 $generated@@93 $generated@@94 $generated@@91) ($generated@@86 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@30 $generated@@91 $generated@@92) ($generated@@86 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (!  (=> ($generated@@30 $generated@@95 $generated@@96) (=> ($generated@@19 $generated@@99 $generated@@97 $generated@@98 $generated@@95) ($generated@@19 $generated@@99 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@30 $generated@@95 $generated@@96) ($generated@@19 $generated@@99 $generated@@97 $generated@@98 $generated@@95))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 Int) ($generated@@102 Int) ) (!  (=> (and (and (<= 0 $generated@@101) (<= 0 $generated@@102)) (< $generated@@102 (- ($generated@@23 $generated@@100) $generated@@101))) (= ($generated@@77 ($generated@@25 $generated@@100 $generated@@101) $generated@@102) ($generated@@77 $generated@@100 (+ $generated@@102 $generated@@101))))
 :weight 25
 :pattern ( ($generated@@77 ($generated@@25 $generated@@100 $generated@@101) $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@70 $generated@@103 $generated@@20) (and (= ($generated@@81 $generated@@5 ($generated@@36 $generated@@5 $generated@@103)) $generated@@103) ($generated@@67 $generated@@5 ($generated@@36 $generated@@5 $generated@@103) $generated@@20)))
 :pattern ( ($generated@@70 $generated@@103 $generated@@20))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 Int) ($generated@@106 T@U) ) (!  (and (=> (= $generated@@105 ($generated@@23 $generated@@104)) (= ($generated@@77 ($generated@@26 $generated@@104 $generated@@106) $generated@@105) $generated@@106)) (=> (or (not (= $generated@@105 ($generated@@23 $generated@@104))) (not true)) (= ($generated@@77 ($generated@@26 $generated@@104 $generated@@106) $generated@@105) ($generated@@77 $generated@@104 $generated@@105))))
 :pattern ( ($generated@@77 ($generated@@26 $generated@@104 $generated@@106) $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> ($generated@@76 $generated@@107 $generated@@108) (= $generated@@107 $generated@@108))
 :pattern ( ($generated@@76 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or (not (= $generated@@109 $generated@@111)) (not true)) (=> (and ($generated@@30 $generated@@109 $generated@@110) ($generated@@30 $generated@@110 $generated@@111)) ($generated@@30 $generated@@109 $generated@@111)))
 :pattern ( ($generated@@30 $generated@@109 $generated@@110) ($generated@@30 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@70 ($generated@@81 $generated@@114 $generated@@112) $generated@@113) ($generated@@67 $generated@@114 $generated@@112 $generated@@113))
 :pattern ( ($generated@@70 ($generated@@81 $generated@@114 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (! (<= 0 ($generated@@23 $generated@@115))
 :pattern ( ($generated@@23 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@19 $generated@@68 $generated@@116 ($generated@@69 $generated@@117) $generated@@118) (forall (($generated@@119 Int) ) (!  (=> (and (<= 0 $generated@@119) (< $generated@@119 ($generated@@23 $generated@@116))) ($generated@@86 ($generated@@77 $generated@@116 $generated@@119) $generated@@117 $generated@@118))
 :pattern ( ($generated@@77 $generated@@116 $generated@@119))
)))
 :pattern ( ($generated@@19 $generated@@68 $generated@@116 ($generated@@69 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@69 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@69 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@69 $generated@@123)) $generated)
 :pattern ( ($generated@@69 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@36 $generated@@125 ($generated@@81 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@81 $generated@@125 $generated@@124))
)))
(assert (forall (($generated@@128 Int) ) (!  (=> (or (and (<= 0 $generated@@128) (< $generated@@128 55296)) (and (<= 57344 $generated@@128) (< $generated@@128 1114112))) (= ($generated@@127 ($generated@@126 $generated@@128)) $generated@@128))
 :pattern ( ($generated@@126 $generated@@128))
)))
(assert  (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@129 $generated@@132 $generated@@133 $generated@@134 ($generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@129 $generated@@139 $generated@@140 $generated@@141 ($generated@@131 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@129 $generated@@148 $generated@@149 $generated@@150 ($generated@@131 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@129 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@8 ($generated@@129 $generated@@34 $generated@@32 $generated@@4 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@8 ($generated@@36 $generated@@4 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@129 $generated@@34 $generated@@32 $generated@@4 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (and (= ($generated@@163 ($generated@@26 $generated@@165 $generated@@166)) $generated@@165) (= ($generated@@164 ($generated@@26 $generated@@165 $generated@@166)) $generated@@166))
 :pattern ( ($generated@@26 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@70 $generated@@167 ($generated@@69 $generated@@168)) (and (= ($generated@@81 $generated@@68 ($generated@@36 $generated@@68 $generated@@167)) $generated@@167) ($generated@@67 $generated@@68 ($generated@@36 $generated@@68 $generated@@167) ($generated@@69 $generated@@168))))
 :pattern ( ($generated@@70 $generated@@167 ($generated@@69 $generated@@168)))
)))
(assert (forall (($generated@@169 T@U) ) (!  (and (= ($generated@@126 ($generated@@127 $generated@@169)) $generated@@169) (or (and (<= 0 ($generated@@127 $generated@@169)) (< ($generated@@127 $generated@@169) 55296)) (and (<= 57344 ($generated@@127 $generated@@169)) (< ($generated@@127 $generated@@169) 1114112))))
 :pattern ( ($generated@@127 $generated@@169))
)))
(assert (= ($generated@@122 $generated@@20) $generated@@1))
(assert (= ($generated@@170 $generated@@20) $generated@@2))
(assert (forall (($generated@@171 T@U) ($generated@@172 Int) ($generated@@173 Int) ) (!  (=> (and (and (<= 0 $generated@@172) (<= $generated@@172 $generated@@173)) (< $generated@@173 ($generated@@23 $generated@@171))) (= ($generated@@77 ($generated@@25 $generated@@171 $generated@@172) (- $generated@@173 $generated@@172)) ($generated@@77 $generated@@171 $generated@@173)))
 :weight 25
 :pattern ( ($generated@@77 $generated@@171 $generated@@173) ($generated@@25 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 Int) ($generated@@176 Int) ) (!  (=> (and (and (<= 0 $generated@@175) (<= 0 $generated@@176)) (<= (+ $generated@@175 $generated@@176) ($generated@@23 $generated@@174))) (= ($generated@@25 ($generated@@25 $generated@@174 $generated@@175) $generated@@176) ($generated@@25 $generated@@174 (+ $generated@@175 $generated@@176))))
 :pattern ( ($generated@@25 ($generated@@25 $generated@@174 $generated@@175) $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@67 $generated@@5 $generated@@177 $generated@@20)  (and (<= ($generated@@62 0) ($generated@@10 $generated@@177)) (< ($generated@@10 $generated@@177) 4294967296)))
 :pattern ( ($generated@@67 $generated@@5 $generated@@177 $generated@@20))
)))
(assert (forall (($generated@@178 Int) ) (! (= ($generated@@81 $generated@@5 ($generated@@9 ($generated@@62 $generated@@178))) ($generated@@64 $generated@@33 ($generated@@81 $generated@@5 ($generated@@9 $generated@@178))))
 :pattern ( ($generated@@81 $generated@@5 ($generated@@9 ($generated@@62 $generated@@178))))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@81 $generated@@180 ($generated@@64 $generated@@180 $generated@@179)) ($generated@@64 $generated@@33 ($generated@@81 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@81 $generated@@180 ($generated@@64 $generated@@180 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= ($generated@@23 $generated@@181) 0) (= $generated@@181 $generated@@24))
 :pattern ( ($generated@@23 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@67 $generated@@68 $generated@@182 ($generated@@69 $generated@@183)) (forall (($generated@@184 Int) ) (!  (=> (and (<= 0 $generated@@184) (< $generated@@184 ($generated@@23 $generated@@182))) ($generated@@70 ($generated@@77 $generated@@182 $generated@@184) $generated@@183))
 :pattern ( ($generated@@77 $generated@@182 $generated@@184))
)))
 :pattern ( ($generated@@67 $generated@@68 $generated@@182 ($generated@@69 $generated@@183)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@T)
(declare-fun $generated@@198 () Bool)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () Int)
(assert (= ($generated@@3 $generated@@197) 8))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@205  (=> (and (= $generated@@185 ($generated@@130 $generated@@186 $generated@@187 $generated@@0 false)) (= $generated@@188 ($generated@@62 1))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@62 0) $generated@@188) (< $generated@@188 4294967296))) (=> (and (<= ($generated@@62 0) $generated@@188) (< $generated@@188 4294967296)) (=> (= $generated@@189 ($generated@@62 2)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@62 0) $generated@@189) (< $generated@@189 4294967296))) (=> (and (<= ($generated@@62 0) $generated@@189) (< $generated@@189 4294967296)) (=> (= $generated@@190 ($generated@@62 3)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@62 0) $generated@@190) (< $generated@@190 4294967296))) (=> (and (<= ($generated@@62 0) $generated@@190) (< $generated@@190 4294967296)) (=> (= $generated@@191 ($generated@@64 $generated@@68 ($generated@@26 ($generated@@26 ($generated@@26 $generated@@24 ($generated@@81 $generated@@5 ($generated@@9 ($generated@@62 1)))) ($generated@@81 $generated@@5 ($generated@@9 ($generated@@62 2)))) ($generated@@81 $generated@@5 ($generated@@9 ($generated@@62 3)))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 ($generated@@62 1)) (<= ($generated@@62 1) ($generated@@23 $generated@@191)))) (=> (and (<= 0 ($generated@@62 1)) (<= ($generated@@62 1) ($generated@@23 $generated@@191))) (=> (and (= $generated@@192 ($generated@@25 $generated@@191 ($generated@@62 1))) (= $generated@@193 ($generated@@62 2))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@62 0) $generated@@193) (< $generated@@193 4294967296))) (=> (and (<= ($generated@@62 0) $generated@@193) (< $generated@@193 4294967296)) (=> (= $generated@@194 ($generated@@62 3)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@62 0) $generated@@194) (< $generated@@194 4294967296))) (=> (and (<= ($generated@@62 0) $generated@@194) (< $generated@@194 4294967296)) (=> (and (and (= $generated@@195 ($generated@@64 $generated@@68 ($generated@@26 ($generated@@26 $generated@@24 ($generated@@81 $generated@@5 ($generated@@9 ($generated@@62 2)))) ($generated@@81 $generated@@5 ($generated@@9 ($generated@@62 3)))))) (= $generated@@196 ($generated@@64 $generated@@68 ($generated@@26 ($generated@@26 ($generated@@26 ($generated@@26 ($generated@@26 ($generated@@26 ($generated@@26 ($generated@@26 ($generated@@26 ($generated@@26 ($generated@@26 ($generated@@26 ($generated@@26 $generated@@24 ($generated@@81 $generated@@197 ($generated@@126 86))) ($generated@@81 $generated@@197 ($generated@@126 97))) ($generated@@81 $generated@@197 ($generated@@126 108))) ($generated@@81 $generated@@197 ($generated@@126 117))) ($generated@@81 $generated@@197 ($generated@@126 101))) ($generated@@81 $generated@@197 ($generated@@126 69))) ($generated@@81 $generated@@197 ($generated@@126 113))) ($generated@@81 $generated@@197 ($generated@@126 117))) ($generated@@81 $generated@@197 ($generated@@126 97))) ($generated@@81 $generated@@197 ($generated@@126 108))) ($generated@@81 $generated@@197 ($generated@@126 105))) ($generated@@81 $generated@@197 ($generated@@126 116))) ($generated@@81 $generated@@197 ($generated@@126 121)))))) (and (= $generated@@198 ($generated@@76 $generated@@192 $generated@@195)) (= (ControlFlow 0 2) (- 0 1)))) $generated@@198)))))))))))))))))))))
(let (($generated@@206  (=> (and ($generated@@199 $generated@@187) ($generated@@200 $generated@@187)) (=> (and (and (and (and ($generated@@67 $generated@@68 $generated@@201 ($generated@@69 $generated@@20)) ($generated@@19 $generated@@68 $generated@@201 ($generated@@69 $generated@@20) $generated@@187)) true) (and (and ($generated@@67 $generated@@68 $generated@@202 ($generated@@69 $generated@@20)) ($generated@@19 $generated@@68 $generated@@202 ($generated@@69 $generated@@20) $generated@@187)) true)) (and (and (and ($generated@@67 $generated@@68 $generated@@203 ($generated@@69 $generated@@20)) ($generated@@19 $generated@@68 $generated@@203 ($generated@@69 $generated@@20) $generated@@187)) true) (and (= 1 $generated@@204) (= (ControlFlow 0 9) 2)))) $generated@@205))))
$generated@@206)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
