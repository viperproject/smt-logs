(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 (T@U T@U) T@U)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@86 (Int) Int)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! ($generated@@30 $generated@@14 $generated@@32 $generated@@31 $generated@@33)
 :pattern ( ($generated@@30 $generated@@14 $generated@@32 $generated@@31 $generated@@33))
)))
(assert (= ($generated@@12 $generated@@34) 3))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@30 $generated@@34 $generated@@38 ($generated@@35 $generated@@37) $generated@@39) ($generated@@30 $generated@@34 $generated@@38 ($generated@@36 $generated@@37) $generated@@39))
 :pattern ( ($generated@@30 $generated@@34 $generated@@38 ($generated@@35 $generated@@37) $generated@@39))
 :pattern ( ($generated@@30 $generated@@34 $generated@@38 ($generated@@36 $generated@@37) $generated@@39))
)))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@40 $generated@@34 $generated@@44 $generated@@41)  (or (= $generated@@44 $generated@@42) (= ($generated@@43 $generated@@44) $generated@@41)))
 :pattern ( ($generated@@40 $generated@@34 $generated@@44 $generated@@41))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@30 $generated@@34 $generated@@46 $generated@@45 $generated@@47) ($generated@@30 $generated@@34 $generated@@46 $generated@@41 $generated@@47))
 :pattern ( ($generated@@30 $generated@@34 $generated@@46 $generated@@45 $generated@@47))
 :pattern ( ($generated@@30 $generated@@34 $generated@@46 $generated@@41 $generated@@47))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@49 $generated@@56 $generated@@57 ($generated@@53 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@60) $generated@@58)
 :weight 0
)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (= $generated@@65 $generated@@66) (= ($generated@@49 $generated@@61 $generated@@62 ($generated@@53 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@66) ($generated@@49 $generated@@61 $generated@@62 $generated@@64 $generated@@66)))
 :weight 0
))) (= ($generated@@12 $generated@@50) 4)) (= ($generated@@12 $generated@@51) 5)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (= ($generated@@12 ($generated@@52 $generated@@67 $generated@@68)) 6))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@54 ($generated@@52 $generated@@69 $generated@@70)) $generated@@69)
 :pattern ( ($generated@@52 $generated@@69 $generated@@70))
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@52 $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@30 $generated@@34 $generated@@74 ($generated@@36 $generated@@73) $generated@@75)  (or (= $generated@@74 $generated@@42) ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@75 $generated@@74) $generated)))))
 :pattern ( ($generated@@30 $generated@@34 $generated@@74 ($generated@@36 $generated@@73) $generated@@75))
)))
(assert (= ($generated@@28 $generated@@76) 0))
(assert (= ($generated@@77 $generated@@6 $generated@@10) $generated@@76))
(assert  (not ($generated@@78 $generated@@76)))
(assert (= ($generated@@28 $generated@@79) 0))
(assert (= ($generated@@77 $generated@@6 $generated@@11) $generated@@79))
(assert  (not ($generated@@78 $generated@@79)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@30 $generated@@34 $generated@@80 $generated@@41 $generated@@81)  (or (= $generated@@80 $generated@@42) ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@81 $generated@@80) $generated)))))
 :pattern ( ($generated@@30 $generated@@34 $generated@@80 $generated@@41 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@82 $generated@@83 $generated@@84) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@83 $generated@@85) $generated))) ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@84 $generated@@85) $generated))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@84 $generated@@85) $generated))
)))
 :pattern ( ($generated@@82 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@87 Int) ) (! (= ($generated@@86 $generated@@87) $generated@@87)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 $generated@@89) $generated@@89)
 :pattern ( ($generated@@88 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 ($generated@@48 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@48 $generated@@93 $generated@@92))
)))
(assert ($generated@@78 $generated))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@40 $generated@@34 $generated@@95 ($generated@@35 $generated@@94))  (and ($generated@@40 $generated@@34 $generated@@95 ($generated@@36 $generated@@94)) (or (not (= $generated@@95 $generated@@42)) (not true))))
 :pattern ( ($generated@@40 $generated@@34 $generated@@95 ($generated@@35 $generated@@94)))
 :pattern ( ($generated@@40 $generated@@34 $generated@@95 ($generated@@36 $generated@@94)))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (!  (=> ($generated@@82 $generated@@96 $generated@@97) (=> ($generated@@30 $generated@@100 $generated@@98 $generated@@99 $generated@@96) ($generated@@30 $generated@@100 $generated@@98 $generated@@99 $generated@@97)))
 :pattern ( ($generated@@82 $generated@@96 $generated@@97) ($generated@@30 $generated@@100 $generated@@98 $generated@@99 $generated@@96))
)))
(assert  (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@101 $generated@@104 $generated@@105 $generated@@106 ($generated@@103 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@109 $generated@@110) $generated@@107)
 :weight 0
)) (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@116 $generated@@118) (= ($generated@@101 $generated@@111 $generated@@112 $generated@@113 ($generated@@103 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@101 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@101 $generated@@120 $generated@@121 $generated@@122 ($generated@@103 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@101 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@17 ($generated@@101 $generated@@34 $generated@@50 $generated@@13 ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))  (=> (and (or (not (= $generated@@135 $generated@@129)) (not true)) ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@130 $generated@@135) $generated@@131)))) (or (or (= $generated@@135 $generated@@132) (= $generated@@135 $generated@@133)) (= $generated@@135 $generated@@134))))
 :pattern ( ($generated@@101 $generated@@34 $generated@@50 $generated@@13 ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ) (!  (and (= ($generated@@137 ($generated@@36 $generated@@139)) $generated@@1) (= ($generated@@138 ($generated@@36 $generated@@139)) $generated@@7))
 :pattern ( ($generated@@36 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (!  (and (= ($generated@@137 ($generated@@35 $generated@@140)) $generated@@2) (= ($generated@@138 ($generated@@35 $generated@@140)) $generated@@7))
 :pattern ( ($generated@@35 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and ($generated@@141 $generated@@142) (and (or (not (= $generated@@143 $generated@@42)) (not true)) (= ($generated@@43 $generated@@143) $generated@@41))) ($generated@@40 $generated@@14 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@142 $generated@@143) $generated@@76)) $generated@@31))
 :pattern ( ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@142 $generated@@143) $generated@@76)))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@40 $generated@@34 $generated@@145 ($generated@@36 $generated@@144))  (or (= $generated@@145 $generated@@42) (= ($generated@@43 $generated@@145) ($generated@@36 $generated@@144))))
 :pattern ( ($generated@@40 $generated@@34 $generated@@145 ($generated@@36 $generated@@144)))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@40 $generated@@34 $generated@@146 $generated@@45)  (and ($generated@@40 $generated@@34 $generated@@146 $generated@@41) (or (not (= $generated@@146 $generated@@42)) (not true))))
 :pattern ( ($generated@@40 $generated@@34 $generated@@146 $generated@@45))
 :pattern ( ($generated@@40 $generated@@34 $generated@@146 $generated@@41))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and ($generated@@141 $generated@@147) (and (or (not (= $generated@@148 $generated@@42)) (not true)) (= ($generated@@43 $generated@@148) $generated@@41))) ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@147 $generated@@148) $generated)))) ($generated@@30 $generated@@14 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@147 $generated@@148) $generated@@76)) $generated@@31 $generated@@147))
 :pattern ( ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@147 $generated@@148) $generated@@76)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and ($generated@@141 $generated@@149) (and (or (not (= $generated@@150 $generated@@42)) (not true)) (= ($generated@@43 $generated@@150) $generated@@41))) ($generated@@40 $generated@@34 ($generated@@48 $generated@@34 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@149 $generated@@150) $generated@@79)) ($generated@@35 $generated@@31)))
 :pattern ( ($generated@@48 $generated@@34 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@149 $generated@@150) $generated@@79)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and ($generated@@141 $generated@@151) (and (or (not (= $generated@@152 $generated@@42)) (not true)) (= ($generated@@43 $generated@@152) $generated@@41))) ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@151 $generated@@152) $generated)))) ($generated@@30 $generated@@34 ($generated@@48 $generated@@34 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@151 $generated@@152) $generated@@79)) ($generated@@35 $generated@@31) $generated@@151))
 :pattern ( ($generated@@48 $generated@@34 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@151 $generated@@152) $generated@@79)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (or (not (= $generated@@153 $generated@@155)) (not true)) (=> (and ($generated@@82 $generated@@153 $generated@@154) ($generated@@82 $generated@@154 $generated@@155)) ($generated@@82 $generated@@153 $generated@@155)))
 :pattern ( ($generated@@82 $generated@@153 $generated@@154) ($generated@@82 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (and (= ($generated@@156 ($generated@@77 $generated@@157 $generated@@158)) $generated@@157) (= ($generated@@29 ($generated@@77 $generated@@157 $generated@@158)) $generated@@158))
 :pattern ( ($generated@@77 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@159 ($generated@@36 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@36 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@161 ($generated@@35 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@35 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@48 $generated@@164 ($generated@@91 $generated@@164 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@91 $generated@@164 $generated@@163))
)))
(assert (= ($generated@@137 $generated@@45) $generated@@3))
(assert (= ($generated@@138 $generated@@45) $generated@@8))
(assert (= ($generated@@137 $generated@@41) $generated@@4))
(assert (= ($generated@@138 $generated@@41) $generated@@8))
(assert (= ($generated@@137 $generated@@31) $generated@@5))
(assert (= ($generated@@138 $generated@@31) $generated@@9))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@40 $generated@@14 $generated@@165 $generated@@31)  (and (<= ($generated@@86 0) ($generated@@19 $generated@@165)) (< ($generated@@19 $generated@@165) 4294967296)))
 :pattern ( ($generated@@40 $generated@@14 $generated@@165 $generated@@31))
)))
(assert (forall (($generated@@166 Int) ) (! (= ($generated@@91 $generated@@14 ($generated@@18 ($generated@@86 $generated@@166))) ($generated@@88 $generated@@51 ($generated@@91 $generated@@14 ($generated@@18 $generated@@166))))
 :pattern ( ($generated@@91 $generated@@14 ($generated@@18 ($generated@@86 $generated@@166))))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@T) ) (! (= ($generated@@91 $generated@@168 ($generated@@88 $generated@@168 $generated@@167)) ($generated@@88 $generated@@51 ($generated@@91 $generated@@168 $generated@@167)))
 :pattern ( ($generated@@91 $generated@@168 ($generated@@88 $generated@@168 $generated@@167)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@177  (=> (= $generated@@169 ($generated@@102 $generated@@42 $generated@@170 $generated $generated@@171 $generated@@172 $generated@@173)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (not (= $generated@@171 $generated@@42)) (not true))) (=> (or (not (= $generated@@171 $generated@@42)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (not (= $generated@@172 $generated@@42)) (not true))) (=> (or (not (= $generated@@172 $generated@@42)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@173 $generated@@42)) (not true))) (=> (or (not (= $generated@@173 $generated@@42)) (not true)) (=> (< (+ (+ ($generated@@19 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@170 $generated@@171) $generated@@76))) ($generated@@19 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@170 $generated@@172) $generated@@76)))) ($generated@@19 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@170 $generated@@173) $generated@@76)))) 1000) (=> (and (and ($generated@@141 $generated@@174) ($generated@@175 $generated@@174)) (and (forall (($generated@@178 T@U) ) (!  (=> (and (or (not (= $generated@@178 $generated@@42)) (not true)) ($generated@@17 ($generated@@48 $generated@@13 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@170 $generated@@178) $generated)))) (or (= ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@174 $generated@@178) ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@170 $generated@@178)) (or (or (= $generated@@178 $generated@@171) (= $generated@@178 $generated@@172)) (= $generated@@178 $generated@@173))))
 :pattern ( ($generated@@49 $generated@@34 ($generated@@52 $generated@@50 $generated@@51) $generated@@174 $generated@@178))
)) ($generated@@82 $generated@@170 $generated@@174))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@171 $generated@@42)) (not true))) (=> (or (not (= $generated@@171 $generated@@42)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@171 $generated@@42)) (not true))) (=> (or (not (= $generated@@171 $generated@@42)) (not true)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@30 $generated@@34 $generated@@171 $generated@@45 $generated@@170)))))))))))))))))
(let (($generated@@179  (=> (and ($generated@@141 $generated@@170) ($generated@@175 $generated@@170)) (=> (and (and (and ($generated@@40 $generated@@34 $generated@@171 $generated@@45) ($generated@@30 $generated@@34 $generated@@171 $generated@@45 $generated@@170)) (and ($generated@@40 $generated@@34 $generated@@172 $generated@@45) ($generated@@30 $generated@@34 $generated@@172 $generated@@45 $generated@@170))) (and (and ($generated@@40 $generated@@34 $generated@@173 $generated@@45) ($generated@@30 $generated@@34 $generated@@173 $generated@@45 $generated@@170)) (and (= 2 $generated@@176) (= (ControlFlow 0 8) 2)))) $generated@@177))))
$generated@@179)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
