(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@46 (Int Bool) T@U)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@57 (T@U) Int)
(declare-fun $generated@@62 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@66 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T T@T) T@T)
(declare-fun $generated@@69 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@121 (T@U) Bool)
(declare-fun $generated@@126 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27)
 :pattern ( ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@29 $generated@@30))
 :pattern ( ($generated@@28 $generated@@30))
)))
(assert (= ($generated@@7 $generated@@32) 3))
(assert (forall (($generated@@34 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@34 $generated@@33) ($generated@@29 $generated@@34))
 :pattern ( ($generated@@29 $generated@@34) ($generated@@31 $generated@@32 $generated@@34 $generated@@33))
)))
(assert (forall (($generated@@36 Int) ) (! (= ($generated@@35 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@37 $generated@@39 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@39 $generated@@38))
)))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@29 $generated@@41) (= ($generated@@40 $generated@@41) $generated@@4))
 :pattern ( ($generated@@29 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 ($generated@@42 $generated@@45 $generated@@44)) $generated@@44)
 :pattern ( ($generated@@42 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@47 Int) ($generated@@48 Bool) ) (! (= ($generated@@31 $generated@@32 ($generated@@46 $generated@@47 $generated@@48) $generated@@33)  (and ($generated@@31 $generated@@9 ($generated@@13 $generated@@47) $generated@@25) ($generated@@31 $generated@@8 ($generated@@11 $generated@@48) $generated)))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@46 $generated@@47 $generated@@48) $generated@@33))
)))
(assert (forall (($generated@@49 T@U) ) (!  (=> ($generated@@29 $generated@@49) (exists (($generated@@50 Int) ($generated@@51 Bool) ) (= $generated@@49 ($generated@@46 $generated@@50 $generated@@51))))
 :pattern ( ($generated@@29 $generated@@49))
)))
(assert (forall (($generated@@53 Int) ($generated@@54 Bool) ) (! (= ($generated@@52 ($generated@@46 $generated@@53 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@46 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@55 Int) ($generated@@56 Bool) ) (! (= ($generated@@40 ($generated@@46 $generated@@55 $generated@@56)) $generated@@4)
 :pattern ( ($generated@@46 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 Int) ($generated@@59 Bool) ) (! (= ($generated@@57 ($generated@@46 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@46 $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@42 $generated@@61 ($generated@@43 $generated@@61 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@43 $generated@@61 $generated@@60))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@62 $generated@@73 $generated@@74 $generated@@75 ($generated@@69 $generated@@73 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@79 $generated@@76) $generated@@78 $generated@@79) $generated@@76)
 :weight 0
)) (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (or (= $generated@@85 $generated@@87) (= ($generated@@62 $generated@@80 $generated@@81 $generated@@82 ($generated@@69 $generated@@80 $generated@@81 $generated@@82 $generated@@84 $generated@@85 $generated@@86 $generated@@83) $generated@@87 $generated@@88) ($generated@@62 $generated@@80 $generated@@81 $generated@@82 $generated@@84 $generated@@87 $generated@@88)))
 :weight 0
)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (or (= $generated@@95 $generated@@97) (= ($generated@@62 $generated@@89 $generated@@90 $generated@@91 ($generated@@69 $generated@@89 $generated@@90 $generated@@91 $generated@@93 $generated@@94 $generated@@95 $generated@@92) $generated@@96 $generated@@97) ($generated@@62 $generated@@89 $generated@@90 $generated@@91 $generated@@93 $generated@@96 $generated@@97)))
 :weight 0
)))) (= ($generated@@7 $generated@@63) 4)) (= ($generated@@7 $generated@@64) 5)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@66 $generated@@98 $generated@@99 ($generated@@70 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@100) $generated@@102) $generated@@100)
 :weight 0
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@66 $generated@@103 $generated@@104 ($generated@@70 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@66 $generated@@103 $generated@@104 $generated@@106 $generated@@108)))
 :weight 0
))) (= ($generated@@7 $generated@@67) 6)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (= ($generated@@7 ($generated@@68 $generated@@109 $generated@@110)) 7))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@71 ($generated@@68 $generated@@111 $generated@@112)) $generated@@111)
 :pattern ( ($generated@@68 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (! (= ($generated@@72 ($generated@@68 $generated@@113 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@68 $generated@@113 $generated@@114))
))))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 Bool) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@12 ($generated@@62 $generated@@63 $generated@@64 $generated@@8 ($generated@@65 $generated@@115 $generated@@116 $generated@@117 $generated@@118) $generated@@119 $generated@@120))  (=> (and (or (not (= $generated@@119 $generated@@115)) (not true)) ($generated@@12 ($generated@@42 $generated@@8 ($generated@@66 $generated@@64 $generated@@67 ($generated@@66 $generated@@63 ($generated@@68 $generated@@64 $generated@@67) $generated@@116 $generated@@119) $generated@@117)))) $generated@@118))
 :pattern ( ($generated@@62 $generated@@63 $generated@@64 $generated@@8 ($generated@@65 $generated@@115 $generated@@116 $generated@@117 $generated@@118) $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (and ($generated@@121 $generated@@123) (and ($generated@@29 $generated@@122) ($generated@@24 $generated@@32 $generated@@122 $generated@@33 $generated@@123))) ($generated@@24 $generated@@8 ($generated@@11 ($generated@@52 $generated@@122)) $generated $generated@@123))
 :pattern ( ($generated@@24 $generated@@8 ($generated@@11 ($generated@@52 $generated@@122)) $generated $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (and ($generated@@121 $generated@@125) ($generated@@31 $generated@@32 $generated@@124 $generated@@33)) ($generated@@24 $generated@@32 $generated@@124 $generated@@33 $generated@@125))
 :pattern ( ($generated@@24 $generated@@32 $generated@@124 $generated@@33 $generated@@125))
)))
(assert (= ($generated@@23 $generated@@33) $generated@@2))
(assert (= ($generated@@126 $generated@@33) $generated@@5))
(assert (= ($generated@@23 $generated@@25) $generated@@3))
(assert (= ($generated@@126 $generated@@25) $generated@@6))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and ($generated@@121 $generated@@128) (and ($generated@@29 $generated@@127) ($generated@@24 $generated@@32 $generated@@127 $generated@@33 $generated@@128))) ($generated@@24 $generated@@9 ($generated@@13 ($generated@@57 $generated@@127)) $generated@@25 $generated@@128))
 :pattern ( ($generated@@24 $generated@@9 ($generated@@13 ($generated@@57 $generated@@127)) $generated@@25 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@31 $generated@@9 $generated@@129 $generated@@25)  (and (<= ($generated@@35 0) ($generated@@14 $generated@@129)) (< ($generated@@14 $generated@@129) 4294967296)))
 :pattern ( ($generated@@31 $generated@@9 $generated@@129 $generated@@25))
)))
(assert (forall (($generated@@130 Int) ($generated@@131 T@U) ) (! (= ($generated@@46 ($generated@@35 $generated@@130) ($generated@@12 ($generated@@37 $generated@@8 $generated@@131))) ($generated@@37 $generated@@32 ($generated@@46 $generated@@130 ($generated@@12 $generated@@131))))
 :pattern ( ($generated@@46 ($generated@@35 $generated@@130) ($generated@@12 ($generated@@37 $generated@@8 $generated@@131))))
)))
(assert (forall (($generated@@132 Int) ) (! (= ($generated@@43 $generated@@9 ($generated@@13 ($generated@@35 $generated@@132))) ($generated@@37 $generated@@67 ($generated@@43 $generated@@9 ($generated@@13 $generated@@132))))
 :pattern ( ($generated@@43 $generated@@9 ($generated@@13 ($generated@@35 $generated@@132))))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@43 $generated@@134 ($generated@@37 $generated@@134 $generated@@133)) ($generated@@37 $generated@@67 ($generated@@43 $generated@@134 $generated@@133)))
 :pattern ( ($generated@@43 $generated@@134 ($generated@@37 $generated@@134 $generated@@133)))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! ($generated@@24 $generated@@8 $generated@@136 $generated $generated@@135)
 :pattern ( ($generated@@24 $generated@@8 $generated@@136 $generated $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (! ($generated@@31 $generated@@8 $generated@@137 $generated)
 :pattern ( ($generated@@31 $generated@@8 $generated@@137 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@148  (=> (and (= $generated@@138 ($generated@@65 $generated@@139 $generated@@140 $generated@@1 false)) (= $generated@@141 $generated@@142)) (=> (and (and ($generated@@31 $generated@@32 $generated@@141 $generated@@33) (= $generated@@143 $generated@@141)) (and (= $generated@@144 ($generated@@35 0)) (= (ControlFlow 0 2) (- 0 1)))) (and (<= ($generated@@35 0) $generated@@144) (< $generated@@144 4294967296))))))
(let (($generated@@149  (=> (and ($generated@@121 $generated@@140) ($generated@@145 $generated@@140)) (=> (and (and ($generated@@31 $generated@@32 $generated@@142 $generated@@33) ($generated@@24 $generated@@32 $generated@@142 $generated@@33 $generated@@140)) ($generated@@28 $generated@@142)) (=> (and (and (and ($generated@@31 $generated@@32 $generated@@146 $generated@@33) ($generated@@24 $generated@@32 $generated@@146 $generated@@33 $generated@@140)) true) (and (= 2 $generated@@147) (= (ControlFlow 0 3) 2))) $generated@@148)))))
$generated@@149)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
