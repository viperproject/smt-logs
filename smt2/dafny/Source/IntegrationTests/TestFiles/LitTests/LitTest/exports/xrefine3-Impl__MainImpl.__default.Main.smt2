(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@20 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@T T@T) T@T)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@26 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@27 (T@T) T@T)
(declare-fun $generated@@28 (T@T) T@T)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@U T@U) Bool)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@82 (T@U Int) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (= ($generated@@17 $generated@@18) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@29 T@T) ($generated@@30 T@T) ($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@20 $generated@@29 $generated@@30 ($generated@@26 $generated@@29 $generated@@30 $generated@@32 $generated@@33 $generated@@31) $generated@@33) $generated@@31)
 :weight 0
)) (forall (($generated@@34 T@T) ($generated@@35 T@T) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (or (= $generated@@38 $generated@@39) (= ($generated@@20 $generated@@34 $generated@@35 ($generated@@26 $generated@@34 $generated@@35 $generated@@37 $generated@@38 $generated@@36) $generated@@39) ($generated@@20 $generated@@34 $generated@@35 $generated@@37 $generated@@39)))
 :weight 0
))) (= ($generated@@1 $generated@@21) 3)) (= ($generated@@1 $generated@@22) 4)) (= ($generated@@1 $generated@@23) 5)) (forall (($generated@@40 T@T) ($generated@@41 T@T) ) (= ($generated@@1 ($generated@@24 $generated@@40 $generated@@41)) 6))) (forall (($generated@@42 T@T) ($generated@@43 T@T) ) (! (= ($generated@@27 ($generated@@24 $generated@@42 $generated@@43)) $generated@@42)
 :pattern ( ($generated@@24 $generated@@42 $generated@@43))
))) (forall (($generated@@44 T@T) ($generated@@45 T@T) ) (! (= ($generated@@28 ($generated@@24 $generated@@44 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@24 $generated@@44 $generated@@45))
))))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> ($generated@@19 $generated@@46 $generated@@47) (forall (($generated@@48 T@U) ) (!  (=> ($generated@@6 ($generated@@25 $generated@@2 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@46 $generated@@48) $generated@@0))) ($generated@@6 ($generated@@25 $generated@@2 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@47 $generated@@48) $generated@@0))))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@47 $generated@@48) $generated@@0))
)))
 :pattern ( ($generated@@19 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 Int) ) (! (= ($generated@@49 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@53 $generated@@52))
)))
(assert (= ($generated@@1 $generated@@55) 7))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (and ($generated@@54 $generated@@55 $generated@@59 ($generated@@57 $generated@@61)) ($generated@@58 $generated@@60 $generated@@61)) ($generated@@54 $generated@@55 ($generated@@56 $generated@@59 $generated@@60) ($generated@@57 $generated@@61)))
 :pattern ( ($generated@@54 $generated@@55 ($generated@@56 $generated@@59 $generated@@60) ($generated@@57 $generated@@61)))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 ($generated@@25 $generated@@64 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@25 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@17 ($generated@@56 $generated@@65 $generated@@66)) (+ 1 ($generated@@17 $generated@@65)))
 :pattern ( ($generated@@56 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@67 ($generated@@62 $generated@@72 $generated@@69) $generated@@70 $generated@@71) ($generated@@68 $generated@@72 $generated@@69 $generated@@70 $generated@@71))
 :pattern ( ($generated@@67 ($generated@@62 $generated@@72 $generated@@69) $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@19 $generated@@73 $generated@@74) (=> ($generated@@67 $generated@@75 $generated@@76 $generated@@73) ($generated@@67 $generated@@75 $generated@@76 $generated@@74)))
 :pattern ( ($generated@@19 $generated@@73 $generated@@74) ($generated@@67 $generated@@75 $generated@@76 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (!  (=> ($generated@@19 $generated@@77 $generated@@78) (=> ($generated@@68 $generated@@81 $generated@@79 $generated@@80 $generated@@77) ($generated@@68 $generated@@81 $generated@@79 $generated@@80 $generated@@78)))
 :pattern ( ($generated@@19 $generated@@77 $generated@@78) ($generated@@68 $generated@@81 $generated@@79 $generated@@80 $generated@@77))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 Int) ($generated@@85 T@U) ) (!  (and (=> (= $generated@@84 ($generated@@17 $generated@@83)) (= ($generated@@82 ($generated@@56 $generated@@83 $generated@@85) $generated@@84) $generated@@85)) (=> (or (not (= $generated@@84 ($generated@@17 $generated@@83))) (not true)) (= ($generated@@82 ($generated@@56 $generated@@83 $generated@@85) $generated@@84) ($generated@@82 $generated@@83 $generated@@84))))
 :pattern ( ($generated@@82 ($generated@@56 $generated@@83 $generated@@85) $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (or (not (= $generated@@86 $generated@@88)) (not true)) (=> (and ($generated@@19 $generated@@86 $generated@@87) ($generated@@19 $generated@@87 $generated@@88)) ($generated@@19 $generated@@86 $generated@@88)))
 :pattern ( ($generated@@19 $generated@@86 $generated@@87) ($generated@@19 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@58 ($generated@@62 $generated@@91 $generated@@89) $generated@@90) ($generated@@54 $generated@@91 $generated@@89 $generated@@90))
 :pattern ( ($generated@@58 ($generated@@62 $generated@@91 $generated@@89) $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (! (<= 0 ($generated@@17 $generated@@92))
 :pattern ( ($generated@@17 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@68 $generated@@55 $generated@@93 ($generated@@57 $generated@@94) $generated@@95) (forall (($generated@@96 Int) ) (!  (=> (and (<= 0 $generated@@96) (< $generated@@96 ($generated@@17 $generated@@93))) ($generated@@67 ($generated@@82 $generated@@93 $generated@@96) $generated@@94 $generated@@95))
 :pattern ( ($generated@@82 $generated@@93 $generated@@96))
)))
 :pattern ( ($generated@@68 $generated@@55 $generated@@93 ($generated@@57 $generated@@94) $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@97 ($generated@@57 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@57 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@99 ($generated@@57 $generated@@100)) $generated)
 :pattern ( ($generated@@57 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@25 $generated@@102 ($generated@@62 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@62 $generated@@102 $generated@@101))
)))
(assert  (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@103 $generated@@106 $generated@@107 $generated@@108 ($generated@@105 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@111 $generated@@112) $generated@@109)
 :weight 0
)) (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@103 $generated@@113 $generated@@114 $generated@@115 ($generated@@105 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@103 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@103 $generated@@122 $generated@@123 $generated@@124 ($generated@@105 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@103 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)))))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 Bool) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@6 ($generated@@103 $generated@@23 $generated@@21 $generated@@2 ($generated@@104 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))  (=> (and (or (not (= $generated@@135 $generated@@131)) (not true)) ($generated@@6 ($generated@@25 $generated@@2 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@132 $generated@@135) $generated@@133)))) $generated@@134))
 :pattern ( ($generated@@103 $generated@@23 $generated@@21 $generated@@2 ($generated@@104 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (and (= ($generated@@137 ($generated@@56 $generated@@139 $generated@@140)) $generated@@139) (= ($generated@@138 ($generated@@56 $generated@@139 $generated@@140)) $generated@@140))
 :pattern ( ($generated@@56 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@58 $generated@@141 ($generated@@57 $generated@@142)) (and (= ($generated@@62 $generated@@55 ($generated@@25 $generated@@55 $generated@@141)) $generated@@141) ($generated@@54 $generated@@55 ($generated@@25 $generated@@55 $generated@@141) ($generated@@57 $generated@@142))))
 :pattern ( ($generated@@58 $generated@@141 ($generated@@57 $generated@@142)))
)))
(assert (forall (($generated@@143 Int) ) (! (= ($generated@@62 $generated@@3 ($generated@@7 ($generated@@49 $generated@@143))) ($generated@@51 $generated@@22 ($generated@@62 $generated@@3 ($generated@@7 $generated@@143))))
 :pattern ( ($generated@@62 $generated@@3 ($generated@@7 ($generated@@49 $generated@@143))))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@62 $generated@@145 ($generated@@51 $generated@@145 $generated@@144)) ($generated@@51 $generated@@22 ($generated@@62 $generated@@145 $generated@@144)))
 :pattern ( ($generated@@62 $generated@@145 ($generated@@51 $generated@@145 $generated@@144)))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= ($generated@@17 $generated@@146) 0) (= $generated@@146 $generated@@18))
 :pattern ( ($generated@@17 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@54 $generated@@55 $generated@@147 ($generated@@57 $generated@@148)) (forall (($generated@@149 Int) ) (!  (=> (and (<= 0 $generated@@149) (< $generated@@149 ($generated@@17 $generated@@147))) ($generated@@58 ($generated@@82 $generated@@147 $generated@@149) $generated@@148))
 :pattern ( ($generated@@82 $generated@@147 $generated@@149))
)))
 :pattern ( ($generated@@54 $generated@@55 $generated@@147 ($generated@@57 $generated@@148)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@170  (=> (and (forall (($generated@@171 Int) ) (!  (=> (and (<= ($generated@@49 0) $generated@@171) (< $generated@@171 ($generated@@17 $generated@@150))) ($generated@@151 ($generated@@82 $generated@@150 $generated@@171)))
 :pattern ( ($generated@@82 $generated@@150 $generated@@171))
)) (= (ControlFlow 0 3) (- 0 2))) (forall (($generated@@172 Int) ) (!  (=> (and (<= ($generated@@49 0) $generated@@172) (< $generated@@172 ($generated@@17 $generated@@150))) ($generated@@152 ($generated@@82 $generated@@150 $generated@@172)))
 :pattern ( ($generated@@82 $generated@@150 $generated@@172))
)))))
(let (($generated@@173  (=> (and (not (and (<= ($generated@@49 0) $generated@@153) (< $generated@@153 ($generated@@17 $generated@@150)))) (= (ControlFlow 0 6) 3)) $generated@@170)))
(let (($generated@@174  (=> (and (<= ($generated@@49 0) $generated@@153) (< $generated@@153 ($generated@@17 $generated@@150))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 $generated@@153) (< $generated@@153 ($generated@@17 $generated@@150)))) (=> (and (and (= $generated@@154 ($generated@@82 $generated@@150 $generated@@153)) ($generated@@67 $generated@@154 $generated@@155 $generated@@156)) (and ($generated@@151 ($generated@@82 $generated@@150 $generated@@153)) (= (ControlFlow 0 4) 3))) $generated@@170)))))
(let (($generated@@175  (=> (< $generated@@153 ($generated@@49 0)) (and (=> (= (ControlFlow 0 8) 4) $generated@@174) (=> (= (ControlFlow 0 8) 6) $generated@@173)))))
(let (($generated@@176  (=> (<= ($generated@@49 0) $generated@@153) (and (=> (= (ControlFlow 0 7) 4) $generated@@174) (=> (= (ControlFlow 0 7) 6) $generated@@173)))))
(let (($generated@@177  (and (=> (= (ControlFlow 0 9) 7) $generated@@176) (=> (= (ControlFlow 0 9) 8) $generated@@175))))
(let (($generated@@178 true))
(let (($generated@@179  (=> (= $generated@@157 ($generated@@104 $generated@@158 $generated@@159 $generated@@0 false)) (=> (and (and ($generated@@58 $generated@@160 $generated@@155) ($generated@@67 $generated@@160 $generated@@155 $generated@@159)) (and ($generated@@161 $generated@@156) ($generated@@162 $generated@@156))) (=> (and (and (and ($generated@@58 $generated@@163 $generated@@155) ($generated@@67 $generated@@163 $generated@@155 $generated@@156)) ($generated@@151 $generated@@163)) (and (and ($generated@@152 $generated@@163) (forall (($generated@@180 T@U) ) (!  (=> (and (or (not (= $generated@@180 $generated@@158)) (not true)) ($generated@@6 ($generated@@25 $generated@@2 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@159 $generated@@180) $generated@@0)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@156 $generated@@180) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@159 $generated@@180)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@156 $generated@@180))
))) (and ($generated@@19 $generated@@159 $generated@@156) (= $generated@@150 ($generated@@56 ($generated@@56 $generated@@18 $generated@@163) $generated@@163))))) (and (=> (= (ControlFlow 0 10) 9) $generated@@177) (=> (= (ControlFlow 0 10) 1) $generated@@178)))))))
(let (($generated@@181  (=> (and ($generated@@161 $generated@@159) ($generated@@162 $generated@@159)) (=> (and (and ($generated@@58 $generated@@164 $generated@@155) ($generated@@67 $generated@@164 $generated@@155 $generated@@159)) true) (=> (and (and (and ($generated@@54 $generated@@55 $generated@@165 ($generated@@57 $generated@@155)) ($generated@@68 $generated@@55 $generated@@165 ($generated@@57 $generated@@155) $generated@@159)) true) (and (and (=> $generated@@166 (and ($generated@@58 $generated@@167 $generated@@168) ($generated@@67 $generated@@167 $generated@@168 $generated@@159))) true) (and (= 0 $generated@@169) (= (ControlFlow 0 11) 10)))) $generated@@179)))))
$generated@@181))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
