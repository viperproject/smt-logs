(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 (T@T T@U) T@U)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@27 () Real)
(declare-fun $generated@@29 (Int) Int)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@66 (Real) Real)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated) $generated@@1))
(assert (= ($generated@@20 $generated@@0) $generated@@2))
(assert ($generated@@9 ($generated@@21 $generated@@5 ($generated@@8 (< $generated@@22 10)))))
(assert (forall (($generated@@26 T@U) ) (!  (=> ($generated@@25 $generated@@26) ($generated@@23 $generated@@6 ($generated@@10 $generated@@24) $generated $generated@@26))
 :pattern ( ($generated@@23 $generated@@6 ($generated@@10 $generated@@24) $generated $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ) (!  (=> ($generated@@25 $generated@@28) ($generated@@23 $generated@@7 ($generated@@12 $generated@@27) $generated@@0 $generated@@28))
 :pattern ( ($generated@@23 $generated@@7 ($generated@@12 $generated@@27) $generated@@0 $generated@@28))
)))
(assert (= $generated@@22 ($generated@@29 2)))
(assert (= $generated@@22 ($generated@@29 2)))
(assert (forall (($generated@@34 T@U) ) (!  (=> ($generated@@31 $generated@@34 $generated@@32) ($generated@@33 $generated@@6 ($generated@@10 ($generated@@30 $generated@@34)) $generated))
 :pattern ( ($generated@@30 $generated@@34))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@36 $generated@@45 $generated@@46 ($generated@@42 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@49) $generated@@47)
 :weight 0
)) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (or (= $generated@@54 $generated@@55) (= ($generated@@36 $generated@@50 $generated@@51 ($generated@@42 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@55) ($generated@@36 $generated@@50 $generated@@51 $generated@@53 $generated@@55)))
 :weight 0
))) (= ($generated@@4 $generated@@37) 3)) (= ($generated@@4 $generated@@38) 4)) (= ($generated@@4 $generated@@39) 5)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (= ($generated@@4 ($generated@@40 $generated@@56 $generated@@57)) 6))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@40 $generated@@58 $generated@@59))
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@44 ($generated@@40 $generated@@60 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@40 $generated@@60 $generated@@61))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> ($generated@@35 $generated@@62 $generated@@63) (forall (($generated@@64 T@U) ) (!  (=> ($generated@@9 ($generated@@41 $generated@@5 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@62 $generated@@64) $generated@@3))) ($generated@@9 ($generated@@41 $generated@@5 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@63 $generated@@64) $generated@@3))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@63 $generated@@64) $generated@@3))
)))
 :pattern ( ($generated@@35 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@29 $generated@@65) $generated@@65)
 :pattern ( ($generated@@29 $generated@@65))
)))
(assert (forall (($generated@@67 Real) ) (! (= ($generated@@66 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@21 $generated@@69 $generated@@68) $generated@@68)
 :pattern ( ($generated@@21 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@41 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@41 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@30 $generated@@73) ($generated@@29 59))
 :pattern ( ($generated@@30 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@70 $generated@@78 $generated@@75) $generated@@76 $generated@@77) ($generated@@23 $generated@@78 $generated@@75 $generated@@76 $generated@@77))
 :pattern ( ($generated@@74 ($generated@@70 $generated@@78 $generated@@75) $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> ($generated@@35 $generated@@79 $generated@@80) (=> ($generated@@74 $generated@@81 $generated@@82 $generated@@79) ($generated@@74 $generated@@81 $generated@@82 $generated@@80)))
 :pattern ( ($generated@@35 $generated@@79 $generated@@80) ($generated@@74 $generated@@81 $generated@@82 $generated@@79))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@T) ) (!  (=> ($generated@@35 $generated@@83 $generated@@84) (=> ($generated@@23 $generated@@87 $generated@@85 $generated@@86 $generated@@83) ($generated@@23 $generated@@87 $generated@@85 $generated@@86 $generated@@84)))
 :pattern ( ($generated@@35 $generated@@83 $generated@@84) ($generated@@23 $generated@@87 $generated@@85 $generated@@86 $generated@@83))
)))
(assert ($generated@@33 $generated@@6 ($generated@@10 $generated@@24) $generated))
(assert ($generated@@33 $generated@@7 ($generated@@12 $generated@@27) $generated@@0))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (or (not (= $generated@@88 $generated@@90)) (not true)) (=> (and ($generated@@35 $generated@@88 $generated@@89) ($generated@@35 $generated@@89 $generated@@90)) ($generated@@35 $generated@@88 $generated@@90)))
 :pattern ( ($generated@@35 $generated@@88 $generated@@89) ($generated@@35 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@31 $generated@@91 $generated) (and (= ($generated@@70 $generated@@6 ($generated@@41 $generated@@6 $generated@@91)) $generated@@91) ($generated@@33 $generated@@6 ($generated@@41 $generated@@6 $generated@@91) $generated)))
 :pattern ( ($generated@@31 $generated@@91 $generated))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@31 $generated@@92 $generated@@0) (and (= ($generated@@70 $generated@@7 ($generated@@41 $generated@@7 $generated@@92)) $generated@@92) ($generated@@33 $generated@@7 ($generated@@41 $generated@@7 $generated@@92) $generated@@0)))
 :pattern ( ($generated@@31 $generated@@92 $generated@@0))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@31 ($generated@@70 $generated@@95 $generated@@93) $generated@@94) ($generated@@33 $generated@@95 $generated@@93 $generated@@94))
 :pattern ( ($generated@@31 ($generated@@70 $generated@@95 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@41 $generated@@97 ($generated@@70 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@70 $generated@@97 $generated@@96))
)))
(assert (= $generated@@24 ($generated@@29 10)))
(assert (= $generated@@27 ($generated@@66 3.14)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and (and ($generated@@25 $generated@@98) ($generated@@31 $generated@@99 $generated@@32)) ($generated@@74 $generated@@99 $generated@@32 $generated@@98)) ($generated@@23 $generated@@6 ($generated@@10 ($generated@@30 $generated@@99)) $generated $generated@@98))
 :pattern ( ($generated@@30 $generated@@99) ($generated@@74 $generated@@99 $generated@@32 $generated@@98))
)))
(assert  (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@100 $generated@@103 $generated@@104 $generated@@105 ($generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@100 $generated@@110 $generated@@111 $generated@@112 ($generated@@102 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@100 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@100 $generated@@119 $generated@@120 $generated@@121 ($generated@@102 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@100 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 Bool) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@9 ($generated@@100 $generated@@39 $generated@@37 $generated@@5 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))  (=> (and (or (not (= $generated@@132 $generated@@128)) (not true)) ($generated@@9 ($generated@@41 $generated@@5 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@129 $generated@@132) $generated@@130)))) $generated@@131))
 :pattern ( ($generated@@100 $generated@@39 $generated@@37 $generated@@5 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 Int) ) (! (= ($generated@@70 $generated@@6 ($generated@@10 ($generated@@29 $generated@@134))) ($generated@@21 $generated@@38 ($generated@@70 $generated@@6 ($generated@@10 $generated@@134))))
 :pattern ( ($generated@@70 $generated@@6 ($generated@@10 ($generated@@29 $generated@@134))))
)))
(assert (forall (($generated@@135 Real) ) (! (= ($generated@@70 $generated@@7 ($generated@@12 ($generated@@66 $generated@@135))) ($generated@@21 $generated@@38 ($generated@@70 $generated@@7 ($generated@@12 $generated@@135))))
 :pattern ( ($generated@@70 $generated@@7 ($generated@@12 ($generated@@66 $generated@@135))))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@70 $generated@@137 ($generated@@21 $generated@@137 $generated@@136)) ($generated@@21 $generated@@38 ($generated@@70 $generated@@137 $generated@@136)))
 :pattern ( ($generated@@70 $generated@@137 ($generated@@21 $generated@@137 $generated@@136)))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! ($generated@@23 $generated@@6 $generated@@139 $generated $generated@@138)
 :pattern ( ($generated@@23 $generated@@6 $generated@@139 $generated $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! ($generated@@23 $generated@@7 $generated@@141 $generated@@0 $generated@@140)
 :pattern ( ($generated@@23 $generated@@7 $generated@@141 $generated@@0 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (! ($generated@@33 $generated@@6 $generated@@142 $generated)
 :pattern ( ($generated@@33 $generated@@6 $generated@@142 $generated))
)))
(assert (forall (($generated@@143 T@U) ) (! ($generated@@33 $generated@@7 $generated@@143 $generated@@0)
 :pattern ( ($generated@@33 $generated@@7 $generated@@143 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@154  (=> (= $generated@@144 ($generated@@101 $generated@@145 $generated@@146 $generated@@3 false)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (= $generated@@24 ($generated@@29 10))) (=> (= $generated@@24 ($generated@@29 10)) (=> (and $generated@@147 $generated@@147) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@9 ($generated@@21 $generated@@5 ($generated@@8 (< $generated@@22 10))))) (=> ($generated@@9 ($generated@@21 $generated@@5 ($generated@@8 (< $generated@@22 10)))) (=> (and $generated@@147 $generated@@147) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= ($generated@@29 $generated@@22) ($generated@@29 2))) (=> (= ($generated@@29 $generated@@22) ($generated@@29 2)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= $generated@@27 ($generated@@66 3.14))) (=> (= $generated@@27 ($generated@@66 3.14)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@30 $generated@@148) ($generated@@29 59))) (=> (= ($generated@@30 $generated@@148) ($generated@@29 59)) (=> (and (and (and (and ($generated@@25 $generated@@149) ($generated@@150 $generated@@149)) (and (forall (($generated@@155 T@U) ) (!  (=> (and (or (not (= $generated@@155 $generated@@145)) (not true)) ($generated@@9 ($generated@@41 $generated@@5 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@146 $generated@@155) $generated@@3)))) (= ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@149 $generated@@155) ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@146 $generated@@155)))
 :pattern ( ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@149 $generated@@155))
)) ($generated@@35 $generated@@146 $generated@@149))) (and (and ($generated@@25 $generated@@151) ($generated@@150 $generated@@151)) (and (forall (($generated@@156 T@U) ) (!  (=> (and (or (not (= $generated@@156 $generated@@145)) (not true)) ($generated@@9 ($generated@@41 $generated@@5 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@149 $generated@@156) $generated@@3)))) (= ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@151 $generated@@156) ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@149 $generated@@156)))
 :pattern ( ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@151 $generated@@156))
)) ($generated@@35 $generated@@149 $generated@@151)))) (and (and (and ($generated@@25 $generated@@152) ($generated@@150 $generated@@152)) (forall (($generated@@157 T@U) ) (!  (=> (and (or (not (= $generated@@157 $generated@@145)) (not true)) ($generated@@9 ($generated@@41 $generated@@5 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@151 $generated@@157) $generated@@3)))) (= ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@152 $generated@@157) ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@151 $generated@@157)))
 :pattern ( ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@152 $generated@@157))
))) (and ($generated@@35 $generated@@151 $generated@@152) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@9 ($generated@@21 $generated@@5 ($generated@@8 false)))))))))))))))))))
(let (($generated@@158  (=> (and ($generated@@25 $generated@@146) ($generated@@150 $generated@@146)) (=> (and (and ($generated@@31 $generated@@148 $generated@@32) ($generated@@74 $generated@@148 $generated@@32 $generated@@146)) (and (= 0 $generated@@153) (= (ControlFlow 0 8) 2))) $generated@@154))))
$generated@@158)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
