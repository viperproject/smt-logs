(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 (T@U T@U T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@55 (T@T T@U T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@60 (Int) Int)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@116 (T@U) Int)
(declare-fun $generated@@117 (T@U) Int)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@126 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@127 (T@T T@T) T@T)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@25 ($generated@@24 $generated@@26 $generated@@27) $generated@@27)
 :pattern ( ($generated@@24 $generated@@26 $generated@@27))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@28 $generated@@30) ($generated@@25 ($generated@@24 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@24 $generated@@28 $generated@@29) ($generated@@25 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@25 ($generated@@24 $generated@@31 $generated@@32) $generated@@33)  (or (= $generated@@33 $generated@@32) ($generated@@25 $generated@@31 $generated@@33)))
 :pattern ( ($generated@@25 ($generated@@24 $generated@@31 $generated@@32) $generated@@33))
)))
(assert (= ($generated@@7 $generated@@39) 3))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (and (or ($generated@@37 $generated@@44 $generated@@45) (and (< 0 $generated@@34) (and ($generated@@38 $generated@@39 $generated@@45 ($generated@@40 $generated@@44) $generated@@43) ($generated@@41 $generated@@45)))) ($generated@@42 $generated@@43)) ($generated@@35 ($generated@@36 $generated@@44 $generated@@45) $generated@@44 $generated@@43))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@44 $generated@@45) $generated@@44 $generated@@43))
))))
(assert (forall (($generated@@47 T@U) ) (!  (not ($generated@@25 $generated@@46 $generated@@47))
 :pattern ( ($generated@@25 $generated@@46 $generated@@47))
)))
(assert (= ($generated@@48 $generated@@49) $generated@@4))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> ($generated@@42 $generated@@51) ($generated@@38 $generated@@39 $generated@@49 ($generated@@40 $generated@@50) $generated@@51))
 :pattern ( ($generated@@38 $generated@@39 $generated@@49 ($generated@@40 $generated@@50) $generated@@51))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (or ($generated@@54 $generated@@57 ($generated@@53 $generated@@39 $generated@@58)) (and (< 0 $generated@@34) ($generated@@55 $generated@@39 $generated@@58 ($generated@@40 $generated@@57)))) (= ($generated@@52 $generated@@57 ($generated@@53 $generated@@39 $generated@@58)) ($generated@@12 ($generated@@53 $generated@@8 ($generated@@11 ($generated@@56 ($generated@@53 $generated@@39 $generated@@58)))))))
 :weight 3
 :pattern ( ($generated@@52 $generated@@57 ($generated@@53 $generated@@39 $generated@@58)))
))))
(assert (forall (($generated@@59 T@U) ) (! ($generated@@55 $generated@@39 $generated@@49 ($generated@@40 $generated@@59))
 :pattern ( ($generated@@55 $generated@@39 $generated@@49 ($generated@@40 $generated@@59)))
)))
(assert (forall (($generated@@61 Int) ) (! (= ($generated@@60 $generated@@61) $generated@@61)
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@53 $generated@@63 $generated@@62) $generated@@62)
 :pattern ( ($generated@@53 $generated@@63 $generated@@62))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (or ($generated@@37 $generated@@65 $generated@@66) (and (< 0 $generated@@34) (and ($generated@@55 $generated@@39 $generated@@66 ($generated@@40 $generated@@65)) ($generated@@41 $generated@@66)))) ($generated@@64 ($generated@@36 $generated@@65 $generated@@66) $generated@@65))
 :pattern ( ($generated@@36 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@56 $generated@@67) (= ($generated@@48 $generated@@67) $generated@@4))
 :pattern ( ($generated@@56 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@41 $generated@@68) (= ($generated@@48 $generated@@68) $generated@@5))
 :pattern ( ($generated@@41 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@69 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@69 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@56 $generated@@73) (= $generated@@73 $generated@@49))
 :pattern ( ($generated@@56 $generated@@73))
)))
(assert (= ($generated@@7 $generated@@74) 4))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@55 $generated@@74 $generated@@76 ($generated@@75 $generated@@77)) (forall (($generated@@78 T@U) ) (!  (=> ($generated@@25 $generated@@76 $generated@@78) ($generated@@64 $generated@@78 $generated@@77))
 :pattern ( ($generated@@25 $generated@@76 $generated@@78))
)))
 :pattern ( ($generated@@55 $generated@@74 $generated@@76 ($generated@@75 $generated@@77)))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@41 $generated@@80) (exists (($generated@@81 T@U) ) (= $generated@@80 ($generated@@79 $generated@@81))))
 :pattern ( ($generated@@41 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@35 ($generated@@70 $generated@@85 $generated@@82) $generated@@83 $generated@@84) ($generated@@38 $generated@@85 $generated@@82 $generated@@83 $generated@@84))
 :pattern ( ($generated@@35 ($generated@@70 $generated@@85 $generated@@82) $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ) (!  (and (= ($generated@@23 ($generated@@40 $generated@@87)) $generated@@3) (= ($generated@@86 ($generated@@40 $generated@@87)) $generated@@6))
 :pattern ( ($generated@@40 $generated@@87))
)))
(assert (= ($generated@@7 $generated@@88) 5))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@37 $generated@@90 ($generated@@53 $generated@@39 $generated@@91)) (and (< 0 $generated@@34) (and ($generated@@55 $generated@@39 $generated@@91 ($generated@@40 $generated@@90)) ($generated@@12 ($generated@@53 $generated@@8 ($generated@@11 ($generated@@41 ($generated@@53 $generated@@39 $generated@@91)))))))) (= ($generated@@36 $generated@@90 ($generated@@53 $generated@@39 $generated@@91)) ($generated@@53 $generated@@88 ($generated@@89 ($generated@@53 $generated@@39 $generated@@91)))))
 :weight 3
 :pattern ( ($generated@@36 $generated@@90 ($generated@@53 $generated@@39 $generated@@91)))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@42 $generated@@94) (= ($generated@@38 $generated@@39 ($generated@@79 $generated@@93) ($generated@@40 $generated@@92) $generated@@94) ($generated@@35 $generated@@93 $generated@@92 $generated@@94)))
 :pattern ( ($generated@@38 $generated@@39 ($generated@@79 $generated@@93) ($generated@@40 $generated@@92) $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@55 $generated@@39 $generated@@96 ($generated@@40 $generated@@95)) (or ($generated@@56 $generated@@96) ($generated@@41 $generated@@96)))
 :pattern ( ($generated@@41 $generated@@96) ($generated@@55 $generated@@39 $generated@@96 ($generated@@40 $generated@@95)))
 :pattern ( ($generated@@56 $generated@@96) ($generated@@55 $generated@@39 $generated@@96 ($generated@@40 $generated@@95)))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@64 $generated@@97 $generated) (and (= ($generated@@70 $generated@@9 ($generated@@69 $generated@@9 $generated@@97)) $generated@@97) ($generated@@55 $generated@@9 ($generated@@69 $generated@@9 $generated@@97) $generated)))
 :pattern ( ($generated@@64 $generated@@97 $generated))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@64 ($generated@@70 $generated@@100 $generated@@98) $generated@@99) ($generated@@55 $generated@@100 $generated@@98 $generated@@99))
 :pattern ( ($generated@@64 ($generated@@70 $generated@@100 $generated@@98) $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@38 $generated@@74 $generated@@101 ($generated@@75 $generated@@102) $generated@@103) (forall (($generated@@104 T@U) ) (!  (=> ($generated@@25 $generated@@101 $generated@@104) ($generated@@35 $generated@@104 $generated@@102 $generated@@103))
 :pattern ( ($generated@@25 $generated@@101 $generated@@104))
)))
 :pattern ( ($generated@@38 $generated@@74 $generated@@101 ($generated@@75 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@105 ($generated@@75 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@75 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@23 ($generated@@75 $generated@@107)) $generated@@1)
 :pattern ( ($generated@@75 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 ($generated@@40 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@40 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@48 ($generated@@79 $generated@@110)) $generated@@5)
 :pattern ( ($generated@@79 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@89 ($generated@@79 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@79 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@69 $generated@@113 ($generated@@70 $generated@@113 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@70 $generated@@113 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@55 $generated@@39 ($generated@@79 $generated@@115) ($generated@@40 $generated@@114)) ($generated@@64 $generated@@115 $generated@@114))
 :pattern ( ($generated@@55 $generated@@39 ($generated@@79 $generated@@115) ($generated@@40 $generated@@114)))
)))
(assert (forall (($generated@@118 T@U) ) (! (< ($generated@@116 $generated@@118) ($generated@@117 ($generated@@79 $generated@@118)))
 :pattern ( ($generated@@79 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (and ($generated@@42 $generated@@121) (and ($generated@@41 $generated@@119) ($generated@@38 $generated@@39 $generated@@119 ($generated@@40 $generated@@120) $generated@@121))) ($generated@@35 ($generated@@89 $generated@@119) $generated@@120 $generated@@121))
 :pattern ( ($generated@@35 ($generated@@89 $generated@@119) $generated@@120 $generated@@121))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@122 $generated@@132 $generated@@133 $generated@@134 ($generated@@128 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@122 $generated@@139 $generated@@140 $generated@@141 ($generated@@128 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@122 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@122 $generated@@148 $generated@@149 $generated@@150 ($generated@@128 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@122 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))) (= ($generated@@7 $generated@@123) 6)) (= ($generated@@7 $generated@@124) 7)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@126 $generated@@157 $generated@@158 ($generated@@129 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@159) $generated@@161) $generated@@159)
 :weight 0
))) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@166 $generated@@167) (= ($generated@@126 $generated@@162 $generated@@163 ($generated@@129 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@164) $generated@@167) ($generated@@126 $generated@@162 $generated@@163 $generated@@165 $generated@@167)))
 :weight 0
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@7 ($generated@@127 $generated@@168 $generated@@169)) 8))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@130 ($generated@@127 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@127 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@131 ($generated@@127 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@127 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 Bool) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@12 ($generated@@122 $generated@@123 $generated@@124 $generated@@8 ($generated@@125 $generated@@174 $generated@@175 $generated@@176 $generated@@177) $generated@@178 $generated@@179))  (=> (and (or (not (= $generated@@178 $generated@@174)) (not true)) ($generated@@12 ($generated@@69 $generated@@8 ($generated@@126 $generated@@124 $generated@@88 ($generated@@126 $generated@@123 ($generated@@127 $generated@@124 $generated@@88) $generated@@175 $generated@@178) $generated@@176)))) $generated@@177))
 :pattern ( ($generated@@122 $generated@@123 $generated@@124 $generated@@8 ($generated@@125 $generated@@174 $generated@@175 $generated@@176 $generated@@177) $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@116 ($generated@@70 $generated@@39 $generated@@180)) ($generated@@117 $generated@@180))
 :pattern ( ($generated@@116 ($generated@@70 $generated@@39 $generated@@180)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@64 $generated@@181 ($generated@@75 $generated@@182)) (and (= ($generated@@70 $generated@@74 ($generated@@69 $generated@@74 $generated@@181)) $generated@@181) ($generated@@55 $generated@@74 ($generated@@69 $generated@@74 $generated@@181) ($generated@@75 $generated@@182))))
 :pattern ( ($generated@@64 $generated@@181 ($generated@@75 $generated@@182)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> ($generated@@64 $generated@@184 ($generated@@40 $generated@@183)) (and (= ($generated@@70 $generated@@39 ($generated@@69 $generated@@39 $generated@@184)) $generated@@184) ($generated@@55 $generated@@39 ($generated@@69 $generated@@39 $generated@@184) ($generated@@40 $generated@@183))))
 :pattern ( ($generated@@64 $generated@@184 ($generated@@40 $generated@@183)))
)))
(assert (= $generated@@49 ($generated@@53 $generated@@39 $generated@@49)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (or ($generated@@54 $generated@@185 $generated@@186) (and (< 0 $generated@@34) ($generated@@55 $generated@@39 $generated@@186 ($generated@@40 $generated@@185)))) (= ($generated@@52 $generated@@185 $generated@@186) ($generated@@56 $generated@@186)))
 :pattern ( ($generated@@52 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 Int) ) (! (= ($generated@@70 $generated@@9 ($generated@@13 ($generated@@60 $generated@@187))) ($generated@@53 $generated@@88 ($generated@@70 $generated@@9 ($generated@@13 $generated@@187))))
 :pattern ( ($generated@@70 $generated@@9 ($generated@@13 ($generated@@60 $generated@@187))))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@79 ($generated@@53 $generated@@88 $generated@@188)) ($generated@@53 $generated@@39 ($generated@@79 $generated@@188)))
 :pattern ( ($generated@@79 ($generated@@53 $generated@@88 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@T) ) (! (= ($generated@@70 $generated@@190 ($generated@@53 $generated@@190 $generated@@189)) ($generated@@53 $generated@@88 ($generated@@70 $generated@@190 $generated@@189)))
 :pattern ( ($generated@@70 $generated@@190 ($generated@@53 $generated@@190 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! ($generated@@38 $generated@@9 $generated@@192 $generated $generated@@191)
 :pattern ( ($generated@@38 $generated@@9 $generated@@192 $generated $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ) (! ($generated@@55 $generated@@9 $generated@@193 $generated)
 :pattern ( ($generated@@55 $generated@@9 $generated@@193 $generated))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (or ($generated@@37 $generated@@194 $generated@@195) (and (< 0 $generated@@34) (and ($generated@@55 $generated@@39 $generated@@195 ($generated@@40 $generated@@194)) ($generated@@41 $generated@@195)))) (= ($generated@@36 $generated@@194 $generated@@195) ($generated@@89 $generated@@195)))
 :pattern ( ($generated@@36 $generated@@194 $generated@@195))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@206 true))
(let (($generated@@207  (=> ($generated@@25 $generated@@196 ($generated@@70 $generated@@9 ($generated@@13 $generated@@197))) (=> (and (and (and (and ($generated@@55 $generated@@39 $generated@@198 ($generated@@40 $generated)) ($generated@@38 $generated@@39 $generated@@198 ($generated@@40 $generated) $generated@@199)) (= $generated@@200 ($generated@@53 $generated@@39 ($generated@@79 ($generated@@70 $generated@@9 ($generated@@13 ($generated@@60 3))))))) (and ($generated@@35 ($generated@@70 $generated@@39 $generated@@200) ($generated@@40 $generated) $generated@@199) ($generated@@54 $generated $generated@@200))) (and (and ($generated@@54 $generated $generated@@200) (not ($generated@@52 $generated $generated@@200))) (and ($generated@@35 ($generated@@70 $generated@@39 $generated@@200) ($generated@@40 $generated) $generated@@199) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@41 $generated@@200)))))
(let (($generated@@208  (=> (and (and (= $generated@@201 ($generated@@125 $generated@@202 $generated@@199 $generated@@2 false)) ($generated@@12 ($generated@@53 $generated@@8 ($generated@@11 false)))) (and ($generated@@12 ($generated@@53 $generated@@8 ($generated@@11 false))) (= $generated@@196 ($generated@@53 $generated@@74 ($generated@@24 ($generated@@24 $generated@@46 ($generated@@70 $generated@@9 ($generated@@13 ($generated@@60 1)))) ($generated@@70 $generated@@9 ($generated@@13 ($generated@@60 2)))))))) (and (=> (= (ControlFlow 0 4) 2) $generated@@207) (=> (= (ControlFlow 0 4) 3) $generated@@206)))))
(let (($generated@@209  (=> (and ($generated@@42 $generated@@199) ($generated@@203 $generated@@199)) (=> (and (and ($generated@@55 $generated@@74 $generated@@204 ($generated@@75 $generated)) ($generated@@38 $generated@@74 $generated@@204 ($generated@@75 $generated) $generated@@199)) true) (=> (and (and (and ($generated@@55 $generated@@39 $generated@@205 ($generated@@40 $generated)) ($generated@@38 $generated@@39 $generated@@205 ($generated@@40 $generated) $generated@@199)) true) (and (= 1 $generated@@34) (= (ControlFlow 0 5) 4))) $generated@@208)))))
$generated@@209)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
