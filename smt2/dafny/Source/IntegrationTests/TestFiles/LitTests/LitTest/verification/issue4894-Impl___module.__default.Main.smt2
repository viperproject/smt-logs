(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@71 (Int) Int)
(declare-fun $generated@@73 (Real) Real)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert (= ($generated@@8 $generated@@28) 3))
(assert (forall (($generated@@32 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@32 $generated@@29)  (or (= $generated@@32 $generated@@30) (= ($generated@@31 $generated@@32) $generated@@29)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 $generated@@29))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@33 $generated@@28 $generated@@35 $generated@@34 $generated@@36) ($generated@@33 $generated@@28 $generated@@35 $generated@@29 $generated@@36))
 :pattern ( ($generated@@33 $generated@@28 $generated@@35 $generated@@34 $generated@@36))
 :pattern ( ($generated@@33 $generated@@28 $generated@@35 $generated@@29 $generated@@36))
)))
(assert (= ($generated@@24 $generated@@37) 0))
(assert (= ($generated@@38 $generated@@4 $generated@@7) $generated@@37))
(assert  (not ($generated@@39 $generated@@37)))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@41 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@41 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@41 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@8 $generated@@42) 4)) (= ($generated@@8 $generated@@43) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@8 ($generated@@44 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@44 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@44 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@44 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@33 $generated@@28 $generated@@65 $generated@@29 $generated@@66)  (or (= $generated@@65 $generated@@30) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@66 $generated@@65) $generated@@1)))))
 :pattern ( ($generated@@33 $generated@@28 $generated@@65 $generated@@29 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@67 $generated@@68 $generated@@69) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@68 $generated@@70) $generated@@1))) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@69 $generated@@70) $generated@@1))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@69 $generated@@70) $generated@@1))
)))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@71 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 Real) ) (! (= ($generated@@73 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 ($generated@@40 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@40 $generated@@80 $generated@@79))
)))
(assert ($generated@@39 $generated@@1))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and (and ($generated@@81 $generated@@82) (and (or (not (= $generated@@83 $generated@@30)) (not true)) (= ($generated@@31 $generated@@83) $generated@@29))) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@82 $generated@@83) $generated@@1)))) ($generated@@33 $generated@@9 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@82 $generated@@83) $generated@@37)) $generated $generated@@82))
 :pattern ( ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@82 $generated@@83) $generated@@37)))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (!  (=> ($generated@@67 $generated@@84 $generated@@85) (=> ($generated@@33 $generated@@88 $generated@@86 $generated@@87 $generated@@84) ($generated@@33 $generated@@88 $generated@@86 $generated@@87 $generated@@85)))
 :pattern ( ($generated@@67 $generated@@84 $generated@@85) ($generated@@33 $generated@@88 $generated@@86 $generated@@87 $generated@@84))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@89 $generated@@34)  (and ($generated@@27 $generated@@28 $generated@@89 $generated@@29) (or (not (= $generated@@89 $generated@@30)) (not true))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@89 $generated@@34))
 :pattern ( ($generated@@27 $generated@@28 $generated@@89 $generated@@29))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (or (not (= $generated@@90 $generated@@92)) (not true)) (=> (and ($generated@@67 $generated@@90 $generated@@91) ($generated@@67 $generated@@91 $generated@@92)) ($generated@@67 $generated@@90 $generated@@92)))
 :pattern ( ($generated@@67 $generated@@90 $generated@@91) ($generated@@67 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (and (= ($generated@@93 ($generated@@38 $generated@@94 $generated@@95)) $generated@@94) (= ($generated@@26 ($generated@@38 $generated@@94 $generated@@95)) $generated@@95))
 :pattern ( ($generated@@38 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@40 $generated@@97 ($generated@@78 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@78 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and ($generated@@81 $generated@@98) (and (or (not (= $generated@@99 $generated@@30)) (not true)) (= ($generated@@31 $generated@@99) $generated@@29))) ($generated@@27 $generated@@9 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@98 $generated@@99) $generated@@37)) $generated))
 :pattern ( ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@98 $generated@@99) $generated@@37)))
)))
(assert  (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@100 $generated@@103 $generated@@104 $generated@@105 ($generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@100 $generated@@110 $generated@@111 $generated@@112 ($generated@@102 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@100 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@100 $generated@@119 $generated@@120 $generated@@121 ($generated@@102 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@100 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 Bool) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@13 ($generated@@100 $generated@@28 $generated@@42 $generated@@9 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))  (=> (and (or (not (= $generated@@132 $generated@@128)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@129 $generated@@132) $generated@@130)))) $generated@@131))
 :pattern ( ($generated@@100 $generated@@28 $generated@@42 $generated@@9 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (= ($generated@@25 $generated@@34) $generated@@3))
(assert (= ($generated@@134 $generated@@34) $generated@@6))
(assert (= ($generated@@25 $generated@@29) $generated@@5))
(assert (= ($generated@@134 $generated@@29) $generated@@6))
(assert (forall (($generated@@135 Int) ) (! (= ($generated@@78 $generated@@10 ($generated@@14 ($generated@@71 $generated@@135))) ($generated@@75 $generated@@43 ($generated@@78 $generated@@10 ($generated@@14 $generated@@135))))
 :pattern ( ($generated@@78 $generated@@10 ($generated@@14 ($generated@@71 $generated@@135))))
)))
(assert (forall (($generated@@136 Real) ) (! (= ($generated@@78 $generated@@11 ($generated@@16 ($generated@@73 $generated@@136))) ($generated@@75 $generated@@43 ($generated@@78 $generated@@11 ($generated@@16 $generated@@136))))
 :pattern ( ($generated@@78 $generated@@11 ($generated@@16 ($generated@@73 $generated@@136))))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@78 $generated@@138 ($generated@@75 $generated@@138 $generated@@137)) ($generated@@75 $generated@@43 ($generated@@78 $generated@@138 $generated@@137)))
 :pattern ( ($generated@@78 $generated@@138 ($generated@@75 $generated@@138 $generated@@137)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! ($generated@@33 $generated@@9 $generated@@140 $generated $generated@@139)
 :pattern ( ($generated@@33 $generated@@9 $generated@@140 $generated $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! ($generated@@27 $generated@@9 $generated@@141 $generated)
 :pattern ( ($generated@@27 $generated@@9 $generated@@141 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 () Int)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 () Real)
(declare-fun $generated@@146 () Real)
(declare-fun $generated@@147 () Real)
(declare-fun $generated@@148 () Real)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () Real)
(declare-fun $generated@@159 () Real)
(declare-fun $generated@@160 () Real)
(declare-fun $generated@@161 () Bool)
(declare-fun $generated@@162 () Real)
(declare-fun $generated@@163 () Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () Bool)
(declare-fun $generated@@167 () Bool)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Bool)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () Bool)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@179  (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@142) (= (- $generated@@143 $generated@@144) $generated@@142))) (=> (or (<= 0 $generated@@142) (= (- $generated@@143 $generated@@144) $generated@@142)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (- $generated@@143 $generated@@144) $generated@@142))))))
(let (($generated@@180  (=> (not ($generated@@13 ($generated@@75 $generated@@9 ($generated@@12 false)))) (=> (and (and (= $generated@@145 ($generated@@73 (- 0.0 28.38))) (= $generated@@146 ($generated@@73 (- 0.0 28.94)))) (and (= $generated@@147 ($generated@@73 9.05)) (= $generated@@148 ($generated@@73 0.35)))) (and (=> (= (ControlFlow 0 8) (- 0 10)) true) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= $generated@@149 $generated@@30)) (not true))) (=> (or (not (= $generated@@149 $generated@@30)) (not true)) (=> (= $generated@@150 ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@151 $generated@@149) $generated@@37)))) (=> (and (or (not (= $generated@@152 $generated@@30)) (not true)) (and ($generated@@27 $generated@@28 $generated@@152 $generated@@34) ($generated@@33 $generated@@28 $generated@@152 $generated@@34 $generated@@153))) (=> (and (and (and ($generated@@81 $generated@@154) ($generated@@155 $generated@@154)) (and (or (not (= $generated@@156 $generated@@30)) (not true)) (and ($generated@@27 $generated@@28 $generated@@156 $generated@@34) ($generated@@33 $generated@@28 $generated@@156 $generated@@34 $generated@@154)))) (and (and (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@151 $generated@@156) $generated@@1)))) (forall (($generated@@181 T@U) ) (!  (=> (and (or (not (= $generated@@181 $generated@@30)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@151 $generated@@181) $generated@@1)))) (= ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@154 $generated@@181) ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@151 $generated@@181)))
 :pattern ( ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@154 $generated@@181))
))) (and ($generated@@67 $generated@@151 $generated@@154) (= (ControlFlow 0 8) 5)))) $generated@@179))))))))))
(let (($generated@@182  (=> (and ($generated@@13 ($generated@@75 $generated@@9 ($generated@@12 false))) (= (ControlFlow 0 7) 5)) $generated@@179)))
(let (($generated@@183  (=> (< $generated@@157 $generated@@143) (=> (and (and (= $generated@@142 (- $generated@@143 $generated@@157)) (= $generated@@144 (+ $generated@@157 1))) (and (= $generated@@158 ($generated@@73 (- 0.0 20.01))) (= $generated@@159 ($generated@@73 (- 0.0 22.48))))) (=> (and (and (and (and (= $generated@@160 ($generated@@73 (- 0.0 8.26))) (= $generated@@161 ($generated@@13 ($generated@@75 $generated@@9 ($generated@@12 false))))) (and (= $generated@@162 ($generated@@73 (- 0.0 5.9))) (= $generated@@163 ($generated@@13 ($generated@@75 $generated@@9 ($generated@@12 false)))))) (and (and (or (not (= $generated@@164 $generated@@30)) (not true)) (and ($generated@@27 $generated@@28 $generated@@164 $generated@@34) ($generated@@33 $generated@@28 $generated@@164 $generated@@34 $generated@@153))) (and ($generated@@81 $generated@@151) ($generated@@155 $generated@@151)))) (and (and (and (or (not (= $generated@@149 $generated@@30)) (not true)) (and ($generated@@27 $generated@@28 $generated@@149 $generated@@34) ($generated@@33 $generated@@28 $generated@@149 $generated@@34 $generated@@151))) (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@165 $generated@@149) $generated@@1))))) (and (forall (($generated@@184 T@U) ) (!  (=> (and (or (not (= $generated@@184 $generated@@30)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@165 $generated@@184) $generated@@1)))) (= ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@151 $generated@@184) ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@165 $generated@@184)))
 :pattern ( ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@151 $generated@@184))
)) ($generated@@67 $generated@@165 $generated@@151)))) (and (=> (= (ControlFlow 0 11) 7) $generated@@182) (=> (= (ControlFlow 0 11) 8) $generated@@180)))))))
(let (($generated@@185 true))
(let (($generated@@186  (=> $generated@@166 (and (=> (= (ControlFlow 0 12) 3) $generated@@185) (=> (= (ControlFlow 0 12) 11) $generated@@183)))))
(let (($generated@@187 true))
(let (($generated@@188  (and (=> (= (ControlFlow 0 13) 2) $generated@@187) (=> (= (ControlFlow 0 13) 12) $generated@@186))))
(let (($generated@@189 true))
(let (($generated@@190  (=> (and (and ($generated@@81 $generated@@165) ($generated@@155 $generated@@165)) (and (=> $generated@@167 (and ($generated@@27 $generated@@28 $generated@@168 $generated@@34) ($generated@@33 $generated@@28 $generated@@168 $generated@@34 $generated@@165))) (=> $generated@@169 (and ($generated@@27 $generated@@28 $generated@@170 $generated@@34) ($generated@@33 $generated@@28 $generated@@170 $generated@@34 $generated@@165))))) (=> (and (and (and (and (not false) (and (<= 0 $generated@@157) (< $generated@@157 2))) (= $generated@@143 1)) (= $generated@@171 1)) (and (and (forall (($generated@@191 T@U) ) (!  (=> (and (or (not (= $generated@@191 $generated@@30)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@153 $generated@@191) $generated@@1)))) (= ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@165 $generated@@191) ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@153 $generated@@191)))
 :pattern ( ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@165 $generated@@191))
)) ($generated@@67 $generated@@153 $generated@@165)) (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (or (not (= $generated@@192 $generated@@30)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@153 $generated@@192) $generated@@1)))) (or (= ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@165 $generated@@192) $generated@@193) ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@153 $generated@@192) $generated@@193)) ($generated@@13 ($generated@@100 $generated@@28 $generated@@42 $generated@@9 $generated@@172 $generated@@192 $generated@@193))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@165 $generated@@192) $generated@@193))
)) (<= (- $generated@@143 $generated@@157) $generated@@171)))) (and (=> (= (ControlFlow 0 14) 1) $generated@@189) (=> (= (ControlFlow 0 14) 13) $generated@@188))))))
(let (($generated@@194  (=> (= $generated@@172 ($generated@@101 $generated@@30 $generated@@153 $generated@@1 false)) (=> (and (and (= $generated@@173 ($generated@@71 0)) (= $generated@@143 ($generated@@71 1))) (and (= $generated@@171 (- $generated@@143 $generated@@173)) (= (ControlFlow 0 15) 14))) $generated@@190))))
(let (($generated@@195  (=> (and (and (and ($generated@@81 $generated@@153) ($generated@@155 $generated@@153)) (and (=> $generated@@174 (and ($generated@@27 $generated@@28 $generated@@175 $generated@@34) ($generated@@33 $generated@@28 $generated@@175 $generated@@34 $generated@@153))) true)) (and (and (=> $generated@@176 (and ($generated@@27 $generated@@28 $generated@@177 $generated@@34) ($generated@@33 $generated@@28 $generated@@177 $generated@@34 $generated@@153))) true) (and (= 1 $generated@@178) (= (ControlFlow 0 16) 15)))) $generated@@194)))
$generated@@195)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
