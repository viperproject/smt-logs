(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T T@T) T@T)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@70 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@97 () T@U)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@U) Bool)
(declare-fun $generated@@130 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@155 (T@U T@U T@U) Bool)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@203 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@204 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@205 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert  (and (and (= ($generated@@14 $generated@@35) 3) (= ($generated@@14 $generated@@37) 4)) (= ($generated@@14 $generated@@40) 5)))
(assert  (=> (<= 3 $generated@@30) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (or ($generated@@32 $generated@@46 $generated@@47 $generated@@48) (and (< 3 $generated@@30) (and (and (and (or (not (= $generated@@46 $generated@@33)) (not true)) ($generated@@34 $generated@@35 $generated@@46 $generated@@36)) ($generated@@34 $generated@@37 $generated@@47 ($generated@@38 $generated@@39))) ($generated@@34 $generated@@40 $generated@@48 $generated@@41)))) (and (forall (($generated@@49 T@U) ) (!  (=> (and ($generated@@34 $generated@@35 $generated@@49 $generated@@39) ($generated@@42 $generated@@47 ($generated@@43 $generated@@35 $generated@@49))) (= ($generated@@45 ($generated@@44 $generated@@49) $generated@@48) ($generated@@42 ($generated@@31 $generated@@46 $generated@@47 $generated@@48) ($generated@@43 $generated@@35 $generated@@49))))
 :pattern ( ($generated@@42 ($generated@@31 $generated@@46 $generated@@47 $generated@@48) ($generated@@43 $generated@@35 $generated@@49)))
 :pattern ( ($generated@@44 $generated@@49))
 :pattern ( ($generated@@42 $generated@@47 ($generated@@43 $generated@@35 $generated@@49)))
)) ($generated@@34 $generated@@37 ($generated@@31 $generated@@46 $generated@@47 $generated@@48) ($generated@@38 $generated@@39))))
 :pattern ( ($generated@@31 $generated@@46 $generated@@47 $generated@@48))
))))
(assert  (=> (< 2 $generated@@30) (forall (($generated@@52 T@U) ) (!  (=> (and (or (not (= $generated@@52 $generated@@33)) (not true)) (= ($generated@@50 $generated@@52) $generated@@51)) ($generated@@34 $generated@@40 ($generated@@44 $generated@@52) $generated@@41))
 :pattern ( ($generated@@44 $generated@@52))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (and ($generated@@53 $generated@@55) ($generated@@53 $generated@@56)) (= ($generated@@45 $generated@@55 $generated@@56) (= ($generated@@54 $generated@@55) ($generated@@54 $generated@@56))))
 :pattern ( ($generated@@45 $generated@@55 $generated@@56) ($generated@@53 $generated@@55))
 :pattern ( ($generated@@45 $generated@@55 $generated@@56) ($generated@@53 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (and ($generated@@57 $generated@@58) ($generated@@57 $generated@@59)) (= ($generated@@45 $generated@@58 $generated@@59) (= ($generated@@54 $generated@@58) ($generated@@54 $generated@@59))))
 :pattern ( ($generated@@45 $generated@@58 $generated@@59) ($generated@@57 $generated@@58))
 :pattern ( ($generated@@45 $generated@@58 $generated@@59) ($generated@@57 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (and ($generated@@60 $generated@@62) ($generated@@60 $generated@@63)) (= ($generated@@45 $generated@@62 $generated@@63) (= ($generated@@61 $generated@@62) ($generated@@61 $generated@@63))))
 :pattern ( ($generated@@45 $generated@@62 $generated@@63) ($generated@@60 $generated@@62))
 :pattern ( ($generated@@45 $generated@@62 $generated@@63) ($generated@@60 $generated@@63))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@65 $generated@@74 $generated@@75 ($generated@@71 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@76) $generated@@78) $generated@@76)
 :weight 0
)) (forall (($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (or (= $generated@@83 $generated@@84) (= ($generated@@65 $generated@@79 $generated@@80 ($generated@@71 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@81) $generated@@84) ($generated@@65 $generated@@79 $generated@@80 $generated@@82 $generated@@84)))
 :weight 0
))) (= ($generated@@14 $generated@@66) 6)) (= ($generated@@14 $generated@@67) 7)) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@14 ($generated@@68 $generated@@85 $generated@@86)) 8))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@72 ($generated@@68 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@68 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@73 ($generated@@68 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@68 $generated@@89 $generated@@90))
))))
(assert  (=> (< 2 $generated@@30) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (and (and ($generated@@69 $generated@@91) (and (or (not (= $generated@@92 $generated@@33)) (not true)) (= ($generated@@50 $generated@@92) $generated@@51))) ($generated@@19 ($generated@@64 $generated@@15 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@35 ($generated@@68 $generated@@66 $generated@@67) $generated@@91 $generated@@92) $generated@@0)))) ($generated@@70 $generated@@40 ($generated@@44 $generated@@92) $generated@@41 $generated@@91))
 :pattern ( ($generated@@44 $generated@@92) ($generated@@64 $generated@@15 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@35 ($generated@@68 $generated@@66 $generated@@67) $generated@@91 $generated@@92) $generated@@0)))
))))
(assert (= ($generated@@93 $generated@@94) $generated@@6))
(assert (= ($generated@@93 $generated@@95) $generated@@10))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@96 $generated@@51)  (or (= $generated@@96 $generated@@33) (= ($generated@@50 $generated@@96) $generated@@51)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@96 $generated@@51))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@98 $generated@@97)  (or (= $generated@@98 $generated@@33) (= ($generated@@50 $generated@@98) $generated@@97)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@70 $generated@@35 $generated@@99 $generated@@39 $generated@@100) ($generated@@70 $generated@@35 $generated@@99 $generated@@51 $generated@@100))
 :pattern ( ($generated@@70 $generated@@35 $generated@@99 $generated@@39 $generated@@100))
 :pattern ( ($generated@@70 $generated@@35 $generated@@99 $generated@@51 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@70 $generated@@35 $generated@@101 $generated@@36 $generated@@102) ($generated@@70 $generated@@35 $generated@@101 $generated@@97 $generated@@102))
 :pattern ( ($generated@@70 $generated@@35 $generated@@101 $generated@@36 $generated@@102))
 :pattern ( ($generated@@70 $generated@@35 $generated@@101 $generated@@97 $generated@@102))
)))
(assert ($generated@@34 $generated@@40 $generated@@94 $generated@@41))
(assert ($generated@@34 $generated@@40 $generated@@95 $generated@@41))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@69 $generated@@103) ($generated@@70 $generated@@40 $generated@@94 $generated@@41 $generated@@103))
 :pattern ( ($generated@@70 $generated@@40 $generated@@94 $generated@@41 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@69 $generated@@104) ($generated@@70 $generated@@40 $generated@@95 $generated@@41 $generated@@104))
 :pattern ( ($generated@@70 $generated@@40 $generated@@95 $generated@@41 $generated@@104))
)))
(assert  (=> (<= 3 $generated@@30) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or ($generated@@32 ($generated@@105 $generated@@35 $generated@@109) ($generated@@105 $generated@@37 $generated@@110) ($generated@@105 $generated@@40 $generated@@111)) (and (< 3 $generated@@30) (and (and (and (or (not (= $generated@@109 $generated@@33)) (not true)) ($generated@@34 $generated@@35 $generated@@109 $generated@@36)) ($generated@@34 $generated@@37 $generated@@110 ($generated@@38 $generated@@39))) ($generated@@34 $generated@@40 $generated@@111 $generated@@41)))) (and (forall (($generated@@112 T@U) ) (!  (=> ($generated@@34 $generated@@35 $generated@@112 $generated@@39) (=> ($generated@@42 ($generated@@105 $generated@@37 $generated@@110) ($generated@@43 $generated@@35 $generated@@112)) (and ($generated@@106 ($generated@@44 $generated@@112)) ($generated@@106 ($generated@@105 $generated@@40 $generated@@111)))))
 :pattern ( ($generated@@44 $generated@@112))
 :pattern ( ($generated@@42 $generated@@110 ($generated@@43 $generated@@35 $generated@@112)))
)) (= ($generated@@31 ($generated@@105 $generated@@35 $generated@@109) ($generated@@105 $generated@@37 $generated@@110) ($generated@@105 $generated@@40 $generated@@111)) ($generated@@107 ($generated@@108 $generated@@39 ($generated@@105 $generated@@37 $generated@@110) $generated@@111)))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@105 $generated@@35 $generated@@109) ($generated@@105 $generated@@37 $generated@@110) ($generated@@105 $generated@@40 $generated@@111)))
))))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@70 $generated@@35 $generated@@113 $generated@@51 $generated@@114)  (or (= $generated@@113 $generated@@33) ($generated@@19 ($generated@@64 $generated@@15 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@35 ($generated@@68 $generated@@66 $generated@@67) $generated@@114 $generated@@113) $generated@@0)))))
 :pattern ( ($generated@@70 $generated@@35 $generated@@113 $generated@@51 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@70 $generated@@35 $generated@@115 $generated@@97 $generated@@116)  (or (= $generated@@115 $generated@@33) ($generated@@19 ($generated@@64 $generated@@15 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@35 ($generated@@68 $generated@@66 $generated@@67) $generated@@116 $generated@@115) $generated@@0)))))
 :pattern ( ($generated@@70 $generated@@35 $generated@@115 $generated@@97 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@45 $generated@@117 $generated@@118) (= $generated@@117 $generated@@118))
 :pattern ( ($generated@@45 $generated@@117 $generated@@118))
)))
(assert  (=> (<= 3 $generated@@30) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or ($generated@@32 $generated@@119 $generated@@120 $generated@@121) (and (< 3 $generated@@30) (and (and (and (or (not (= $generated@@119 $generated@@33)) (not true)) ($generated@@34 $generated@@35 $generated@@119 $generated@@36)) ($generated@@34 $generated@@37 $generated@@120 ($generated@@38 $generated@@39))) ($generated@@34 $generated@@40 $generated@@121 $generated@@41)))) (and (forall (($generated@@122 T@U) ) (!  (=> ($generated@@34 $generated@@35 $generated@@122 $generated@@39) (=> ($generated@@42 $generated@@120 ($generated@@43 $generated@@35 $generated@@122)) (and ($generated@@106 ($generated@@44 $generated@@122)) ($generated@@106 $generated@@121))))
 :pattern ( ($generated@@44 $generated@@122))
 :pattern ( ($generated@@42 $generated@@120 ($generated@@43 $generated@@35 $generated@@122)))
)) (= ($generated@@31 $generated@@119 $generated@@120 $generated@@121) ($generated@@107 ($generated@@108 $generated@@39 $generated@@120 $generated@@121)))))
 :pattern ( ($generated@@31 $generated@@119 $generated@@120 $generated@@121))
))))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@105 $generated@@124 $generated@@123) $generated@@123)
 :pattern ( ($generated@@105 $generated@@124 $generated@@123))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 $generated@@126) (= ($generated@@93 $generated@@126) $generated@@6))
 :pattern ( ($generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@53 $generated@@127) (= ($generated@@93 $generated@@127) $generated@@7))
 :pattern ( ($generated@@53 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@57 $generated@@128) (= ($generated@@93 $generated@@128) $generated@@8))
 :pattern ( ($generated@@57 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@60 $generated@@129) (= ($generated@@93 $generated@@129) $generated@@9))
 :pattern ( ($generated@@60 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 $generated@@131) (= ($generated@@93 $generated@@131) $generated@@10))
 :pattern ( ($generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@43 $generated@@133 ($generated@@64 $generated@@133 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@64 $generated@@133 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@42 ($generated@@107 $generated@@134) $generated@@135) ($generated@@19 ($generated@@65 $generated@@67 $generated@@15 $generated@@134 $generated@@135)))
 :pattern ( ($generated@@42 ($generated@@107 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@125 $generated@@136) (= $generated@@136 $generated@@94))
 :pattern ( ($generated@@125 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@130 $generated@@137) (= $generated@@137 $generated@@95))
 :pattern ( ($generated@@130 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@34 $generated@@37 $generated@@139 ($generated@@38 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> ($generated@@42 $generated@@139 $generated@@141) ($generated@@138 $generated@@141 $generated@@140))
 :pattern ( ($generated@@42 $generated@@139 $generated@@141))
)))
 :pattern ( ($generated@@34 $generated@@37 $generated@@139 ($generated@@38 $generated@@140)))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@53 $generated@@143) (exists (($generated@@144 T@U) ) (= $generated@@143 ($generated@@142 $generated@@144))))
 :pattern ( ($generated@@53 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> ($generated@@57 $generated@@146) (exists (($generated@@147 T@U) ) (= $generated@@146 ($generated@@145 $generated@@147))))
 :pattern ( ($generated@@57 $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> ($generated@@60 $generated@@149) (exists (($generated@@150 T@U) ) (= $generated@@149 ($generated@@148 $generated@@150))))
 :pattern ( ($generated@@60 $generated@@149))
)))
(assert  (=> (<= 3 $generated@@30) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (or ($generated@@32 $generated@@151 ($generated@@105 $generated@@37 $generated@@152) ($generated@@105 $generated@@40 $generated@@153)) (and (< 3 $generated@@30) (and (and (and (or (not (= $generated@@151 $generated@@33)) (not true)) ($generated@@34 $generated@@35 $generated@@151 $generated@@36)) ($generated@@34 $generated@@37 $generated@@152 ($generated@@38 $generated@@39))) ($generated@@34 $generated@@40 $generated@@153 $generated@@41)))) (and (forall (($generated@@154 T@U) ) (!  (=> ($generated@@34 $generated@@35 $generated@@154 $generated@@39) (=> ($generated@@42 ($generated@@105 $generated@@37 $generated@@152) ($generated@@43 $generated@@35 $generated@@154)) (and ($generated@@106 ($generated@@44 $generated@@154)) ($generated@@106 ($generated@@105 $generated@@40 $generated@@153)))))
 :pattern ( ($generated@@44 $generated@@154))
 :pattern ( ($generated@@42 $generated@@152 ($generated@@43 $generated@@35 $generated@@154)))
)) (= ($generated@@31 $generated@@151 ($generated@@105 $generated@@37 $generated@@152) ($generated@@105 $generated@@40 $generated@@153)) ($generated@@107 ($generated@@108 $generated@@39 ($generated@@105 $generated@@37 $generated@@152) $generated@@153)))))
 :weight 3
 :pattern ( ($generated@@31 $generated@@151 ($generated@@105 $generated@@37 $generated@@152) ($generated@@105 $generated@@40 $generated@@153)))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@T) ) (! (= ($generated@@155 ($generated@@43 $generated@@159 $generated@@156) $generated@@157 $generated@@158) ($generated@@70 $generated@@159 $generated@@156 $generated@@157 $generated@@158))
 :pattern ( ($generated@@155 ($generated@@43 $generated@@159 $generated@@156) $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> ($generated@@138 $generated@@160 $generated@@39) (and (= ($generated@@43 $generated@@35 ($generated@@64 $generated@@35 $generated@@160)) $generated@@160) ($generated@@34 $generated@@35 ($generated@@64 $generated@@35 $generated@@160) $generated@@39)))
 :pattern ( ($generated@@138 $generated@@160 $generated@@39))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> ($generated@@138 $generated@@161 $generated@@41) (and (= ($generated@@43 $generated@@40 ($generated@@64 $generated@@40 $generated@@161)) $generated@@161) ($generated@@34 $generated@@40 ($generated@@64 $generated@@40 $generated@@161) $generated@@41)))
 :pattern ( ($generated@@138 $generated@@161 $generated@@41))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> ($generated@@138 $generated@@162 $generated@@36) (and (= ($generated@@43 $generated@@35 ($generated@@64 $generated@@35 $generated@@162)) $generated@@162) ($generated@@34 $generated@@35 ($generated@@64 $generated@@35 $generated@@162) $generated@@36)))
 :pattern ( ($generated@@138 $generated@@162 $generated@@36))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> ($generated@@138 $generated@@163 $generated@@97) (and (= ($generated@@43 $generated@@35 ($generated@@64 $generated@@35 $generated@@163)) $generated@@163) ($generated@@34 $generated@@35 ($generated@@64 $generated@@35 $generated@@163) $generated@@97)))
 :pattern ( ($generated@@138 $generated@@163 $generated@@97))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> ($generated@@138 $generated@@164 $generated@@51) (and (= ($generated@@43 $generated@@35 ($generated@@64 $generated@@35 $generated@@164)) $generated@@164) ($generated@@34 $generated@@35 ($generated@@64 $generated@@35 $generated@@164) $generated@@51)))
 :pattern ( ($generated@@138 $generated@@164 $generated@@51))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@34 $generated@@40 ($generated@@142 $generated@@165) $generated@@41) ($generated@@34 $generated@@35 $generated@@165 $generated@@39))
 :pattern ( ($generated@@34 $generated@@40 ($generated@@142 $generated@@165) $generated@@41))
)))
(assert (forall (($generated@@166 T@U) ) (! (= ($generated@@34 $generated@@40 ($generated@@145 $generated@@166) $generated@@41) ($generated@@34 $generated@@35 $generated@@166 $generated@@39))
 :pattern ( ($generated@@34 $generated@@40 ($generated@@145 $generated@@166) $generated@@41))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@34 $generated@@40 ($generated@@148 $generated@@167) $generated@@41) ($generated@@34 $generated@@35 $generated@@167 $generated@@39))
 :pattern ( ($generated@@34 $generated@@40 ($generated@@148 $generated@@167) $generated@@41))
)))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@168 $generated@@39)  (and ($generated@@34 $generated@@35 $generated@@168 $generated@@51) (or (not (= $generated@@168 $generated@@33)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@168 $generated@@39))
 :pattern ( ($generated@@34 $generated@@35 $generated@@168 $generated@@51))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@169 $generated@@36)  (and ($generated@@34 $generated@@35 $generated@@169 $generated@@97) (or (not (= $generated@@169 $generated@@33)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@169 $generated@@36))
 :pattern ( ($generated@@34 $generated@@35 $generated@@169 $generated@@97))
)))
(assert  (=> (<= 3 $generated@@30) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (or ($generated@@32 $generated@@171 $generated@@172 $generated@@173) (and (< 3 $generated@@30) (and (and (and (or (not (= $generated@@171 $generated@@33)) (not true)) ($generated@@70 $generated@@35 $generated@@171 $generated@@36 $generated@@170)) (and ($generated@@34 $generated@@37 $generated@@172 ($generated@@38 $generated@@39)) ($generated@@70 $generated@@37 $generated@@172 ($generated@@38 $generated@@39) $generated@@170))) (and ($generated@@34 $generated@@40 $generated@@173 $generated@@41) ($generated@@70 $generated@@40 $generated@@173 $generated@@41 $generated@@170))))) ($generated@@69 $generated@@170)) ($generated@@70 $generated@@37 ($generated@@31 $generated@@171 $generated@@172 $generated@@173) ($generated@@38 $generated@@39) $generated@@170))
 :pattern ( ($generated@@70 $generated@@37 ($generated@@31 $generated@@171 $generated@@172 $generated@@173) ($generated@@38 $generated@@39) $generated@@170))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@69 $generated@@175) (= ($generated@@70 $generated@@40 ($generated@@142 $generated@@174) $generated@@41 $generated@@175) ($generated@@70 $generated@@35 $generated@@174 $generated@@39 $generated@@175)))
 :pattern ( ($generated@@70 $generated@@40 ($generated@@142 $generated@@174) $generated@@41 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@69 $generated@@177) (= ($generated@@70 $generated@@40 ($generated@@145 $generated@@176) $generated@@41 $generated@@177) ($generated@@70 $generated@@35 $generated@@176 $generated@@39 $generated@@177)))
 :pattern ( ($generated@@70 $generated@@40 ($generated@@145 $generated@@176) $generated@@41 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@69 $generated@@179) (= ($generated@@70 $generated@@40 ($generated@@148 $generated@@178) $generated@@41 $generated@@179) ($generated@@70 $generated@@35 $generated@@178 $generated@@39 $generated@@179)))
 :pattern ( ($generated@@70 $generated@@40 ($generated@@148 $generated@@178) $generated@@41 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@T) ) (! (= ($generated@@138 ($generated@@43 $generated@@182 $generated@@180) $generated@@181) ($generated@@34 $generated@@182 $generated@@180 $generated@@181))
 :pattern ( ($generated@@138 ($generated@@43 $generated@@182 $generated@@180) $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and ($generated@@125 $generated@@183) ($generated@@125 $generated@@184)) ($generated@@45 $generated@@183 $generated@@184))
 :pattern ( ($generated@@45 $generated@@183 $generated@@184) ($generated@@125 $generated@@183))
 :pattern ( ($generated@@45 $generated@@183 $generated@@184) ($generated@@125 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and ($generated@@130 $generated@@185) ($generated@@130 $generated@@186)) ($generated@@45 $generated@@185 $generated@@186))
 :pattern ( ($generated@@45 $generated@@185 $generated@@186) ($generated@@130 $generated@@185))
 :pattern ( ($generated@@45 $generated@@185 $generated@@186) ($generated@@130 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@70 $generated@@37 $generated@@187 ($generated@@38 $generated@@188) $generated@@189) (forall (($generated@@190 T@U) ) (!  (=> ($generated@@42 $generated@@187 $generated@@190) ($generated@@155 $generated@@190 $generated@@188 $generated@@189))
 :pattern ( ($generated@@42 $generated@@187 $generated@@190))
)))
 :pattern ( ($generated@@70 $generated@@37 $generated@@187 ($generated@@38 $generated@@188) $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@191 ($generated@@38 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@38 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@193 ($generated@@38 $generated@@194)) $generated)
 :pattern ( ($generated@@38 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@93 ($generated@@142 $generated@@195)) $generated@@7)
 :pattern ( ($generated@@142 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@54 ($generated@@142 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@142 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@93 ($generated@@145 $generated@@197)) $generated@@8)
 :pattern ( ($generated@@145 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ) (! (= ($generated@@54 ($generated@@145 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@145 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ) (! (= ($generated@@93 ($generated@@148 $generated@@199)) $generated@@9)
 :pattern ( ($generated@@148 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@61 ($generated@@148 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@148 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@T) ) (! (= ($generated@@64 $generated@@202 ($generated@@43 $generated@@202 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@43 $generated@@202 $generated@@201))
)))
(assert  (and (forall (($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@T) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@203 $generated@@206 $generated@@207 $generated@@208 ($generated@@205 $generated@@206 $generated@@207 $generated@@208 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@211 $generated@@212) $generated@@209)
 :weight 0
)) (and (forall (($generated@@213 T@T) ($generated@@214 T@T) ($generated@@215 T@T) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@203 $generated@@213 $generated@@214 $generated@@215 ($generated@@205 $generated@@213 $generated@@214 $generated@@215 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@203 $generated@@213 $generated@@214 $generated@@215 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@T) ($generated@@223 T@T) ($generated@@224 T@T) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@203 $generated@@222 $generated@@223 $generated@@224 ($generated@@205 $generated@@222 $generated@@223 $generated@@224 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@203 $generated@@222 $generated@@223 $generated@@224 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (= ($generated@@19 ($generated@@203 $generated@@35 $generated@@66 $generated@@15 ($generated@@204 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (or (not (= $generated@@235 $generated@@231)) (not true)) ($generated@@19 ($generated@@64 $generated@@15 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@35 ($generated@@68 $generated@@66 $generated@@67) $generated@@232 $generated@@235) $generated@@233)))) $generated@@234))
 :pattern ( ($generated@@203 $generated@@35 $generated@@66 $generated@@15 ($generated@@204 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> ($generated@@106 $generated@@237) (or (or (or (or ($generated@@125 $generated@@237) ($generated@@53 $generated@@237)) ($generated@@57 $generated@@237)) ($generated@@60 $generated@@237)) ($generated@@130 $generated@@237)))
 :pattern ( ($generated@@106 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (= ($generated@@19 ($generated@@65 $generated@@67 $generated@@15 ($generated@@108 $generated@@238 $generated@@239 $generated@@240) $generated@@241))  (and ($generated@@138 $generated@@241 $generated@@238) (and ($generated@@42 $generated@@239 $generated@@241) ($generated@@45 ($generated@@44 ($generated@@64 $generated@@35 $generated@@241)) $generated@@240))))
 :pattern ( ($generated@@65 $generated@@67 $generated@@15 ($generated@@108 $generated@@238 $generated@@239 $generated@@240) $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> ($generated@@138 $generated@@242 ($generated@@38 $generated@@243)) (and (= ($generated@@43 $generated@@37 ($generated@@64 $generated@@37 $generated@@242)) $generated@@242) ($generated@@34 $generated@@37 ($generated@@64 $generated@@37 $generated@@242) ($generated@@38 $generated@@243))))
 :pattern ( ($generated@@138 $generated@@242 ($generated@@38 $generated@@243)))
)))
(assert (= ($generated@@193 $generated@@39) $generated@@1))
(assert (= ($generated@@244 $generated@@39) $generated@@11))
(assert (= ($generated@@193 $generated@@41) $generated@@2))
(assert (= ($generated@@244 $generated@@41) $generated@@12))
(assert (= ($generated@@193 $generated@@36) $generated@@3))
(assert (= ($generated@@244 $generated@@36) $generated@@13))
(assert (= ($generated@@193 $generated@@97) $generated@@4))
(assert (= ($generated@@244 $generated@@97) $generated@@13))
(assert (= ($generated@@193 $generated@@51) $generated@@5))
(assert (= ($generated@@244 $generated@@51) $generated@@11))
(assert (= $generated@@94 ($generated@@105 $generated@@40 $generated@@94)))
(assert (= $generated@@95 ($generated@@105 $generated@@40 $generated@@95)))
(assert (forall (($generated@@245 T@U) ) (!  (=> ($generated@@34 $generated@@40 $generated@@245 $generated@@41) (or (or (or (or ($generated@@125 $generated@@245) ($generated@@53 $generated@@245)) ($generated@@57 $generated@@245)) ($generated@@60 $generated@@245)) ($generated@@130 $generated@@245)))
 :pattern ( ($generated@@130 $generated@@245) ($generated@@34 $generated@@40 $generated@@245 $generated@@41))
 :pattern ( ($generated@@60 $generated@@245) ($generated@@34 $generated@@40 $generated@@245 $generated@@41))
 :pattern ( ($generated@@57 $generated@@245) ($generated@@34 $generated@@40 $generated@@245 $generated@@41))
 :pattern ( ($generated@@53 $generated@@245) ($generated@@34 $generated@@40 $generated@@245 $generated@@41))
 :pattern ( ($generated@@125 $generated@@245) ($generated@@34 $generated@@40 $generated@@245 $generated@@41))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and ($generated@@69 $generated@@247) (and ($generated@@53 $generated@@246) ($generated@@70 $generated@@40 $generated@@246 $generated@@41 $generated@@247))) ($generated@@70 $generated@@35 ($generated@@54 $generated@@246) $generated@@39 $generated@@247))
 :pattern ( ($generated@@70 $generated@@35 ($generated@@54 $generated@@246) $generated@@39 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and ($generated@@69 $generated@@249) (and ($generated@@57 $generated@@248) ($generated@@70 $generated@@40 $generated@@248 $generated@@41 $generated@@249))) ($generated@@70 $generated@@35 ($generated@@54 $generated@@248) $generated@@39 $generated@@249))
 :pattern ( ($generated@@70 $generated@@35 ($generated@@54 $generated@@248) $generated@@39 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and ($generated@@69 $generated@@251) (and ($generated@@60 $generated@@250) ($generated@@70 $generated@@40 $generated@@250 $generated@@41 $generated@@251))) ($generated@@70 $generated@@35 ($generated@@61 $generated@@250) $generated@@39 $generated@@251))
 :pattern ( ($generated@@70 $generated@@35 ($generated@@61 $generated@@250) $generated@@39 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@142 ($generated@@105 $generated@@35 $generated@@252)) ($generated@@105 $generated@@40 ($generated@@142 $generated@@252)))
 :pattern ( ($generated@@142 ($generated@@105 $generated@@35 $generated@@252)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@145 ($generated@@105 $generated@@35 $generated@@253)) ($generated@@105 $generated@@40 ($generated@@145 $generated@@253)))
 :pattern ( ($generated@@145 ($generated@@105 $generated@@35 $generated@@253)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@148 ($generated@@105 $generated@@35 $generated@@254)) ($generated@@105 $generated@@40 ($generated@@148 $generated@@254)))
 :pattern ( ($generated@@148 ($generated@@105 $generated@@35 $generated@@254)))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@T) ) (! (= ($generated@@43 $generated@@256 ($generated@@105 $generated@@256 $generated@@255)) ($generated@@105 $generated@@67 ($generated@@43 $generated@@256 $generated@@255)))
 :pattern ( ($generated@@43 $generated@@256 ($generated@@105 $generated@@256 $generated@@255)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@266 true))
(let (($generated@@267  (=> (and (=> ($generated@@42 $generated@@257 ($generated@@43 $generated@@35 $generated@@258)) (= ($generated@@45 ($generated@@44 $generated@@258) $generated@@259) ($generated@@42 $generated@@260 ($generated@@43 $generated@@35 $generated@@258)))) (= (ControlFlow 0 14) 11)) $generated@@266)))
(let (($generated@@268  (=> ($generated@@42 $generated@@257 ($generated@@43 $generated@@35 $generated@@258)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (or (not (= $generated@@258 $generated@@33)) (not true))) (=> (or (not (= $generated@@258 $generated@@33)) (not true)) (=> (and (= ($generated@@45 ($generated@@44 $generated@@258) $generated@@259) ($generated@@42 $generated@@260 ($generated@@43 $generated@@35 $generated@@258))) (= (ControlFlow 0 12) 11)) $generated@@266))))))
(let (($generated@@269  (=> (and (and ($generated@@34 $generated@@37 ($generated@@31 $generated@@261 $generated@@257 $generated@@259) ($generated@@38 $generated@@39)) ($generated@@34 $generated@@37 $generated@@260 ($generated@@38 $generated@@39))) (and ($generated@@34 $generated@@35 $generated@@258 $generated@@39) ($generated@@70 $generated@@35 $generated@@258 $generated@@39 $generated@@262))) (and (=> (= (ControlFlow 0 15) 12) $generated@@268) (=> (= (ControlFlow 0 15) 14) $generated@@267)))))
(let (($generated@@270  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@271 T@U) ) (!  (=> (and ($generated@@34 $generated@@35 $generated@@271 $generated@@39) ($generated@@42 $generated@@257 ($generated@@43 $generated@@35 $generated@@271))) (= ($generated@@45 ($generated@@44 $generated@@271) $generated@@259) ($generated@@42 $generated@@260 ($generated@@43 $generated@@35 $generated@@271))))
 :pattern ( ($generated@@42 $generated@@260 ($generated@@43 $generated@@35 $generated@@271)))
 :pattern ( ($generated@@44 $generated@@271))
 :pattern ( ($generated@@42 $generated@@257 ($generated@@43 $generated@@35 $generated@@271)))
)))))
(let (($generated@@272  (=> (= ($generated@@31 $generated@@261 $generated@@257 $generated@@259) ($generated@@107 ($generated@@108 $generated@@39 $generated@@257 $generated@@259))) (=> (and (and (forall (($generated@@273 T@U) ) (!  (=> ($generated@@34 $generated@@35 $generated@@273 $generated@@39) (=> ($generated@@42 $generated@@257 ($generated@@43 $generated@@35 $generated@@273)) (and ($generated@@106 ($generated@@44 $generated@@273)) ($generated@@106 $generated@@259))))
 :pattern ( ($generated@@44 $generated@@273))
 :pattern ( ($generated@@42 $generated@@257 ($generated@@43 $generated@@35 $generated@@273)))
)) ($generated@@34 $generated@@37 ($generated@@31 $generated@@261 $generated@@257 $generated@@259) ($generated@@38 $generated@@39))) (and (= ($generated@@31 $generated@@261 $generated@@257 $generated@@259) $generated@@260) (= (ControlFlow 0 3) 2))) $generated@@270))))
(let (($generated@@274  (=> (and (not (and ($generated@@42 $generated@@257 ($generated@@43 $generated@@35 $generated@@263)) ($generated@@45 ($generated@@44 $generated@@263) $generated@@259))) (= (ControlFlow 0 6) 3)) $generated@@272)))
(let (($generated@@275  (=> (and (and ($generated@@42 $generated@@257 ($generated@@43 $generated@@35 $generated@@263)) ($generated@@45 ($generated@@44 $generated@@263) $generated@@259)) (= (ControlFlow 0 5) 3)) $generated@@272)))
(let (($generated@@276  (=> (not ($generated@@42 $generated@@257 ($generated@@43 $generated@@35 $generated@@263))) (and (=> (= (ControlFlow 0 9) 5) $generated@@275) (=> (= (ControlFlow 0 9) 6) $generated@@274)))))
(let (($generated@@277  (=> ($generated@@42 $generated@@257 ($generated@@43 $generated@@35 $generated@@263)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (not (= $generated@@263 $generated@@33)) (not true))) (=> (or (not (= $generated@@263 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 7) 5) $generated@@275) (=> (= (ControlFlow 0 7) 6) $generated@@274)))))))
(let (($generated@@278  (=> (and ($generated@@34 $generated@@35 $generated@@263 $generated@@39) ($generated@@70 $generated@@35 $generated@@263 $generated@@39 $generated@@262)) (and (=> (= (ControlFlow 0 10) 7) $generated@@277) (=> (= (ControlFlow 0 10) 9) $generated@@276)))))
(let (($generated@@279  (=> (and (not (and ($generated@@34 $generated@@35 $generated@@263 $generated@@39) ($generated@@70 $generated@@35 $generated@@263 $generated@@39 $generated@@262))) (= (ControlFlow 0 4) 3)) $generated@@272)))
(let (($generated@@280  (=> (= $generated@@264 ($generated@@204 $generated@@33 $generated@@262 $generated@@0 false)) (and (and (=> (= (ControlFlow 0 16) 15) $generated@@269) (=> (= (ControlFlow 0 16) 10) $generated@@278)) (=> (= (ControlFlow 0 16) 4) $generated@@279)))))
(let (($generated@@281  (=> (and (and (and ($generated@@69 $generated@@262) ($generated@@265 $generated@@262)) (and (or (not (= $generated@@261 $generated@@33)) (not true)) (and ($generated@@34 $generated@@35 $generated@@261 $generated@@36) ($generated@@70 $generated@@35 $generated@@261 $generated@@36 $generated@@262)))) (and (and ($generated@@34 $generated@@37 $generated@@257 ($generated@@38 $generated@@39)) ($generated@@34 $generated@@40 $generated@@259 $generated@@41)) (and (= 3 $generated@@30) (= (ControlFlow 0 17) 16)))) $generated@@280)))
$generated@@281)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
