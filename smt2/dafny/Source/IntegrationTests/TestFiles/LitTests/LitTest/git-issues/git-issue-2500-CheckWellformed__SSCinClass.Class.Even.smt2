(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 () Int)
(declare-fun $generated@@27 (T@U T@U Int) Bool)
(declare-fun $generated@@28 (T@U Int) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (Int) Int)
(declare-fun $generated@@34 (Int Int) Int)
(declare-fun $generated@@35 (T@U T@U Int) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 (T@U Int) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@U T@U T@U) Bool)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T T@T) T@T)
(declare-fun $generated@@73 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@103 (T@T T@U) T@U)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@10 $generated@@31) 3))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 Int) ) (!  (=> (or ($generated@@28 $generated@@39 $generated@@40) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@39 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@39 $generated@@32)) (<= ($generated@@33 0) $generated@@40)))) (or (= $generated@@40 ($generated@@33 0)) (= (= ($generated@@34 $generated@@40 ($generated@@33 2)) ($generated@@33 1)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@39 (- $generated@@40 1)))))
 :pattern ( ($generated@@27 $generated@@38 $generated@@39 $generated@@40))
))))
(assert (= ($generated@@41 $generated) $generated@@0))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! ($generated@@42 $generated@@12 $generated@@44 $generated@@43 $generated@@45)
 :pattern ( ($generated@@42 $generated@@12 $generated@@44 $generated@@43 $generated@@45))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 Int) ) (!  (=> (or ($generated@@46 $generated@@48 ($generated@@33 $generated@@49)) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@48 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@48 $generated@@32)) (<= ($generated@@33 0) $generated@@49)))) (and (=> (or (not (= ($generated@@33 $generated@@49) ($generated@@33 0))) (not true)) ($generated@@28 $generated@@48 ($generated@@33 (- $generated@@49 1)))) (= ($generated@@35 ($generated@@36 $generated@@47) $generated@@48 ($generated@@33 $generated@@49))  (or (= ($generated@@33 $generated@@49) ($generated@@33 0)) ($generated@@27 ($generated@@36 $generated@@47) $generated@@48 ($generated@@33 (- $generated@@49 1)))))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@36 $generated@@47) $generated@@48 ($generated@@33 $generated@@49)))
))))
(assert ($generated@@50 $generated@@51))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@53 $generated@@51)  (or (= $generated@@53 $generated@@29) (= ($generated@@52 $generated@@53) $generated@@51)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@53 $generated@@51))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 Int) ) (!  (=> (or ($generated@@28 $generated@@56 ($generated@@33 $generated@@57)) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@56 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@56 $generated@@32)) (<= ($generated@@33 0) $generated@@57)))) (and (=> ($generated@@15 ($generated@@54 $generated@@11 ($generated@@14  (or (not (= $generated@@57 0)) (not true))))) ($generated@@46 $generated@@56 ($generated@@33 (- $generated@@57 1)))) (= ($generated@@27 ($generated@@36 $generated@@55) $generated@@56 ($generated@@33 $generated@@57))  (and (or (not (= $generated@@57 0)) (not true)) ($generated@@35 ($generated@@36 $generated@@55) $generated@@56 ($generated@@33 (- $generated@@57 1)))))))
 :weight 3
 :pattern ( ($generated@@27 ($generated@@36 $generated@@55) $generated@@56 ($generated@@33 $generated@@57)))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and ($generated@@58 $generated@@61 $generated@@51 $generated@@62) ($generated@@59 $generated@@62)) ($generated@@58 $generated@@61 $generated@@60 $generated@@62))
 :pattern ( ($generated@@58 $generated@@61 $generated@@51 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@42 $generated@@31 $generated@@64 $generated@@63 $generated@@65) ($generated@@42 $generated@@31 $generated@@64 $generated@@60 $generated@@65))
 :pattern ( ($generated@@42 $generated@@31 $generated@@64 $generated@@63 $generated@@65))
 :pattern ( ($generated@@42 $generated@@31 $generated@@64 $generated@@60 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@42 $generated@@31 $generated@@66 $generated@@32 $generated@@67) ($generated@@42 $generated@@31 $generated@@66 $generated@@51 $generated@@67))
 :pattern ( ($generated@@42 $generated@@31 $generated@@66 $generated@@32 $generated@@67))
 :pattern ( ($generated@@42 $generated@@31 $generated@@66 $generated@@51 $generated@@67))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@76 T@T) ($generated@@77 T@T) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@69 $generated@@76 $generated@@77 ($generated@@73 $generated@@76 $generated@@77 $generated@@79 $generated@@80 $generated@@78) $generated@@80) $generated@@78)
 :weight 0
)) (forall (($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or (= $generated@@85 $generated@@86) (= ($generated@@69 $generated@@81 $generated@@82 ($generated@@73 $generated@@81 $generated@@82 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@69 $generated@@81 $generated@@82 $generated@@84 $generated@@86)))
 :weight 0
))) (= ($generated@@10 $generated@@70) 4)) (= ($generated@@10 $generated@@71) 5)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@10 ($generated@@72 $generated@@87 $generated@@88)) 6))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@74 ($generated@@72 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@72 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@75 ($generated@@72 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@72 $generated@@91 $generated@@92))
))))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@42 $generated@@31 $generated@@93 $generated@@60 $generated@@94)  (or (= $generated@@93 $generated@@29) ($generated@@15 ($generated@@68 $generated@@11 ($generated@@69 $generated@@70 $generated@@71 ($generated@@69 $generated@@31 ($generated@@72 $generated@@70 $generated@@71) $generated@@94 $generated@@93) $generated@@1)))))
 :pattern ( ($generated@@42 $generated@@31 $generated@@93 $generated@@60 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@42 $generated@@31 $generated@@95 $generated@@51 $generated@@96)  (or (= $generated@@95 $generated@@29) ($generated@@15 ($generated@@68 $generated@@11 ($generated@@69 $generated@@70 $generated@@71 ($generated@@69 $generated@@31 ($generated@@72 $generated@@70 $generated@@71) $generated@@96 $generated@@95) $generated@@1)))))
 :pattern ( ($generated@@42 $generated@@31 $generated@@95 $generated@@51 $generated@@96))
)))
(assert (forall (($generated@@97 Int) ) (! (= ($generated@@33 $generated@@97) $generated@@97)
 :pattern ( ($generated@@33 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@54 $generated@@99 $generated@@98) $generated@@98)
 :pattern ( ($generated@@54 $generated@@99 $generated@@98))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 Int) ) (!  (=> (or ($generated@@46 $generated@@101 $generated@@102) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@101 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@101 $generated@@32)) (<= ($generated@@33 0) $generated@@102)))) (and (=> (or (not (= $generated@@102 ($generated@@33 0))) (not true)) ($generated@@28 $generated@@101 (- $generated@@102 1))) (= ($generated@@35 ($generated@@36 $generated@@100) $generated@@101 $generated@@102)  (or (= $generated@@102 ($generated@@33 0)) ($generated@@27 $generated@@100 $generated@@101 (- $generated@@102 1))))))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@100) $generated@@101 $generated@@102))
))))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@103 $generated@@105 ($generated@@68 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@68 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@30 $generated@@12 $generated@@106 $generated@@43) (<= ($generated@@33 0) ($generated@@17 $generated@@106)))
 :pattern ( ($generated@@30 $generated@@12 $generated@@106 $generated@@43))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 Int) ) (! (= ($generated@@35 ($generated@@36 $generated@@107) $generated@@108 $generated@@109) ($generated@@35 $generated@@107 $generated@@108 $generated@@109))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@107) $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 Int) ) (! (= ($generated@@27 ($generated@@36 $generated@@110) $generated@@111 $generated@@112) ($generated@@27 $generated@@110 $generated@@111 $generated@@112))
 :pattern ( ($generated@@27 ($generated@@36 $generated@@110) $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@58 ($generated@@103 $generated@@116 $generated@@113) $generated@@114 $generated@@115) ($generated@@42 $generated@@116 $generated@@113 $generated@@114 $generated@@115))
 :pattern ( ($generated@@58 ($generated@@103 $generated@@116 $generated@@113) $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@117 $generated@@63)  (and ($generated@@30 $generated@@31 $generated@@117 $generated@@60) (or (not (= $generated@@117 $generated@@29)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@117 $generated@@63))
 :pattern ( ($generated@@30 $generated@@31 $generated@@117 $generated@@60))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@118 $generated@@32)  (and ($generated@@30 $generated@@31 $generated@@118 $generated@@51) (or (not (= $generated@@118 $generated@@29)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@118 $generated@@32))
 :pattern ( ($generated@@30 $generated@@31 $generated@@118 $generated@@51))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@42 $generated@@31 $generated@@119 $generated@@51 $generated@@120) ($generated@@42 $generated@@31 $generated@@119 $generated@@60 $generated@@120))
 :pattern ( ($generated@@42 $generated@@31 $generated@@119 $generated@@51 $generated@@120))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 Int) ) (!  (=> (or ($generated@@46 ($generated@@54 $generated@@31 $generated@@122) ($generated@@33 $generated@@123)) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@122 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@122 $generated@@32)) (<= ($generated@@33 0) $generated@@123)))) (and (=> (or (not (= ($generated@@33 $generated@@123) ($generated@@33 0))) (not true)) ($generated@@28 ($generated@@54 $generated@@31 $generated@@122) ($generated@@33 (- $generated@@123 1)))) (= ($generated@@35 ($generated@@36 $generated@@121) ($generated@@54 $generated@@31 $generated@@122) ($generated@@33 $generated@@123))  (or (= ($generated@@33 $generated@@123) ($generated@@33 0)) ($generated@@27 ($generated@@36 $generated@@121) ($generated@@54 $generated@@31 $generated@@122) ($generated@@33 (- $generated@@123 1)))))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@36 $generated@@121) ($generated@@54 $generated@@31 $generated@@122) ($generated@@33 $generated@@123)))
))))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@68 $generated@@125 ($generated@@103 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@103 $generated@@125 $generated@@124))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 Int) ) (!  (=> (or ($generated@@28 $generated@@127 $generated@@128) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@127 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@127 $generated@@32)) (<= ($generated@@33 0) $generated@@128)))) (and (=> (or (not (= $generated@@128 0)) (not true)) ($generated@@46 $generated@@127 (- $generated@@128 1))) (= ($generated@@27 ($generated@@36 $generated@@126) $generated@@127 $generated@@128)  (and (or (not (= $generated@@128 0)) (not true)) ($generated@@35 $generated@@126 $generated@@127 (- $generated@@128 1))))))
 :pattern ( ($generated@@27 ($generated@@36 $generated@@126) $generated@@127 $generated@@128))
))))
(assert  (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@129 $generated@@132 $generated@@133 $generated@@134 ($generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@129 $generated@@139 $generated@@140 $generated@@141 ($generated@@131 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@129 $generated@@148 $generated@@149 $generated@@150 ($generated@@131 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@129 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@15 ($generated@@129 $generated@@31 $generated@@70 $generated@@11 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@15 ($generated@@68 $generated@@11 ($generated@@69 $generated@@70 $generated@@71 ($generated@@69 $generated@@31 ($generated@@72 $generated@@70 $generated@@71) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@129 $generated@@31 $generated@@70 $generated@@11 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 Int) ($generated@@164 Int) ) (! (= ($generated@@34 $generated@@163 $generated@@164) (mod $generated@@163 $generated@@164))
 :pattern ( ($generated@@34 $generated@@163 $generated@@164))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Int) ) (!  (=> (or ($generated@@28 ($generated@@54 $generated@@31 $generated@@166) ($generated@@33 $generated@@167)) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@166 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@166 $generated@@32)) (<= ($generated@@33 0) $generated@@167)))) (and (=> ($generated@@15 ($generated@@54 $generated@@11 ($generated@@14  (or (not (= $generated@@167 0)) (not true))))) ($generated@@46 ($generated@@54 $generated@@31 $generated@@166) ($generated@@33 (- $generated@@167 1)))) (= ($generated@@27 ($generated@@36 $generated@@165) ($generated@@54 $generated@@31 $generated@@166) ($generated@@33 $generated@@167)) ($generated@@15 ($generated@@54 $generated@@11 ($generated@@14  (and (or (not (= $generated@@167 0)) (not true)) ($generated@@35 ($generated@@36 $generated@@165) ($generated@@54 $generated@@31 $generated@@166) ($generated@@33 (- $generated@@167 1))))))))))
 :weight 3
 :pattern ( ($generated@@27 ($generated@@36 $generated@@165) ($generated@@54 $generated@@31 $generated@@166) ($generated@@33 $generated@@167)))
))))
(assert (forall (($generated@@168 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@168 $generated@@51) ($generated@@30 $generated@@31 $generated@@168 $generated@@60))
 :pattern ( ($generated@@30 $generated@@31 $generated@@168 $generated@@51))
)))
(assert (= ($generated@@41 $generated@@43) $generated@@2))
(assert (= ($generated@@169 $generated@@43) $generated@@7))
(assert (= ($generated@@41 $generated@@60) $generated@@3))
(assert (= ($generated@@169 $generated@@60) $generated@@8))
(assert (= ($generated@@41 $generated@@63) $generated@@4))
(assert (= ($generated@@169 $generated@@63) $generated@@8))
(assert (= ($generated@@41 $generated@@51) $generated@@5))
(assert (= ($generated@@169 $generated@@51) $generated@@9))
(assert (= ($generated@@41 $generated@@32) $generated@@6))
(assert (= ($generated@@169 $generated@@32) $generated@@9))
(assert (forall (($generated@@170 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@170 $generated@@60)  (or (= $generated@@170 $generated@@29) ($generated@@50 ($generated@@52 $generated@@170))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@170 $generated@@60))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@103 $generated@@12 ($generated@@16 ($generated@@33 $generated@@171))) ($generated@@54 $generated@@71 ($generated@@103 $generated@@12 ($generated@@16 $generated@@171))))
 :pattern ( ($generated@@103 $generated@@12 ($generated@@16 ($generated@@33 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@T) ) (! (= ($generated@@103 $generated@@173 ($generated@@54 $generated@@173 $generated@@172)) ($generated@@54 $generated@@71 ($generated@@103 $generated@@173 $generated@@172)))
 :pattern ( ($generated@@103 $generated@@173 ($generated@@54 $generated@@173 $generated@@172)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! ($generated@@42 $generated@@11 $generated@@175 $generated $generated@@174)
 :pattern ( ($generated@@42 $generated@@11 $generated@@175 $generated $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! ($generated@@30 $generated@@11 $generated@@176 $generated)
 :pattern ( ($generated@@30 $generated@@11 $generated@@176 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@183 true))
(let (($generated@@184  (=> (and (= $generated@@177 ($generated@@33 0)) (= (ControlFlow 0 7) 2)) $generated@@183)))
(let (($generated@@185  (=> (and (or (not (= $generated@@177 ($generated@@33 0))) (not true)) ($generated@@58 ($generated@@103 $generated@@31 $generated@@178) $generated@@51 $generated@@179)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@30 $generated@@12 ($generated@@16 (- $generated@@177 1)) $generated@@43)) (=> ($generated@@30 $generated@@12 ($generated@@16 (- $generated@@177 1)) $generated@@43) (=> (and (= $generated@@180 (- $generated@@177 1)) ($generated@@42 $generated@@12 ($generated@@16 $generated@@180) $generated@@43 $generated@@179)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (<= 0 $generated@@177) (= $generated@@180 $generated@@177))) (=> (or (<= 0 $generated@@177) (= $generated@@180 $generated@@177)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (< $generated@@180 $generated@@177)) (=> (< $generated@@180 $generated@@177) (=> (and ($generated@@28 $generated@@178 (- $generated@@177 1)) (= (ControlFlow 0 3) 2)) $generated@@183)))))))))))
(let (($generated@@186 true))
(let (($generated@@187  (=> (= $generated@@181 ($generated@@130 $generated@@29 $generated@@179 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@186) (=> (= (ControlFlow 0 8) 3) $generated@@185)) (=> (= (ControlFlow 0 8) 7) $generated@@184)))))
(let (($generated@@188  (=> (and ($generated@@59 $generated@@179) ($generated@@182 $generated@@179)) (=> (and (and (and (or (not (= $generated@@178 $generated@@29)) (not true)) (and ($generated@@30 $generated@@31 $generated@@178 $generated@@32) ($generated@@42 $generated@@31 $generated@@178 $generated@@32 $generated@@179))) (<= ($generated@@33 0) $generated@@177)) (and (= 0 $generated@@26) (= (ControlFlow 0 9) 8))) $generated@@187))))
$generated@@188)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
