(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@25 (Int Int) Bool)
(declare-fun $generated@@26 (Int) Int)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (Int) T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@35 (T@U T@U Int) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (Int) Bool)
(declare-fun $generated@@38 (Int) Bool)
(declare-fun $generated@@39 (T@U Int) Bool)
(declare-fun $generated@@40 (Int Int) Bool)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@97 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@T) T@T)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@167 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@172 (T@T T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated) $generated@@1))
(assert (= ($generated@@20 $generated@@0) $generated@@2))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (!  (=> (and ($generated@@21 $generated@@22 $generated@@23) ($generated@@21 $generated@@23 $generated@@24)) ($generated@@21 $generated@@22 $generated@@24))
 :pattern ( ($generated@@21 $generated@@22 $generated@@23) ($generated@@21 $generated@@23 $generated@@24))
 :pattern ( ($generated@@21 $generated@@22 $generated@@23) ($generated@@21 $generated@@22 $generated@@24))
)))
(assert (forall (($generated@@27 Int) ($generated@@28 Int) ) (! (= ($generated@@25 ($generated@@26 $generated@@27) ($generated@@26 $generated@@28)) (= ($generated@@26 $generated@@28) ($generated@@26 (+ $generated@@27 1))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@26 $generated@@27) ($generated@@26 $generated@@28)))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 Int) ($generated@@34 Int) ) (!  (=> (and (and (<= 0 $generated@@33) (<= 0 $generated@@34)) (<= (+ $generated@@33 $generated@@34) ($generated@@31 $generated@@32))) (= ($generated@@29 ($generated@@29 $generated@@32 ($generated@@30 $generated@@33)) ($generated@@30 $generated@@34)) ($generated@@29 $generated@@32 ($generated@@30 (+ $generated@@33 $generated@@34)))))
 :pattern ( ($generated@@29 ($generated@@29 $generated@@32 ($generated@@30 $generated@@33)) ($generated@@30 $generated@@34)))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 Int) ) (!  (and (and (=> (< 0 ($generated@@31 $generated@@43)) (and ($generated@@37 $generated@@44) (=> (not ($generated@@38 $generated@@44)) (forall (($generated@@45 Int) ) (!  (and ($generated@@39 ($generated@@29 $generated@@43 ($generated@@30 1)) $generated@@45) (=> ($generated@@35 $generated@@42 ($generated@@29 $generated@@43 ($generated@@30 1)) $generated@@45) ($generated@@40 $generated@@45 $generated@@44)))
 :pattern ( ($generated@@25 $generated@@45 $generated@@44))
 :pattern ( ($generated@@35 $generated@@42 ($generated@@29 $generated@@43 ($generated@@30 1)) $generated@@45))
))))) (=> (=> (< 0 ($generated@@31 $generated@@43)) (or ($generated@@38 $generated@@44) (exists (($generated@@46 Int) ) (!  (and ($generated@@35 $generated@@42 ($generated@@29 $generated@@43 ($generated@@30 1)) $generated@@46) ($generated@@25 $generated@@46 $generated@@44))
 :pattern ( ($generated@@25 $generated@@46 $generated@@44))
 :pattern ( ($generated@@35 $generated@@42 ($generated@@29 $generated@@43 ($generated@@30 1)) $generated@@46))
)))) (=> (= ($generated@@26 0) ($generated@@31 $generated@@43)) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@41 $generated@@47 $generated@@43) ($generated@@39 $generated@@47 $generated@@44))
 :pattern ( ($generated@@35 $generated@@42 $generated@@47 $generated@@44))
))))) (= ($generated@@35 ($generated@@36 $generated@@42) $generated@@43 $generated@@44)  (and (=> (< 0 ($generated@@31 $generated@@43)) (or ($generated@@38 $generated@@44) (exists (($generated@@48 Int) ) (!  (and ($generated@@35 $generated@@42 ($generated@@29 $generated@@43 ($generated@@30 1)) $generated@@48) ($generated@@25 $generated@@48 $generated@@44))
 :pattern ( ($generated@@25 $generated@@48 $generated@@44))
 :pattern ( ($generated@@35 $generated@@42 ($generated@@29 $generated@@43 ($generated@@30 1)) $generated@@48))
)))) (=> (= ($generated@@26 0) ($generated@@31 $generated@@43)) (exists (($generated@@49 T@U) ) (!  (and ($generated@@41 $generated@@49 $generated@@43) ($generated@@35 $generated@@42 $generated@@49 $generated@@44))
 :pattern ( ($generated@@35 $generated@@42 $generated@@49 $generated@@44))
))))))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@42) $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@50 Int) ) (! (= ($generated@@26 $generated@@50) $generated@@50)
 :pattern ( ($generated@@26 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@55 $generated@@57 ($generated@@54 $generated@@57 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@54 $generated@@57 $generated@@56))
)))
(assert (forall (($generated@@58 Int) ) (! (= ($generated@@38 $generated@@58) (= $generated@@58 ($generated@@26 0)))
 :pattern ( ($generated@@38 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 Int) ) (! (= ($generated@@35 ($generated@@36 $generated@@59) $generated@@60 $generated@@61) ($generated@@35 $generated@@59 $generated@@60 $generated@@61))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@59) $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 Int) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> ($generated@@21 $generated@@64 $generated@@65) (=> ($generated@@35 $generated@@62 $generated@@64 $generated@@63) ($generated@@35 $generated@@62 $generated@@65 $generated@@63)))
 :pattern ( ($generated@@35 $generated@@62 $generated@@64 $generated@@63) ($generated@@41 $generated@@64 $generated@@66) ($generated@@41 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (and ($generated@@67 $generated@@69) (<= ($generated@@31 $generated@@69) ($generated@@31 $generated@@68))) (and (= ($generated@@67 ($generated@@29 $generated@@68 $generated@@69)) ($generated@@67 $generated@@68)) (= ($generated@@31 ($generated@@29 $generated@@68 $generated@@69)) (- ($generated@@31 $generated@@68) ($generated@@31 $generated@@69)))))
 :pattern ( ($generated@@29 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@70 Int) ) (!  (=> (<= 0 $generated@@70) (and ($generated@@67 ($generated@@30 $generated@@70)) (= ($generated@@31 ($generated@@30 $generated@@70)) $generated@@70)))
 :pattern ( ($generated@@30 $generated@@70))
)))
(assert (forall (($generated@@71 Int) ) (! (= ($generated@@38 ($generated@@26 $generated@@71)) (= ($generated@@26 $generated@@71) ($generated@@26 0)))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@26 $generated@@71)))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (or (or ($generated@@21 $generated@@72 $generated@@73) (= $generated@@72 $generated@@73)) ($generated@@21 $generated@@73 $generated@@72))
 :pattern ( ($generated@@21 $generated@@72 $generated@@73) ($generated@@21 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@41 $generated@@74 $generated@@75) ($generated@@21 $generated@@74 $generated@@75))
 :pattern ( ($generated@@41 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 Int) ($generated@@78 T@U) ) (!  (=> (= $generated@@78 ($generated@@30 0)) (not ($generated@@35 $generated@@76 $generated@@78 $generated@@77)))
 :pattern ( ($generated@@35 $generated@@76 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (! (<= 0 ($generated@@31 $generated@@79))
 :pattern ( ($generated@@31 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@54 $generated@@81 ($generated@@55 $generated@@81 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@55 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (and (and (and (=> ($generated@@21 $generated@@82 $generated@@83) (or (not (= $generated@@82 $generated@@83)) (not true))) (=> (and ($generated@@67 $generated@@82) (not ($generated@@67 $generated@@83))) ($generated@@21 $generated@@82 $generated@@83))) (=> (and ($generated@@67 $generated@@82) ($generated@@67 $generated@@83)) (= ($generated@@21 $generated@@82 $generated@@83) (< ($generated@@31 $generated@@82) ($generated@@31 $generated@@83))))) (=> (and ($generated@@21 $generated@@82 $generated@@83) ($generated@@67 $generated@@83)) ($generated@@67 $generated@@82)))
 :pattern ( ($generated@@21 $generated@@82 $generated@@83))
)))
(assert (= ($generated@@4 $generated@@84) 3))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 Int) ) (!  (and (and (=> (< 0 ($generated@@31 $generated@@86)) (and ($generated@@37 ($generated@@26 $generated@@87)) (=> (not ($generated@@9 ($generated@@51 $generated@@5 ($generated@@8 ($generated@@38 ($generated@@26 $generated@@87)))))) (forall (($generated@@88 Int) ) (!  (and ($generated@@39 ($generated@@29 $generated@@86 ($generated@@30 1)) $generated@@88) (=> ($generated@@35 ($generated@@36 $generated@@85) ($generated@@29 $generated@@86 ($generated@@30 1)) $generated@@88) ($generated@@40 $generated@@88 ($generated@@26 $generated@@87))))
 :pattern ( ($generated@@25 $generated@@88 $generated@@87))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@85) ($generated@@29 $generated@@86 ($generated@@30 1)) $generated@@88))
))))) (=> (=> (< 0 ($generated@@31 $generated@@86)) (or ($generated@@38 ($generated@@26 $generated@@87)) (exists (($generated@@89 Int) ) (!  (and ($generated@@35 ($generated@@36 $generated@@85) ($generated@@29 $generated@@86 ($generated@@30 1)) $generated@@89) ($generated@@25 $generated@@89 ($generated@@26 $generated@@87)))
 :pattern ( ($generated@@25 $generated@@89 $generated@@87))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@85) ($generated@@29 $generated@@86 ($generated@@30 1)) $generated@@89))
)))) (=> (= ($generated@@26 0) ($generated@@31 $generated@@86)) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@41 $generated@@90 $generated@@86) ($generated@@39 $generated@@90 $generated@@87))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@85) $generated@@90 $generated@@87))
))))) (= ($generated@@35 ($generated@@36 $generated@@85) ($generated@@51 $generated@@84 $generated@@86) ($generated@@26 $generated@@87))  (and (=> (< 0 ($generated@@31 $generated@@86)) (or ($generated@@38 ($generated@@26 $generated@@87)) (exists (($generated@@91 Int) ) (!  (and ($generated@@35 ($generated@@36 $generated@@85) ($generated@@29 $generated@@86 ($generated@@30 1)) $generated@@91) ($generated@@25 $generated@@91 ($generated@@26 $generated@@87)))
 :pattern ( ($generated@@25 $generated@@91 $generated@@87))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@85) ($generated@@29 $generated@@86 ($generated@@30 1)) $generated@@91))
)))) (=> (= ($generated@@26 0) ($generated@@31 $generated@@86)) (exists (($generated@@92 T@U) ) (!  (and ($generated@@41 $generated@@92 $generated@@86) ($generated@@35 ($generated@@36 $generated@@85) $generated@@92 $generated@@87))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@85) $generated@@92 $generated@@87))
))))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@36 $generated@@85) ($generated@@51 $generated@@84 $generated@@86) ($generated@@26 $generated@@87)))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@93 $generated@@103 $generated@@104 $generated@@105 ($generated@@99 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@93 $generated@@110 $generated@@111 $generated@@112 ($generated@@99 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@93 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@93 $generated@@119 $generated@@120 $generated@@121 ($generated@@99 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@93 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))) (= ($generated@@4 $generated@@94) 4)) (= ($generated@@4 $generated@@95) 5)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@97 $generated@@128 $generated@@129 ($generated@@100 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@130) $generated@@132) $generated@@130)
 :weight 0
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 $generated@@133 $generated@@134 ($generated@@100 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@133 $generated@@134 $generated@@136 $generated@@138)))
 :weight 0
))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (= ($generated@@4 ($generated@@98 $generated@@139 $generated@@140)) 6))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@101 ($generated@@98 $generated@@141 $generated@@142)) $generated@@141)
 :pattern ( ($generated@@98 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (! (= ($generated@@102 ($generated@@98 $generated@@143 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@98 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Bool) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@9 ($generated@@93 $generated@@94 $generated@@95 $generated@@5 ($generated@@96 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))  (=> (and (or (not (= $generated@@149 $generated@@145)) (not true)) ($generated@@9 ($generated@@54 $generated@@5 ($generated@@97 $generated@@95 $generated@@84 ($generated@@97 $generated@@94 ($generated@@98 $generated@@95 $generated@@84) $generated@@146 $generated@@149) $generated@@147)))) $generated@@148))
 :pattern ( ($generated@@93 $generated@@94 $generated@@95 $generated@@5 ($generated@@96 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Int) ) (!  (and (and (=> (< 0 ($generated@@31 $generated@@152)) (and ($generated@@37 $generated@@153) (=> (not ($generated@@38 $generated@@153)) (forall (($generated@@154 Int) ) (!  (and ($generated@@39 ($generated@@29 $generated@@152 ($generated@@30 1)) $generated@@154) (=> ($generated@@35 ($generated@@36 $generated@@151) ($generated@@29 $generated@@152 ($generated@@30 1)) $generated@@154) ($generated@@40 $generated@@154 $generated@@153)))
 :pattern ( ($generated@@25 $generated@@154 $generated@@153))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@151) ($generated@@29 $generated@@152 ($generated@@30 1)) $generated@@154))
))))) (=> (=> (< 0 ($generated@@31 $generated@@152)) (or ($generated@@38 $generated@@153) (exists (($generated@@155 Int) ) (!  (and ($generated@@35 ($generated@@36 $generated@@151) ($generated@@29 $generated@@152 ($generated@@30 1)) $generated@@155) ($generated@@25 $generated@@155 $generated@@153))
 :pattern ( ($generated@@25 $generated@@155 $generated@@153))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@151) ($generated@@29 $generated@@152 ($generated@@30 1)) $generated@@155))
)))) (=> (= ($generated@@26 0) ($generated@@31 $generated@@152)) (forall (($generated@@156 T@U) ) (!  (=> ($generated@@41 $generated@@156 $generated@@152) ($generated@@39 $generated@@156 $generated@@153))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@151) $generated@@156 $generated@@153))
))))) (= ($generated@@35 ($generated@@36 $generated@@151) ($generated@@51 $generated@@84 $generated@@152) $generated@@153)  (and (=> (< 0 ($generated@@31 $generated@@152)) (or ($generated@@38 $generated@@153) (exists (($generated@@157 Int) ) (!  (and ($generated@@35 ($generated@@36 $generated@@151) ($generated@@29 $generated@@152 ($generated@@30 1)) $generated@@157) ($generated@@25 $generated@@157 $generated@@153))
 :pattern ( ($generated@@25 $generated@@157 $generated@@153))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@151) ($generated@@29 $generated@@152 ($generated@@30 1)) $generated@@157))
)))) (=> (= ($generated@@26 0) ($generated@@31 $generated@@152)) (exists (($generated@@158 T@U) ) (!  (and ($generated@@41 $generated@@158 $generated@@152) ($generated@@35 ($generated@@36 $generated@@151) $generated@@158 $generated@@153))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@151) $generated@@158 $generated@@153))
))))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@36 $generated@@151) ($generated@@51 $generated@@84 $generated@@152) $generated@@153))
)))
(assert (forall (($generated@@159 Int) ($generated@@160 Int) ) (! (= ($generated@@25 $generated@@159 $generated@@160) (= $generated@@160 (+ $generated@@159 1)))
 :pattern ( ($generated@@25 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> ($generated@@67 $generated@@161) (= $generated@@161 ($generated@@30 ($generated@@31 $generated@@161))))
 :pattern ( ($generated@@31 $generated@@161))
 :pattern ( ($generated@@67 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@67 $generated@@163) (<= ($generated@@31 $generated@@163) ($generated@@31 $generated@@162))) (or (and (= $generated@@163 ($generated@@30 0)) (= ($generated@@29 $generated@@162 $generated@@163) $generated@@162)) (and (or (not (= $generated@@163 ($generated@@30 0))) (not true)) ($generated@@21 ($generated@@29 $generated@@162 $generated@@163) $generated@@162))))
 :pattern ( ($generated@@29 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 Int) ) (! (= ($generated@@55 $generated@@6 ($generated@@10 ($generated@@26 $generated@@164))) ($generated@@51 $generated@@84 ($generated@@55 $generated@@6 ($generated@@10 $generated@@164))))
 :pattern ( ($generated@@55 $generated@@6 ($generated@@10 ($generated@@26 $generated@@164))))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@55 $generated@@166 ($generated@@51 $generated@@166 $generated@@165)) ($generated@@51 $generated@@84 ($generated@@55 $generated@@166 $generated@@165)))
 :pattern ( ($generated@@55 $generated@@166 ($generated@@51 $generated@@166 $generated@@165)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! ($generated@@167 $generated@@6 $generated@@169 $generated $generated@@168)
 :pattern ( ($generated@@167 $generated@@6 $generated@@169 $generated $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! ($generated@@167 $generated@@84 $generated@@171 $generated@@0 $generated@@170)
 :pattern ( ($generated@@167 $generated@@84 $generated@@171 $generated@@0 $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (! ($generated@@172 $generated@@6 $generated@@173 $generated)
 :pattern ( ($generated@@172 $generated@@6 $generated@@173 $generated))
)))
(assert (forall (($generated@@174 T@U) ) (! ($generated@@172 $generated@@84 $generated@@174 $generated@@0)
 :pattern ( ($generated@@172 $generated@@84 $generated@@174 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@191 true))
(let (($generated@@192  (=> (= (ControlFlow 0 2) (- 0 1)) (>= $generated@@175 ($generated@@26 0)))))
(let (($generated@@193  (=> (and ($generated@@39 ($generated@@29 $generated@@176 ($generated@@30 1)) $generated@@177) (=> ($generated@@35 ($generated@@36 $generated@@178) ($generated@@29 $generated@@176 ($generated@@30 1)) $generated@@177) ($generated@@40 $generated@@177 $generated@@175))) (and (=> (= (ControlFlow 0 6) (- 0 11)) (or (and ($generated@@172 $generated@@6 ($generated@@10 ($generated@@26 0)) $generated) (and ($generated@@35 ($generated@@36 $generated@@178) ($generated@@29 $generated@@176 ($generated@@30 1)) ($generated@@26 0)) ($generated@@25 ($generated@@26 0) $generated@@175))) (exists (($generated@@194 Int) )  (and ($generated@@35 ($generated@@36 $generated@@178) ($generated@@29 $generated@@176 ($generated@@30 1)) $generated@@194) ($generated@@25 $generated@@194 $generated@@175))))) (=> (or (and ($generated@@172 $generated@@6 ($generated@@10 ($generated@@26 0)) $generated) (and ($generated@@35 ($generated@@36 $generated@@178) ($generated@@29 $generated@@176 ($generated@@30 1)) ($generated@@26 0)) ($generated@@25 ($generated@@26 0) $generated@@175))) (exists (($generated@@195 Int) )  (and ($generated@@35 ($generated@@36 $generated@@178) ($generated@@29 $generated@@176 ($generated@@30 1)) $generated@@195) ($generated@@25 $generated@@195 $generated@@175)))) (=> (and ($generated@@35 ($generated@@36 $generated@@178) ($generated@@29 $generated@@176 ($generated@@30 1)) $generated@@179) ($generated@@25 $generated@@179 $generated@@175)) (and (=> (= (ControlFlow 0 6) (- 0 10)) ($generated@@67 ($generated@@51 $generated@@84 ($generated@@30 1)))) (=> ($generated@@67 ($generated@@51 $generated@@84 ($generated@@30 1))) (and (=> (= (ControlFlow 0 6) (- 0 9)) (<= ($generated@@31 ($generated@@51 $generated@@84 ($generated@@30 1))) ($generated@@31 $generated@@176))) (=> (<= ($generated@@31 ($generated@@51 $generated@@84 ($generated@@30 1))) ($generated@@31 $generated@@176)) (=> (= $generated@@180 ($generated@@29 $generated@@176 ($generated@@30 1))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (=> ($generated@@39 $generated@@180 $generated@@179) (or ($generated@@35 ($generated@@36 $generated@@178) $generated@@180 $generated@@179) (=> (< 0 ($generated@@31 $generated@@180)) (or ($generated@@38 $generated@@179) (exists (($generated@@196 Int) ) (!  (and ($generated@@35 ($generated@@36 ($generated@@36 $generated@@178)) ($generated@@29 $generated@@180 ($generated@@30 1)) $generated@@196) ($generated@@25 $generated@@196 $generated@@179))
 :pattern ( ($generated@@25 $generated@@196 $generated@@179))
 :pattern ( ($generated@@35 ($generated@@36 ($generated@@36 $generated@@178)) ($generated@@29 $generated@@180 ($generated@@30 1)) $generated@@196))
))))))) (=> (=> ($generated@@39 $generated@@180 $generated@@179) (or ($generated@@35 ($generated@@36 $generated@@178) $generated@@180 $generated@@179) (=> (< 0 ($generated@@31 $generated@@180)) (or ($generated@@38 $generated@@179) (exists (($generated@@197 Int) ) (!  (and ($generated@@35 ($generated@@36 ($generated@@36 $generated@@178)) ($generated@@29 $generated@@180 ($generated@@30 1)) $generated@@197) ($generated@@25 $generated@@197 $generated@@179))
 :pattern ( ($generated@@25 $generated@@197 $generated@@179))
 :pattern ( ($generated@@35 ($generated@@36 ($generated@@36 $generated@@178)) ($generated@@29 $generated@@180 ($generated@@30 1)) $generated@@197))
)))))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (=> ($generated@@39 $generated@@180 $generated@@179) (or ($generated@@35 ($generated@@36 $generated@@178) $generated@@180 $generated@@179) (=> (= ($generated@@26 0) ($generated@@31 $generated@@180)) (exists (($generated@@198 T@U) ) (!  (and ($generated@@41 $generated@@198 $generated@@180) ($generated@@35 ($generated@@36 $generated@@178) $generated@@198 $generated@@179))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@178) $generated@@198 $generated@@179))
)))))) (=> (=> ($generated@@39 $generated@@180 $generated@@179) (or ($generated@@35 ($generated@@36 $generated@@178) $generated@@180 $generated@@179) (=> (= ($generated@@26 0) ($generated@@31 $generated@@180)) (exists (($generated@@199 T@U) ) (!  (and ($generated@@41 $generated@@199 $generated@@180) ($generated@@35 ($generated@@36 $generated@@178) $generated@@199 $generated@@179))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@178) $generated@@199 $generated@@179))
))))) (=> (and (and (and ($generated@@181 $generated@@182) ($generated@@183 $generated@@182)) (>= $generated@@179 ($generated@@26 0))) (and (= $generated@@184 $generated@@182) (= (ControlFlow 0 6) 2))) $generated@@192))))))))))))))))
(let (($generated@@200  (=> (and (not ($generated@@35 ($generated@@36 $generated@@178) ($generated@@29 $generated@@176 ($generated@@30 1)) $generated@@177)) (= (ControlFlow 0 13) 6)) $generated@@193)))
(let (($generated@@201  (=> ($generated@@35 ($generated@@36 $generated@@178) ($generated@@29 $generated@@176 ($generated@@30 1)) $generated@@177) (=> (and (and ($generated@@167 $generated@@6 ($generated@@10 $generated@@177) $generated $generated@@184) ($generated@@167 $generated@@6 ($generated@@10 $generated@@175) $generated $generated@@184)) (and ($generated@@40 $generated@@177 $generated@@175) (= (ControlFlow 0 12) 6))) $generated@@193))))
(let (($generated@@202  (and (=> (= (ControlFlow 0 14) (- 0 16)) ($generated@@67 ($generated@@51 $generated@@84 ($generated@@30 1)))) (=> ($generated@@67 ($generated@@51 $generated@@84 ($generated@@30 1))) (and (=> (= (ControlFlow 0 14) (- 0 15)) (<= ($generated@@31 ($generated@@51 $generated@@84 ($generated@@30 1))) ($generated@@31 $generated@@176))) (=> (<= ($generated@@31 ($generated@@51 $generated@@84 ($generated@@30 1))) ($generated@@31 $generated@@176)) (=> (and (and (= $generated@@185 ($generated@@29 $generated@@176 ($generated@@30 1))) ($generated@@167 $generated@@84 $generated@@185 $generated@@0 $generated@@184)) (and ($generated@@167 $generated@@6 ($generated@@10 $generated@@177) $generated $generated@@184) ($generated@@39 ($generated@@29 $generated@@176 ($generated@@30 1)) $generated@@177))) (and (=> (= (ControlFlow 0 14) 12) $generated@@201) (=> (= (ControlFlow 0 14) 13) $generated@@200)))))))))
(let (($generated@@203  (=> (not ($generated@@38 $generated@@175)) (and (=> (= (ControlFlow 0 17) 14) $generated@@202) (=> (= (ControlFlow 0 17) 5) $generated@@191)))))
(let (($generated@@204  (=> (and ($generated@@38 $generated@@175) (= (ControlFlow 0 4) 2)) $generated@@192)))
(let (($generated@@205  (=> (and (and (< 0 ($generated@@31 $generated@@176)) ($generated@@167 $generated@@6 ($generated@@10 $generated@@175) $generated $generated@@184)) (and ($generated@@37 $generated@@175) ($generated@@37 $generated@@175))) (and (=> (= (ControlFlow 0 18) 4) $generated@@204) (=> (= (ControlFlow 0 18) 17) $generated@@203)))))
(let (($generated@@206  (=> (<= ($generated@@31 $generated@@176) 0) (=> (and (and (and ($generated@@181 $generated@@186) ($generated@@183 $generated@@186)) (= $generated@@184 $generated@@186)) (and (forall (($generated@@207 T@U) ($generated@@208 Int) ) (!  (=> (and ($generated@@21 $generated@@207 $generated@@176) ($generated@@35 ($generated@@36 $generated@@178) $generated@@207 $generated@@208)) (>= $generated@@208 ($generated@@26 0)))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@178) $generated@@207 $generated@@208))
)) (= (ControlFlow 0 3) 2))) $generated@@192))))
(let (($generated@@209  (=> (= $generated@@187 ($generated@@96 $generated@@188 $generated@@189 $generated@@3 false)) (=> (and (and ($generated@@181 $generated@@184) ($generated@@183 $generated@@184)) (and (= $generated@@189 $generated@@184) (forall (($generated@@210 T@U) ($generated@@211 Int) ) (!  (=> (and ($generated@@35 ($generated@@36 $generated@@178) $generated@@210 $generated@@211) (or ($generated@@21 $generated@@210 $generated@@176) (and (= $generated@@210 $generated@@176) (and (<= 0 $generated@@211) (< $generated@@211 $generated@@175))))) (>= $generated@@211 ($generated@@26 0)))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@178) $generated@@210 $generated@@211))
)))) (and (=> (= (ControlFlow 0 19) 18) $generated@@205) (=> (= (ControlFlow 0 19) 3) $generated@@206))))))
(let (($generated@@212  (=> (and (and (and ($generated@@181 $generated@@189) ($generated@@183 $generated@@189)) (= 1 $generated@@190)) (and (and ($generated@@39 $generated@@176 $generated@@175) (and ($generated@@35 ($generated@@36 $generated@@178) $generated@@176 $generated@@175) (and (=> (< 0 ($generated@@31 $generated@@176)) (or ($generated@@38 $generated@@175) (exists (($generated@@213 Int) ) (!  (and ($generated@@35 ($generated@@36 $generated@@178) ($generated@@29 $generated@@176 ($generated@@30 1)) $generated@@213) ($generated@@25 $generated@@213 $generated@@175))
 :pattern ( ($generated@@25 $generated@@213 $generated@@175))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@178) ($generated@@29 $generated@@176 ($generated@@30 1)) $generated@@213))
)))) (=> (= ($generated@@26 0) ($generated@@31 $generated@@176)) (exists (($generated@@214 T@U) ) (!  (and ($generated@@41 $generated@@214 $generated@@176) ($generated@@35 ($generated@@36 $generated@@178) $generated@@214 $generated@@175))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@178) $generated@@214 $generated@@175))
)))))) (= (ControlFlow 0 20) 19))) $generated@@209)))
$generated@@212)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
