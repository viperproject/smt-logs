(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U Int) T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (Int) Int)
(declare-fun $generated@@26 (Int) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U Int T@U) Bool)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (Int) T@U)
(declare-fun $generated@@50 (T@U) Int)
(declare-fun $generated@@54 (T@U T@U T@U) Bool)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@99 (Int T@U) Bool)
(declare-fun $generated@@117 (T@U) Bool)
(declare-fun $generated@@129 (T@U T@U) Bool)
(declare-fun $generated@@130 (T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@167 (T@U) Int)
(declare-fun $generated@@169 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@228 (T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@6 $generated@@30) 3))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@31 T@U) ($generated@@32 Int) ) (!  (=> (or ($generated@@26 ($generated@@25 $generated@@32)) (and (< 1 $generated@@22) (<= ($generated@@25 0) $generated@@32))) (and (=> (or (not (= ($generated@@25 $generated@@32) ($generated@@25 0))) (not true)) ($generated@@26 ($generated@@25 (- $generated@@32 1)))) (= ($generated@@23 ($generated@@24 $generated@@31) ($generated@@25 $generated@@32)) (ite (= ($generated@@25 $generated@@32) ($generated@@25 0)) $generated@@27 ($generated@@28 ($generated@@29 $generated@@30 ($generated@@23 ($generated@@24 $generated@@31) ($generated@@25 (- $generated@@32 1)))))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@24 $generated@@31) ($generated@@25 $generated@@32)))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (and ($generated@@34 $generated@@30 $generated@@38 $generated@@35) ($generated@@33 ($generated@@24 $generated@@37) $generated@@38)) (forall (($generated@@39 Int) ) (!  (=> (<= ($generated@@25 0) $generated@@39) ($generated@@36 ($generated@@24 $generated@@37) $generated@@39 $generated@@38))
 :pattern ( ($generated@@36 ($generated@@24 $generated@@37) $generated@@39 $generated@@38))
)))
 :pattern ( ($generated@@33 ($generated@@24 $generated@@37) $generated@@38))
))))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (and ($generated@@40 $generated@@41 $generated@@42) ($generated@@40 $generated@@42 $generated@@43)) ($generated@@40 $generated@@41 $generated@@43))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42) ($generated@@40 $generated@@42 $generated@@43))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42) ($generated@@40 $generated@@41 $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! ($generated@@44 $generated@@8 $generated@@46 $generated@@45 $generated@@47)
 :pattern ( ($generated@@44 $generated@@8 $generated@@46 $generated@@45 $generated@@47))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 Int) ($generated@@53 Int) ) (!  (=> (and (and (<= 0 $generated@@52) (<= 0 $generated@@53)) (<= (+ $generated@@52 $generated@@53) ($generated@@50 $generated@@51))) (= ($generated@@48 ($generated@@48 $generated@@51 ($generated@@49 $generated@@52)) ($generated@@49 $generated@@53)) ($generated@@48 $generated@@51 ($generated@@49 (+ $generated@@52 $generated@@53)))))
 :pattern ( ($generated@@48 ($generated@@48 $generated@@51 ($generated@@49 $generated@@52)) ($generated@@49 $generated@@53)))
)))
(assert (= ($generated@@6 $generated@@55) 4))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (or ($generated@@56 ($generated@@29 $generated@@55 $generated@@60) $generated@@61) (and (< 2 $generated@@22) ($generated@@34 $generated@@30 $generated@@61 $generated@@35))) (and (and (=> (< 0 ($generated@@50 $generated@@60)) (=> ($generated@@57 $generated@@61) (let (($generated@@62 ($generated@@58 $generated@@61)))
($generated@@56 ($generated@@48 $generated@@60 ($generated@@49 1)) $generated@@62)))) (=> (=> (< 0 ($generated@@50 $generated@@60)) (ite ($generated@@57 $generated@@61) (let (($generated@@63 ($generated@@58 $generated@@61)))
($generated@@54 ($generated@@24 $generated@@59) ($generated@@48 $generated@@60 ($generated@@49 1)) $generated@@63)) true)) (=> (= ($generated@@25 0) ($generated@@50 $generated@@60)) (forall (($generated@@64 T@U) ) (!  (=> ($generated@@40 $generated@@64 $generated@@60) ($generated@@56 $generated@@64 $generated@@61))
 :pattern ( ($generated@@54 ($generated@@24 $generated@@59) $generated@@64 $generated@@61))
))))) (= ($generated@@54 ($generated@@24 $generated@@59) ($generated@@29 $generated@@55 $generated@@60) $generated@@61)  (and (=> (< 0 ($generated@@50 $generated@@60)) (ite ($generated@@57 $generated@@61) (let (($generated@@65 ($generated@@58 $generated@@61)))
($generated@@54 ($generated@@24 $generated@@59) ($generated@@48 $generated@@60 ($generated@@49 1)) $generated@@65)) true)) (=> (= ($generated@@25 0) ($generated@@50 $generated@@60)) (forall (($generated@@66 T@U) ) (!  (=> ($generated@@40 $generated@@66 $generated@@60) ($generated@@54 ($generated@@24 $generated@@59) $generated@@66 $generated@@61))
 :pattern ( ($generated@@54 ($generated@@24 $generated@@59) $generated@@66 $generated@@61))
)))))))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@24 $generated@@59) ($generated@@29 $generated@@55 $generated@@60) $generated@@61))
))))
(assert (= ($generated@@67 $generated@@27) $generated@@3))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@68 T@U) ($generated@@69 Int) ) (!  (=> (or ($generated@@26 $generated@@69) (and (< 1 $generated@@22) (<= ($generated@@25 0) $generated@@69))) ($generated@@34 $generated@@30 ($generated@@23 $generated@@68 $generated@@69) $generated@@35))
 :pattern ( ($generated@@23 $generated@@68 $generated@@69))
))))
(assert ($generated@@34 $generated@@30 $generated@@27 $generated@@35))
(assert (forall (($generated@@70 Int) ) (! (= ($generated@@25 $generated@@70) $generated@@70)
 :pattern ( ($generated@@25 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@29 $generated@@72 $generated@@71) $generated@@71)
 :pattern ( ($generated@@29 $generated@@72 $generated@@71))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 Int) ) (!  (=> (and ($generated@@34 $generated@@30 $generated@@74 $generated@@35) (= $generated@@75 0)) ($generated@@36 $generated@@73 $generated@@75 $generated@@74))
 :pattern ( ($generated@@36 $generated@@73 $generated@@75 $generated@@74))
))))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@57 $generated@@76) (= ($generated@@67 $generated@@76) $generated@@2))
 :pattern ( ($generated@@57 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@77 $generated@@78) (= ($generated@@67 $generated@@78) $generated@@3))
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@79 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82 $generated@@81))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and ($generated@@34 $generated@@30 $generated@@84 $generated@@35) (= $generated@@85 ($generated@@49 0))) ($generated@@54 $generated@@83 $generated@@85 $generated@@84))
 :pattern ( ($generated@@54 $generated@@83 $generated@@85 $generated@@84))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (and ($generated@@34 $generated@@30 $generated@@88 $generated@@35) (forall (($generated@@89 T@U) ) (! ($generated@@54 ($generated@@24 $generated@@87) $generated@@89 $generated@@88)
 :pattern ( ($generated@@54 ($generated@@24 $generated@@87) $generated@@89 $generated@@88))
))) ($generated@@86 ($generated@@24 $generated@@87) $generated@@88))
 :pattern ( ($generated@@86 ($generated@@24 $generated@@87) $generated@@88))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (or ($generated@@56 $generated@@91 $generated@@92) (and (< 2 $generated@@22) ($generated@@34 $generated@@30 $generated@@92 $generated@@35))) (and (and (=> (< 0 ($generated@@50 $generated@@91)) (=> ($generated@@57 $generated@@92) (let (($generated@@93 ($generated@@58 $generated@@92)))
($generated@@56 ($generated@@48 $generated@@91 ($generated@@49 1)) $generated@@93)))) (=> (=> (< 0 ($generated@@50 $generated@@91)) (ite ($generated@@57 $generated@@92) (let (($generated@@94 ($generated@@58 $generated@@92)))
($generated@@54 $generated@@90 ($generated@@48 $generated@@91 ($generated@@49 1)) $generated@@94)) true)) (=> (= ($generated@@25 0) ($generated@@50 $generated@@91)) (forall (($generated@@95 T@U) ) (!  (=> ($generated@@40 $generated@@95 $generated@@91) ($generated@@56 $generated@@95 $generated@@92))
 :pattern ( ($generated@@54 $generated@@90 $generated@@95 $generated@@92))
))))) (= ($generated@@54 ($generated@@24 $generated@@90) $generated@@91 $generated@@92)  (and (=> (< 0 ($generated@@50 $generated@@91)) (ite ($generated@@57 $generated@@92) (let (($generated@@96 ($generated@@58 $generated@@92)))
($generated@@54 $generated@@90 ($generated@@48 $generated@@91 ($generated@@49 1)) $generated@@96)) true)) (=> (= ($generated@@25 0) ($generated@@50 $generated@@91)) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@40 $generated@@97 $generated@@91) ($generated@@54 $generated@@90 $generated@@97 $generated@@92))
 :pattern ( ($generated@@54 $generated@@90 $generated@@97 $generated@@92))
)))))))
 :pattern ( ($generated@@54 ($generated@@24 $generated@@90) $generated@@91 $generated@@92))
))))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@77 $generated@@98) (= $generated@@98 $generated@@27))
 :pattern ( ($generated@@77 $generated@@98))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@100 T@U) ($generated@@101 Int) ($generated@@102 T@U) ) (!  (=> (or ($generated@@99 ($generated@@25 $generated@@101) $generated@@102) (and (< 2 $generated@@22) (and (<= ($generated@@25 0) $generated@@101) ($generated@@34 $generated@@30 $generated@@102 $generated@@35)))) (and (=> (< 0 $generated@@101) (=> ($generated@@57 $generated@@102) (let (($generated@@103 ($generated@@58 $generated@@102)))
($generated@@99 (- $generated@@101 1) $generated@@103)))) (= ($generated@@36 ($generated@@24 $generated@@100) ($generated@@25 $generated@@101) $generated@@102)  (=> (< 0 $generated@@101) (ite ($generated@@57 $generated@@102) (let (($generated@@104 ($generated@@58 $generated@@102)))
($generated@@36 ($generated@@24 $generated@@100) (- $generated@@101 1) $generated@@104)) true)))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@24 $generated@@100) ($generated@@25 $generated@@101) $generated@@102))
))))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@57 $generated@@105) (exists (($generated@@106 T@U) ) (= $generated@@105 ($generated@@28 $generated@@106))))
 :pattern ( ($generated@@57 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@34 $generated@@8 $generated@@107 $generated@@45) (<= ($generated@@25 0) ($generated@@13 $generated@@107)))
 :pattern ( ($generated@@34 $generated@@8 $generated@@107 $generated@@45))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@54 ($generated@@24 $generated@@108) $generated@@109 $generated@@110) ($generated@@54 $generated@@108 $generated@@109 $generated@@110))
 :pattern ( ($generated@@54 ($generated@@24 $generated@@108) $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 Int) ($generated@@113 T@U) ) (! (= ($generated@@36 ($generated@@24 $generated@@111) $generated@@112 $generated@@113) ($generated@@36 $generated@@111 $generated@@112 $generated@@113))
 :pattern ( ($generated@@36 ($generated@@24 $generated@@111) $generated@@112 $generated@@113))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and ($generated@@34 $generated@@30 $generated@@115 $generated@@35) ($generated@@86 ($generated@@24 $generated@@114) $generated@@115)) (forall (($generated@@116 T@U) ) (! ($generated@@54 ($generated@@24 $generated@@114) $generated@@116 $generated@@115)
 :pattern ( ($generated@@54 ($generated@@24 $generated@@114) $generated@@116 $generated@@115))
)))
 :pattern ( ($generated@@86 ($generated@@24 $generated@@114) $generated@@115))
))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (and ($generated@@117 $generated@@119) (<= ($generated@@50 $generated@@119) ($generated@@50 $generated@@118))) (and (= ($generated@@117 ($generated@@48 $generated@@118 $generated@@119)) ($generated@@117 $generated@@118)) (= ($generated@@50 ($generated@@48 $generated@@118 $generated@@119)) (- ($generated@@50 $generated@@118) ($generated@@50 $generated@@119)))))
 :pattern ( ($generated@@48 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 Int) ) (!  (=> (<= 0 $generated@@120) (and ($generated@@117 ($generated@@49 $generated@@120)) (= ($generated@@50 ($generated@@49 $generated@@120)) $generated@@120)))
 :pattern ( ($generated@@49 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@34 $generated@@30 ($generated@@28 $generated@@121) $generated@@35) ($generated@@34 $generated@@30 $generated@@121 $generated@@35))
 :pattern ( ($generated@@34 $generated@@30 ($generated@@28 $generated@@121) $generated@@35))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@122 T@U) ($generated@@123 Int) ($generated@@124 T@U) ) (!  (=> (or ($generated@@99 $generated@@123 $generated@@124) (and (< 2 $generated@@22) (and (<= ($generated@@25 0) $generated@@123) ($generated@@34 $generated@@30 $generated@@124 $generated@@35)))) (and (=> (< 0 $generated@@123) (=> ($generated@@57 $generated@@124) (let (($generated@@125 ($generated@@58 $generated@@124)))
($generated@@99 (- $generated@@123 1) $generated@@125)))) (= ($generated@@36 ($generated@@24 $generated@@122) $generated@@123 $generated@@124)  (=> (< 0 $generated@@123) (ite ($generated@@57 $generated@@124) (let (($generated@@126 ($generated@@58 $generated@@124)))
($generated@@36 $generated@@122 (- $generated@@123 1) $generated@@126)) true)))))
 :pattern ( ($generated@@36 ($generated@@24 $generated@@122) $generated@@123 $generated@@124))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (or ($generated@@40 $generated@@127 $generated@@128) (= $generated@@127 $generated@@128)) ($generated@@40 $generated@@128 $generated@@127))
 :pattern ( ($generated@@40 $generated@@127 $generated@@128) ($generated@@40 $generated@@128 $generated@@127))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or ($generated@@130 ($generated@@29 $generated@@30 $generated@@132)) (and (< 1 $generated@@22) ($generated@@34 $generated@@30 $generated@@132 $generated@@35))) (and (=> ($generated@@11 ($generated@@29 $generated@@7 ($generated@@10 ($generated@@57 ($generated@@29 $generated@@30 $generated@@132))))) (let (($generated@@133 ($generated@@29 $generated@@30 ($generated@@58 ($generated@@29 $generated@@30 $generated@@132)))))
($generated@@130 $generated@@133))) (= ($generated@@129 ($generated@@24 $generated@@131) ($generated@@29 $generated@@30 $generated@@132)) (ite ($generated@@57 ($generated@@29 $generated@@30 $generated@@132)) ($generated@@11 (let (($generated@@134 ($generated@@29 $generated@@30 ($generated@@58 ($generated@@29 $generated@@30 $generated@@132)))))
($generated@@29 $generated@@7 ($generated@@10 ($generated@@129 ($generated@@24 $generated@@131) $generated@@134))))) true))))
 :weight 3
 :pattern ( ($generated@@129 ($generated@@24 $generated@@131) ($generated@@29 $generated@@30 $generated@@132)))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (or ($generated@@130 $generated@@136) (and (< 1 $generated@@22) ($generated@@34 $generated@@30 $generated@@136 $generated@@35))) (and (=> ($generated@@57 $generated@@136) (let (($generated@@137 ($generated@@58 $generated@@136)))
($generated@@130 $generated@@137))) (= ($generated@@129 ($generated@@24 $generated@@135) $generated@@136) (ite ($generated@@57 $generated@@136) (let (($generated@@138 ($generated@@58 $generated@@136)))
($generated@@129 $generated@@135 $generated@@138)) true))))
 :pattern ( ($generated@@129 ($generated@@24 $generated@@135) $generated@@136))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (or ($generated@@139 $generated@@141) (and (< 1 $generated@@22) ($generated@@34 $generated@@30 $generated@@141 $generated@@35))) (and (=> ($generated@@57 $generated@@141) (let (($generated@@142 ($generated@@58 $generated@@141)))
($generated@@139 $generated@@142))) (= ($generated@@86 ($generated@@24 $generated@@140) $generated@@141) (ite ($generated@@57 $generated@@141) (let (($generated@@143 ($generated@@58 $generated@@141)))
($generated@@86 $generated@@140 $generated@@143)) true))))
 :pattern ( ($generated@@86 ($generated@@24 $generated@@140) $generated@@141))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (or ($generated@@144 $generated@@146) (and (< 1 $generated@@22) ($generated@@34 $generated@@30 $generated@@146 $generated@@35))) (and (=> ($generated@@57 $generated@@146) (let (($generated@@147 ($generated@@58 $generated@@146)))
($generated@@144 $generated@@147))) (= ($generated@@33 ($generated@@24 $generated@@145) $generated@@146) (ite ($generated@@57 $generated@@146) (let (($generated@@148 ($generated@@58 $generated@@146)))
($generated@@33 $generated@@145 $generated@@148)) true))))
 :pattern ( ($generated@@33 ($generated@@24 $generated@@145) $generated@@146))
))))
(assert (forall (($generated@@149 T@U) ) (!  (=> ($generated@@34 $generated@@30 $generated@@149 $generated@@35) (or ($generated@@57 $generated@@149) ($generated@@77 $generated@@149)))
 :pattern ( ($generated@@77 $generated@@149) ($generated@@34 $generated@@30 $generated@@149 $generated@@35))
 :pattern ( ($generated@@57 $generated@@149) ($generated@@34 $generated@@30 $generated@@149 $generated@@35))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@129 ($generated@@24 $generated@@150) $generated@@151) ($generated@@129 $generated@@150 $generated@@151))
 :pattern ( ($generated@@129 ($generated@@24 $generated@@150) $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@86 ($generated@@24 $generated@@152) $generated@@153) ($generated@@86 $generated@@152 $generated@@153))
 :pattern ( ($generated@@86 ($generated@@24 $generated@@152) $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@33 ($generated@@24 $generated@@154) $generated@@155) ($generated@@33 $generated@@154 $generated@@155))
 :pattern ( ($generated@@33 ($generated@@24 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (<= 0 ($generated@@50 $generated@@156))
 :pattern ( ($generated@@50 $generated@@156))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (!  (=> (or ($generated@@26 $generated@@158) (and (< 1 $generated@@22) (<= ($generated@@25 0) $generated@@158))) (and (=> (or (not (= $generated@@158 ($generated@@25 0))) (not true)) ($generated@@26 (- $generated@@158 1))) (= ($generated@@23 ($generated@@24 $generated@@157) $generated@@158) (ite (= $generated@@158 ($generated@@25 0)) $generated@@27 ($generated@@28 ($generated@@23 $generated@@157 (- $generated@@158 1)))))))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@157) $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@67 ($generated@@28 $generated@@159)) $generated@@2)
 :pattern ( ($generated@@28 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@58 ($generated@@28 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@28 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@79 $generated@@162 ($generated@@80 $generated@@162 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@80 $generated@@162 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (and (and (and (=> ($generated@@40 $generated@@163 $generated@@164) (or (not (= $generated@@163 $generated@@164)) (not true))) (=> (and ($generated@@117 $generated@@163) (not ($generated@@117 $generated@@164))) ($generated@@40 $generated@@163 $generated@@164))) (=> (and ($generated@@117 $generated@@163) ($generated@@117 $generated@@164)) (= ($generated@@40 $generated@@163 $generated@@164) (< ($generated@@50 $generated@@163) ($generated@@50 $generated@@164))))) (=> (and ($generated@@40 $generated@@163 $generated@@164) ($generated@@117 $generated@@164)) ($generated@@117 $generated@@163)))
 :pattern ( ($generated@@40 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 Int) ) (! (= ($generated@@23 ($generated@@24 $generated@@165) $generated@@166) ($generated@@23 $generated@@165 $generated@@166))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@165) $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! (< ($generated@@167 $generated@@168) ($generated@@167 ($generated@@28 $generated@@168)))
 :pattern ( ($generated@@28 $generated@@168))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@169 $generated@@179 $generated@@180 $generated@@181 ($generated@@175 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@184 $generated@@185) $generated@@182)
 :weight 0
)) (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@169 $generated@@186 $generated@@187 $generated@@188 ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@169 $generated@@195 $generated@@196 $generated@@197 ($generated@@175 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@169 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (= ($generated@@6 $generated@@170) 5)) (= ($generated@@6 $generated@@171) 6)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@173 $generated@@204 $generated@@205 ($generated@@176 $generated@@204 $generated@@205 $generated@@207 $generated@@208 $generated@@206) $generated@@208) $generated@@206)
 :weight 0
))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@213 $generated@@214) (= ($generated@@173 $generated@@209 $generated@@210 ($generated@@176 $generated@@209 $generated@@210 $generated@@212 $generated@@213 $generated@@211) $generated@@214) ($generated@@173 $generated@@209 $generated@@210 $generated@@212 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (= ($generated@@6 ($generated@@174 $generated@@215 $generated@@216)) 7))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@177 ($generated@@174 $generated@@217 $generated@@218)) $generated@@217)
 :pattern ( ($generated@@174 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@178 ($generated@@174 $generated@@219 $generated@@220)) $generated@@220)
 :pattern ( ($generated@@174 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@11 ($generated@@169 $generated@@170 $generated@@171 $generated@@7 ($generated@@172 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (or (not (= $generated@@225 $generated@@221)) (not true)) ($generated@@11 ($generated@@79 $generated@@7 ($generated@@173 $generated@@171 $generated@@55 ($generated@@173 $generated@@170 ($generated@@174 $generated@@171 $generated@@55) $generated@@222 $generated@@225) $generated@@223)))) $generated@@224))
 :pattern ( ($generated@@169 $generated@@170 $generated@@171 $generated@@7 ($generated@@172 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> ($generated@@117 $generated@@227) (= $generated@@227 ($generated@@49 ($generated@@50 $generated@@227))))
 :pattern ( ($generated@@50 $generated@@227))
 :pattern ( ($generated@@117 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and ($generated@@228 $generated@@230) ($generated@@34 $generated@@30 $generated@@229 $generated@@35)) ($generated@@44 $generated@@30 $generated@@229 $generated@@35 $generated@@230))
 :pattern ( ($generated@@44 $generated@@30 $generated@@229 $generated@@35 $generated@@230))
)))
(assert (= ($generated@@231 $generated@@45) $generated@@0))
(assert (= ($generated@@232 $generated@@45) $generated@@4))
(assert (= ($generated@@231 $generated@@35) $generated@@1))
(assert (= ($generated@@232 $generated@@35) $generated@@5))
(assert (= $generated@@27 ($generated@@29 $generated@@30 $generated@@27)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and ($generated@@117 $generated@@234) (<= ($generated@@50 $generated@@234) ($generated@@50 $generated@@233))) (or (and (= $generated@@234 ($generated@@49 0)) (= ($generated@@48 $generated@@233 $generated@@234) $generated@@233)) (and (or (not (= $generated@@234 ($generated@@49 0))) (not true)) ($generated@@40 ($generated@@48 $generated@@233 $generated@@234) $generated@@233))))
 :pattern ( ($generated@@48 $generated@@233 $generated@@234))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@235 T@U) ($generated@@236 Int) ($generated@@237 T@U) ) (!  (=> (or ($generated@@99 ($generated@@25 $generated@@236) ($generated@@29 $generated@@30 $generated@@237)) (and (< 2 $generated@@22) (and (<= ($generated@@25 0) $generated@@236) ($generated@@34 $generated@@30 $generated@@237 $generated@@35)))) (and (=> (< 0 $generated@@236) (=> ($generated@@11 ($generated@@29 $generated@@7 ($generated@@10 ($generated@@57 ($generated@@29 $generated@@30 $generated@@237))))) (let (($generated@@238 ($generated@@29 $generated@@30 ($generated@@58 ($generated@@29 $generated@@30 $generated@@237)))))
($generated@@99 (- $generated@@236 1) $generated@@238)))) (= ($generated@@36 ($generated@@24 $generated@@235) ($generated@@25 $generated@@236) ($generated@@29 $generated@@30 $generated@@237))  (=> (< 0 $generated@@236) (ite ($generated@@57 ($generated@@29 $generated@@30 $generated@@237)) (let (($generated@@239 ($generated@@29 $generated@@30 ($generated@@58 ($generated@@29 $generated@@30 $generated@@237)))))
($generated@@36 ($generated@@24 $generated@@235) (- $generated@@236 1) $generated@@239)) true)))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@24 $generated@@235) ($generated@@25 $generated@@236) ($generated@@29 $generated@@30 $generated@@237)))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and ($generated@@228 $generated@@241) (and ($generated@@57 $generated@@240) ($generated@@44 $generated@@30 $generated@@240 $generated@@35 $generated@@241))) ($generated@@44 $generated@@30 ($generated@@58 $generated@@240) $generated@@35 $generated@@241))
 :pattern ( ($generated@@44 $generated@@30 ($generated@@58 $generated@@240) $generated@@35 $generated@@241))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@80 $generated@@8 ($generated@@12 ($generated@@25 $generated@@242))) ($generated@@29 $generated@@55 ($generated@@80 $generated@@8 ($generated@@12 $generated@@242))))
 :pattern ( ($generated@@80 $generated@@8 ($generated@@12 ($generated@@25 $generated@@242))))
)))
(assert (forall (($generated@@243 T@U) ) (! (= ($generated@@28 ($generated@@29 $generated@@30 $generated@@243)) ($generated@@29 $generated@@30 ($generated@@28 $generated@@243)))
 :pattern ( ($generated@@28 ($generated@@29 $generated@@30 $generated@@243)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (= ($generated@@80 $generated@@245 ($generated@@29 $generated@@245 $generated@@244)) ($generated@@29 $generated@@55 ($generated@@80 $generated@@245 $generated@@244)))
 :pattern ( ($generated@@80 $generated@@245 ($generated@@29 $generated@@245 $generated@@244)))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (or ($generated@@56 ($generated@@29 $generated@@55 $generated@@247) ($generated@@29 $generated@@30 $generated@@248)) (and (< 2 $generated@@22) ($generated@@34 $generated@@30 $generated@@248 $generated@@35))) (and (and (=> (< 0 ($generated@@50 $generated@@247)) (=> ($generated@@11 ($generated@@29 $generated@@7 ($generated@@10 ($generated@@57 ($generated@@29 $generated@@30 $generated@@248))))) (let (($generated@@249 ($generated@@29 $generated@@30 ($generated@@58 ($generated@@29 $generated@@30 $generated@@248)))))
($generated@@56 ($generated@@48 $generated@@247 ($generated@@49 1)) $generated@@249)))) (=> (=> (< 0 ($generated@@50 $generated@@247)) (ite ($generated@@57 ($generated@@29 $generated@@30 $generated@@248)) (let (($generated@@250 ($generated@@29 $generated@@30 ($generated@@58 ($generated@@29 $generated@@30 $generated@@248)))))
($generated@@54 ($generated@@24 $generated@@246) ($generated@@48 $generated@@247 ($generated@@49 1)) $generated@@250)) true)) (=> (= ($generated@@25 0) ($generated@@50 $generated@@247)) (forall (($generated@@251 T@U) ) (!  (=> ($generated@@40 $generated@@251 $generated@@247) ($generated@@56 $generated@@251 $generated@@248))
 :pattern ( ($generated@@54 ($generated@@24 $generated@@246) $generated@@251 $generated@@248))
))))) (= ($generated@@54 ($generated@@24 $generated@@246) ($generated@@29 $generated@@55 $generated@@247) ($generated@@29 $generated@@30 $generated@@248))  (and (=> (< 0 ($generated@@50 $generated@@247)) (ite ($generated@@57 ($generated@@29 $generated@@30 $generated@@248)) (let (($generated@@252 ($generated@@29 $generated@@30 ($generated@@58 ($generated@@29 $generated@@30 $generated@@248)))))
($generated@@54 ($generated@@24 $generated@@246) ($generated@@48 $generated@@247 ($generated@@49 1)) $generated@@252)) true)) (=> (= ($generated@@25 0) ($generated@@50 $generated@@247)) (forall (($generated@@253 T@U) ) (!  (=> ($generated@@40 $generated@@253 $generated@@247) ($generated@@54 ($generated@@24 $generated@@246) $generated@@253 $generated@@248))
 :pattern ( ($generated@@54 ($generated@@24 $generated@@246) $generated@@253 $generated@@248))
)))))))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@24 $generated@@246) ($generated@@29 $generated@@55 $generated@@247) ($generated@@29 $generated@@30 $generated@@248)))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and ($generated@@34 $generated@@30 $generated@@255 $generated@@35) (forall (($generated@@256 Int) ) (!  (=> (<= ($generated@@25 0) $generated@@256) ($generated@@36 ($generated@@24 $generated@@254) $generated@@256 $generated@@255))
 :pattern ( ($generated@@36 ($generated@@24 $generated@@254) $generated@@256 $generated@@255))
))) ($generated@@33 ($generated@@24 $generated@@254) $generated@@255))
 :pattern ( ($generated@@33 ($generated@@24 $generated@@254) $generated@@255))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@257 () Int)
(declare-fun $generated@@258 () Int)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () Int)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@268  (=> (and (and (and (= $generated@@257 (ite (< $generated@@258 0) 0 $generated@@258)) ($generated@@44 $generated@@8 ($generated@@12 $generated@@257) $generated@@45 $generated@@259)) (and ($generated@@26 (ite (< $generated@@258 0) 0 $generated@@258)) (= $generated@@260 ($generated@@23 ($generated@@24 $generated@@261) (ite (< $generated@@258 0) 0 $generated@@258))))) (and (and ($generated@@44 $generated@@30 $generated@@260 $generated@@35 $generated@@259) ($generated@@139 ($generated@@23 ($generated@@24 $generated@@261) (ite (< $generated@@258 0) 0 $generated@@258)))) (and ($generated@@26 (ite (< $generated@@258 0) 0 $generated@@258)) ($generated@@139 ($generated@@23 ($generated@@24 $generated@@261) (ite (< $generated@@258 0) 0 $generated@@258)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@139 ($generated@@23 ($generated@@24 $generated@@261) (ite (< $generated@@258 0) 0 $generated@@258))) (or ($generated@@86 ($generated@@24 $generated@@261) ($generated@@23 ($generated@@24 $generated@@261) (ite (< $generated@@258 0) 0 $generated@@258))) (=> ($generated@@57 ($generated@@23 ($generated@@24 $generated@@261) (ite (< $generated@@258 0) 0 $generated@@258))) (let (($generated@@269 ($generated@@58 ($generated@@23 ($generated@@24 ($generated@@24 $generated@@261)) (ite (< $generated@@258 0) 0 $generated@@258)))))
($generated@@86 ($generated@@24 ($generated@@24 $generated@@261)) $generated@@269)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@139 ($generated@@23 ($generated@@24 $generated@@261) (ite (< $generated@@258 0) 0 $generated@@258))) (or ($generated@@86 ($generated@@24 $generated@@261) ($generated@@23 ($generated@@24 $generated@@261) (ite (< $generated@@258 0) 0 $generated@@258))) (=> (not ($generated@@57 ($generated@@23 ($generated@@24 $generated@@261) (ite (< $generated@@258 0) 0 $generated@@258)))) ($generated@@11 ($generated@@29 $generated@@7 ($generated@@10 true)))))))))))
(let (($generated@@270  (=> (<= 0 $generated@@258) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@34 $generated@@8 ($generated@@12 $generated@@258) $generated@@45)) (=> ($generated@@34 $generated@@8 ($generated@@12 $generated@@258) $generated@@45) (=> (= (ControlFlow 0 6) 2) $generated@@268))))))
(let (($generated@@271  (=> (< $generated@@258 0) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@34 $generated@@8 ($generated@@12 ($generated@@25 0)) $generated@@45)) (=> ($generated@@34 $generated@@8 ($generated@@12 ($generated@@25 0)) $generated@@45) (=> (= (ControlFlow 0 4) 2) $generated@@268))))))
(let (($generated@@272  (=> (= $generated@@262 (ite (< $generated@@258 0) 0 $generated@@258)) (=> (and (and ($generated@@44 $generated@@8 ($generated@@12 $generated@@262) $generated@@45 $generated@@263) ($generated@@26 (ite (< $generated@@258 0) 0 $generated@@258))) (and ($generated@@26 (ite (< $generated@@258 0) 0 $generated@@258)) (= $generated@@264 ($generated@@23 ($generated@@24 $generated@@261) (ite (< $generated@@258 0) 0 $generated@@258))))) (=> (and (and (and (and ($generated@@228 $generated@@259) ($generated@@265 $generated@@259)) ($generated@@130 $generated@@264)) (and (and ($generated@@130 $generated@@264) (and ($generated@@129 ($generated@@24 $generated@@261) $generated@@264) (ite ($generated@@57 $generated@@264) (let (($generated@@273 ($generated@@58 $generated@@264)))
($generated@@129 ($generated@@24 $generated@@261) $generated@@273)) true))) ($generated@@139 $generated@@264))) (and (and (and ($generated@@139 $generated@@264) (and ($generated@@86 ($generated@@24 $generated@@261) $generated@@264) (ite ($generated@@57 $generated@@264) (let (($generated@@274 ($generated@@58 $generated@@264)))
($generated@@86 ($generated@@24 $generated@@261) $generated@@274)) true))) ($generated@@144 $generated@@264)) (and (and ($generated@@144 $generated@@264) (and ($generated@@33 ($generated@@24 $generated@@261) $generated@@264) (ite ($generated@@57 $generated@@264) (let (($generated@@275 ($generated@@58 $generated@@264)))
($generated@@33 ($generated@@24 $generated@@261) $generated@@275)) true))) (= $generated@@263 $generated@@259)))) (and (=> (= (ControlFlow 0 8) 4) $generated@@271) (=> (= (ControlFlow 0 8) 6) $generated@@270)))))))
(let (($generated@@276  (=> (<= 0 $generated@@258) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@34 $generated@@8 ($generated@@12 $generated@@258) $generated@@45)) (=> ($generated@@34 $generated@@8 ($generated@@12 $generated@@258) $generated@@45) (=> (= (ControlFlow 0 11) 8) $generated@@272))))))
(let (($generated@@277  (=> (< $generated@@258 0) (and (=> (= (ControlFlow 0 9) (- 0 10)) ($generated@@34 $generated@@8 ($generated@@12 ($generated@@25 0)) $generated@@45)) (=> ($generated@@34 $generated@@8 ($generated@@12 ($generated@@25 0)) $generated@@45) (=> (= (ControlFlow 0 9) 8) $generated@@272))))))
(let (($generated@@278  (=> (= $generated@@266 ($generated@@172 $generated@@267 $generated@@263 $generated false)) (and (=> (= (ControlFlow 0 13) 9) $generated@@277) (=> (= (ControlFlow 0 13) 11) $generated@@276)))))
(let (($generated@@279  (=> (and (and ($generated@@228 $generated@@263) ($generated@@265 $generated@@263)) (and (= 3 $generated@@22) (= (ControlFlow 0 14) 13))) $generated@@278)))
$generated@@279)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
