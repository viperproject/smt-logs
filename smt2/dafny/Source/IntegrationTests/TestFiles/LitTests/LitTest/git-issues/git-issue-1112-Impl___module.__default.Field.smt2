(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T T@T) T@T)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@98 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated@@1) 0))
(assert (= ($generated@@30 $generated) $generated@@0))
(assert (= ($generated@@31 $generated@@1) $generated@@2))
(assert (= ($generated@@13 $generated@@33) 3))
(assert (forall (($generated@@37 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@37 $generated@@34)  (or (= $generated@@37 $generated@@35) (= ($generated@@36 $generated@@37) $generated@@34)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@37 $generated@@34))
)))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@39 $generated@@38)  (or (= $generated@@39 $generated@@35) (= ($generated@@36 $generated@@39) $generated@@38)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@39 $generated@@38))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 $generated@@33 $generated@@42 $generated@@41 $generated@@43) ($generated@@40 $generated@@33 $generated@@42 $generated@@34 $generated@@43))
 :pattern ( ($generated@@40 $generated@@33 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@40 $generated@@33 $generated@@42 $generated@@34 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@40 $generated@@33 $generated@@45 $generated@@44 $generated@@46) ($generated@@40 $generated@@33 $generated@@45 $generated@@38 $generated@@46))
 :pattern ( ($generated@@40 $generated@@33 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@40 $generated@@33 $generated@@45 $generated@@38 $generated@@46))
)))
(assert (= ($generated@@29 $generated@@47) 0))
(assert (= ($generated@@48 $generated@@6 $generated@@11) $generated@@47))
(assert  (not ($generated@@49 $generated@@47)))
(assert (= ($generated@@29 $generated@@50) 0))
(assert (= ($generated@@48 $generated@@8 $generated@@12) $generated@@50))
(assert  (not ($generated@@49 $generated@@50)))
(assert  (and (and (and (and (and (and (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@52 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@52 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@52 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@13 $generated@@53) 4)) (= ($generated@@13 $generated@@54) 5)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@13 ($generated@@55 $generated@@70 $generated@@71)) 6))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@55 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@55 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@55 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@55 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@40 $generated@@33 $generated@@76 $generated@@34 $generated@@77)  (or (= $generated@@76 $generated@@35) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@77 $generated@@76) $generated@@1)))))
 :pattern ( ($generated@@40 $generated@@33 $generated@@76 $generated@@34 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@40 $generated@@33 $generated@@78 $generated@@38 $generated@@79)  (or (= $generated@@78 $generated@@35) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@79 $generated@@78) $generated@@1)))))
 :pattern ( ($generated@@40 $generated@@33 $generated@@78 $generated@@38 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> ($generated@@80 $generated@@81 $generated@@82) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@81 $generated@@83) $generated@@1))) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@82 $generated@@83) $generated@@1))))
 :pattern ( ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@82 $generated@@83) $generated@@1))
)))
 :pattern ( ($generated@@80 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@51 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@51 $generated@@89 $generated@@88))
)))
(assert ($generated@@49 $generated@@1))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (and (and ($generated@@90 $generated@@91) (and (or (not (= $generated@@92 $generated@@35)) (not true)) (= ($generated@@36 $generated@@92) $generated@@38))) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@91 $generated@@92) $generated@@1)))) ($generated@@40 $generated@@14 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@91 $generated@@92) $generated@@50)) $generated $generated@@91))
 :pattern ( ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@91 $generated@@92) $generated@@50)))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (!  (=> ($generated@@80 $generated@@93 $generated@@94) (=> ($generated@@40 $generated@@97 $generated@@95 $generated@@96 $generated@@93) ($generated@@40 $generated@@97 $generated@@95 $generated@@96 $generated@@94)))
 :pattern ( ($generated@@80 $generated@@93 $generated@@94) ($generated@@40 $generated@@97 $generated@@95 $generated@@96 $generated@@93))
)))
(assert  (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@98 $generated@@101 $generated@@102 $generated@@103 ($generated@@100 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@106 $generated@@107) $generated@@104)
 :weight 0
)) (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@98 $generated@@108 $generated@@109 $generated@@110 ($generated@@100 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@98 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@98 $generated@@117 $generated@@118 $generated@@119 ($generated@@100 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@98 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)))))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@18 ($generated@@98 $generated@@33 $generated@@53 $generated@@14 ($generated@@99 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@130 $generated@@131))  (=> (and (or (not (= $generated@@130 $generated@@126)) (not true)) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@127 $generated@@130) $generated@@128)))) (= $generated@@130 $generated@@129)))
 :pattern ( ($generated@@98 $generated@@33 $generated@@53 $generated@@14 ($generated@@99 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and ($generated@@90 $generated@@132) (and (or (not (= $generated@@133 $generated@@35)) (not true)) (= ($generated@@36 $generated@@133) $generated@@34))) ($generated@@32 $generated@@33 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@132 $generated@@133) $generated@@47)) $generated@@38))
 :pattern ( ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@132 $generated@@133) $generated@@47)))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@134 $generated@@41)  (and ($generated@@32 $generated@@33 $generated@@134 $generated@@34) (or (not (= $generated@@134 $generated@@35)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@134 $generated@@41))
 :pattern ( ($generated@@32 $generated@@33 $generated@@134 $generated@@34))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@135 $generated@@44)  (and ($generated@@32 $generated@@33 $generated@@135 $generated@@38) (or (not (= $generated@@135 $generated@@35)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@135 $generated@@44))
 :pattern ( ($generated@@32 $generated@@33 $generated@@135 $generated@@38))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and ($generated@@90 $generated@@136) (and (or (not (= $generated@@137 $generated@@35)) (not true)) (= ($generated@@36 $generated@@137) $generated@@34))) ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@136 $generated@@137) $generated@@1)))) ($generated@@40 $generated@@33 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@136 $generated@@137) $generated@@47)) $generated@@38 $generated@@136))
 :pattern ( ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@136 $generated@@137) $generated@@47)))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (or (not (= $generated@@138 $generated@@140)) (not true)) (=> (and ($generated@@80 $generated@@138 $generated@@139) ($generated@@80 $generated@@139 $generated@@140)) ($generated@@80 $generated@@138 $generated@@140)))
 :pattern ( ($generated@@80 $generated@@138 $generated@@139) ($generated@@80 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (and (= ($generated@@141 ($generated@@48 $generated@@142 $generated@@143)) $generated@@142) (= ($generated@@31 ($generated@@48 $generated@@142 $generated@@143)) $generated@@143))
 :pattern ( ($generated@@48 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@51 $generated@@145 ($generated@@87 $generated@@145 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@87 $generated@@145 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and ($generated@@90 $generated@@146) (and (or (not (= $generated@@147 $generated@@35)) (not true)) (= ($generated@@36 $generated@@147) $generated@@38))) ($generated@@32 $generated@@14 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@146 $generated@@147) $generated@@50)) $generated))
 :pattern ( ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@146 $generated@@147) $generated@@50)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> ($generated@@90 ($generated@@56 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@148 $generated@@149 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@148 $generated@@149) $generated@@150 $generated@@151))) ($generated@@80 $generated@@148 ($generated@@56 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@148 $generated@@149 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@148 $generated@@149) $generated@@150 $generated@@151))))
 :pattern ( ($generated@@56 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@148 $generated@@149 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@148 $generated@@149) $generated@@150 $generated@@151)))
)))
(assert (= ($generated@@30 $generated@@41) $generated@@3))
(assert (= ($generated@@152 $generated@@41) $generated@@9))
(assert (= ($generated@@30 $generated@@38) $generated@@4))
(assert (= ($generated@@152 $generated@@38) $generated@@10))
(assert (= ($generated@@30 $generated@@44) $generated@@5))
(assert (= ($generated@@152 $generated@@44) $generated@@10))
(assert (= ($generated@@30 $generated@@34) $generated@@7))
(assert (= ($generated@@152 $generated@@34) $generated@@9))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@87 $generated@@154 ($generated@@84 $generated@@154 $generated@@153)) ($generated@@84 $generated@@54 ($generated@@87 $generated@@154 $generated@@153)))
 :pattern ( ($generated@@87 $generated@@154 ($generated@@84 $generated@@154 $generated@@153)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! ($generated@@40 $generated@@14 $generated@@156 $generated $generated@@155)
 :pattern ( ($generated@@40 $generated@@14 $generated@@156 $generated $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (! ($generated@@32 $generated@@14 $generated@@157 $generated)
 :pattern ( ($generated@@32 $generated@@14 $generated@@157 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 39) (let (($generated@@164  (=> (= (ControlFlow 0 9) (- 0 8)) (or ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47))) $generated@@50))) (not ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47))) $generated@@50))))))))
(let (($generated@@165  (=> (and ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47))) $generated@@50))) (= (ControlFlow 0 15) 9)) $generated@@164)))
(let (($generated@@166  (=> (not ($generated@@18 ($generated@@51 $generated@@14 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47))) $generated@@50)))) (and (=> (= (ControlFlow 0 10) (- 0 14)) (or (not (= $generated@@159 $generated@@35)) (not true))) (and (=> (= (ControlFlow 0 10) (- 0 13)) ($generated@@40 $generated@@33 $generated@@159 $generated@@41 $generated@@158)) (=> ($generated@@40 $generated@@33 $generated@@159 $generated@@41 $generated@@158) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (not (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) $generated@@35)) (not true))) (and (=> (= (ControlFlow 0 10) (- 0 11)) ($generated@@40 $generated@@33 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) $generated@@38 $generated@@158)) (=> ($generated@@40 $generated@@33 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) $generated@@38 $generated@@158) (=> (= (ControlFlow 0 10) 9) $generated@@164))))))))))
(let (($generated@@167  (and (=> (= (ControlFlow 0 16) (- 0 20)) (or (not (= $generated@@159 $generated@@35)) (not true))) (and (=> (= (ControlFlow 0 16) (- 0 19)) ($generated@@40 $generated@@33 $generated@@159 $generated@@41 $generated@@158)) (=> ($generated@@40 $generated@@33 $generated@@159 $generated@@41 $generated@@158) (and (=> (= (ControlFlow 0 16) (- 0 18)) (or (not (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) $generated@@35)) (not true))) (and (=> (= (ControlFlow 0 16) (- 0 17)) ($generated@@40 $generated@@33 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) $generated@@38 $generated@@158)) (=> ($generated@@40 $generated@@33 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) $generated@@38 $generated@@158) (and (=> (= (ControlFlow 0 16) 10) $generated@@166) (=> (= (ControlFlow 0 16) 15) $generated@@165))))))))))
(let (($generated@@168  (=> (and (and (not ($generated@@18 ($generated@@84 $generated@@14 ($generated@@17 true)))) (not ($generated@@18 ($generated@@84 $generated@@14 ($generated@@17 true))))) (= (ControlFlow 0 7) (- 0 6))) false)))
(let (($generated@@169  (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@159 $generated@@35)) (not true))) (=> (or (not (= $generated@@159 $generated@@35)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@40 $generated@@33 $generated@@159 $generated@@41 $generated@@158)) (=> ($generated@@40 $generated@@33 $generated@@159 $generated@@41 $generated@@158) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) $generated@@35)) (not true))) (=> (or (not (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) $generated@@35)) (not true)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@40 $generated@@33 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) $generated@@38 $generated@@158))))))))))
(let (($generated@@170  (and (=> (= (ControlFlow 0 21) (- 0 24)) (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)))) (and (=> (= (ControlFlow 0 21) (- 0 23)) (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) $generated@@35)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (or (not (= $generated@@35 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@160 $generated@@159) $generated@@47)))) (not true))) (=> (and (and (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47))) (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) $generated@@35)) (or (not (= $generated@@35 ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@160 $generated@@159) $generated@@47)))) (not true))) (and (and (=> (= (ControlFlow 0 21) 2) $generated@@169) (=> (= (ControlFlow 0 21) 16) $generated@@167)) (=> (= (ControlFlow 0 21) 7) $generated@@168))))))))
(let (($generated@@171  (=> (and (not (and (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47))) (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) $generated@@35))) (= (ControlFlow 0 28) 21)) $generated@@170)))
(let (($generated@@172  (=> (and (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47))) (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) $generated@@35)) (and (=> (= (ControlFlow 0 25) (- 0 27)) (or (not (= $generated@@159 $generated@@35)) (not true))) (and (=> (= (ControlFlow 0 25) (- 0 26)) ($generated@@40 $generated@@33 $generated@@159 $generated@@41 $generated@@160)) (=> ($generated@@40 $generated@@33 $generated@@159 $generated@@41 $generated@@160) (=> (= (ControlFlow 0 25) 21) $generated@@170)))))))
(let (($generated@@173  (=> (or (not (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)))) (not true)) (and (=> (= (ControlFlow 0 32) 25) $generated@@172) (=> (= (ControlFlow 0 32) 28) $generated@@171)))))
(let (($generated@@174  (=> (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47)) ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@47))) (and (=> (= (ControlFlow 0 29) (- 0 31)) (or (not (= $generated@@159 $generated@@35)) (not true))) (and (=> (= (ControlFlow 0 29) (- 0 30)) ($generated@@40 $generated@@33 $generated@@159 $generated@@41 $generated@@158)) (=> ($generated@@40 $generated@@33 $generated@@159 $generated@@41 $generated@@158) (and (=> (= (ControlFlow 0 29) 25) $generated@@172) (=> (= (ControlFlow 0 29) 28) $generated@@171))))))))
(let (($generated@@175  (=> (= $generated@@161 ($generated@@99 $generated@@35 $generated@@160 $generated@@1 $generated@@159)) (and (=> (= (ControlFlow 0 33) (- 0 38)) (or (not (= $generated@@159 $generated@@35)) (not true))) (=> (or (not (= $generated@@159 $generated@@35)) (not true)) (and (=> (= (ControlFlow 0 33) (- 0 37)) ($generated@@18 ($generated@@98 $generated@@33 $generated@@53 $generated@@14 $generated@@161 $generated@@159 $generated@@47))) (=> ($generated@@18 ($generated@@98 $generated@@33 $generated@@53 $generated@@14 $generated@@161 $generated@@159 $generated@@47)) (=> (and (= $generated@@158 ($generated@@56 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@160 $generated@@159 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@160 $generated@@159) $generated@@47 ($generated@@87 $generated@@33 $generated@@35)))) ($generated@@90 $generated@@158)) (and (=> (= (ControlFlow 0 33) (- 0 36)) (or (not (= $generated@@159 $generated@@35)) (not true))) (and (=> (= (ControlFlow 0 33) (- 0 35)) (or (not (= $generated@@159 $generated@@35)) (not true))) (and (=> (= (ControlFlow 0 33) (- 0 34)) ($generated@@40 $generated@@33 $generated@@159 $generated@@41 $generated@@158)) (=> ($generated@@40 $generated@@33 $generated@@159 $generated@@41 $generated@@158) (and (=> (= (ControlFlow 0 33) 29) $generated@@174) (=> (= (ControlFlow 0 33) 32) $generated@@173))))))))))))))
(let (($generated@@176  (=> (and ($generated@@90 $generated@@160) ($generated@@162 $generated@@160)) (=> (and (and (and ($generated@@32 $generated@@33 $generated@@159 $generated@@41) ($generated@@40 $generated@@33 $generated@@159 $generated@@41 $generated@@160)) (= 1 $generated@@163)) (and (or (not (= ($generated@@51 $generated@@33 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@33 ($generated@@55 $generated@@53 $generated@@54) $generated@@160 $generated@@159) $generated@@47)) $generated@@35)) (not true)) (= (ControlFlow 0 39) 33))) $generated@@175))))
$generated@@176))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 16) (- 18))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 10) (- 12))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
