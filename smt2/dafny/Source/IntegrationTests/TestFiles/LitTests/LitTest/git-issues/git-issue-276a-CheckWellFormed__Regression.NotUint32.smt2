(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@21 (Int) Int)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U Int) T@U)
(declare-fun $generated@@38 () Int)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () Int)
(declare-fun $generated@@43 (Int) T@U)
(declare-fun $generated@@44 (T@U) Int)
(declare-fun $generated@@46 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@50 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (= ($generated@@18 $generated) $generated@@0))
(assert (= ($generated@@19 $generated@@20) 0))
(assert (forall (($generated@@22 Int) ) (! (= ($generated@@21 $generated@@22) $generated@@22)
 :pattern ( ($generated@@21 $generated@@22))
)))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@T) ) (! (= ($generated@@23 $generated@@25 $generated@@24) $generated@@24)
 :pattern ( ($generated@@23 $generated@@25 $generated@@24))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@T) ) (! (= ($generated@@27 $generated@@29 ($generated@@26 $generated@@29 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@26 $generated@@29 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@19 ($generated@@30 $generated@@31 $generated@@32)) (+ 1 ($generated@@19 $generated@@31)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 Int) ($generated@@36 T@U) ) (!  (and (=> (= $generated@@35 ($generated@@19 $generated@@34)) (= ($generated@@33 ($generated@@30 $generated@@34 $generated@@36) $generated@@35) $generated@@36)) (=> (or (not (= $generated@@35 ($generated@@19 $generated@@34))) (not true)) (= ($generated@@33 ($generated@@30 $generated@@34 $generated@@36) $generated@@35) ($generated@@33 $generated@@34 $generated@@35))))
 :pattern ( ($generated@@33 ($generated@@30 $generated@@34 $generated@@36) $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ) (! (<= 0 ($generated@@19 $generated@@37))
 :pattern ( ($generated@@19 $generated@@37))
)))
(assert  (=> (< 0 $generated@@38) ($generated@@39 $generated@@4 ($generated@@8 $generated@@40) $generated)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@26 $generated@@42 ($generated@@27 $generated@@42 $generated@@41)) $generated@@41)
 :pattern ( ($generated@@27 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@45 Int) ) (!  (=> (or (and (<= 0 $generated@@45) (< $generated@@45 55296)) (and (<= 57344 $generated@@45) (< $generated@@45 1114112))) (= ($generated@@44 ($generated@@43 $generated@@45)) $generated@@45))
 :pattern ( ($generated@@43 $generated@@45))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@46 $generated@@57 $generated@@58 $generated@@59 ($generated@@53 $generated@@57 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@63 $generated@@60) $generated@@62 $generated@@63) $generated@@60)
 :weight 0
)) (and (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (or (= $generated@@69 $generated@@71) (= ($generated@@46 $generated@@64 $generated@@65 $generated@@66 ($generated@@53 $generated@@64 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@70 $generated@@67) $generated@@71 $generated@@72) ($generated@@46 $generated@@64 $generated@@65 $generated@@66 $generated@@68 $generated@@71 $generated@@72)))
 :weight 0
)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (or (= $generated@@79 $generated@@81) (= ($generated@@46 $generated@@73 $generated@@74 $generated@@75 ($generated@@53 $generated@@73 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@79 $generated@@76) $generated@@80 $generated@@81) ($generated@@46 $generated@@73 $generated@@74 $generated@@75 $generated@@77 $generated@@80 $generated@@81)))
 :weight 0
)))) (= ($generated@@2 $generated@@47) 3)) (= ($generated@@2 $generated@@48) 4)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@50 $generated@@82 $generated@@83 ($generated@@54 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@84) $generated@@86) $generated@@84)
 :weight 0
))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (or (= $generated@@91 $generated@@92) (= ($generated@@50 $generated@@87 $generated@@88 ($generated@@54 $generated@@87 $generated@@88 $generated@@90 $generated@@91 $generated@@89) $generated@@92) ($generated@@50 $generated@@87 $generated@@88 $generated@@90 $generated@@92)))
 :weight 0
))) (= ($generated@@2 $generated@@51) 5)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@2 ($generated@@52 $generated@@93 $generated@@94)) 6))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@52 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@56 ($generated@@52 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@52 $generated@@97 $generated@@98))
))))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 Bool) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@7 ($generated@@46 $generated@@47 $generated@@48 $generated@@3 ($generated@@49 $generated@@99 $generated@@100 $generated@@101 $generated@@102) $generated@@103 $generated@@104))  (=> (and (or (not (= $generated@@103 $generated@@99)) (not true)) ($generated@@7 ($generated@@26 $generated@@3 ($generated@@50 $generated@@48 $generated@@51 ($generated@@50 $generated@@47 ($generated@@52 $generated@@48 $generated@@51) $generated@@100 $generated@@103) $generated@@101)))) $generated@@102))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 $generated@@3 ($generated@@49 $generated@@99 $generated@@100 $generated@@101 $generated@@102) $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (and (= ($generated@@105 ($generated@@30 $generated@@107 $generated@@108)) $generated@@107) (= ($generated@@106 ($generated@@30 $generated@@107 $generated@@108)) $generated@@108))
 :pattern ( ($generated@@30 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (!  (and (= ($generated@@43 ($generated@@44 $generated@@109)) $generated@@109) (or (and (<= 0 ($generated@@44 $generated@@109)) (< ($generated@@44 $generated@@109) 55296)) (and (<= 57344 ($generated@@44 $generated@@109)) (< ($generated@@44 $generated@@109) 1114112))))
 :pattern ( ($generated@@44 $generated@@109))
)))
(assert (forall (($generated@@110 Int) ) (! (= ($generated@@27 $generated@@4 ($generated@@8 ($generated@@21 $generated@@110))) ($generated@@23 $generated@@51 ($generated@@27 $generated@@4 ($generated@@8 $generated@@110))))
 :pattern ( ($generated@@27 $generated@@4 ($generated@@8 ($generated@@21 $generated@@110))))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@27 $generated@@112 ($generated@@23 $generated@@112 $generated@@111)) ($generated@@23 $generated@@51 ($generated@@27 $generated@@112 $generated@@111)))
 :pattern ( ($generated@@27 $generated@@112 ($generated@@23 $generated@@112 $generated@@111)))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> (= ($generated@@19 $generated@@113) 0) (= $generated@@113 $generated@@20))
 :pattern ( ($generated@@19 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (! ($generated@@39 $generated@@4 $generated@@114 $generated)
 :pattern ( ($generated@@39 $generated@@4 $generated@@114 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 () Int)
(declare-fun $generated@@118 () T@U)
(declare-fun $generated@@119 () T@U)
(declare-fun $generated@@120 () T@U)
(declare-fun $generated@@121 (T@U) Bool)
(declare-fun $generated@@122 (T@U) Bool)
(assert  (and (= ($generated@@2 $generated@@115) 7) (= ($generated@@2 $generated@@116) 8)))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@123 true))
(let (($generated@@124  (=> (and (or (not (= ($generated@@26 $generated@@115 ($generated@@33 ($generated@@23 $generated@@116 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 $generated@@20 ($generated@@27 $generated@@115 ($generated@@43 97))) ($generated@@27 $generated@@115 ($generated@@43 98))) ($generated@@27 $generated@@115 ($generated@@43 99))) ($generated@@27 $generated@@115 ($generated@@43 114))) ($generated@@27 $generated@@115 ($generated@@43 105))) ($generated@@27 $generated@@115 ($generated@@43 109))) ($generated@@27 $generated@@115 ($generated@@43 105))) ($generated@@27 $generated@@115 ($generated@@43 110))) ($generated@@27 $generated@@115 ($generated@@43 105)))) (+ (- (+ 2 1) 1) $generated@@40))) ($generated@@23 $generated@@115 ($generated@@43 99)))) (not true)) (= (ControlFlow 0 7) 4)) $generated@@123)))
(let (($generated@@125  (=> (and (= ($generated@@26 $generated@@115 ($generated@@33 ($generated@@23 $generated@@116 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 $generated@@20 ($generated@@27 $generated@@115 ($generated@@43 97))) ($generated@@27 $generated@@115 ($generated@@43 98))) ($generated@@27 $generated@@115 ($generated@@43 99))) ($generated@@27 $generated@@115 ($generated@@43 114))) ($generated@@27 $generated@@115 ($generated@@43 105))) ($generated@@27 $generated@@115 ($generated@@43 109))) ($generated@@27 $generated@@115 ($generated@@43 105))) ($generated@@27 $generated@@115 ($generated@@43 110))) ($generated@@27 $generated@@115 ($generated@@43 105)))) (+ (- (+ 2 1) 1) $generated@@40))) ($generated@@23 $generated@@115 ($generated@@43 99))) (= (ControlFlow 0 6) 4)) $generated@@123)))
(let (($generated@@126  (=> (<= ($generated@@21 0) $generated@@117) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= 0 (+ (- (+ 2 1) 1) $generated@@40)) (< (+ (- (+ 2 1) 1) $generated@@40) ($generated@@19 ($generated@@23 $generated@@116 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 $generated@@20 ($generated@@27 $generated@@115 ($generated@@43 97))) ($generated@@27 $generated@@115 ($generated@@43 98))) ($generated@@27 $generated@@115 ($generated@@43 99))) ($generated@@27 $generated@@115 ($generated@@43 114))) ($generated@@27 $generated@@115 ($generated@@43 105))) ($generated@@27 $generated@@115 ($generated@@43 109))) ($generated@@27 $generated@@115 ($generated@@43 105))) ($generated@@27 $generated@@115 ($generated@@43 110))) ($generated@@27 $generated@@115 ($generated@@43 105)))))))) (=> (and (<= 0 (+ (- (+ 2 1) 1) $generated@@40)) (< (+ (- (+ 2 1) 1) $generated@@40) ($generated@@19 ($generated@@23 $generated@@116 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 $generated@@20 ($generated@@27 $generated@@115 ($generated@@43 97))) ($generated@@27 $generated@@115 ($generated@@43 98))) ($generated@@27 $generated@@115 ($generated@@43 99))) ($generated@@27 $generated@@115 ($generated@@43 114))) ($generated@@27 $generated@@115 ($generated@@43 105))) ($generated@@27 $generated@@115 ($generated@@43 109))) ($generated@@27 $generated@@115 ($generated@@43 105))) ($generated@@27 $generated@@115 ($generated@@43 110))) ($generated@@27 $generated@@115 ($generated@@43 105))))))) (and (=> (= (ControlFlow 0 8) 6) $generated@@125) (=> (= (ControlFlow 0 8) 7) $generated@@124)))))))
(let (($generated@@127  (=> (and (< $generated@@117 ($generated@@21 0)) (= (ControlFlow 0 5) 4)) $generated@@123)))
(let (($generated@@128  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@21 0) ($generated@@21 0))) (=> (= (ControlFlow 0 2) (- 0 1)) (< 0 (ite (= ($generated@@26 $generated@@115 ($generated@@33 ($generated@@23 $generated@@116 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 ($generated@@30 $generated@@20 ($generated@@27 $generated@@115 ($generated@@43 97))) ($generated@@27 $generated@@115 ($generated@@43 98))) ($generated@@27 $generated@@115 ($generated@@43 99))) ($generated@@27 $generated@@115 ($generated@@43 114))) ($generated@@27 $generated@@115 ($generated@@43 105))) ($generated@@27 $generated@@115 ($generated@@43 109))) ($generated@@27 $generated@@115 ($generated@@43 105))) ($generated@@27 $generated@@115 ($generated@@43 110))) ($generated@@27 $generated@@115 ($generated@@43 105)))) (+ (- (+ 2 1) 1) $generated@@40))) ($generated@@23 $generated@@115 ($generated@@43 99))) (- (+ 4294967296 1) 1) 3))))))
(let (($generated@@129  (=> (= $generated@@118 ($generated@@49 $generated@@119 $generated@@120 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 10) 2) $generated@@128) (=> (= (ControlFlow 0 10) 8) $generated@@126)) (=> (= (ControlFlow 0 10) 5) $generated@@127)))))
(let (($generated@@130  (=> (and (and ($generated@@121 $generated@@120) ($generated@@122 $generated@@120)) (and (= 1 $generated@@38) (= (ControlFlow 0 11) 10))) $generated@@129)))
$generated@@130)))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 8) (- 9))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
