(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@25 (T@T T@T) T@T)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@32 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@33 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@34 (T@T) T@T)
(declare-fun $generated@@35 (T@T) T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@T T@U T@U) Bool)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@99 (T@T T@U T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@104 (T@U) Bool)
(declare-fun $generated@@105 () T@U)
(declare-fun $generated@@106 (T@U Int) T@U)
(declare-fun $generated@@107 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@114 () T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@117 (T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@121 (Bool) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@123 () T@U)
(declare-fun $generated@@133 () T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@36 T@T) ($generated@@37 T@T) ($generated@@38 T@T) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@24 $generated@@36 $generated@@37 $generated@@38 ($generated@@31 $generated@@36 $generated@@37 $generated@@38 $generated@@40 $generated@@41 $generated@@42 $generated@@39) $generated@@41 $generated@@42) $generated@@39)
 :weight 0
)) (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (or (= $generated@@48 $generated@@50) (= ($generated@@24 $generated@@43 $generated@@44 $generated@@45 ($generated@@31 $generated@@43 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@49 $generated@@46) $generated@@50 $generated@@51) ($generated@@24 $generated@@43 $generated@@44 $generated@@45 $generated@@47 $generated@@50 $generated@@51)))
 :weight 0
)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@58 $generated@@60) (= ($generated@@24 $generated@@52 $generated@@53 $generated@@54 ($generated@@31 $generated@@52 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@58 $generated@@55) $generated@@59 $generated@@60) ($generated@@24 $generated@@52 $generated@@53 $generated@@54 $generated@@56 $generated@@59 $generated@@60)))
 :weight 0
)))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@32 $generated@@61 $generated@@62 ($generated@@33 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@65) $generated@@63)
 :weight 0
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (or (= $generated@@70 $generated@@71) (= ($generated@@32 $generated@@66 $generated@@67 ($generated@@33 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@71) ($generated@@32 $generated@@66 $generated@@67 $generated@@69 $generated@@71)))
 :weight 0
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (= ($generated@@7 ($generated@@25 $generated@@72 $generated@@73)) 3))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@34 ($generated@@25 $generated@@74 $generated@@75)) $generated@@74)
 :pattern ( ($generated@@25 $generated@@74 $generated@@75))
))) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (! (= ($generated@@35 ($generated@@25 $generated@@76 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@25 $generated@@76 $generated@@77))
))) (= ($generated@@7 $generated@@26) 4)) (= ($generated@@7 $generated@@27) 5)) (= ($generated@@7 $generated@@28) 6)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@12 ($generated@@24 ($generated@@25 $generated@@26 ($generated@@25 $generated@@27 $generated@@28)) $generated@@28 $generated@@8 ($generated@@29 $generated@@78) $generated@@79 $generated@@80)) ($generated@@30 $generated@@80 $generated@@78))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@26 ($generated@@25 $generated@@27 $generated@@28)) $generated@@28 $generated@@8 ($generated@@29 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (= ($generated@@81 $generated@@82) 0))
(assert (forall (($generated@@84 Int) ) (! (= ($generated@@83 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@88 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@88 $generated@@91 $generated@@90))
)))
(assert (= ($generated@@7 $generated@@93) 7))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@92 $generated@@93 $generated@@96 ($generated@@94 $generated@@97)) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@95 $generated@@96 $generated@@98) ($generated@@30 $generated@@98 $generated@@97))
 :pattern ( ($generated@@95 $generated@@96 $generated@@98))
)))
 :pattern ( ($generated@@92 $generated@@93 $generated@@96 ($generated@@94 $generated@@97)))
)))
(assert (= ($generated@@7 $generated@@100) 8))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@99 $generated@@103 $generated@@101 $generated@@102) ($generated@@32 $generated@@100 $generated@@103 $generated@@101 $generated@@102))
 :pattern ( ($generated@@99 $generated@@103 $generated@@101 $generated@@102))
)))
(assert ($generated@@104 $generated@@105))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 Int) ($generated@@112 T@U) ($generated@@113 Int) ) (!  (=> (and (and ($generated@@104 $generated@@110) (<= 0 $generated@@113)) (< $generated@@113 $generated@@111)) (= ($generated@@106 ($generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@112) $generated@@113) ($generated@@108 $generated $generated@@109 $generated@@110 $generated@@112 ($generated@@89 $generated@@9 ($generated@@13 $generated@@113)))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@112) $generated@@113))
)))
(assert (= ($generated@@7 $generated@@115) 9))
(assert (= $generated@@114 ($generated@@107 $generated $generated@@105 ($generated@@83 10) ($generated@@85 $generated@@115 ($generated@@99 $generated@@115 ($generated@@116 ($generated@@117 ($generated@@118 ($generated@@89 $generated@@9 ($generated@@13 ($generated@@83 0)))) ($generated@@29 $generated) ($generated@@119 ($generated@@120 ($generated@@121 false))))) ($generated@@122 $generated@@123))))))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@95 ($generated@@120 $generated@@124) $generated@@125) ($generated@@12 ($generated@@32 $generated@@26 $generated@@8 $generated@@124 ($generated@@88 $generated@@26 $generated@@125))))
 :pattern ( ($generated@@95 ($generated@@120 $generated@@124) $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@108 $generated@@126 $generated@@127 $generated@@128 ($generated@@117 $generated@@129 $generated@@130 $generated@@131) $generated@@132) ($generated@@24 ($generated@@25 $generated@@26 ($generated@@25 $generated@@27 $generated@@28)) $generated@@28 $generated@@28 $generated@@129 $generated@@128 $generated@@132))
 :pattern ( ($generated@@108 $generated@@126 $generated@@127 $generated@@128 ($generated@@117 $generated@@129 $generated@@130 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@30 $generated@@134 $generated@@133) (and (= ($generated@@89 $generated@@26 ($generated@@88 $generated@@26 $generated@@134)) $generated@@134) ($generated@@92 $generated@@26 ($generated@@88 $generated@@26 $generated@@134) $generated@@133)))
 :pattern ( ($generated@@30 $generated@@134 $generated@@133))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@30 $generated@@136 $generated@@135) (and (= ($generated@@89 $generated@@26 ($generated@@88 $generated@@26 $generated@@136)) $generated@@136) ($generated@@92 $generated@@26 ($generated@@88 $generated@@26 $generated@@136) $generated@@135)))
 :pattern ( ($generated@@30 $generated@@136 $generated@@135))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@92 $generated@@26 $generated@@138 $generated@@135)  (and ($generated@@92 $generated@@26 $generated@@138 $generated@@133) (or (not (= $generated@@138 $generated@@137)) (not true))))
 :pattern ( ($generated@@92 $generated@@26 $generated@@138 $generated@@135))
 :pattern ( ($generated@@92 $generated@@26 $generated@@138 $generated@@133))
)))
(assert (forall (($generated@@139 Bool) ($generated@@140 T@U) ) (! (= ($generated@@12 ($generated@@32 $generated@@26 $generated@@8 ($generated@@121 $generated@@139) $generated@@140)) $generated@@139)
 :pattern ( ($generated@@32 $generated@@26 $generated@@8 ($generated@@121 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@32 $generated@@100 $generated@@115 ($generated@@116 $generated@@141) $generated@@142) $generated@@141)
 :pattern ( ($generated@@32 $generated@@100 $generated@@115 ($generated@@116 $generated@@141) $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@30 $generated@@143 $generated) (and (= ($generated@@89 $generated@@9 ($generated@@88 $generated@@9 $generated@@143)) $generated@@143) ($generated@@92 $generated@@9 ($generated@@88 $generated@@9 $generated@@143) $generated)))
 :pattern ( ($generated@@30 $generated@@143 $generated))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@30 ($generated@@89 $generated@@146 $generated@@144) $generated@@145) ($generated@@92 $generated@@146 $generated@@144 $generated@@145))
 :pattern ( ($generated@@30 ($generated@@89 $generated@@146 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (<= 0 ($generated@@81 $generated@@147))
 :pattern ( ($generated@@81 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (! ($generated@@92 $generated@@26 $generated@@148 $generated@@133)
 :pattern ( ($generated@@92 $generated@@26 $generated@@148 $generated@@133))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@149 ($generated@@94 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@94 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@23 ($generated@@94 $generated@@151)) $generated@@1)
 :pattern ( ($generated@@94 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@153 ($generated@@152 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@23 ($generated@@152 $generated@@155)) $generated@@2)
 :pattern ( ($generated@@152 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@88 $generated@@157 ($generated@@89 $generated@@157 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@89 $generated@@157 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@99 $generated@@160 $generated@@158 ($generated@@122 $generated@@159)) ($generated@@99 $generated@@160 $generated@@158 $generated@@159))
 :pattern ( ($generated@@99 $generated@@160 $generated@@158 ($generated@@122 $generated@@159)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Bool) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@12 ($generated@@24 $generated@@26 $generated@@27 $generated@@8 ($generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@162)) (not true)) ($generated@@12 ($generated@@88 $generated@@8 ($generated@@32 $generated@@27 $generated@@28 ($generated@@32 $generated@@26 ($generated@@25 $generated@@27 $generated@@28) $generated@@163 $generated@@166) $generated@@164)))) $generated@@165))
 :pattern ( ($generated@@24 $generated@@26 $generated@@27 $generated@@8 ($generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (= ($generated@@7 $generated@@169) 10))
(assert  (=> (< 0 $generated@@168) ($generated@@92 $generated@@169 $generated@@114 ($generated@@152 $generated))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@30 $generated@@170 ($generated@@94 $generated@@171)) (and (= ($generated@@89 $generated@@93 ($generated@@88 $generated@@93 $generated@@170)) $generated@@170) ($generated@@92 $generated@@93 ($generated@@88 $generated@@93 $generated@@170) ($generated@@94 $generated@@171))))
 :pattern ( ($generated@@30 $generated@@170 ($generated@@94 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@30 $generated@@172 ($generated@@152 $generated@@173)) (and (= ($generated@@89 $generated@@169 ($generated@@88 $generated@@169 $generated@@172)) $generated@@172) ($generated@@92 $generated@@169 ($generated@@88 $generated@@169 $generated@@172) ($generated@@152 $generated@@173))))
 :pattern ( ($generated@@30 $generated@@172 ($generated@@152 $generated@@173)))
)))
(assert (= ($generated@@23 $generated@@133) $generated@@4))
(assert (= ($generated@@174 $generated@@133) $generated@@6))
(assert (= ($generated@@23 $generated@@135) $generated@@5))
(assert (= ($generated@@174 $generated@@135) $generated@@6))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 Int) ($generated@@178 T@U) ) (!  (=> (and ($generated@@104 $generated@@176) (<= 0 $generated@@177)) (= ($generated@@81 ($generated@@107 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) $generated@@177))
 :pattern ( ($generated@@81 ($generated@@107 $generated@@175 $generated@@176 $generated@@177 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ) (! ($generated@@92 $generated@@93 ($generated@@120 $generated@@179) ($generated@@94 $generated@@133))
 :pattern ( ($generated@@120 $generated@@179))
)))
(assert (forall (($generated@@180 Int) ) (! (= ($generated@@89 $generated@@9 ($generated@@13 ($generated@@83 $generated@@180))) ($generated@@85 $generated@@28 ($generated@@89 $generated@@9 ($generated@@13 $generated@@180))))
 :pattern ( ($generated@@89 $generated@@9 ($generated@@13 ($generated@@83 $generated@@180))))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@T) ) (! (= ($generated@@89 $generated@@182 ($generated@@85 $generated@@182 $generated@@181)) ($generated@@85 $generated@@28 ($generated@@89 $generated@@182 $generated@@181)))
 :pattern ( ($generated@@89 $generated@@182 ($generated@@85 $generated@@182 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (= ($generated@@81 $generated@@183) 0) (= $generated@@183 $generated@@82))
 :pattern ( ($generated@@81 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@92 $generated@@169 $generated@@184 ($generated@@152 $generated@@185)) (forall (($generated@@186 Int) ) (!  (=> (and (<= 0 $generated@@186) (< $generated@@186 ($generated@@81 $generated@@184))) ($generated@@30 ($generated@@106 $generated@@184 $generated@@186) $generated@@185))
 :pattern ( ($generated@@106 $generated@@184 $generated@@186))
)))
 :pattern ( ($generated@@92 $generated@@169 $generated@@184 ($generated@@152 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@26 ($generated@@25 $generated@@27 $generated@@28)) $generated@@28 $generated@@28 ($generated@@118 $generated@@187) $generated@@188 $generated@@189) $generated@@187)
 :pattern ( ($generated@@24 ($generated@@25 $generated@@26 ($generated@@25 $generated@@27 $generated@@28)) $generated@@28 $generated@@28 ($generated@@118 $generated@@187) $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@26 ($generated@@25 $generated@@27 $generated@@28)) $generated@@28 $generated@@93 ($generated@@119 $generated@@190) $generated@@191 $generated@@192) $generated@@190)
 :pattern ( ($generated@@24 ($generated@@25 $generated@@26 ($generated@@25 $generated@@27 $generated@@28)) $generated@@28 $generated@@93 ($generated@@119 $generated@@190) $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ) (! ($generated@@92 $generated@@9 $generated@@193 $generated)
 :pattern ( ($generated@@92 $generated@@9 $generated@@193 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@197  (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated@@81 $generated@@114) ($generated@@83 10)))))
(let (($generated@@198 true))
(let (($generated@@199  (=> (= $generated@@194 ($generated@@161 $generated@@137 $generated@@195 $generated@@3 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@198) (=> (= (ControlFlow 0 4) 3) $generated@@197)))))
(let (($generated@@200  (=> (and (and ($generated@@104 $generated@@195) ($generated@@196 $generated@@195)) (and (= 1 $generated@@168) (= (ControlFlow 0 5) 4))) $generated@@199)))
$generated@@200)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
