(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@37 (T@U T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@106 (T@U T@U) Bool)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@133 (T@U) Int)
(declare-fun $generated@@134 (T@U) Int)
(declare-fun $generated@@139 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert ($generated@@25 $generated@@26))
(assert (= ($generated@@9 $generated@@29) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@31)) ($generated@@27 $generated@@32))
 :pattern ( ($generated@@27 $generated@@32) ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@31)))
)))
(assert (= ($generated@@9 $generated@@33) 4))
(assert (forall (($generated@@36 T@U) ) (! (= ($generated@@28 $generated@@33 $generated@@36 $generated@@26)  (or (= $generated@@36 $generated@@34) (= ($generated@@35 $generated@@36) $generated@@26)))
 :pattern ( ($generated@@28 $generated@@33 $generated@@36 $generated@@26))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (and ($generated@@37 $generated@@40 $generated@@26 $generated@@41) ($generated@@38 $generated@@41)) ($generated@@37 $generated@@40 $generated@@39 $generated@@41))
 :pattern ( ($generated@@37 $generated@@40 $generated@@26 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@42 $generated@@33 $generated@@44 $generated@@43 $generated@@45) ($generated@@42 $generated@@33 $generated@@44 $generated@@39 $generated@@45))
 :pattern ( ($generated@@42 $generated@@33 $generated@@44 $generated@@43 $generated@@45))
 :pattern ( ($generated@@42 $generated@@33 $generated@@44 $generated@@39 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@42 $generated@@33 $generated@@47 $generated@@46 $generated@@48) ($generated@@42 $generated@@33 $generated@@47 $generated@@26 $generated@@48))
 :pattern ( ($generated@@42 $generated@@33 $generated@@47 $generated@@46 $generated@@48))
 :pattern ( ($generated@@42 $generated@@33 $generated@@47 $generated@@26 $generated@@48))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@50 $generated@@57 $generated@@58 ($generated@@54 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@61) $generated@@59)
 :weight 0
)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (or (= $generated@@66 $generated@@67) (= ($generated@@50 $generated@@62 $generated@@63 ($generated@@54 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@67) ($generated@@50 $generated@@62 $generated@@63 $generated@@65 $generated@@67)))
 :weight 0
))) (= ($generated@@9 $generated@@51) 5)) (= ($generated@@9 $generated@@52) 6)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (= ($generated@@9 ($generated@@53 $generated@@68 $generated@@69)) 7))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@55 ($generated@@53 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@53 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@56 ($generated@@53 $generated@@72 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@53 $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@42 $generated@@33 $generated@@74 $generated@@39 $generated@@75)  (or (= $generated@@74 $generated@@34) ($generated@@14 ($generated@@49 $generated@@10 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@33 ($generated@@53 $generated@@51 $generated@@52) $generated@@75 $generated@@74) $generated)))))
 :pattern ( ($generated@@42 $generated@@33 $generated@@74 $generated@@39 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@42 $generated@@33 $generated@@76 $generated@@26 $generated@@77)  (or (= $generated@@76 $generated@@34) ($generated@@14 ($generated@@49 $generated@@10 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@33 ($generated@@53 $generated@@51 $generated@@52) $generated@@77 $generated@@76) $generated)))))
 :pattern ( ($generated@@42 $generated@@33 $generated@@76 $generated@@26 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> ($generated@@78 $generated@@79 $generated@@80) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@14 ($generated@@49 $generated@@10 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@33 ($generated@@53 $generated@@51 $generated@@52) $generated@@79 $generated@@81) $generated))) ($generated@@14 ($generated@@49 $generated@@10 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@33 ($generated@@53 $generated@@51 $generated@@52) $generated@@80 $generated@@81) $generated))))
 :pattern ( ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@33 ($generated@@53 $generated@@51 $generated@@52) $generated@@80 $generated@@81) $generated))
)))
 :pattern ( ($generated@@78 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@27 $generated@@83) (= ($generated@@82 $generated@@83) $generated@@3))
 :pattern ( ($generated@@27 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 ($generated@@49 $generated@@86 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@49 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@27 $generated@@88) (exists (($generated@@89 T@U) ) (= $generated@@88 ($generated@@87 $generated@@89))))
 :pattern ( ($generated@@27 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@37 ($generated@@84 $generated@@93 $generated@@90) $generated@@91 $generated@@92) ($generated@@42 $generated@@93 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@37 ($generated@@84 $generated@@93 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@78 $generated@@94 $generated@@95) (=> ($generated@@37 $generated@@96 $generated@@97 $generated@@94) ($generated@@37 $generated@@96 $generated@@97 $generated@@95)))
 :pattern ( ($generated@@78 $generated@@94 $generated@@95) ($generated@@37 $generated@@96 $generated@@97 $generated@@94))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (!  (=> ($generated@@78 $generated@@98 $generated@@99) (=> ($generated@@42 $generated@@102 $generated@@100 $generated@@101 $generated@@98) ($generated@@42 $generated@@102 $generated@@100 $generated@@101 $generated@@99)))
 :pattern ( ($generated@@78 $generated@@98 $generated@@99) ($generated@@42 $generated@@102 $generated@@100 $generated@@101 $generated@@98))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@103 ($generated@@30 $generated@@105)) $generated@@2) (= ($generated@@104 ($generated@@30 $generated@@105)) $generated@@8))
 :pattern ( ($generated@@30 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@106 $generated@@107 $generated@@46) (and (= ($generated@@84 $generated@@33 ($generated@@49 $generated@@33 $generated@@107)) $generated@@107) ($generated@@28 $generated@@33 ($generated@@49 $generated@@33 $generated@@107) $generated@@46)))
 :pattern ( ($generated@@106 $generated@@107 $generated@@46))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@106 $generated@@108 $generated@@43) (and (= ($generated@@84 $generated@@33 ($generated@@49 $generated@@33 $generated@@108)) $generated@@108) ($generated@@28 $generated@@33 ($generated@@49 $generated@@33 $generated@@108) $generated@@43)))
 :pattern ( ($generated@@106 $generated@@108 $generated@@43))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@106 $generated@@109 $generated@@39) (and (= ($generated@@84 $generated@@33 ($generated@@49 $generated@@33 $generated@@109)) $generated@@109) ($generated@@28 $generated@@33 ($generated@@49 $generated@@33 $generated@@109) $generated@@39)))
 :pattern ( ($generated@@106 $generated@@109 $generated@@39))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@106 $generated@@110 $generated@@26) (and (= ($generated@@84 $generated@@33 ($generated@@49 $generated@@33 $generated@@110)) $generated@@110) ($generated@@28 $generated@@33 ($generated@@49 $generated@@33 $generated@@110) $generated@@26)))
 :pattern ( ($generated@@106 $generated@@110 $generated@@26))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@28 $generated@@33 $generated@@111 $generated@@43)  (and ($generated@@28 $generated@@33 $generated@@111 $generated@@39) (or (not (= $generated@@111 $generated@@34)) (not true))))
 :pattern ( ($generated@@28 $generated@@33 $generated@@111 $generated@@43))
 :pattern ( ($generated@@28 $generated@@33 $generated@@111 $generated@@39))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@28 $generated@@33 $generated@@112 $generated@@46)  (and ($generated@@28 $generated@@33 $generated@@112 $generated@@26) (or (not (= $generated@@112 $generated@@34)) (not true))))
 :pattern ( ($generated@@28 $generated@@33 $generated@@112 $generated@@46))
 :pattern ( ($generated@@28 $generated@@33 $generated@@112 $generated@@26))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> ($generated@@38 $generated@@115) (= ($generated@@42 $generated@@29 ($generated@@87 $generated@@114) ($generated@@30 $generated@@113) $generated@@115) ($generated@@37 $generated@@114 $generated@@113 $generated@@115)))
 :pattern ( ($generated@@42 $generated@@29 ($generated@@87 $generated@@114) ($generated@@30 $generated@@113) $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> ($generated@@42 $generated@@33 $generated@@116 $generated@@26 $generated@@117) ($generated@@42 $generated@@33 $generated@@116 $generated@@39 $generated@@117))
 :pattern ( ($generated@@42 $generated@@33 $generated@@116 $generated@@26 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (or (not (= $generated@@118 $generated@@120)) (not true)) (=> (and ($generated@@78 $generated@@118 $generated@@119) ($generated@@78 $generated@@119 $generated@@120)) ($generated@@78 $generated@@118 $generated@@120)))
 :pattern ( ($generated@@78 $generated@@118 $generated@@119) ($generated@@78 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@106 ($generated@@84 $generated@@123 $generated@@121) $generated@@122) ($generated@@28 $generated@@123 $generated@@121 $generated@@122))
 :pattern ( ($generated@@106 ($generated@@84 $generated@@123 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@124 ($generated@@30 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@30 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@82 ($generated@@87 $generated@@126)) $generated@@3)
 :pattern ( ($generated@@87 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@87 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@87 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@49 $generated@@130 ($generated@@84 $generated@@130 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@84 $generated@@130 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@87 $generated@@132) ($generated@@30 $generated@@131)) ($generated@@106 $generated@@132 $generated@@131))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@87 $generated@@132) ($generated@@30 $generated@@131)))
)))
(assert (forall (($generated@@135 T@U) ) (! (< ($generated@@133 $generated@@135) ($generated@@134 ($generated@@87 $generated@@135)))
 :pattern ( ($generated@@87 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and ($generated@@38 $generated@@138) (and ($generated@@27 $generated@@136) ($generated@@42 $generated@@29 $generated@@136 ($generated@@30 $generated@@137) $generated@@138))) ($generated@@37 ($generated@@127 $generated@@136) $generated@@137 $generated@@138))
 :pattern ( ($generated@@37 ($generated@@127 $generated@@136) $generated@@137 $generated@@138))
)))
(assert  (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@139 $generated@@142 $generated@@143 $generated@@144 ($generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@147 $generated@@148) $generated@@145)
 :weight 0
)) (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@139 $generated@@149 $generated@@150 $generated@@151 ($generated@@141 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@139 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@139 $generated@@158 $generated@@159 $generated@@160 ($generated@@141 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@139 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 Bool) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@14 ($generated@@139 $generated@@33 $generated@@51 $generated@@10 ($generated@@140 $generated@@167 $generated@@168 $generated@@169 $generated@@170) $generated@@171 $generated@@172))  (=> (and (or (not (= $generated@@171 $generated@@167)) (not true)) ($generated@@14 ($generated@@49 $generated@@10 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@33 ($generated@@53 $generated@@51 $generated@@52) $generated@@168 $generated@@171) $generated@@169)))) $generated@@170))
 :pattern ( ($generated@@139 $generated@@33 $generated@@51 $generated@@10 ($generated@@140 $generated@@167 $generated@@168 $generated@@169 $generated@@170) $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@133 ($generated@@84 $generated@@29 $generated@@173)) ($generated@@134 $generated@@173))
 :pattern ( ($generated@@133 ($generated@@84 $generated@@29 $generated@@173)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@106 $generated@@175 ($generated@@30 $generated@@174)) (and (= ($generated@@84 $generated@@29 ($generated@@49 $generated@@29 $generated@@175)) $generated@@175) ($generated@@28 $generated@@29 ($generated@@49 $generated@@29 $generated@@175) ($generated@@30 $generated@@174))))
 :pattern ( ($generated@@106 $generated@@175 ($generated@@30 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> ($generated@@28 $generated@@33 $generated@@176 $generated@@26) ($generated@@28 $generated@@33 $generated@@176 $generated@@39))
 :pattern ( ($generated@@28 $generated@@33 $generated@@176 $generated@@26))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> ($generated@@106 $generated@@177 $generated@@26) ($generated@@106 $generated@@177 $generated@@39))
 :pattern ( ($generated@@106 $generated@@177 $generated@@26))
)))
(assert (= ($generated@@103 $generated@@46) $generated@@0))
(assert (= ($generated@@104 $generated@@46) $generated@@6))
(assert (= ($generated@@103 $generated@@43) $generated@@1))
(assert (= ($generated@@104 $generated@@43) $generated@@7))
(assert (= ($generated@@103 $generated@@39) $generated@@4))
(assert (= ($generated@@104 $generated@@39) $generated@@7))
(assert (= ($generated@@103 $generated@@26) $generated@@5))
(assert (= ($generated@@104 $generated@@26) $generated@@6))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@28 $generated@@33 $generated@@178 $generated@@39)  (or (= $generated@@178 $generated@@34) ($generated@@25 ($generated@@35 $generated@@178))))
 :pattern ( ($generated@@28 $generated@@33 $generated@@178 $generated@@39))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@191 true))
(let (($generated@@192 true))
(let (($generated@@193  (=> (= $generated@@179 ($generated@@140 $generated@@34 $generated@@180 $generated false)) (=> (and (and (or (not (= $generated@@181 $generated@@34)) (not true)) (and ($generated@@28 $generated@@33 $generated@@181 $generated@@46) ($generated@@42 $generated@@33 $generated@@181 $generated@@46 $generated@@180))) (and ($generated@@38 $generated@@182) ($generated@@183 $generated@@182))) (=> (and (and (and (or (not (= $generated@@184 $generated@@34)) (not true)) (and ($generated@@28 $generated@@33 $generated@@184 $generated@@46) ($generated@@42 $generated@@33 $generated@@184 $generated@@46 $generated@@182))) (not ($generated@@14 ($generated@@49 $generated@@10 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@33 ($generated@@53 $generated@@51 $generated@@52) $generated@@180 $generated@@184) $generated))))) (and (forall (($generated@@194 T@U) ) (!  (=> (and (or (not (= $generated@@194 $generated@@34)) (not true)) ($generated@@14 ($generated@@49 $generated@@10 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@33 ($generated@@53 $generated@@51 $generated@@52) $generated@@180 $generated@@194) $generated)))) (= ($generated@@50 $generated@@33 ($generated@@53 $generated@@51 $generated@@52) $generated@@182 $generated@@194) ($generated@@50 $generated@@33 ($generated@@53 $generated@@51 $generated@@52) $generated@@180 $generated@@194)))
 :pattern ( ($generated@@50 $generated@@33 ($generated@@53 $generated@@51 $generated@@52) $generated@@182 $generated@@194))
)) ($generated@@78 $generated@@180 $generated@@182))) (and (=> (= (ControlFlow 0 3) (- 0 5)) true) (=> (= $generated@@185 ($generated@@87 ($generated@@84 $generated@@33 $generated@@184))) (and (=> (= (ControlFlow 0 3) (- 0 4)) true) (and (=> (= (ControlFlow 0 3) 1) $generated@@192) (=> (= (ControlFlow 0 3) 2) $generated@@191))))))))))
(let (($generated@@195  (=> (and (and (and ($generated@@38 $generated@@180) ($generated@@183 $generated@@180)) (and (=> $generated@@186 (and ($generated@@28 $generated@@33 $generated@@187 $generated@@46) ($generated@@42 $generated@@33 $generated@@187 $generated@@46 $generated@@180))) true)) (and (and (=> $generated@@188 (and ($generated@@28 $generated@@29 $generated@@189 ($generated@@30 $generated@@43)) ($generated@@42 $generated@@29 $generated@@189 ($generated@@30 $generated@@43) $generated@@180))) true) (and (= 1 $generated@@190) (= (ControlFlow 0 6) 3)))) $generated@@193)))
$generated@@195)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
