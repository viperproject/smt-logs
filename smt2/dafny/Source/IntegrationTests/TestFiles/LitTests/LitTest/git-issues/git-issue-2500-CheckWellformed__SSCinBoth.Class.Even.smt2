(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 () Int)
(declare-fun $generated@@27 (T@U T@U Int) Bool)
(declare-fun $generated@@28 (T@U Int) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (Int) Int)
(declare-fun $generated@@34 (Int Int) Int)
(declare-fun $generated@@35 (T@U T@U Int) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@41 (T@U Int) Bool)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T T@T) T@T)
(declare-fun $generated@@76 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@106 (T@T T@U) T@U)
(declare-fun $generated@@132 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@10 $generated@@31) 3))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 Int) ) (!  (=> (or ($generated@@28 $generated@@39 $generated@@40) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@39 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@39 $generated@@32)) (<= ($generated@@33 0) $generated@@40)))) (or (= $generated@@40 ($generated@@33 0)) (= (= ($generated@@34 $generated@@40 ($generated@@33 2)) ($generated@@33 0)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@39 (- $generated@@40 1)))))
 :pattern ( ($generated@@27 $generated@@38 $generated@@39 $generated@@40))
))))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 Int) ) (!  (=> (or ($generated@@41 $generated@@43 $generated@@44) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@43 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@43 $generated@@32)) (<= ($generated@@33 0) $generated@@44)))) (or (= $generated@@44 ($generated@@33 0)) (= (= ($generated@@34 $generated@@44 ($generated@@33 2)) ($generated@@33 1)) ($generated@@27 ($generated@@36 $generated@@37) $generated@@43 (- $generated@@44 1)))))
 :pattern ( ($generated@@35 $generated@@42 $generated@@43 $generated@@44))
))))
(assert (= ($generated@@45 $generated) $generated@@0))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! ($generated@@46 $generated@@12 $generated@@48 $generated@@47 $generated@@49)
 :pattern ( ($generated@@46 $generated@@12 $generated@@48 $generated@@47 $generated@@49))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 Int) ) (!  (=> (or ($generated@@28 $generated@@51 ($generated@@33 $generated@@52)) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@51 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@51 $generated@@32)) (<= ($generated@@33 0) $generated@@52)))) (and (=> (or (not (= ($generated@@33 $generated@@52) ($generated@@33 0))) (not true)) ($generated@@41 $generated@@51 ($generated@@33 (- $generated@@52 1)))) (= ($generated@@27 ($generated@@36 $generated@@50) $generated@@51 ($generated@@33 $generated@@52))  (or (= ($generated@@33 $generated@@52) ($generated@@33 0)) ($generated@@35 ($generated@@36 $generated@@50) $generated@@51 ($generated@@33 (- $generated@@52 1)))))))
 :weight 3
 :pattern ( ($generated@@27 ($generated@@36 $generated@@50) $generated@@51 ($generated@@33 $generated@@52)))
))))
(assert ($generated@@53 $generated@@54))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@56 $generated@@54)  (or (= $generated@@56 $generated@@29) (= ($generated@@55 $generated@@56) $generated@@54)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@56 $generated@@54))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 Int) ) (!  (=> (or ($generated@@41 $generated@@59 ($generated@@33 $generated@@60)) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@59 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@59 $generated@@32)) (<= ($generated@@33 0) $generated@@60)))) (and (=> ($generated@@15 ($generated@@57 $generated@@11 ($generated@@14  (or (not (= $generated@@60 0)) (not true))))) ($generated@@28 $generated@@59 ($generated@@33 (- $generated@@60 1)))) (= ($generated@@35 ($generated@@36 $generated@@58) $generated@@59 ($generated@@33 $generated@@60))  (and (or (not (= $generated@@60 0)) (not true)) ($generated@@27 ($generated@@36 $generated@@58) $generated@@59 ($generated@@33 (- $generated@@60 1)))))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@36 $generated@@58) $generated@@59 ($generated@@33 $generated@@60)))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (and ($generated@@61 $generated@@64 $generated@@54 $generated@@65) ($generated@@62 $generated@@65)) ($generated@@61 $generated@@64 $generated@@63 $generated@@65))
 :pattern ( ($generated@@61 $generated@@64 $generated@@54 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@46 $generated@@31 $generated@@67 $generated@@66 $generated@@68) ($generated@@46 $generated@@31 $generated@@67 $generated@@63 $generated@@68))
 :pattern ( ($generated@@46 $generated@@31 $generated@@67 $generated@@66 $generated@@68))
 :pattern ( ($generated@@46 $generated@@31 $generated@@67 $generated@@63 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@46 $generated@@31 $generated@@69 $generated@@32 $generated@@70) ($generated@@46 $generated@@31 $generated@@69 $generated@@54 $generated@@70))
 :pattern ( ($generated@@46 $generated@@31 $generated@@69 $generated@@32 $generated@@70))
 :pattern ( ($generated@@46 $generated@@31 $generated@@69 $generated@@54 $generated@@70))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@72 $generated@@79 $generated@@80 ($generated@@76 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@81) $generated@@83) $generated@@81)
 :weight 0
)) (forall (($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (or (= $generated@@88 $generated@@89) (= ($generated@@72 $generated@@84 $generated@@85 ($generated@@76 $generated@@84 $generated@@85 $generated@@87 $generated@@88 $generated@@86) $generated@@89) ($generated@@72 $generated@@84 $generated@@85 $generated@@87 $generated@@89)))
 :weight 0
))) (= ($generated@@10 $generated@@73) 4)) (= ($generated@@10 $generated@@74) 5)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@10 ($generated@@75 $generated@@90 $generated@@91)) 6))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@77 ($generated@@75 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@75 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@78 ($generated@@75 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@75 $generated@@94 $generated@@95))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@46 $generated@@31 $generated@@96 $generated@@63 $generated@@97)  (or (= $generated@@96 $generated@@29) ($generated@@15 ($generated@@71 $generated@@11 ($generated@@72 $generated@@73 $generated@@74 ($generated@@72 $generated@@31 ($generated@@75 $generated@@73 $generated@@74) $generated@@97 $generated@@96) $generated@@1)))))
 :pattern ( ($generated@@46 $generated@@31 $generated@@96 $generated@@63 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@46 $generated@@31 $generated@@98 $generated@@54 $generated@@99)  (or (= $generated@@98 $generated@@29) ($generated@@15 ($generated@@71 $generated@@11 ($generated@@72 $generated@@73 $generated@@74 ($generated@@72 $generated@@31 ($generated@@75 $generated@@73 $generated@@74) $generated@@99 $generated@@98) $generated@@1)))))
 :pattern ( ($generated@@46 $generated@@31 $generated@@98 $generated@@54 $generated@@99))
)))
(assert (forall (($generated@@100 Int) ) (! (= ($generated@@33 $generated@@100) $generated@@100)
 :pattern ( ($generated@@33 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@57 $generated@@102 $generated@@101) $generated@@101)
 :pattern ( ($generated@@57 $generated@@102 $generated@@101))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 Int) ) (!  (=> (or ($generated@@28 $generated@@104 $generated@@105) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@104 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@104 $generated@@32)) (<= ($generated@@33 0) $generated@@105)))) (and (=> (or (not (= $generated@@105 ($generated@@33 0))) (not true)) ($generated@@41 $generated@@104 (- $generated@@105 1))) (= ($generated@@27 ($generated@@36 $generated@@103) $generated@@104 $generated@@105)  (or (= $generated@@105 ($generated@@33 0)) ($generated@@35 $generated@@103 $generated@@104 (- $generated@@105 1))))))
 :pattern ( ($generated@@27 ($generated@@36 $generated@@103) $generated@@104 $generated@@105))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@106 $generated@@108 ($generated@@71 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@71 $generated@@108 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@30 $generated@@12 $generated@@109 $generated@@47) (<= ($generated@@33 0) ($generated@@17 $generated@@109)))
 :pattern ( ($generated@@30 $generated@@12 $generated@@109 $generated@@47))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 Int) ) (! (= ($generated@@27 ($generated@@36 $generated@@110) $generated@@111 $generated@@112) ($generated@@27 $generated@@110 $generated@@111 $generated@@112))
 :pattern ( ($generated@@27 ($generated@@36 $generated@@110) $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 Int) ) (! (= ($generated@@35 ($generated@@36 $generated@@113) $generated@@114 $generated@@115) ($generated@@35 $generated@@113 $generated@@114 $generated@@115))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@113) $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@61 ($generated@@106 $generated@@119 $generated@@116) $generated@@117 $generated@@118) ($generated@@46 $generated@@119 $generated@@116 $generated@@117 $generated@@118))
 :pattern ( ($generated@@61 ($generated@@106 $generated@@119 $generated@@116) $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@120 $generated@@66)  (and ($generated@@30 $generated@@31 $generated@@120 $generated@@63) (or (not (= $generated@@120 $generated@@29)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@120 $generated@@66))
 :pattern ( ($generated@@30 $generated@@31 $generated@@120 $generated@@63))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@121 $generated@@32)  (and ($generated@@30 $generated@@31 $generated@@121 $generated@@54) (or (not (= $generated@@121 $generated@@29)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@121 $generated@@32))
 :pattern ( ($generated@@30 $generated@@31 $generated@@121 $generated@@54))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@46 $generated@@31 $generated@@122 $generated@@54 $generated@@123) ($generated@@46 $generated@@31 $generated@@122 $generated@@63 $generated@@123))
 :pattern ( ($generated@@46 $generated@@31 $generated@@122 $generated@@54 $generated@@123))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 Int) ) (!  (=> (or ($generated@@28 ($generated@@57 $generated@@31 $generated@@125) ($generated@@33 $generated@@126)) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@125 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@125 $generated@@32)) (<= ($generated@@33 0) $generated@@126)))) (and (=> (or (not (= ($generated@@33 $generated@@126) ($generated@@33 0))) (not true)) ($generated@@41 ($generated@@57 $generated@@31 $generated@@125) ($generated@@33 (- $generated@@126 1)))) (= ($generated@@27 ($generated@@36 $generated@@124) ($generated@@57 $generated@@31 $generated@@125) ($generated@@33 $generated@@126))  (or (= ($generated@@33 $generated@@126) ($generated@@33 0)) ($generated@@35 ($generated@@36 $generated@@124) ($generated@@57 $generated@@31 $generated@@125) ($generated@@33 (- $generated@@126 1)))))))
 :weight 3
 :pattern ( ($generated@@27 ($generated@@36 $generated@@124) ($generated@@57 $generated@@31 $generated@@125) ($generated@@33 $generated@@126)))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@71 $generated@@128 ($generated@@106 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@106 $generated@@128 $generated@@127))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 Int) ) (!  (=> (or ($generated@@41 $generated@@130 $generated@@131) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@130 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@130 $generated@@32)) (<= ($generated@@33 0) $generated@@131)))) (and (=> (or (not (= $generated@@131 0)) (not true)) ($generated@@28 $generated@@130 (- $generated@@131 1))) (= ($generated@@35 ($generated@@36 $generated@@129) $generated@@130 $generated@@131)  (and (or (not (= $generated@@131 0)) (not true)) ($generated@@27 $generated@@129 $generated@@130 (- $generated@@131 1))))))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@129) $generated@@130 $generated@@131))
))))
(assert  (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@132 $generated@@135 $generated@@136 $generated@@137 ($generated@@134 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@140 $generated@@141) $generated@@138)
 :weight 0
)) (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@132 $generated@@142 $generated@@143 $generated@@144 ($generated@@134 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@132 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@132 $generated@@151 $generated@@152 $generated@@153 ($generated@@134 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@132 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Bool) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@15 ($generated@@132 $generated@@31 $generated@@73 $generated@@11 ($generated@@133 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))  (=> (and (or (not (= $generated@@164 $generated@@160)) (not true)) ($generated@@15 ($generated@@71 $generated@@11 ($generated@@72 $generated@@73 $generated@@74 ($generated@@72 $generated@@31 ($generated@@75 $generated@@73 $generated@@74) $generated@@161 $generated@@164) $generated@@162)))) $generated@@163))
 :pattern ( ($generated@@132 $generated@@31 $generated@@73 $generated@@11 ($generated@@133 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 Int) ($generated@@167 Int) ) (! (= ($generated@@34 $generated@@166 $generated@@167) (mod $generated@@166 $generated@@167))
 :pattern ( ($generated@@34 $generated@@166 $generated@@167))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 Int) ) (!  (=> (or ($generated@@41 ($generated@@57 $generated@@31 $generated@@169) ($generated@@33 $generated@@170)) (and (< 0 $generated@@26) (and (and (or (not (= $generated@@169 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@169 $generated@@32)) (<= ($generated@@33 0) $generated@@170)))) (and (=> ($generated@@15 ($generated@@57 $generated@@11 ($generated@@14  (or (not (= $generated@@170 0)) (not true))))) ($generated@@28 ($generated@@57 $generated@@31 $generated@@169) ($generated@@33 (- $generated@@170 1)))) (= ($generated@@35 ($generated@@36 $generated@@168) ($generated@@57 $generated@@31 $generated@@169) ($generated@@33 $generated@@170)) ($generated@@15 ($generated@@57 $generated@@11 ($generated@@14  (and (or (not (= $generated@@170 0)) (not true)) ($generated@@27 ($generated@@36 $generated@@168) ($generated@@57 $generated@@31 $generated@@169) ($generated@@33 (- $generated@@170 1))))))))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@36 $generated@@168) ($generated@@57 $generated@@31 $generated@@169) ($generated@@33 $generated@@170)))
))))
(assert (forall (($generated@@171 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@171 $generated@@54) ($generated@@30 $generated@@31 $generated@@171 $generated@@63))
 :pattern ( ($generated@@30 $generated@@31 $generated@@171 $generated@@54))
)))
(assert (= ($generated@@45 $generated@@47) $generated@@2))
(assert (= ($generated@@172 $generated@@47) $generated@@7))
(assert (= ($generated@@45 $generated@@63) $generated@@3))
(assert (= ($generated@@172 $generated@@63) $generated@@8))
(assert (= ($generated@@45 $generated@@66) $generated@@4))
(assert (= ($generated@@172 $generated@@66) $generated@@8))
(assert (= ($generated@@45 $generated@@54) $generated@@5))
(assert (= ($generated@@172 $generated@@54) $generated@@9))
(assert (= ($generated@@45 $generated@@32) $generated@@6))
(assert (= ($generated@@172 $generated@@32) $generated@@9))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@173 $generated@@63)  (or (= $generated@@173 $generated@@29) ($generated@@53 ($generated@@55 $generated@@173))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@173 $generated@@63))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@106 $generated@@12 ($generated@@16 ($generated@@33 $generated@@174))) ($generated@@57 $generated@@74 ($generated@@106 $generated@@12 ($generated@@16 $generated@@174))))
 :pattern ( ($generated@@106 $generated@@12 ($generated@@16 ($generated@@33 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@106 $generated@@176 ($generated@@57 $generated@@176 $generated@@175)) ($generated@@57 $generated@@74 ($generated@@106 $generated@@176 $generated@@175)))
 :pattern ( ($generated@@106 $generated@@176 ($generated@@57 $generated@@176 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! ($generated@@46 $generated@@11 $generated@@178 $generated $generated@@177)
 :pattern ( ($generated@@46 $generated@@11 $generated@@178 $generated $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! ($generated@@30 $generated@@11 $generated@@179 $generated)
 :pattern ( ($generated@@30 $generated@@11 $generated@@179 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@187  (=> (= (ControlFlow 0 9) (- 0 8)) (or (= $generated@@180 ($generated@@33 0)) (= (= ($generated@@34 $generated@@180 ($generated@@33 2)) ($generated@@33 0)) ($generated@@35 ($generated@@36 ($generated@@36 $generated@@37)) $generated@@181 (- $generated@@180 1)))))))
(let (($generated@@188  (=> (and (and (= ($generated@@27 ($generated@@36 $generated@@37) $generated@@181 $generated@@180)  (or (= $generated@@180 ($generated@@33 0)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@181 (- $generated@@180 1)))) (=> (or (not (= $generated@@180 ($generated@@33 0))) (not true)) ($generated@@41 $generated@@181 (- $generated@@180 1)))) (and ($generated@@30 $generated@@11 ($generated@@14 ($generated@@27 ($generated@@36 $generated@@37) $generated@@181 $generated@@180)) $generated) (= (ControlFlow 0 10) 9))) $generated@@187)))
(let (($generated@@189  (=> (and (= $generated@@180 ($generated@@33 0)) (= (ControlFlow 0 15) 10)) $generated@@188)))
(let (($generated@@190  (=> (and (or (not (= $generated@@180 ($generated@@33 0))) (not true)) ($generated@@61 ($generated@@106 $generated@@31 $generated@@181) $generated@@54 $generated@@182)) (and (=> (= (ControlFlow 0 11) (- 0 14)) ($generated@@30 $generated@@12 ($generated@@16 (- $generated@@180 1)) $generated@@47)) (=> ($generated@@30 $generated@@12 ($generated@@16 (- $generated@@180 1)) $generated@@47) (=> (and (= $generated@@183 (- $generated@@180 1)) ($generated@@46 $generated@@12 ($generated@@16 $generated@@183) $generated@@47 $generated@@182)) (and (=> (= (ControlFlow 0 11) (- 0 13)) (or (<= 0 $generated@@180) (= $generated@@183 $generated@@180))) (=> (or (<= 0 $generated@@180) (= $generated@@183 $generated@@180)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (< $generated@@183 $generated@@180)) (=> (< $generated@@183 $generated@@180) (=> (and ($generated@@41 $generated@@181 (- $generated@@180 1)) (= (ControlFlow 0 11) 10)) $generated@@188)))))))))))
(let (($generated@@191 true))
(let (($generated@@192  (=> (or (not (= $generated@@180 ($generated@@33 0))) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 7)) (or (not (= ($generated@@33 2) 0)) (not true))) (=> (or (not (= ($generated@@33 2) 0)) (not true)) (=> ($generated@@61 ($generated@@106 $generated@@31 $generated@@181) $generated@@54 $generated@@182) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@30 $generated@@12 ($generated@@16 (- $generated@@180 1)) $generated@@47)) (=> ($generated@@30 $generated@@12 ($generated@@16 (- $generated@@180 1)) $generated@@47) (=> (and (= $generated@@184 (- $generated@@180 1)) ($generated@@46 $generated@@12 ($generated@@16 $generated@@184) $generated@@47 $generated@@182)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (<= 0 $generated@@180) (= $generated@@184 $generated@@180))) (=> (or (<= 0 $generated@@180) (= $generated@@184 $generated@@180)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (< $generated@@184 $generated@@180)) (=> (< $generated@@184 $generated@@180) (=> ($generated@@41 $generated@@181 (- $generated@@180 1)) (=> (and (= (= ($generated@@34 $generated@@180 ($generated@@33 2)) ($generated@@33 0)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@181 (- $generated@@180 1))) (= (ControlFlow 0 3) 1)) $generated@@191)))))))))))))))
(let (($generated@@193  (=> (and (= $generated@@180 ($generated@@33 0)) (= (ControlFlow 0 2) 1)) $generated@@191)))
(let (($generated@@194  (=> (= $generated@@185 ($generated@@133 $generated@@29 $generated@@182 $generated@@1 false)) (and (and (and (=> (= (ControlFlow 0 16) 11) $generated@@190) (=> (= (ControlFlow 0 16) 15) $generated@@189)) (=> (= (ControlFlow 0 16) 2) $generated@@193)) (=> (= (ControlFlow 0 16) 3) $generated@@192)))))
(let (($generated@@195  (=> (and ($generated@@62 $generated@@182) ($generated@@186 $generated@@182)) (=> (and (and (and (or (not (= $generated@@181 $generated@@29)) (not true)) (and ($generated@@30 $generated@@31 $generated@@181 $generated@@32) ($generated@@46 $generated@@31 $generated@@181 $generated@@32 $generated@@182))) (<= ($generated@@33 0) $generated@@180)) (and (= 0 $generated@@26) (= (ControlFlow 0 17) 16))) $generated@@194))))
$generated@@195))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
