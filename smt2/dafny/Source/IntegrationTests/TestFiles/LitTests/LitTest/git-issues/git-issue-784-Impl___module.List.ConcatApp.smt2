(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@U T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@54 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@126 (T@U) Int)
(declare-fun $generated@@127 (T@U) Int)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@140 (T@T T@T) T@T)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (and (= ($generated@@4 $generated@@24) 3) (= ($generated@@4 $generated@@30) 4)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@25 $generated@@33 ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@35 ($generated@@27 $generated@@33)) ($generated@@26 $generated@@24 $generated@@36 ($generated@@27 $generated@@33))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)))))) (let (($generated@@37 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@25 $generated@@33 $generated@@37 ($generated@@23 $generated@@24 $generated@@36)))) (= ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)) $generated@@36 (let (($generated@@38 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
(let (($generated@@39 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@23 $generated@@24 ($generated@@32 $generated@@39 ($generated@@23 $generated@@24 ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) $generated@@38 ($generated@@23 $generated@@24 $generated@@36)))))))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)))
))))
(assert (= ($generated@@40 $generated@@41) $generated@@0))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (or ($generated@@43 $generated@@46 $generated@@47 $generated@@49) (and (< 2 $generated@@20) ($generated@@26 $generated@@24 $generated@@49 ($generated@@27 ($generated@@27 $generated@@47))))) (and (=> (not ($generated@@28 $generated@@49)) (let (($generated@@50 ($generated@@29 $generated@@49)))
(let (($generated@@51 ($generated@@44 $generated@@24 ($generated@@31 $generated@@49))))
 (and ($generated@@43 $generated@@46 $generated@@47 $generated@@50) ($generated@@25 $generated@@47 $generated@@51 ($generated@@42 $generated@@46 $generated@@47 $generated@@48 $generated@@50)))))) (= ($generated@@42 $generated@@46 $generated@@47 ($generated@@22 $generated@@48) $generated@@49) (ite ($generated@@28 $generated@@49) $generated@@41 (let (($generated@@52 ($generated@@29 $generated@@49)))
(let (($generated@@53 ($generated@@44 $generated@@24 ($generated@@31 $generated@@49))))
($generated@@21 $generated@@47 ($generated@@22 $generated@@45) $generated@@53 ($generated@@42 $generated@@46 $generated@@47 $generated@@48 $generated@@52))))))))
 :pattern ( ($generated@@42 $generated@@46 $generated@@47 ($generated@@22 $generated@@48) $generated@@49))
))))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> ($generated@@55 $generated@@57) ($generated@@54 $generated@@24 $generated@@41 ($generated@@27 $generated@@56) $generated@@57))
 :pattern ( ($generated@@54 $generated@@24 $generated@@41 ($generated@@27 $generated@@56) $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ) (! ($generated@@26 $generated@@24 $generated@@41 ($generated@@27 $generated@@58))
 :pattern ( ($generated@@26 $generated@@24 $generated@@41 ($generated@@27 $generated@@58)))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@59 $generated@@60 $generated@@61) (= $generated@@60 $generated@@61))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and ($generated@@62 $generated@@63) ($generated@@62 $generated@@64)) (= ($generated@@59 $generated@@63 $generated@@64)  (and (= ($generated@@31 $generated@@63) ($generated@@31 $generated@@64)) ($generated@@59 ($generated@@29 $generated@@63) ($generated@@29 $generated@@64)))))
 :pattern ( ($generated@@59 $generated@@63 $generated@@64) ($generated@@62 $generated@@63))
 :pattern ( ($generated@@59 $generated@@63 $generated@@64) ($generated@@62 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@23 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@23 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@26 $generated@@24 ($generated@@32 $generated@@69 $generated@@70) ($generated@@27 $generated@@68))  (and ($generated@@67 $generated@@69 $generated@@68) ($generated@@26 $generated@@24 $generated@@70 ($generated@@27 $generated@@68))))
 :pattern ( ($generated@@26 $generated@@24 ($generated@@32 $generated@@69 $generated@@70) ($generated@@27 $generated@@68)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (or ($generated@@25 $generated@@71 $generated@@73 $generated@@74) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@73 ($generated@@27 $generated@@71)) ($generated@@26 $generated@@24 $generated@@74 ($generated@@27 $generated@@71))))) (and (=> (not ($generated@@28 $generated@@73)) (let (($generated@@75 ($generated@@29 $generated@@73)))
($generated@@25 $generated@@71 $generated@@75 $generated@@74))) (= ($generated@@21 $generated@@71 ($generated@@22 $generated@@72) $generated@@73 $generated@@74) (ite ($generated@@28 $generated@@73) $generated@@74 (let (($generated@@76 ($generated@@29 $generated@@73)))
(let (($generated@@77 ($generated@@31 $generated@@73)))
($generated@@32 $generated@@77 ($generated@@21 $generated@@71 $generated@@72 $generated@@76 $generated@@74))))))))
 :pattern ( ($generated@@21 $generated@@71 ($generated@@22 $generated@@72) $generated@@73 $generated@@74))
))))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@28 $generated@@78) (= ($generated@@40 $generated@@78) $generated@@0))
 :pattern ( ($generated@@28 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@62 $generated@@79) (= ($generated@@40 $generated@@79) $generated@@2))
 :pattern ( ($generated@@62 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@44 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@44 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@62 $generated@@83) (exists (($generated@@84 T@U) ($generated@@85 T@U) ) (= $generated@@83 ($generated@@32 $generated@@84 $generated@@85))))
 :pattern ( ($generated@@62 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@28 $generated@@86) (= $generated@@86 $generated@@41))
 :pattern ( ($generated@@28 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@87 ($generated@@80 $generated@@91 $generated@@88) $generated@@89 $generated@@90) ($generated@@54 $generated@@91 $generated@@88 $generated@@89 $generated@@90))
 :pattern ( ($generated@@87 ($generated@@80 $generated@@91 $generated@@88) $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@94 T@U) ) (!  (and (= ($generated@@92 ($generated@@27 $generated@@94)) $generated@@1) (= ($generated@@93 ($generated@@27 $generated@@94)) $generated@@3))
 :pattern ( ($generated@@27 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@42 $generated@@95 $generated@@96 ($generated@@22 $generated@@97) $generated@@98) ($generated@@42 $generated@@95 $generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@42 $generated@@95 $generated@@96 ($generated@@22 $generated@@97) $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@99 $generated@@100) (or ($generated@@28 $generated@@100) ($generated@@62 $generated@@100)))
 :pattern ( ($generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> ($generated@@26 $generated@@24 $generated@@102 ($generated@@27 $generated@@101)) (or ($generated@@28 $generated@@102) ($generated@@62 $generated@@102)))
 :pattern ( ($generated@@62 $generated@@102) ($generated@@26 $generated@@24 $generated@@102 ($generated@@27 $generated@@101)))
 :pattern ( ($generated@@28 $generated@@102) ($generated@@26 $generated@@24 $generated@@102 ($generated@@27 $generated@@101)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@67 ($generated@@80 $generated@@105 $generated@@103) $generated@@104) ($generated@@26 $generated@@105 $generated@@103 $generated@@104))
 :pattern ( ($generated@@67 ($generated@@80 $generated@@105 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and ($generated@@28 $generated@@106) ($generated@@28 $generated@@107)) ($generated@@59 $generated@@106 $generated@@107))
 :pattern ( ($generated@@59 $generated@@106 $generated@@107) ($generated@@28 $generated@@106))
 :pattern ( ($generated@@59 $generated@@106 $generated@@107) ($generated@@28 $generated@@107))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or ($generated@@43 $generated@@108 $generated@@109 $generated@@111) (and (< 2 $generated@@20) ($generated@@26 $generated@@24 $generated@@111 ($generated@@27 ($generated@@27 $generated@@109))))) ($generated@@26 $generated@@24 ($generated@@42 $generated@@108 $generated@@109 $generated@@110 $generated@@111) ($generated@@27 $generated@@109)))
 :pattern ( ($generated@@42 $generated@@108 $generated@@109 $generated@@110 $generated@@111))
))))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@40 ($generated@@32 $generated@@112 $generated@@113)) $generated@@2)
 :pattern ( ($generated@@32 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@31 ($generated@@32 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@32 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@29 ($generated@@32 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@32 $generated@@116 $generated@@117))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or ($generated@@25 $generated@@118 $generated@@120 $generated@@121) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@120 ($generated@@27 $generated@@118)) ($generated@@26 $generated@@24 $generated@@121 ($generated@@27 $generated@@118))))) ($generated@@26 $generated@@24 ($generated@@21 $generated@@118 $generated@@119 $generated@@120 $generated@@121) ($generated@@27 $generated@@118)))
 :pattern ( ($generated@@21 $generated@@118 $generated@@119 $generated@@120 $generated@@121))
))))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@27 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@27 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@44 $generated@@125 ($generated@@80 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@80 $generated@@125 $generated@@124))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (< ($generated@@126 $generated@@128) ($generated@@127 ($generated@@32 $generated@@128 $generated@@129)))
 :pattern ( ($generated@@32 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (< ($generated@@127 $generated@@131) ($generated@@127 ($generated@@32 $generated@@130 $generated@@131)))
 :pattern ( ($generated@@32 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and ($generated@@55 $generated@@134) (and ($generated@@62 $generated@@132) ($generated@@54 $generated@@24 $generated@@132 ($generated@@27 $generated@@133) $generated@@134))) ($generated@@87 ($generated@@31 $generated@@132) $generated@@133 $generated@@134))
 :pattern ( ($generated@@87 ($generated@@31 $generated@@132) $generated@@133 $generated@@134))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@135 $generated@@145 $generated@@146 $generated@@147 ($generated@@141 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@150 $generated@@151) $generated@@148)
 :weight 0
)) (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@135 $generated@@152 $generated@@153 $generated@@154 ($generated@@141 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@135 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@135 $generated@@161 $generated@@162 $generated@@163 ($generated@@141 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@135 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)))) (= ($generated@@4 $generated@@136) 5)) (= ($generated@@4 $generated@@137) 6)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@139 $generated@@170 $generated@@171 ($generated@@142 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@172) $generated@@174) $generated@@172)
 :weight 0
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@179 $generated@@180) (= ($generated@@139 $generated@@175 $generated@@176 ($generated@@142 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@177) $generated@@180) ($generated@@139 $generated@@175 $generated@@176 $generated@@178 $generated@@180)))
 :weight 0
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@4 ($generated@@140 $generated@@181 $generated@@182)) 7))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@143 ($generated@@140 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@140 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@144 ($generated@@140 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@140 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@9 ($generated@@135 $generated@@136 $generated@@137 $generated@@5 ($generated@@138 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@9 ($generated@@44 $generated@@5 ($generated@@139 $generated@@137 $generated@@30 ($generated@@139 $generated@@136 ($generated@@140 $generated@@137 $generated@@30) $generated@@188 $generated@@191) $generated@@189)))) $generated@@190))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137 $generated@@5 ($generated@@138 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (or ($generated@@25 $generated@@194 $generated@@196 $generated@@197) (and (< 1 $generated@@20) (and ($generated@@54 $generated@@24 $generated@@196 ($generated@@27 $generated@@194) $generated@@193) (and ($generated@@26 $generated@@24 $generated@@197 ($generated@@27 $generated@@194)) ($generated@@54 $generated@@24 $generated@@197 ($generated@@27 $generated@@194) $generated@@193))))) ($generated@@55 $generated@@193)) ($generated@@54 $generated@@24 ($generated@@21 $generated@@194 $generated@@195 $generated@@196 $generated@@197) ($generated@@27 $generated@@194) $generated@@193))
 :pattern ( ($generated@@54 $generated@@24 ($generated@@21 $generated@@194 $generated@@195 $generated@@196 $generated@@197) ($generated@@27 $generated@@194) $generated@@193))
))))
(assert (forall (($generated@@198 T@U) ) (! (= ($generated@@126 ($generated@@80 $generated@@24 $generated@@198)) ($generated@@127 $generated@@198))
 :pattern ( ($generated@@126 ($generated@@80 $generated@@24 $generated@@198)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@21 $generated@@199 ($generated@@22 $generated@@200) $generated@@201 $generated@@202) ($generated@@21 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
 :pattern ( ($generated@@21 $generated@@199 ($generated@@22 $generated@@200) $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> ($generated@@67 $generated@@204 ($generated@@27 $generated@@203)) (and (= ($generated@@80 $generated@@24 ($generated@@44 $generated@@24 $generated@@204)) $generated@@204) ($generated@@26 $generated@@24 ($generated@@44 $generated@@24 $generated@@204) ($generated@@27 $generated@@203))))
 :pattern ( ($generated@@67 $generated@@204 ($generated@@27 $generated@@203)))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (or ($generated@@43 $generated@@205 $generated@@206 ($generated@@23 $generated@@24 $generated@@208)) (and (< 2 $generated@@20) ($generated@@26 $generated@@24 $generated@@208 ($generated@@27 ($generated@@27 $generated@@206))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@208)))))) (let (($generated@@209 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@208)))))
(let (($generated@@210 ($generated@@23 $generated@@24 ($generated@@44 $generated@@24 ($generated@@31 ($generated@@23 $generated@@24 $generated@@208))))))
 (and ($generated@@43 $generated@@205 $generated@@206 $generated@@209) ($generated@@25 $generated@@206 $generated@@210 ($generated@@42 $generated@@205 $generated@@206 ($generated@@22 $generated@@207) $generated@@209)))))) (= ($generated@@42 $generated@@205 $generated@@206 ($generated@@22 $generated@@207) ($generated@@23 $generated@@24 $generated@@208)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@208)) $generated@@41 (let (($generated@@211 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@208)))))
(let (($generated@@212 ($generated@@23 $generated@@24 ($generated@@44 $generated@@24 ($generated@@31 ($generated@@23 $generated@@24 $generated@@208))))))
($generated@@23 $generated@@24 ($generated@@21 $generated@@206 ($generated@@22 $generated@@45) $generated@@212 ($generated@@23 $generated@@24 ($generated@@42 $generated@@205 $generated@@206 ($generated@@22 $generated@@207) $generated@@211))))))))))
 :weight 3
 :pattern ( ($generated@@42 $generated@@205 $generated@@206 ($generated@@22 $generated@@207) ($generated@@23 $generated@@24 $generated@@208)))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and ($generated@@55 $generated@@215) (and ($generated@@62 $generated@@213) ($generated@@54 $generated@@24 $generated@@213 ($generated@@27 $generated@@214) $generated@@215))) ($generated@@54 $generated@@24 ($generated@@29 $generated@@213) ($generated@@27 $generated@@214) $generated@@215))
 :pattern ( ($generated@@54 $generated@@24 ($generated@@29 $generated@@213) ($generated@@27 $generated@@214) $generated@@215))
)))
(assert (= $generated@@41 ($generated@@23 $generated@@24 $generated@@41)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@32 ($generated@@23 $generated@@30 $generated@@216) ($generated@@23 $generated@@24 $generated@@217)) ($generated@@23 $generated@@24 ($generated@@32 $generated@@216 $generated@@217)))
 :pattern ( ($generated@@32 ($generated@@23 $generated@@30 $generated@@216) ($generated@@23 $generated@@24 $generated@@217)))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@T) ) (! (= ($generated@@80 $generated@@219 ($generated@@23 $generated@@219 $generated@@218)) ($generated@@23 $generated@@30 ($generated@@80 $generated@@219 $generated@@218)))
 :pattern ( ($generated@@80 $generated@@219 ($generated@@23 $generated@@219 $generated@@218)))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> ($generated@@55 $generated@@223) (= ($generated@@54 $generated@@24 ($generated@@32 $generated@@221 $generated@@222) ($generated@@27 $generated@@220) $generated@@223)  (and ($generated@@87 $generated@@221 $generated@@220 $generated@@223) ($generated@@54 $generated@@24 $generated@@222 ($generated@@27 $generated@@220) $generated@@223))))
 :pattern ( ($generated@@54 $generated@@24 ($generated@@32 $generated@@221 $generated@@222) ($generated@@27 $generated@@220) $generated@@223))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (or ($generated@@43 $generated@@225 $generated@@226 $generated@@228) (and (< 2 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@228 ($generated@@27 ($generated@@27 $generated@@226))) ($generated@@54 $generated@@24 $generated@@228 ($generated@@27 ($generated@@27 $generated@@226)) $generated@@224)))) ($generated@@55 $generated@@224)) ($generated@@54 $generated@@24 ($generated@@42 $generated@@225 $generated@@226 $generated@@227 $generated@@228) ($generated@@27 $generated@@226) $generated@@224))
 :pattern ( ($generated@@54 $generated@@24 ($generated@@42 $generated@@225 $generated@@226 $generated@@227 $generated@@228) ($generated@@27 $generated@@226) $generated@@224))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 (T@U) Bool)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@247  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@59 ($generated@@42 $generated@@229 $generated@@230 ($generated@@22 ($generated@@22 $generated@@45)) ($generated@@21 ($generated@@27 $generated@@230) ($generated@@22 ($generated@@22 $generated@@45)) $generated@@231 $generated@@232)) ($generated@@21 $generated@@230 ($generated@@22 ($generated@@22 $generated@@45)) ($generated@@42 $generated@@229 $generated@@230 ($generated@@22 ($generated@@22 $generated@@45)) $generated@@231) ($generated@@42 $generated@@229 $generated@@230 ($generated@@22 ($generated@@22 $generated@@45)) $generated@@232))))))
(let (($generated@@248  (=> (= $generated@@231 ($generated@@32 ($generated@@80 $generated@@24 $generated@@233) $generated@@234)) (=> (and ($generated@@26 $generated@@24 $generated@@233 ($generated@@27 $generated@@230)) ($generated@@26 $generated@@24 $generated@@234 ($generated@@27 ($generated@@27 $generated@@230)))) (=> (and (and (and ($generated@@26 $generated@@24 $generated@@235 ($generated@@27 ($generated@@27 $generated@@230))) ($generated@@54 $generated@@24 $generated@@235 ($generated@@27 ($generated@@27 $generated@@230)) $generated@@236)) (= $generated@@237 $generated@@234)) (and ($generated@@26 $generated@@24 $generated@@237 ($generated@@27 ($generated@@27 $generated@@230))) (= $generated@@235 $generated@@237))) (=> (and (and (and (and (and ($generated@@26 $generated@@24 $generated@@238 ($generated@@27 $generated@@230)) ($generated@@54 $generated@@24 $generated@@238 ($generated@@27 $generated@@230) $generated@@236)) (= $generated@@239 $generated@@233)) (and (and ($generated@@26 $generated@@24 $generated@@239 ($generated@@27 $generated@@230)) (= $generated@@238 $generated@@239)) (and ($generated@@54 $generated@@24 $generated@@235 ($generated@@27 ($generated@@27 $generated@@230)) $generated@@236) ($generated@@43 $generated@@229 $generated@@230 $generated@@235)))) (and (and (and ($generated@@43 $generated@@229 $generated@@230 $generated@@235) (= $generated@@240 ($generated@@42 $generated@@229 $generated@@230 ($generated@@22 $generated@@45) $generated@@235))) (and ($generated@@54 $generated@@24 $generated@@232 ($generated@@27 ($generated@@27 $generated@@230)) $generated@@236) ($generated@@43 $generated@@229 $generated@@230 $generated@@232))) (and (and ($generated@@43 $generated@@229 $generated@@230 $generated@@232) (= $generated@@241 ($generated@@42 $generated@@229 $generated@@230 ($generated@@22 $generated@@45) $generated@@232))) (and ($generated@@55 $generated@@242) ($generated@@243 $generated@@242))))) (and (and (and (and ($generated@@99 ($generated@@21 $generated@@230 ($generated@@22 $generated@@45) ($generated@@21 $generated@@230 ($generated@@22 $generated@@45) $generated@@238 $generated@@240) $generated@@241)) ($generated@@99 ($generated@@21 $generated@@230 ($generated@@22 $generated@@45) $generated@@238 ($generated@@21 $generated@@230 ($generated@@22 $generated@@45) $generated@@240 $generated@@241)))) (and (and ($generated@@25 $generated@@230 $generated@@238 $generated@@240) ($generated@@25 $generated@@230 ($generated@@21 $generated@@230 ($generated@@22 $generated@@45) $generated@@238 $generated@@240) $generated@@241)) (and ($generated@@25 $generated@@230 $generated@@240 $generated@@241) ($generated@@25 $generated@@230 $generated@@238 ($generated@@21 $generated@@230 ($generated@@22 $generated@@45) $generated@@240 $generated@@241))))) ($generated@@59 ($generated@@21 $generated@@230 ($generated@@22 ($generated@@22 $generated@@45)) ($generated@@21 $generated@@230 ($generated@@22 ($generated@@22 $generated@@45)) $generated@@238 $generated@@240) $generated@@241) ($generated@@21 $generated@@230 ($generated@@22 ($generated@@22 $generated@@45)) $generated@@238 ($generated@@21 $generated@@230 ($generated@@22 ($generated@@22 $generated@@45)) $generated@@240 $generated@@241)))) (and (= $generated@@236 $generated@@242) (= (ControlFlow 0 5) 3)))) $generated@@247))))))
(let (($generated@@249  (=> (and (= $generated@@231 $generated@@41) (= (ControlFlow 0 4) 3)) $generated@@247)))
(let (($generated@@250 true))
(let (($generated@@251  (=> (or (not (= $generated@@231 $generated@@41)) (not true)) (and (=> (= (ControlFlow 0 6) 5) $generated@@248) (=> (= (ControlFlow 0 6) 1) $generated@@250)))))
(let (($generated@@252  (=> (= $generated@@244 ($generated@@138 $generated@@245 $generated@@246 $generated false)) (=> (and ($generated@@99 $generated@@231) ($generated@@99 $generated@@232)) (=> (and (and ($generated@@55 $generated@@236) ($generated@@243 $generated@@236)) (and (= $generated@@246 $generated@@236) (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and ($generated@@26 $generated@@24 $generated@@253 ($generated@@27 ($generated@@27 $generated@@230))) ($generated@@26 $generated@@24 $generated@@254 ($generated@@27 ($generated@@27 $generated@@230)))) ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 true)))) (or (< ($generated@@127 $generated@@253) ($generated@@127 $generated@@231)) (and (= ($generated@@127 $generated@@253) ($generated@@127 $generated@@231)) (< ($generated@@127 $generated@@254) ($generated@@127 $generated@@232))))) ($generated@@59 ($generated@@42 $generated@@229 $generated@@230 ($generated@@22 $generated@@45) ($generated@@21 ($generated@@27 $generated@@230) ($generated@@22 $generated@@45) $generated@@253 $generated@@254)) ($generated@@21 $generated@@230 ($generated@@22 $generated@@45) ($generated@@42 $generated@@229 $generated@@230 ($generated@@22 $generated@@45) $generated@@253) ($generated@@42 $generated@@229 $generated@@230 ($generated@@22 $generated@@45) $generated@@254))))
 :pattern ( ($generated@@21 $generated@@230 ($generated@@22 $generated@@45) ($generated@@42 $generated@@229 $generated@@230 ($generated@@22 $generated@@45) $generated@@253) ($generated@@42 $generated@@229 $generated@@230 ($generated@@22 $generated@@45) $generated@@254)))
 :pattern ( ($generated@@42 $generated@@229 $generated@@230 ($generated@@22 $generated@@45) ($generated@@21 ($generated@@27 $generated@@230) ($generated@@22 $generated@@45) $generated@@253 $generated@@254)))
)))) (and (=> (= (ControlFlow 0 7) 4) $generated@@249) (=> (= (ControlFlow 0 7) 6) $generated@@251)))))))
(let (($generated@@255  (=> (and ($generated@@55 $generated@@246) ($generated@@243 $generated@@246)) (=> (and (and ($generated@@26 $generated@@24 $generated@@231 ($generated@@27 ($generated@@27 $generated@@230))) ($generated@@54 $generated@@24 $generated@@231 ($generated@@27 ($generated@@27 $generated@@230)) $generated@@246)) ($generated@@99 $generated@@231)) (=> (and (and (and ($generated@@26 $generated@@24 $generated@@232 ($generated@@27 ($generated@@27 $generated@@230))) ($generated@@54 $generated@@24 $generated@@232 ($generated@@27 ($generated@@27 $generated@@230)) $generated@@246)) ($generated@@99 $generated@@232)) (and (= 3 $generated@@20) (= (ControlFlow 0 8) 7))) $generated@@252)))))
$generated@@255))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
