(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@48 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@T T@T) T@T)
(declare-fun $generated@@61 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@97 (T@U T@U T@U) Bool)
(declare-fun $generated@@108 () Int)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@110 (T@U) Bool)
(declare-fun $generated@@112 (T@U) Bool)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ) (! ($generated@@24 ($generated@@23 $generated@@25 $generated@@26) $generated@@26)
 :pattern ( ($generated@@23 $generated@@25 $generated@@26))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> ($generated@@24 $generated@@27 $generated@@29) ($generated@@24 ($generated@@23 $generated@@27 $generated@@28) $generated@@29))
 :pattern ( ($generated@@23 $generated@@27 $generated@@28) ($generated@@24 $generated@@27 $generated@@29))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@24 ($generated@@23 $generated@@30 $generated@@31) $generated@@32)  (or (= $generated@@32 $generated@@31) ($generated@@24 $generated@@30 $generated@@32)))
 :pattern ( ($generated@@24 ($generated@@23 $generated@@30 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> ($generated@@24 $generated@@35 $generated@@36) (not ($generated@@24 ($generated@@33 $generated@@34 $generated@@35) $generated@@36)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35) ($generated@@24 $generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ) (!  (not ($generated@@24 $generated@@37 $generated@@38))
 :pattern ( ($generated@@24 $generated@@37 $generated@@38))
)))
(assert (= ($generated@@7 $generated@@40) 3))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@44 $generated@@41)  (or (= $generated@@44 $generated@@42) (= ($generated@@43 $generated@@44) $generated@@41)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@44 $generated@@41))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@24 ($generated@@33 $generated@@45 $generated@@46) $generated@@47)  (and ($generated@@24 $generated@@45 $generated@@47) (not ($generated@@24 $generated@@46 $generated@@47))))
 :pattern ( ($generated@@24 ($generated@@33 $generated@@45 $generated@@46) $generated@@47))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@48 $generated@@40 $generated@@51 $generated@@49 $generated@@52) ($generated@@48 $generated@@40 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@48 $generated@@40 $generated@@51 $generated@@49 $generated@@52))
 :pattern ( ($generated@@48 $generated@@40 $generated@@51 $generated@@50 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@48 $generated@@40 $generated@@54 $generated@@53 $generated@@55) ($generated@@48 $generated@@40 $generated@@54 $generated@@41 $generated@@55))
 :pattern ( ($generated@@48 $generated@@40 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@48 $generated@@40 $generated@@54 $generated@@41 $generated@@55))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@57 $generated@@64 $generated@@65 ($generated@@61 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@68) $generated@@66)
 :weight 0
)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (or (= $generated@@73 $generated@@74) (= ($generated@@57 $generated@@69 $generated@@70 ($generated@@61 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@74) ($generated@@57 $generated@@69 $generated@@70 $generated@@72 $generated@@74)))
 :weight 0
))) (= ($generated@@7 $generated@@58) 4)) (= ($generated@@7 $generated@@59) 5)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@7 ($generated@@60 $generated@@75 $generated@@76)) 6))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@62 ($generated@@60 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@60 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@63 ($generated@@60 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@60 $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@48 $generated@@40 $generated@@81 $generated@@50 $generated@@82)  (or (= $generated@@81 $generated@@42) ($generated@@12 ($generated@@56 $generated@@8 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@40 ($generated@@60 $generated@@58 $generated@@59) $generated@@82 $generated@@81) $generated@@0)))))
 :pattern ( ($generated@@48 $generated@@40 $generated@@81 $generated@@50 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@48 $generated@@40 $generated@@83 $generated@@41 $generated@@84)  (or (= $generated@@83 $generated@@42) ($generated@@12 ($generated@@56 $generated@@8 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@40 ($generated@@60 $generated@@58 $generated@@59) $generated@@84 $generated@@83) $generated@@0)))))
 :pattern ( ($generated@@48 $generated@@40 $generated@@83 $generated@@41 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 ($generated@@56 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@56 $generated@@90 $generated@@89))
)))
(assert (= ($generated@@7 $generated@@91) 7))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@39 $generated@@91 $generated@@94 ($generated@@92 $generated@@95)) (forall (($generated@@96 T@U) ) (!  (=> ($generated@@24 $generated@@94 $generated@@96) ($generated@@93 $generated@@96 $generated@@95))
 :pattern ( ($generated@@24 $generated@@94 $generated@@96))
)))
 :pattern ( ($generated@@39 $generated@@91 $generated@@94 ($generated@@92 $generated@@95)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@97 ($generated@@88 $generated@@101 $generated@@98) $generated@@99 $generated@@100) ($generated@@48 $generated@@101 $generated@@98 $generated@@99 $generated@@100))
 :pattern ( ($generated@@97 ($generated@@88 $generated@@101 $generated@@98) $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@93 $generated@@102 $generated@@50) (and (= ($generated@@88 $generated@@40 ($generated@@56 $generated@@40 $generated@@102)) $generated@@102) ($generated@@39 $generated@@40 ($generated@@56 $generated@@40 $generated@@102) $generated@@50)))
 :pattern ( ($generated@@93 $generated@@102 $generated@@50))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@93 $generated@@103 $generated@@49) (and (= ($generated@@88 $generated@@40 ($generated@@56 $generated@@40 $generated@@103)) $generated@@103) ($generated@@39 $generated@@40 ($generated@@56 $generated@@40 $generated@@103) $generated@@49)))
 :pattern ( ($generated@@93 $generated@@103 $generated@@49))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@93 $generated@@104 $generated@@53) (and (= ($generated@@88 $generated@@40 ($generated@@56 $generated@@40 $generated@@104)) $generated@@104) ($generated@@39 $generated@@40 ($generated@@56 $generated@@40 $generated@@104) $generated@@53)))
 :pattern ( ($generated@@93 $generated@@104 $generated@@53))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@93 $generated@@105 $generated@@41) (and (= ($generated@@88 $generated@@40 ($generated@@56 $generated@@40 $generated@@105)) $generated@@105) ($generated@@39 $generated@@40 ($generated@@56 $generated@@40 $generated@@105) $generated@@41)))
 :pattern ( ($generated@@93 $generated@@105 $generated@@41))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@106 $generated@@49)  (and ($generated@@39 $generated@@40 $generated@@106 $generated@@50) (or (not (= $generated@@106 $generated@@42)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@106 $generated@@49))
 :pattern ( ($generated@@39 $generated@@40 $generated@@106 $generated@@50))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@107 $generated@@53)  (and ($generated@@39 $generated@@40 $generated@@107 $generated@@41) (or (not (= $generated@@107 $generated@@42)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@107 $generated@@53))
 :pattern ( ($generated@@39 $generated@@40 $generated@@107 $generated@@41))
)))
(assert  (=> (<= 0 $generated@@108) (forall (($generated@@111 T@U) ) (!  (=> (or ($generated@@110 $generated@@111) (and (< 0 $generated@@108) ($generated@@39 $generated@@91 $generated@@111 ($generated@@92 $generated@@49)))) (= ($generated@@109 $generated@@111) $generated@@111))
 :pattern ( ($generated@@109 $generated@@111))
))))
(assert  (=> (<= 0 $generated@@108) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (and (or ($generated@@110 $generated@@114) (and (< 0 $generated@@108) (and ($generated@@39 $generated@@91 $generated@@114 ($generated@@92 $generated@@49)) ($generated@@48 $generated@@91 $generated@@114 ($generated@@92 $generated@@49) $generated@@113)))) ($generated@@112 $generated@@113)) ($generated@@48 $generated@@91 ($generated@@109 $generated@@114) ($generated@@92 $generated@@49) $generated@@113))
 :pattern ( ($generated@@48 $generated@@91 ($generated@@109 $generated@@114) ($generated@@92 $generated@@49) $generated@@113))
))))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@93 ($generated@@88 $generated@@117 $generated@@115) $generated@@116) ($generated@@39 $generated@@117 $generated@@115 $generated@@116))
 :pattern ( ($generated@@93 ($generated@@88 $generated@@117 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@48 $generated@@91 $generated@@118 ($generated@@92 $generated@@119) $generated@@120) (forall (($generated@@121 T@U) ) (!  (=> ($generated@@24 $generated@@118 $generated@@121) ($generated@@97 $generated@@121 $generated@@119 $generated@@120))
 :pattern ( ($generated@@24 $generated@@118 $generated@@121))
)))
 :pattern ( ($generated@@48 $generated@@91 $generated@@118 ($generated@@92 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! ($generated@@39 $generated@@40 $generated@@122 $generated@@50)
 :pattern ( ($generated@@39 $generated@@40 $generated@@122 $generated@@50))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@92 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@92 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@92 $generated@@126)) $generated)
 :pattern ( ($generated@@92 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@56 $generated@@128 ($generated@@88 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@88 $generated@@128 $generated@@127))
)))
(assert  (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@129 $generated@@132 $generated@@133 $generated@@134 ($generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@129 $generated@@139 $generated@@140 $generated@@141 ($generated@@131 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@129 $generated@@148 $generated@@149 $generated@@150 ($generated@@131 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@129 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@12 ($generated@@129 $generated@@40 $generated@@58 $generated@@8 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@12 ($generated@@56 $generated@@8 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@40 ($generated@@60 $generated@@58 $generated@@59) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@129 $generated@@40 $generated@@58 $generated@@8 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert  (=> (<= 0 $generated@@108) (forall (($generated@@163 T@U) ) (!  (=> (or ($generated@@110 ($generated@@85 $generated@@91 $generated@@163)) (and (< 0 $generated@@108) ($generated@@39 $generated@@91 $generated@@163 ($generated@@92 $generated@@49)))) (= ($generated@@109 ($generated@@85 $generated@@91 $generated@@163)) ($generated@@85 $generated@@91 $generated@@163)))
 :weight 3
 :pattern ( ($generated@@109 ($generated@@85 $generated@@91 $generated@@163)))
))))
(assert  (=> (<= 0 $generated@@108) (forall (($generated@@164 T@U) ) (!  (=> (or ($generated@@110 $generated@@164) (and (< 0 $generated@@108) ($generated@@39 $generated@@91 $generated@@164 ($generated@@92 $generated@@49)))) ($generated@@39 $generated@@91 ($generated@@109 $generated@@164) ($generated@@92 $generated@@49)))
 :pattern ( ($generated@@109 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@93 $generated@@165 ($generated@@92 $generated@@166)) (and (= ($generated@@88 $generated@@91 ($generated@@56 $generated@@91 $generated@@165)) $generated@@165) ($generated@@39 $generated@@91 ($generated@@56 $generated@@91 $generated@@165) ($generated@@92 $generated@@166))))
 :pattern ( ($generated@@93 $generated@@165 ($generated@@92 $generated@@166)))
)))
(assert (= ($generated@@125 $generated@@50) $generated@@1))
(assert (= ($generated@@167 $generated@@50) $generated@@5))
(assert (= ($generated@@125 $generated@@49) $generated@@2))
(assert (= ($generated@@167 $generated@@49) $generated@@5))
(assert (= ($generated@@125 $generated@@53) $generated@@3))
(assert (= ($generated@@167 $generated@@53) $generated@@6))
(assert (= ($generated@@125 $generated@@41) $generated@@4))
(assert (= ($generated@@167 $generated@@41) $generated@@6))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@88 $generated@@169 ($generated@@85 $generated@@169 $generated@@168)) ($generated@@85 $generated@@59 ($generated@@88 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@88 $generated@@169 ($generated@@85 $generated@@169 $generated@@168)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@179  (=> (and (and (= $generated@@170 ($generated@@130 $generated@@42 $generated@@171 $generated@@0 false)) (= $generated@@172 ($generated@@23 $generated@@37 ($generated@@88 $generated@@40 $generated@@173)))) (and (= $generated@@174 ($generated@@23 $generated@@37 ($generated@@88 $generated@@40 $generated@@173))) (= (ControlFlow 0 2) (- 0 1)))) (and (forall (($generated@@180 T@U) ) (!  (=> ($generated@@24 ($generated@@109 ($generated@@33 $generated@@172 $generated@@174)) ($generated@@88 $generated@@40 $generated@@180)) (or (not (= $generated@@180 $generated@@42)) (not true)))
 :pattern (  (or (not (= $generated@@180 $generated@@42)) (not true)))
)) (forall (($generated@@181 T@U) ) (!  (=> ($generated@@24 ($generated@@109 ($generated@@33 $generated@@172 $generated@@174)) ($generated@@88 $generated@@40 $generated@@181)) (not ($generated@@12 ($generated@@56 $generated@@8 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@40 ($generated@@60 $generated@@58 $generated@@59) $generated@@171 $generated@@181) $generated@@0)))))
 :pattern ( ($generated@@24 ($generated@@109 ($generated@@33 $generated@@172 $generated@@174)) ($generated@@88 $generated@@40 $generated@@181)))
))))))
(let (($generated@@182  (=> (and (and ($generated@@112 $generated@@171) ($generated@@175 $generated@@171)) (and ($generated@@39 $generated@@40 $generated@@173 $generated@@53) ($generated@@48 $generated@@40 $generated@@173 $generated@@53 $generated@@171))) (=> (and (and (and ($generated@@39 $generated@@40 $generated@@176 $generated@@53) ($generated@@48 $generated@@40 $generated@@176 $generated@@53 $generated@@171)) (and ($generated@@39 $generated@@91 $generated@@177 ($generated@@92 $generated@@49)) ($generated@@48 $generated@@91 $generated@@177 ($generated@@92 $generated@@49) $generated@@171))) (and (and ($generated@@39 $generated@@91 $generated@@178 ($generated@@92 $generated@@49)) ($generated@@48 $generated@@91 $generated@@178 ($generated@@92 $generated@@49) $generated@@171)) (and (= 1 $generated@@108) (= (ControlFlow 0 3) 2)))) $generated@@179))))
$generated@@182)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
