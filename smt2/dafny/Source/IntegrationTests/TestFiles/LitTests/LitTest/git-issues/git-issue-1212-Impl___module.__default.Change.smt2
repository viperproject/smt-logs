(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 (T@U T@U) T@U)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@74 (T@T T@U T@U) Bool)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert (= ($generated@@8 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@31) $generated@@33) ($generated@@27 $generated@@28 $generated@@32 ($generated@@30 $generated@@31) $generated@@33))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@31) $generated@@33))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 ($generated@@30 $generated@@31) $generated@@33))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@36 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@36 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@36 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@8 $generated@@37) 4)) (= ($generated@@8 $generated@@38) 5)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@8 ($generated@@39 $generated@@54 $generated@@55)) 6))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@39 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@39 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@39 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@61 ($generated@@30 $generated@@60) $generated@@62)  (or (= $generated@@61 $generated@@34) ($generated@@13 ($generated@@35 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@62 $generated@@61) $generated@@1)))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@61 ($generated@@30 $generated@@60) $generated@@62))
)))
(assert (= ($generated@@24 $generated@@63) 0))
(assert (= ($generated@@64 $generated@@4 $generated@@7) $generated@@63))
(assert  (not ($generated@@65 $generated@@63)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@66 $generated@@67 $generated@@68) (forall (($generated@@69 T@U) ) (!  (=> ($generated@@13 ($generated@@35 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@67 $generated@@69) $generated@@1))) ($generated@@13 ($generated@@35 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@68 $generated@@69) $generated@@1))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@68 $generated@@69) $generated@@1))
)))
 :pattern ( ($generated@@66 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@35 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@35 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (and (and ($generated@@73 $generated@@77) (and (or (not (= $generated@@78 $generated@@34)) (not true)) ($generated@@74 $generated@@28 $generated@@78 ($generated@@30 $generated@@76)))) ($generated@@13 ($generated@@35 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@77 $generated@@78) $generated@@1)))) ($generated@@75 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@77 $generated@@78) $generated@@63) $generated@@76 $generated@@77))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@77 $generated@@78) $generated@@63) ($generated@@30 $generated@@76))
)))
(assert ($generated@@65 $generated@@1))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@74 $generated@@28 $generated@@80 ($generated@@29 $generated@@79))  (and ($generated@@74 $generated@@28 $generated@@80 ($generated@@30 $generated@@79)) (or (not (= $generated@@80 $generated@@34)) (not true))))
 :pattern ( ($generated@@74 $generated@@28 $generated@@80 ($generated@@29 $generated@@79)))
 :pattern ( ($generated@@74 $generated@@28 $generated@@80 ($generated@@30 $generated@@79)))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@75 ($generated@@70 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@27 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@75 ($generated@@70 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@66 $generated@@85 $generated@@86) (=> ($generated@@75 $generated@@87 $generated@@88 $generated@@85) ($generated@@75 $generated@@87 $generated@@88 $generated@@86)))
 :pattern ( ($generated@@66 $generated@@85 $generated@@86) ($generated@@75 $generated@@87 $generated@@88 $generated@@85))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (!  (=> ($generated@@66 $generated@@89 $generated@@90) (=> ($generated@@27 $generated@@93 $generated@@91 $generated@@92 $generated@@89) ($generated@@27 $generated@@93 $generated@@91 $generated@@92 $generated@@90)))
 :pattern ( ($generated@@66 $generated@@89 $generated@@90) ($generated@@27 $generated@@93 $generated@@91 $generated@@92 $generated@@89))
)))
(assert (forall (($generated@@95 T@U) ) (!  (and (= ($generated@@25 ($generated@@29 $generated@@95)) $generated@@3) (= ($generated@@94 ($generated@@29 $generated@@95)) $generated@@6))
 :pattern ( ($generated@@29 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (!  (and (= ($generated@@25 ($generated@@30 $generated@@96)) $generated@@5) (= ($generated@@94 ($generated@@30 $generated@@96)) $generated@@6))
 :pattern ( ($generated@@30 $generated@@96))
)))
(assert  (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@97 $generated@@100 $generated@@101 $generated@@102 ($generated@@99 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@105 $generated@@106) $generated@@103)
 :weight 0
)) (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@112 $generated@@114) (= ($generated@@97 $generated@@107 $generated@@108 $generated@@109 ($generated@@99 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@114 $generated@@115) ($generated@@97 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@114 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@97 $generated@@116 $generated@@117 $generated@@118 ($generated@@99 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@97 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@13 ($generated@@97 $generated@@28 $generated@@37 $generated@@9 ($generated@@98 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))  (=> (and (or (not (= $generated@@129 $generated@@125)) (not true)) ($generated@@13 ($generated@@35 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@126 $generated@@129) $generated@@127)))) (= $generated@@129 $generated@@128)))
 :pattern ( ($generated@@97 $generated@@28 $generated@@37 $generated@@9 ($generated@@98 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and ($generated@@73 $generated@@133) (and (or (not (= $generated@@134 $generated@@34)) (not true)) ($generated@@74 $generated@@28 $generated@@134 ($generated@@30 $generated@@132)))) ($generated@@131 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@133 $generated@@134) $generated@@63) $generated@@132))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@133 $generated@@134) $generated@@63) ($generated@@30 $generated@@132))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (or (not (= $generated@@135 $generated@@137)) (not true)) (=> (and ($generated@@66 $generated@@135 $generated@@136) ($generated@@66 $generated@@136 $generated@@137)) ($generated@@66 $generated@@135 $generated@@137)))
 :pattern ( ($generated@@66 $generated@@135 $generated@@136) ($generated@@66 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (and (= ($generated@@138 ($generated@@64 $generated@@139 $generated@@140)) $generated@@139) (= ($generated@@26 ($generated@@64 $generated@@139 $generated@@140)) $generated@@140))
 :pattern ( ($generated@@64 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> ($generated@@131 $generated@@141 $generated) (and (= ($generated@@70 $generated@@10 ($generated@@35 $generated@@10 $generated@@141)) $generated@@141) ($generated@@74 $generated@@10 ($generated@@35 $generated@@10 $generated@@141) $generated)))
 :pattern ( ($generated@@131 $generated@@141 $generated))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@131 ($generated@@70 $generated@@144 $generated@@142) $generated@@143) ($generated@@74 $generated@@144 $generated@@142 $generated@@143))
 :pattern ( ($generated@@131 ($generated@@70 $generated@@144 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@29 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@29 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@147 ($generated@@30 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@30 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@35 $generated@@150 ($generated@@70 $generated@@150 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@70 $generated@@150 $generated@@149))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@74 $generated@@28 $generated@@154 ($generated@@30 $generated@@153))  (or (= $generated@@154 $generated@@34) ($generated@@151 ($generated@@152 $generated@@154) $generated@@153)))
 :pattern ( ($generated@@74 $generated@@28 $generated@@154 ($generated@@30 $generated@@153)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@131 $generated@@156 ($generated@@29 $generated@@155)) (and (= ($generated@@70 $generated@@28 ($generated@@35 $generated@@28 $generated@@156)) $generated@@156) ($generated@@74 $generated@@28 ($generated@@35 $generated@@28 $generated@@156) ($generated@@29 $generated@@155))))
 :pattern ( ($generated@@131 $generated@@156 ($generated@@29 $generated@@155)))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@131 $generated@@158 ($generated@@30 $generated@@157)) (and (= ($generated@@70 $generated@@28 ($generated@@35 $generated@@28 $generated@@158)) $generated@@158) ($generated@@74 $generated@@28 ($generated@@35 $generated@@28 $generated@@158) ($generated@@30 $generated@@157))))
 :pattern ( ($generated@@131 $generated@@158 ($generated@@30 $generated@@157)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@73 ($generated@@40 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@159 $generated@@160 ($generated@@40 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@159 $generated@@160) $generated@@161 $generated@@162))) ($generated@@66 $generated@@159 ($generated@@40 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@159 $generated@@160 ($generated@@40 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@159 $generated@@160) $generated@@161 $generated@@162))))
 :pattern ( ($generated@@40 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@159 $generated@@160 ($generated@@40 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@159 $generated@@160) $generated@@161 $generated@@162)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! ($generated@@27 $generated@@10 $generated@@164 $generated $generated@@163)
 :pattern ( ($generated@@27 $generated@@10 $generated@@164 $generated $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! ($generated@@74 $generated@@10 $generated@@165 $generated)
 :pattern ( ($generated@@74 $generated@@10 $generated@@165 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@173  (=> (= $generated@@166 ($generated@@98 $generated@@34 $generated@@167 $generated@@1 $generated@@168)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@168 $generated@@34)) (not true))) (=> (or (not (= $generated@@168 $generated@@34)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@13 ($generated@@97 $generated@@28 $generated@@37 $generated@@9 $generated@@166 $generated@@168 $generated@@63))) (=> ($generated@@13 ($generated@@97 $generated@@28 $generated@@37 $generated@@9 $generated@@166 $generated@@168 $generated@@63)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@168 $generated@@34)) (not true))) (=> (or (not (= $generated@@168 $generated@@34)) (not true)) (=> (and (and (= $generated@@169 (+ ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@167 $generated@@168) $generated@@63))) 1)) (= $generated@@170 ($generated@@40 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@167 $generated@@168 ($generated@@40 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@167 $generated@@168) $generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@169)))))) (and ($generated@@73 $generated@@170) (= (ControlFlow 0 2) (- 0 1)))) (or (not (= ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@170 $generated@@168) $generated@@63))) ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@28 ($generated@@39 $generated@@37 $generated@@38) $generated@@167 $generated@@168) $generated@@63))))) (not true))))))))))))
(let (($generated@@174  (=> (and ($generated@@73 $generated@@167) ($generated@@171 $generated@@167)) (=> (and (and ($generated@@74 $generated@@28 $generated@@168 ($generated@@29 $generated)) ($generated@@27 $generated@@28 $generated@@168 ($generated@@29 $generated) $generated@@167)) (and (= 1 $generated@@172) (= (ControlFlow 0 6) 2))) $generated@@173))))
$generated@@174)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
