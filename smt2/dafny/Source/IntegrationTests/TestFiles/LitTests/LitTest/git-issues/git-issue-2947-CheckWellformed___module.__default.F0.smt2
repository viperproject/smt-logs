(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U T@U) Bool)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@28 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@29 (Int) T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@53 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@59 () Int)
(declare-fun $generated@@60 (T@T T@U T@U) Bool)
(declare-fun $generated@@61 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@66 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) Int)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@U T@U T@U) Bool)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@109 () T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@199 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@200 () T@T)
(declare-fun $generated@@201 () T@T)
(declare-fun $generated@@202 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@203 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@204 (T@T T@T) T@T)
(declare-fun $generated@@205 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (! (= ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27) ($generated@@23 $generated@@25 $generated@@26 $generated@@27))
 :pattern ( ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (or (not (= $generated@@32 ($generated@@29 0))) (not true)) (= ($generated@@28 $generated@@30 $generated@@31 $generated@@32 ($generated@@24 $generated@@33) $generated@@34 $generated@@35) ($generated@@28 $generated@@30 $generated@@31 $generated@@32 $generated@@33 $generated@@34 $generated@@35)))
 :pattern ( ($generated@@28 $generated@@30 $generated@@31 $generated@@32 ($generated@@24 $generated@@33) $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (and ($generated@@36 $generated@@37 $generated@@38) ($generated@@36 $generated@@38 $generated@@39)) ($generated@@36 $generated@@37 $generated@@39))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38) ($generated@@36 $generated@@38 $generated@@39))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38) ($generated@@36 $generated@@37 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 Int) ($generated@@44 Int) ) (!  (=> (and (and (<= 0 $generated@@43) (<= 0 $generated@@44)) (<= (+ $generated@@43 $generated@@44) ($generated@@41 $generated@@42))) (= ($generated@@40 ($generated@@40 $generated@@42 ($generated@@29 $generated@@43)) ($generated@@29 $generated@@44)) ($generated@@40 $generated@@42 ($generated@@29 (+ $generated@@43 $generated@@44)))))
 :pattern ( ($generated@@40 ($generated@@40 $generated@@42 ($generated@@29 $generated@@43)) ($generated@@29 $generated@@44)))
)))
(assert (= ($generated@@45 $generated@@46) $generated@@3))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (= $generated@@51 $generated@@52) ($generated@@28 $generated@@47 $generated@@48 $generated@@49 ($generated@@24 $generated@@50) $generated@@51 $generated@@52))
 :pattern ( ($generated@@28 $generated@@47 $generated@@48 $generated@@49 ($generated@@24 $generated@@50) $generated@@51 $generated@@52))
)))
(assert (= ($generated@@6 $generated@@54) 3))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> ($generated@@56 $generated@@58) ($generated@@53 $generated@@54 $generated@@46 ($generated@@55 $generated@@57) $generated@@58))
 :pattern ( ($generated@@53 $generated@@54 $generated@@46 ($generated@@55 $generated@@57) $generated@@58))
)))
(assert  (=> (<= 2 $generated@@59) (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and ($generated@@60 $generated@@54 $generated@@64 ($generated@@55 $generated@@62)) ($generated@@23 $generated@@62 ($generated@@24 $generated@@63) $generated@@64)) (exists (($generated@@65 T@U) ) (! ($generated@@61 $generated@@62 ($generated@@24 $generated@@63) $generated@@65 $generated@@64)
 :pattern ( ($generated@@61 $generated@@62 ($generated@@24 $generated@@63) $generated@@65 $generated@@64))
)))
 :pattern ( ($generated@@23 $generated@@62 ($generated@@24 $generated@@63) $generated@@64))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@66 $generated@@67 $generated@@68 ($generated@@24 $generated@@69) $generated@@70 $generated@@71) (= $generated@@70 $generated@@71))
 :pattern ( ($generated@@66 $generated@@67 $generated@@68 ($generated@@24 $generated@@69) $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ) (! ($generated@@60 $generated@@54 $generated@@46 ($generated@@55 $generated@@72))
 :pattern ( ($generated@@60 $generated@@54 $generated@@46 ($generated@@55 $generated@@72)))
)))
(assert  (=> (<= 2 $generated@@59) (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (and ($generated@@60 $generated@@54 $generated@@75 ($generated@@55 $generated@@73)) (exists (($generated@@76 T@U) ) (! ($generated@@61 $generated@@73 ($generated@@24 $generated@@74) $generated@@76 $generated@@75)
 :pattern ( ($generated@@61 $generated@@73 ($generated@@24 $generated@@74) $generated@@76 $generated@@75))
))) ($generated@@23 $generated@@73 ($generated@@24 $generated@@74) $generated@@75))
 :pattern ( ($generated@@23 $generated@@73 ($generated@@24 $generated@@74) $generated@@75))
))))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@77 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@60 $generated@@54 ($generated@@82 $generated@@85 $generated@@86) ($generated@@55 $generated@@84))  (and ($generated@@83 $generated@@85 $generated@@84) ($generated@@60 $generated@@54 $generated@@86 ($generated@@55 $generated@@84))))
 :pattern ( ($generated@@60 $generated@@54 ($generated@@82 $generated@@85 $generated@@86) ($generated@@55 $generated@@84)))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@87 $generated@@88) (= ($generated@@45 $generated@@88) $generated@@3))
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@89 $generated@@90) (= ($generated@@45 $generated@@90) $generated@@4))
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@91 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@91 $generated@@94 $generated@@93))
)))
(assert  (=> (<= 2 $generated@@59) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@36 $generated@@99 $generated@@100) (=> ($generated@@61 $generated@@96 $generated@@97 $generated@@99 $generated@@98) ($generated@@61 $generated@@96 $generated@@97 $generated@@100 $generated@@98)))
 :pattern ( ($generated@@61 $generated@@96 $generated@@97 $generated@@99 $generated@@98) ($generated@@95 $generated@@99 $generated@@101) ($generated@@95 $generated@@100 $generated@@101))
))))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@89 $generated@@102) (exists (($generated@@103 T@U) ($generated@@104 T@U) ) (= $generated@@102 ($generated@@82 $generated@@103 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@87 $generated@@105) (= $generated@@105 $generated@@46))
 :pattern ( ($generated@@87 $generated@@105))
)))
(assert (= ($generated@@6 $generated@@106) 4))
(assert  (=> (<= 2 $generated@@59) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (or ($generated@@107 $generated@@111 ($generated@@79 $generated@@106 $generated@@113) ($generated@@79 $generated@@54 $generated@@114)) (and (< 2 $generated@@59) ($generated@@60 $generated@@54 $generated@@114 ($generated@@55 $generated@@111)))) (and (and (=> (< 0 ($generated@@41 $generated@@113)) (let (($generated@@115 ($generated@@79 $generated@@54 $generated@@46)))
 (and (and ($generated@@108 ($generated@@79 $generated@@54 $generated@@114)) ($generated@@108 $generated@@115)) (=> (not ($generated@@66 $generated@@111 $generated@@111 ($generated@@24 ($generated@@24 $generated@@109)) $generated@@114 $generated@@115)) ($generated@@107 $generated@@111 ($generated@@40 $generated@@113 ($generated@@29 1)) ($generated@@79 $generated@@54 ($generated@@110 ($generated@@79 $generated@@54 $generated@@114)))))))) (=> (=> (< 0 ($generated@@41 $generated@@113)) (let (($generated@@116 ($generated@@79 $generated@@54 $generated@@46)))
 (or ($generated@@66 $generated@@111 $generated@@111 ($generated@@24 ($generated@@24 $generated@@109)) $generated@@114 $generated@@116) ($generated@@61 $generated@@111 ($generated@@24 $generated@@112) ($generated@@40 $generated@@113 ($generated@@29 1)) ($generated@@79 $generated@@54 ($generated@@110 ($generated@@79 $generated@@54 $generated@@114))))))) (=> (= ($generated@@77 0) ($generated@@41 $generated@@113)) (forall (($generated@@117 T@U) ) (!  (=> ($generated@@95 $generated@@117 $generated@@113) ($generated@@107 $generated@@111 $generated@@117 $generated@@114))
 :pattern ( ($generated@@61 $generated@@111 ($generated@@24 $generated@@112) $generated@@117 $generated@@114))
))))) (= ($generated@@61 $generated@@111 ($generated@@24 $generated@@112) ($generated@@79 $generated@@106 $generated@@113) ($generated@@79 $generated@@54 $generated@@114))  (and (=> (< 0 ($generated@@41 $generated@@113)) (let (($generated@@118 ($generated@@79 $generated@@54 $generated@@46)))
 (or ($generated@@66 $generated@@111 $generated@@111 ($generated@@24 ($generated@@24 $generated@@109)) $generated@@114 $generated@@118) ($generated@@61 $generated@@111 ($generated@@24 $generated@@112) ($generated@@40 $generated@@113 ($generated@@29 1)) ($generated@@79 $generated@@54 ($generated@@110 ($generated@@79 $generated@@54 $generated@@114))))))) (=> (= ($generated@@77 0) ($generated@@41 $generated@@113)) (exists (($generated@@119 T@U) ) (!  (and ($generated@@95 $generated@@119 $generated@@113) ($generated@@61 $generated@@111 ($generated@@24 $generated@@112) $generated@@119 $generated@@114))
 :pattern ( ($generated@@61 $generated@@111 ($generated@@24 $generated@@112) $generated@@119 $generated@@114))
)))))))
 :weight 3
 :pattern ( ($generated@@61 $generated@@111 ($generated@@24 $generated@@112) ($generated@@79 $generated@@106 $generated@@113) ($generated@@79 $generated@@54 $generated@@114)))
))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@60 $generated@@54 $generated@@125 ($generated@@55 $generated@@121)) ($generated@@60 $generated@@54 $generated@@126 ($generated@@55 $generated@@122))) (= ($generated@@28 $generated@@121 $generated@@122 $generated@@123 ($generated@@24 $generated@@124) $generated@@125 $generated@@126)  (and (=> (< 0 ($generated@@41 $generated@@123)) (or (and ($generated@@87 $generated@@125) ($generated@@87 $generated@@126)) (and (and ($generated@@89 $generated@@125) ($generated@@89 $generated@@126)) (=> (and ($generated@@89 $generated@@125) ($generated@@89 $generated@@126)) (and (= ($generated@@120 $generated@@125) ($generated@@120 $generated@@126)) ($generated@@28 $generated@@121 $generated@@122 ($generated@@40 $generated@@123 ($generated@@29 1)) $generated@@124 ($generated@@110 $generated@@125) ($generated@@110 $generated@@126))))))) (=> (and (or (not (= $generated@@123 ($generated@@29 0))) (not true)) (= ($generated@@41 $generated@@123) 0)) ($generated@@66 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126)))))
 :pattern ( ($generated@@28 $generated@@121 $generated@@122 $generated@@123 ($generated@@24 $generated@@124) $generated@@125 $generated@@126))
)))
(assert  (=> (<= 2 $generated@@59) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (or ($generated@@107 $generated@@127 $generated@@129 $generated@@130) (and (< 2 $generated@@59) ($generated@@60 $generated@@54 $generated@@130 ($generated@@55 $generated@@127)))) (and (and (=> (< 0 ($generated@@41 $generated@@129)) (let (($generated@@131 ($generated@@79 $generated@@54 $generated@@46)))
 (and (and ($generated@@108 $generated@@130) ($generated@@108 $generated@@131)) (=> (not ($generated@@66 $generated@@127 $generated@@127 ($generated@@24 ($generated@@24 $generated@@109)) $generated@@130 $generated@@131)) ($generated@@107 $generated@@127 ($generated@@40 $generated@@129 ($generated@@29 1)) ($generated@@110 $generated@@130)))))) (=> (=> (< 0 ($generated@@41 $generated@@129)) (let (($generated@@132 ($generated@@79 $generated@@54 $generated@@46)))
 (or ($generated@@66 $generated@@127 $generated@@127 ($generated@@24 ($generated@@24 $generated@@109)) $generated@@130 $generated@@132) ($generated@@61 $generated@@127 $generated@@128 ($generated@@40 $generated@@129 ($generated@@29 1)) ($generated@@110 $generated@@130))))) (=> (= ($generated@@77 0) ($generated@@41 $generated@@129)) (forall (($generated@@133 T@U) ) (!  (=> ($generated@@95 $generated@@133 $generated@@129) ($generated@@107 $generated@@127 $generated@@133 $generated@@130))
 :pattern ( ($generated@@61 $generated@@127 $generated@@128 $generated@@133 $generated@@130))
))))) (= ($generated@@61 $generated@@127 ($generated@@24 $generated@@128) $generated@@129 $generated@@130)  (and (=> (< 0 ($generated@@41 $generated@@129)) (let (($generated@@134 ($generated@@79 $generated@@54 $generated@@46)))
 (or ($generated@@66 $generated@@127 $generated@@127 ($generated@@24 ($generated@@24 $generated@@109)) $generated@@130 $generated@@134) ($generated@@61 $generated@@127 $generated@@128 ($generated@@40 $generated@@129 ($generated@@29 1)) ($generated@@110 $generated@@130))))) (=> (= ($generated@@77 0) ($generated@@41 $generated@@129)) (exists (($generated@@135 T@U) ) (!  (and ($generated@@95 $generated@@135 $generated@@129) ($generated@@61 $generated@@127 $generated@@128 $generated@@135 $generated@@130))
 :pattern ( ($generated@@61 $generated@@127 $generated@@128 $generated@@135 $generated@@130))
)))))))
 :pattern ( ($generated@@61 $generated@@127 ($generated@@24 $generated@@128) $generated@@129 $generated@@130))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@T) ) (! (= ($generated@@136 ($generated@@92 $generated@@140 $generated@@137) $generated@@138 $generated@@139) ($generated@@53 $generated@@140 $generated@@137 $generated@@138 $generated@@139))
 :pattern ( ($generated@@136 ($generated@@92 $generated@@140 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@142 T@U) ) (!  (and (= ($generated@@22 ($generated@@55 $generated@@142)) $generated@@2) (= ($generated@@141 ($generated@@55 $generated@@142)) $generated@@5))
 :pattern ( ($generated@@55 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and ($generated@@143 $generated@@145) (<= ($generated@@41 $generated@@145) ($generated@@41 $generated@@144))) (and (= ($generated@@143 ($generated@@40 $generated@@144 $generated@@145)) ($generated@@143 $generated@@144)) (= ($generated@@41 ($generated@@40 $generated@@144 $generated@@145)) (- ($generated@@41 $generated@@144) ($generated@@41 $generated@@145)))))
 :pattern ( ($generated@@40 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 Int) ) (!  (=> (<= 0 $generated@@146) (and ($generated@@143 ($generated@@29 $generated@@146)) (= ($generated@@41 ($generated@@29 $generated@@146)) $generated@@146)))
 :pattern ( ($generated@@29 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@60 $generated@@54 $generated@@150 ($generated@@55 $generated@@147)) ($generated@@60 $generated@@54 $generated@@151 ($generated@@55 $generated@@148))) (= ($generated@@66 $generated@@147 $generated@@148 ($generated@@24 $generated@@149) $generated@@150 $generated@@151)  (or (and ($generated@@87 $generated@@150) ($generated@@87 $generated@@151)) (and (and ($generated@@89 $generated@@150) ($generated@@89 $generated@@151)) (=> (and ($generated@@89 $generated@@150) ($generated@@89 $generated@@151)) (and (= ($generated@@120 $generated@@150) ($generated@@120 $generated@@151)) ($generated@@66 $generated@@147 $generated@@148 $generated@@149 ($generated@@110 $generated@@150) ($generated@@110 $generated@@151))))))))
 :pattern ( ($generated@@66 $generated@@147 $generated@@148 ($generated@@24 $generated@@149) $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@108 $generated@@152) (or ($generated@@87 $generated@@152) ($generated@@89 $generated@@152)))
 :pattern ( ($generated@@108 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (or ($generated@@36 $generated@@153 $generated@@154) (= $generated@@153 $generated@@154)) ($generated@@36 $generated@@154 $generated@@153))
 :pattern ( ($generated@@36 $generated@@153 $generated@@154) ($generated@@36 $generated@@154 $generated@@153))
)))
(assert  (=> (<= 1 $generated@@59) (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (or ($generated@@155 $generated@@156 $generated@@158) (and (< 1 $generated@@59) ($generated@@60 $generated@@54 $generated@@158 ($generated@@55 $generated@@156)))) (and (let (($generated@@159 ($generated@@79 $generated@@54 $generated@@46)))
 (and (and ($generated@@108 $generated@@158) ($generated@@108 $generated@@159)) (=> (not ($generated@@66 $generated@@156 $generated@@156 ($generated@@24 ($generated@@24 $generated@@109)) $generated@@158 $generated@@159)) ($generated@@155 $generated@@156 ($generated@@110 $generated@@158))))) (= ($generated@@23 $generated@@156 ($generated@@24 $generated@@157) $generated@@158) (let (($generated@@160 ($generated@@79 $generated@@54 $generated@@46)))
 (or ($generated@@66 $generated@@156 $generated@@156 ($generated@@24 ($generated@@24 $generated@@109)) $generated@@158 $generated@@160) ($generated@@23 $generated@@156 $generated@@157 ($generated@@110 $generated@@158)))))))
 :pattern ( ($generated@@23 $generated@@156 ($generated@@24 $generated@@157) $generated@@158))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@60 $generated@@54 $generated@@162 ($generated@@55 $generated@@161)) (or ($generated@@87 $generated@@162) ($generated@@89 $generated@@162)))
 :pattern ( ($generated@@89 $generated@@162) ($generated@@60 $generated@@54 $generated@@162 ($generated@@55 $generated@@161)))
 :pattern ( ($generated@@87 $generated@@162) ($generated@@60 $generated@@54 $generated@@162 ($generated@@55 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@95 $generated@@163 $generated@@164) ($generated@@36 $generated@@163 $generated@@164))
 :pattern ( ($generated@@95 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> ($generated@@83 $generated@@165 $generated) (and (= ($generated@@92 $generated@@7 ($generated@@91 $generated@@7 $generated@@165)) $generated@@165) ($generated@@60 $generated@@7 ($generated@@91 $generated@@7 $generated@@165) $generated)))
 :pattern ( ($generated@@83 $generated@@165 $generated))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@T) ) (! (= ($generated@@83 ($generated@@92 $generated@@168 $generated@@166) $generated@@167) ($generated@@60 $generated@@168 $generated@@166 $generated@@167))
 :pattern ( ($generated@@83 ($generated@@92 $generated@@168 $generated@@166) $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (<= 0 ($generated@@41 $generated@@169))
 :pattern ( ($generated@@41 $generated@@169))
)))
(assert  (=> (<= 2 $generated@@59) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@60 $generated@@54 $generated@@172 ($generated@@55 $generated@@170)) (= $generated@@173 ($generated@@29 0))) (not ($generated@@61 $generated@@170 $generated@@171 $generated@@173 $generated@@172)))
 :pattern ( ($generated@@61 $generated@@170 $generated@@171 $generated@@173 $generated@@172))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@45 ($generated@@82 $generated@@174 $generated@@175)) $generated@@4)
 :pattern ( ($generated@@82 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@120 ($generated@@82 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@82 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@110 ($generated@@82 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@82 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@180 ($generated@@55 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@55 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@91 $generated@@183 ($generated@@92 $generated@@183 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@92 $generated@@183 $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (and (and (and (=> ($generated@@36 $generated@@184 $generated@@185) (or (not (= $generated@@184 $generated@@185)) (not true))) (=> (and ($generated@@143 $generated@@184) (not ($generated@@143 $generated@@185))) ($generated@@36 $generated@@184 $generated@@185))) (=> (and ($generated@@143 $generated@@184) ($generated@@143 $generated@@185)) (= ($generated@@36 $generated@@184 $generated@@185) (< ($generated@@41 $generated@@184) ($generated@@41 $generated@@185))))) (=> (and ($generated@@36 $generated@@184 $generated@@185) ($generated@@143 $generated@@185)) ($generated@@143 $generated@@184)))
 :pattern ( ($generated@@36 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@61 $generated@@186 ($generated@@24 $generated@@187) $generated@@188 $generated@@189) ($generated@@61 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
 :pattern ( ($generated@@61 $generated@@186 ($generated@@24 $generated@@187) $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@66 $generated@@190 $generated@@191 ($generated@@24 $generated@@192) $generated@@193 $generated@@194) (forall (($generated@@195 T@U) ) (! ($generated@@28 $generated@@190 $generated@@191 $generated@@195 ($generated@@24 $generated@@192) $generated@@193 $generated@@194)
 :pattern ( ($generated@@28 $generated@@190 $generated@@191 $generated@@195 ($generated@@24 $generated@@192) $generated@@193 $generated@@194))
)))
 :pattern ( ($generated@@66 $generated@@190 $generated@@191 ($generated@@24 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and ($generated@@56 $generated@@198) (and ($generated@@89 $generated@@196) ($generated@@53 $generated@@54 $generated@@196 ($generated@@55 $generated@@197) $generated@@198))) ($generated@@136 ($generated@@120 $generated@@196) $generated@@197 $generated@@198))
 :pattern ( ($generated@@136 ($generated@@120 $generated@@196) $generated@@197 $generated@@198))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (= ($generated@@199 $generated@@209 $generated@@210 $generated@@211 ($generated@@205 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@214 $generated@@215) $generated@@212)
 :weight 0
)) (and (forall (($generated@@216 T@T) ($generated@@217 T@T) ($generated@@218 T@T) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@199 $generated@@216 $generated@@217 $generated@@218 ($generated@@205 $generated@@216 $generated@@217 $generated@@218 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)) (forall (($generated@@225 T@T) ($generated@@226 T@T) ($generated@@227 T@T) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@199 $generated@@225 $generated@@226 $generated@@227 ($generated@@205 $generated@@225 $generated@@226 $generated@@227 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@199 $generated@@225 $generated@@226 $generated@@227 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (= ($generated@@6 $generated@@200) 5)) (= ($generated@@6 $generated@@201) 6)) (forall (($generated@@234 T@T) ($generated@@235 T@T) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (= ($generated@@203 $generated@@234 $generated@@235 ($generated@@206 $generated@@234 $generated@@235 $generated@@237 $generated@@238 $generated@@236) $generated@@238) $generated@@236)
 :weight 0
))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@243 $generated@@244) (= ($generated@@203 $generated@@239 $generated@@240 ($generated@@206 $generated@@239 $generated@@240 $generated@@242 $generated@@243 $generated@@241) $generated@@244) ($generated@@203 $generated@@239 $generated@@240 $generated@@242 $generated@@244)))
 :weight 0
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (= ($generated@@6 ($generated@@204 $generated@@245 $generated@@246)) 7))) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (! (= ($generated@@207 ($generated@@204 $generated@@247 $generated@@248)) $generated@@247)
 :pattern ( ($generated@@204 $generated@@247 $generated@@248))
))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= ($generated@@208 ($generated@@204 $generated@@249 $generated@@250)) $generated@@250)
 :pattern ( ($generated@@204 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (= ($generated@@11 ($generated@@199 $generated@@200 $generated@@201 $generated@@7 ($generated@@202 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))  (=> (and (or (not (= $generated@@255 $generated@@251)) (not true)) ($generated@@11 ($generated@@91 $generated@@7 ($generated@@203 $generated@@201 $generated@@106 ($generated@@203 $generated@@200 ($generated@@204 $generated@@201 $generated@@106) $generated@@252 $generated@@255) $generated@@253)))) $generated@@254))
 :pattern ( ($generated@@199 $generated@@200 $generated@@201 $generated@@7 ($generated@@202 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> ($generated@@83 $generated@@258 ($generated@@55 $generated@@257)) (and (= ($generated@@92 $generated@@54 ($generated@@91 $generated@@54 $generated@@258)) $generated@@258) ($generated@@60 $generated@@54 ($generated@@91 $generated@@54 $generated@@258) ($generated@@55 $generated@@257))))
 :pattern ( ($generated@@83 $generated@@258 ($generated@@55 $generated@@257)))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> ($generated@@143 $generated@@259) (= $generated@@259 ($generated@@29 ($generated@@41 $generated@@259))))
 :pattern ( ($generated@@41 $generated@@259))
 :pattern ( ($generated@@143 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and ($generated@@56 $generated@@262) (and ($generated@@89 $generated@@260) ($generated@@53 $generated@@54 $generated@@260 ($generated@@55 $generated@@261) $generated@@262))) ($generated@@53 $generated@@54 ($generated@@110 $generated@@260) ($generated@@55 $generated@@261) $generated@@262))
 :pattern ( ($generated@@53 $generated@@54 ($generated@@110 $generated@@260) ($generated@@55 $generated@@261) $generated@@262))
)))
(assert  (=> (<= 2 $generated@@59) (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (or ($generated@@107 $generated@@263 ($generated@@79 $generated@@106 $generated@@265) $generated@@266) (and (< 2 $generated@@59) ($generated@@60 $generated@@54 $generated@@266 ($generated@@55 $generated@@263)))) (and (and (=> (< 0 ($generated@@41 $generated@@265)) (let (($generated@@267 ($generated@@79 $generated@@54 $generated@@46)))
 (and (and ($generated@@108 $generated@@266) ($generated@@108 $generated@@267)) (=> (not ($generated@@66 $generated@@263 $generated@@263 ($generated@@24 ($generated@@24 $generated@@109)) $generated@@266 $generated@@267)) ($generated@@107 $generated@@263 ($generated@@40 $generated@@265 ($generated@@29 1)) ($generated@@110 $generated@@266)))))) (=> (=> (< 0 ($generated@@41 $generated@@265)) (let (($generated@@268 ($generated@@79 $generated@@54 $generated@@46)))
 (or ($generated@@66 $generated@@263 $generated@@263 ($generated@@24 ($generated@@24 $generated@@109)) $generated@@266 $generated@@268) ($generated@@61 $generated@@263 ($generated@@24 $generated@@264) ($generated@@40 $generated@@265 ($generated@@29 1)) ($generated@@110 $generated@@266))))) (=> (= ($generated@@77 0) ($generated@@41 $generated@@265)) (forall (($generated@@269 T@U) ) (!  (=> ($generated@@95 $generated@@269 $generated@@265) ($generated@@107 $generated@@263 $generated@@269 $generated@@266))
 :pattern ( ($generated@@61 $generated@@263 ($generated@@24 $generated@@264) $generated@@269 $generated@@266))
))))) (= ($generated@@61 $generated@@263 ($generated@@24 $generated@@264) ($generated@@79 $generated@@106 $generated@@265) $generated@@266)  (and (=> (< 0 ($generated@@41 $generated@@265)) (let (($generated@@270 ($generated@@79 $generated@@54 $generated@@46)))
 (or ($generated@@66 $generated@@263 $generated@@263 ($generated@@24 ($generated@@24 $generated@@109)) $generated@@266 $generated@@270) ($generated@@61 $generated@@263 ($generated@@24 $generated@@264) ($generated@@40 $generated@@265 ($generated@@29 1)) ($generated@@110 $generated@@266))))) (=> (= ($generated@@77 0) ($generated@@41 $generated@@265)) (exists (($generated@@271 T@U) ) (!  (and ($generated@@95 $generated@@271 $generated@@265) ($generated@@61 $generated@@263 ($generated@@24 $generated@@264) $generated@@271 $generated@@266))
 :pattern ( ($generated@@61 $generated@@263 ($generated@@24 $generated@@264) $generated@@271 $generated@@266))
)))))))
 :weight 3
 :pattern ( ($generated@@61 $generated@@263 ($generated@@24 $generated@@264) ($generated@@79 $generated@@106 $generated@@265) $generated@@266))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and ($generated@@143 $generated@@273) (<= ($generated@@41 $generated@@273) ($generated@@41 $generated@@272))) (or (and (= $generated@@273 ($generated@@29 0)) (= ($generated@@40 $generated@@272 $generated@@273) $generated@@272)) (and (or (not (= $generated@@273 ($generated@@29 0))) (not true)) ($generated@@36 ($generated@@40 $generated@@272 $generated@@273) $generated@@272))))
 :pattern ( ($generated@@40 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and ($generated@@36 $generated@@276 $generated@@280) ($generated@@28 $generated@@274 $generated@@275 $generated@@280 ($generated@@24 $generated@@277) $generated@@278 $generated@@279)) ($generated@@28 $generated@@274 $generated@@275 $generated@@276 ($generated@@24 $generated@@277) $generated@@278 $generated@@279))
 :pattern ( ($generated@@28 $generated@@274 $generated@@275 $generated@@276 ($generated@@24 $generated@@277) $generated@@278 $generated@@279) ($generated@@28 $generated@@274 $generated@@275 $generated@@280 ($generated@@24 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (! (= ($generated@@66 $generated@@281 $generated@@282 ($generated@@24 $generated@@283) $generated@@284 $generated@@285) ($generated@@66 $generated@@281 $generated@@282 $generated@@283 $generated@@284 $generated@@285))
 :pattern ( ($generated@@66 $generated@@281 $generated@@282 ($generated@@24 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 Int) ) (! (= ($generated@@92 $generated@@8 ($generated@@12 ($generated@@77 $generated@@286))) ($generated@@79 $generated@@106 ($generated@@92 $generated@@8 ($generated@@12 $generated@@286))))
 :pattern ( ($generated@@92 $generated@@8 ($generated@@12 ($generated@@77 $generated@@286))))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (= ($generated@@92 $generated@@288 ($generated@@79 $generated@@288 $generated@@287)) ($generated@@79 $generated@@106 ($generated@@92 $generated@@288 $generated@@287)))
 :pattern ( ($generated@@92 $generated@@288 ($generated@@79 $generated@@288 $generated@@287)))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (forall (($generated@@294 Int) ) (!  (=> (<= 0 $generated@@294) ($generated@@28 $generated@@289 $generated@@290 ($generated@@29 $generated@@294) ($generated@@24 $generated@@291) $generated@@292 $generated@@293))
 :pattern ( ($generated@@28 $generated@@289 $generated@@290 ($generated@@29 $generated@@294) ($generated@@24 $generated@@291) $generated@@292 $generated@@293))
)) ($generated@@66 $generated@@289 $generated@@290 ($generated@@24 $generated@@291) $generated@@292 $generated@@293))
 :pattern ( ($generated@@66 $generated@@289 $generated@@290 ($generated@@24 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! ($generated@@53 $generated@@7 $generated@@296 $generated $generated@@295)
 :pattern ( ($generated@@53 $generated@@7 $generated@@296 $generated $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> ($generated@@56 $generated@@300) (= ($generated@@53 $generated@@54 ($generated@@82 $generated@@298 $generated@@299) ($generated@@55 $generated@@297) $generated@@300)  (and ($generated@@136 $generated@@298 $generated@@297 $generated@@300) ($generated@@53 $generated@@54 $generated@@299 ($generated@@55 $generated@@297) $generated@@300))))
 :pattern ( ($generated@@53 $generated@@54 ($generated@@82 $generated@@298 $generated@@299) ($generated@@55 $generated@@297) $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! ($generated@@60 $generated@@7 $generated@@301 $generated)
 :pattern ( ($generated@@60 $generated@@7 $generated@@301 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@302 () T@U)
(declare-fun $generated@@303 () T@U)
(declare-fun $generated@@304 () T@U)
(declare-fun $generated@@305 () T@U)
(declare-fun $generated@@306 () T@U)
(declare-fun $generated@@307 () T@U)
(declare-fun $generated@@308 () T@U)
(declare-fun $generated@@309 () T@U)
(declare-fun $generated@@310 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@311 true))
(let (($generated@@312  (=> (and ($generated@@66 $generated@@302 $generated@@302 ($generated@@24 ($generated@@24 $generated@@109)) $generated@@303 $generated@@304) (= (ControlFlow 0 5) 2)) $generated@@311)))
(let (($generated@@313  (=> (not ($generated@@66 $generated@@302 $generated@@302 ($generated@@24 ($generated@@24 $generated@@109)) $generated@@303 $generated@@304)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@89 $generated@@303)) (=> ($generated@@89 $generated@@303) (=> (and (and (= $generated@@305 ($generated@@110 $generated@@303)) ($generated@@53 $generated@@54 $generated@@305 ($generated@@55 $generated@@302) $generated@@306)) (and ($generated@@155 $generated@@302 ($generated@@110 $generated@@303)) (= (ControlFlow 0 3) 2))) $generated@@311))))))
(let (($generated@@314  (=> (= $generated@@307 ($generated@@79 $generated@@54 $generated@@46)) (=> (and ($generated@@60 $generated@@54 $generated@@307 ($generated@@55 $generated@@302)) (= $generated@@304 $generated@@307)) (and (=> (= (ControlFlow 0 6) 3) $generated@@313) (=> (= (ControlFlow 0 6) 5) $generated@@312))))))
(let (($generated@@315 true))
(let (($generated@@316  (=> (= $generated@@308 ($generated@@202 $generated@@309 $generated@@306 $generated@@1 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@315) (=> (= (ControlFlow 0 7) 6) $generated@@314)))))
(let (($generated@@317  (=> (and (and (and ($generated@@56 $generated@@306) ($generated@@310 $generated@@306)) ($generated@@60 $generated@@54 $generated@@303 ($generated@@55 $generated@@302))) (and (= 1 $generated@@59) (= (ControlFlow 0 8) 7))) $generated@@316)))
$generated@@317))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
