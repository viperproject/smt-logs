(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@T T@T) T@T)
(declare-fun $generated@@59 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and (or (not (= $generated@@34 $generated@@30)) (not true)) (= ($generated@@31 $generated@@34) ($generated@@29 $generated@@33))) ($generated@@32 $generated@@13 ($generated@@17 ($generated@@28 $generated@@34)) $generated))
 :pattern ( ($generated@@28 $generated@@34) ($generated@@29 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (and (or (not (= $generated@@37 $generated@@30)) (not true)) (= ($generated@@31 $generated@@37) ($generated@@29 $generated@@36))) ($generated@@32 $generated@@13 ($generated@@17 ($generated@@35 $generated@@37)) $generated))
 :pattern ( ($generated@@35 $generated@@37) ($generated@@29 $generated@@36))
)))
(assert (= ($generated@@11 $generated@@39) 3))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@42 ($generated@@40 $generated@@41) $generated@@43) ($generated@@38 $generated@@39 $generated@@42 ($generated@@29 $generated@@41) $generated@@43))
 :pattern ( ($generated@@38 $generated@@39 $generated@@42 ($generated@@40 $generated@@41) $generated@@43))
 :pattern ( ($generated@@38 $generated@@39 $generated@@42 ($generated@@29 $generated@@41) $generated@@43))
)))
(assert ($generated@@44 $generated@@45))
(assert (forall (($generated@@46 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@46 $generated@@45)  (or (= $generated@@46 $generated@@30) (= ($generated@@31 $generated@@46) $generated@@45)))
 :pattern ( ($generated@@32 $generated@@39 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@49 $generated@@47 $generated@@50) ($generated@@38 $generated@@39 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@38 $generated@@39 $generated@@49 $generated@@47 $generated@@50))
 :pattern ( ($generated@@38 $generated@@39 $generated@@49 $generated@@48 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@52 $generated@@51 $generated@@53) ($generated@@38 $generated@@39 $generated@@52 $generated@@45 $generated@@53))
 :pattern ( ($generated@@38 $generated@@39 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@38 $generated@@39 $generated@@52 $generated@@45 $generated@@53))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@55 $generated@@62 $generated@@63 ($generated@@59 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@66) $generated@@64)
 :weight 0
)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (or (= $generated@@71 $generated@@72) (= ($generated@@55 $generated@@67 $generated@@68 ($generated@@59 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@72) ($generated@@55 $generated@@67 $generated@@68 $generated@@70 $generated@@72)))
 :weight 0
))) (= ($generated@@11 $generated@@56) 4)) (= ($generated@@11 $generated@@57) 5)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (= ($generated@@11 ($generated@@58 $generated@@73 $generated@@74)) 6))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@60 ($generated@@58 $generated@@75 $generated@@76)) $generated@@75)
 :pattern ( ($generated@@58 $generated@@75 $generated@@76))
))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@61 ($generated@@58 $generated@@77 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@58 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@80 ($generated@@29 $generated@@79) $generated@@81)  (or (= $generated@@80 $generated@@30) ($generated@@16 ($generated@@54 $generated@@12 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@39 ($generated@@58 $generated@@56 $generated@@57) $generated@@81 $generated@@80) $generated@@1)))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@80 ($generated@@29 $generated@@79) $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@82 $generated@@48 $generated@@83)  (or (= $generated@@82 $generated@@30) ($generated@@16 ($generated@@54 $generated@@12 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@39 ($generated@@58 $generated@@56 $generated@@57) $generated@@83 $generated@@82) $generated@@1)))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@82 $generated@@48 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@84 $generated@@45 $generated@@85)  (or (= $generated@@84 $generated@@30) ($generated@@16 ($generated@@54 $generated@@12 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@39 ($generated@@58 $generated@@56 $generated@@57) $generated@@85 $generated@@84) $generated@@1)))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@84 $generated@@45 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@86 $generated@@87 $generated@@88) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@16 ($generated@@54 $generated@@12 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@39 ($generated@@58 $generated@@56 $generated@@57) $generated@@87 $generated@@89) $generated@@1))) ($generated@@16 ($generated@@54 $generated@@12 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@39 ($generated@@58 $generated@@56 $generated@@57) $generated@@88 $generated@@89) $generated@@1))))
 :pattern ( ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@39 ($generated@@58 $generated@@56 $generated@@57) $generated@@88 $generated@@89) $generated@@1))
)))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 ($generated@@54 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@54 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@94 ($generated@@40 $generated@@93))  (and ($generated@@32 $generated@@39 $generated@@94 ($generated@@29 $generated@@93)) (or (not (= $generated@@94 $generated@@30)) (not true))))
 :pattern ( ($generated@@32 $generated@@39 $generated@@94 ($generated@@40 $generated@@93)))
 :pattern ( ($generated@@32 $generated@@39 $generated@@94 ($generated@@29 $generated@@93)))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (!  (=> ($generated@@86 $generated@@95 $generated@@96) (=> ($generated@@38 $generated@@99 $generated@@97 $generated@@98 $generated@@95) ($generated@@38 $generated@@99 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@86 $generated@@95 $generated@@96) ($generated@@38 $generated@@99 $generated@@97 $generated@@98 $generated@@95))
)))
(assert (forall (($generated@@101 T@U) ) (!  (and (= ($generated@@27 ($generated@@29 $generated@@101)) $generated@@2) (= ($generated@@100 ($generated@@29 $generated@@101)) $generated@@8))
 :pattern ( ($generated@@29 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (!  (and (= ($generated@@27 ($generated@@40 $generated@@102)) $generated@@3) (= ($generated@@100 ($generated@@40 $generated@@102)) $generated@@8))
 :pattern ( ($generated@@40 $generated@@102))
)))
(assert  (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@103 $generated@@106 $generated@@107 $generated@@108 ($generated@@105 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@111 $generated@@112) $generated@@109)
 :weight 0
)) (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@103 $generated@@113 $generated@@114 $generated@@115 ($generated@@105 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@103 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@103 $generated@@122 $generated@@123 $generated@@124 ($generated@@105 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@103 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)))))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@16 ($generated@@103 $generated@@39 $generated@@56 $generated@@12 ($generated@@104 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))  (=> (and (or (not (= $generated@@135 $generated@@131)) (not true)) ($generated@@16 ($generated@@54 $generated@@12 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@39 ($generated@@58 $generated@@56 $generated@@57) $generated@@132 $generated@@135) $generated@@133)))) (= $generated@@135 $generated@@134)))
 :pattern ( ($generated@@103 $generated@@39 $generated@@56 $generated@@12 ($generated@@104 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@138 ($generated@@29 $generated@@137))  (or (= $generated@@138 $generated@@30) (= ($generated@@31 $generated@@138) ($generated@@29 $generated@@137))))
 :pattern ( ($generated@@32 $generated@@39 $generated@@138 ($generated@@29 $generated@@137)))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@139 $generated@@47)  (and ($generated@@32 $generated@@39 $generated@@139 $generated@@48) (or (not (= $generated@@139 $generated@@30)) (not true))))
 :pattern ( ($generated@@32 $generated@@39 $generated@@139 $generated@@47))
 :pattern ( ($generated@@32 $generated@@39 $generated@@139 $generated@@48))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@140 $generated@@51)  (and ($generated@@32 $generated@@39 $generated@@140 $generated@@45) (or (not (= $generated@@140 $generated@@30)) (not true))))
 :pattern ( ($generated@@32 $generated@@39 $generated@@140 $generated@@51))
 :pattern ( ($generated@@32 $generated@@39 $generated@@140 $generated@@45))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@38 $generated@@39 $generated@@141 $generated@@45 $generated@@142) ($generated@@38 $generated@@39 $generated@@141 $generated@@48 $generated@@142))
 :pattern ( ($generated@@38 $generated@@39 $generated@@141 $generated@@45 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (or (not (= $generated@@143 $generated@@145)) (not true)) (=> (and ($generated@@86 $generated@@143 $generated@@144) ($generated@@86 $generated@@144 $generated@@145)) ($generated@@86 $generated@@143 $generated@@145)))
 :pattern ( ($generated@@86 $generated@@143 $generated@@144) ($generated@@86 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ) (! (<= 0 ($generated@@28 $generated@@146))
 :pattern ( ($generated@@28 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (! (<= 0 ($generated@@35 $generated@@147))
 :pattern ( ($generated@@35 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@29 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@29 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@150 ($generated@@40 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@40 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@54 $generated@@153 ($generated@@90 $generated@@153 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@90 $generated@@153 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and ($generated@@154 $generated@@156) (and (or (not (= $generated@@157 $generated@@30)) (not true)) (= ($generated@@31 $generated@@157) ($generated@@29 $generated@@155)))) ($generated@@16 ($generated@@54 $generated@@12 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@39 ($generated@@58 $generated@@56 $generated@@57) $generated@@156 $generated@@157) $generated@@1)))) ($generated@@38 $generated@@13 ($generated@@17 ($generated@@28 $generated@@157)) $generated $generated@@156))
 :pattern ( ($generated@@28 $generated@@157) ($generated@@54 $generated@@12 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@39 ($generated@@58 $generated@@56 $generated@@57) $generated@@156 $generated@@157) $generated@@1)) ($generated@@29 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and ($generated@@154 $generated@@159) (and (or (not (= $generated@@160 $generated@@30)) (not true)) (= ($generated@@31 $generated@@160) ($generated@@29 $generated@@158)))) ($generated@@16 ($generated@@54 $generated@@12 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@39 ($generated@@58 $generated@@56 $generated@@57) $generated@@159 $generated@@160) $generated@@1)))) ($generated@@38 $generated@@13 ($generated@@17 ($generated@@35 $generated@@160)) $generated $generated@@159))
 :pattern ( ($generated@@35 $generated@@160) ($generated@@54 $generated@@12 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@39 ($generated@@58 $generated@@56 $generated@@57) $generated@@159 $generated@@160) $generated@@1)) ($generated@@29 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> ($generated@@32 $generated@@39 $generated@@161 $generated@@45) ($generated@@32 $generated@@39 $generated@@161 $generated@@48))
 :pattern ( ($generated@@32 $generated@@39 $generated@@161 $generated@@45))
)))
(assert (= ($generated@@27 $generated@@47) $generated@@4))
(assert (= ($generated@@100 $generated@@47) $generated@@9))
(assert (= ($generated@@27 $generated@@45) $generated@@5))
(assert (= ($generated@@100 $generated@@45) $generated@@10))
(assert (= ($generated@@27 $generated@@51) $generated@@6))
(assert (= ($generated@@100 $generated@@51) $generated@@10))
(assert (= ($generated@@27 $generated@@48) $generated@@7))
(assert (= ($generated@@100 $generated@@48) $generated@@9))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@162 $generated@@48)  (or (= $generated@@162 $generated@@30) ($generated@@44 ($generated@@31 $generated@@162))))
 :pattern ( ($generated@@32 $generated@@39 $generated@@162 $generated@@48))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! ($generated@@38 $generated@@13 $generated@@164 $generated $generated@@163)
 :pattern ( ($generated@@38 $generated@@13 $generated@@164 $generated $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! ($generated@@32 $generated@@13 $generated@@165 $generated)
 :pattern ( ($generated@@32 $generated@@13 $generated@@165 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@172  (=> (= $generated@@166 ($generated@@104 $generated@@30 $generated@@167 $generated@@1 $generated@@168)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@168 $generated@@30)) (not true))) (=> (or (not (= $generated@@168 $generated@@30)) (not true)) (=> (and (> ($generated@@28 $generated@@168) 0) (= (ControlFlow 0 2) (- 0 1))) (or (not (= $generated@@168 $generated@@30)) (not true))))))))
(let (($generated@@173  (=> (and (and (and ($generated@@154 $generated@@167) ($generated@@169 $generated@@167)) (and ($generated@@32 $generated@@39 $generated@@170 $generated@@47) ($generated@@38 $generated@@39 $generated@@170 $generated@@47 $generated@@167))) (and (and ($generated@@32 $generated@@39 $generated@@168 ($generated@@40 $generated@@51)) ($generated@@38 $generated@@39 $generated@@168 ($generated@@40 $generated@@51) $generated@@167)) (and (= 1 $generated@@171) (= (ControlFlow 0 4) 2)))) $generated@@172)))
$generated@@173)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
