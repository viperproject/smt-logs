(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 (Int Int Int Int Int Int) T@U)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@U) Int)
(declare-fun $generated@@43 (Int) Int)
(declare-fun $generated@@44 (T@U) Int)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@46 (T@U) Int)
(declare-fun $generated@@47 (T@U) Int)
(declare-fun $generated@@48 (T@U) Int)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@78 () Bool)
(declare-fun $generated@@79 (Bool) T@U)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@137 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@T T@T) T@T)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@193 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@213 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (= ($generated@@8 $generated@@29) 3))
(assert  (=> (<= 3 $generated@@25) (forall (($generated@@35 T@U) ) (!  (=> (or ($generated@@27 $generated@@35) (and (< 3 $generated@@25) (and ($generated@@28 $generated@@29 $generated@@35 $generated@@30) ($generated@@31 $generated@@35)))) (and (and (and (and (and (and ($generated@@32 $generated@@35) ($generated@@32 $generated@@35)) ($generated@@32 $generated@@35)) ($generated@@32 $generated@@35)) ($generated@@32 $generated@@35)) ($generated@@32 $generated@@35)) (= ($generated@@26 $generated@@35) ($generated@@33 ($generated@@34 $generated@@35) ($generated@@34 $generated@@35) ($generated@@34 $generated@@35) ($generated@@34 $generated@@35) ($generated@@34 $generated@@35) ($generated@@34 $generated@@35)))))
 :pattern ( ($generated@@26 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@36 $generated@@30) ($generated@@32 $generated@@36))
 :pattern ( ($generated@@32 $generated@@36) ($generated@@28 $generated@@29 $generated@@36 $generated@@30))
)))
(assert (forall (($generated@@39 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@39 $generated@@38) ($generated@@37 $generated@@39))
 :pattern ( ($generated@@37 $generated@@39) ($generated@@28 $generated@@29 $generated@@39 $generated@@38))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@49 T@U) ) (!  (=> (or ($generated@@41 $generated@@49) (and (< 1 $generated@@25) ($generated@@28 $generated@@29 $generated@@49 $generated@@38))) (and (and ($generated@@37 $generated@@49) (=> (= ($generated@@42 $generated@@49) ($generated@@43 5)) (and ($generated@@37 $generated@@49) (=> (= ($generated@@44 $generated@@49) ($generated@@43 5)) (and ($generated@@37 $generated@@49) (=> (= ($generated@@45 $generated@@49) ($generated@@43 5)) (and ($generated@@37 $generated@@49) (=> (= ($generated@@46 $generated@@49) ($generated@@43 5)) (and ($generated@@37 $generated@@49) (=> (= ($generated@@47 $generated@@49) ($generated@@43 5)) ($generated@@37 $generated@@49))))))))))) (= ($generated@@40 $generated@@49)  (and (and (and (and (and (= ($generated@@42 $generated@@49) ($generated@@43 5)) (= ($generated@@44 $generated@@49) ($generated@@43 5))) (= ($generated@@45 $generated@@49) ($generated@@43 5))) (= ($generated@@46 $generated@@49) ($generated@@43 5))) (= ($generated@@47 $generated@@49) ($generated@@43 5))) (= ($generated@@48 $generated@@49) ($generated@@43 5))))))
 :pattern ( ($generated@@40 $generated@@49))
))))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@54 T@U) ) (!  (=> (or ($generated@@50 $generated@@54) (and (< 2 $generated@@25) ($generated@@28 $generated@@29 $generated@@54 $generated@@30))) (and (=> ($generated@@13 ($generated@@51 $generated@@9 ($generated@@12 true))) ($generated@@52 $generated@@54)) (= ($generated@@31 $generated@@54)  (and true ($generated@@53 $generated@@54)))))
 :pattern ( ($generated@@31 $generated@@54))
))))
(assert (forall (($generated@@55 Int) ) (! (= ($generated@@43 $generated@@55) $generated@@55)
 :pattern ( ($generated@@43 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@51 $generated@@57 $generated@@56) $generated@@56)
 :pattern ( ($generated@@51 $generated@@57 $generated@@56))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@58 T@U) ) (!  (=> (or ($generated@@41 ($generated@@51 $generated@@29 $generated@@58)) (and (< 1 $generated@@25) ($generated@@28 $generated@@29 $generated@@58 $generated@@38))) (and (and ($generated@@37 ($generated@@51 $generated@@29 $generated@@58)) (=> (= ($generated@@43 ($generated@@42 ($generated@@51 $generated@@29 $generated@@58))) ($generated@@43 5)) (and ($generated@@37 ($generated@@51 $generated@@29 $generated@@58)) (=> (= ($generated@@43 ($generated@@44 ($generated@@51 $generated@@29 $generated@@58))) ($generated@@43 5)) (and ($generated@@37 ($generated@@51 $generated@@29 $generated@@58)) (=> (= ($generated@@43 ($generated@@45 ($generated@@51 $generated@@29 $generated@@58))) ($generated@@43 5)) (and ($generated@@37 ($generated@@51 $generated@@29 $generated@@58)) (=> (= ($generated@@43 ($generated@@46 ($generated@@51 $generated@@29 $generated@@58))) ($generated@@43 5)) (and ($generated@@37 ($generated@@51 $generated@@29 $generated@@58)) (=> (= ($generated@@43 ($generated@@47 ($generated@@51 $generated@@29 $generated@@58))) ($generated@@43 5)) ($generated@@37 ($generated@@51 $generated@@29 $generated@@58)))))))))))) (= ($generated@@40 ($generated@@51 $generated@@29 $generated@@58))  (and (and (and (and (and (= ($generated@@43 ($generated@@42 ($generated@@51 $generated@@29 $generated@@58))) ($generated@@43 5)) (= ($generated@@43 ($generated@@44 ($generated@@51 $generated@@29 $generated@@58))) ($generated@@43 5))) (= ($generated@@43 ($generated@@45 ($generated@@51 $generated@@29 $generated@@58))) ($generated@@43 5))) (= ($generated@@43 ($generated@@46 ($generated@@51 $generated@@29 $generated@@58))) ($generated@@43 5))) (= ($generated@@43 ($generated@@47 ($generated@@51 $generated@@29 $generated@@58))) ($generated@@43 5))) (= ($generated@@43 ($generated@@48 ($generated@@51 $generated@@29 $generated@@58))) ($generated@@43 5))))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@51 $generated@@29 $generated@@58)))
))))
(assert (forall (($generated@@59 Int) ($generated@@60 Int) ($generated@@61 Int) ($generated@@62 Int) ($generated@@63 Int) ($generated@@64 Int) ) (! (= ($generated@@33 ($generated@@43 $generated@@59) ($generated@@43 $generated@@60) ($generated@@43 $generated@@61) ($generated@@43 $generated@@62) ($generated@@43 $generated@@63) ($generated@@43 $generated@@64)) ($generated@@51 $generated@@29 ($generated@@33 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64)))
 :pattern ( ($generated@@33 ($generated@@43 $generated@@59) ($generated@@43 $generated@@60) ($generated@@43 $generated@@61) ($generated@@43 $generated@@62) ($generated@@43 $generated@@63) ($generated@@43 $generated@@64)))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@32 $generated@@66) (= ($generated@@65 $generated@@66) $generated@@4))
 :pattern ( ($generated@@32 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@37 $generated@@67) (= ($generated@@65 $generated@@67) $generated@@5))
 :pattern ( ($generated@@37 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 ($generated@@68 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@68 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@72 Int) ($generated@@73 Int) ($generated@@74 Int) ($generated@@75 Int) ($generated@@76 Int) ($generated@@77 Int) ) (! (= ($generated@@28 $generated@@29 ($generated@@33 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77) $generated@@38)  (and (and (and (and (and ($generated@@28 $generated@@10 ($generated@@14 $generated@@72) $generated) ($generated@@28 $generated@@10 ($generated@@14 $generated@@73) $generated)) ($generated@@28 $generated@@10 ($generated@@14 $generated@@74) $generated)) ($generated@@28 $generated@@10 ($generated@@14 $generated@@75) $generated)) ($generated@@28 $generated@@10 ($generated@@14 $generated@@76) $generated)) ($generated@@28 $generated@@10 ($generated@@14 $generated@@77) $generated)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@33 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77) $generated@@38))
)))
(assert  (=> (<= 1 $generated@@25) (=> (or $generated@@78 (< 1 $generated@@25)) (= ($generated@@79 true) ($generated@@51 $generated@@29 ($generated@@80 ($generated@@43 5)))))))
(assert  (=> (<= 1 $generated@@25) (=> (or $generated@@78 (< 1 $generated@@25)) (= ($generated@@79 true) ($generated@@51 $generated@@29 ($generated@@80 ($generated@@43 5)))))))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@32 $generated@@81) (exists (($generated@@82 Int) ) (= $generated@@81 ($generated@@80 $generated@@82))))
 :pattern ( ($generated@@32 $generated@@81))
)))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@83 T@U) ) (!  (=> (or ($generated@@50 ($generated@@51 $generated@@29 $generated@@83)) (and (< 2 $generated@@25) ($generated@@28 $generated@@29 $generated@@83 $generated@@30))) (and (=> ($generated@@13 ($generated@@51 $generated@@9 ($generated@@12 true))) ($generated@@52 ($generated@@51 $generated@@29 $generated@@83))) (= ($generated@@31 ($generated@@51 $generated@@29 $generated@@83))  (and true ($generated@@53 ($generated@@51 $generated@@29 $generated@@83))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@51 $generated@@29 $generated@@83)))
))))
(assert (forall (($generated@@84 Int) ($generated@@85 Int) ($generated@@86 Int) ($generated@@87 Int) ($generated@@88 Int) ($generated@@89 Int) ) (! (= ($generated@@65 ($generated@@33 $generated@@84 $generated@@85 $generated@@86 $generated@@87 $generated@@88 $generated@@89)) $generated@@5)
 :pattern ( ($generated@@33 $generated@@84 $generated@@85 $generated@@86 $generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 Int) ($generated@@91 Int) ($generated@@92 Int) ($generated@@93 Int) ($generated@@94 Int) ($generated@@95 Int) ) (! (= ($generated@@42 ($generated@@33 $generated@@90 $generated@@91 $generated@@92 $generated@@93 $generated@@94 $generated@@95)) $generated@@90)
 :pattern ( ($generated@@33 $generated@@90 $generated@@91 $generated@@92 $generated@@93 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 Int) ($generated@@97 Int) ($generated@@98 Int) ($generated@@99 Int) ($generated@@100 Int) ($generated@@101 Int) ) (! (= ($generated@@44 ($generated@@33 $generated@@96 $generated@@97 $generated@@98 $generated@@99 $generated@@100 $generated@@101)) $generated@@97)
 :pattern ( ($generated@@33 $generated@@96 $generated@@97 $generated@@98 $generated@@99 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 Int) ($generated@@103 Int) ($generated@@104 Int) ($generated@@105 Int) ($generated@@106 Int) ($generated@@107 Int) ) (! (= ($generated@@45 ($generated@@33 $generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@106 $generated@@107)) $generated@@104)
 :pattern ( ($generated@@33 $generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 Int) ($generated@@109 Int) ($generated@@110 Int) ($generated@@111 Int) ($generated@@112 Int) ($generated@@113 Int) ) (! (= ($generated@@46 ($generated@@33 $generated@@108 $generated@@109 $generated@@110 $generated@@111 $generated@@112 $generated@@113)) $generated@@111)
 :pattern ( ($generated@@33 $generated@@108 $generated@@109 $generated@@110 $generated@@111 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 Int) ($generated@@115 Int) ($generated@@116 Int) ($generated@@117 Int) ($generated@@118 Int) ($generated@@119 Int) ) (! (= ($generated@@47 ($generated@@33 $generated@@114 $generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@119)) $generated@@118)
 :pattern ( ($generated@@33 $generated@@114 $generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 Int) ($generated@@121 Int) ($generated@@122 Int) ($generated@@123 Int) ($generated@@124 Int) ($generated@@125 Int) ) (! (= ($generated@@48 ($generated@@33 $generated@@120 $generated@@121 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@33 $generated@@120 $generated@@121 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
)))
(assert  (=> (<= 3 $generated@@25) (forall (($generated@@126 T@U) ) (!  (=> (or ($generated@@27 $generated@@126) (and (< 3 $generated@@25) (and ($generated@@28 $generated@@29 $generated@@126 $generated@@30) ($generated@@31 $generated@@126)))) ($generated@@28 $generated@@29 ($generated@@26 $generated@@126) $generated@@38))
 :pattern ( ($generated@@26 $generated@@126))
))))
(assert (forall (($generated@@127 Int) ) (! (= ($generated@@65 ($generated@@80 $generated@@127)) $generated@@4)
 :pattern ( ($generated@@80 $generated@@127))
)))
(assert (forall (($generated@@128 Int) ) (! (= ($generated@@34 ($generated@@80 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@80 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@68 $generated@@130 ($generated@@69 $generated@@130 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@69 $generated@@130 $generated@@129))
)))
(assert  (=> (<= 3 $generated@@25) (forall (($generated@@131 T@U) ) (!  (=> (or ($generated@@27 ($generated@@51 $generated@@29 $generated@@131)) (and (< 3 $generated@@25) (and ($generated@@28 $generated@@29 $generated@@131 $generated@@30) ($generated@@13 ($generated@@51 $generated@@9 ($generated@@12 ($generated@@31 ($generated@@51 $generated@@29 $generated@@131)))))))) (and (and (and (and (and (and ($generated@@32 ($generated@@51 $generated@@29 $generated@@131)) ($generated@@32 ($generated@@51 $generated@@29 $generated@@131))) ($generated@@32 ($generated@@51 $generated@@29 $generated@@131))) ($generated@@32 ($generated@@51 $generated@@29 $generated@@131))) ($generated@@32 ($generated@@51 $generated@@29 $generated@@131))) ($generated@@32 ($generated@@51 $generated@@29 $generated@@131))) (= ($generated@@26 ($generated@@51 $generated@@29 $generated@@131)) ($generated@@51 $generated@@29 ($generated@@33 ($generated@@43 ($generated@@34 ($generated@@51 $generated@@29 $generated@@131))) ($generated@@43 ($generated@@34 ($generated@@51 $generated@@29 $generated@@131))) ($generated@@43 ($generated@@34 ($generated@@51 $generated@@29 $generated@@131))) ($generated@@43 ($generated@@34 ($generated@@51 $generated@@29 $generated@@131))) ($generated@@43 ($generated@@34 ($generated@@51 $generated@@29 $generated@@131))) ($generated@@43 ($generated@@34 ($generated@@51 $generated@@29 $generated@@131))))))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@51 $generated@@29 $generated@@131)))
))))
(assert (forall (($generated@@132 Int) ) (! (= ($generated@@28 $generated@@29 ($generated@@80 $generated@@132) $generated@@30) ($generated@@28 $generated@@10 ($generated@@14 $generated@@132) $generated))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@80 $generated@@132) $generated@@30))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@133 $generated@@144 $generated@@145 $generated@@146 ($generated@@140 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@133 $generated@@151 $generated@@152 $generated@@153 ($generated@@140 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@133 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@133 $generated@@160 $generated@@161 $generated@@162 ($generated@@140 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@133 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))) (= ($generated@@8 $generated@@134) 4)) (= ($generated@@8 $generated@@135) 5)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@137 $generated@@169 $generated@@170 ($generated@@141 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@171) $generated@@173) $generated@@171)
 :weight 0
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@178 $generated@@179) (= ($generated@@137 $generated@@174 $generated@@175 ($generated@@141 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@176) $generated@@179) ($generated@@137 $generated@@174 $generated@@175 $generated@@177 $generated@@179)))
 :weight 0
))) (= ($generated@@8 $generated@@138) 6)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@8 ($generated@@139 $generated@@180 $generated@@181)) 7))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@142 ($generated@@139 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@139 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@143 ($generated@@139 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@139 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@13 ($generated@@133 $generated@@134 $generated@@135 $generated@@9 ($generated@@136 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))  (=> (and (or (not (= $generated@@190 $generated@@186)) (not true)) ($generated@@13 ($generated@@68 $generated@@9 ($generated@@137 $generated@@135 $generated@@138 ($generated@@137 $generated@@134 ($generated@@139 $generated@@135 $generated@@138) $generated@@187 $generated@@190) $generated@@188)))) $generated@@189))
 :pattern ( ($generated@@133 $generated@@134 $generated@@135 $generated@@9 ($generated@@136 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@192 Bool) ) (!  (=> (or $generated@@78 (< 1 $generated@@25)) ($generated@@28 $generated@@29 ($generated@@79 $generated@@192) $generated@@30))
 :pattern ( ($generated@@79 $generated@@192))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and ($generated@@194 $generated@@196) (and ($generated@@32 $generated@@195) ($generated@@193 $generated@@29 $generated@@195 $generated@@30 $generated@@196))) ($generated@@193 $generated@@10 ($generated@@14 ($generated@@34 $generated@@195)) $generated $generated@@196))
 :pattern ( ($generated@@193 $generated@@10 ($generated@@14 ($generated@@34 $generated@@195)) $generated $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and ($generated@@194 $generated@@198) (and ($generated@@37 $generated@@197) ($generated@@193 $generated@@29 $generated@@197 $generated@@38 $generated@@198))) ($generated@@193 $generated@@10 ($generated@@14 ($generated@@42 $generated@@197)) $generated $generated@@198))
 :pattern ( ($generated@@193 $generated@@10 ($generated@@14 ($generated@@42 $generated@@197)) $generated $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and ($generated@@194 $generated@@200) (and ($generated@@37 $generated@@199) ($generated@@193 $generated@@29 $generated@@199 $generated@@38 $generated@@200))) ($generated@@193 $generated@@10 ($generated@@14 ($generated@@44 $generated@@199)) $generated $generated@@200))
 :pattern ( ($generated@@193 $generated@@10 ($generated@@14 ($generated@@44 $generated@@199)) $generated $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and ($generated@@194 $generated@@202) (and ($generated@@37 $generated@@201) ($generated@@193 $generated@@29 $generated@@201 $generated@@38 $generated@@202))) ($generated@@193 $generated@@10 ($generated@@14 ($generated@@45 $generated@@201)) $generated $generated@@202))
 :pattern ( ($generated@@193 $generated@@10 ($generated@@14 ($generated@@45 $generated@@201)) $generated $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and ($generated@@194 $generated@@204) (and ($generated@@37 $generated@@203) ($generated@@193 $generated@@29 $generated@@203 $generated@@38 $generated@@204))) ($generated@@193 $generated@@10 ($generated@@14 ($generated@@46 $generated@@203)) $generated $generated@@204))
 :pattern ( ($generated@@193 $generated@@10 ($generated@@14 ($generated@@46 $generated@@203)) $generated $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and ($generated@@194 $generated@@206) (and ($generated@@37 $generated@@205) ($generated@@193 $generated@@29 $generated@@205 $generated@@38 $generated@@206))) ($generated@@193 $generated@@10 ($generated@@14 ($generated@@47 $generated@@205)) $generated $generated@@206))
 :pattern ( ($generated@@193 $generated@@10 ($generated@@14 ($generated@@47 $generated@@205)) $generated $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and ($generated@@194 $generated@@208) (and ($generated@@37 $generated@@207) ($generated@@193 $generated@@29 $generated@@207 $generated@@38 $generated@@208))) ($generated@@193 $generated@@10 ($generated@@14 ($generated@@48 $generated@@207)) $generated $generated@@208))
 :pattern ( ($generated@@193 $generated@@10 ($generated@@14 ($generated@@48 $generated@@207)) $generated $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and ($generated@@194 $generated@@210) ($generated@@28 $generated@@29 $generated@@209 $generated@@30)) ($generated@@193 $generated@@29 $generated@@209 $generated@@30 $generated@@210))
 :pattern ( ($generated@@193 $generated@@29 $generated@@209 $generated@@30 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and ($generated@@194 $generated@@212) ($generated@@28 $generated@@29 $generated@@211 $generated@@38)) ($generated@@193 $generated@@29 $generated@@211 $generated@@38 $generated@@212))
 :pattern ( ($generated@@193 $generated@@29 $generated@@211 $generated@@38 $generated@@212))
)))
(assert (= ($generated@@24 $generated@@30) $generated@@2))
(assert (= ($generated@@213 $generated@@30) $generated@@6))
(assert (= ($generated@@24 $generated@@38) $generated@@3))
(assert (= ($generated@@213 $generated@@38) $generated@@7))
(assert (forall (($generated@@214 T@U) ) (!  (=> ($generated@@37 $generated@@214) (exists (($generated@@215 Int) ($generated@@216 Int) ($generated@@217 Int) ($generated@@218 Int) ($generated@@219 Int) ($generated@@220 Int) ) (= $generated@@214 ($generated@@33 $generated@@215 $generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))))
 :pattern ( ($generated@@37 $generated@@214))
)))
(assert (forall (($generated@@221 Int) ) (! (= ($generated@@69 $generated@@10 ($generated@@14 ($generated@@43 $generated@@221))) ($generated@@51 $generated@@138 ($generated@@69 $generated@@10 ($generated@@14 $generated@@221))))
 :pattern ( ($generated@@69 $generated@@10 ($generated@@14 ($generated@@43 $generated@@221))))
)))
(assert (forall (($generated@@222 Int) ) (! (= ($generated@@80 ($generated@@43 $generated@@222)) ($generated@@51 $generated@@29 ($generated@@80 $generated@@222)))
 :pattern ( ($generated@@80 ($generated@@43 $generated@@222)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@T) ) (! (= ($generated@@69 $generated@@224 ($generated@@51 $generated@@224 $generated@@223)) ($generated@@51 $generated@@138 ($generated@@69 $generated@@224 $generated@@223)))
 :pattern ( ($generated@@69 $generated@@224 ($generated@@51 $generated@@224 $generated@@223)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! ($generated@@193 $generated@@10 $generated@@226 $generated $generated@@225)
 :pattern ( ($generated@@193 $generated@@10 $generated@@226 $generated $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! ($generated@@28 $generated@@10 $generated@@227 $generated)
 :pattern ( ($generated@@28 $generated@@10 $generated@@227 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 () Bool)
(declare-fun $generated@@236 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@237 true))
(let (($generated@@238  (=> (and (not ($generated@@31 $generated@@228)) (= (ControlFlow 0 5) 1)) $generated@@237)))
(let (($generated@@239  (=> (and ($generated@@31 $generated@@228) ($generated@@193 $generated@@29 $generated@@228 $generated@@30 $generated@@229)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@50 $generated@@228) (or ($generated@@31 $generated@@228) ($generated@@13 ($generated@@51 $generated@@9 ($generated@@12 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@50 $generated@@228) (or ($generated@@31 $generated@@228) ($generated@@53 $generated@@228)))) (=> ($generated@@31 $generated@@228) (=> (and ($generated@@27 $generated@@228) ($generated@@37 ($generated@@26 $generated@@228))) (=> (and (and (= $generated@@230 ($generated@@26 $generated@@228)) ($generated@@193 $generated@@29 $generated@@230 $generated@@38 $generated@@229)) (and ($generated@@41 ($generated@@26 $generated@@228)) (= (ControlFlow 0 2) 1))) $generated@@237))))))))
(let (($generated@@240  (=> (= $generated@@231 ($generated@@136 $generated@@232 $generated@@233 $generated@@1 false)) (=> (and (and ($generated@@194 $generated@@229) ($generated@@234 $generated@@229)) (= $generated@@233 $generated@@229)) (=> (and (and (and $generated@@78 ($generated@@32 ($generated@@79 $generated@@235))) (and (= $generated@@236 ($generated@@79 $generated@@235)) $generated@@78)) (and (and ($generated@@28 $generated@@29 $generated@@236 $generated@@30) (= $generated@@228 $generated@@236)) (and ($generated@@193 $generated@@29 $generated@@228 $generated@@30 $generated@@229) ($generated@@50 $generated@@228)))) (and (=> (= (ControlFlow 0 6) 2) $generated@@239) (=> (= (ControlFlow 0 6) 5) $generated@@238)))))))
(let (($generated@@241  (=> (and (and ($generated@@194 $generated@@233) ($generated@@234 $generated@@233)) (and (= 4 $generated@@25) (= (ControlFlow 0 7) 6))) $generated@@240)))
$generated@@241))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
