(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@71 (Int) Int)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U T@U Int) Int)
(declare-fun $generated@@84 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@148 () Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert (= ($generated@@8 $generated@@28) 3))
(assert (forall (($generated@@32 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@32 $generated@@29)  (or (= $generated@@32 $generated@@30) (= ($generated@@31 $generated@@32) $generated@@29)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 $generated@@29))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@33 $generated@@28 $generated@@35 $generated@@34 $generated@@36) ($generated@@33 $generated@@28 $generated@@35 $generated@@29 $generated@@36))
 :pattern ( ($generated@@33 $generated@@28 $generated@@35 $generated@@34 $generated@@36))
 :pattern ( ($generated@@33 $generated@@28 $generated@@35 $generated@@29 $generated@@36))
)))
(assert (= ($generated@@24 $generated@@37) 0))
(assert (= ($generated@@38 $generated@@4 $generated@@7) $generated@@37))
(assert  (not ($generated@@39 $generated@@37)))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@41 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@41 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@41 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@8 $generated@@42) 4)) (= ($generated@@8 $generated@@43) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@8 ($generated@@44 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@44 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@44 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@44 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@33 $generated@@28 $generated@@65 $generated@@29 $generated@@66)  (or (= $generated@@65 $generated@@30) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@66 $generated@@65) $generated@@1)))))
 :pattern ( ($generated@@33 $generated@@28 $generated@@65 $generated@@29 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@67 $generated@@68 $generated@@69) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@68 $generated@@70) $generated@@1))) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@69 $generated@@70) $generated@@1))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@69 $generated@@70) $generated@@1))
)))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@71 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@40 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@40 $generated@@78 $generated@@77))
)))
(assert ($generated@@39 $generated@@1))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and (and ($generated@@79 $generated@@80) (and (or (not (= $generated@@81 $generated@@30)) (not true)) (= ($generated@@31 $generated@@81) $generated@@29))) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@80 $generated@@81) $generated@@1)))) ($generated@@33 $generated@@10 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@80 $generated@@81) $generated@@37)) $generated $generated@@80))
 :pattern ( ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@80 $generated@@81) $generated@@37)))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Int) ) (!  (=> (and (and (and ($generated@@79 $generated@@86) ($generated@@79 $generated@@87)) (or ($generated@@84 $generated@@85 $generated@@86 $generated@@88 $generated@@89) ($generated@@27 $generated@@28 $generated@@88 $generated@@34))) (and ($generated@@82 $generated@@86) ($generated@@67 $generated@@86 $generated@@87))) (=> (forall (($generated@@90 T@U) ($generated@@91 T@U) )  (=> (and (or (not (= $generated@@90 $generated@@30)) (not true)) (= $generated@@90 $generated@@88)) (= ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@86 $generated@@90) $generated@@91) ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@87 $generated@@90) $generated@@91)))) (= ($generated@@83 $generated@@85 $generated@@86 $generated@@88 $generated@@89) ($generated@@83 $generated@@85 $generated@@87 $generated@@88 $generated@@89))))
 :pattern ( ($generated@@82 $generated@@86) ($generated@@67 $generated@@86 $generated@@87) ($generated@@83 $generated@@85 $generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (!  (=> ($generated@@67 $generated@@92 $generated@@93) (=> ($generated@@33 $generated@@96 $generated@@94 $generated@@95 $generated@@92) ($generated@@33 $generated@@96 $generated@@94 $generated@@95 $generated@@93)))
 :pattern ( ($generated@@67 $generated@@92 $generated@@93) ($generated@@33 $generated@@96 $generated@@94 $generated@@95 $generated@@92))
)))
(assert  (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@97 $generated@@100 $generated@@101 $generated@@102 ($generated@@99 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@105 $generated@@106) $generated@@103)
 :weight 0
)) (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@112 $generated@@114) (= ($generated@@97 $generated@@107 $generated@@108 $generated@@109 ($generated@@99 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@114 $generated@@115) ($generated@@97 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@114 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@97 $generated@@116 $generated@@117 $generated@@118 ($generated@@99 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@97 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@13 ($generated@@97 $generated@@28 $generated@@42 $generated@@9 ($generated@@98 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))  (=> (and (or (not (= $generated@@129 $generated@@125)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@126 $generated@@129) $generated@@127)))) (= $generated@@129 $generated@@128)))
 :pattern ( ($generated@@97 $generated@@28 $generated@@42 $generated@@9 ($generated@@98 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@131 $generated@@34)  (and ($generated@@27 $generated@@28 $generated@@131 $generated@@29) (or (not (= $generated@@131 $generated@@30)) (not true))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@131 $generated@@34))
 :pattern ( ($generated@@27 $generated@@28 $generated@@131 $generated@@29))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (or (not (= $generated@@132 $generated@@134)) (not true)) (=> (and ($generated@@67 $generated@@132 $generated@@133) ($generated@@67 $generated@@133 $generated@@134)) ($generated@@67 $generated@@132 $generated@@134)))
 :pattern ( ($generated@@67 $generated@@132 $generated@@133) ($generated@@67 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (and (= ($generated@@135 ($generated@@38 $generated@@136 $generated@@137)) $generated@@136) (= ($generated@@26 ($generated@@38 $generated@@136 $generated@@137)) $generated@@137))
 :pattern ( ($generated@@38 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@40 $generated@@139 ($generated@@76 $generated@@139 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@76 $generated@@139 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and ($generated@@79 $generated@@140) (and (or (not (= $generated@@141 $generated@@30)) (not true)) (= ($generated@@31 $generated@@141) $generated@@29))) ($generated@@27 $generated@@10 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@140 $generated@@141) $generated@@37)) $generated))
 :pattern ( ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@140 $generated@@141) $generated@@37)))
)))
(assert (= ($generated@@25 $generated@@34) $generated@@3))
(assert (= ($generated@@142 $generated@@34) $generated@@6))
(assert (= ($generated@@25 $generated@@29) $generated@@5))
(assert (= ($generated@@142 $generated@@29) $generated@@6))
(assert (forall (($generated@@143 Int) ) (! (= ($generated@@76 $generated@@10 ($generated@@14 ($generated@@71 $generated@@143))) ($generated@@73 $generated@@43 ($generated@@76 $generated@@10 ($generated@@14 $generated@@143))))
 :pattern ( ($generated@@76 $generated@@10 ($generated@@14 ($generated@@71 $generated@@143))))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@76 $generated@@145 ($generated@@73 $generated@@145 $generated@@144)) ($generated@@73 $generated@@43 ($generated@@76 $generated@@145 $generated@@144)))
 :pattern ( ($generated@@76 $generated@@145 ($generated@@73 $generated@@145 $generated@@144)))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! ($generated@@33 $generated@@10 $generated@@147 $generated $generated@@146)
 :pattern ( ($generated@@33 $generated@@10 $generated@@147 $generated $generated@@146))
)))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (or ($generated@@84 $generated@@149 $generated@@150 $generated@@151 $generated@@152) (and (< 1 $generated@@148) (and (and (and (and ($generated@@79 $generated@@149) ($generated@@79 $generated@@150)) ($generated@@67 $generated@@149 $generated@@150)) ($generated@@27 $generated@@28 $generated@@151 $generated@@34)) (and (= ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@149 $generated@@151) $generated@@37))) ($generated@@71 3)) (= ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@150 $generated@@151) $generated@@37))) ($generated@@71 100)))))) (= ($generated@@83 $generated@@149 $generated@@150 $generated@@151 $generated@@152) (ite (= $generated@@152 ($generated@@71 0)) 10 (ite (= $generated@@152 ($generated@@71 1)) 10 (ite (= $generated@@152 ($generated@@71 2)) 10 (ite (= $generated@@152 ($generated@@71 3)) 10 (ite (= $generated@@152 ($generated@@71 4)) 10 10)))))))
 :pattern ( ($generated@@83 $generated@@149 $generated@@150 $generated@@151 $generated@@152) ($generated@@79 $generated@@150))
))))
(assert (forall (($generated@@153 T@U) ) (! ($generated@@27 $generated@@10 $generated@@153 $generated)
 :pattern ( ($generated@@27 $generated@@10 $generated@@153 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () Bool)
(declare-fun $generated@@168 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 47) (let (($generated@@169 true))
(let (($generated@@170  (and (=> (= (ControlFlow 0 34) (- 0 38)) (or (not (= $generated@@154 $generated@@30)) (not true))) (and (=> (= (ControlFlow 0 34) (- 0 37)) ($generated@@33 $generated@@28 $generated@@154 $generated@@34 $generated@@155)) (=> ($generated@@33 $generated@@28 $generated@@154 $generated@@34 $generated@@155) (and (=> (= (ControlFlow 0 34) (- 0 36)) ($generated@@13 ($generated@@97 $generated@@28 $generated@@42 $generated@@9 $generated@@156 $generated@@154 $generated@@37))) (and (=> (= (ControlFlow 0 34) (- 0 35)) (= ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@155 $generated@@154) $generated@@37))) ($generated@@71 3))) (=> (= ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@155 $generated@@154) $generated@@37))) ($generated@@71 3)) (=> (= (ControlFlow 0 34) (- 0 33)) (= ($generated@@71 2) ($generated@@71 2)))))))))))
(let (($generated@@171 true))
(let (($generated@@172  (=> (and (= $generated@@157 ($generated@@71 1)) (= $generated@@158 $generated@@155)) (and (and (=> (= (ControlFlow 0 40) 32) $generated@@171) (=> (= (ControlFlow 0 40) 34) $generated@@170)) (=> (= (ControlFlow 0 40) 39) $generated@@169)))))
(let (($generated@@173 true))
(let (($generated@@174  (and (=> (= (ControlFlow 0 24) (- 0 28)) (or (not (= $generated@@154 $generated@@30)) (not true))) (and (=> (= (ControlFlow 0 24) (- 0 27)) ($generated@@33 $generated@@28 $generated@@154 $generated@@34 $generated@@155)) (=> ($generated@@33 $generated@@28 $generated@@154 $generated@@34 $generated@@155) (and (=> (= (ControlFlow 0 24) (- 0 26)) ($generated@@13 ($generated@@97 $generated@@28 $generated@@42 $generated@@9 $generated@@156 $generated@@154 $generated@@37))) (and (=> (= (ControlFlow 0 24) (- 0 25)) (= ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@155 $generated@@154) $generated@@37))) ($generated@@71 100))) (=> (= ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@155 $generated@@154) $generated@@37))) ($generated@@71 100)) (=> (= (ControlFlow 0 24) (- 0 23)) (= ($generated@@71 2) ($generated@@71 2)))))))))))
(let (($generated@@175 true))
(let (($generated@@176  (=> (and (= $generated@@157 ($generated@@71 2)) (= $generated@@159 $generated@@155)) (and (and (=> (= (ControlFlow 0 30) 22) $generated@@175) (=> (= (ControlFlow 0 30) 24) $generated@@174)) (=> (= (ControlFlow 0 30) 29) $generated@@173)))))
(let (($generated@@177 true))
(let (($generated@@178  (and (=> (= (ControlFlow 0 15) (- 0 18)) (or (not (= $generated@@154 $generated@@30)) (not true))) (=> (or (not (= $generated@@154 $generated@@30)) (not true)) (=> (= $generated@@160 ($generated@@71 3)) (and (=> (= (ControlFlow 0 15) (- 0 17)) ($generated@@33 $generated@@28 $generated@@154 $generated@@34 $generated@@155)) (=> ($generated@@33 $generated@@28 $generated@@154 $generated@@34 $generated@@155) (and (=> (= (ControlFlow 0 15) (- 0 16)) (= ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@161 $generated@@154) $generated@@37))) $generated@@160)) (=> (= ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@161 $generated@@154) $generated@@37))) $generated@@160) (=> (and (and ($generated@@79 $generated@@162) ($generated@@82 $generated@@162)) (and (= $generated@@161 $generated@@162) (= (ControlFlow 0 15) (- 0 14)))) (= ($generated@@71 2) ($generated@@71 2))))))))))))
(let (($generated@@179 true))
(let (($generated@@180  (=> (and (= $generated@@157 ($generated@@71 3)) (= $generated@@161 $generated@@155)) (and (and (=> (= (ControlFlow 0 20) 13) $generated@@179) (=> (= (ControlFlow 0 20) 15) $generated@@178)) (=> (= (ControlFlow 0 20) 19) $generated@@177)))))
(let (($generated@@181 true))
(let (($generated@@182  (and (=> (= (ControlFlow 0 6) (- 0 9)) (or (not (= $generated@@154 $generated@@30)) (not true))) (=> (or (not (= $generated@@154 $generated@@30)) (not true)) (=> (= $generated@@163 ($generated@@71 100)) (and (=> (= (ControlFlow 0 6) (- 0 8)) ($generated@@33 $generated@@28 $generated@@154 $generated@@34 $generated@@155)) (=> ($generated@@33 $generated@@28 $generated@@154 $generated@@34 $generated@@155) (and (=> (= (ControlFlow 0 6) (- 0 7)) (= ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@164 $generated@@154) $generated@@37))) $generated@@163)) (=> (= ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@164 $generated@@154) $generated@@37))) $generated@@163) (=> (and (and ($generated@@79 $generated@@165) ($generated@@82 $generated@@165)) (and (= $generated@@164 $generated@@165) (= (ControlFlow 0 6) (- 0 5)))) (= ($generated@@71 2) ($generated@@71 2))))))))))))
(let (($generated@@183 true))
(let (($generated@@184  (=> (and (= $generated@@157 ($generated@@71 4)) (= $generated@@164 $generated@@155)) (and (and (=> (= (ControlFlow 0 11) 4) $generated@@183) (=> (= (ControlFlow 0 11) 6) $generated@@182)) (=> (= (ControlFlow 0 11) 10) $generated@@181)))))
(let (($generated@@185 true))
(let (($generated@@186  (=> (or (not (= $generated@@157 ($generated@@71 3))) (not true)) (and (=> (= (ControlFlow 0 12) 11) $generated@@184) (=> (= (ControlFlow 0 12) 3) $generated@@185)))))
(let (($generated@@187  (=> (or (not (= $generated@@157 ($generated@@71 2))) (not true)) (and (=> (= (ControlFlow 0 21) 20) $generated@@180) (=> (= (ControlFlow 0 21) 12) $generated@@186)))))
(let (($generated@@188  (=> (or (not (= $generated@@157 ($generated@@71 1))) (not true)) (and (=> (= (ControlFlow 0 31) 30) $generated@@176) (=> (= (ControlFlow 0 31) 21) $generated@@187)))))
(let (($generated@@189  (=> (or (not (= $generated@@157 ($generated@@71 0))) (not true)) (and (=> (= (ControlFlow 0 41) 40) $generated@@172) (=> (= (ControlFlow 0 41) 31) $generated@@188)))))
(let (($generated@@190 true))
(let (($generated@@191 true))
(let (($generated@@192  (=> (= $generated@@156 ($generated@@98 $generated@@30 $generated@@166 $generated@@1 $generated@@154)) (and (=> (= (ControlFlow 0 42) (- 0 46)) (or (not (= $generated@@154 $generated@@30)) (not true))) (=> (or (not (= $generated@@154 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 42) (- 0 45)) ($generated@@33 $generated@@28 $generated@@154 $generated@@34 $generated@@155)) (=> ($generated@@33 $generated@@28 $generated@@154 $generated@@34 $generated@@155) (=> (= ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@155 $generated@@154) $generated@@37))) ($generated@@71 3)) (and (=> (= (ControlFlow 0 42) (- 0 44)) (or (not (= $generated@@154 $generated@@30)) (not true))) (=> (or (not (= $generated@@154 $generated@@30)) (not true)) (=> (and (= $generated@@167 ($generated@@13 ($generated@@97 $generated@@28 $generated@@42 $generated@@9 $generated@@156 $generated@@154 $generated@@37))) (= ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@166 $generated@@154) $generated@@37))) ($generated@@71 100))) (and (=> (= (ControlFlow 0 42) (- 0 43)) $generated@@167) (=> $generated@@167 (and (and (=> (= (ControlFlow 0 42) 1) $generated@@191) (=> (= (ControlFlow 0 42) 2) $generated@@190)) (=> (= (ControlFlow 0 42) 41) $generated@@189)))))))))))))))
(let (($generated@@193  (=> (and ($generated@@79 $generated@@155) ($generated@@82 $generated@@155)) (=> (and (and (and ($generated@@27 $generated@@28 $generated@@154 $generated@@34) ($generated@@33 $generated@@28 $generated@@154 $generated@@34 $generated@@168)) (= 1 $generated@@148)) (and (and (= $generated@@168 $generated@@155) (and ($generated@@67 $generated@@168 $generated@@166) ($generated@@79 $generated@@166))) (= (ControlFlow 0 47) 42))) $generated@@192))))
$generated@@193))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 24) (- 25))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 7))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
