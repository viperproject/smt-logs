(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@T T@U T@U) Bool)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@T T@T) T@T)
(declare-fun $generated@@35 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@36 (T@T) T@T)
(declare-fun $generated@@37 (T@T) T@T)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@100 () Int)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@102 (T@U) Bool)
(declare-fun $generated@@104 (T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U) Bool)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@4 $generated@@21) 3))
(assert (forall (($generated@@25 T@U) ) (! (= ($generated@@20 $generated@@21 $generated@@25 $generated@@22)  (or (= $generated@@25 $generated@@23) (= ($generated@@24 $generated@@25) $generated@@22)))
 :pattern ( ($generated@@20 $generated@@21 $generated@@25 $generated@@22))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@26 $generated@@21 $generated@@28 $generated@@27 $generated@@29) ($generated@@26 $generated@@21 $generated@@28 $generated@@22 $generated@@29))
 :pattern ( ($generated@@26 $generated@@21 $generated@@28 $generated@@27 $generated@@29))
 :pattern ( ($generated@@26 $generated@@21 $generated@@28 $generated@@22 $generated@@29))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@38 T@T) ($generated@@39 T@T) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@31 $generated@@38 $generated@@39 ($generated@@35 $generated@@38 $generated@@39 $generated@@41 $generated@@42 $generated@@40) $generated@@42) $generated@@40)
 :weight 0
)) (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (or (= $generated@@47 $generated@@48) (= ($generated@@31 $generated@@43 $generated@@44 ($generated@@35 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@48) ($generated@@31 $generated@@43 $generated@@44 $generated@@46 $generated@@48)))
 :weight 0
))) (= ($generated@@4 $generated@@32) 4)) (= ($generated@@4 $generated@@33) 5)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ) (= ($generated@@4 ($generated@@34 $generated@@49 $generated@@50)) 6))) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (! (= ($generated@@36 ($generated@@34 $generated@@51 $generated@@52)) $generated@@51)
 :pattern ( ($generated@@34 $generated@@51 $generated@@52))
))) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (! (= ($generated@@37 ($generated@@34 $generated@@53 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@34 $generated@@53 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@26 $generated@@21 $generated@@55 $generated@@22 $generated@@56)  (or (= $generated@@55 $generated@@23) ($generated@@9 ($generated@@30 $generated@@5 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@56 $generated@@55) $generated@@0)))))
 :pattern ( ($generated@@26 $generated@@21 $generated@@55 $generated@@22 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> ($generated@@57 $generated@@58 $generated@@59) (forall (($generated@@60 T@U) ) (!  (=> ($generated@@9 ($generated@@30 $generated@@5 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@58 $generated@@60) $generated@@0))) ($generated@@9 ($generated@@30 $generated@@5 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@59 $generated@@60) $generated@@0))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@59 $generated@@60) $generated@@0))
)))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 $generated@@62) $generated@@62)
 :pattern ( ($generated@@61 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 ($generated@@30 $generated@@66 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@30 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@67 ($generated@@68 $generated@@69) $generated@@70) ($generated@@9 ($generated@@31 $generated@@33 $generated@@5 $generated@@69 $generated@@70)))
 :pattern ( ($generated@@67 ($generated@@68 $generated@@69) $generated@@70))
)))
(assert (= ($generated@@4 $generated@@71) 7))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@20 $generated@@71 $generated@@74 ($generated@@72 $generated@@75)) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@67 $generated@@74 $generated@@76) ($generated@@73 $generated@@76 $generated@@75))
 :pattern ( ($generated@@67 $generated@@74 $generated@@76))
)))
 :pattern ( ($generated@@20 $generated@@71 $generated@@74 ($generated@@72 $generated@@75)))
)))
(assert ($generated@@77 $generated@@0))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@78 ($generated@@64 $generated@@82 $generated@@79) $generated@@80 $generated@@81) ($generated@@26 $generated@@82 $generated@@79 $generated@@80 $generated@@81))
 :pattern ( ($generated@@78 ($generated@@64 $generated@@82 $generated@@79) $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> ($generated@@57 $generated@@83 $generated@@84) (=> ($generated@@78 $generated@@85 $generated@@86 $generated@@83) ($generated@@78 $generated@@85 $generated@@86 $generated@@84)))
 :pattern ( ($generated@@57 $generated@@83 $generated@@84) ($generated@@78 $generated@@85 $generated@@86 $generated@@83))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (!  (=> ($generated@@57 $generated@@87 $generated@@88) (=> ($generated@@26 $generated@@91 $generated@@89 $generated@@90 $generated@@87) ($generated@@26 $generated@@91 $generated@@89 $generated@@90 $generated@@88)))
 :pattern ( ($generated@@57 $generated@@87 $generated@@88) ($generated@@26 $generated@@91 $generated@@89 $generated@@90 $generated@@87))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@92 $generated@@93 $generated@@94) (and ($generated@@57 $generated@@93 $generated@@94) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (not ($generated@@77 $generated@@96)) (= ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@93 $generated@@95) $generated@@96) ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@94 $generated@@95) $generated@@96)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@94 $generated@@95) $generated@@96))
))))
 :pattern ( ($generated@@92 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@73 $generated@@97 $generated@@27) (and (= ($generated@@64 $generated@@21 ($generated@@30 $generated@@21 $generated@@97)) $generated@@97) ($generated@@20 $generated@@21 ($generated@@30 $generated@@21 $generated@@97) $generated@@27)))
 :pattern ( ($generated@@73 $generated@@97 $generated@@27))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@73 $generated@@98 $generated@@22) (and (= ($generated@@64 $generated@@21 ($generated@@30 $generated@@21 $generated@@98)) $generated@@98) ($generated@@20 $generated@@21 ($generated@@30 $generated@@21 $generated@@98) $generated@@22)))
 :pattern ( ($generated@@73 $generated@@98 $generated@@22))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@20 $generated@@21 $generated@@99 $generated@@27)  (and ($generated@@20 $generated@@21 $generated@@99 $generated@@22) (or (not (= $generated@@99 $generated@@23)) (not true))))
 :pattern ( ($generated@@20 $generated@@21 $generated@@99 $generated@@27))
 :pattern ( ($generated@@20 $generated@@21 $generated@@99 $generated@@22))
)))
(assert  (=> (<= 1 $generated@@100) (forall (($generated@@103 T@U) ) (!  (=> (or ($generated@@102 $generated@@103) (and (< 1 $generated@@100) ($generated@@20 $generated@@21 $generated@@103 $generated@@27))) (= ($generated@@101 $generated@@103) ($generated@@9 ($generated@@61 $generated@@5 ($generated@@8 true)))))
 :pattern ( ($generated@@101 $generated@@103))
))))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@9 ($generated@@31 $generated@@33 $generated@@5 ($generated@@104 $generated@@105 $generated@@106 $generated@@107) $generated@@108))  (and (and ($generated@@73 $generated@@108 $generated@@105) ($generated@@78 $generated@@108 $generated@@106 $generated@@107)) ($generated@@101 ($generated@@30 $generated@@21 $generated@@108))))
 :pattern ( ($generated@@31 $generated@@33 $generated@@5 ($generated@@104 $generated@@105 $generated@@106 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> ($generated@@109 $generated@@110 $generated@@111) (= $generated@@110 $generated@@111))
 :pattern ( ($generated@@109 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (or (not (= $generated@@112 $generated@@114)) (not true)) (=> (and ($generated@@57 $generated@@112 $generated@@113) ($generated@@57 $generated@@113 $generated@@114)) ($generated@@57 $generated@@112 $generated@@114)))
 :pattern ( ($generated@@57 $generated@@112 $generated@@113) ($generated@@57 $generated@@113 $generated@@114))
)))
(assert  (=> (<= 1 $generated@@100) (forall (($generated@@115 T@U) ) (!  (=> (or ($generated@@102 ($generated@@61 $generated@@21 $generated@@115)) (and (< 1 $generated@@100) ($generated@@20 $generated@@21 $generated@@115 $generated@@27))) (= ($generated@@101 ($generated@@61 $generated@@21 $generated@@115)) ($generated@@9 ($generated@@61 $generated@@5 ($generated@@8 true)))))
 :weight 3
 :pattern ( ($generated@@101 ($generated@@61 $generated@@21 $generated@@115)))
))))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@73 ($generated@@64 $generated@@118 $generated@@116) $generated@@117) ($generated@@20 $generated@@118 $generated@@116 $generated@@117))
 :pattern ( ($generated@@73 ($generated@@64 $generated@@118 $generated@@116) $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@26 $generated@@71 $generated@@119 ($generated@@72 $generated@@120) $generated@@121) (forall (($generated@@122 T@U) ) (!  (=> ($generated@@67 $generated@@119 $generated@@122) ($generated@@78 $generated@@122 $generated@@120 $generated@@121))
 :pattern ( ($generated@@67 $generated@@119 $generated@@122))
)))
 :pattern ( ($generated@@26 $generated@@71 $generated@@119 ($generated@@72 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@72 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@72 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@72 $generated@@126)) $generated)
 :pattern ( ($generated@@72 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@30 $generated@@128 ($generated@@64 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@64 $generated@@128 $generated@@127))
)))
(assert  (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@129 $generated@@132 $generated@@133 $generated@@134 ($generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@129 $generated@@139 $generated@@140 $generated@@141 ($generated@@131 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@129 $generated@@148 $generated@@149 $generated@@150 ($generated@@131 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@129 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@9 ($generated@@129 $generated@@21 $generated@@32 $generated@@5 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@9 ($generated@@30 $generated@@5 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@129 $generated@@21 $generated@@32 $generated@@5 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@73 $generated@@163 ($generated@@72 $generated@@164)) (and (= ($generated@@64 $generated@@71 ($generated@@30 $generated@@71 $generated@@163)) $generated@@163) ($generated@@20 $generated@@71 ($generated@@30 $generated@@71 $generated@@163) ($generated@@72 $generated@@164))))
 :pattern ( ($generated@@73 $generated@@163 ($generated@@72 $generated@@164)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@165 ($generated@@35 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@166 $generated@@167 ($generated@@35 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@166 $generated@@167) $generated@@168 $generated@@169))) ($generated@@57 $generated@@166 ($generated@@35 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@166 $generated@@167 ($generated@@35 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@166 $generated@@167) $generated@@168 $generated@@169))))
 :pattern ( ($generated@@35 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@166 $generated@@167 ($generated@@35 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@166 $generated@@167) $generated@@168 $generated@@169)))
)))
(assert (= ($generated@@125 $generated@@27) $generated@@1))
(assert (= ($generated@@170 $generated@@27) $generated@@3))
(assert (= ($generated@@125 $generated@@22) $generated@@2))
(assert (= ($generated@@170 $generated@@22) $generated@@3))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@109 $generated@@171 $generated@@172) (forall (($generated@@173 T@U) ) (! (= ($generated@@67 $generated@@171 $generated@@173) ($generated@@67 $generated@@172 $generated@@173))
 :pattern ( ($generated@@67 $generated@@171 $generated@@173))
 :pattern ( ($generated@@67 $generated@@172 $generated@@173))
)))
 :pattern ( ($generated@@109 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@64 $generated@@175 ($generated@@61 $generated@@175 $generated@@174)) ($generated@@61 $generated@@33 ($generated@@64 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@64 $generated@@175 ($generated@@61 $generated@@175 $generated@@174)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Bool)
(declare-fun $generated@@191 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@192  (=> (and (forall (($generated@@193 T@U) ) (!  (=> ($generated@@20 $generated@@21 $generated@@193 $generated@@27) ($generated@@102 $generated@@193))
 :pattern ( ($generated@@101 $generated@@193))
)) (= $generated@@176 ($generated@@68 ($generated@@104 $generated@@27 $generated@@27 $generated@@177)))) (=> (and (and (and (and ($generated@@20 $generated@@71 $generated@@178 ($generated@@72 $generated@@27)) ($generated@@26 $generated@@71 $generated@@178 ($generated@@72 $generated@@27) $generated@@177)) (and ($generated@@165 $generated@@179) ($generated@@180 $generated@@179))) (and (and ($generated@@20 $generated@@71 $generated@@181 ($generated@@72 $generated@@27)) ($generated@@26 $generated@@71 $generated@@181 ($generated@@72 $generated@@27) $generated@@179)) ($generated@@109 $generated@@181 $generated@@176))) (and (and (and (forall (($generated@@194 T@U) ) (!  (=> (and (or (not (= $generated@@194 $generated@@23)) (not true)) ($generated@@9 ($generated@@30 $generated@@5 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@177 $generated@@194) $generated@@0)))) (= ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@179 $generated@@194) ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@177 $generated@@194)))
 :pattern ( ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@179 $generated@@194))
)) ($generated@@92 $generated@@177 $generated@@179)) (and (or (not (= $generated@@182 $generated@@23)) (not true)) ($generated@@20 $generated@@21 $generated@@182 $generated@@22))) (and (and (not ($generated@@9 ($generated@@30 $generated@@5 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@179 $generated@@182) $generated@@0)))) (= $generated@@183 ($generated@@35 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@179 $generated@@182 ($generated@@35 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@179 $generated@@182) $generated@@0 ($generated@@64 $generated@@5 ($generated@@8 true)))))) (and ($generated@@165 $generated@@183) ($generated@@180 $generated@@183))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) true) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@67 $generated@@176 ($generated@@64 $generated@@21 $generated@@182))) (=> ($generated@@67 $generated@@176 ($generated@@64 $generated@@21 $generated@@182)) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not ($generated@@67 $generated@@181 ($generated@@64 $generated@@21 $generated@@182)))) (=> (not ($generated@@67 $generated@@181 ($generated@@64 $generated@@21 $generated@@182))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@9 ($generated@@61 $generated@@5 ($generated@@8 false))))))))))))))
(let (($generated@@195  (=> (and (not ($generated@@101 $generated@@184)) (= (ControlFlow 0 9) 2)) $generated@@192)))
(let (($generated@@196  (=> (and ($generated@@101 $generated@@184) (= (ControlFlow 0 8) 2)) $generated@@192)))
(let (($generated@@197  (=> (and (and ($generated@@20 $generated@@21 $generated@@184 $generated@@27) ($generated@@26 $generated@@21 $generated@@184 $generated@@27 $generated@@177)) (and ($generated@@26 $generated@@21 $generated@@184 $generated@@27 $generated@@177) ($generated@@102 $generated@@184))) (and (=> (= (ControlFlow 0 10) 8) $generated@@196) (=> (= (ControlFlow 0 10) 9) $generated@@195)))))
(let (($generated@@198  (=> (and (not (and ($generated@@20 $generated@@21 $generated@@184 $generated@@27) ($generated@@26 $generated@@21 $generated@@184 $generated@@27 $generated@@177))) (= (ControlFlow 0 7) 2)) $generated@@192)))
(let (($generated@@199  (=> (= $generated@@185 ($generated@@130 $generated@@23 $generated@@177 $generated@@0 false)) (=> (and (and ($generated@@20 $generated@@71 $generated@@186 ($generated@@72 $generated@@27)) ($generated@@26 $generated@@71 $generated@@186 ($generated@@72 $generated@@27) $generated@@177)) (and ($generated@@20 $generated@@71 $generated@@187 ($generated@@72 $generated@@27)) ($generated@@26 $generated@@71 $generated@@187 ($generated@@72 $generated@@27) $generated@@177))) (and (=> (= (ControlFlow 0 11) 10) $generated@@197) (=> (= (ControlFlow 0 11) 7) $generated@@198))))))
(let (($generated@@200  (=> (and ($generated@@165 $generated@@177) ($generated@@180 $generated@@177)) (=> (and (and ($generated@@20 $generated@@71 $generated@@188 ($generated@@72 $generated@@27)) ($generated@@26 $generated@@71 $generated@@188 ($generated@@72 $generated@@27) $generated@@177)) true) (=> (and (and (and ($generated@@20 $generated@@71 $generated@@189 ($generated@@72 $generated@@27)) ($generated@@26 $generated@@71 $generated@@189 ($generated@@72 $generated@@27) $generated@@177)) true) (and (and (=> $generated@@190 (and ($generated@@20 $generated@@21 $generated@@191 $generated@@27) ($generated@@26 $generated@@21 $generated@@191 $generated@@27 $generated@@177))) true) (and (= 2 $generated@@100) (= (ControlFlow 0 12) 11)))) $generated@@199)))))
$generated@@200))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
