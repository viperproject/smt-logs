(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () Int)
(declare-fun $generated@@29 (T@U Int T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (Int T@U) Bool)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (Int Int) Int)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (Int) T@U)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@U T@U T@U) Bool)
(declare-fun $generated@@74 (T@U Int) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@102 (T@U) Int)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@T T@T) T@T)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@114 (T@T) T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25)
 :pattern ( ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25))
)))
(assert (= ($generated@@26 $generated@@27) 0))
(assert  (and (= ($generated@@5 $generated@@34) 3) (= ($generated@@5 $generated@@39) 4)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@42 T@U) ($generated@@43 Int) ($generated@@44 T@U) ) (!  (=> (or ($generated@@31 $generated@@43 $generated@@44) (and (< 0 $generated@@28) (and (<= ($generated@@32 0) $generated@@43) ($generated@@33 $generated@@34 $generated@@44 ($generated@@35 $generated))))) (and (=> (or (not (= $generated@@43 ($generated@@32 0))) (not true)) (let (($generated@@45 $generated@@43))
(let (($generated@@46 (ite (= ($generated@@36 $generated@@43 ($generated@@32 2)) ($generated@@32 0)) ($generated@@37 $generated@@27 ($generated@@38 $generated@@39 ($generated@@40 49))) ($generated@@37 $generated@@27 ($generated@@38 $generated@@39 ($generated@@40 48))))))
($generated@@31 (- $generated@@45 1) ($generated@@41 $generated@@44 $generated@@46))))) (= ($generated@@29 ($generated@@30 $generated@@42) $generated@@43 $generated@@44) (ite (= $generated@@43 ($generated@@32 0)) $generated@@44 (let (($generated@@47 $generated@@43))
(let (($generated@@48 (ite (= ($generated@@36 $generated@@43 ($generated@@32 2)) ($generated@@32 0)) ($generated@@37 $generated@@27 ($generated@@38 $generated@@39 ($generated@@40 49))) ($generated@@37 $generated@@27 ($generated@@38 $generated@@39 ($generated@@40 48))))))
($generated@@29 $generated@@42 (- $generated@@47 1) ($generated@@41 $generated@@44 $generated@@48))))))))
 :pattern ( ($generated@@29 ($generated@@30 $generated@@42) $generated@@43 $generated@@44))
))))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@32 $generated@@49) $generated@@49)
 :pattern ( ($generated@@32 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (and ($generated@@33 $generated@@34 $generated@@54 ($generated@@35 $generated@@56)) ($generated@@53 $generated@@55 $generated@@56)) ($generated@@33 $generated@@34 ($generated@@37 $generated@@54 $generated@@55) ($generated@@35 $generated@@56)))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@37 $generated@@54 $generated@@55) ($generated@@35 $generated@@56)))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@38 $generated@@59 ($generated@@57 $generated@@59 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@57 $generated@@59 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@33 $generated@@7 $generated@@60 $generated@@23) (<= ($generated@@32 0) ($generated@@12 $generated@@60)))
 :pattern ( ($generated@@33 $generated@@7 $generated@@60 $generated@@23))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@26 ($generated@@37 $generated@@61 $generated@@62)) (+ 1 ($generated@@26 $generated@@61)))
 :pattern ( ($generated@@37 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@63 ($generated@@38 $generated@@67 $generated@@64) $generated@@65 $generated@@66) ($generated@@22 $generated@@67 $generated@@64 $generated@@65 $generated@@66))
 :pattern ( ($generated@@63 ($generated@@38 $generated@@67 $generated@@64) $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@26 ($generated@@41 $generated@@68 $generated@@69)) (+ ($generated@@26 $generated@@68) ($generated@@26 $generated@@69)))
 :pattern ( ($generated@@26 ($generated@@41 $generated@@68 $generated@@69)))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@70 T@U) ($generated@@71 Int) ($generated@@72 T@U) ) (!  (=> (or ($generated@@31 $generated@@71 $generated@@72) (and (< 0 $generated@@28) (and (<= ($generated@@32 0) $generated@@71) ($generated@@33 $generated@@34 $generated@@72 ($generated@@35 $generated))))) ($generated@@33 $generated@@34 ($generated@@29 $generated@@70 $generated@@71 $generated@@72) ($generated@@35 $generated)))
 :pattern ( ($generated@@29 $generated@@70 $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@53 $generated@@73 $generated@@23) (and (= ($generated@@38 $generated@@7 ($generated@@57 $generated@@7 $generated@@73)) $generated@@73) ($generated@@33 $generated@@7 ($generated@@57 $generated@@7 $generated@@73) $generated@@23)))
 :pattern ( ($generated@@53 $generated@@73 $generated@@23))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 Int) ($generated@@77 T@U) ) (!  (and (=> (= $generated@@76 ($generated@@26 $generated@@75)) (= ($generated@@74 ($generated@@37 $generated@@75 $generated@@77) $generated@@76) $generated@@77)) (=> (or (not (= $generated@@76 ($generated@@26 $generated@@75))) (not true)) (= ($generated@@74 ($generated@@37 $generated@@75 $generated@@77) $generated@@76) ($generated@@74 $generated@@75 $generated@@76))))
 :pattern ( ($generated@@74 ($generated@@37 $generated@@75 $generated@@77) $generated@@76))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@78 T@U) ($generated@@79 Int) ($generated@@80 T@U) ) (!  (=> (or ($generated@@31 ($generated@@32 $generated@@79) ($generated@@50 $generated@@34 $generated@@80)) (and (< 0 $generated@@28) (and (<= ($generated@@32 0) $generated@@79) ($generated@@33 $generated@@34 $generated@@80 ($generated@@35 $generated))))) (and (=> (or (not (= ($generated@@32 $generated@@79) ($generated@@32 0))) (not true)) (let (($generated@@81 ($generated@@32 $generated@@79)))
(let (($generated@@82 (ite (= ($generated@@32 ($generated@@36 $generated@@79 ($generated@@32 2))) ($generated@@32 0)) ($generated@@37 $generated@@27 ($generated@@38 $generated@@39 ($generated@@40 49))) ($generated@@37 $generated@@27 ($generated@@38 $generated@@39 ($generated@@40 48))))))
($generated@@31 (- $generated@@81 1) ($generated@@41 $generated@@80 $generated@@82))))) (= ($generated@@29 ($generated@@30 $generated@@78) ($generated@@32 $generated@@79) ($generated@@50 $generated@@34 $generated@@80)) (ite (= ($generated@@32 $generated@@79) ($generated@@32 0)) $generated@@80 (let (($generated@@83 ($generated@@32 $generated@@79)))
(let (($generated@@84 (ite (= ($generated@@32 ($generated@@36 $generated@@79 ($generated@@32 2))) ($generated@@32 0)) ($generated@@37 $generated@@27 ($generated@@38 $generated@@39 ($generated@@40 49))) ($generated@@37 $generated@@27 ($generated@@38 $generated@@39 ($generated@@40 48))))))
($generated@@29 ($generated@@30 $generated@@78) ($generated@@32 (- $generated@@83 1)) ($generated@@41 $generated@@80 $generated@@84))))))))
 :weight 3
 :pattern ( ($generated@@29 ($generated@@30 $generated@@78) ($generated@@32 $generated@@79) ($generated@@50 $generated@@34 $generated@@80)))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 Int) ($generated@@87 T@U) ) (! (= ($generated@@29 ($generated@@30 $generated@@85) $generated@@86 $generated@@87) ($generated@@29 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@29 ($generated@@30 $generated@@85) $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@53 $generated@@88 $generated) (and (= ($generated@@38 $generated@@39 ($generated@@57 $generated@@39 $generated@@88)) $generated@@88) ($generated@@33 $generated@@39 ($generated@@57 $generated@@39 $generated@@88) $generated)))
 :pattern ( ($generated@@53 $generated@@88 $generated))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@53 ($generated@@38 $generated@@91 $generated@@89) $generated@@90) ($generated@@33 $generated@@91 $generated@@89 $generated@@90))
 :pattern ( ($generated@@53 ($generated@@38 $generated@@91 $generated@@89) $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (! (<= 0 ($generated@@26 $generated@@92))
 :pattern ( ($generated@@26 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@22 $generated@@34 $generated@@93 ($generated@@35 $generated@@94) $generated@@95) (forall (($generated@@96 Int) ) (!  (=> (and (<= 0 $generated@@96) (< $generated@@96 ($generated@@26 $generated@@93))) ($generated@@63 ($generated@@74 $generated@@93 $generated@@96) $generated@@94 $generated@@95))
 :pattern ( ($generated@@74 $generated@@93 $generated@@96))
)))
 :pattern ( ($generated@@22 $generated@@34 $generated@@93 ($generated@@35 $generated@@94) $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@97 ($generated@@35 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@35 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@21 ($generated@@35 $generated@@99)) $generated@@1)
 :pattern ( ($generated@@35 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@57 $generated@@101 ($generated@@38 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@38 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@103 Int) ) (!  (=> (or (and (<= 0 $generated@@103) (< $generated@@103 55296)) (and (<= 57344 $generated@@103) (< $generated@@103 1114112))) (= ($generated@@102 ($generated@@40 $generated@@103)) $generated@@103))
 :pattern ( ($generated@@40 $generated@@103))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@104 $generated@@115 $generated@@116 $generated@@117 ($generated@@111 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@120 $generated@@121) $generated@@118)
 :weight 0
)) (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@104 $generated@@122 $generated@@123 $generated@@124 ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@104 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@104 $generated@@131 $generated@@132 $generated@@133 ($generated@@111 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@104 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)))) (= ($generated@@5 $generated@@105) 5)) (= ($generated@@5 $generated@@106) 6)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@108 $generated@@140 $generated@@141 ($generated@@112 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@142) $generated@@144) $generated@@142)
 :weight 0
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@108 $generated@@145 $generated@@146 ($generated@@112 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@108 $generated@@145 $generated@@146 $generated@@148 $generated@@150)))
 :weight 0
))) (= ($generated@@5 $generated@@109) 7)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (= ($generated@@5 ($generated@@110 $generated@@151 $generated@@152)) 8))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@113 ($generated@@110 $generated@@153 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@110 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@114 ($generated@@110 $generated@@155 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@110 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@10 ($generated@@104 $generated@@105 $generated@@106 $generated@@6 ($generated@@107 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@10 ($generated@@57 $generated@@6 ($generated@@108 $generated@@106 $generated@@109 ($generated@@108 $generated@@105 ($generated@@110 $generated@@106 $generated@@109) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@104 $generated@@105 $generated@@106 $generated@@6 ($generated@@107 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 Int) ($generated@@164 Int) ) (! (= ($generated@@36 $generated@@163 $generated@@164) (mod $generated@@163 $generated@@164))
 :pattern ( ($generated@@36 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (and (= ($generated@@165 ($generated@@37 $generated@@167 $generated@@168)) $generated@@167) (= ($generated@@166 ($generated@@37 $generated@@167 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@37 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@53 $generated@@169 ($generated@@35 $generated@@170)) (and (= ($generated@@38 $generated@@34 ($generated@@57 $generated@@34 $generated@@169)) $generated@@169) ($generated@@33 $generated@@34 ($generated@@57 $generated@@34 $generated@@169) ($generated@@35 $generated@@170))))
 :pattern ( ($generated@@53 $generated@@169 ($generated@@35 $generated@@170)))
)))
(assert (forall (($generated@@171 T@U) ) (!  (and (= ($generated@@40 ($generated@@102 $generated@@171)) $generated@@171) (or (and (<= 0 ($generated@@102 $generated@@171)) (< ($generated@@102 $generated@@171) 55296)) (and (<= 57344 ($generated@@102 $generated@@171)) (< ($generated@@102 $generated@@171) 1114112))))
 :pattern ( ($generated@@102 $generated@@171))
)))
(assert (= ($generated@@21 $generated@@23) $generated@@3))
(assert (= ($generated@@172 $generated@@23) $generated@@4))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Int) ) (!  (and (=> (< $generated@@175 ($generated@@26 $generated@@173)) (= ($generated@@74 ($generated@@41 $generated@@173 $generated@@174) $generated@@175) ($generated@@74 $generated@@173 $generated@@175))) (=> (<= ($generated@@26 $generated@@173) $generated@@175) (= ($generated@@74 ($generated@@41 $generated@@173 $generated@@174) $generated@@175) ($generated@@74 $generated@@174 (- $generated@@175 ($generated@@26 $generated@@173))))))
 :pattern ( ($generated@@74 ($generated@@41 $generated@@173 $generated@@174) $generated@@175))
)))
(assert (forall (($generated@@176 Int) ) (! (= ($generated@@38 $generated@@7 ($generated@@11 ($generated@@32 $generated@@176))) ($generated@@50 $generated@@109 ($generated@@38 $generated@@7 ($generated@@11 $generated@@176))))
 :pattern ( ($generated@@38 $generated@@7 ($generated@@11 ($generated@@32 $generated@@176))))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@38 $generated@@178 ($generated@@50 $generated@@178 $generated@@177)) ($generated@@50 $generated@@109 ($generated@@38 $generated@@178 $generated@@177)))
 :pattern ( ($generated@@38 $generated@@178 ($generated@@50 $generated@@178 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= ($generated@@26 $generated@@179) 0) (= $generated@@179 $generated@@27))
 :pattern ( ($generated@@26 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! ($generated@@22 $generated@@39 $generated@@181 $generated $generated@@180)
 :pattern ( ($generated@@22 $generated@@39 $generated@@181 $generated $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@182 ($generated@@35 $generated@@183)) (forall (($generated@@184 Int) ) (!  (=> (and (<= 0 $generated@@184) (< $generated@@184 ($generated@@26 $generated@@182))) ($generated@@53 ($generated@@74 $generated@@182 $generated@@184) $generated@@183))
 :pattern ( ($generated@@74 $generated@@182 $generated@@184))
)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@182 ($generated@@35 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ) (! ($generated@@33 $generated@@39 $generated@@185 $generated)
 :pattern ( ($generated@@33 $generated@@39 $generated@@185 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@200  (=> (= $generated@@186 $generated@@187) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@33 $generated@@7 ($generated@@11 (- $generated@@188 1)) $generated@@23)) (=> ($generated@@33 $generated@@7 ($generated@@11 (- $generated@@188 1)) $generated@@23) (=> (and (and (= $generated@@189 (- $generated@@188 1)) ($generated@@22 $generated@@7 ($generated@@11 $generated@@189) $generated@@23 $generated@@190)) (and (= $generated@@191 ($generated@@41 $generated@@192 $generated@@186)) ($generated@@22 $generated@@34 $generated@@191 ($generated@@35 $generated) $generated@@190))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@193) (= $generated@@189 $generated@@193))) (=> (or (<= 0 $generated@@193) (= $generated@@189 $generated@@193)) (=> (= (ControlFlow 0 4) (- 0 3)) (or (< $generated@@189 $generated@@193) (and (= $generated@@189 $generated@@193) (< ($generated@@194 $generated@@191) ($generated@@194 $generated@@192)))))))))))))
(let (($generated@@201  (=> (and (and (or (not (= ($generated@@36 $generated@@193 ($generated@@32 2)) ($generated@@32 0))) (not true)) (= $generated@@187 ($generated@@50 $generated@@34 ($generated@@37 $generated@@27 ($generated@@38 $generated@@39 ($generated@@40 48)))))) (and ($generated@@33 $generated@@34 $generated@@187 ($generated@@35 $generated)) (= (ControlFlow 0 8) 4))) $generated@@200)))
(let (($generated@@202  (=> (and (and (= ($generated@@36 $generated@@193 ($generated@@32 2)) ($generated@@32 0)) (= $generated@@187 ($generated@@50 $generated@@34 ($generated@@37 $generated@@27 ($generated@@38 $generated@@39 ($generated@@40 49)))))) (and ($generated@@33 $generated@@34 $generated@@187 ($generated@@35 $generated)) (= (ControlFlow 0 7) 4))) $generated@@200)))
(let (($generated@@203  (=> (and (and (or (not (= $generated@@193 ($generated@@32 0))) (not true)) (= $generated@@195 $generated@@193)) (and ($generated@@33 $generated@@7 ($generated@@11 $generated@@195) $generated@@23) (= $generated@@188 $generated@@195))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (not (= ($generated@@32 2) 0)) (not true))) (=> (or (not (= ($generated@@32 2) 0)) (not true)) (and (=> (= (ControlFlow 0 9) 7) $generated@@202) (=> (= (ControlFlow 0 9) 8) $generated@@201)))))))
(let (($generated@@204 true))
(let (($generated@@205 true))
(let (($generated@@206  (=> (= $generated@@196 ($generated@@107 $generated@@197 $generated@@190 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 11) 1) $generated@@205) (=> (= (ControlFlow 0 11) 2) $generated@@204)) (=> (= (ControlFlow 0 11) 9) $generated@@203)))))
(let (($generated@@207  (=> (and ($generated@@198 $generated@@190) ($generated@@199 $generated@@190)) (=> (and (and (<= ($generated@@32 0) $generated@@193) ($generated@@33 $generated@@34 $generated@@192 ($generated@@35 $generated))) (and (= 0 $generated@@28) (= (ControlFlow 0 12) 11))) $generated@@206))))
$generated@@207)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
