(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@36 (T@U Int) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Int)
(declare-fun $generated@@39 (T@U) Int)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 (T@T T@U T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@116 (T@U T@U T@U) Bool)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@133 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Int)
(declare-fun $generated@@189 (T@U) Int)
(declare-fun $generated@@195 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated) $generated@@0))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (and ($generated@@32 $generated@@34) ($generated@@32 $generated@@35)) (= ($generated@@31 $generated@@34 $generated@@35) (= ($generated@@33 $generated@@34) ($generated@@33 $generated@@35))))
 :pattern ( ($generated@@31 $generated@@34 $generated@@35) ($generated@@32 $generated@@34))
 :pattern ( ($generated@@31 $generated@@34 $generated@@35) ($generated@@32 $generated@@35))
)))
(assert (= ($generated@@14 $generated@@41) 3))
(assert (forall (($generated@@42 T@U) ($generated@@43 Int) ) (!  (=> (and (<= 0 $generated@@43) (< $generated@@43 ($generated@@38 $generated@@42))) (< ($generated@@39 ($generated@@40 $generated@@41 ($generated@@36 $generated@@42 $generated@@43))) ($generated@@39 ($generated@@37 $generated@@42))))
 :pattern ( ($generated@@36 $generated@@42 $generated@@43) ($generated@@37 $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 Int) ) (!  (=> (and (<= 0 $generated@@46) (< $generated@@46 ($generated@@38 $generated@@45))) (< ($generated@@39 ($generated@@40 $generated@@41 ($generated@@36 $generated@@45 $generated@@46))) ($generated@@39 ($generated@@44 $generated@@45))))
 :pattern ( ($generated@@36 $generated@@45 $generated@@46) ($generated@@44 $generated@@45))
)))
(assert (= ($generated@@38 $generated@@47) 0))
(assert (= ($generated@@48 $generated@@49) $generated@@6))
(assert (= ($generated@@14 $generated@@51) 4))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@50 $generated@@51 $generated@@54 $generated@@52 $generated@@55) ($generated@@50 $generated@@51 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@50 $generated@@51 $generated@@54 $generated@@52 $generated@@55))
 :pattern ( ($generated@@50 $generated@@51 $generated@@54 $generated@@53 $generated@@55))
)))
(assert ($generated@@56 $generated@@41 $generated@@49 $generated@@57))
(assert  (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@59 $generated@@66 $generated@@67 ($generated@@63 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@70) $generated@@68)
 :weight 0
)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (or (= $generated@@75 $generated@@76) (= ($generated@@59 $generated@@71 $generated@@72 ($generated@@63 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@76) ($generated@@59 $generated@@71 $generated@@72 $generated@@74 $generated@@76)))
 :weight 0
))) (= ($generated@@14 $generated@@60) 5)) (= ($generated@@14 $generated@@61) 6)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (= ($generated@@14 ($generated@@62 $generated@@77 $generated@@78)) 7))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@65 ($generated@@62 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@62 $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@50 $generated@@51 $generated@@83 $generated@@53 $generated@@84)  (or (= $generated@@83 $generated@@58) ($generated@@19 ($generated@@40 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@51 ($generated@@62 $generated@@60 $generated@@61) $generated@@84 $generated@@83) $generated@@2)))))
 :pattern ( ($generated@@50 $generated@@51 $generated@@83 $generated@@53 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@31 $generated@@85 $generated@@86) (= $generated@@85 $generated@@86))
 :pattern ( ($generated@@31 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@87 $generated@@88 $generated@@89) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@19 ($generated@@40 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@51 ($generated@@62 $generated@@60 $generated@@61) $generated@@88 $generated@@90) $generated@@2))) ($generated@@19 ($generated@@40 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@51 ($generated@@62 $generated@@60 $generated@@61) $generated@@89 $generated@@90) $generated@@2))))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@51 ($generated@@62 $generated@@60 $generated@@61) $generated@@89 $generated@@90) $generated@@2))
)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 $generated@@92) $generated@@92)
 :pattern ( ($generated@@91 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@32 $generated@@94) (= ($generated@@48 $generated@@94) $generated@@3))
 :pattern ( ($generated@@32 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@95 $generated@@96) (= ($generated@@48 $generated@@96) $generated@@5))
 :pattern ( ($generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@97 $generated@@98) (= ($generated@@48 $generated@@98) $generated@@6))
 :pattern ( ($generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@99 $generated@@100) (= ($generated@@48 $generated@@100) $generated@@8))
 :pattern ( ($generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@101 $generated@@102 $generated@@103)  (and (= ($generated@@38 $generated@@102) ($generated@@38 $generated@@103)) (forall (($generated@@104 Int) ) (!  (=> (and (<= 0 $generated@@104) (< $generated@@104 ($generated@@38 $generated@@102))) (= ($generated@@36 $generated@@102 $generated@@104) ($generated@@36 $generated@@103 $generated@@104)))
 :pattern ( ($generated@@36 $generated@@102 $generated@@104))
 :pattern ( ($generated@@36 $generated@@103 $generated@@104))
))))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@105 $generated@@107 ($generated@@40 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@40 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@97 $generated@@108) (= $generated@@108 $generated@@49))
 :pattern ( ($generated@@97 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@32 $generated@@110) (exists (($generated@@111 T@U) ) (= $generated@@110 ($generated@@109 $generated@@111))))
 :pattern ( ($generated@@32 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@95 $generated@@112) (exists (($generated@@113 T@U) ) (= $generated@@112 ($generated@@37 $generated@@113))))
 :pattern ( ($generated@@95 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@99 $generated@@114) (exists (($generated@@115 T@U) ) (= $generated@@114 ($generated@@44 $generated@@115))))
 :pattern ( ($generated@@99 $generated@@114))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@116 ($generated@@105 $generated@@120 $generated@@117) $generated@@118 $generated@@119) ($generated@@50 $generated@@120 $generated@@117 $generated@@118 $generated@@119))
 :pattern ( ($generated@@116 ($generated@@105 $generated@@120 $generated@@117) $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> ($generated@@87 $generated@@121 $generated@@122) (=> ($generated@@116 $generated@@123 $generated@@124 $generated@@121) ($generated@@116 $generated@@123 $generated@@124 $generated@@122)))
 :pattern ( ($generated@@87 $generated@@121 $generated@@122) ($generated@@116 $generated@@123 $generated@@124 $generated@@121))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@T) ) (!  (=> ($generated@@87 $generated@@125 $generated@@126) (=> ($generated@@50 $generated@@129 $generated@@127 $generated@@128 $generated@@125) ($generated@@50 $generated@@129 $generated@@127 $generated@@128 $generated@@126)))
 :pattern ( ($generated@@87 $generated@@125 $generated@@126) ($generated@@50 $generated@@129 $generated@@127 $generated@@128 $generated@@125))
)))
(assert (forall (($generated@@132 T@U) ) (!  (and (= ($generated@@30 ($generated@@130 $generated@@132)) $generated@@4) (= ($generated@@131 ($generated@@130 $generated@@132)) $generated@@11))
 :pattern ( ($generated@@130 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@133 $generated@@134 $generated@@57) (and (= ($generated@@105 $generated@@41 ($generated@@40 $generated@@41 $generated@@134)) $generated@@134) ($generated@@56 $generated@@41 ($generated@@40 $generated@@41 $generated@@134) $generated@@57)))
 :pattern ( ($generated@@133 $generated@@134 $generated@@57))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> ($generated@@133 $generated@@135 $generated@@53) (and (= ($generated@@105 $generated@@51 ($generated@@40 $generated@@51 $generated@@135)) $generated@@135) ($generated@@56 $generated@@51 ($generated@@40 $generated@@51 $generated@@135) $generated@@53)))
 :pattern ( ($generated@@133 $generated@@135 $generated@@53))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@133 $generated@@136 $generated@@52) (and (= ($generated@@105 $generated@@51 ($generated@@40 $generated@@51 $generated@@136)) $generated@@136) ($generated@@56 $generated@@51 ($generated@@40 $generated@@51 $generated@@136) $generated@@52)))
 :pattern ( ($generated@@133 $generated@@136 $generated@@52))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@56 $generated@@51 $generated@@137 $generated@@52)  (and ($generated@@56 $generated@@51 $generated@@137 $generated@@53) (or (not (= $generated@@137 $generated@@58)) (not true))))
 :pattern ( ($generated@@56 $generated@@51 $generated@@137 $generated@@52))
 :pattern ( ($generated@@56 $generated@@51 $generated@@137 $generated@@53))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and ($generated@@95 $generated@@139) ($generated@@95 $generated@@140)) (= ($generated@@31 $generated@@139 $generated@@140) ($generated@@101 ($generated@@138 $generated@@139) ($generated@@138 $generated@@140))))
 :pattern ( ($generated@@31 $generated@@139 $generated@@140) ($generated@@95 $generated@@139))
 :pattern ( ($generated@@31 $generated@@139 $generated@@140) ($generated@@95 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@141 $generated@@144) (= ($generated@@50 $generated@@41 ($generated@@109 $generated@@143) ($generated@@130 $generated@@142) $generated@@144) ($generated@@116 $generated@@143 $generated@@142 $generated@@144)))
 :pattern ( ($generated@@50 $generated@@41 ($generated@@109 $generated@@143) ($generated@@130 $generated@@142) $generated@@144))
)))
(assert (= ($generated@@14 $generated@@145) 8))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and ($generated@@141 $generated@@148) (and ($generated@@95 $generated@@147) (exists (($generated@@149 T@U) ) (! ($generated@@50 $generated@@41 $generated@@147 ($generated@@130 $generated@@149) $generated@@148)
 :pattern ( ($generated@@50 $generated@@41 $generated@@147 ($generated@@130 $generated@@149) $generated@@148))
)))) ($generated@@50 $generated@@145 ($generated@@138 $generated@@147) ($generated@@146 $generated) $generated@@148))
 :pattern ( ($generated@@50 $generated@@145 ($generated@@138 $generated@@147) ($generated@@146 $generated) $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@141 $generated@@152) (= ($generated@@50 $generated@@41 ($generated@@37 $generated@@151) ($generated@@130 $generated@@150) $generated@@152) ($generated@@50 $generated@@145 $generated@@151 ($generated@@146 $generated) $generated@@152)))
 :pattern ( ($generated@@50 $generated@@41 ($generated@@37 $generated@@151) ($generated@@130 $generated@@150) $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> ($generated@@56 $generated@@41 $generated@@154 ($generated@@130 $generated@@153)) (or ($generated@@32 $generated@@154) ($generated@@95 $generated@@154)))
 :pattern ( ($generated@@95 $generated@@154) ($generated@@56 $generated@@41 $generated@@154 ($generated@@130 $generated@@153)))
 :pattern ( ($generated@@32 $generated@@154) ($generated@@56 $generated@@41 $generated@@154 ($generated@@130 $generated@@153)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@101 $generated@@155 $generated@@156) (= $generated@@155 $generated@@156))
 :pattern ( ($generated@@101 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> ($generated@@56 $generated@@41 $generated@@157 $generated@@57) (or ($generated@@97 $generated@@157) ($generated@@99 $generated@@157)))
 :pattern ( ($generated@@99 $generated@@157) ($generated@@56 $generated@@41 $generated@@157 $generated@@57))
 :pattern ( ($generated@@97 $generated@@157) ($generated@@56 $generated@@41 $generated@@157 $generated@@57))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (or (not (= $generated@@158 $generated@@160)) (not true)) (=> (and ($generated@@87 $generated@@158 $generated@@159) ($generated@@87 $generated@@159 $generated@@160)) ($generated@@87 $generated@@158 $generated@@160)))
 :pattern ( ($generated@@87 $generated@@158 $generated@@159) ($generated@@87 $generated@@159 $generated@@160))
)))
(assert (= ($generated@@14 $generated@@161) 9))
(assert (forall (($generated@@162 T@U) ) (!  (=> ($generated@@133 $generated@@162 $generated) (and (= ($generated@@105 $generated@@161 ($generated@@40 $generated@@161 $generated@@162)) $generated@@162) ($generated@@56 $generated@@161 ($generated@@40 $generated@@161 $generated@@162) $generated)))
 :pattern ( ($generated@@133 $generated@@162 $generated))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@133 ($generated@@105 $generated@@165 $generated@@163) $generated@@164) ($generated@@56 $generated@@165 $generated@@163 $generated@@164))
 :pattern ( ($generated@@133 ($generated@@105 $generated@@165 $generated@@163) $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ) (! (<= 0 ($generated@@38 $generated@@166))
 :pattern ( ($generated@@38 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@50 $generated@@145 $generated@@167 ($generated@@146 $generated@@168) $generated@@169) (forall (($generated@@170 Int) ) (!  (=> (and (<= 0 $generated@@170) (< $generated@@170 ($generated@@38 $generated@@167))) ($generated@@116 ($generated@@36 $generated@@167 $generated@@170) $generated@@168 $generated@@169))
 :pattern ( ($generated@@36 $generated@@167 $generated@@170))
)))
 :pattern ( ($generated@@50 $generated@@145 $generated@@167 ($generated@@146 $generated@@168) $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@171 ($generated@@146 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@146 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@30 ($generated@@146 $generated@@173)) $generated@@1)
 :pattern ( ($generated@@146 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@48 ($generated@@109 $generated@@174)) $generated@@3)
 :pattern ( ($generated@@109 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@175 ($generated@@130 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@130 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@33 ($generated@@109 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@109 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@48 ($generated@@37 $generated@@178)) $generated@@5)
 :pattern ( ($generated@@37 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@138 ($generated@@37 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@37 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@48 ($generated@@44 $generated@@180)) $generated@@8)
 :pattern ( ($generated@@44 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@181 ($generated@@44 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@44 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@40 $generated@@184 ($generated@@105 $generated@@184 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@105 $generated@@184 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@56 $generated@@41 ($generated@@109 $generated@@186) ($generated@@130 $generated@@185)) ($generated@@133 $generated@@186 $generated@@185))
 :pattern ( ($generated@@56 $generated@@41 ($generated@@109 $generated@@186) ($generated@@130 $generated@@185)))
)))
(assert (forall (($generated@@188 T@U) ) (! (< ($generated@@187 $generated@@188) ($generated@@39 ($generated@@109 $generated@@188)))
 :pattern ( ($generated@@109 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (< ($generated@@189 $generated@@190) ($generated@@39 ($generated@@37 $generated@@190)))
 :pattern ( ($generated@@37 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (! (< ($generated@@189 $generated@@191) ($generated@@39 ($generated@@44 $generated@@191)))
 :pattern ( ($generated@@44 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and ($generated@@141 $generated@@194) (and ($generated@@32 $generated@@192) ($generated@@50 $generated@@41 $generated@@192 ($generated@@130 $generated@@193) $generated@@194))) ($generated@@116 ($generated@@33 $generated@@192) $generated@@193 $generated@@194))
 :pattern ( ($generated@@116 ($generated@@33 $generated@@192) $generated@@193 $generated@@194))
)))
(assert  (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@T) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@195 $generated@@198 $generated@@199 $generated@@200 ($generated@@197 $generated@@198 $generated@@199 $generated@@200 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@203 $generated@@204) $generated@@201)
 :weight 0
)) (and (forall (($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@195 $generated@@205 $generated@@206 $generated@@207 ($generated@@197 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@195 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ($generated@@216 T@T) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@195 $generated@@214 $generated@@215 $generated@@216 ($generated@@197 $generated@@214 $generated@@215 $generated@@216 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@195 $generated@@214 $generated@@215 $generated@@216 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@19 ($generated@@195 $generated@@51 $generated@@60 $generated@@15 ($generated@@196 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (or (not (= $generated@@227 $generated@@223)) (not true)) ($generated@@19 ($generated@@40 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@51 ($generated@@62 $generated@@60 $generated@@61) $generated@@224 $generated@@227) $generated@@225)))) $generated@@226))
 :pattern ( ($generated@@195 $generated@@51 $generated@@60 $generated@@15 ($generated@@196 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ) (! (= ($generated@@187 ($generated@@105 $generated@@41 $generated@@229)) ($generated@@39 $generated@@229))
 :pattern ( ($generated@@187 ($generated@@105 $generated@@41 $generated@@229)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> ($generated@@133 $generated@@230 ($generated@@146 $generated@@231)) (and (= ($generated@@105 $generated@@145 ($generated@@40 $generated@@145 $generated@@230)) $generated@@230) ($generated@@56 $generated@@145 ($generated@@40 $generated@@145 $generated@@230) ($generated@@146 $generated@@231))))
 :pattern ( ($generated@@133 $generated@@230 ($generated@@146 $generated@@231)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> ($generated@@133 $generated@@233 ($generated@@130 $generated@@232)) (and (= ($generated@@105 $generated@@41 ($generated@@40 $generated@@41 $generated@@233)) $generated@@233) ($generated@@56 $generated@@41 ($generated@@40 $generated@@41 $generated@@233) ($generated@@130 $generated@@232))))
 :pattern ( ($generated@@133 $generated@@233 ($generated@@130 $generated@@232)))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= ($generated@@56 $generated@@41 ($generated@@37 $generated@@235) ($generated@@130 $generated@@234)) ($generated@@56 $generated@@145 $generated@@235 ($generated@@146 $generated)))
 :pattern ( ($generated@@56 $generated@@41 ($generated@@37 $generated@@235) ($generated@@130 $generated@@234)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and ($generated@@141 $generated@@237) ($generated@@56 $generated@@41 $generated@@236 $generated@@57)) ($generated@@50 $generated@@41 $generated@@236 $generated@@57 $generated@@237))
 :pattern ( ($generated@@50 $generated@@41 $generated@@236 $generated@@57 $generated@@237))
)))
(assert (= ($generated@@30 $generated@@57) $generated@@7))
(assert (= ($generated@@131 $generated@@57) $generated@@12))
(assert (= ($generated@@30 $generated@@53) $generated@@9))
(assert (= ($generated@@131 $generated@@53) $generated@@13))
(assert (= ($generated@@30 $generated@@52) $generated@@10))
(assert (= ($generated@@131 $generated@@52) $generated@@13))
(assert (= $generated@@49 ($generated@@91 $generated@@41 $generated@@49)))
(assert (forall (($generated@@238 T@U) ) (! (= ($generated@@56 $generated@@41 ($generated@@44 $generated@@238) $generated@@57) ($generated@@56 $generated@@145 $generated@@238 ($generated@@146 $generated)))
 :pattern ( ($generated@@56 $generated@@41 ($generated@@44 $generated@@238) $generated@@57))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and ($generated@@141 $generated@@240) (and ($generated@@99 $generated@@239) ($generated@@50 $generated@@41 $generated@@239 $generated@@57 $generated@@240))) ($generated@@50 $generated@@145 ($generated@@181 $generated@@239) ($generated@@146 $generated) $generated@@240))
 :pattern ( ($generated@@50 $generated@@145 ($generated@@181 $generated@@239) ($generated@@146 $generated) $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ) (! (= ($generated@@56 $generated@@51 $generated@@243 $generated@@53)  (or (= $generated@@243 $generated@@58) ($generated@@241 ($generated@@242 $generated@@243))))
 :pattern ( ($generated@@56 $generated@@51 $generated@@243 $generated@@53))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@109 ($generated@@91 $generated@@61 $generated@@244)) ($generated@@91 $generated@@41 ($generated@@109 $generated@@244)))
 :pattern ( ($generated@@109 ($generated@@91 $generated@@61 $generated@@244)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@37 ($generated@@91 $generated@@145 $generated@@245)) ($generated@@91 $generated@@41 ($generated@@37 $generated@@245)))
 :pattern ( ($generated@@37 ($generated@@91 $generated@@145 $generated@@245)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@44 ($generated@@91 $generated@@145 $generated@@246)) ($generated@@91 $generated@@41 ($generated@@44 $generated@@246)))
 :pattern ( ($generated@@44 ($generated@@91 $generated@@145 $generated@@246)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@T) ) (! (= ($generated@@105 $generated@@248 ($generated@@91 $generated@@248 $generated@@247)) ($generated@@91 $generated@@61 ($generated@@105 $generated@@248 $generated@@247)))
 :pattern ( ($generated@@105 $generated@@248 ($generated@@91 $generated@@248 $generated@@247)))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (= ($generated@@38 $generated@@249) 0) (= $generated@@249 $generated@@47))
 :pattern ( ($generated@@38 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! ($generated@@50 $generated@@161 $generated@@251 $generated $generated@@250)
 :pattern ( ($generated@@50 $generated@@161 $generated@@251 $generated $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= ($generated@@56 $generated@@145 $generated@@252 ($generated@@146 $generated@@253)) (forall (($generated@@254 Int) ) (!  (=> (and (<= 0 $generated@@254) (< $generated@@254 ($generated@@38 $generated@@252))) ($generated@@133 ($generated@@36 $generated@@252 $generated@@254) $generated@@253))
 :pattern ( ($generated@@36 $generated@@252 $generated@@254))
)))
 :pattern ( ($generated@@56 $generated@@145 $generated@@252 ($generated@@146 $generated@@253)))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 Int) ) (!  (=> (and (<= 0 $generated@@256) (< $generated@@256 ($generated@@38 $generated@@255))) (< ($generated@@39 ($generated@@40 $generated@@41 ($generated@@36 $generated@@255 $generated@@256))) ($generated@@189 $generated@@255)))
 :pattern ( ($generated@@39 ($generated@@40 $generated@@41 ($generated@@36 $generated@@255 $generated@@256))))
)))
(assert (forall (($generated@@257 T@U) ) (! ($generated@@56 $generated@@161 $generated@@257 $generated)
 :pattern ( ($generated@@56 $generated@@161 $generated@@257 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@271 true))
(let (($generated@@272 true))
(let (($generated@@273  (=> (and (= $generated@@258 ($generated@@44 $generated@@259)) ($generated@@56 $generated@@145 $generated@@259 ($generated@@146 $generated))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (= $generated@@259 ($generated@@91 $generated@@145 $generated@@47))) (=> (= $generated@@259 ($generated@@91 $generated@@145 $generated@@47)) (=> (= (ControlFlow 0 6) 2) $generated@@272))))))
(let (($generated@@274  (=> (or (not (= $generated@@258 $generated@@49)) (not true)) (and (=> (= (ControlFlow 0 9) 6) $generated@@273) (=> (= (ControlFlow 0 9) 8) $generated@@271)))))
(let (($generated@@275  (=> (and (= $generated@@258 $generated@@49) (= (ControlFlow 0 5) 2)) $generated@@272)))
(let (($generated@@276  (=> (and (= $generated@@260 ($generated@@109 ($generated@@105 $generated@@41 $generated@@258))) ($generated@@56 $generated@@41 $generated@@258 $generated@@57)) (and (=> (= (ControlFlow 0 10) 5) $generated@@275) (=> (= (ControlFlow 0 10) 9) $generated@@274)))))
(let (($generated@@277  (=> (and (= $generated@@260 ($generated@@37 $generated@@261)) ($generated@@56 $generated@@145 $generated@@261 ($generated@@146 $generated))) (=> (and (and (= $generated@@262 $generated@@261) ($generated@@56 $generated@@145 $generated@@262 ($generated@@146 $generated))) (and (= $generated@@263 $generated@@262) (= (ControlFlow 0 3) 2))) $generated@@272))))
(let (($generated@@278 true))
(let (($generated@@279  (=> (or (not (= $generated@@260 ($generated@@109 ($generated@@105 $generated@@41 $generated@@258)))) (not true)) (and (=> (= (ControlFlow 0 4) 3) $generated@@277) (=> (= (ControlFlow 0 4) 1) $generated@@278)))))
(let (($generated@@280  (=> (= $generated@@264 ($generated@@196 $generated@@58 $generated@@265 $generated@@2 false)) (=> (and ($generated@@141 $generated@@266) ($generated@@267 $generated@@266)) (=> (and (and (forall (($generated@@281 T@U) ) (!  (=> (and (or (not (= $generated@@281 $generated@@58)) (not true)) ($generated@@19 ($generated@@40 $generated@@15 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@51 ($generated@@62 $generated@@60 $generated@@61) $generated@@265 $generated@@281) $generated@@2)))) (= ($generated@@59 $generated@@51 ($generated@@62 $generated@@60 $generated@@61) $generated@@266 $generated@@281) ($generated@@59 $generated@@51 ($generated@@62 $generated@@60 $generated@@61) $generated@@265 $generated@@281)))
 :pattern ( ($generated@@59 $generated@@51 ($generated@@62 $generated@@60 $generated@@61) $generated@@266 $generated@@281))
)) ($generated@@87 $generated@@265 $generated@@266)) (and ($generated@@56 $generated@@41 $generated@@260 ($generated@@130 $generated@@57)) ($generated@@50 $generated@@41 $generated@@260 ($generated@@130 $generated@@57) $generated@@266))) (and (=> (= (ControlFlow 0 11) 10) $generated@@276) (=> (= (ControlFlow 0 11) 4) $generated@@279)))))))
(let (($generated@@282  (=> (and (and (and ($generated@@141 $generated@@265) ($generated@@267 $generated@@265)) (and (or (not (= $generated@@268 $generated@@58)) (not true)) (and ($generated@@56 $generated@@51 $generated@@268 $generated@@52) ($generated@@50 $generated@@51 $generated@@268 $generated@@52 $generated@@265)))) (and (and ($generated@@56 $generated@@41 $generated@@269 ($generated@@130 $generated@@57)) ($generated@@50 $generated@@41 $generated@@269 ($generated@@130 $generated@@57) $generated@@265)) (and (= 1 $generated@@270) (= (ControlFlow 0 12) 11)))) $generated@@280)))
$generated@@282))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 7))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
