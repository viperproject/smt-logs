(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@71 (Int) Int)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U Int) T@U)
(declare-fun $generated@@78 (T@U T@U Int) Bool)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@80 (T@T T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (! ($generated@@25 $generated@@11 $generated@@27 $generated@@26 $generated@@28)
 :pattern ( ($generated@@25 $generated@@11 $generated@@27 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ) (!  (not ($generated@@29 $generated@@30 $generated@@31))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31))
)))
(assert (= ($generated@@9 $generated@@32) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@25 $generated@@32 $generated@@35 $generated@@33 $generated@@36) ($generated@@25 $generated@@32 $generated@@35 $generated@@34 $generated@@36))
 :pattern ( ($generated@@25 $generated@@32 $generated@@35 $generated@@33 $generated@@36))
 :pattern ( ($generated@@25 $generated@@32 $generated@@35 $generated@@34 $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@25 $generated@@32 $generated@@39 $generated@@37 $generated@@40) ($generated@@25 $generated@@32 $generated@@39 $generated@@38 $generated@@40))
 :pattern ( ($generated@@25 $generated@@32 $generated@@39 $generated@@37 $generated@@40))
 :pattern ( ($generated@@25 $generated@@32 $generated@@39 $generated@@38 $generated@@40))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@43 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@43 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@9 $generated@@44) 4)) (= ($generated@@9 $generated@@45) 5)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@9 ($generated@@46 $generated@@61 $generated@@62)) 6))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@46 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@46 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@25 $generated@@32 $generated@@67 $generated@@34 $generated@@68)  (or (= $generated@@67 $generated@@41) ($generated@@14 ($generated@@42 $generated@@10 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@32 ($generated@@46 $generated@@44 $generated@@45) $generated@@68 $generated@@67) $generated@@0)))))
 :pattern ( ($generated@@25 $generated@@32 $generated@@67 $generated@@34 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@25 $generated@@32 $generated@@69 $generated@@38 $generated@@70)  (or (= $generated@@69 $generated@@41) ($generated@@14 ($generated@@42 $generated@@10 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@32 ($generated@@46 $generated@@44 $generated@@45) $generated@@70 $generated@@69) $generated@@0)))))
 :pattern ( ($generated@@25 $generated@@32 $generated@@69 $generated@@38 $generated@@70))
)))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@71 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (= ($generated@@9 $generated@@82) 7))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 Int) ) (!  (=> (or ($generated@@78 $generated@@85 $generated@@86 $generated@@87) (and (< 1 $generated@@76) (and (and ($generated@@79 $generated@@85) (and (or (not (= $generated@@86 $generated@@41)) (not true)) (and ($generated@@80 $generated@@32 $generated@@86 $generated@@37) ($generated@@25 $generated@@32 $generated@@86 $generated@@37 $generated@@85)))) (<= ($generated@@71 0) $generated@@87)))) (and (=> (> $generated@@87 0) ($generated@@81 ($generated@@77 $generated@@84 $generated@@85 $generated@@86 (- $generated@@87 1)) ($generated@@77 $generated@@84 $generated@@85 $generated@@86 $generated@@87))) ($generated@@80 $generated@@82 ($generated@@77 $generated@@84 $generated@@85 $generated@@86 $generated@@87) ($generated@@83 $generated@@33))))
 :pattern ( ($generated@@77 $generated@@84 $generated@@85 $generated@@86 $generated@@87))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@81 $generated@@88 $generated@@89) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@29 $generated@@88 $generated@@90) ($generated@@29 $generated@@89 $generated@@90))
 :pattern ( ($generated@@29 $generated@@88 $generated@@90))
 :pattern ( ($generated@@29 $generated@@89 $generated@@90))
)))
 :pattern ( ($generated@@81 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 ($generated@@42 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@42 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@80 $generated@@82 $generated@@95 ($generated@@83 $generated@@96)) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@29 $generated@@95 $generated@@97) ($generated@@94 $generated@@97 $generated@@96))
 :pattern ( ($generated@@29 $generated@@95 $generated@@97))
)))
 :pattern ( ($generated@@80 $generated@@82 $generated@@95 ($generated@@83 $generated@@96)))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@80 $generated@@11 $generated@@98 $generated@@26) (<= ($generated@@71 0) ($generated@@16 $generated@@98)))
 :pattern ( ($generated@@80 $generated@@11 $generated@@98 $generated@@26))
)))
(assert  (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@99 $generated@@102 $generated@@103 $generated@@104 ($generated@@101 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@107 $generated@@108) $generated@@105)
 :weight 0
)) (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@99 $generated@@109 $generated@@110 $generated@@111 ($generated@@101 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@99 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@99 $generated@@118 $generated@@119 $generated@@120 ($generated@@101 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@99 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@14 ($generated@@99 $generated@@32 $generated@@44 $generated@@10 ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))  (=> (and (or (not (= $generated@@132 $generated@@127)) (not true)) ($generated@@14 ($generated@@42 $generated@@10 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@32 ($generated@@46 $generated@@44 $generated@@45) $generated@@128 $generated@@132) $generated@@129)))) (or (= $generated@@132 $generated@@130) ($generated@@29 $generated@@131 ($generated@@91 $generated@@32 $generated@@132)))))
 :pattern ( ($generated@@99 $generated@@32 $generated@@44 $generated@@10 ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@134 ($generated@@91 $generated@@138 $generated@@135) $generated@@136 $generated@@137) ($generated@@25 $generated@@138 $generated@@135 $generated@@136 $generated@@137))
 :pattern ( ($generated@@134 ($generated@@91 $generated@@138 $generated@@135) $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@94 $generated@@139 $generated@@26) (and (= ($generated@@91 $generated@@11 ($generated@@42 $generated@@11 $generated@@139)) $generated@@139) ($generated@@80 $generated@@11 ($generated@@42 $generated@@11 $generated@@139) $generated@@26)))
 :pattern ( ($generated@@94 $generated@@139 $generated@@26))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> ($generated@@94 $generated@@140 $generated@@34) (and (= ($generated@@91 $generated@@32 ($generated@@42 $generated@@32 $generated@@140)) $generated@@140) ($generated@@80 $generated@@32 ($generated@@42 $generated@@32 $generated@@140) $generated@@34)))
 :pattern ( ($generated@@94 $generated@@140 $generated@@34))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> ($generated@@94 $generated@@141 $generated@@33) (and (= ($generated@@91 $generated@@32 ($generated@@42 $generated@@32 $generated@@141)) $generated@@141) ($generated@@80 $generated@@32 ($generated@@42 $generated@@32 $generated@@141) $generated@@33)))
 :pattern ( ($generated@@94 $generated@@141 $generated@@33))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> ($generated@@94 $generated@@142 $generated@@38) (and (= ($generated@@91 $generated@@32 ($generated@@42 $generated@@32 $generated@@142)) $generated@@142) ($generated@@80 $generated@@32 ($generated@@42 $generated@@32 $generated@@142) $generated@@38)))
 :pattern ( ($generated@@94 $generated@@142 $generated@@38))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@94 $generated@@143 $generated@@37) (and (= ($generated@@91 $generated@@32 ($generated@@42 $generated@@32 $generated@@143)) $generated@@143) ($generated@@80 $generated@@32 ($generated@@42 $generated@@32 $generated@@143) $generated@@37)))
 :pattern ( ($generated@@94 $generated@@143 $generated@@37))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@80 $generated@@32 $generated@@144 $generated@@33)  (and ($generated@@80 $generated@@32 $generated@@144 $generated@@34) (or (not (= $generated@@144 $generated@@41)) (not true))))
 :pattern ( ($generated@@80 $generated@@32 $generated@@144 $generated@@33))
 :pattern ( ($generated@@80 $generated@@32 $generated@@144 $generated@@34))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@80 $generated@@32 $generated@@145 $generated@@37)  (and ($generated@@80 $generated@@32 $generated@@145 $generated@@38) (or (not (= $generated@@145 $generated@@41)) (not true))))
 :pattern ( ($generated@@80 $generated@@32 $generated@@145 $generated@@37))
 :pattern ( ($generated@@80 $generated@@32 $generated@@145 $generated@@38))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Int) ) (!  (=> (or ($generated@@78 $generated@@147 $generated@@148 $generated@@149) (and (< 1 $generated@@76) (and (and (and ($generated@@79 $generated@@147) (or (not (= $generated@@148 $generated@@41)) (not true))) ($generated@@25 $generated@@32 $generated@@148 $generated@@37 $generated@@147)) (<= ($generated@@71 0) $generated@@149)))) ($generated@@25 $generated@@82 ($generated@@77 $generated@@146 $generated@@147 $generated@@148 $generated@@149) ($generated@@83 $generated@@33) $generated@@147))
 :pattern ( ($generated@@25 $generated@@82 ($generated@@77 $generated@@146 $generated@@147 $generated@@148 $generated@@149) ($generated@@83 $generated@@33) $generated@@147))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@152 $generated@@150) $generated@@151) ($generated@@80 $generated@@152 $generated@@150 $generated@@151))
 :pattern ( ($generated@@94 ($generated@@91 $generated@@152 $generated@@150) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@25 $generated@@82 $generated@@153 ($generated@@83 $generated@@154) $generated@@155) (forall (($generated@@156 T@U) ) (!  (=> ($generated@@29 $generated@@153 $generated@@156) ($generated@@134 $generated@@156 $generated@@154 $generated@@155))
 :pattern ( ($generated@@29 $generated@@153 $generated@@156))
)))
 :pattern ( ($generated@@25 $generated@@82 $generated@@153 ($generated@@83 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (! ($generated@@80 $generated@@32 $generated@@157 $generated@@34)
 :pattern ( ($generated@@80 $generated@@32 $generated@@157 $generated@@34))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@83 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@83 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@160 ($generated@@83 $generated@@161)) $generated)
 :pattern ( ($generated@@83 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@42 $generated@@163 ($generated@@91 $generated@@163 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@91 $generated@@163 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Int) ) (! (= ($generated@@77 ($generated@@164 $generated@@165) $generated@@166 $generated@@167 $generated@@168) ($generated@@77 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
 :pattern ( ($generated@@77 ($generated@@164 $generated@@165) $generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@94 $generated@@169 ($generated@@83 $generated@@170)) (and (= ($generated@@91 $generated@@82 ($generated@@42 $generated@@82 $generated@@169)) $generated@@169) ($generated@@80 $generated@@82 ($generated@@42 $generated@@82 $generated@@169) ($generated@@83 $generated@@170))))
 :pattern ( ($generated@@94 $generated@@169 ($generated@@83 $generated@@170)))
)))
(assert (= ($generated@@160 $generated@@26) $generated@@1))
(assert (= ($generated@@171 $generated@@26) $generated@@6))
(assert (= ($generated@@160 $generated@@34) $generated@@2))
(assert (= ($generated@@171 $generated@@34) $generated@@7))
(assert (= ($generated@@160 $generated@@33) $generated@@3))
(assert (= ($generated@@171 $generated@@33) $generated@@7))
(assert (= ($generated@@160 $generated@@38) $generated@@4))
(assert (= ($generated@@171 $generated@@38) $generated@@8))
(assert (= ($generated@@160 $generated@@37) $generated@@5))
(assert (= ($generated@@171 $generated@@37) $generated@@8))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@80 $generated@@32 $generated@@174 $generated@@38)  (or (= $generated@@174 $generated@@41) ($generated@@172 ($generated@@173 $generated@@174))))
 :pattern ( ($generated@@80 $generated@@32 $generated@@174 $generated@@38))
)))
(assert (forall (($generated@@175 Int) ) (! (= ($generated@@91 $generated@@11 ($generated@@15 ($generated@@71 $generated@@175))) ($generated@@73 $generated@@45 ($generated@@91 $generated@@11 ($generated@@15 $generated@@175))))
 :pattern ( ($generated@@91 $generated@@11 ($generated@@15 ($generated@@71 $generated@@175))))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@T) ) (! (= ($generated@@91 $generated@@177 ($generated@@73 $generated@@177 $generated@@176)) ($generated@@73 $generated@@45 ($generated@@91 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@91 $generated@@177 ($generated@@73 $generated@@177 $generated@@176)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Bool)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@188 true))
(let (($generated@@189  (=> (and (=> (> $generated@@178 0) ($generated@@81 ($generated@@77 ($generated@@164 $generated@@179) $generated@@180 $generated@@181 (- $generated@@178 1)) ($generated@@77 ($generated@@164 $generated@@179) $generated@@180 $generated@@181 $generated@@178))) (= (ControlFlow 0 9) 2)) $generated@@188)))
(let (($generated@@190  (=> (> $generated@@178 0) (=> (and ($generated@@134 ($generated@@91 $generated@@32 $generated@@181) $generated@@38 $generated@@180) ($generated@@25 $generated@@11 ($generated@@15 $generated@@178) $generated@@26 $generated@@180)) (and (=> (= (ControlFlow 0 3) (- 0 8)) (or (<= 0 $generated@@178) (= $generated@@178 $generated@@178))) (=> (or (<= 0 $generated@@178) (= $generated@@178 $generated@@178)) (and (=> (= (ControlFlow 0 3) (- 0 7)) (or (and (= $generated@@181 $generated@@181) (= $generated@@178 $generated@@178)) (< $generated@@178 $generated@@178))) (=> (or (and (= $generated@@181 $generated@@181) (= $generated@@178 $generated@@178)) (< $generated@@178 $generated@@178)) (=> (and (or (and (= $generated@@181 $generated@@181) (= $generated@@178 $generated@@178)) ($generated@@78 $generated@@180 $generated@@181 $generated@@178)) ($generated@@134 ($generated@@91 $generated@@32 $generated@@181) $generated@@38 $generated@@180)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@80 $generated@@11 ($generated@@15 (- $generated@@178 1)) $generated@@26)) (=> ($generated@@80 $generated@@11 ($generated@@15 (- $generated@@178 1)) $generated@@26) (=> (and (= $generated@@182 (- $generated@@178 1)) ($generated@@25 $generated@@11 ($generated@@15 $generated@@182) $generated@@26 $generated@@180)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (<= 0 $generated@@178) (= $generated@@182 $generated@@178))) (=> (or (<= 0 $generated@@178) (= $generated@@182 $generated@@178)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (and (= $generated@@181 $generated@@181) (= (- $generated@@178 1) $generated@@178)) (< $generated@@182 $generated@@178))) (=> (or (and (= $generated@@181 $generated@@181) (= (- $generated@@178 1) $generated@@178)) (< $generated@@182 $generated@@178)) (=> (or (and (= $generated@@181 $generated@@181) (= (- $generated@@178 1) $generated@@178)) ($generated@@78 $generated@@180 $generated@@181 (- $generated@@178 1))) (=> (and ($generated@@81 ($generated@@77 ($generated@@164 $generated@@179) $generated@@180 $generated@@181 (- $generated@@178 1)) ($generated@@77 ($generated@@164 $generated@@179) $generated@@180 $generated@@181 $generated@@178)) (= (ControlFlow 0 3) 2)) $generated@@188))))))))))))))))))
(let (($generated@@191  (=> ($generated@@80 $generated@@82 ($generated@@77 ($generated@@164 $generated@@179) $generated@@180 $generated@@181 $generated@@178) ($generated@@83 $generated@@33)) (and (=> (= (ControlFlow 0 10) 3) $generated@@190) (=> (= (ControlFlow 0 10) 9) $generated@@189)))))
(let (($generated@@192 true))
(let (($generated@@193  (and (=> (= (ControlFlow 0 11) (- 0 12)) $generated@@183) (=> $generated@@183 (and (=> (= (ControlFlow 0 11) 10) $generated@@191) (=> (= (ControlFlow 0 11) 1) $generated@@192))))))
(let (($generated@@194  (=> (and (or (not (= $generated@@178 ($generated@@71 0))) (not true)) ($generated@@134 ($generated@@91 $generated@@32 $generated@@181) $generated@@38 $generated@@180)) (and (=> (= (ControlFlow 0 14) (- 0 17)) ($generated@@80 $generated@@11 ($generated@@15 (- $generated@@178 1)) $generated@@26)) (=> ($generated@@80 $generated@@11 ($generated@@15 (- $generated@@178 1)) $generated@@26) (=> (= $generated@@184 (- $generated@@178 1)) (=> (and ($generated@@25 $generated@@11 ($generated@@15 $generated@@184) $generated@@26 $generated@@180) (= $generated@@185 (forall (($generated@@195 T@U) ($generated@@196 T@U) )  (=> (and (and (or (not (= $generated@@195 $generated@@41)) (not true)) ($generated@@14 ($generated@@42 $generated@@10 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@32 ($generated@@46 $generated@@44 $generated@@45) $generated@@180 $generated@@195) $generated@@0)))) (or (= $generated@@195 $generated@@181) ($generated@@29 (ite (= $generated@@184 ($generated@@71 0)) $generated@@30 ($generated@@77 ($generated@@164 $generated@@179) $generated@@180 $generated@@181 (- $generated@@184 1))) ($generated@@91 $generated@@32 $generated@@195)))) ($generated@@14 ($generated@@99 $generated@@32 $generated@@44 $generated@@10 $generated@@186 $generated@@195 $generated@@196)))))) (and (=> (= (ControlFlow 0 14) (- 0 16)) (or (<= 0 $generated@@178) (= $generated@@184 $generated@@178))) (=> (or (<= 0 $generated@@178) (= $generated@@184 $generated@@178)) (and (=> (= (ControlFlow 0 14) (- 0 15)) (< $generated@@184 $generated@@178)) (=> (< $generated@@184 $generated@@178) (=> ($generated@@78 $generated@@180 $generated@@181 (- $generated@@178 1)) (=> (and (= $generated@@183 $generated@@185) (= (ControlFlow 0 14) 11)) $generated@@193)))))))))))))
(let (($generated@@197  (=> (= $generated@@178 ($generated@@71 0)) (=> (and (= $generated@@183 true) (= (ControlFlow 0 13) 11)) $generated@@193))))
(let (($generated@@198  (=> (= $generated@@186 ($generated@@100 $generated@@41 $generated@@180 $generated@@0 $generated@@181 (ite (= $generated@@178 ($generated@@71 0)) $generated@@30 ($generated@@77 ($generated@@164 $generated@@179) $generated@@180 $generated@@181 (- $generated@@178 1))))) (and (=> (= (ControlFlow 0 18) 13) $generated@@197) (=> (= (ControlFlow 0 18) 14) $generated@@194)))))
(let (($generated@@199  (=> (and ($generated@@79 $generated@@180) ($generated@@187 $generated@@180)) (=> (and (and (and (or (not (= $generated@@181 $generated@@41)) (not true)) (and ($generated@@80 $generated@@32 $generated@@181 $generated@@37) ($generated@@25 $generated@@32 $generated@@181 $generated@@37 $generated@@180))) (<= ($generated@@71 0) $generated@@178)) (and (= 1 $generated@@76) (= (ControlFlow 0 19) 18))) $generated@@198))))
$generated@@199)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
