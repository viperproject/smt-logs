(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 ((_ BitVec 10)) T@U)
(declare-fun $generated@@25 (T@U) (_ BitVec 10))
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 (T@U T@U) Int)
(declare-fun $generated@@54 (T@U) Int)
(declare-fun $generated@@57 (T@U T@U T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@97 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@T T@T) T@T)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@103 (T@T) T@T)
(declare-fun $generated@@156 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (! ($generated@@19 $generated@@5 $generated@@21 ($generated@@20 0) $generated@@22)
 :pattern ( ($generated@@19 $generated@@5 $generated@@21 ($generated@@20 0) $generated@@22))
)))
(assert  (and (and (= ($generated@@3 $generated@@23) 3) (forall (($generated@@26 (_ BitVec 10)) ) (! (= ($generated@@25 ($generated@@24 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@24 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@25 $generated@@27))
))))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@19 $generated@@23 $generated@@28 ($generated@@20 10) $generated@@29)
 :pattern ( ($generated@@19 $generated@@23 $generated@@28 ($generated@@20 10) $generated@@29))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@19 $generated@@23 $generated@@31 $generated@@30 $generated@@32)
 :pattern ( ($generated@@19 $generated@@23 $generated@@31 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ) (! ($generated@@33 $generated@@5 $generated@@34 ($generated@@20 0))
 :pattern ( ($generated@@33 $generated@@5 $generated@@34 ($generated@@20 0)))
)))
(assert (forall (($generated@@35 T@U) ) (! ($generated@@33 $generated@@23 $generated@@35 ($generated@@20 10))
 :pattern ( ($generated@@33 $generated@@23 $generated@@35 ($generated@@20 10)))
)))
(assert (= ($generated@@3 $generated@@36) 4))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@33 $generated@@36 $generated@@39 ($generated@@37 $generated@@40)) ($generated@@38 $generated@@39))
 :pattern ( ($generated@@33 $generated@@36 $generated@@39 ($generated@@37 $generated@@40)))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@T) ) (! (= ($generated@@45 $generated@@47 ($generated@@44 $generated@@47 $generated@@46)) $generated@@46)
 :pattern ( ($generated@@44 $generated@@47 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@33 $generated@@23 $generated@@48 $generated@@30)  (or (not (= ($generated@@25 $generated@@48) #b0000000111)) (not true)))
 :pattern ( ($generated@@33 $generated@@23 $generated@@48 $generated@@30))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (or (not (= $generated@@52 $generated@@53)) (not true)) (= ($generated@@50 $generated@@51 $generated@@53) ($generated@@50 ($generated@@49 $generated@@51 $generated@@52) $generated@@53)))
 :pattern ( ($generated@@49 $generated@@51 $generated@@52) ($generated@@50 $generated@@51 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@54 ($generated@@49 $generated@@55 $generated@@56)) (+ ($generated@@54 $generated@@55) 1))
 :pattern ( ($generated@@54 ($generated@@49 $generated@@55 $generated@@56)))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@57 ($generated@@45 $generated@@61 $generated@@58) $generated@@59 $generated@@60) ($generated@@19 $generated@@61 $generated@@58 $generated@@59 $generated@@60))
 :pattern ( ($generated@@57 ($generated@@45 $generated@@61 $generated@@58) $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@54 ($generated@@62 $generated@@63 $generated@@64)) (+ ($generated@@54 $generated@@63) ($generated@@54 $generated@@64)))
 :pattern ( ($generated@@54 ($generated@@62 $generated@@63 $generated@@64)))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@65 $generated@@66 $generated@@30) (and (= ($generated@@45 $generated@@23 ($generated@@44 $generated@@23 $generated@@66)) $generated@@66) ($generated@@33 $generated@@23 ($generated@@44 $generated@@23 $generated@@66) $generated@@30)))
 :pattern ( ($generated@@65 $generated@@66 $generated@@30))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@33 $generated@@36 $generated@@67 ($generated@@37 $generated@@68)) (forall (($generated@@69 T@U) ) (!  (=> (< 0 ($generated@@50 $generated@@67 $generated@@69)) ($generated@@65 $generated@@69 $generated@@68))
 :pattern ( ($generated@@50 $generated@@67 $generated@@69))
)))
 :pattern ( ($generated@@33 $generated@@36 $generated@@67 ($generated@@37 $generated@@68)))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@65 ($generated@@45 $generated@@72 $generated@@70) $generated@@71) ($generated@@33 $generated@@72 $generated@@70 $generated@@71))
 :pattern ( ($generated@@65 ($generated@@45 $generated@@72 $generated@@70) $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@38 $generated@@73) (forall (($generated@@74 T@U) ) (!  (and (<= 0 ($generated@@50 $generated@@73 $generated@@74)) (<= ($generated@@50 $generated@@73 $generated@@74) ($generated@@54 $generated@@73)))
 :pattern ( ($generated@@50 $generated@@73 $generated@@74))
)))
 :pattern ( ($generated@@38 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (! (<= 0 ($generated@@54 $generated@@75))
 :pattern ( ($generated@@54 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@50 $generated@@76 $generated@@77) 0)
 :pattern ( ($generated@@50 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@50 ($generated@@49 $generated@@78 $generated@@79) $generated@@79) (+ ($generated@@50 $generated@@78 $generated@@79) 1))
 :pattern ( ($generated@@49 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@80 ($generated@@20 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@20 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 ($generated@@37 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@37 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 ($generated@@37 $generated@@85)) $generated)
 :pattern ( ($generated@@37 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@44 $generated@@87 ($generated@@45 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@45 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (!  (and (= (= ($generated@@54 $generated@@88) 0) (= $generated@@88 $generated@@76)) (=> (or (not (= ($generated@@54 $generated@@88) 0)) (not true)) (exists (($generated@@89 T@U) ) (! (< 0 ($generated@@50 $generated@@88 $generated@@89))
 :pattern ( ($generated@@50 $generated@@88 $generated@@89))
))))
 :pattern ( ($generated@@54 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@50 ($generated@@62 $generated@@90 $generated@@91) $generated@@92) (+ ($generated@@50 $generated@@90 $generated@@92) ($generated@@50 $generated@@91 $generated@@92)))
 :pattern ( ($generated@@50 ($generated@@62 $generated@@90 $generated@@91) $generated@@92))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@93 $generated@@104 $generated@@105 $generated@@106 ($generated@@100 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@109 $generated@@110) $generated@@107)
 :weight 0
)) (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@116 $generated@@118) (= ($generated@@93 $generated@@111 $generated@@112 $generated@@113 ($generated@@100 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@93 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@93 $generated@@120 $generated@@121 $generated@@122 ($generated@@100 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@93 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)))) (= ($generated@@3 $generated@@94) 5)) (= ($generated@@3 $generated@@95) 6)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@97 $generated@@129 $generated@@130 ($generated@@101 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@131) $generated@@133) $generated@@131)
 :weight 0
))) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@97 $generated@@134 $generated@@135 ($generated@@101 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@97 $generated@@134 $generated@@135 $generated@@137 $generated@@139)))
 :weight 0
))) (= ($generated@@3 $generated@@98) 7)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (= ($generated@@3 ($generated@@99 $generated@@140 $generated@@141)) 8))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@102 ($generated@@99 $generated@@142 $generated@@143)) $generated@@142)
 :pattern ( ($generated@@99 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@103 ($generated@@99 $generated@@144 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@99 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@8 ($generated@@93 $generated@@94 $generated@@95 $generated@@4 ($generated@@96 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))  (=> (and (or (not (= $generated@@150 $generated@@146)) (not true)) ($generated@@8 ($generated@@44 $generated@@4 ($generated@@97 $generated@@95 $generated@@98 ($generated@@97 $generated@@94 ($generated@@99 $generated@@95 $generated@@98) $generated@@147 $generated@@150) $generated@@148)))) $generated@@149))
 :pattern ( ($generated@@93 $generated@@94 $generated@@95 $generated@@4 ($generated@@96 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@65 $generated@@152 ($generated@@20 0)) (and (= ($generated@@45 $generated@@5 ($generated@@44 $generated@@5 $generated@@152)) $generated@@152) ($generated@@33 $generated@@5 ($generated@@44 $generated@@5 $generated@@152) ($generated@@20 0))))
 :pattern ( ($generated@@65 $generated@@152 ($generated@@20 0)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> ($generated@@65 $generated@@153 ($generated@@37 $generated@@154)) (and (= ($generated@@45 $generated@@36 ($generated@@44 $generated@@36 $generated@@153)) $generated@@153) ($generated@@33 $generated@@36 ($generated@@44 $generated@@36 $generated@@153) ($generated@@37 $generated@@154))))
 :pattern ( ($generated@@65 $generated@@153 ($generated@@37 $generated@@154)))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> ($generated@@65 $generated@@155 ($generated@@20 10)) (and (= ($generated@@45 $generated@@23 ($generated@@44 $generated@@23 $generated@@155)) $generated@@155) ($generated@@33 $generated@@23 ($generated@@44 $generated@@23 $generated@@155) ($generated@@20 10))))
 :pattern ( ($generated@@65 $generated@@155 ($generated@@20 10)))
)))
(assert (= ($generated@@84 $generated@@30) $generated@@1))
(assert (= ($generated@@156 $generated@@30) $generated@@2))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@T) ) (! (= ($generated@@45 $generated@@158 ($generated@@41 $generated@@158 $generated@@157)) ($generated@@41 $generated@@98 ($generated@@45 $generated@@158 $generated@@157)))
 :pattern ( ($generated@@45 $generated@@158 ($generated@@41 $generated@@158 $generated@@157)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (< 0 ($generated@@50 $generated@@159 $generated@@161)) (< 0 ($generated@@50 ($generated@@49 $generated@@159 $generated@@160) $generated@@161)))
 :pattern ( ($generated@@49 $generated@@159 $generated@@160) ($generated@@50 $generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (< 0 ($generated@@50 ($generated@@49 $generated@@162 $generated@@163) $generated@@164))  (or (= $generated@@164 $generated@@163) (< 0 ($generated@@50 $generated@@162 $generated@@164))))
 :pattern ( ($generated@@50 ($generated@@49 $generated@@162 $generated@@163) $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@19 $generated@@36 $generated@@165 ($generated@@37 $generated@@166) $generated@@167) (forall (($generated@@168 T@U) ) (!  (=> (< 0 ($generated@@50 $generated@@165 $generated@@168)) ($generated@@57 $generated@@168 $generated@@166 $generated@@167))
 :pattern ( ($generated@@50 $generated@@165 $generated@@168))
)))
 :pattern ( ($generated@@19 $generated@@36 $generated@@165 ($generated@@37 $generated@@166) $generated@@167))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () (_ BitVec 10))
(declare-fun $generated@@175 () (_ BitVec 10))
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@187  (=> (and (and (and (and (and (and (not ($generated@@8 ($generated@@41 $generated@@4 ($generated@@7 true)))) (not ($generated@@8 ($generated@@41 $generated@@4 ($generated@@7 true))))) (not ($generated@@8 ($generated@@41 $generated@@4 ($generated@@7 true))))) (not ($generated@@8 ($generated@@41 $generated@@4 ($generated@@7 true))))) (not ($generated@@8 ($generated@@41 $generated@@4 ($generated@@7 true))))) (not ($generated@@8 ($generated@@41 $generated@@4 ($generated@@7 true))))) (= (ControlFlow 0 10) (- 0 9))) false)))
(let (($generated@@188 true))
(let (($generated@@189 true))
(let (($generated@@190  (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@33 $generated@@36 ($generated@@62 $generated@@169 $generated@@170) ($generated@@37 $generated@@30)))))
(let (($generated@@191  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@33 $generated@@36 ($generated@@62 $generated@@170 $generated@@169) ($generated@@37 $generated@@30)))))
(let (($generated@@192 true))
(let (($generated@@193 true))
(let (($generated@@194  (=> (= $generated@@171 ($generated@@96 $generated@@172 $generated@@173 $generated@@0 false)) (=> (and (= $generated@@170 ($generated@@49 $generated@@76 ($generated@@45 $generated@@23 ($generated@@24 $generated@@174)))) (= $generated@@169 ($generated@@49 $generated@@76 ($generated@@45 $generated@@23 ($generated@@24 $generated@@175))))) (and (and (and (and (and (and (=> (= (ControlFlow 0 11) 1) $generated@@193) (=> (= (ControlFlow 0 11) 2) $generated@@192)) (=> (= (ControlFlow 0 11) 4) $generated@@191)) (=> (= (ControlFlow 0 11) 6) $generated@@190)) (=> (= (ControlFlow 0 11) 7) $generated@@189)) (=> (= (ControlFlow 0 11) 8) $generated@@188)) (=> (= (ControlFlow 0 11) 10) $generated@@187))))))
(let (($generated@@195  (=> (and (and (and ($generated@@176 $generated@@173) ($generated@@177 $generated@@173)) (or (not (= $generated@@175 #b0000000111)) (not true))) (and (and ($generated@@33 $generated@@36 $generated@@178 ($generated@@37 ($generated@@20 10))) ($generated@@19 $generated@@36 $generated@@178 ($generated@@37 ($generated@@20 10)) $generated@@173)) true)) (=> (and (and (and (and (and ($generated@@33 $generated@@36 $generated@@179 ($generated@@37 $generated@@30)) ($generated@@19 $generated@@36 $generated@@179 ($generated@@37 $generated@@30) $generated@@173)) true) (and (and ($generated@@33 $generated@@36 $generated@@180 ($generated@@37 ($generated@@20 10))) ($generated@@19 $generated@@36 $generated@@180 ($generated@@37 ($generated@@20 10)) $generated@@173)) true)) (and (and (and ($generated@@33 $generated@@36 $generated@@181 ($generated@@37 ($generated@@20 10))) ($generated@@19 $generated@@36 $generated@@181 ($generated@@37 ($generated@@20 10)) $generated@@173)) true) (and (and ($generated@@33 $generated@@36 $generated@@182 ($generated@@37 $generated@@30)) ($generated@@19 $generated@@36 $generated@@182 ($generated@@37 $generated@@30) $generated@@173)) true))) (and (and (and (and ($generated@@33 $generated@@36 $generated@@183 ($generated@@37 $generated@@30)) ($generated@@19 $generated@@36 $generated@@183 ($generated@@37 $generated@@30) $generated@@173)) true) (and (and ($generated@@33 $generated@@36 $generated@@184 ($generated@@37 ($generated@@20 10))) ($generated@@19 $generated@@36 $generated@@184 ($generated@@37 ($generated@@20 10)) $generated@@173)) true)) (and (and (and ($generated@@33 $generated@@36 $generated@@185 ($generated@@37 ($generated@@20 10))) ($generated@@19 $generated@@36 $generated@@185 ($generated@@37 ($generated@@20 10)) $generated@@173)) true) (and (= 1 $generated@@186) (= (ControlFlow 0 12) 11))))) $generated@@194))))
$generated@@195))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
