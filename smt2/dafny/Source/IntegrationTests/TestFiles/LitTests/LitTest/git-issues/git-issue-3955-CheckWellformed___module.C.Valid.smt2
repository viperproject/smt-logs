(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@50 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@82 (T@U T@U) T@U)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@100 (Bool T@U T@U T@U) Bool)
(declare-fun $generated@@101 (T@U T@U T@U) Bool)
(declare-fun $generated@@107 (T@U T@U T@U) Bool)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@135 (T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert (= ($generated@@31 $generated@@3) 0))
(assert (= ($generated@@32 $generated) $generated@@1))
(assert (= ($generated@@32 $generated@@0) $generated@@2))
(assert (= ($generated@@33 $generated@@3) $generated@@4))
(assert  (and (and (and (and (and (and (and (= ($generated@@15 $generated@@40) 3) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@44 $generated@@53 $generated@@54 ($generated@@50 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@57) $generated@@55)
 :weight 0
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (or (= $generated@@62 $generated@@63) (= ($generated@@44 $generated@@58 $generated@@59 ($generated@@50 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@63) ($generated@@44 $generated@@58 $generated@@59 $generated@@61 $generated@@63)))
 :weight 0
))) (= ($generated@@15 $generated@@45) 4)) (= ($generated@@15 $generated@@46) 5)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (= ($generated@@15 ($generated@@47 $generated@@64 $generated@@65)) 6))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@51 ($generated@@47 $generated@@66 $generated@@67)) $generated@@66)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@52 ($generated@@47 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@47 $generated@@68 $generated@@69))
))))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (or ($generated@@37 $generated@@70 $generated@@71) (and (< 0 $generated@@34) (and ($generated@@36 $generated@@70) (and (or (not (= $generated@@71 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@71 $generated@@41) ($generated@@42 $generated@@40 $generated@@71 $generated@@41 $generated@@70)))))) (= ($generated@@35 $generated@@70 $generated@@71) (>= ($generated@@22 ($generated@@43 $generated@@17 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@70 $generated@@71) $generated@@48))) ($generated@@49 0))))
 :pattern ( ($generated@@35 $generated@@70 $generated@@71) ($generated@@36 $generated@@70))
))))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@74 $generated@@72)  (or (= $generated@@74 $generated@@38) (= ($generated@@73 $generated@@74) $generated@@72)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@74 $generated@@72))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@76 $generated@@75)  (or (= $generated@@76 $generated@@38) (= ($generated@@73 $generated@@76) $generated@@75)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@77 $generated@@41 $generated@@78) ($generated@@42 $generated@@40 $generated@@77 $generated@@72 $generated@@78))
 :pattern ( ($generated@@42 $generated@@40 $generated@@77 $generated@@41 $generated@@78))
 :pattern ( ($generated@@42 $generated@@40 $generated@@77 $generated@@72 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@80 $generated@@79 $generated@@81) ($generated@@42 $generated@@40 $generated@@80 $generated@@75 $generated@@81))
 :pattern ( ($generated@@42 $generated@@40 $generated@@80 $generated@@79 $generated@@81))
 :pattern ( ($generated@@42 $generated@@40 $generated@@80 $generated@@75 $generated@@81))
)))
(assert (= ($generated@@31 $generated@@48) 0))
(assert (= ($generated@@82 $generated@@5 $generated@@13) $generated@@48))
(assert  (not ($generated@@83 $generated@@48)))
(assert (= ($generated@@31 $generated@@84) 0))
(assert (= ($generated@@82 $generated@@8 $generated@@14) $generated@@84))
(assert  (not ($generated@@83 $generated@@84)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@85 $generated@@72 $generated@@86)  (or (= $generated@@85 $generated@@38) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@86 $generated@@85) $generated@@3)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@85 $generated@@72 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@87 $generated@@75 $generated@@88)  (or (= $generated@@87 $generated@@38) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@88 $generated@@87) $generated@@3)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@87 $generated@@75 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> ($generated@@89 $generated@@90 $generated@@91) (forall (($generated@@92 T@U) ) (!  (=> ($generated@@20 ($generated@@43 $generated@@16 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@90 $generated@@92) $generated@@3))) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@91 $generated@@92) $generated@@3))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@91 $generated@@92) $generated@@3))
)))
 :pattern ( ($generated@@89 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 Int) ) (! (= ($generated@@49 $generated@@93) $generated@@93)
 :pattern ( ($generated@@49 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 $generated@@95) $generated@@95)
 :pattern ( ($generated@@94 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 ($generated@@43 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@43 $generated@@99 $generated@@98))
)))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@101 $generated@@102 $generated@@103 $generated@@104) (and (< 1 $generated@@34) (and (and (and ($generated@@36 $generated@@102) ($generated@@36 $generated@@103)) ($generated@@89 $generated@@102 $generated@@103)) (and (or (not (= $generated@@104 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@104 $generated@@79) ($generated@@42 $generated@@40 $generated@@104 $generated@@79 $generated@@102)))))) (and (and ($generated@@37 $generated@@103 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@103 $generated@@104) $generated@@84))) (=> ($generated@@35 $generated@@103 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@103 $generated@@104) $generated@@84))) ($generated@@37 $generated@@102 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@102 $generated@@104) $generated@@84))))) (= ($generated@@100 true $generated@@102 $generated@@103 $generated@@104)  (and ($generated@@35 $generated@@103 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@103 $generated@@104) $generated@@84))) ($generated@@35 $generated@@102 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@102 $generated@@104) $generated@@84)))))))
 :pattern ( ($generated@@100 true $generated@@102 $generated@@103 $generated@@104) ($generated@@36 $generated@@103))
))))
(assert ($generated@@83 $generated@@3))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@105) (and (or (not (= $generated@@106 $generated@@38)) (not true)) (= ($generated@@73 $generated@@106) $generated@@72))) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@105 $generated@@106) $generated@@3)))) ($generated@@42 $generated@@17 ($generated@@43 $generated@@17 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@105 $generated@@106) $generated@@48)) $generated@@0 $generated@@105))
 :pattern ( ($generated@@43 $generated@@17 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@105 $generated@@106) $generated@@48)))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@107 ($generated@@97 $generated@@111 $generated@@108) $generated@@109 $generated@@110) ($generated@@42 $generated@@111 $generated@@108 $generated@@109 $generated@@110))
 :pattern ( ($generated@@107 ($generated@@97 $generated@@111 $generated@@108) $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> ($generated@@89 $generated@@112 $generated@@113) (=> ($generated@@107 $generated@@114 $generated@@115 $generated@@112) ($generated@@107 $generated@@114 $generated@@115 $generated@@113)))
 :pattern ( ($generated@@89 $generated@@112 $generated@@113) ($generated@@107 $generated@@114 $generated@@115 $generated@@112))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@T) ) (!  (=> ($generated@@89 $generated@@116 $generated@@117) (=> ($generated@@42 $generated@@120 $generated@@118 $generated@@119 $generated@@116) ($generated@@42 $generated@@120 $generated@@118 $generated@@119 $generated@@117)))
 :pattern ( ($generated@@89 $generated@@116 $generated@@117) ($generated@@42 $generated@@120 $generated@@118 $generated@@119 $generated@@116))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@36 $generated@@121) (and (or (not (= $generated@@122 $generated@@38)) (not true)) (= ($generated@@73 $generated@@122) $generated@@75))) ($generated@@39 $generated@@40 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@121 $generated@@122) $generated@@84)) $generated@@41))
 :pattern ( ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@121 $generated@@122) $generated@@84)))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@123 $generated@@41)  (and ($generated@@39 $generated@@40 $generated@@123 $generated@@72) (or (not (= $generated@@123 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@123 $generated@@41))
 :pattern ( ($generated@@39 $generated@@40 $generated@@123 $generated@@72))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@124 $generated@@79)  (and ($generated@@39 $generated@@40 $generated@@124 $generated@@75) (or (not (= $generated@@124 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@124 $generated@@79))
 :pattern ( ($generated@@39 $generated@@40 $generated@@124 $generated@@75))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@125) (and (or (not (= $generated@@126 $generated@@38)) (not true)) (= ($generated@@73 $generated@@126) $generated@@75))) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@125 $generated@@126) $generated@@3)))) ($generated@@42 $generated@@40 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@125 $generated@@126) $generated@@84)) $generated@@41 $generated@@125))
 :pattern ( ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@125 $generated@@126) $generated@@84)))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (or (not (= $generated@@127 $generated@@129)) (not true)) (=> (and ($generated@@89 $generated@@127 $generated@@128) ($generated@@89 $generated@@128 $generated@@129)) ($generated@@89 $generated@@127 $generated@@129)))
 :pattern ( ($generated@@89 $generated@@127 $generated@@128) ($generated@@89 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (and (= ($generated@@130 ($generated@@82 $generated@@131 $generated@@132)) $generated@@131) (= ($generated@@33 ($generated@@82 $generated@@131 $generated@@132)) $generated@@132))
 :pattern ( ($generated@@82 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@43 $generated@@134 ($generated@@97 $generated@@134 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@97 $generated@@134 $generated@@133))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (and ($generated@@36 $generated@@136) ($generated@@36 $generated@@137)) (and (or (not (= $generated@@138 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@138 $generated@@41))) (and ($generated@@135 $generated@@136) ($generated@@89 $generated@@136 $generated@@137))) (=> (forall (($generated@@139 T@U) ($generated@@140 T@U) )  (=> (and (or (not (= $generated@@139 $generated@@38)) (not true)) (= $generated@@139 $generated@@138)) (= ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@136 $generated@@139) $generated@@140) ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@137 $generated@@139) $generated@@140)))) (= ($generated@@35 $generated@@136 $generated@@138) ($generated@@35 $generated@@137 $generated@@138))))
 :pattern ( ($generated@@135 $generated@@136) ($generated@@89 $generated@@136 $generated@@137) ($generated@@35 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and ($generated@@36 $generated@@141) (and (or (not (= $generated@@142 $generated@@38)) (not true)) (= ($generated@@73 $generated@@142) $generated@@72))) ($generated@@39 $generated@@17 ($generated@@43 $generated@@17 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@141 $generated@@142) $generated@@48)) $generated@@0))
 :pattern ( ($generated@@43 $generated@@17 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@141 $generated@@142) $generated@@48)))
)))
(assert (= ($generated@@32 $generated@@72) $generated@@6))
(assert (= ($generated@@143 $generated@@72) $generated@@11))
(assert (= ($generated@@32 $generated@@41) $generated@@7))
(assert (= ($generated@@143 $generated@@41) $generated@@11))
(assert (= ($generated@@32 $generated@@75) $generated@@9))
(assert (= ($generated@@143 $generated@@75) $generated@@12))
(assert (= ($generated@@32 $generated@@79) $generated@@10))
(assert (= ($generated@@143 $generated@@79) $generated@@12))
(assert  (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@144 $generated@@147 $generated@@148 $generated@@149 ($generated@@146 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@152 $generated@@153) $generated@@150)
 :weight 0
)) (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@144 $generated@@154 $generated@@155 $generated@@156 ($generated@@146 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@144 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@144 $generated@@163 $generated@@164 $generated@@165 ($generated@@146 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@144 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@20 ($generated@@144 $generated@@40 $generated@@45 $generated@@16 ($generated@@145 $generated@@172 $generated@@173 $generated@@174 $generated@@175 $generated@@176 $generated@@177) $generated@@178 $generated@@179))  (=> (and (or (not (= $generated@@178 $generated@@172)) (not true)) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@173 $generated@@178) $generated@@174)))) (or (and (= $generated@@178 $generated@@175) (= $generated@@179 $generated@@176)) (= $generated@@178 $generated@@177))))
 :pattern ( ($generated@@144 $generated@@40 $generated@@45 $generated@@16 ($generated@@145 $generated@@172 $generated@@173 $generated@@174 $generated@@175 $generated@@176 $generated@@177) $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 Int) ) (! (= ($generated@@97 $generated@@17 ($generated@@21 ($generated@@49 $generated@@180))) ($generated@@94 $generated@@46 ($generated@@97 $generated@@17 ($generated@@21 $generated@@180))))
 :pattern ( ($generated@@97 $generated@@17 ($generated@@21 ($generated@@49 $generated@@180))))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@T) ) (! (= ($generated@@97 $generated@@182 ($generated@@94 $generated@@182 $generated@@181)) ($generated@@94 $generated@@46 ($generated@@97 $generated@@182 $generated@@181)))
 :pattern ( ($generated@@97 $generated@@182 ($generated@@94 $generated@@182 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! ($generated@@42 $generated@@17 $generated@@184 $generated@@0 $generated@@183)
 :pattern ( ($generated@@42 $generated@@17 $generated@@184 $generated@@0 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! ($generated@@42 $generated@@16 $generated@@186 $generated $generated@@185)
 :pattern ( ($generated@@42 $generated@@16 $generated@@186 $generated $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! ($generated@@39 $generated@@17 $generated@@187 $generated@@0)
 :pattern ( ($generated@@39 $generated@@17 $generated@@187 $generated@@0))
)))
(assert (forall (($generated@@188 T@U) ) (! ($generated@@39 $generated@@16 $generated@@188 $generated)
 :pattern ( ($generated@@39 $generated@@16 $generated@@188 $generated))
)))
(assert (forall (($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (and ($generated@@36 $generated@@191) ($generated@@36 $generated@@192)) (and (or (not (= $generated@@193 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@193 $generated@@79))) (and ($generated@@135 $generated@@191) ($generated@@89 $generated@@191 $generated@@192))) (=> (forall (($generated@@194 T@U) ($generated@@195 T@U) )  (=> (and (or (not (= $generated@@194 $generated@@38)) (not true)) (or (and (= $generated@@194 $generated@@193) (= $generated@@195 $generated@@84)) (= $generated@@194 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@191 $generated@@193) $generated@@84))))) (= ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@191 $generated@@194) $generated@@195) ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@192 $generated@@194) $generated@@195)))) (= ($generated@@100 $generated@@189 $generated@@190 $generated@@191 $generated@@193) ($generated@@100 $generated@@189 $generated@@190 $generated@@192 $generated@@193))))
 :pattern ( ($generated@@135 $generated@@191) ($generated@@89 $generated@@191 $generated@@192) ($generated@@100 $generated@@189 $generated@@190 $generated@@192 $generated@@193))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@196 () Bool)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () Bool)
(declare-fun $generated@@201 () Bool)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () Bool)
(declare-fun $generated@@204 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@205  (=> (= ($generated@@100 $generated@@196 $generated@@197 $generated@@198 $generated@@199)  (and ($generated@@35 $generated@@198 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@198 $generated@@199) $generated@@84))) ($generated@@35 $generated@@197 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@197 $generated@@199) $generated@@84))))) (=> (and (and ($generated@@37 $generated@@198 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@198 $generated@@199) $generated@@84))) (=> ($generated@@35 $generated@@198 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@198 $generated@@199) $generated@@84))) ($generated@@37 $generated@@197 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@197 $generated@@199) $generated@@84))))) ($generated@@39 $generated@@16 ($generated@@19 ($generated@@100 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@200) (=> $generated@@200 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@201)))))))
(let (($generated@@206  (=> (and (not ($generated@@35 $generated@@198 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@198 $generated@@199) $generated@@84)))) (= (ControlFlow 0 9) 3)) $generated@@205)))
(let (($generated@@207  (=> ($generated@@35 $generated@@198 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@198 $generated@@199) $generated@@84))) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@42 $generated@@40 $generated@@199 $generated@@79 $generated@@197)) (=> ($generated@@42 $generated@@40 $generated@@199 $generated@@79 $generated@@197) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (not (= ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@197 $generated@@199) $generated@@84)) $generated@@38)) (not true))) (=> (or (not (= ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@197 $generated@@199) $generated@@84)) $generated@@38)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@42 $generated@@40 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@197 $generated@@199) $generated@@84)) $generated@@41 $generated@@197)) (=> ($generated@@42 $generated@@40 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@197 $generated@@199) $generated@@84)) $generated@@41 $generated@@197) (=> (and ($generated@@37 $generated@@197 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@197 $generated@@199) $generated@@84))) (= (ControlFlow 0 5) 3)) $generated@@205))))))))))
(let (($generated@@208  (=> (= $generated@@200 ($generated@@20 ($generated@@144 $generated@@40 $generated@@45 $generated@@16 $generated@@202 $generated@@199 $generated@@84))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (not (= ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@198 $generated@@199) $generated@@84)) $generated@@38)) (not true))) (=> (or (not (= ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@198 $generated@@199) $generated@@84)) $generated@@38)) (not true)) (=> ($generated@@107 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@198 $generated@@199) $generated@@84) $generated@@72 $generated@@198) (=> (and (= $generated@@201 (forall (($generated@@209 T@U) ($generated@@210 T@U) )  (=> (and (and (or (not (= $generated@@209 $generated@@38)) (not true)) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@198 $generated@@209) $generated@@3)))) (= $generated@@209 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@198 $generated@@199) $generated@@84)))) ($generated@@20 ($generated@@144 $generated@@40 $generated@@45 $generated@@16 $generated@@202 $generated@@209 $generated@@210))))) ($generated@@37 $generated@@198 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@198 $generated@@199) $generated@@84)))) (and (=> (= (ControlFlow 0 10) 5) $generated@@207) (=> (= (ControlFlow 0 10) 9) $generated@@206)))))))))
(let (($generated@@211 true))
(let (($generated@@212  (=> (= $generated@@202 ($generated@@145 $generated@@38 $generated@@198 $generated@@3 $generated@@199 $generated@@84 ($generated@@43 $generated@@40 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@40 ($generated@@47 $generated@@45 $generated@@46) $generated@@198 $generated@@199) $generated@@84)))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (or (not (= $generated@@199 $generated@@38)) (not true))) (=> (or (not (= $generated@@199 $generated@@38)) (not true)) (=> (= $generated@@203 ($generated@@20 ($generated@@144 $generated@@40 $generated@@45 $generated@@16 $generated@@202 $generated@@199 $generated@@84))) (and (=> (= (ControlFlow 0 12) (- 0 13)) $generated@@203) (=> $generated@@203 (and (=> (= (ControlFlow 0 12) 1) $generated@@211) (=> (= (ControlFlow 0 12) 10) $generated@@208))))))))))
(let (($generated@@213  (=> (and ($generated@@36 $generated@@197) ($generated@@135 $generated@@197)) (=> (and (and (and (or (not (= $generated@@199 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@199 $generated@@79) ($generated@@42 $generated@@40 $generated@@199 $generated@@79 $generated@@204))) (= 1 $generated@@34)) (and (and (= $generated@@204 $generated@@197) (and ($generated@@89 $generated@@204 $generated@@198) ($generated@@36 $generated@@198))) (= (ControlFlow 0 15) 12))) $generated@@212))))
$generated@@213))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
