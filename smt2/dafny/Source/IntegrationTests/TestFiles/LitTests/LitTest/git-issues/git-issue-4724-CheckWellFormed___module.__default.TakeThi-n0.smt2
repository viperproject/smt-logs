(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@T T@T) T@T)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@39 (T@T) T@T)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@61 (Int) Int)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@T T@U T@U) Bool)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@97 (T@U Int) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (= ($generated@@5 $generated@@23) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@27 ($generated@@24 $generated@@26) $generated@@28) ($generated@@22 $generated@@23 $generated@@27 ($generated@@25 $generated@@26) $generated@@28))
 :pattern ( ($generated@@22 $generated@@23 $generated@@27 ($generated@@24 $generated@@26) $generated@@28))
)))
(assert (= ($generated@@29 $generated@@30) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@41 T@T) ($generated@@42 T@T) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@32 $generated@@41 $generated@@42 ($generated@@38 $generated@@41 $generated@@42 $generated@@44 $generated@@45 $generated@@43) $generated@@45) $generated@@43)
 :weight 0
)) (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (or (= $generated@@50 $generated@@51) (= ($generated@@32 $generated@@46 $generated@@47 ($generated@@38 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@51) ($generated@@32 $generated@@46 $generated@@47 $generated@@49 $generated@@51)))
 :weight 0
))) (= ($generated@@5 $generated@@33) 4)) (= ($generated@@5 $generated@@34) 5)) (= ($generated@@5 $generated@@35) 6)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ) (= ($generated@@5 ($generated@@36 $generated@@52 $generated@@53)) 7))) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (! (= ($generated@@39 ($generated@@36 $generated@@54 $generated@@55)) $generated@@54)
 :pattern ( ($generated@@36 $generated@@54 $generated@@55))
))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@40 ($generated@@36 $generated@@56 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@36 $generated@@56 $generated@@57))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> ($generated@@31 $generated@@58 $generated@@59) (forall (($generated@@60 T@U) ) (!  (=> ($generated@@10 ($generated@@37 $generated@@6 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@58 $generated@@60) $generated@@2))) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@59 $generated@@60) $generated@@2))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@59 $generated@@60) $generated@@2))
)))
 :pattern ( ($generated@@31 $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@62 Int) ) (! (= ($generated@@61 $generated@@62) $generated@@62)
 :pattern ( ($generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@63 $generated@@65 $generated@@64) $generated@@64)
 :pattern ( ($generated@@63 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 ($generated@@37 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@37 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@66 $generated@@73 $generated@@70) $generated@@71 $generated@@72) ($generated@@22 $generated@@73 $generated@@70 $generated@@71 $generated@@72))
 :pattern ( ($generated@@69 ($generated@@66 $generated@@73 $generated@@70) $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> ($generated@@31 $generated@@74 $generated@@75) (=> ($generated@@69 $generated@@76 $generated@@77 $generated@@74) ($generated@@69 $generated@@76 $generated@@77 $generated@@75)))
 :pattern ( ($generated@@31 $generated@@74 $generated@@75) ($generated@@69 $generated@@76 $generated@@77 $generated@@74))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (!  (=> ($generated@@31 $generated@@78 $generated@@79) (=> ($generated@@22 $generated@@82 $generated@@80 $generated@@81 $generated@@78) ($generated@@22 $generated@@82 $generated@@80 $generated@@81 $generated@@79)))
 :pattern ( ($generated@@31 $generated@@78 $generated@@79) ($generated@@22 $generated@@82 $generated@@80 $generated@@81 $generated@@78))
)))
(assert (forall (($generated@@84 T@U) ) (!  (and (= ($generated@@21 ($generated@@24 $generated@@84)) $generated@@3) (= ($generated@@83 ($generated@@24 $generated@@84)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@85 $generated@@23 $generated@@87 ($generated@@24 $generated@@86))  (and ($generated@@85 $generated@@23 $generated@@87 ($generated@@25 $generated@@86)) (<= ($generated@@29 $generated@@87) ($generated@@61 31))))
 :pattern ( ($generated@@85 $generated@@23 $generated@@87 ($generated@@24 $generated@@86)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (or (not (= $generated@@88 $generated@@90)) (not true)) (=> (and ($generated@@31 $generated@@88 $generated@@89) ($generated@@31 $generated@@89 $generated@@90)) ($generated@@31 $generated@@88 $generated@@90)))
 :pattern ( ($generated@@31 $generated@@88 $generated@@89) ($generated@@31 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@91 $generated@@92 $generated) (and (= ($generated@@66 $generated@@7 ($generated@@37 $generated@@7 $generated@@92)) $generated@@92) ($generated@@85 $generated@@7 ($generated@@37 $generated@@7 $generated@@92) $generated)))
 :pattern ( ($generated@@91 $generated@@92 $generated))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@91 ($generated@@66 $generated@@95 $generated@@93) $generated@@94) ($generated@@85 $generated@@95 $generated@@93 $generated@@94))
 :pattern ( ($generated@@91 ($generated@@66 $generated@@95 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (<= 0 ($generated@@29 $generated@@96))
 :pattern ( ($generated@@29 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@98 ($generated@@25 $generated@@99) $generated@@100) (forall (($generated@@101 Int) ) (!  (=> (and (<= 0 $generated@@101) (< $generated@@101 ($generated@@29 $generated@@98))) ($generated@@69 ($generated@@97 $generated@@98 $generated@@101) $generated@@99 $generated@@100))
 :pattern ( ($generated@@97 $generated@@98 $generated@@101))
)))
 :pattern ( ($generated@@22 $generated@@23 $generated@@98 ($generated@@25 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@102 ($generated@@25 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@25 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@21 ($generated@@25 $generated@@104)) $generated@@1)
 :pattern ( ($generated@@25 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@105 ($generated@@24 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@24 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@37 $generated@@108 ($generated@@66 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@66 $generated@@108 $generated@@107))
)))
(assert  (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@109 $generated@@112 $generated@@113 $generated@@114 ($generated@@111 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@117 $generated@@118) $generated@@115)
 :weight 0
)) (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@109 $generated@@119 $generated@@120 $generated@@121 ($generated@@111 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@109 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@109 $generated@@128 $generated@@129 $generated@@130 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@109 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 Bool) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@10 ($generated@@109 $generated@@35 $generated@@33 $generated@@6 ($generated@@110 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))  (=> (and (or (not (= $generated@@141 $generated@@137)) (not true)) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@138 $generated@@141) $generated@@139)))) $generated@@140))
 :pattern ( ($generated@@109 $generated@@35 $generated@@33 $generated@@6 ($generated@@110 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@91 $generated@@143 ($generated@@25 $generated@@144)) (and (= ($generated@@66 $generated@@23 ($generated@@37 $generated@@23 $generated@@143)) $generated@@143) ($generated@@85 $generated@@23 ($generated@@37 $generated@@23 $generated@@143) ($generated@@25 $generated@@144))))
 :pattern ( ($generated@@91 $generated@@143 ($generated@@25 $generated@@144)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> ($generated@@91 $generated@@146 ($generated@@24 $generated@@145)) (and (= ($generated@@66 $generated@@23 ($generated@@37 $generated@@23 $generated@@146)) $generated@@146) ($generated@@85 $generated@@23 ($generated@@37 $generated@@23 $generated@@146) ($generated@@24 $generated@@145))))
 :pattern ( ($generated@@91 $generated@@146 ($generated@@24 $generated@@145)))
)))
(assert (forall (($generated@@147 Int) ) (! (= ($generated@@66 $generated@@7 ($generated@@11 ($generated@@61 $generated@@147))) ($generated@@63 $generated@@34 ($generated@@66 $generated@@7 ($generated@@11 $generated@@147))))
 :pattern ( ($generated@@66 $generated@@7 ($generated@@11 ($generated@@61 $generated@@147))))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@66 $generated@@149 ($generated@@63 $generated@@149 $generated@@148)) ($generated@@63 $generated@@34 ($generated@@66 $generated@@149 $generated@@148)))
 :pattern ( ($generated@@66 $generated@@149 ($generated@@63 $generated@@149 $generated@@148)))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= ($generated@@29 $generated@@150) 0) (= $generated@@150 $generated@@30))
 :pattern ( ($generated@@29 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! ($generated@@22 $generated@@7 $generated@@152 $generated $generated@@151)
 :pattern ( ($generated@@22 $generated@@7 $generated@@152 $generated $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@85 $generated@@23 $generated@@153 ($generated@@25 $generated@@154)) (forall (($generated@@155 Int) ) (!  (=> (and (<= 0 $generated@@155) (< $generated@@155 ($generated@@29 $generated@@153))) ($generated@@91 ($generated@@97 $generated@@153 $generated@@155) $generated@@154))
 :pattern ( ($generated@@97 $generated@@153 $generated@@155))
)))
 :pattern ( ($generated@@85 $generated@@23 $generated@@153 ($generated@@25 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ) (! ($generated@@85 $generated@@7 $generated@@156 $generated)
 :pattern ( ($generated@@85 $generated@@7 $generated@@156 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@164  (=> (and (= $generated@@157 ($generated@@110 $generated@@158 $generated@@159 $generated@@2 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@85 $generated@@23 ($generated@@63 $generated@@23 $generated@@30) ($generated@@24 $generated)))))
(let (($generated@@165  (=> (and ($generated@@160 $generated@@159) ($generated@@161 $generated@@159)) (=> (and (and ($generated@@85 $generated@@23 $generated@@162 ($generated@@24 $generated)) ($generated@@22 $generated@@23 $generated@@162 ($generated@@24 $generated) $generated@@159)) (and (= 1 $generated@@163) (= (ControlFlow 0 3) 2))) $generated@@164))))
$generated@@165)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
