(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U Int) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@113 (T@T T@U T@U) Bool)
(declare-fun $generated@@119 (T@U T@U) Bool)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@1))
(assert (= ($generated@@25 $generated@@0) $generated@@2))
(assert (= ($generated@@9 $generated@@31) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 Int) ) (!  (=> (and (<= 0 $generated@@33) (< $generated@@33 ($generated@@28 $generated@@32))) (< ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@32 $generated@@33))) ($generated@@29 ($generated@@27 $generated@@32))))
 :pattern ( ($generated@@26 $generated@@32 $generated@@33) ($generated@@27 $generated@@32))
)))
(assert (= ($generated@@28 $generated@@34) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@36 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@36 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@36 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@9 $generated@@37) 4)) (= ($generated@@9 $generated@@38) 5)) (= ($generated@@9 $generated@@39) 6)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@9 ($generated@@40 $generated@@55 $generated@@56)) 7))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@40 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@40 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@40 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> ($generated@@35 $generated@@61 $generated@@62) (forall (($generated@@63 T@U) ) (!  (=> ($generated@@14 ($generated@@30 $generated@@10 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@61 $generated@@63) $generated@@4))) ($generated@@14 ($generated@@30 $generated@@10 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@62 $generated@@63) $generated@@4))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@62 $generated@@63) $generated@@4))
)))
 :pattern ( ($generated@@35 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@64 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@69 $generated@@71) (= ($generated@@70 $generated@@71) $generated@@6))
 :pattern ( ($generated@@69 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@72 $generated@@73) (= ($generated@@70 $generated@@73) $generated@@7))
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@30 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@30 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@69 $generated@@78) (exists (($generated@@79 T@U) ) (= $generated@@78 ($generated@@77 $generated@@79))))
 :pattern ( ($generated@@69 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@72 $generated@@80) (exists (($generated@@81 T@U) ) (= $generated@@80 ($generated@@27 $generated@@81))))
 :pattern ( ($generated@@72 $generated@@80))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@82 ($generated@@74 $generated@@87 $generated@@84) $generated@@85 $generated@@86) ($generated@@83 $generated@@87 $generated@@84 $generated@@85 $generated@@86))
 :pattern ( ($generated@@82 ($generated@@74 $generated@@87 $generated@@84) $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> ($generated@@35 $generated@@88 $generated@@89) (=> ($generated@@82 $generated@@90 $generated@@91 $generated@@88) ($generated@@82 $generated@@90 $generated@@91 $generated@@89)))
 :pattern ( ($generated@@35 $generated@@88 $generated@@89) ($generated@@82 $generated@@90 $generated@@91 $generated@@88))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (!  (=> ($generated@@35 $generated@@92 $generated@@93) (=> ($generated@@83 $generated@@96 $generated@@94 $generated@@95 $generated@@92) ($generated@@83 $generated@@96 $generated@@94 $generated@@95 $generated@@93)))
 :pattern ( ($generated@@35 $generated@@92 $generated@@93) ($generated@@83 $generated@@96 $generated@@94 $generated@@95 $generated@@92))
)))
(assert (forall (($generated@@99 T@U) ) (!  (and (= ($generated@@25 ($generated@@97 $generated@@99)) $generated@@5) (= ($generated@@98 ($generated@@97 $generated@@99)) $generated@@8))
 :pattern ( ($generated@@97 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@100 $generated@@103) (= ($generated@@83 $generated@@31 ($generated@@77 $generated@@102) ($generated@@97 $generated@@101) $generated@@103) ($generated@@82 $generated@@102 $generated@@101 $generated@@103)))
 :pattern ( ($generated@@83 $generated@@31 ($generated@@77 $generated@@102) ($generated@@97 $generated@@101) $generated@@103))
)))
(assert (= ($generated@@9 $generated@@104) 8))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (and ($generated@@100 $generated@@108) (and ($generated@@72 $generated@@107) (exists (($generated@@109 T@U) ) (! ($generated@@83 $generated@@31 $generated@@107 ($generated@@97 $generated@@109) $generated@@108)
 :pattern ( ($generated@@83 $generated@@31 $generated@@107 ($generated@@97 $generated@@109) $generated@@108))
)))) ($generated@@83 $generated@@104 ($generated@@105 $generated@@107) ($generated@@106 $generated) $generated@@108))
 :pattern ( ($generated@@83 $generated@@104 ($generated@@105 $generated@@107) ($generated@@106 $generated) $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> ($generated@@100 $generated@@112) (= ($generated@@83 $generated@@31 ($generated@@27 $generated@@111) ($generated@@97 $generated@@110) $generated@@112) ($generated@@83 $generated@@104 $generated@@111 ($generated@@106 $generated) $generated@@112)))
 :pattern ( ($generated@@83 $generated@@31 ($generated@@27 $generated@@111) ($generated@@97 $generated@@110) $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> ($generated@@113 $generated@@31 $generated@@115 ($generated@@97 $generated@@114)) (or ($generated@@69 $generated@@115) ($generated@@72 $generated@@115)))
 :pattern ( ($generated@@72 $generated@@115) ($generated@@113 $generated@@31 $generated@@115 ($generated@@97 $generated@@114)))
 :pattern ( ($generated@@69 $generated@@115) ($generated@@113 $generated@@31 $generated@@115 ($generated@@97 $generated@@114)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or (not (= $generated@@116 $generated@@118)) (not true)) (=> (and ($generated@@35 $generated@@116 $generated@@117) ($generated@@35 $generated@@117 $generated@@118)) ($generated@@35 $generated@@116 $generated@@118)))
 :pattern ( ($generated@@35 $generated@@116 $generated@@117) ($generated@@35 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@119 $generated@@120 $generated@@0) (and (= ($generated@@74 $generated@@11 ($generated@@30 $generated@@11 $generated@@120)) $generated@@120) ($generated@@113 $generated@@11 ($generated@@30 $generated@@11 $generated@@120) $generated@@0)))
 :pattern ( ($generated@@119 $generated@@120 $generated@@0))
)))
(assert (= ($generated@@9 $generated@@121) 9))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@119 $generated@@122 $generated) (and (= ($generated@@74 $generated@@121 ($generated@@30 $generated@@121 $generated@@122)) $generated@@122) ($generated@@113 $generated@@121 ($generated@@30 $generated@@121 $generated@@122) $generated)))
 :pattern ( ($generated@@119 $generated@@122 $generated))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@119 ($generated@@74 $generated@@125 $generated@@123) $generated@@124) ($generated@@113 $generated@@125 $generated@@123 $generated@@124))
 :pattern ( ($generated@@119 ($generated@@74 $generated@@125 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (<= 0 ($generated@@28 $generated@@126))
 :pattern ( ($generated@@28 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@83 $generated@@104 $generated@@127 ($generated@@106 $generated@@128) $generated@@129) (forall (($generated@@130 Int) ) (!  (=> (and (<= 0 $generated@@130) (< $generated@@130 ($generated@@28 $generated@@127))) ($generated@@82 ($generated@@26 $generated@@127 $generated@@130) $generated@@128 $generated@@129))
 :pattern ( ($generated@@26 $generated@@127 $generated@@130))
)))
 :pattern ( ($generated@@83 $generated@@104 $generated@@127 ($generated@@106 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@106 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@106 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@25 ($generated@@106 $generated@@133)) $generated@@3)
 :pattern ( ($generated@@106 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@134 ($generated@@97 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@97 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@70 ($generated@@77 $generated@@136)) $generated@@6)
 :pattern ( ($generated@@77 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@137 ($generated@@77 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@77 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@70 ($generated@@27 $generated@@139)) $generated@@7)
 :pattern ( ($generated@@27 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@105 ($generated@@27 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@27 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@30 $generated@@142 ($generated@@74 $generated@@142 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@74 $generated@@142 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@113 $generated@@31 ($generated@@77 $generated@@144) ($generated@@97 $generated@@143)) ($generated@@119 $generated@@144 $generated@@143))
 :pattern ( ($generated@@113 $generated@@31 ($generated@@77 $generated@@144) ($generated@@97 $generated@@143)))
)))
(assert (forall (($generated@@146 T@U) ) (! (< ($generated@@145 $generated@@146) ($generated@@29 ($generated@@77 $generated@@146)))
 :pattern ( ($generated@@77 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ) (! (< ($generated@@147 $generated@@148) ($generated@@29 ($generated@@27 $generated@@148)))
 :pattern ( ($generated@@27 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@100 $generated@@151) (and ($generated@@69 $generated@@149) ($generated@@83 $generated@@31 $generated@@149 ($generated@@97 $generated@@150) $generated@@151))) ($generated@@82 ($generated@@137 $generated@@149) $generated@@150 $generated@@151))
 :pattern ( ($generated@@82 ($generated@@137 $generated@@149) $generated@@150 $generated@@151))
)))
(assert  (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@152 $generated@@155 $generated@@156 $generated@@157 ($generated@@154 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@160 $generated@@161) $generated@@158)
 :weight 0
)) (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@152 $generated@@162 $generated@@163 $generated@@164 ($generated@@154 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@152 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@152 $generated@@171 $generated@@172 $generated@@173 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@152 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@14 ($generated@@152 $generated@@39 $generated@@37 $generated@@10 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (or (not (= $generated@@184 $generated@@180)) (not true)) ($generated@@14 ($generated@@30 $generated@@10 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@181 $generated@@184) $generated@@182)))) $generated@@183))
 :pattern ( ($generated@@152 $generated@@39 $generated@@37 $generated@@10 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@145 ($generated@@74 $generated@@31 $generated@@186)) ($generated@@29 $generated@@186))
 :pattern ( ($generated@@145 ($generated@@74 $generated@@31 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@119 $generated@@187 ($generated@@106 $generated@@188)) (and (= ($generated@@74 $generated@@104 ($generated@@30 $generated@@104 $generated@@187)) $generated@@187) ($generated@@113 $generated@@104 ($generated@@30 $generated@@104 $generated@@187) ($generated@@106 $generated@@188))))
 :pattern ( ($generated@@119 $generated@@187 ($generated@@106 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@119 $generated@@190 ($generated@@97 $generated@@189)) (and (= ($generated@@74 $generated@@31 ($generated@@30 $generated@@31 $generated@@190)) $generated@@190) ($generated@@113 $generated@@31 ($generated@@30 $generated@@31 $generated@@190) ($generated@@97 $generated@@189))))
 :pattern ( ($generated@@119 $generated@@190 ($generated@@97 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@113 $generated@@31 ($generated@@27 $generated@@192) ($generated@@97 $generated@@191)) ($generated@@113 $generated@@104 $generated@@192 ($generated@@106 $generated)))
 :pattern ( ($generated@@113 $generated@@31 ($generated@@27 $generated@@192) ($generated@@97 $generated@@191)))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@74 $generated@@11 ($generated@@15 ($generated@@64 $generated@@193))) ($generated@@66 $generated@@38 ($generated@@74 $generated@@11 ($generated@@15 $generated@@193))))
 :pattern ( ($generated@@74 $generated@@11 ($generated@@15 ($generated@@64 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@77 ($generated@@66 $generated@@38 $generated@@194)) ($generated@@66 $generated@@31 ($generated@@77 $generated@@194)))
 :pattern ( ($generated@@77 ($generated@@66 $generated@@38 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@27 ($generated@@66 $generated@@104 $generated@@195)) ($generated@@66 $generated@@31 ($generated@@27 $generated@@195)))
 :pattern ( ($generated@@27 ($generated@@66 $generated@@104 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@T) ) (! (= ($generated@@74 $generated@@197 ($generated@@66 $generated@@197 $generated@@196)) ($generated@@66 $generated@@38 ($generated@@74 $generated@@197 $generated@@196)))
 :pattern ( ($generated@@74 $generated@@197 ($generated@@66 $generated@@197 $generated@@196)))
)))
(assert (forall (($generated@@198 T@U) ) (!  (=> (= ($generated@@28 $generated@@198) 0) (= $generated@@198 $generated@@34))
 :pattern ( ($generated@@28 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! ($generated@@83 $generated@@11 $generated@@200 $generated@@0 $generated@@199)
 :pattern ( ($generated@@83 $generated@@11 $generated@@200 $generated@@0 $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! ($generated@@83 $generated@@121 $generated@@202 $generated $generated@@201)
 :pattern ( ($generated@@83 $generated@@121 $generated@@202 $generated $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@113 $generated@@104 $generated@@203 ($generated@@106 $generated@@204)) (forall (($generated@@205 Int) ) (!  (=> (and (<= 0 $generated@@205) (< $generated@@205 ($generated@@28 $generated@@203))) ($generated@@119 ($generated@@26 $generated@@203 $generated@@205) $generated@@204))
 :pattern ( ($generated@@26 $generated@@203 $generated@@205))
)))
 :pattern ( ($generated@@113 $generated@@104 $generated@@203 ($generated@@106 $generated@@204)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 Int) ) (!  (=> (and (<= 0 $generated@@207) (< $generated@@207 ($generated@@28 $generated@@206))) (< ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@206 $generated@@207))) ($generated@@147 $generated@@206)))
 :pattern ( ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@206 $generated@@207))))
)))
(assert (forall (($generated@@208 T@U) ) (! ($generated@@113 $generated@@11 $generated@@208 $generated@@0)
 :pattern ( ($generated@@113 $generated@@11 $generated@@208 $generated@@0))
)))
(assert (forall (($generated@@209 T@U) ) (! ($generated@@113 $generated@@121 $generated@@209 $generated)
 :pattern ( ($generated@@113 $generated@@121 $generated@@209 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@220 true))
(let (($generated@@221 true))
(let (($generated@@222  (=> (=> (<= ($generated@@64 0) $generated@@210) (and (and ($generated@@69 $generated@@211) (= ($generated@@16 ($generated@@30 $generated@@11 ($generated@@137 $generated@@211))) $generated@@210)) (= $generated@@212 (+ (+ $generated@@210 $generated@@210) $generated@@210)))) (and (=> (= (ControlFlow 0 5) 1) $generated@@221) (=> (= (ControlFlow 0 5) 2) $generated@@220)))))
(let (($generated@@223  (=> (and (<= ($generated@@64 0) $generated@@210) ($generated@@69 $generated@@211)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@69 $generated@@211)) (=> ($generated@@69 $generated@@211) (=> (and (= ($generated@@16 ($generated@@30 $generated@@11 ($generated@@137 $generated@@211))) $generated@@210) (= $generated@@212 (+ (+ $generated@@210 $generated@@210) $generated@@210))) (and (=> (= (ControlFlow 0 3) 1) $generated@@221) (=> (= (ControlFlow 0 3) 2) $generated@@220))))))))
(let (($generated@@224  (=> (= $generated@@213 ($generated@@153 $generated@@214 $generated@@215 $generated@@4 false)) (=> (and ($generated@@100 $generated@@216) ($generated@@217 $generated@@216)) (=> (and (and (forall (($generated@@225 T@U) ) (!  (=> (and (or (not (= $generated@@225 $generated@@214)) (not true)) ($generated@@14 ($generated@@30 $generated@@10 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@215 $generated@@225) $generated@@4)))) (= ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@216 $generated@@225) ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@215 $generated@@225)))
 :pattern ( ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@216 $generated@@225))
)) ($generated@@35 $generated@@215 $generated@@216)) (and ($generated@@113 $generated@@31 $generated@@211 ($generated@@97 $generated@@0)) ($generated@@83 $generated@@31 $generated@@211 ($generated@@97 $generated@@0) $generated@@216))) (and (=> (= (ControlFlow 0 6) 3) $generated@@223) (=> (= (ControlFlow 0 6) 5) $generated@@222)))))))
(let (($generated@@226  (=> (and ($generated@@100 $generated@@215) ($generated@@217 $generated@@215)) (=> (and (and ($generated@@113 $generated@@31 $generated@@218 ($generated@@97 $generated@@0)) ($generated@@83 $generated@@31 $generated@@218 ($generated@@97 $generated@@0) $generated@@215)) (and (= 1 $generated@@219) (= (ControlFlow 0 7) 6))) $generated@@224))))
$generated@@226)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
