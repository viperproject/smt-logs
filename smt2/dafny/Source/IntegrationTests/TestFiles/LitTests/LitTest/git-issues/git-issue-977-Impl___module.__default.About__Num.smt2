(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U Int T@U) Bool)
(declare-fun $generated@@27 (Int) Int)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 (Int) T@U)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@41 (T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@86 (Int T@U) Bool)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@104 (T@U) Bool)
(declare-fun $generated@@114 (T@U) Bool)
(declare-fun $generated@@118 (T@U T@U) Bool)
(declare-fun $generated@@119 (T@U) Bool)
(declare-fun $generated@@128 (T@U) Bool)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@158 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@213 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@218 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@4 $generated@@24) 3))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and ($generated@@23 $generated@@24 $generated@@29 $generated@@25) ($generated@@21 ($generated@@22 $generated@@28) $generated@@29)) (forall (($generated@@30 Int) ) (!  (=> (<= ($generated@@27 0) $generated@@30) ($generated@@26 ($generated@@22 $generated@@28) $generated@@30 $generated@@29))
 :pattern ( ($generated@@26 ($generated@@22 $generated@@28) $generated@@30 $generated@@29))
)))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@28) $generated@@29))
))))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and ($generated@@31 $generated@@32 $generated@@33) ($generated@@31 $generated@@33 $generated@@34)) ($generated@@31 $generated@@32 $generated@@34))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33) ($generated@@31 $generated@@33 $generated@@34))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33) ($generated@@31 $generated@@32 $generated@@34))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 Int) ($generated@@40 Int) ) (!  (=> (and (and (<= 0 $generated@@39) (<= 0 $generated@@40)) (<= (+ $generated@@39 $generated@@40) ($generated@@37 $generated@@38))) (= ($generated@@35 ($generated@@35 $generated@@38 ($generated@@36 $generated@@39)) ($generated@@36 $generated@@40)) ($generated@@35 $generated@@38 ($generated@@36 (+ $generated@@39 $generated@@40)))))
 :pattern ( ($generated@@35 ($generated@@35 $generated@@38 ($generated@@36 $generated@@39)) ($generated@@36 $generated@@40)))
)))
(assert (= ($generated@@4 $generated@@43) 4))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (or ($generated@@44 ($generated@@42 $generated@@43 $generated@@48) $generated@@49) (and (< 2 $generated@@20) ($generated@@23 $generated@@24 $generated@@49 $generated@@25))) (and (and (=> (< 0 ($generated@@37 $generated@@48)) (=> ($generated@@45 $generated@@49) (let (($generated@@50 ($generated@@46 $generated@@49)))
($generated@@44 ($generated@@35 $generated@@48 ($generated@@36 1)) $generated@@50)))) (=> (=> (< 0 ($generated@@37 $generated@@48)) (ite ($generated@@45 $generated@@49) (let (($generated@@51 ($generated@@46 $generated@@49)))
($generated@@41 ($generated@@22 $generated@@47) ($generated@@35 $generated@@48 ($generated@@36 1)) $generated@@51)) true)) (=> (= ($generated@@27 0) ($generated@@37 $generated@@48)) (forall (($generated@@52 T@U) ) (!  (=> ($generated@@31 $generated@@52 $generated@@48) ($generated@@44 $generated@@52 $generated@@49))
 :pattern ( ($generated@@41 ($generated@@22 $generated@@47) $generated@@52 $generated@@49))
))))) (= ($generated@@41 ($generated@@22 $generated@@47) ($generated@@42 $generated@@43 $generated@@48) $generated@@49)  (and (=> (< 0 ($generated@@37 $generated@@48)) (ite ($generated@@45 $generated@@49) (let (($generated@@53 ($generated@@46 $generated@@49)))
($generated@@41 ($generated@@22 $generated@@47) ($generated@@35 $generated@@48 ($generated@@36 1)) $generated@@53)) true)) (=> (= ($generated@@27 0) ($generated@@37 $generated@@48)) (forall (($generated@@54 T@U) ) (!  (=> ($generated@@31 $generated@@54 $generated@@48) ($generated@@41 ($generated@@22 $generated@@47) $generated@@54 $generated@@49))
 :pattern ( ($generated@@41 ($generated@@22 $generated@@47) $generated@@54 $generated@@49))
)))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@22 $generated@@47) ($generated@@42 $generated@@43 $generated@@48) $generated@@49))
))))
(assert (= ($generated@@55 $generated@@56) $generated@@2))
(assert ($generated@@23 $generated@@24 $generated@@56 $generated@@25))
(assert (forall (($generated@@57 Int) ) (! (= ($generated@@27 $generated@@57) $generated@@57)
 :pattern ( ($generated@@27 $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@42 $generated@@59 $generated@@58) $generated@@58)
 :pattern ( ($generated@@42 $generated@@59 $generated@@58))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 Int) ) (!  (=> (and ($generated@@23 $generated@@24 $generated@@61 $generated@@25) (= $generated@@62 0)) ($generated@@26 $generated@@60 $generated@@62 $generated@@61))
 :pattern ( ($generated@@26 $generated@@60 $generated@@62 $generated@@61))
))))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@45 $generated@@63) (= ($generated@@55 $generated@@63) $generated@@1))
 :pattern ( ($generated@@45 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@64 $generated@@65) (= ($generated@@55 $generated@@65) $generated@@2))
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 ($generated@@66 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@66 $generated@@69 $generated@@68))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (and ($generated@@23 $generated@@24 $generated@@71 $generated@@25) (= $generated@@72 ($generated@@36 0))) ($generated@@41 $generated@@70 $generated@@72 $generated@@71))
 :pattern ( ($generated@@41 $generated@@70 $generated@@72 $generated@@71))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (and ($generated@@23 $generated@@24 $generated@@75 $generated@@25) (forall (($generated@@76 T@U) ) (! ($generated@@41 ($generated@@22 $generated@@74) $generated@@76 $generated@@75)
 :pattern ( ($generated@@41 ($generated@@22 $generated@@74) $generated@@76 $generated@@75))
))) ($generated@@73 ($generated@@22 $generated@@74) $generated@@75))
 :pattern ( ($generated@@73 ($generated@@22 $generated@@74) $generated@@75))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@44 $generated@@78 $generated@@79) (and (< 2 $generated@@20) ($generated@@23 $generated@@24 $generated@@79 $generated@@25))) (and (and (=> (< 0 ($generated@@37 $generated@@78)) (=> ($generated@@45 $generated@@79) (let (($generated@@80 ($generated@@46 $generated@@79)))
($generated@@44 ($generated@@35 $generated@@78 ($generated@@36 1)) $generated@@80)))) (=> (=> (< 0 ($generated@@37 $generated@@78)) (ite ($generated@@45 $generated@@79) (let (($generated@@81 ($generated@@46 $generated@@79)))
($generated@@41 $generated@@77 ($generated@@35 $generated@@78 ($generated@@36 1)) $generated@@81)) true)) (=> (= ($generated@@27 0) ($generated@@37 $generated@@78)) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@31 $generated@@82 $generated@@78) ($generated@@44 $generated@@82 $generated@@79))
 :pattern ( ($generated@@41 $generated@@77 $generated@@82 $generated@@79))
))))) (= ($generated@@41 ($generated@@22 $generated@@77) $generated@@78 $generated@@79)  (and (=> (< 0 ($generated@@37 $generated@@78)) (ite ($generated@@45 $generated@@79) (let (($generated@@83 ($generated@@46 $generated@@79)))
($generated@@41 $generated@@77 ($generated@@35 $generated@@78 ($generated@@36 1)) $generated@@83)) true)) (=> (= ($generated@@27 0) ($generated@@37 $generated@@78)) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@31 $generated@@84 $generated@@78) ($generated@@41 $generated@@77 $generated@@84 $generated@@79))
 :pattern ( ($generated@@41 $generated@@77 $generated@@84 $generated@@79))
)))))))
 :pattern ( ($generated@@41 ($generated@@22 $generated@@77) $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@64 $generated@@85) (= $generated@@85 $generated@@56))
 :pattern ( ($generated@@64 $generated@@85))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@87 T@U) ($generated@@88 Int) ($generated@@89 T@U) ) (!  (=> (or ($generated@@86 ($generated@@27 $generated@@88) $generated@@89) (and (< 2 $generated@@20) (and (<= ($generated@@27 0) $generated@@88) ($generated@@23 $generated@@24 $generated@@89 $generated@@25)))) (and (=> (< 0 $generated@@88) (=> ($generated@@45 $generated@@89) (let (($generated@@90 ($generated@@46 $generated@@89)))
($generated@@86 (- $generated@@88 1) $generated@@90)))) (= ($generated@@26 ($generated@@22 $generated@@87) ($generated@@27 $generated@@88) $generated@@89)  (=> (< 0 $generated@@88) (ite ($generated@@45 $generated@@89) (let (($generated@@91 ($generated@@46 $generated@@89)))
($generated@@26 ($generated@@22 $generated@@87) (- $generated@@88 1) $generated@@91)) true)))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@22 $generated@@87) ($generated@@27 $generated@@88) $generated@@89))
))))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@45 $generated@@93) (exists (($generated@@94 T@U) ) (= $generated@@93 ($generated@@92 $generated@@94))))
 :pattern ( ($generated@@45 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@41 ($generated@@22 $generated@@95) $generated@@96 $generated@@97) ($generated@@41 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@41 ($generated@@22 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 Int) ($generated@@100 T@U) ) (! (= ($generated@@26 ($generated@@22 $generated@@98) $generated@@99 $generated@@100) ($generated@@26 $generated@@98 $generated@@99 $generated@@100))
 :pattern ( ($generated@@26 ($generated@@22 $generated@@98) $generated@@99 $generated@@100))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (and ($generated@@23 $generated@@24 $generated@@102 $generated@@25) ($generated@@73 ($generated@@22 $generated@@101) $generated@@102)) (forall (($generated@@103 T@U) ) (! ($generated@@41 ($generated@@22 $generated@@101) $generated@@103 $generated@@102)
 :pattern ( ($generated@@41 ($generated@@22 $generated@@101) $generated@@103 $generated@@102))
)))
 :pattern ( ($generated@@73 ($generated@@22 $generated@@101) $generated@@102))
))))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and ($generated@@104 $generated@@106) (<= ($generated@@37 $generated@@106) ($generated@@37 $generated@@105))) (and (= ($generated@@104 ($generated@@35 $generated@@105 $generated@@106)) ($generated@@104 $generated@@105)) (= ($generated@@37 ($generated@@35 $generated@@105 $generated@@106)) (- ($generated@@37 $generated@@105) ($generated@@37 $generated@@106)))))
 :pattern ( ($generated@@35 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@107 Int) ) (!  (=> (<= 0 $generated@@107) (and ($generated@@104 ($generated@@36 $generated@@107)) (= ($generated@@37 ($generated@@36 $generated@@107)) $generated@@107)))
 :pattern ( ($generated@@36 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@92 $generated@@108) $generated@@25) ($generated@@23 $generated@@24 $generated@@108 $generated@@25))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@92 $generated@@108) $generated@@25))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@109 T@U) ($generated@@110 Int) ($generated@@111 T@U) ) (!  (=> (or ($generated@@86 $generated@@110 $generated@@111) (and (< 2 $generated@@20) (and (<= ($generated@@27 0) $generated@@110) ($generated@@23 $generated@@24 $generated@@111 $generated@@25)))) (and (=> (< 0 $generated@@110) (=> ($generated@@45 $generated@@111) (let (($generated@@112 ($generated@@46 $generated@@111)))
($generated@@86 (- $generated@@110 1) $generated@@112)))) (= ($generated@@26 ($generated@@22 $generated@@109) $generated@@110 $generated@@111)  (=> (< 0 $generated@@110) (ite ($generated@@45 $generated@@111) (let (($generated@@113 ($generated@@46 $generated@@111)))
($generated@@26 $generated@@109 (- $generated@@110 1) $generated@@113)) true)))))
 :pattern ( ($generated@@26 ($generated@@22 $generated@@109) $generated@@110 $generated@@111))
))))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@114 $generated@@115) (or ($generated@@45 $generated@@115) ($generated@@64 $generated@@115)))
 :pattern ( ($generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (or ($generated@@31 $generated@@116 $generated@@117) (= $generated@@116 $generated@@117)) ($generated@@31 $generated@@117 $generated@@116))
 :pattern ( ($generated@@31 $generated@@116 $generated@@117) ($generated@@31 $generated@@117 $generated@@116))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or ($generated@@119 ($generated@@42 $generated@@24 $generated@@121)) (and (< 1 $generated@@20) ($generated@@23 $generated@@24 $generated@@121 $generated@@25))) (and (=> ($generated@@9 ($generated@@42 $generated@@5 ($generated@@8 ($generated@@45 ($generated@@42 $generated@@24 $generated@@121))))) (let (($generated@@122 ($generated@@42 $generated@@24 ($generated@@46 ($generated@@42 $generated@@24 $generated@@121)))))
($generated@@119 $generated@@122))) (= ($generated@@118 ($generated@@22 $generated@@120) ($generated@@42 $generated@@24 $generated@@121)) (ite ($generated@@45 ($generated@@42 $generated@@24 $generated@@121)) ($generated@@9 (let (($generated@@123 ($generated@@42 $generated@@24 ($generated@@46 ($generated@@42 $generated@@24 $generated@@121)))))
($generated@@42 $generated@@5 ($generated@@8 ($generated@@118 ($generated@@22 $generated@@120) $generated@@123))))) true))))
 :weight 3
 :pattern ( ($generated@@118 ($generated@@22 $generated@@120) ($generated@@42 $generated@@24 $generated@@121)))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (or ($generated@@119 $generated@@125) (and (< 1 $generated@@20) ($generated@@23 $generated@@24 $generated@@125 $generated@@25))) (and (=> ($generated@@45 $generated@@125) (let (($generated@@126 ($generated@@46 $generated@@125)))
($generated@@119 $generated@@126))) (= ($generated@@118 ($generated@@22 $generated@@124) $generated@@125) (ite ($generated@@45 $generated@@125) (let (($generated@@127 ($generated@@46 $generated@@125)))
($generated@@118 $generated@@124 $generated@@127)) true))))
 :pattern ( ($generated@@118 ($generated@@22 $generated@@124) $generated@@125))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (or ($generated@@128 $generated@@130) (and (< 1 $generated@@20) ($generated@@23 $generated@@24 $generated@@130 $generated@@25))) (and (=> ($generated@@45 $generated@@130) (let (($generated@@131 ($generated@@46 $generated@@130)))
($generated@@128 $generated@@131))) (= ($generated@@73 ($generated@@22 $generated@@129) $generated@@130) (ite ($generated@@45 $generated@@130) (let (($generated@@132 ($generated@@46 $generated@@130)))
($generated@@73 $generated@@129 $generated@@132)) true))))
 :pattern ( ($generated@@73 ($generated@@22 $generated@@129) $generated@@130))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (or ($generated@@133 $generated@@135) (and (< 1 $generated@@20) ($generated@@23 $generated@@24 $generated@@135 $generated@@25))) (and (=> ($generated@@45 $generated@@135) (let (($generated@@136 ($generated@@46 $generated@@135)))
($generated@@133 $generated@@136))) (= ($generated@@21 ($generated@@22 $generated@@134) $generated@@135) (ite ($generated@@45 $generated@@135) (let (($generated@@137 ($generated@@46 $generated@@135)))
($generated@@21 $generated@@134 $generated@@137)) true))))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@134) $generated@@135))
))))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@138 $generated@@25) (or ($generated@@45 $generated@@138) ($generated@@64 $generated@@138)))
 :pattern ( ($generated@@64 $generated@@138) ($generated@@23 $generated@@24 $generated@@138 $generated@@25))
 :pattern ( ($generated@@45 $generated@@138) ($generated@@23 $generated@@24 $generated@@138 $generated@@25))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@118 ($generated@@22 $generated@@139) $generated@@140) ($generated@@118 $generated@@139 $generated@@140))
 :pattern ( ($generated@@118 ($generated@@22 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@73 ($generated@@22 $generated@@141) $generated@@142) ($generated@@73 $generated@@141 $generated@@142))
 :pattern ( ($generated@@73 ($generated@@22 $generated@@141) $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@143) $generated@@144) ($generated@@21 $generated@@143 $generated@@144))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (! (<= 0 ($generated@@37 $generated@@145))
 :pattern ( ($generated@@37 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@55 ($generated@@92 $generated@@146)) $generated@@1)
 :pattern ( ($generated@@92 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@46 ($generated@@92 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@92 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@66 $generated@@149 ($generated@@67 $generated@@149 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@67 $generated@@149 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (and (and (and (=> ($generated@@31 $generated@@150 $generated@@151) (or (not (= $generated@@150 $generated@@151)) (not true))) (=> (and ($generated@@104 $generated@@150) (not ($generated@@104 $generated@@151))) ($generated@@31 $generated@@150 $generated@@151))) (=> (and ($generated@@104 $generated@@150) ($generated@@104 $generated@@151)) (= ($generated@@31 $generated@@150 $generated@@151) (< ($generated@@37 $generated@@150) ($generated@@37 $generated@@151))))) (=> (and ($generated@@31 $generated@@150 $generated@@151) ($generated@@104 $generated@@151)) ($generated@@104 $generated@@150)))
 :pattern ( ($generated@@31 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (< ($generated@@152 $generated@@153) ($generated@@152 ($generated@@92 $generated@@153)))
 :pattern ( ($generated@@92 $generated@@153))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@154 $generated@@164 $generated@@165 $generated@@166 ($generated@@160 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@169 $generated@@170) $generated@@167)
 :weight 0
)) (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@176 $generated@@178) (= ($generated@@154 $generated@@171 $generated@@172 $generated@@173 ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@154 $generated@@180 $generated@@181 $generated@@182 ($generated@@160 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@154 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)))) (= ($generated@@4 $generated@@155) 5)) (= ($generated@@4 $generated@@156) 6)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@158 $generated@@189 $generated@@190 ($generated@@161 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@191) $generated@@193) $generated@@191)
 :weight 0
))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@198 $generated@@199) (= ($generated@@158 $generated@@194 $generated@@195 ($generated@@161 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@196) $generated@@199) ($generated@@158 $generated@@194 $generated@@195 $generated@@197 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@4 ($generated@@159 $generated@@200 $generated@@201)) 7))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@162 ($generated@@159 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@159 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@163 ($generated@@159 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@159 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@9 ($generated@@154 $generated@@155 $generated@@156 $generated@@5 ($generated@@157 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (or (not (= $generated@@210 $generated@@206)) (not true)) ($generated@@9 ($generated@@66 $generated@@5 ($generated@@158 $generated@@156 $generated@@43 ($generated@@158 $generated@@155 ($generated@@159 $generated@@156 $generated@@43) $generated@@207 $generated@@210) $generated@@208)))) $generated@@209))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156 $generated@@5 ($generated@@157 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ) (!  (=> ($generated@@104 $generated@@212) (= $generated@@212 ($generated@@36 ($generated@@37 $generated@@212))))
 :pattern ( ($generated@@37 $generated@@212))
 :pattern ( ($generated@@104 $generated@@212))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and ($generated@@214 $generated@@216) ($generated@@23 $generated@@24 $generated@@215 $generated@@25)) ($generated@@213 $generated@@24 $generated@@215 $generated@@25 $generated@@216))
 :pattern ( ($generated@@213 $generated@@24 $generated@@215 $generated@@25 $generated@@216))
)))
(assert (= ($generated@@217 $generated@@25) $generated@@0))
(assert (= ($generated@@218 $generated@@25) $generated@@3))
(assert (= $generated@@56 ($generated@@42 $generated@@24 $generated@@56)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and ($generated@@104 $generated@@220) (<= ($generated@@37 $generated@@220) ($generated@@37 $generated@@219))) (or (and (= $generated@@220 ($generated@@36 0)) (= ($generated@@35 $generated@@219 $generated@@220) $generated@@219)) (and (or (not (= $generated@@220 ($generated@@36 0))) (not true)) ($generated@@31 ($generated@@35 $generated@@219 $generated@@220) $generated@@219))))
 :pattern ( ($generated@@35 $generated@@219 $generated@@220))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@221 T@U) ($generated@@222 Int) ($generated@@223 T@U) ) (!  (=> (or ($generated@@86 ($generated@@27 $generated@@222) ($generated@@42 $generated@@24 $generated@@223)) (and (< 2 $generated@@20) (and (<= ($generated@@27 0) $generated@@222) ($generated@@23 $generated@@24 $generated@@223 $generated@@25)))) (and (=> (< 0 $generated@@222) (=> ($generated@@9 ($generated@@42 $generated@@5 ($generated@@8 ($generated@@45 ($generated@@42 $generated@@24 $generated@@223))))) (let (($generated@@224 ($generated@@42 $generated@@24 ($generated@@46 ($generated@@42 $generated@@24 $generated@@223)))))
($generated@@86 (- $generated@@222 1) $generated@@224)))) (= ($generated@@26 ($generated@@22 $generated@@221) ($generated@@27 $generated@@222) ($generated@@42 $generated@@24 $generated@@223))  (=> (< 0 $generated@@222) (ite ($generated@@45 ($generated@@42 $generated@@24 $generated@@223)) (let (($generated@@225 ($generated@@42 $generated@@24 ($generated@@46 ($generated@@42 $generated@@24 $generated@@223)))))
($generated@@26 ($generated@@22 $generated@@221) (- $generated@@222 1) $generated@@225)) true)))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@22 $generated@@221) ($generated@@27 $generated@@222) ($generated@@42 $generated@@24 $generated@@223)))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and ($generated@@214 $generated@@227) (and ($generated@@45 $generated@@226) ($generated@@213 $generated@@24 $generated@@226 $generated@@25 $generated@@227))) ($generated@@213 $generated@@24 ($generated@@46 $generated@@226) $generated@@25 $generated@@227))
 :pattern ( ($generated@@213 $generated@@24 ($generated@@46 $generated@@226) $generated@@25 $generated@@227))
)))
(assert (forall (($generated@@228 Int) ) (! (= ($generated@@67 $generated@@6 ($generated@@10 ($generated@@27 $generated@@228))) ($generated@@42 $generated@@43 ($generated@@67 $generated@@6 ($generated@@10 $generated@@228))))
 :pattern ( ($generated@@67 $generated@@6 ($generated@@10 ($generated@@27 $generated@@228))))
)))
(assert (forall (($generated@@229 T@U) ) (! (= ($generated@@92 ($generated@@42 $generated@@24 $generated@@229)) ($generated@@42 $generated@@24 ($generated@@92 $generated@@229)))
 :pattern ( ($generated@@92 ($generated@@42 $generated@@24 $generated@@229)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@T) ) (! (= ($generated@@67 $generated@@231 ($generated@@42 $generated@@231 $generated@@230)) ($generated@@42 $generated@@43 ($generated@@67 $generated@@231 $generated@@230)))
 :pattern ( ($generated@@67 $generated@@231 ($generated@@42 $generated@@231 $generated@@230)))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (or ($generated@@44 ($generated@@42 $generated@@43 $generated@@233) ($generated@@42 $generated@@24 $generated@@234)) (and (< 2 $generated@@20) ($generated@@23 $generated@@24 $generated@@234 $generated@@25))) (and (and (=> (< 0 ($generated@@37 $generated@@233)) (=> ($generated@@9 ($generated@@42 $generated@@5 ($generated@@8 ($generated@@45 ($generated@@42 $generated@@24 $generated@@234))))) (let (($generated@@235 ($generated@@42 $generated@@24 ($generated@@46 ($generated@@42 $generated@@24 $generated@@234)))))
($generated@@44 ($generated@@35 $generated@@233 ($generated@@36 1)) $generated@@235)))) (=> (=> (< 0 ($generated@@37 $generated@@233)) (ite ($generated@@45 ($generated@@42 $generated@@24 $generated@@234)) (let (($generated@@236 ($generated@@42 $generated@@24 ($generated@@46 ($generated@@42 $generated@@24 $generated@@234)))))
($generated@@41 ($generated@@22 $generated@@232) ($generated@@35 $generated@@233 ($generated@@36 1)) $generated@@236)) true)) (=> (= ($generated@@27 0) ($generated@@37 $generated@@233)) (forall (($generated@@237 T@U) ) (!  (=> ($generated@@31 $generated@@237 $generated@@233) ($generated@@44 $generated@@237 $generated@@234))
 :pattern ( ($generated@@41 ($generated@@22 $generated@@232) $generated@@237 $generated@@234))
))))) (= ($generated@@41 ($generated@@22 $generated@@232) ($generated@@42 $generated@@43 $generated@@233) ($generated@@42 $generated@@24 $generated@@234))  (and (=> (< 0 ($generated@@37 $generated@@233)) (ite ($generated@@45 ($generated@@42 $generated@@24 $generated@@234)) (let (($generated@@238 ($generated@@42 $generated@@24 ($generated@@46 ($generated@@42 $generated@@24 $generated@@234)))))
($generated@@41 ($generated@@22 $generated@@232) ($generated@@35 $generated@@233 ($generated@@36 1)) $generated@@238)) true)) (=> (= ($generated@@27 0) ($generated@@37 $generated@@233)) (forall (($generated@@239 T@U) ) (!  (=> ($generated@@31 $generated@@239 $generated@@233) ($generated@@41 ($generated@@22 $generated@@232) $generated@@239 $generated@@234))
 :pattern ( ($generated@@41 ($generated@@22 $generated@@232) $generated@@239 $generated@@234))
)))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@22 $generated@@232) ($generated@@42 $generated@@43 $generated@@233) ($generated@@42 $generated@@24 $generated@@234)))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and ($generated@@23 $generated@@24 $generated@@241 $generated@@25) (forall (($generated@@242 Int) ) (!  (=> (<= ($generated@@27 0) $generated@@242) ($generated@@26 ($generated@@22 $generated@@240) $generated@@242 $generated@@241))
 :pattern ( ($generated@@26 ($generated@@22 $generated@@240) $generated@@242 $generated@@241))
))) ($generated@@21 ($generated@@22 $generated@@240) $generated@@241))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@240) $generated@@241))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@250  (=> (and (= $generated@@243 ($generated@@157 $generated@@244 $generated@@245 $generated false)) ($generated@@114 $generated@@246)) (=> (and (and ($generated@@214 $generated@@247) ($generated@@248 $generated@@247)) (and (= $generated@@245 $generated@@247) (forall (($generated@@251 T@U) ) (!  (=> (and (and ($generated@@23 $generated@@24 $generated@@251 $generated@@25) ($generated@@9 ($generated@@42 $generated@@5 ($generated@@8 true)))) (< ($generated@@152 $generated@@251) ($generated@@152 $generated@@246))) (and (and ($generated@@118 ($generated@@22 $generated@@249) $generated@@251) ($generated@@73 ($generated@@22 $generated@@249) $generated@@251)) ($generated@@21 ($generated@@22 $generated@@249) $generated@@251)))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@249) $generated@@251))
 :pattern ( ($generated@@73 ($generated@@22 $generated@@249) $generated@@251))
 :pattern ( ($generated@@118 ($generated@@22 $generated@@249) $generated@@251))
)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (=> ($generated@@119 $generated@@246) (or ($generated@@118 ($generated@@22 $generated@@249) $generated@@246) (=> ($generated@@45 $generated@@246) (let (($generated@@252 ($generated@@46 $generated@@246)))
($generated@@118 ($generated@@22 ($generated@@22 $generated@@249)) $generated@@252)))))) (=> (=> ($generated@@119 $generated@@246) (or ($generated@@118 ($generated@@22 $generated@@249) $generated@@246) (=> ($generated@@45 $generated@@246) (let (($generated@@253 ($generated@@46 $generated@@246)))
($generated@@118 ($generated@@22 ($generated@@22 $generated@@249)) $generated@@253))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> ($generated@@119 $generated@@246) (or ($generated@@118 ($generated@@22 $generated@@249) $generated@@246) (=> (not ($generated@@45 $generated@@246)) ($generated@@9 ($generated@@42 $generated@@5 ($generated@@8 true))))))) (=> (=> ($generated@@119 $generated@@246) (or ($generated@@118 ($generated@@22 $generated@@249) $generated@@246) (=> (not ($generated@@45 $generated@@246)) ($generated@@9 ($generated@@42 $generated@@5 ($generated@@8 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@128 $generated@@246) (or ($generated@@73 ($generated@@22 $generated@@249) $generated@@246) (=> ($generated@@45 $generated@@246) (let (($generated@@254 ($generated@@46 $generated@@246)))
($generated@@73 ($generated@@22 ($generated@@22 $generated@@249)) $generated@@254)))))) (=> (=> ($generated@@128 $generated@@246) (or ($generated@@73 ($generated@@22 $generated@@249) $generated@@246) (=> ($generated@@45 $generated@@246) (let (($generated@@255 ($generated@@46 $generated@@246)))
($generated@@73 ($generated@@22 ($generated@@22 $generated@@249)) $generated@@255))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@128 $generated@@246) (or ($generated@@73 ($generated@@22 $generated@@249) $generated@@246) (=> (not ($generated@@45 $generated@@246)) ($generated@@9 ($generated@@42 $generated@@5 ($generated@@8 true))))))) (=> (=> ($generated@@128 $generated@@246) (or ($generated@@73 ($generated@@22 $generated@@249) $generated@@246) (=> (not ($generated@@45 $generated@@246)) ($generated@@9 ($generated@@42 $generated@@5 ($generated@@8 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@133 $generated@@246) (or ($generated@@21 ($generated@@22 $generated@@249) $generated@@246) (=> ($generated@@45 $generated@@246) (let (($generated@@256 ($generated@@46 $generated@@246)))
($generated@@21 ($generated@@22 ($generated@@22 $generated@@249)) $generated@@256)))))) (=> (=> ($generated@@133 $generated@@246) (or ($generated@@21 ($generated@@22 $generated@@249) $generated@@246) (=> ($generated@@45 $generated@@246) (let (($generated@@257 ($generated@@46 $generated@@246)))
($generated@@21 ($generated@@22 ($generated@@22 $generated@@249)) $generated@@257))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@133 $generated@@246) (or ($generated@@21 ($generated@@22 $generated@@249) $generated@@246) (=> (not ($generated@@45 $generated@@246)) ($generated@@9 ($generated@@42 $generated@@5 ($generated@@8 true)))))))))))))))))))))
(let (($generated@@258  (=> (and ($generated@@214 $generated@@245) ($generated@@248 $generated@@245)) (=> (and (and (and ($generated@@23 $generated@@24 $generated@@246 $generated@@25) ($generated@@213 $generated@@24 $generated@@246 $generated@@25 $generated@@245)) ($generated@@114 $generated@@246)) (and (= 2 $generated@@20) (= (ControlFlow 0 8) 2))) $generated@@250))))
$generated@@258)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
