(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@43 (T@T T@U T@U) Bool)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@54 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T T@T) T@T)
(declare-fun $generated@@70 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@107 (T@U T@U) Bool)
(declare-fun $generated@@111 (T@U) Bool)
(declare-fun $generated@@114 (T@U T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@2) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@30 $generated@@2) $generated@@3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@35) ($generated@@32 ($generated@@31 $generated@@33 $generated@@34) $generated@@35))
 :pattern ( ($generated@@31 $generated@@33 $generated@@34) ($generated@@32 $generated@@33 $generated@@35))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@32 $generated@@37 $generated@@38) ($generated@@32 ($generated@@31 $generated@@36 $generated@@37) $generated@@38))
 :pattern ( ($generated@@31 $generated@@36 $generated@@37) ($generated@@32 $generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> ($generated@@32 $generated@@41 $generated@@42) (not ($generated@@32 ($generated@@39 $generated@@40 $generated@@41) $generated@@42)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41) ($generated@@32 $generated@@41 $generated@@42))
)))
(assert (= ($generated@@12 $generated@@44) 3))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@48 $generated@@45)  (or (= $generated@@48 $generated@@46) (= ($generated@@47 $generated@@48) $generated@@45)))
 :pattern ( ($generated@@43 $generated@@44 $generated@@48 $generated@@45))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@31 ($generated@@31 $generated@@49 $generated@@50) $generated@@50) ($generated@@31 $generated@@49 $generated@@50))
 :pattern ( ($generated@@31 ($generated@@31 $generated@@49 $generated@@50) $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@32 ($generated@@39 $generated@@51 $generated@@52) $generated@@53)  (and ($generated@@32 $generated@@51 $generated@@53) (not ($generated@@32 $generated@@52 $generated@@53))))
 :pattern ( ($generated@@32 ($generated@@39 $generated@@51 $generated@@52) $generated@@53))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@54 $generated@@44 $generated@@57 $generated@@55 $generated@@58) ($generated@@54 $generated@@44 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@54 $generated@@44 $generated@@57 $generated@@55 $generated@@58))
 :pattern ( ($generated@@54 $generated@@44 $generated@@57 $generated@@56 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@54 $generated@@44 $generated@@60 $generated@@59 $generated@@61) ($generated@@54 $generated@@44 $generated@@60 $generated@@45 $generated@@61))
 :pattern ( ($generated@@54 $generated@@44 $generated@@60 $generated@@59 $generated@@61))
 :pattern ( ($generated@@54 $generated@@44 $generated@@60 $generated@@45 $generated@@61))
)))
(assert (= ($generated@@28 $generated@@62) 0))
(assert (= ($generated@@63 $generated@@7 $generated@@11) $generated@@62))
(assert  (not ($generated@@64 $generated@@62)))
(assert  (and (and (and (and (and (and (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@66 $generated@@73 $generated@@74 ($generated@@70 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@77) $generated@@75)
 :weight 0
)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (or (= $generated@@82 $generated@@83) (= ($generated@@66 $generated@@78 $generated@@79 ($generated@@70 $generated@@78 $generated@@79 $generated@@81 $generated@@82 $generated@@80) $generated@@83) ($generated@@66 $generated@@78 $generated@@79 $generated@@81 $generated@@83)))
 :weight 0
))) (= ($generated@@12 $generated@@67) 4)) (= ($generated@@12 $generated@@68) 5)) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (= ($generated@@12 ($generated@@69 $generated@@84 $generated@@85)) 6))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@71 ($generated@@69 $generated@@86 $generated@@87)) $generated@@86)
 :pattern ( ($generated@@69 $generated@@86 $generated@@87))
))) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (! (= ($generated@@72 ($generated@@69 $generated@@88 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@69 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@54 $generated@@44 $generated@@90 $generated@@56 $generated@@91)  (or (= $generated@@90 $generated@@46) ($generated@@17 ($generated@@65 $generated@@13 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@91 $generated@@90) $generated@@2)))))
 :pattern ( ($generated@@54 $generated@@44 $generated@@90 $generated@@56 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@54 $generated@@44 $generated@@92 $generated@@45 $generated@@93)  (or (= $generated@@92 $generated@@46) ($generated@@17 ($generated@@65 $generated@@13 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@93 $generated@@92) $generated@@2)))))
 :pattern ( ($generated@@54 $generated@@44 $generated@@92 $generated@@45 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@94 $generated@@95 $generated@@96) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@17 ($generated@@65 $generated@@13 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@95 $generated@@97) $generated@@2))) ($generated@@17 ($generated@@65 $generated@@13 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@96 $generated@@97) $generated@@2))))
 :pattern ( ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@96 $generated@@97) $generated@@2))
)))
 :pattern ( ($generated@@94 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 ($generated@@65 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@65 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@101 $generated@@102 $generated@@103) (forall (($generated@@104 T@U) ) (!  (or (not ($generated@@32 $generated@@102 $generated@@104)) (not ($generated@@32 $generated@@103 $generated@@104)))
 :pattern ( ($generated@@32 $generated@@102 $generated@@104))
 :pattern ( ($generated@@32 $generated@@103 $generated@@104))
)))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103))
)))
(assert (= ($generated@@12 $generated@@105) 7))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@43 $generated@@105 $generated@@108 ($generated@@106 $generated@@109)) (forall (($generated@@110 T@U) ) (!  (=> ($generated@@32 $generated@@108 $generated@@110) ($generated@@107 $generated@@110 $generated@@109))
 :pattern ( ($generated@@32 $generated@@108 $generated@@110))
)))
 :pattern ( ($generated@@43 $generated@@105 $generated@@108 ($generated@@106 $generated@@109)))
)))
(assert ($generated@@64 $generated@@2))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and (and ($generated@@111 $generated@@112) (and (or (not (= $generated@@113 $generated@@46)) (not true)) (= ($generated@@47 $generated@@113) $generated@@45))) ($generated@@17 ($generated@@65 $generated@@13 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@112 $generated@@113) $generated@@2)))) ($generated@@54 $generated@@14 ($generated@@65 $generated@@14 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@112 $generated@@113) $generated@@62)) $generated $generated@@112))
 :pattern ( ($generated@@65 $generated@@14 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@112 $generated@@113) $generated@@62)))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@114 ($generated@@98 $generated@@118 $generated@@115) $generated@@116 $generated@@117) ($generated@@54 $generated@@118 $generated@@115 $generated@@116 $generated@@117))
 :pattern ( ($generated@@114 ($generated@@98 $generated@@118 $generated@@115) $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@94 $generated@@119 $generated@@120) (=> ($generated@@114 $generated@@121 $generated@@122 $generated@@119) ($generated@@114 $generated@@121 $generated@@122 $generated@@120)))
 :pattern ( ($generated@@94 $generated@@119 $generated@@120) ($generated@@114 $generated@@121 $generated@@122 $generated@@119))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (!  (=> ($generated@@94 $generated@@123 $generated@@124) (=> ($generated@@54 $generated@@127 $generated@@125 $generated@@126 $generated@@123) ($generated@@54 $generated@@127 $generated@@125 $generated@@126 $generated@@124)))
 :pattern ( ($generated@@94 $generated@@123 $generated@@124) ($generated@@54 $generated@@127 $generated@@125 $generated@@126 $generated@@123))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@107 $generated@@128 $generated@@56) (and (= ($generated@@98 $generated@@44 ($generated@@65 $generated@@44 $generated@@128)) $generated@@128) ($generated@@43 $generated@@44 ($generated@@65 $generated@@44 $generated@@128) $generated@@56)))
 :pattern ( ($generated@@107 $generated@@128 $generated@@56))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@107 $generated@@129 $generated@@55) (and (= ($generated@@98 $generated@@44 ($generated@@65 $generated@@44 $generated@@129)) $generated@@129) ($generated@@43 $generated@@44 ($generated@@65 $generated@@44 $generated@@129) $generated@@55)))
 :pattern ( ($generated@@107 $generated@@129 $generated@@55))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@107 $generated@@130 $generated@@59) (and (= ($generated@@98 $generated@@44 ($generated@@65 $generated@@44 $generated@@130)) $generated@@130) ($generated@@43 $generated@@44 ($generated@@65 $generated@@44 $generated@@130) $generated@@59)))
 :pattern ( ($generated@@107 $generated@@130 $generated@@59))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@107 $generated@@131 $generated@@45) (and (= ($generated@@98 $generated@@44 ($generated@@65 $generated@@44 $generated@@131)) $generated@@131) ($generated@@43 $generated@@44 ($generated@@65 $generated@@44 $generated@@131) $generated@@45)))
 :pattern ( ($generated@@107 $generated@@131 $generated@@45))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@132 $generated@@55)  (and ($generated@@43 $generated@@44 $generated@@132 $generated@@56) (or (not (= $generated@@132 $generated@@46)) (not true))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@132 $generated@@55))
 :pattern ( ($generated@@43 $generated@@44 $generated@@132 $generated@@56))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@133 $generated@@59)  (and ($generated@@43 $generated@@44 $generated@@133 $generated@@45) (or (not (= $generated@@133 $generated@@46)) (not true))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@133 $generated@@59))
 :pattern ( ($generated@@43 $generated@@44 $generated@@133 $generated@@45))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@32 ($generated@@31 $generated@@134 $generated@@135) $generated@@136)  (or ($generated@@32 $generated@@134 $generated@@136) ($generated@@32 $generated@@135 $generated@@136)))
 :pattern ( ($generated@@32 ($generated@@31 $generated@@134 $generated@@135) $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@101 $generated@@137 $generated@@138) (and (= ($generated@@39 ($generated@@31 $generated@@137 $generated@@138) $generated@@137) $generated@@138) (= ($generated@@39 ($generated@@31 $generated@@137 $generated@@138) $generated@@138) $generated@@137)))
 :pattern ( ($generated@@31 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (or (not (= $generated@@139 $generated@@141)) (not true)) (=> (and ($generated@@94 $generated@@139 $generated@@140) ($generated@@94 $generated@@140 $generated@@141)) ($generated@@94 $generated@@139 $generated@@141)))
 :pattern ( ($generated@@94 $generated@@139 $generated@@140) ($generated@@94 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (and (= ($generated@@142 ($generated@@63 $generated@@143 $generated@@144)) $generated@@143) (= ($generated@@30 ($generated@@63 $generated@@143 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@63 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@107 $generated@@145 $generated) (and (= ($generated@@98 $generated@@14 ($generated@@65 $generated@@14 $generated@@145)) $generated@@145) ($generated@@43 $generated@@14 ($generated@@65 $generated@@14 $generated@@145) $generated)))
 :pattern ( ($generated@@107 $generated@@145 $generated))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@107 ($generated@@98 $generated@@148 $generated@@146) $generated@@147) ($generated@@43 $generated@@148 $generated@@146 $generated@@147))
 :pattern ( ($generated@@107 ($generated@@98 $generated@@148 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@54 $generated@@105 $generated@@149 ($generated@@106 $generated@@150) $generated@@151) (forall (($generated@@152 T@U) ) (!  (=> ($generated@@32 $generated@@149 $generated@@152) ($generated@@114 $generated@@152 $generated@@150 $generated@@151))
 :pattern ( ($generated@@32 $generated@@149 $generated@@152))
)))
 :pattern ( ($generated@@54 $generated@@105 $generated@@149 ($generated@@106 $generated@@150) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! ($generated@@43 $generated@@44 $generated@@153 $generated@@56)
 :pattern ( ($generated@@43 $generated@@44 $generated@@153 $generated@@56))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@154 ($generated@@106 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@106 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@29 ($generated@@106 $generated@@156)) $generated@@1)
 :pattern ( ($generated@@106 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@T) ) (! (= ($generated@@65 $generated@@158 ($generated@@98 $generated@@158 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@98 $generated@@158 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and ($generated@@111 $generated@@159) (and (or (not (= $generated@@160 $generated@@46)) (not true)) (= ($generated@@47 $generated@@160) $generated@@45))) ($generated@@43 $generated@@14 ($generated@@65 $generated@@14 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@159 $generated@@160) $generated@@62)) $generated))
 :pattern ( ($generated@@65 $generated@@14 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@159 $generated@@160) $generated@@62)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@31 $generated@@161 ($generated@@31 $generated@@161 $generated@@162)) ($generated@@31 $generated@@161 $generated@@162))
 :pattern ( ($generated@@31 $generated@@161 ($generated@@31 $generated@@161 $generated@@162)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@107 $generated@@163 ($generated@@106 $generated@@164)) (and (= ($generated@@98 $generated@@105 ($generated@@65 $generated@@105 $generated@@163)) $generated@@163) ($generated@@43 $generated@@105 ($generated@@65 $generated@@105 $generated@@163) ($generated@@106 $generated@@164))))
 :pattern ( ($generated@@107 $generated@@163 ($generated@@106 $generated@@164)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@111 ($generated@@70 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@165 $generated@@166 ($generated@@70 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@165 $generated@@166) $generated@@167 $generated@@168))) ($generated@@94 $generated@@165 ($generated@@70 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@165 $generated@@166 ($generated@@70 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@165 $generated@@166) $generated@@167 $generated@@168))))
 :pattern ( ($generated@@70 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@165 $generated@@166 ($generated@@70 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@165 $generated@@166) $generated@@167 $generated@@168)))
)))
(assert (= ($generated@@29 $generated@@56) $generated@@4))
(assert (= ($generated@@169 $generated@@56) $generated@@9))
(assert (= ($generated@@29 $generated@@55) $generated@@5))
(assert (= ($generated@@169 $generated@@55) $generated@@9))
(assert (= ($generated@@29 $generated@@59) $generated@@6))
(assert (= ($generated@@169 $generated@@59) $generated@@10))
(assert (= ($generated@@29 $generated@@45) $generated@@8))
(assert (= ($generated@@169 $generated@@45) $generated@@10))
(assert  (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@170 $generated@@173 $generated@@174 $generated@@175 ($generated@@172 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@178 $generated@@179) $generated@@176)
 :weight 0
)) (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@170 $generated@@180 $generated@@181 $generated@@182 ($generated@@172 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@170 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@170 $generated@@189 $generated@@190 $generated@@191 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@170 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@17 ($generated@@170 $generated@@44 $generated@@67 $generated@@13 ($generated@@171 $generated@@198 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@203 $generated@@204))  (=> (and (or (not (= $generated@@203 $generated@@198)) (not true)) ($generated@@17 ($generated@@65 $generated@@13 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@199 $generated@@203) $generated@@200)))) (or ($generated@@32 $generated@@201 ($generated@@98 $generated@@44 $generated@@203)) ($generated@@32 $generated@@202 ($generated@@98 $generated@@44 $generated@@203)))))
 :pattern ( ($generated@@170 $generated@@44 $generated@@67 $generated@@13 ($generated@@171 $generated@@198 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! ($generated@@54 $generated@@14 $generated@@206 $generated $generated@@205)
 :pattern ( ($generated@@54 $generated@@14 $generated@@206 $generated $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ) (! ($generated@@43 $generated@@14 $generated@@207 $generated)
 :pattern ( ($generated@@43 $generated@@14 $generated@@207 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@217 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@218  (=> (= $generated@@208 ($generated@@171 $generated@@46 $generated@@209 $generated@@2 $generated@@210 $generated@@211)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@212 $generated@@46)) (not true))) (=> (or (not (= $generated@@212 $generated@@46)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@17 ($generated@@170 $generated@@44 $generated@@67 $generated@@13 $generated@@208 $generated@@212 $generated@@62))) (=> ($generated@@17 ($generated@@170 $generated@@44 $generated@@67 $generated@@13 $generated@@208 $generated@@212 $generated@@62)) (=> (and (= $generated@@213 ($generated@@70 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@209 $generated@@212 ($generated@@70 $generated@@67 $generated@@68 ($generated@@66 $generated@@44 ($generated@@69 $generated@@67 $generated@@68) $generated@@209 $generated@@212) $generated@@62 ($generated@@98 $generated@@14 ($generated@@18 $generated@@214))))) ($generated@@111 $generated@@213)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@215 $generated@@46)) (not true))) (=> (or (not (= $generated@@215 $generated@@46)) (not true)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@17 ($generated@@170 $generated@@44 $generated@@67 $generated@@13 $generated@@208 $generated@@215 $generated@@62)))))))))))))
(let (($generated@@219  (=> (and ($generated@@111 $generated@@209) ($generated@@216 $generated@@209)) (=> (and (and ($generated@@43 $generated@@105 $generated@@210 ($generated@@106 $generated@@55)) ($generated@@54 $generated@@105 $generated@@210 ($generated@@106 $generated@@55) $generated@@209)) (and ($generated@@43 $generated@@105 $generated@@211 ($generated@@106 $generated@@55)) ($generated@@54 $generated@@105 $generated@@211 ($generated@@106 $generated@@55) $generated@@209))) (=> (and (and (and ($generated@@43 $generated@@44 $generated@@212 $generated@@59) ($generated@@54 $generated@@44 $generated@@212 $generated@@59 $generated@@209)) (and ($generated@@43 $generated@@44 $generated@@215 $generated@@59) ($generated@@54 $generated@@44 $generated@@215 $generated@@59 $generated@@209))) (and (and (= 1 $generated@@217) ($generated@@32 ($generated@@31 $generated@@210 $generated@@211) ($generated@@98 $generated@@44 $generated@@212))) (and ($generated@@32 $generated@@210 ($generated@@98 $generated@@44 $generated@@215)) (= (ControlFlow 0 6) 2)))) $generated@@218)))))
$generated@@219)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
