(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U T@U) Bool)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U) Int)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@45 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@46 (Int) T@U)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@59 (T@U Int) Int)
(declare-fun $generated@@60 (T@U Int) Bool)
(declare-fun $generated@@61 (Int) Int)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@U) Int)
(declare-fun $generated@@69 (T@U) Int)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@98 (T@U) Bool)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@120 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@T T@T) T@T)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@180 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@26) $generated@@27 $generated@@28) (= $generated@@27 $generated@@28))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@26) $generated@@27 $generated@@28))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and ($generated@@29 $generated@@30 $generated@@31) ($generated@@29 $generated@@31 $generated@@32)) ($generated@@29 $generated@@30 $generated@@32))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31) ($generated@@29 $generated@@31 $generated@@32))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31) ($generated@@29 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! ($generated@@33 $generated@@9 $generated@@35 $generated@@34 $generated@@36)
 :pattern ( ($generated@@33 $generated@@9 $generated@@35 $generated@@34 $generated@@36))
)))
(assert (= ($generated@@7 $generated@@39) 3))
(assert  (=> (< 0 $generated@@37) (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@43) ($generated@@42 $generated@@39 $generated@@44 $generated@@40)) ($generated@@33 $generated@@39 $generated@@44 $generated@@40 $generated@@43)) ($generated@@33 $generated@@9 ($generated@@13 ($generated@@38 $generated@@44)) $generated@@34 $generated@@43))
 :pattern ( ($generated@@38 $generated@@44) ($generated@@33 $generated@@39 $generated@@44 $generated@@40 $generated@@43))
))))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (forall (($generated@@50 Int) ) (!  (=> (<= 0 $generated@@50) ($generated@@45 ($generated@@46 $generated@@50) ($generated@@25 $generated@@47) $generated@@48 $generated@@49))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@50) ($generated@@25 $generated@@47) $generated@@48 $generated@@49))
)) ($generated@@24 ($generated@@25 $generated@@47) $generated@@48 $generated@@49))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@47) $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ) (!  (=> ($generated@@42 $generated@@39 $generated@@52 $generated@@40) ($generated@@51 $generated@@52))
 :pattern ( ($generated@@51 $generated@@52) ($generated@@42 $generated@@39 $generated@@52 $generated@@40))
)))
(assert  (=> (< 0 $generated@@37) (forall (($generated@@53 T@U) ) (!  (=> ($generated@@42 $generated@@39 $generated@@53 $generated@@40) ($generated@@42 $generated@@9 ($generated@@13 ($generated@@38 $generated@@53)) $generated@@34))
 :pattern ( ($generated@@38 $generated@@53))
))))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (and ($generated@@29 $generated@@54 $generated@@58) ($generated@@45 $generated@@58 ($generated@@25 $generated@@55) $generated@@56 $generated@@57)) ($generated@@45 $generated@@54 ($generated@@25 $generated@@55) $generated@@56 $generated@@57))
 :pattern ( ($generated@@45 $generated@@54 ($generated@@25 $generated@@55) $generated@@56 $generated@@57) ($generated@@45 $generated@@58 ($generated@@25 $generated@@55) $generated@@56 $generated@@57))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@62 T@U) ($generated@@63 Int) ) (!  (=> (or ($generated@@60 $generated@@62 $generated@@63) (and (< 1 $generated@@37) (and (and ($generated@@42 $generated@@39 $generated@@62 $generated@@40) (<= ($generated@@61 0) $generated@@63)) (or (not (= $generated@@63 7)) (not true))))) (= ($generated@@59 $generated@@62 $generated@@63) $generated@@63))
 :pattern ( ($generated@@59 $generated@@62 $generated@@63))
))))
(assert (forall (($generated@@64 Int) ) (! (= ($generated@@61 $generated@@64) $generated@@64)
 :pattern ( ($generated@@61 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 $generated@@66) $generated@@66)
 :pattern ( ($generated@@65 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and ($generated@@42 $generated@@39 $generated@@72 $generated@@40) ($generated@@42 $generated@@39 $generated@@73 $generated@@40)) (= ($generated@@45 $generated@@70 ($generated@@25 $generated@@71) $generated@@72 $generated@@73)  (and (=> (< 0 ($generated@@68 $generated@@70)) (and (and ($generated@@51 $generated@@72) ($generated@@51 $generated@@73)) (=> (and ($generated@@51 $generated@@72) ($generated@@51 $generated@@73)) (= ($generated@@69 $generated@@72) ($generated@@69 $generated@@73))))) (=> (and (or (not (= $generated@@70 ($generated@@46 0))) (not true)) (= ($generated@@68 $generated@@70) 0)) ($generated@@24 $generated@@71 $generated@@72 $generated@@73)))))
 :pattern ( ($generated@@45 $generated@@70 ($generated@@25 $generated@@71) $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@51 $generated@@75) (= ($generated@@74 $generated@@75) $generated@@4))
 :pattern ( ($generated@@51 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 ($generated@@76 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@76 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@51 $generated@@81) (exists (($generated@@82 Int) ) (= $generated@@81 ($generated@@80 $generated@@82))))
 :pattern ( ($generated@@51 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@42 $generated@@9 $generated@@83 $generated@@34) (<= ($generated@@61 0) ($generated@@14 $generated@@83)))
 :pattern ( ($generated@@42 $generated@@9 $generated@@83 $generated@@34))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (or (not (= $generated@@84 ($generated@@46 0))) (not true)) (= ($generated@@45 $generated@@84 ($generated@@25 $generated@@85) $generated@@86 $generated@@87) ($generated@@45 $generated@@84 $generated@@85 $generated@@86 $generated@@87)))
 :pattern ( ($generated@@45 $generated@@84 ($generated@@25 $generated@@85) $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@88) $generated@@89 $generated@@90) ($generated@@24 $generated@@88 $generated@@89 $generated@@90))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@88) $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@91 ($generated@@77 $generated@@95 $generated@@92) $generated@@93 $generated@@94) ($generated@@33 $generated@@95 $generated@@92 $generated@@93 $generated@@94))
 :pattern ( ($generated@@91 ($generated@@77 $generated@@95 $generated@@92) $generated@@93 $generated@@94))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@96 T@U) ($generated@@97 Int) ) (!  (=> (or ($generated@@60 $generated@@96 $generated@@97) (and (< 1 $generated@@37) (and (and ($generated@@42 $generated@@39 $generated@@96 $generated@@40) (<= ($generated@@61 0) $generated@@97)) (or (not (= $generated@@97 7)) (not true))))) (and (= ($generated@@59 $generated@@96 $generated@@97) ($generated@@38 $generated@@96)) (<= ($generated@@61 0) ($generated@@59 $generated@@96 $generated@@97))))
 :pattern ( ($generated@@59 $generated@@96 $generated@@97))
))))
(assert (forall (($generated@@99 Int) ) (!  (=> (<= 0 $generated@@99) (and ($generated@@98 ($generated@@46 $generated@@99)) (= ($generated@@68 ($generated@@46 $generated@@99)) $generated@@99)))
 :pattern ( ($generated@@46 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@100) $generated@@101 $generated@@102) (forall (($generated@@103 T@U) ) (! ($generated@@45 $generated@@103 ($generated@@25 $generated@@100) $generated@@101 $generated@@102)
 :pattern ( ($generated@@45 $generated@@103 ($generated@@25 $generated@@100) $generated@@101 $generated@@102))
)))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@100) $generated@@101 $generated@@102))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@104 T@U) ($generated@@105 Int) ) (!  (=> (or ($generated@@60 $generated@@104 ($generated@@61 $generated@@105)) (and (< 1 $generated@@37) (and (and ($generated@@42 $generated@@39 $generated@@104 $generated@@40) (<= ($generated@@61 0) $generated@@105)) ($generated@@12 ($generated@@65 $generated@@8 ($generated@@11  (or (not (= $generated@@105 7)) (not true)))))))) (= ($generated@@59 $generated@@104 ($generated@@61 $generated@@105)) ($generated@@61 $generated@@105)))
 :weight 3
 :pattern ( ($generated@@59 $generated@@104 ($generated@@61 $generated@@105)))
))))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (or ($generated@@29 $generated@@106 $generated@@107) (= $generated@@106 $generated@@107)) ($generated@@29 $generated@@107 $generated@@106))
 :pattern ( ($generated@@29 $generated@@106 $generated@@107) ($generated@@29 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (! (<= 0 ($generated@@68 $generated@@108))
 :pattern ( ($generated@@68 $generated@@108))
)))
(assert (forall (($generated@@109 Int) ) (! (= ($generated@@74 ($generated@@80 $generated@@109)) $generated@@4)
 :pattern ( ($generated@@80 $generated@@109))
)))
(assert (forall (($generated@@110 Int) ) (! (= ($generated@@69 ($generated@@80 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@80 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@76 $generated@@112 ($generated@@77 $generated@@112 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@77 $generated@@112 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (and (and (and (=> ($generated@@29 $generated@@113 $generated@@114) (or (not (= $generated@@113 $generated@@114)) (not true))) (=> (and ($generated@@98 $generated@@113) (not ($generated@@98 $generated@@114))) ($generated@@29 $generated@@113 $generated@@114))) (=> (and ($generated@@98 $generated@@113) ($generated@@98 $generated@@114)) (= ($generated@@29 $generated@@113 $generated@@114) (< ($generated@@68 $generated@@113) ($generated@@68 $generated@@114))))) (=> (and ($generated@@29 $generated@@113 $generated@@114) ($generated@@98 $generated@@114)) ($generated@@98 $generated@@113)))
 :pattern ( ($generated@@29 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 Int) ) (! (= ($generated@@42 $generated@@39 ($generated@@80 $generated@@115) $generated@@40) ($generated@@42 $generated@@9 ($generated@@13 $generated@@115) $generated))
 :pattern ( ($generated@@42 $generated@@39 ($generated@@80 $generated@@115) $generated@@40))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@116 $generated@@127 $generated@@128 $generated@@129 ($generated@@123 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@132 $generated@@133) $generated@@130)
 :weight 0
)) (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@116 $generated@@134 $generated@@135 $generated@@136 ($generated@@123 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@116 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@116 $generated@@143 $generated@@144 $generated@@145 ($generated@@123 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@116 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)))) (= ($generated@@7 $generated@@117) 4)) (= ($generated@@7 $generated@@118) 5)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@120 $generated@@152 $generated@@153 ($generated@@124 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@156) $generated@@154)
 :weight 0
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@161 $generated@@162) (= ($generated@@120 $generated@@157 $generated@@158 ($generated@@124 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@120 $generated@@157 $generated@@158 $generated@@160 $generated@@162)))
 :weight 0
))) (= ($generated@@7 $generated@@121) 6)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@7 ($generated@@122 $generated@@163 $generated@@164)) 7))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@125 ($generated@@122 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@122 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@126 ($generated@@122 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@122 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@12 ($generated@@116 $generated@@117 $generated@@118 $generated@@8 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@12 ($generated@@76 $generated@@8 ($generated@@120 $generated@@118 $generated@@121 ($generated@@120 $generated@@117 ($generated@@122 $generated@@118 $generated@@121) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@116 $generated@@117 $generated@@118 $generated@@8 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and ($generated@@41 $generated@@176) (and ($generated@@51 $generated@@175) ($generated@@33 $generated@@39 $generated@@175 $generated@@40 $generated@@176))) ($generated@@33 $generated@@9 ($generated@@13 ($generated@@69 $generated@@175)) $generated $generated@@176))
 :pattern ( ($generated@@33 $generated@@9 ($generated@@13 ($generated@@69 $generated@@175)) $generated $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> ($generated@@98 $generated@@177) (= $generated@@177 ($generated@@46 ($generated@@68 $generated@@177))))
 :pattern ( ($generated@@68 $generated@@177))
 :pattern ( ($generated@@98 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and ($generated@@41 $generated@@179) ($generated@@42 $generated@@39 $generated@@178 $generated@@40)) ($generated@@33 $generated@@39 $generated@@178 $generated@@40 $generated@@179))
 :pattern ( ($generated@@33 $generated@@39 $generated@@178 $generated@@40 $generated@@179))
)))
(assert (= ($generated@@23 $generated@@34) $generated@@2))
(assert (= ($generated@@180 $generated@@34) $generated@@5))
(assert (= ($generated@@23 $generated@@40) $generated@@3))
(assert (= ($generated@@180 $generated@@40) $generated@@6))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and ($generated@@42 $generated@@39 $generated@@182 $generated@@40) ($generated@@42 $generated@@39 $generated@@183 $generated@@40)) (= ($generated@@24 ($generated@@25 $generated@@181) $generated@@182 $generated@@183)  (and (and ($generated@@51 $generated@@182) ($generated@@51 $generated@@183)) (=> (and ($generated@@51 $generated@@182) ($generated@@51 $generated@@183)) (= ($generated@@69 $generated@@182) ($generated@@69 $generated@@183))))))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@181) $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@77 $generated@@9 ($generated@@13 ($generated@@61 $generated@@184))) ($generated@@65 $generated@@121 ($generated@@77 $generated@@9 ($generated@@13 $generated@@184))))
 :pattern ( ($generated@@77 $generated@@9 ($generated@@13 ($generated@@61 $generated@@184))))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@T) ) (! (= ($generated@@77 $generated@@186 ($generated@@65 $generated@@186 $generated@@185)) ($generated@@65 $generated@@121 ($generated@@77 $generated@@186 $generated@@185)))
 :pattern ( ($generated@@77 $generated@@186 ($generated@@65 $generated@@186 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! ($generated@@33 $generated@@9 $generated@@188 $generated $generated@@187)
 :pattern ( ($generated@@33 $generated@@9 $generated@@188 $generated $generated@@187))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@189 T@U) ($generated@@190 Int) ) (!  (=> (or ($generated@@60 ($generated@@65 $generated@@39 $generated@@189) ($generated@@61 $generated@@190)) (and (< 1 $generated@@37) (and (and ($generated@@42 $generated@@39 $generated@@189 $generated@@40) (<= ($generated@@61 0) $generated@@190)) ($generated@@12 ($generated@@65 $generated@@8 ($generated@@11  (or (not (= $generated@@190 7)) (not true)))))))) (= ($generated@@59 ($generated@@65 $generated@@39 $generated@@189) ($generated@@61 $generated@@190)) ($generated@@61 $generated@@190)))
 :weight 3
 :pattern ( ($generated@@59 ($generated@@65 $generated@@39 $generated@@189) ($generated@@61 $generated@@190)))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (= $generated@@193 $generated@@194) ($generated@@45 $generated@@191 ($generated@@25 $generated@@192) $generated@@193 $generated@@194))
 :pattern ( ($generated@@45 $generated@@191 ($generated@@25 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ) (! ($generated@@42 $generated@@9 $generated@@195 $generated)
 :pattern ( ($generated@@42 $generated@@9 $generated@@195 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@203  (=> (= (ControlFlow 0 6) (- 0 5)) (= ($generated@@59 $generated@@196 $generated@@197) ($generated@@38 $generated@@196)))))
(let (($generated@@204  (=> (= ($generated@@59 $generated@@196 $generated@@197) $generated@@197) (=> (and ($generated@@42 $generated@@9 ($generated@@13 ($generated@@59 $generated@@196 $generated@@197)) $generated@@34) (= (ControlFlow 0 7) 6)) $generated@@203))))
(let (($generated@@205  (=> (<= ($generated@@61 0) ($generated@@59 $generated@@196 $generated@@197)) (=> (and ($generated@@91 ($generated@@77 $generated@@39 $generated@@196) $generated@@40 $generated@@198) ($generated@@33 $generated@@9 ($generated@@13 $generated@@197) $generated@@34 $generated@@198)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@197 7)) (not true))) (=> (or (not (= $generated@@197 7)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@197) (= $generated@@197 $generated@@197))) (=> (or (<= 0 $generated@@197) (= $generated@@197 $generated@@197)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and ($generated@@24 ($generated@@25 ($generated@@25 $generated@@199)) $generated@@196 $generated@@196) (= $generated@@197 $generated@@197)) (< $generated@@197 $generated@@197)))))))))))
(let (($generated@@206  (=> (and (= $generated@@200 ($generated@@119 $generated@@201 $generated@@198 $generated@@1 false)) (or (not (= $generated@@197 7)) (not true))) (and (=> (= (ControlFlow 0 8) 2) $generated@@205) (=> (= (ControlFlow 0 8) 7) $generated@@204)))))
(let (($generated@@207  (=> (and ($generated@@41 $generated@@198) ($generated@@202 $generated@@198)) (=> (and (and (and ($generated@@42 $generated@@39 $generated@@196 $generated@@40) ($generated@@33 $generated@@39 $generated@@196 $generated@@40 $generated@@198)) (<= ($generated@@61 0) $generated@@197)) (and (= 1 $generated@@37) (= (ControlFlow 0 9) 8))) $generated@@206))))
$generated@@207))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
