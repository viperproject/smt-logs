(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 (T@U) Int)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (Int Int T@U T@U T@U T@U) T@U)
(declare-fun $generated@@94 (Int) Int)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@103 (Int) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@109 (T@T T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) Bool)
(declare-fun $generated@@115 (T@U T@U) Bool)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Int)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@2) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert  (and (= ($generated@@12 $generated@@32) 3) (= ($generated@@12 $generated@@39) 4)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@36 $generated@@42 $generated@@43) (and (< 1 $generated@@30) (and ($generated@@37 $generated@@42) (and ($generated@@38 $generated@@39 $generated@@43 ($generated@@40 $generated@@41)) ($generated@@31 $generated@@39 $generated@@43 ($generated@@40 $generated@@41) $generated@@42))))) ($generated@@31 $generated@@32 ($generated@@33 $generated@@42 $generated@@43) ($generated@@34 $generated@@35) $generated@@42))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@33 $generated@@42 $generated@@43) ($generated@@34 $generated@@35) $generated@@42))
))))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (and (or (not (= $generated@@49 $generated@@46)) (not true)) (= ($generated@@47 $generated@@49) ($generated@@45 $generated@@48))) ($generated@@38 $generated@@14 ($generated@@18 ($generated@@44 $generated@@49)) $generated))
 :pattern ( ($generated@@44 $generated@@49) ($generated@@45 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@31 $generated@@39 $generated@@51 ($generated@@40 $generated@@50) $generated@@52) ($generated@@31 $generated@@39 $generated@@51 ($generated@@45 $generated@@50) $generated@@52))
 :pattern ( ($generated@@31 $generated@@39 $generated@@51 ($generated@@40 $generated@@50) $generated@@52))
 :pattern ( ($generated@@31 $generated@@39 $generated@@51 ($generated@@45 $generated@@50) $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@54 $generated@@53)  (or (= $generated@@54 $generated@@46) (= ($generated@@47 $generated@@54) $generated@@53)))
 :pattern ( ($generated@@38 $generated@@39 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@31 $generated@@39 $generated@@56 $generated@@35 $generated@@57) ($generated@@31 $generated@@39 $generated@@56 $generated@@55 $generated@@57))
 :pattern ( ($generated@@31 $generated@@39 $generated@@56 $generated@@35 $generated@@57))
 :pattern ( ($generated@@31 $generated@@39 $generated@@56 $generated@@55 $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@31 $generated@@39 $generated@@58 $generated@@41 $generated@@59) ($generated@@31 $generated@@39 $generated@@58 $generated@@53 $generated@@59))
 :pattern ( ($generated@@31 $generated@@39 $generated@@58 $generated@@41 $generated@@59))
 :pattern ( ($generated@@31 $generated@@39 $generated@@58 $generated@@53 $generated@@59))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@61 $generated@@68 $generated@@69 ($generated@@65 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@72) $generated@@70)
 :weight 0
)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@61 $generated@@73 $generated@@74 ($generated@@65 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@61 $generated@@73 $generated@@74 $generated@@76 $generated@@78)))
 :weight 0
))) (= ($generated@@12 $generated@@62) 5)) (= ($generated@@12 $generated@@63) 6)) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (= ($generated@@12 ($generated@@64 $generated@@79 $generated@@80)) 7))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@66 ($generated@@64 $generated@@81 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@64 $generated@@81 $generated@@82))
))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@83 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@64 $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@31 $generated@@39 $generated@@86 ($generated@@45 $generated@@85) $generated@@87)  (or (= $generated@@86 $generated@@46) ($generated@@17 ($generated@@60 $generated@@13 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@39 ($generated@@64 $generated@@62 $generated@@63) $generated@@87 $generated@@86) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@39 $generated@@86 ($generated@@45 $generated@@85) $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@31 $generated@@39 $generated@@88 $generated@@55 $generated@@89)  (or (= $generated@@88 $generated@@46) ($generated@@17 ($generated@@60 $generated@@13 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@39 ($generated@@64 $generated@@62 $generated@@63) $generated@@89 $generated@@88) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@39 $generated@@88 $generated@@55 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@31 $generated@@39 $generated@@90 $generated@@53 $generated@@91)  (or (= $generated@@90 $generated@@46) ($generated@@17 ($generated@@60 $generated@@13 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@39 ($generated@@64 $generated@@62 $generated@@63) $generated@@91 $generated@@90) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@39 $generated@@90 $generated@@53 $generated@@91))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or ($generated@@36 $generated@@95 $generated@@96) (and (< 1 $generated@@30) (and ($generated@@37 $generated@@95) ($generated@@38 $generated@@39 $generated@@96 ($generated@@40 $generated@@41))))) (= ($generated@@33 $generated@@95 $generated@@96) ($generated@@92 ($generated@@93 ($generated@@94 0) ($generated@@44 $generated@@96) $generated@@95 $generated@@96 $generated@@95 $generated@@96))))
 :pattern ( ($generated@@33 $generated@@95 $generated@@96) ($generated@@37 $generated@@95))
))))
(assert (forall (($generated@@97 Int) ) (! (= ($generated@@94 $generated@@97) $generated@@97)
 :pattern ( ($generated@@94 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 $generated@@99) $generated@@99)
 :pattern ( ($generated@@98 $generated@@100 $generated@@99))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@36 $generated@@101 $generated@@102) (and (< 1 $generated@@30) (and ($generated@@37 $generated@@101) (and ($generated@@38 $generated@@39 $generated@@102 ($generated@@40 $generated@@41)) ($generated@@31 $generated@@39 $generated@@102 ($generated@@40 $generated@@41) $generated@@101))))) ($generated@@38 $generated@@32 ($generated@@33 $generated@@101 $generated@@102) ($generated@@34 $generated@@35)))
 :pattern ( ($generated@@33 $generated@@101 $generated@@102))
))))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 Int) ) (!  (=> (and (and (and ($generated@@37 $generated@@106) (and (or (not (= $generated@@107 $generated@@46)) (not true)) (= ($generated@@47 $generated@@107) ($generated@@45 $generated@@105)))) (and (<= 0 $generated@@108) (< $generated@@108 ($generated@@44 $generated@@107)))) ($generated@@17 ($generated@@60 $generated@@13 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@39 ($generated@@64 $generated@@62 $generated@@63) $generated@@106 $generated@@107) $generated@@2)))) ($generated@@104 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@39 ($generated@@64 $generated@@62 $generated@@63) $generated@@106 $generated@@107) ($generated@@103 $generated@@108)) $generated@@105 $generated@@106))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@39 ($generated@@64 $generated@@62 $generated@@63) $generated@@106 $generated@@107) ($generated@@103 $generated@@108)) ($generated@@45 $generated@@105))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@109 $generated@@111 ($generated@@60 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@60 $generated@@111 $generated@@110))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@112 ($generated@@92 $generated@@113) $generated@@114) ($generated@@17 ($generated@@61 $generated@@63 $generated@@13 $generated@@113 $generated@@114)))
 :pattern ( ($generated@@112 ($generated@@92 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@38 $generated@@32 $generated@@116 ($generated@@34 $generated@@117)) (forall (($generated@@118 T@U) ) (!  (=> ($generated@@112 $generated@@116 $generated@@118) ($generated@@115 $generated@@118 $generated@@117))
 :pattern ( ($generated@@112 $generated@@116 $generated@@118))
)))
 :pattern ( ($generated@@38 $generated@@32 $generated@@116 ($generated@@34 $generated@@117)))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@120 ($generated@@40 $generated@@119))  (and ($generated@@38 $generated@@39 $generated@@120 ($generated@@45 $generated@@119)) (or (not (= $generated@@120 $generated@@46)) (not true))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@120 ($generated@@40 $generated@@119)))
 :pattern ( ($generated@@38 $generated@@39 $generated@@120 ($generated@@45 $generated@@119)))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@104 ($generated@@109 $generated@@124 $generated@@121) $generated@@122 $generated@@123) ($generated@@31 $generated@@124 $generated@@121 $generated@@122 $generated@@123))
 :pattern ( ($generated@@104 ($generated@@109 $generated@@124 $generated@@121) $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@126 T@U) ) (!  (and (= ($generated@@29 ($generated@@45 $generated@@126)) $generated@@5) (= ($generated@@125 ($generated@@45 $generated@@126)) $generated@@10))
 :pattern ( ($generated@@45 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (!  (and (= ($generated@@29 ($generated@@40 $generated@@127)) $generated@@6) (= ($generated@@125 ($generated@@40 $generated@@127)) $generated@@10))
 :pattern ( ($generated@@40 $generated@@127))
)))
(assert  (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@128 $generated@@131 $generated@@132 $generated@@133 ($generated@@130 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@136 $generated@@137) $generated@@134)
 :weight 0
)) (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@128 $generated@@138 $generated@@139 $generated@@140 ($generated@@130 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@128 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@128 $generated@@147 $generated@@148 $generated@@149 ($generated@@130 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@128 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@17 ($generated@@128 $generated@@39 $generated@@62 $generated@@13 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@156)) (not true)) ($generated@@17 ($generated@@60 $generated@@13 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@39 ($generated@@64 $generated@@62 $generated@@63) $generated@@157 $generated@@160) $generated@@158)))) (= $generated@@160 $generated@@159)))
 :pattern ( ($generated@@128 $generated@@39 $generated@@62 $generated@@13 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> ($generated@@115 $generated@@162 $generated@@55) (and (= ($generated@@109 $generated@@39 ($generated@@60 $generated@@39 $generated@@162)) $generated@@162) ($generated@@38 $generated@@39 ($generated@@60 $generated@@39 $generated@@162) $generated@@55)))
 :pattern ( ($generated@@115 $generated@@162 $generated@@55))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> ($generated@@115 $generated@@163 $generated@@35) (and (= ($generated@@109 $generated@@39 ($generated@@60 $generated@@39 $generated@@163)) $generated@@163) ($generated@@38 $generated@@39 ($generated@@60 $generated@@39 $generated@@163) $generated@@35)))
 :pattern ( ($generated@@115 $generated@@163 $generated@@35))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> ($generated@@115 $generated@@164 $generated@@41) (and (= ($generated@@109 $generated@@39 ($generated@@60 $generated@@39 $generated@@164)) $generated@@164) ($generated@@38 $generated@@39 ($generated@@60 $generated@@39 $generated@@164) $generated@@41)))
 :pattern ( ($generated@@115 $generated@@164 $generated@@41))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> ($generated@@115 $generated@@165 $generated@@53) (and (= ($generated@@109 $generated@@39 ($generated@@60 $generated@@39 $generated@@165)) $generated@@165) ($generated@@38 $generated@@39 ($generated@@60 $generated@@39 $generated@@165) $generated@@53)))
 :pattern ( ($generated@@115 $generated@@165 $generated@@53))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@167 ($generated@@45 $generated@@166))  (or (= $generated@@167 $generated@@46) (= ($generated@@47 $generated@@167) ($generated@@45 $generated@@166))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@167 ($generated@@45 $generated@@166)))
)))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@168 $generated@@35)  (and ($generated@@38 $generated@@39 $generated@@168 $generated@@55) (or (not (= $generated@@168 $generated@@46)) (not true))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@168 $generated@@35))
 :pattern ( ($generated@@38 $generated@@39 $generated@@168 $generated@@55))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@169 $generated@@41)  (and ($generated@@38 $generated@@39 $generated@@169 $generated@@53) (or (not (= $generated@@169 $generated@@46)) (not true))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@169 $generated@@41))
 :pattern ( ($generated@@38 $generated@@39 $generated@@169 $generated@@53))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> ($generated@@115 $generated@@170 $generated) (and (= ($generated@@109 $generated@@14 ($generated@@60 $generated@@14 $generated@@170)) $generated@@170) ($generated@@38 $generated@@14 ($generated@@60 $generated@@14 $generated@@170) $generated)))
 :pattern ( ($generated@@115 $generated@@170 $generated))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@T) ) (! (= ($generated@@115 ($generated@@109 $generated@@173 $generated@@171) $generated@@172) ($generated@@38 $generated@@173 $generated@@171 $generated@@172))
 :pattern ( ($generated@@115 ($generated@@109 $generated@@173 $generated@@171) $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (<= 0 ($generated@@44 $generated@@174))
 :pattern ( ($generated@@44 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@175 ($generated@@34 $generated@@176) $generated@@177) (forall (($generated@@178 T@U) ) (!  (=> ($generated@@112 $generated@@175 $generated@@178) ($generated@@104 $generated@@178 $generated@@176 $generated@@177))
 :pattern ( ($generated@@112 $generated@@175 $generated@@178))
)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@175 ($generated@@34 $generated@@176) $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! ($generated@@38 $generated@@39 $generated@@179 $generated@@55)
 :pattern ( ($generated@@38 $generated@@39 $generated@@179 $generated@@55))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@180 ($generated@@34 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@34 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@29 ($generated@@34 $generated@@182)) $generated@@1)
 :pattern ( ($generated@@34 $generated@@182))
)))
(assert (forall (($generated@@183 Int) ) (! (= ($generated@@28 ($generated@@103 $generated@@183)) 1)
 :pattern ( ($generated@@103 $generated@@183))
)))
(assert (forall (($generated@@185 Int) ) (! (= ($generated@@184 ($generated@@103 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@103 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@186 ($generated@@45 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@45 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@188 ($generated@@40 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@40 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@T) ) (! (= ($generated@@60 $generated@@191 ($generated@@109 $generated@@191 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@109 $generated@@191 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and ($generated@@37 $generated@@193) (and (or (not (= $generated@@194 $generated@@46)) (not true)) (= ($generated@@47 $generated@@194) ($generated@@45 $generated@@192)))) ($generated@@17 ($generated@@60 $generated@@13 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@39 ($generated@@64 $generated@@62 $generated@@63) $generated@@193 $generated@@194) $generated@@2)))) ($generated@@31 $generated@@14 ($generated@@18 ($generated@@44 $generated@@194)) $generated $generated@@193))
 :pattern ( ($generated@@44 $generated@@194) ($generated@@60 $generated@@13 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@39 ($generated@@64 $generated@@62 $generated@@63) $generated@@193 $generated@@194) $generated@@2)) ($generated@@45 $generated@@192))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (and (and ($generated@@37 $generated@@196) (and (or (not (= $generated@@197 $generated@@46)) (not true)) (= ($generated@@47 $generated@@197) ($generated@@45 $generated@@195)))) (and (<= 0 $generated@@198) (< $generated@@198 ($generated@@44 $generated@@197)))) ($generated@@115 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@39 ($generated@@64 $generated@@62 $generated@@63) $generated@@196 $generated@@197) ($generated@@103 $generated@@198)) $generated@@195))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@39 ($generated@@64 $generated@@62 $generated@@63) $generated@@196 $generated@@197) ($generated@@103 $generated@@198)) ($generated@@45 $generated@@195))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@115 $generated@@199 ($generated@@34 $generated@@200)) (and (= ($generated@@109 $generated@@32 ($generated@@60 $generated@@32 $generated@@199)) $generated@@199) ($generated@@38 $generated@@32 ($generated@@60 $generated@@32 $generated@@199) ($generated@@34 $generated@@200))))
 :pattern ( ($generated@@115 $generated@@199 ($generated@@34 $generated@@200)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> ($generated@@115 $generated@@202 ($generated@@45 $generated@@201)) (and (= ($generated@@109 $generated@@39 ($generated@@60 $generated@@39 $generated@@202)) $generated@@202) ($generated@@38 $generated@@39 ($generated@@60 $generated@@39 $generated@@202) ($generated@@45 $generated@@201))))
 :pattern ( ($generated@@115 $generated@@202 ($generated@@45 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> ($generated@@115 $generated@@204 ($generated@@40 $generated@@203)) (and (= ($generated@@109 $generated@@39 ($generated@@60 $generated@@39 $generated@@204)) $generated@@204) ($generated@@38 $generated@@39 ($generated@@60 $generated@@39 $generated@@204) ($generated@@40 $generated@@203))))
 :pattern ( ($generated@@115 $generated@@204 ($generated@@40 $generated@@203)))
)))
(assert (forall (($generated@@205 Int) ($generated@@206 Int) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@17 ($generated@@61 $generated@@63 $generated@@13 ($generated@@93 $generated@@205 $generated@@206 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211)) (exists (($generated@@212 Int) ) (!  (and (and (<= $generated@@205 $generated@@212) (< $generated@@212 $generated@@206)) (= $generated@@211 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@39 ($generated@@64 $generated@@62 $generated@@63) $generated@@207 $generated@@208) ($generated@@103 $generated@@212))))
 :pattern ( ($generated@@60 $generated@@39 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@39 ($generated@@64 $generated@@62 $generated@@63) $generated@@209 $generated@@210) ($generated@@103 $generated@@212))))
)))
 :pattern ( ($generated@@61 $generated@@63 $generated@@13 ($generated@@93 $generated@@205 $generated@@206 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211))
)))
(assert (= ($generated@@29 $generated@@55) $generated@@3))
(assert (= ($generated@@125 $generated@@55) $generated@@9))
(assert (= ($generated@@29 $generated@@35) $generated@@4))
(assert (= ($generated@@125 $generated@@35) $generated@@9))
(assert (= ($generated@@29 $generated@@41) $generated@@7))
(assert (= ($generated@@125 $generated@@41) $generated@@11))
(assert (= ($generated@@29 $generated@@53) $generated@@8))
(assert (= ($generated@@125 $generated@@53) $generated@@11))
(assert (forall (($generated@@213 Int) ) (! (= ($generated@@109 $generated@@14 ($generated@@18 ($generated@@94 $generated@@213))) ($generated@@98 $generated@@63 ($generated@@109 $generated@@14 ($generated@@18 $generated@@213))))
 :pattern ( ($generated@@109 $generated@@14 ($generated@@18 ($generated@@94 $generated@@213))))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@T) ) (! (= ($generated@@109 $generated@@215 ($generated@@98 $generated@@215 $generated@@214)) ($generated@@98 $generated@@63 ($generated@@109 $generated@@215 $generated@@214)))
 :pattern ( ($generated@@109 $generated@@215 ($generated@@98 $generated@@215 $generated@@214)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! ($generated@@31 $generated@@14 $generated@@217 $generated $generated@@216)
 :pattern ( ($generated@@31 $generated@@14 $generated@@217 $generated $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! ($generated@@38 $generated@@14 $generated@@218 $generated)
 :pattern ( ($generated@@38 $generated@@14 $generated@@218 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () Bool)
(declare-fun $generated@@222 () Int)
(declare-fun $generated@@223 () Bool)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@226  (=> (= ($generated@@33 $generated@@219 $generated@@220) ($generated@@92 ($generated@@93 ($generated@@94 0) ($generated@@44 $generated@@220) $generated@@219 $generated@@220 $generated@@219 $generated@@220))) (=> (and ($generated@@38 $generated@@32 ($generated@@33 $generated@@219 $generated@@220) ($generated@@34 $generated@@35)) (= (ControlFlow 0 4) (- 0 3))) $generated@@221))))
(let (($generated@@227  (=> (not (and (<= ($generated@@94 0) $generated@@222) (< $generated@@222 ($generated@@44 $generated@@220)))) (=> (and (= $generated@@221 true) (= (ControlFlow 0 8) 4)) $generated@@226))))
(let (($generated@@228  (=> (and (<= ($generated@@94 0) $generated@@222) (< $generated@@222 ($generated@@44 $generated@@220))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (not (= $generated@@220 $generated@@46)) (not true))) (=> (or (not (= $generated@@220 $generated@@46)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@222) (< $generated@@222 ($generated@@44 $generated@@220)))) (=> (and (<= 0 $generated@@222) (< $generated@@222 ($generated@@44 $generated@@220))) (=> (= $generated@@223 ($generated@@17 ($generated@@128 $generated@@39 $generated@@62 $generated@@13 $generated@@224 $generated@@220 ($generated@@103 $generated@@222)))) (=> (and (= $generated@@221 $generated@@223) (= (ControlFlow 0 5) 4)) $generated@@226)))))))))
(let (($generated@@229  (=> (< $generated@@222 ($generated@@94 0)) (and (=> (= (ControlFlow 0 11) 5) $generated@@228) (=> (= (ControlFlow 0 11) 8) $generated@@227)))))
(let (($generated@@230  (=> (<= ($generated@@94 0) $generated@@222) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (not (= $generated@@220 $generated@@46)) (not true))) (=> (or (not (= $generated@@220 $generated@@46)) (not true)) (and (=> (= (ControlFlow 0 9) 5) $generated@@228) (=> (= (ControlFlow 0 9) 8) $generated@@227)))))))
(let (($generated@@231  (and (=> (= (ControlFlow 0 12) 9) $generated@@230) (=> (= (ControlFlow 0 12) 11) $generated@@229))))
(let (($generated@@232 true))
(let (($generated@@233 true))
(let (($generated@@234  (=> (= $generated@@224 ($generated@@129 $generated@@46 $generated@@219 $generated@@2 $generated@@220)) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@233) (=> (= (ControlFlow 0 13) 12) $generated@@231)) (=> (= (ControlFlow 0 13) 2) $generated@@232)))))
(let (($generated@@235  (=> (and (and (and ($generated@@37 $generated@@219) ($generated@@225 $generated@@219)) ($generated@@38 $generated@@39 $generated@@220 ($generated@@40 $generated@@41))) (and (= 1 $generated@@30) (= (ControlFlow 0 14) 13))) $generated@@234)))
$generated@@235)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
