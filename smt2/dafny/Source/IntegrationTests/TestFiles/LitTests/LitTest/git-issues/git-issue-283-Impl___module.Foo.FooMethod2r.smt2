(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 (T@T) Int)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 (Bool) T@U)
(declare-fun $generated@@21 (T@U) Bool)
(declare-fun $generated@@22 (Int) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (Real) T@U)
(declare-fun $generated@@25 (T@U) Real)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U Int) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@50 (T@T T@U T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@79 (Int) Int)
(declare-fun $generated@@81 (Real) Real)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@103 (Int) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) Bool)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@114 (T@U T@U) Bool)
(declare-fun $generated@@119 (T@U) Bool)
(declare-fun $generated@@123 (T@U) Bool)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Int)
(declare-fun $generated@@166 (T@U) Int)
(declare-fun $generated@@168 (T@U) Int)
(declare-fun $generated@@173 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U) Bool)
(declare-fun $generated@@219 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@16 $generated@@17) 0) (= ($generated@@16 $generated@@18) 1)) (= ($generated@@16 $generated@@19) 2)) (forall (($generated@@26 Bool) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Int) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Real) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15)
)
(assert (= ($generated@@32 $generated) $generated@@1))
(assert (= ($generated@@32 $generated@@0) $generated@@2))
(assert (= ($generated@@16 $generated@@38) 3))
(assert (forall (($generated@@39 T@U) ($generated@@40 Int) ) (!  (=> (and (<= 0 $generated@@40) (< $generated@@40 ($generated@@35 $generated@@39))) (< ($generated@@36 ($generated@@37 $generated@@38 ($generated@@33 $generated@@39 $generated@@40))) ($generated@@36 ($generated@@34 $generated@@39))))
 :pattern ( ($generated@@33 $generated@@39 $generated@@40) ($generated@@34 $generated@@39))
)))
(assert (= ($generated@@35 $generated@@41) 0))
(assert (= ($generated@@42 $generated@@43) $generated@@9))
(assert (= ($generated@@16 $generated@@45) 4))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@48 $generated@@46 $generated@@49) ($generated@@44 $generated@@45 $generated@@48 $generated@@47 $generated@@49))
 :pattern ( ($generated@@44 $generated@@45 $generated@@48 $generated@@46 $generated@@49))
 :pattern ( ($generated@@44 $generated@@45 $generated@@48 $generated@@47 $generated@@49))
)))
(assert ($generated@@50 $generated@@38 $generated@@43 $generated@@51))
(assert  (and (and (and (and (and (and (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@53 $generated@@60 $generated@@61 ($generated@@57 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@53 $generated@@65 $generated@@66 ($generated@@57 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@53 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (= ($generated@@16 $generated@@54) 5)) (= ($generated@@16 $generated@@55) 6)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@16 ($generated@@56 $generated@@71 $generated@@72)) 7))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@58 ($generated@@56 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@56 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@59 ($generated@@56 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@56 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@77 $generated@@47 $generated@@78)  (or (= $generated@@77 $generated@@52) ($generated@@21 ($generated@@37 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@45 ($generated@@56 $generated@@54 $generated@@55) $generated@@78 $generated@@77) $generated@@4)))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@77 $generated@@47 $generated@@78))
)))
(assert (forall (($generated@@80 Int) ) (! (= ($generated@@79 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 Real) ) (! (= ($generated@@81 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 $generated@@87) (= ($generated@@42 $generated@@87) $generated@@6))
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 $generated@@89) (= ($generated@@42 $generated@@89) $generated@@8))
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@90 $generated@@91) (= ($generated@@42 $generated@@91) $generated@@9))
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@92 $generated@@93) (= ($generated@@42 $generated@@93) $generated@@11))
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 ($generated@@37 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@37 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@90 $generated@@97) (= $generated@@97 $generated@@43))
 :pattern ( ($generated@@90 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@86 $generated@@99) (exists (($generated@@100 T@U) ) (= $generated@@99 ($generated@@98 $generated@@100))))
 :pattern ( ($generated@@86 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@88 $generated@@101) (exists (($generated@@102 T@U) ) (= $generated@@101 ($generated@@34 $generated@@102))))
 :pattern ( ($generated@@88 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@92 $generated@@104) (exists (($generated@@105 Int) ) (= $generated@@104 ($generated@@103 $generated@@105))))
 :pattern ( ($generated@@92 $generated@@104))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@106 ($generated@@94 $generated@@110 $generated@@107) $generated@@108 $generated@@109) ($generated@@44 $generated@@110 $generated@@107 $generated@@108 $generated@@109))
 :pattern ( ($generated@@106 ($generated@@94 $generated@@110 $generated@@107) $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@113 T@U) ) (!  (and (= ($generated@@32 ($generated@@111 $generated@@113)) $generated@@7) (= ($generated@@112 ($generated@@111 $generated@@113)) $generated@@14))
 :pattern ( ($generated@@111 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@114 $generated@@115 $generated@@46) (and (= ($generated@@94 $generated@@45 ($generated@@37 $generated@@45 $generated@@115)) $generated@@115) ($generated@@50 $generated@@45 ($generated@@37 $generated@@45 $generated@@115) $generated@@46)))
 :pattern ( ($generated@@114 $generated@@115 $generated@@46))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@114 $generated@@116 $generated@@51) (and (= ($generated@@94 $generated@@38 ($generated@@37 $generated@@38 $generated@@116)) $generated@@116) ($generated@@50 $generated@@38 ($generated@@37 $generated@@38 $generated@@116) $generated@@51)))
 :pattern ( ($generated@@114 $generated@@116 $generated@@51))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@114 $generated@@117 $generated@@47) (and (= ($generated@@94 $generated@@45 ($generated@@37 $generated@@45 $generated@@117)) $generated@@117) ($generated@@50 $generated@@45 ($generated@@37 $generated@@45 $generated@@117) $generated@@47)))
 :pattern ( ($generated@@114 $generated@@117 $generated@@47))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@50 $generated@@45 $generated@@118 $generated@@46)  (and ($generated@@50 $generated@@45 $generated@@118 $generated@@47) (or (not (= $generated@@118 $generated@@52)) (not true))))
 :pattern ( ($generated@@50 $generated@@45 $generated@@118 $generated@@46))
 :pattern ( ($generated@@50 $generated@@45 $generated@@118 $generated@@47))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@119 $generated@@122) (= ($generated@@44 $generated@@38 ($generated@@98 $generated@@121) ($generated@@111 $generated@@120) $generated@@122) ($generated@@106 $generated@@121 $generated@@120 $generated@@122)))
 :pattern ( ($generated@@44 $generated@@38 ($generated@@98 $generated@@121) ($generated@@111 $generated@@120) $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@123 $generated@@124) (or ($generated@@86 $generated@@124) ($generated@@88 $generated@@124)))
 :pattern ( ($generated@@123 $generated@@124))
)))
(assert (= ($generated@@16 $generated@@125) 8))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and ($generated@@119 $generated@@129) (and ($generated@@88 $generated@@128) (exists (($generated@@130 T@U) ) (! ($generated@@44 $generated@@38 $generated@@128 ($generated@@111 $generated@@130) $generated@@129)
 :pattern ( ($generated@@44 $generated@@38 $generated@@128 ($generated@@111 $generated@@130) $generated@@129))
)))) ($generated@@44 $generated@@125 ($generated@@126 $generated@@128) ($generated@@127 $generated) $generated@@129))
 :pattern ( ($generated@@44 $generated@@125 ($generated@@126 $generated@@128) ($generated@@127 $generated) $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@119 $generated@@133) (= ($generated@@44 $generated@@38 ($generated@@34 $generated@@132) ($generated@@111 $generated@@131) $generated@@133) ($generated@@44 $generated@@125 $generated@@132 ($generated@@127 $generated) $generated@@133)))
 :pattern ( ($generated@@44 $generated@@38 ($generated@@34 $generated@@132) ($generated@@111 $generated@@131) $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@50 $generated@@38 $generated@@135 ($generated@@111 $generated@@134)) (or ($generated@@86 $generated@@135) ($generated@@88 $generated@@135)))
 :pattern ( ($generated@@88 $generated@@135) ($generated@@50 $generated@@38 $generated@@135 ($generated@@111 $generated@@134)))
 :pattern ( ($generated@@86 $generated@@135) ($generated@@50 $generated@@38 $generated@@135 ($generated@@111 $generated@@134)))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@50 $generated@@38 $generated@@136 $generated@@51) (or ($generated@@90 $generated@@136) ($generated@@92 $generated@@136)))
 :pattern ( ($generated@@92 $generated@@136) ($generated@@50 $generated@@38 $generated@@136 $generated@@51))
 :pattern ( ($generated@@90 $generated@@136) ($generated@@50 $generated@@38 $generated@@136 $generated@@51))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@114 $generated@@137 $generated@@0) (and (= ($generated@@94 $generated@@18 ($generated@@37 $generated@@18 $generated@@137)) $generated@@137) ($generated@@50 $generated@@18 ($generated@@37 $generated@@18 $generated@@137) $generated@@0)))
 :pattern ( ($generated@@114 $generated@@137 $generated@@0))
)))
(assert (= ($generated@@16 $generated@@138) 9))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@114 $generated@@139 $generated) (and (= ($generated@@94 $generated@@138 ($generated@@37 $generated@@138 $generated@@139)) $generated@@139) ($generated@@50 $generated@@138 ($generated@@37 $generated@@138 $generated@@139) $generated)))
 :pattern ( ($generated@@114 $generated@@139 $generated))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@114 ($generated@@94 $generated@@142 $generated@@140) $generated@@141) ($generated@@50 $generated@@142 $generated@@140 $generated@@141))
 :pattern ( ($generated@@114 ($generated@@94 $generated@@142 $generated@@140) $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! (<= 0 ($generated@@35 $generated@@143))
 :pattern ( ($generated@@35 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@44 $generated@@125 $generated@@144 ($generated@@127 $generated@@145) $generated@@146) (forall (($generated@@147 Int) ) (!  (=> (and (<= 0 $generated@@147) (< $generated@@147 ($generated@@35 $generated@@144))) ($generated@@106 ($generated@@33 $generated@@144 $generated@@147) $generated@@145 $generated@@146))
 :pattern ( ($generated@@33 $generated@@144 $generated@@147))
)))
 :pattern ( ($generated@@44 $generated@@125 $generated@@144 ($generated@@127 $generated@@145) $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@127 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@127 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@32 ($generated@@127 $generated@@150)) $generated@@3)
 :pattern ( ($generated@@127 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@42 ($generated@@98 $generated@@151)) $generated@@6)
 :pattern ( ($generated@@98 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@152 ($generated@@111 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@111 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@154 ($generated@@98 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@98 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@42 ($generated@@34 $generated@@156)) $generated@@8)
 :pattern ( ($generated@@34 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@126 ($generated@@34 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@34 $generated@@157))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@42 ($generated@@103 $generated@@158)) $generated@@11)
 :pattern ( ($generated@@103 $generated@@158))
)))
(assert (forall (($generated@@160 Int) ) (! (= ($generated@@159 ($generated@@103 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@103 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@37 $generated@@162 ($generated@@94 $generated@@162 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@94 $generated@@162 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@50 $generated@@38 ($generated@@98 $generated@@164) ($generated@@111 $generated@@163)) ($generated@@114 $generated@@164 $generated@@163))
 :pattern ( ($generated@@50 $generated@@38 ($generated@@98 $generated@@164) ($generated@@111 $generated@@163)))
)))
(assert (forall (($generated@@165 Int) ) (! (= ($generated@@50 $generated@@38 ($generated@@103 $generated@@165) $generated@@51) ($generated@@50 $generated@@18 ($generated@@22 $generated@@165) $generated@@0))
 :pattern ( ($generated@@50 $generated@@38 ($generated@@103 $generated@@165) $generated@@51))
)))
(assert (forall (($generated@@167 T@U) ) (! (< ($generated@@166 $generated@@167) ($generated@@36 ($generated@@98 $generated@@167)))
 :pattern ( ($generated@@98 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (< ($generated@@168 $generated@@169) ($generated@@36 ($generated@@34 $generated@@169)))
 :pattern ( ($generated@@34 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and ($generated@@119 $generated@@172) (and ($generated@@86 $generated@@170) ($generated@@44 $generated@@38 $generated@@170 ($generated@@111 $generated@@171) $generated@@172))) ($generated@@106 ($generated@@154 $generated@@170) $generated@@171 $generated@@172))
 :pattern ( ($generated@@106 ($generated@@154 $generated@@170) $generated@@171 $generated@@172))
)))
(assert  (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@173 $generated@@176 $generated@@177 $generated@@178 ($generated@@175 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@181 $generated@@182) $generated@@179)
 :weight 0
)) (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@173 $generated@@183 $generated@@184 $generated@@185 ($generated@@175 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@173 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@173 $generated@@192 $generated@@193 $generated@@194 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@173 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 Bool) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@21 ($generated@@173 $generated@@45 $generated@@54 $generated@@17 ($generated@@174 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@205 $generated@@206))  (=> (and (or (not (= $generated@@205 $generated@@201)) (not true)) ($generated@@21 ($generated@@37 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@45 ($generated@@56 $generated@@54 $generated@@55) $generated@@202 $generated@@205) $generated@@203)))) $generated@@204))
 :pattern ( ($generated@@173 $generated@@45 $generated@@54 $generated@@17 ($generated@@174 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and ($generated@@119 $generated@@208) (and ($generated@@92 $generated@@207) ($generated@@44 $generated@@38 $generated@@207 $generated@@51 $generated@@208))) ($generated@@44 $generated@@18 ($generated@@22 ($generated@@159 $generated@@207)) $generated@@0 $generated@@208))
 :pattern ( ($generated@@44 $generated@@18 ($generated@@22 ($generated@@159 $generated@@207)) $generated@@0 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ) (! (= ($generated@@166 ($generated@@94 $generated@@38 $generated@@209)) ($generated@@36 $generated@@209))
 :pattern ( ($generated@@166 ($generated@@94 $generated@@38 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@114 $generated@@210 ($generated@@127 $generated@@211)) (and (= ($generated@@94 $generated@@125 ($generated@@37 $generated@@125 $generated@@210)) $generated@@210) ($generated@@50 $generated@@125 ($generated@@37 $generated@@125 $generated@@210) ($generated@@127 $generated@@211))))
 :pattern ( ($generated@@114 $generated@@210 ($generated@@127 $generated@@211)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> ($generated@@114 $generated@@213 ($generated@@111 $generated@@212)) (and (= ($generated@@94 $generated@@38 ($generated@@37 $generated@@38 $generated@@213)) $generated@@213) ($generated@@50 $generated@@38 ($generated@@37 $generated@@38 $generated@@213) ($generated@@111 $generated@@212))))
 :pattern ( ($generated@@114 $generated@@213 ($generated@@111 $generated@@212)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (= ($generated@@50 $generated@@38 ($generated@@34 $generated@@215) ($generated@@111 $generated@@214)) ($generated@@50 $generated@@125 $generated@@215 ($generated@@127 $generated)))
 :pattern ( ($generated@@50 $generated@@38 ($generated@@34 $generated@@215) ($generated@@111 $generated@@214)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and ($generated@@119 $generated@@217) ($generated@@50 $generated@@38 $generated@@216 $generated@@51)) ($generated@@44 $generated@@38 $generated@@216 $generated@@51 $generated@@217))
 :pattern ( ($generated@@44 $generated@@38 $generated@@216 $generated@@51 $generated@@217))
)))
(assert (= ($generated@@32 $generated@@46) $generated@@5))
(assert (= ($generated@@112 $generated@@46) $generated@@13))
(assert (= ($generated@@32 $generated@@51) $generated@@10))
(assert (= ($generated@@112 $generated@@51) $generated@@15))
(assert (= ($generated@@32 $generated@@47) $generated@@12))
(assert (= ($generated@@112 $generated@@47) $generated@@13))
(assert (= $generated@@43 ($generated@@83 $generated@@38 $generated@@43)))
(assert (forall (($generated@@220 T@U) ) (! (= ($generated@@50 $generated@@45 $generated@@220 $generated@@47)  (or (= $generated@@220 $generated@@52) ($generated@@218 ($generated@@219 $generated@@220))))
 :pattern ( ($generated@@50 $generated@@45 $generated@@220 $generated@@47))
)))
(assert (forall (($generated@@221 Int) ) (! (= ($generated@@94 $generated@@18 ($generated@@22 ($generated@@79 $generated@@221))) ($generated@@83 $generated@@55 ($generated@@94 $generated@@18 ($generated@@22 $generated@@221))))
 :pattern ( ($generated@@94 $generated@@18 ($generated@@22 ($generated@@79 $generated@@221))))
)))
(assert (forall (($generated@@222 Real) ) (! (= ($generated@@94 $generated@@19 ($generated@@24 ($generated@@81 $generated@@222))) ($generated@@83 $generated@@55 ($generated@@94 $generated@@19 ($generated@@24 $generated@@222))))
 :pattern ( ($generated@@94 $generated@@19 ($generated@@24 ($generated@@81 $generated@@222))))
)))
(assert (forall (($generated@@223 T@U) ) (! (= ($generated@@98 ($generated@@83 $generated@@55 $generated@@223)) ($generated@@83 $generated@@38 ($generated@@98 $generated@@223)))
 :pattern ( ($generated@@98 ($generated@@83 $generated@@55 $generated@@223)))
)))
(assert (forall (($generated@@224 T@U) ) (! (= ($generated@@34 ($generated@@83 $generated@@125 $generated@@224)) ($generated@@83 $generated@@38 ($generated@@34 $generated@@224)))
 :pattern ( ($generated@@34 ($generated@@83 $generated@@125 $generated@@224)))
)))
(assert (forall (($generated@@225 Int) ) (! (= ($generated@@103 ($generated@@79 $generated@@225)) ($generated@@83 $generated@@38 ($generated@@103 $generated@@225)))
 :pattern ( ($generated@@103 ($generated@@79 $generated@@225)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@T) ) (! (= ($generated@@94 $generated@@227 ($generated@@83 $generated@@227 $generated@@226)) ($generated@@83 $generated@@55 ($generated@@94 $generated@@227 $generated@@226)))
 :pattern ( ($generated@@94 $generated@@227 ($generated@@83 $generated@@227 $generated@@226)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= ($generated@@35 $generated@@228) 0) (= $generated@@228 $generated@@41))
 :pattern ( ($generated@@35 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! ($generated@@44 $generated@@18 $generated@@230 $generated@@0 $generated@@229)
 :pattern ( ($generated@@44 $generated@@18 $generated@@230 $generated@@0 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! ($generated@@44 $generated@@138 $generated@@232 $generated $generated@@231)
 :pattern ( ($generated@@44 $generated@@138 $generated@@232 $generated $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= ($generated@@50 $generated@@125 $generated@@233 ($generated@@127 $generated@@234)) (forall (($generated@@235 Int) ) (!  (=> (and (<= 0 $generated@@235) (< $generated@@235 ($generated@@35 $generated@@233))) ($generated@@114 ($generated@@33 $generated@@233 $generated@@235) $generated@@234))
 :pattern ( ($generated@@33 $generated@@233 $generated@@235))
)))
 :pattern ( ($generated@@50 $generated@@125 $generated@@233 ($generated@@127 $generated@@234)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 Int) ) (!  (=> (and (<= 0 $generated@@237) (< $generated@@237 ($generated@@35 $generated@@236))) (< ($generated@@36 ($generated@@37 $generated@@38 ($generated@@33 $generated@@236 $generated@@237))) ($generated@@168 $generated@@236)))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@38 ($generated@@33 $generated@@236 $generated@@237))))
)))
(assert (forall (($generated@@238 T@U) ) (! ($generated@@50 $generated@@18 $generated@@238 $generated@@0)
 :pattern ( ($generated@@50 $generated@@18 $generated@@238 $generated@@0))
)))
(assert (forall (($generated@@239 T@U) ) (! ($generated@@50 $generated@@138 $generated@@239 $generated)
 :pattern ( ($generated@@50 $generated@@138 $generated@@239 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () Real)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 () Int)
(declare-fun $generated@@245 () Int)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 () Real)
(declare-fun $generated@@248 () Real)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () Real)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@258 true))
(let (($generated@@259  (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> ($generated@@86 $generated@@240) (=> ($generated@@90 ($generated@@37 $generated@@38 ($generated@@154 $generated@@240))) ($generated@@21 ($generated@@83 $generated@@17 ($generated@@20 true)))))) (=> (=> ($generated@@86 $generated@@240) (=> ($generated@@90 ($generated@@37 $generated@@38 ($generated@@154 $generated@@240))) ($generated@@21 ($generated@@83 $generated@@17 ($generated@@20 true))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@86 $generated@@240) (=> (not ($generated@@90 ($generated@@37 $generated@@38 ($generated@@154 $generated@@240)))) ($generated@@21 ($generated@@83 $generated@@17 ($generated@@20 true)))))) (=> (=> ($generated@@86 $generated@@240) (=> (not ($generated@@90 ($generated@@37 $generated@@38 ($generated@@154 $generated@@240)))) ($generated@@21 ($generated@@83 $generated@@17 ($generated@@20 true))))) (=> (= (ControlFlow 0 4) (- 0 3)) (=> (not ($generated@@86 $generated@@240)) ($generated@@21 ($generated@@83 $generated@@17 ($generated@@20 true)))))))))))
(let (($generated@@260  (=> (and (or (or (= $generated@@241 ($generated@@81 0.0)) (= $generated@@241 ($generated@@81 1.0))) (= $generated@@241 ($generated@@81 3.0))) (= (ControlFlow 0 7) 4)) $generated@@259)))
(let (($generated@@261 true))
(let (($generated@@262  (and (=> (= (ControlFlow 0 8) 2) $generated@@261) (=> (= (ControlFlow 0 8) 7) $generated@@260))))
(let (($generated@@263  (=> (and (or (= $generated@@241 ($generated@@81 0.0)) (= $generated@@241 ($generated@@81 1.0))) (= (ControlFlow 0 10) 8)) $generated@@262)))
(let (($generated@@264  (=> (and (not (or (= $generated@@241 ($generated@@81 0.0)) (= $generated@@241 ($generated@@81 1.0)))) (= (ControlFlow 0 9) 8)) $generated@@262)))
(let (($generated@@265  (=> (= $generated@@241 ($generated@@81 0.0)) (and (=> (= (ControlFlow 0 12) 9) $generated@@264) (=> (= (ControlFlow 0 12) 10) $generated@@263)))))
(let (($generated@@266  (=> (or (not (= $generated@@241 ($generated@@81 0.0))) (not true)) (and (=> (= (ControlFlow 0 11) 9) $generated@@264) (=> (= (ControlFlow 0 11) 10) $generated@@263)))))
(let (($generated@@267  (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (or (= $generated@@241 ($generated@@81 0.0)) (= $generated@@241 ($generated@@81 1.0))) (= $generated@@241 ($generated@@81 3.0)))) (=> (or (or (= $generated@@241 ($generated@@81 0.0)) (= $generated@@241 ($generated@@81 1.0))) (= $generated@@241 ($generated@@81 3.0))) (and (=> (= (ControlFlow 0 13) 11) $generated@@266) (=> (= (ControlFlow 0 13) 12) $generated@@265))))))
(let (($generated@@268  (=> (and (or (= $generated@@241 ($generated@@81 0.0)) (= $generated@@241 ($generated@@81 1.0))) (= (ControlFlow 0 16) 13)) $generated@@267)))
(let (($generated@@269  (=> (and (not (or (= $generated@@241 ($generated@@81 0.0)) (= $generated@@241 ($generated@@81 1.0)))) (= (ControlFlow 0 15) 13)) $generated@@267)))
(let (($generated@@270  (=> (= $generated@@241 ($generated@@81 0.0)) (and (=> (= (ControlFlow 0 18) 15) $generated@@269) (=> (= (ControlFlow 0 18) 16) $generated@@268)))))
(let (($generated@@271  (=> (or (not (= $generated@@241 ($generated@@81 0.0))) (not true)) (and (=> (= (ControlFlow 0 17) 15) $generated@@269) (=> (= (ControlFlow 0 17) 16) $generated@@268)))))
(let (($generated@@272  (=> (and (= $generated@@242 ($generated@@103 $generated@@243)) (= $generated@@244 $generated@@243)) (=> (and (and ($generated@@50 $generated@@18 ($generated@@22 $generated@@244) $generated@@0) (= $generated@@245 $generated@@244)) (and (= $generated@@246 ($generated@@79 2)) (= $generated@@241 $generated@@247))) (and (=> (= (ControlFlow 0 22) 17) $generated@@271) (=> (= (ControlFlow 0 22) 18) $generated@@270))))))
(let (($generated@@273  (=> (or (not (= $generated@@242 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 24) 22) $generated@@272) (=> (= (ControlFlow 0 24) 23) $generated@@258)))))
(let (($generated@@274  (=> (= $generated@@242 $generated@@43) (=> (and (= $generated@@248 ($generated@@81 1.0)) (= $generated@@241 $generated@@248)) (and (=> (= (ControlFlow 0 21) 17) $generated@@271) (=> (= (ControlFlow 0 21) 18) $generated@@270))))))
(let (($generated@@275  (=> (= $generated@@240 ($generated@@98 ($generated@@94 $generated@@38 $generated@@242))) (=> (and ($generated@@50 $generated@@38 $generated@@242 $generated@@51) ($generated@@44 $generated@@38 $generated@@242 $generated@@51 $generated@@249)) (and (=> (= (ControlFlow 0 25) 21) $generated@@274) (=> (= (ControlFlow 0 25) 24) $generated@@273))))))
(let (($generated@@276  (=> (= $generated@@240 ($generated@@34 $generated@@250)) (=> (and ($generated@@50 $generated@@125 $generated@@250 ($generated@@127 $generated)) ($generated@@44 $generated@@125 $generated@@250 ($generated@@127 $generated) $generated@@249)) (=> (and (and (and ($generated@@50 $generated@@125 $generated@@251 ($generated@@127 $generated)) ($generated@@44 $generated@@125 $generated@@251 ($generated@@127 $generated) $generated@@249)) (= $generated@@252 $generated@@250)) (and (and ($generated@@50 $generated@@125 $generated@@252 ($generated@@127 $generated)) (= $generated@@251 $generated@@252)) (and (= $generated@@253 ($generated@@81 3.0)) (= $generated@@241 $generated@@253)))) (and (=> (= (ControlFlow 0 19) 17) $generated@@271) (=> (= (ControlFlow 0 19) 18) $generated@@270)))))))
(let (($generated@@277 true))
(let (($generated@@278  (=> (or (not (= $generated@@240 ($generated@@98 ($generated@@94 $generated@@38 $generated@@242)))) (not true)) (and (=> (= (ControlFlow 0 20) 19) $generated@@276) (=> (= (ControlFlow 0 20) 1) $generated@@277)))))
(let (($generated@@279  (=> (and (= $generated@@254 ($generated@@174 $generated@@52 $generated@@249 $generated@@4 false)) (= $generated@@247 ($generated@@81 0.0))) (and (=> (= (ControlFlow 0 26) 25) $generated@@275) (=> (= (ControlFlow 0 26) 20) $generated@@278)))))
(let (($generated@@280  (=> (and (and ($generated@@119 $generated@@249) ($generated@@255 $generated@@249)) (and (or (not (= $generated@@256 $generated@@52)) (not true)) (and ($generated@@50 $generated@@45 $generated@@256 $generated@@46) ($generated@@44 $generated@@45 $generated@@256 $generated@@46 $generated@@249)))) (=> (and (and (and ($generated@@50 $generated@@38 $generated@@240 ($generated@@111 $generated@@51)) ($generated@@44 $generated@@38 $generated@@240 ($generated@@111 $generated@@51) $generated@@249)) ($generated@@123 $generated@@240)) (and (= 1 $generated@@257) (= (ControlFlow 0 27) 26))) $generated@@279))))
$generated@@280))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
