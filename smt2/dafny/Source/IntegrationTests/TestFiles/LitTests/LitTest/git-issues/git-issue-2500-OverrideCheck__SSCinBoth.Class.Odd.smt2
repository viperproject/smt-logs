(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U Int) Bool)
(declare-fun $generated@@24 (T@U Int) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (Int) Int)
(declare-fun $generated@@30 (Int Int) Int)
(declare-fun $generated@@31 (T@U T@U Int) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@37 (T@U Int) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@116 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@117 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@6 $generated@@27) 3))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 Int) ) (!  (=> (or ($generated@@24 $generated@@35 $generated@@36) (and (< 0 $generated@@22) (and (and (or (not (= $generated@@35 $generated@@25)) (not true)) ($generated@@26 $generated@@27 $generated@@35 $generated@@28)) (<= ($generated@@29 0) $generated@@36)))) (or (= $generated@@36 ($generated@@29 0)) (= (= ($generated@@30 $generated@@36 ($generated@@29 2)) ($generated@@29 0)) ($generated@@31 ($generated@@32 $generated@@33) $generated@@35 (- $generated@@36 1)))))
 :pattern ( ($generated@@23 $generated@@34 $generated@@35 $generated@@36))
))))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 Int) ) (!  (=> (or ($generated@@37 $generated@@39 $generated@@40) (and (< 0 $generated@@22) (and (and (or (not (= $generated@@39 $generated@@25)) (not true)) ($generated@@26 $generated@@27 $generated@@39 $generated@@28)) (<= ($generated@@29 0) $generated@@40)))) (or (= $generated@@40 ($generated@@29 0)) (= (= ($generated@@30 $generated@@40 ($generated@@29 2)) ($generated@@29 1)) ($generated@@23 ($generated@@32 $generated@@33) $generated@@39 (- $generated@@40 1)))))
 :pattern ( ($generated@@31 $generated@@38 $generated@@39 $generated@@40))
))))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 Int) ) (!  (=> (or ($generated@@24 $generated@@42 ($generated@@29 $generated@@43)) (and (< 0 $generated@@22) (and (and (or (not (= $generated@@42 $generated@@25)) (not true)) ($generated@@26 $generated@@27 $generated@@42 $generated@@28)) (<= ($generated@@29 0) $generated@@43)))) (and (=> (or (not (= ($generated@@29 $generated@@43) ($generated@@29 0))) (not true)) ($generated@@37 $generated@@42 ($generated@@29 (- $generated@@43 1)))) (= ($generated@@23 ($generated@@32 $generated@@41) $generated@@42 ($generated@@29 $generated@@43))  (or (= ($generated@@29 $generated@@43) ($generated@@29 0)) ($generated@@31 ($generated@@32 $generated@@41) $generated@@42 ($generated@@29 (- $generated@@43 1)))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@32 $generated@@41) $generated@@42 ($generated@@29 $generated@@43)))
))))
(assert ($generated@@44 $generated@@45))
(assert (forall (($generated@@47 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@47 $generated@@45)  (or (= $generated@@47 $generated@@25) (= ($generated@@46 $generated@@47) $generated@@45)))
 :pattern ( ($generated@@26 $generated@@27 $generated@@47 $generated@@45))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 Int) ) (!  (=> (or ($generated@@37 $generated@@50 ($generated@@29 $generated@@51)) (and (< 0 $generated@@22) (and (and (or (not (= $generated@@50 $generated@@25)) (not true)) ($generated@@26 $generated@@27 $generated@@50 $generated@@28)) (<= ($generated@@29 0) $generated@@51)))) (and (=> ($generated@@11 ($generated@@48 $generated@@7 ($generated@@10  (or (not (= $generated@@51 0)) (not true))))) ($generated@@24 $generated@@50 ($generated@@29 (- $generated@@51 1)))) (= ($generated@@31 ($generated@@32 $generated@@49) $generated@@50 ($generated@@29 $generated@@51))  (and (or (not (= $generated@@51 0)) (not true)) ($generated@@23 ($generated@@32 $generated@@49) $generated@@50 ($generated@@29 (- $generated@@51 1)))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@32 $generated@@49) $generated@@50 ($generated@@29 $generated@@51)))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@52 $generated@@27 $generated@@55 $generated@@53 $generated@@56) ($generated@@52 $generated@@27 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@52 $generated@@27 $generated@@55 $generated@@53 $generated@@56))
 :pattern ( ($generated@@52 $generated@@27 $generated@@55 $generated@@54 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@52 $generated@@27 $generated@@57 $generated@@28 $generated@@58) ($generated@@52 $generated@@27 $generated@@57 $generated@@45 $generated@@58))
 :pattern ( ($generated@@52 $generated@@27 $generated@@57 $generated@@28 $generated@@58))
 :pattern ( ($generated@@52 $generated@@27 $generated@@57 $generated@@45 $generated@@58))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@60 $generated@@67 $generated@@68 ($generated@@64 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@71) $generated@@69)
 :weight 0
)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@76 $generated@@77) (= ($generated@@60 $generated@@72 $generated@@73 ($generated@@64 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@77) ($generated@@60 $generated@@72 $generated@@73 $generated@@75 $generated@@77)))
 :weight 0
))) (= ($generated@@6 $generated@@61) 4)) (= ($generated@@6 $generated@@62) 5)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (= ($generated@@6 ($generated@@63 $generated@@78 $generated@@79)) 6))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@65 ($generated@@63 $generated@@80 $generated@@81)) $generated@@80)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@66 ($generated@@63 $generated@@82 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@63 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@52 $generated@@27 $generated@@84 $generated@@54 $generated@@85)  (or (= $generated@@84 $generated@@25) ($generated@@11 ($generated@@59 $generated@@7 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@27 ($generated@@63 $generated@@61 $generated@@62) $generated@@85 $generated@@84) $generated)))))
 :pattern ( ($generated@@52 $generated@@27 $generated@@84 $generated@@54 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@52 $generated@@27 $generated@@86 $generated@@45 $generated@@87)  (or (= $generated@@86 $generated@@25) ($generated@@11 ($generated@@59 $generated@@7 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@27 ($generated@@63 $generated@@61 $generated@@62) $generated@@87 $generated@@86) $generated)))))
 :pattern ( ($generated@@52 $generated@@27 $generated@@86 $generated@@45 $generated@@87))
)))
(assert (forall (($generated@@88 Int) ) (! (= ($generated@@29 $generated@@88) $generated@@88)
 :pattern ( ($generated@@29 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@48 $generated@@90 $generated@@89) $generated@@89)
 :pattern ( ($generated@@48 $generated@@90 $generated@@89))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 Int) ) (!  (=> (or ($generated@@24 $generated@@92 $generated@@93) (and (< 0 $generated@@22) (and (and (or (not (= $generated@@92 $generated@@25)) (not true)) ($generated@@26 $generated@@27 $generated@@92 $generated@@28)) (<= ($generated@@29 0) $generated@@93)))) (and (=> (or (not (= $generated@@93 ($generated@@29 0))) (not true)) ($generated@@37 $generated@@92 (- $generated@@93 1))) (= ($generated@@23 ($generated@@32 $generated@@91) $generated@@92 $generated@@93)  (or (= $generated@@93 ($generated@@29 0)) ($generated@@31 $generated@@91 $generated@@92 (- $generated@@93 1))))))
 :pattern ( ($generated@@23 ($generated@@32 $generated@@91) $generated@@92 $generated@@93))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 ($generated@@59 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@59 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 Int) ) (! (= ($generated@@23 ($generated@@32 $generated@@97) $generated@@98 $generated@@99) ($generated@@23 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@23 ($generated@@32 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 Int) ) (! (= ($generated@@31 ($generated@@32 $generated@@100) $generated@@101 $generated@@102) ($generated@@31 $generated@@100 $generated@@101 $generated@@102))
 :pattern ( ($generated@@31 ($generated@@32 $generated@@100) $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@103 $generated@@53)  (and ($generated@@26 $generated@@27 $generated@@103 $generated@@54) (or (not (= $generated@@103 $generated@@25)) (not true))))
 :pattern ( ($generated@@26 $generated@@27 $generated@@103 $generated@@53))
 :pattern ( ($generated@@26 $generated@@27 $generated@@103 $generated@@54))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@104 $generated@@28)  (and ($generated@@26 $generated@@27 $generated@@104 $generated@@45) (or (not (= $generated@@104 $generated@@25)) (not true))))
 :pattern ( ($generated@@26 $generated@@27 $generated@@104 $generated@@28))
 :pattern ( ($generated@@26 $generated@@27 $generated@@104 $generated@@45))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@52 $generated@@27 $generated@@105 $generated@@45 $generated@@106) ($generated@@52 $generated@@27 $generated@@105 $generated@@54 $generated@@106))
 :pattern ( ($generated@@52 $generated@@27 $generated@@105 $generated@@45 $generated@@106))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 Int) ) (!  (=> (or ($generated@@24 ($generated@@48 $generated@@27 $generated@@108) ($generated@@29 $generated@@109)) (and (< 0 $generated@@22) (and (and (or (not (= $generated@@108 $generated@@25)) (not true)) ($generated@@26 $generated@@27 $generated@@108 $generated@@28)) (<= ($generated@@29 0) $generated@@109)))) (and (=> (or (not (= ($generated@@29 $generated@@109) ($generated@@29 0))) (not true)) ($generated@@37 ($generated@@48 $generated@@27 $generated@@108) ($generated@@29 (- $generated@@109 1)))) (= ($generated@@23 ($generated@@32 $generated@@107) ($generated@@48 $generated@@27 $generated@@108) ($generated@@29 $generated@@109))  (or (= ($generated@@29 $generated@@109) ($generated@@29 0)) ($generated@@31 ($generated@@32 $generated@@107) ($generated@@48 $generated@@27 $generated@@108) ($generated@@29 (- $generated@@109 1)))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@32 $generated@@107) ($generated@@48 $generated@@27 $generated@@108) ($generated@@29 $generated@@109)))
))))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@59 $generated@@111 ($generated@@94 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@94 $generated@@111 $generated@@110))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 Int) ) (!  (=> (or ($generated@@37 $generated@@113 $generated@@114) (and (< 0 $generated@@22) (and (and (or (not (= $generated@@113 $generated@@25)) (not true)) ($generated@@26 $generated@@27 $generated@@113 $generated@@28)) (<= ($generated@@29 0) $generated@@114)))) (and (=> (or (not (= $generated@@114 0)) (not true)) ($generated@@24 $generated@@113 (- $generated@@114 1))) (= ($generated@@31 ($generated@@32 $generated@@112) $generated@@113 $generated@@114)  (and (or (not (= $generated@@114 0)) (not true)) ($generated@@23 $generated@@112 $generated@@113 (- $generated@@114 1))))))
 :pattern ( ($generated@@31 ($generated@@32 $generated@@112) $generated@@113 $generated@@114))
))))
(assert  (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@115 $generated@@118 $generated@@119 $generated@@120 ($generated@@117 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@123 $generated@@124) $generated@@121)
 :weight 0
)) (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@115 $generated@@125 $generated@@126 $generated@@127 ($generated@@117 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@115 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@115 $generated@@134 $generated@@135 $generated@@136 ($generated@@117 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@115 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Bool) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@11 ($generated@@115 $generated@@27 $generated@@61 $generated@@7 ($generated@@116 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))  (=> (and (or (not (= $generated@@147 $generated@@143)) (not true)) ($generated@@11 ($generated@@59 $generated@@7 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@27 ($generated@@63 $generated@@61 $generated@@62) $generated@@144 $generated@@147) $generated@@145)))) $generated@@146))
 :pattern ( ($generated@@115 $generated@@27 $generated@@61 $generated@@7 ($generated@@116 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 Int) ($generated@@150 Int) ) (! (= ($generated@@30 $generated@@149 $generated@@150) (mod $generated@@149 $generated@@150))
 :pattern ( ($generated@@30 $generated@@149 $generated@@150))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Int) ) (!  (=> (or ($generated@@37 ($generated@@48 $generated@@27 $generated@@152) ($generated@@29 $generated@@153)) (and (< 0 $generated@@22) (and (and (or (not (= $generated@@152 $generated@@25)) (not true)) ($generated@@26 $generated@@27 $generated@@152 $generated@@28)) (<= ($generated@@29 0) $generated@@153)))) (and (=> ($generated@@11 ($generated@@48 $generated@@7 ($generated@@10  (or (not (= $generated@@153 0)) (not true))))) ($generated@@24 ($generated@@48 $generated@@27 $generated@@152) ($generated@@29 (- $generated@@153 1)))) (= ($generated@@31 ($generated@@32 $generated@@151) ($generated@@48 $generated@@27 $generated@@152) ($generated@@29 $generated@@153)) ($generated@@11 ($generated@@48 $generated@@7 ($generated@@10  (and (or (not (= $generated@@153 0)) (not true)) ($generated@@23 ($generated@@32 $generated@@151) ($generated@@48 $generated@@27 $generated@@152) ($generated@@29 (- $generated@@153 1))))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@32 $generated@@151) ($generated@@48 $generated@@27 $generated@@152) ($generated@@29 $generated@@153)))
))))
(assert (forall (($generated@@154 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@154 $generated@@45) ($generated@@26 $generated@@27 $generated@@154 $generated@@54))
 :pattern ( ($generated@@26 $generated@@27 $generated@@154 $generated@@45))
)))
(assert (= ($generated@@155 $generated@@54) $generated@@0))
(assert (= ($generated@@156 $generated@@54) $generated@@4))
(assert (= ($generated@@155 $generated@@53) $generated@@1))
(assert (= ($generated@@156 $generated@@53) $generated@@4))
(assert (= ($generated@@155 $generated@@45) $generated@@2))
(assert (= ($generated@@156 $generated@@45) $generated@@5))
(assert (= ($generated@@155 $generated@@28) $generated@@3))
(assert (= ($generated@@156 $generated@@28) $generated@@5))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@157 $generated@@54)  (or (= $generated@@157 $generated@@25) ($generated@@44 ($generated@@46 $generated@@157))))
 :pattern ( ($generated@@26 $generated@@27 $generated@@157 $generated@@54))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@94 $generated@@8 ($generated@@12 ($generated@@29 $generated@@158))) ($generated@@48 $generated@@62 ($generated@@94 $generated@@8 ($generated@@12 $generated@@158))))
 :pattern ( ($generated@@94 $generated@@8 ($generated@@12 ($generated@@29 $generated@@158))))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@94 $generated@@160 ($generated@@48 $generated@@160 $generated@@159)) ($generated@@48 $generated@@62 ($generated@@94 $generated@@160 $generated@@159)))
 :pattern ( ($generated@@94 $generated@@160 ($generated@@48 $generated@@160 $generated@@159)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@167  (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= $generated@@161 $generated@@161)) (=> (<= $generated@@161 $generated@@161) (=> (= $generated@@162 ($generated@@116 $generated@@25 $generated@@163 $generated false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@168 T@U) ($generated@@169 T@U) ) true)) (=> (forall (($generated@@170 T@U) ($generated@@171 T@U) ) true) (=> (and (or (= $generated@@161 ($generated@@29 0)) (= (= ($generated@@30 $generated@@161 ($generated@@29 2)) ($generated@@29 1)) ($generated@@23 ($generated@@32 $generated@@33) $generated@@164 (- $generated@@161 1)))) (= (ControlFlow 0 2) (- 0 1))) (or (= $generated@@161 ($generated@@29 0)) (= (= ($generated@@30 $generated@@161 ($generated@@29 2)) ($generated@@29 1)) ($generated@@23 ($generated@@32 ($generated@@32 $generated@@33)) $generated@@164 (- $generated@@161 1))))))))))))
(let (($generated@@172  (=> (and ($generated@@165 $generated@@163) ($generated@@166 $generated@@163)) (=> (and (and (and (or (not (= $generated@@164 $generated@@25)) (not true)) (and ($generated@@26 $generated@@27 $generated@@164 $generated@@28) ($generated@@52 $generated@@27 $generated@@164 $generated@@28 $generated@@163))) (<= ($generated@@29 0) $generated@@161)) (and (= 0 $generated@@22) (= (ControlFlow 0 5) 2))) $generated@@167))))
$generated@@172)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
