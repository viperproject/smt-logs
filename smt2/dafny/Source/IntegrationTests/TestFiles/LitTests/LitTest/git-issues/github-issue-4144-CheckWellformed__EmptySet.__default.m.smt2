(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@T T@T) T@T)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@65 () Int)
(declare-fun $generated@@66 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@69 (T@U T@U Int) Bool)
(declare-fun $generated@@70 (T@T T@U T@U) Bool)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@73 (Int) Int)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@109 (Bool) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (! ($generated@@25 $generated@@10 $generated@@27 $generated@@26 $generated@@28)
 :pattern ( ($generated@@25 $generated@@10 $generated@@27 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ) (!  (not ($generated@@29 $generated@@30 $generated@@31))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31))
)))
(assert (= ($generated@@8 $generated@@32) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@25 $generated@@32 $generated@@35 $generated@@33 $generated@@36) ($generated@@25 $generated@@32 $generated@@35 $generated@@34 $generated@@36))
 :pattern ( ($generated@@25 $generated@@32 $generated@@35 $generated@@33 $generated@@36))
 :pattern ( ($generated@@25 $generated@@32 $generated@@35 $generated@@34 $generated@@36))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@39 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@39 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@39 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@8 $generated@@40) 4)) (= ($generated@@8 $generated@@41) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@8 ($generated@@42 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@42 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@42 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@42 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@42 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@25 $generated@@32 $generated@@63 $generated@@34 $generated@@64)  (or (= $generated@@63 $generated@@37) ($generated@@13 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@32 ($generated@@42 $generated@@40 $generated@@41) $generated@@64 $generated@@63) $generated@@2)))))
 :pattern ( ($generated@@25 $generated@@32 $generated@@63 $generated@@34 $generated@@64))
)))
(assert (= ($generated@@8 $generated@@71) 7))
(assert  (=> (<= 0 $generated@@65) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 Int) ) (!  (=> (or ($generated@@69 $generated@@78 $generated@@79 $generated@@80) (and (< 0 $generated@@65) (and (and ($generated@@68 $generated@@78) ($generated@@70 $generated@@71 $generated@@79 ($generated@@72 $generated@@34))) (<= ($generated@@73 0) $generated@@80)))) (and (=> (not ($generated@@74 $generated@@79 $generated@@30)) ($generated@@75 $generated@@78)) (= ($generated@@66 ($generated@@67 $generated@@77) $generated@@78 $generated@@79 $generated@@80) (ite ($generated@@74 $generated@@79 $generated@@30) true ($generated@@76 $generated@@77 $generated@@78)))))
 :pattern ( ($generated@@66 ($generated@@67 $generated@@77) $generated@@78 $generated@@79 $generated@@80) ($generated@@68 $generated@@78))
))))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@73 $generated@@81) $generated@@81)
 :pattern ( ($generated@@73 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@85 $generated@@86 $generated@@87) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@29 $generated@@86 $generated@@88) ($generated@@29 $generated@@87 $generated@@88))
 :pattern ( ($generated@@29 $generated@@86 $generated@@88))
 :pattern ( ($generated@@29 $generated@@87 $generated@@88))
)))
 :pattern ( ($generated@@85 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@38 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@38 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@29 ($generated@@92 $generated@@93) $generated@@94) ($generated@@13 ($generated@@39 $generated@@41 $generated@@9 $generated@@93 $generated@@94)))
 :pattern ( ($generated@@29 ($generated@@92 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@70 $generated@@71 $generated@@96 ($generated@@72 $generated@@97)) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@29 $generated@@96 $generated@@98) ($generated@@95 $generated@@98 $generated@@97))
 :pattern ( ($generated@@29 $generated@@96 $generated@@98))
)))
 :pattern ( ($generated@@70 $generated@@71 $generated@@96 ($generated@@72 $generated@@97)))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@70 $generated@@10 $generated@@99 $generated@@26) (<= ($generated@@73 0) ($generated@@15 $generated@@99)))
 :pattern ( ($generated@@70 $generated@@10 $generated@@99 $generated@@26))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@100 ($generated@@89 $generated@@104 $generated@@101) $generated@@102 $generated@@103) ($generated@@25 $generated@@104 $generated@@101 $generated@@102 $generated@@103))
 :pattern ( ($generated@@100 ($generated@@89 $generated@@104 $generated@@101) $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@95 $generated@@105 $generated@@26) (and (= ($generated@@89 $generated@@10 ($generated@@38 $generated@@10 $generated@@105)) $generated@@105) ($generated@@70 $generated@@10 ($generated@@38 $generated@@10 $generated@@105) $generated@@26)))
 :pattern ( ($generated@@95 $generated@@105 $generated@@26))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@95 $generated@@106 $generated@@34) (and (= ($generated@@89 $generated@@32 ($generated@@38 $generated@@32 $generated@@106)) $generated@@106) ($generated@@70 $generated@@32 ($generated@@38 $generated@@32 $generated@@106) $generated@@34)))
 :pattern ( ($generated@@95 $generated@@106 $generated@@34))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@95 $generated@@107 $generated@@33) (and (= ($generated@@89 $generated@@32 ($generated@@38 $generated@@32 $generated@@107)) $generated@@107) ($generated@@70 $generated@@32 ($generated@@38 $generated@@32 $generated@@107) $generated@@33)))
 :pattern ( ($generated@@95 $generated@@107 $generated@@33))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@70 $generated@@32 $generated@@108 $generated@@33)  (and ($generated@@70 $generated@@32 $generated@@108 $generated@@34) (or (not (= $generated@@108 $generated@@37)) (not true))))
 :pattern ( ($generated@@70 $generated@@32 $generated@@108 $generated@@33))
 :pattern ( ($generated@@70 $generated@@32 $generated@@108 $generated@@34))
)))
(assert (forall (($generated@@110 Bool) ($generated@@111 T@U) ) (! (= ($generated@@13 ($generated@@39 $generated@@41 $generated@@9 ($generated@@109 $generated@@110) $generated@@111)) $generated@@110)
 :pattern ( ($generated@@39 $generated@@41 $generated@@9 ($generated@@109 $generated@@110) $generated@@111))
)))
(assert  (=> (<= 0 $generated@@65) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@75 $generated@@113) (and (< 0 $generated@@65) ($generated@@68 $generated@@113))) (and ($generated@@69 $generated@@113 ($generated@@82 $generated@@71 $generated@@30) ($generated@@73 0)) (= ($generated@@76 ($generated@@67 $generated@@112) $generated@@113) ($generated@@66 $generated@@112 $generated@@113 ($generated@@82 $generated@@71 $generated@@30) ($generated@@73 0)))))
 :pattern ( ($generated@@76 ($generated@@67 $generated@@112) $generated@@113) ($generated@@68 $generated@@113))
))))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> ($generated@@74 $generated@@114 $generated@@115) (= $generated@@114 $generated@@115))
 :pattern ( ($generated@@74 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@95 $generated@@116 $generated) (and (= ($generated@@89 $generated@@9 ($generated@@38 $generated@@9 $generated@@116)) $generated@@116) ($generated@@70 $generated@@9 ($generated@@38 $generated@@9 $generated@@116) $generated)))
 :pattern ( ($generated@@95 $generated@@116 $generated))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@76 ($generated@@67 $generated@@117) $generated@@118) ($generated@@76 $generated@@117 $generated@@118))
 :pattern ( ($generated@@76 ($generated@@67 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@95 ($generated@@89 $generated@@121 $generated@@119) $generated@@120) ($generated@@70 $generated@@121 $generated@@119 $generated@@120))
 :pattern ( ($generated@@95 ($generated@@89 $generated@@121 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 Int) ) (! (= ($generated@@66 ($generated@@67 $generated@@122) $generated@@123 $generated@@124 $generated@@125) ($generated@@66 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
 :pattern ( ($generated@@66 ($generated@@67 $generated@@122) $generated@@123 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@25 $generated@@71 $generated@@126 ($generated@@72 $generated@@127) $generated@@128) (forall (($generated@@129 T@U) ) (!  (=> ($generated@@29 $generated@@126 $generated@@129) ($generated@@100 $generated@@129 $generated@@127 $generated@@128))
 :pattern ( ($generated@@29 $generated@@126 $generated@@129))
)))
 :pattern ( ($generated@@25 $generated@@71 $generated@@126 ($generated@@72 $generated@@127) $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (! ($generated@@70 $generated@@32 $generated@@130 $generated@@34)
 :pattern ( ($generated@@70 $generated@@32 $generated@@130 $generated@@34))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@72 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@72 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@24 ($generated@@72 $generated@@133)) $generated@@1)
 :pattern ( ($generated@@72 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@38 $generated@@135 ($generated@@89 $generated@@135 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@89 $generated@@135 $generated@@134))
)))
(assert  (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@136 $generated@@139 $generated@@140 $generated@@141 ($generated@@138 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@144 $generated@@145) $generated@@142)
 :weight 0
)) (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@136 $generated@@146 $generated@@147 $generated@@148 ($generated@@138 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@136 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@136 $generated@@155 $generated@@156 $generated@@157 ($generated@@138 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@136 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@13 ($generated@@136 $generated@@32 $generated@@40 $generated@@9 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@13 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@32 ($generated@@42 $generated@@40 $generated@@41) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@136 $generated@@32 $generated@@40 $generated@@9 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@95 $generated@@170 ($generated@@72 $generated@@171)) (and (= ($generated@@89 $generated@@71 ($generated@@38 $generated@@71 $generated@@170)) $generated@@170) ($generated@@70 $generated@@71 ($generated@@38 $generated@@71 $generated@@170) ($generated@@72 $generated@@171))))
 :pattern ( ($generated@@95 $generated@@170 ($generated@@72 $generated@@171)))
)))
(assert (= ($generated@@24 $generated@@26) $generated@@3))
(assert (= ($generated@@172 $generated@@26) $generated@@6))
(assert (= ($generated@@24 $generated@@34) $generated@@4))
(assert (= ($generated@@172 $generated@@34) $generated@@7))
(assert (= ($generated@@24 $generated@@33) $generated@@5))
(assert (= ($generated@@172 $generated@@33) $generated@@7))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@74 $generated@@173 $generated@@174) (forall (($generated@@175 T@U) ) (! (= ($generated@@29 $generated@@173 $generated@@175) ($generated@@29 $generated@@174 $generated@@175))
 :pattern ( ($generated@@29 $generated@@173 $generated@@175))
 :pattern ( ($generated@@29 $generated@@174 $generated@@175))
)))
 :pattern ( ($generated@@74 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@176 Int) ) (! (= ($generated@@89 $generated@@10 ($generated@@14 ($generated@@73 $generated@@176))) ($generated@@82 $generated@@41 ($generated@@89 $generated@@10 ($generated@@14 $generated@@176))))
 :pattern ( ($generated@@89 $generated@@10 ($generated@@14 ($generated@@73 $generated@@176))))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@89 $generated@@178 ($generated@@82 $generated@@178 $generated@@177)) ($generated@@82 $generated@@41 ($generated@@89 $generated@@178 $generated@@177)))
 :pattern ( ($generated@@89 $generated@@178 ($generated@@82 $generated@@178 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! ($generated@@25 $generated@@9 $generated@@180 $generated $generated@@179)
 :pattern ( ($generated@@25 $generated@@9 $generated@@180 $generated $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (! ($generated@@70 $generated@@9 $generated@@181 $generated)
 :pattern ( ($generated@@70 $generated@@9 $generated@@181 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@188 true))
(let (($generated@@189  (=> (and (= $generated@@182 ($generated@@82 $generated@@71 $generated@@30)) ($generated@@25 $generated@@71 $generated@@182 ($generated@@72 $generated@@34) $generated@@183)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@70 $generated@@10 ($generated@@14 ($generated@@73 0)) $generated@@26)) (=> ($generated@@70 $generated@@10 ($generated@@14 ($generated@@73 0)) $generated@@26) (=> (= $generated@@184 ($generated@@73 0)) (=> (and ($generated@@25 $generated@@10 ($generated@@14 $generated@@184) $generated@@26 $generated@@183) (= (ControlFlow 0 3) (- 0 2))) ($generated@@85 $generated@@182 ($generated@@92 ($generated@@109 false))))))))))
(let (($generated@@190 true))
(let (($generated@@191  (and (=> (= (ControlFlow 0 7) 1) $generated@@190) (=> (= (ControlFlow 0 7) 3) $generated@@189))))
(let (($generated@@192  (=> (and ($generated@@70 $generated@@32 $generated@@185 $generated@@34) ($generated@@25 $generated@@32 $generated@@185 $generated@@34 $generated@@183)) (and (=> (= (ControlFlow 0 8) 6) $generated@@188) (=> (= (ControlFlow 0 8) 7) $generated@@191)))))
(let (($generated@@193  (=> (not (and ($generated@@70 $generated@@32 $generated@@185 $generated@@34) ($generated@@25 $generated@@32 $generated@@185 $generated@@34 $generated@@183))) (and (=> (= (ControlFlow 0 5) 1) $generated@@190) (=> (= (ControlFlow 0 5) 3) $generated@@189)))))
(let (($generated@@194  (=> (= $generated@@186 ($generated@@137 $generated@@37 $generated@@183 $generated@@2 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@192) (=> (= (ControlFlow 0 9) 5) $generated@@193)))))
(let (($generated@@195  (=> (and (and ($generated@@68 $generated@@183) ($generated@@187 $generated@@183)) (and (= 0 $generated@@65) (= (ControlFlow 0 10) 9))) $generated@@194)))
$generated@@195)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
