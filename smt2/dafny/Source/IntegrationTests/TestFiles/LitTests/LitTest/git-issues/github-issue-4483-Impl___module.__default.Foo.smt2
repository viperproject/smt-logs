(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@44 (Int) Int)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@U T@U) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@U T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@71 () Int)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@81 (T@U Int) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@114 (T@U) Int)
(declare-fun $generated@@115 (T@U) Int)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@T) T@T)
(declare-fun $generated@@133 (T@T) T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@211 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (! ($generated@@25 $generated@@10 $generated@@27 $generated@@26 $generated@@28)
 :pattern ( ($generated@@25 $generated@@10 $generated@@27 $generated@@26 $generated@@28))
)))
(assert (= ($generated@@8 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@35 ($generated@@32 $generated@@33 $generated@@34)) ($generated@@29 $generated@@35))
 :pattern ( ($generated@@29 $generated@@35) ($generated@@30 $generated@@31 $generated@@35 ($generated@@32 $generated@@33 $generated@@34)))
)))
(assert (= ($generated@@36 $generated@@37) 0))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@38 $generated@@42 $generated@@43) ($generated@@32 $generated@@40 $generated@@41))  (and ($generated@@39 $generated@@42 $generated@@40) ($generated@@39 $generated@@43 $generated@@41)))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@38 $generated@@42 $generated@@43) ($generated@@32 $generated@@40 $generated@@41)))
)))
(assert (forall (($generated@@45 Int) ) (! (= ($generated@@44 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@46 $generated@@48 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@48 $generated@@47))
)))
(assert (= ($generated@@8 $generated@@49) 4))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (and ($generated@@30 $generated@@49 $generated@@52 ($generated@@51 $generated@@54)) ($generated@@39 $generated@@53 $generated@@54)) ($generated@@30 $generated@@49 ($generated@@50 $generated@@52 $generated@@53) ($generated@@51 $generated@@54)))
 :pattern ( ($generated@@30 $generated@@49 ($generated@@50 $generated@@52 $generated@@53) ($generated@@51 $generated@@54)))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@55 $generated@@61) (= ($generated@@25 $generated@@31 ($generated@@38 $generated@@59 $generated@@60) ($generated@@32 $generated@@57 $generated@@58) $generated@@61)  (and ($generated@@56 $generated@@59 $generated@@57 $generated@@61) ($generated@@56 $generated@@60 $generated@@58 $generated@@61))))
 :pattern ( ($generated@@25 $generated@@31 ($generated@@38 $generated@@59 $generated@@60) ($generated@@32 $generated@@57 $generated@@58) $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@29 $generated@@63) (= ($generated@@62 $generated@@63) $generated@@3))
 :pattern ( ($generated@@29 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 ($generated@@64 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@64 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@29 $generated@@68) (exists (($generated@@69 T@U) ($generated@@70 T@U) ) (= $generated@@68 ($generated@@38 $generated@@69 $generated@@70))))
 :pattern ( ($generated@@29 $generated@@68))
)))
(assert  (=> (< 0 $generated@@71) (forall (($generated@@73 T@U) ) (!  (=> ($generated@@55 $generated@@73) ($generated@@25 $generated@@10 ($generated@@14 $generated@@72) $generated $generated@@73))
 :pattern ( ($generated@@25 $generated@@10 ($generated@@14 $generated@@72) $generated $generated@@73))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@36 ($generated@@50 $generated@@74 $generated@@75)) (+ 1 ($generated@@36 $generated@@74)))
 :pattern ( ($generated@@50 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@56 ($generated@@65 $generated@@79 $generated@@76) $generated@@77 $generated@@78) ($generated@@25 $generated@@79 $generated@@76 $generated@@77 $generated@@78))
 :pattern ( ($generated@@56 ($generated@@65 $generated@@79 $generated@@76) $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@39 $generated@@80 $generated@@26) (and (= ($generated@@65 $generated@@10 ($generated@@64 $generated@@10 $generated@@80)) $generated@@80) ($generated@@30 $generated@@10 ($generated@@64 $generated@@10 $generated@@80) $generated@@26)))
 :pattern ( ($generated@@39 $generated@@80 $generated@@26))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 Int) ($generated@@84 T@U) ) (!  (and (=> (= $generated@@83 ($generated@@36 $generated@@82)) (= ($generated@@81 ($generated@@50 $generated@@82 $generated@@84) $generated@@83) $generated@@84)) (=> (or (not (= $generated@@83 ($generated@@36 $generated@@82))) (not true)) (= ($generated@@81 ($generated@@50 $generated@@82 $generated@@84) $generated@@83) ($generated@@81 $generated@@82 $generated@@83))))
 :pattern ( ($generated@@81 ($generated@@50 $generated@@82 $generated@@84) $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@30 $generated@@10 $generated@@85 $generated@@26)  (and (<= ($generated@@44 0) ($generated@@15 $generated@@85)) (< ($generated@@15 $generated@@85) $generated@@72)))
 :pattern ( ($generated@@30 $generated@@10 $generated@@85 $generated@@26))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@39 $generated@@86 $generated) (and (= ($generated@@65 $generated@@10 ($generated@@64 $generated@@10 $generated@@86)) $generated@@86) ($generated@@30 $generated@@10 ($generated@@64 $generated@@10 $generated@@86) $generated)))
 :pattern ( ($generated@@39 $generated@@86 $generated))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@39 ($generated@@65 $generated@@89 $generated@@87) $generated@@88) ($generated@@30 $generated@@89 $generated@@87 $generated@@88))
 :pattern ( ($generated@@39 ($generated@@65 $generated@@89 $generated@@87) $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (! (<= 0 ($generated@@36 $generated@@90))
 :pattern ( ($generated@@36 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@62 ($generated@@38 $generated@@91 $generated@@92)) $generated@@3)
 :pattern ( ($generated@@38 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@93 ($generated@@32 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@32 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@96 ($generated@@32 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@32 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@99 ($generated@@38 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@38 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@102 ($generated@@38 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@38 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@25 $generated@@49 $generated@@105 ($generated@@51 $generated@@106) $generated@@107) (forall (($generated@@108 Int) ) (!  (=> (and (<= 0 $generated@@108) (< $generated@@108 ($generated@@36 $generated@@105))) ($generated@@56 ($generated@@81 $generated@@105 $generated@@108) $generated@@106 $generated@@107))
 :pattern ( ($generated@@81 $generated@@105 $generated@@108))
)))
 :pattern ( ($generated@@25 $generated@@49 $generated@@105 ($generated@@51 $generated@@106) $generated@@107))
)))
(assert  (=> (< 0 $generated@@71) ($generated@@30 $generated@@10 ($generated@@14 $generated@@72) $generated)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@109 ($generated@@51 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@51 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@24 ($generated@@51 $generated@@111)) $generated@@1)
 :pattern ( ($generated@@51 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@64 $generated@@113 ($generated@@65 $generated@@113 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@65 $generated@@113 $generated@@112))
)))
(assert (= $generated@@72 ($generated@@44 18446744073709551616)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (< ($generated@@114 $generated@@116) ($generated@@115 ($generated@@38 $generated@@116 $generated@@117)))
 :pattern ( ($generated@@38 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (< ($generated@@114 $generated@@119) ($generated@@115 ($generated@@38 $generated@@118 $generated@@119)))
 :pattern ( ($generated@@38 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@39 $generated@@122 ($generated@@32 $generated@@120 $generated@@121)) (and (= ($generated@@65 $generated@@31 ($generated@@64 $generated@@31 $generated@@122)) $generated@@122) ($generated@@30 $generated@@31 ($generated@@64 $generated@@31 $generated@@122) ($generated@@32 $generated@@120 $generated@@121))))
 :pattern ( ($generated@@39 $generated@@122 ($generated@@32 $generated@@120 $generated@@121)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@123 $generated@@134 $generated@@135 $generated@@136 ($generated@@130 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@139 $generated@@140) $generated@@137)
 :weight 0
)) (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@123 $generated@@141 $generated@@142 $generated@@143 ($generated@@130 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@123 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@123 $generated@@150 $generated@@151 $generated@@152 ($generated@@130 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))) (= ($generated@@8 $generated@@124) 5)) (= ($generated@@8 $generated@@125) 6)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@127 $generated@@159 $generated@@160 ($generated@@131 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@163) $generated@@161)
 :weight 0
))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@168 $generated@@169) (= ($generated@@127 $generated@@164 $generated@@165 ($generated@@131 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@166) $generated@@169) ($generated@@127 $generated@@164 $generated@@165 $generated@@167 $generated@@169)))
 :weight 0
))) (= ($generated@@8 $generated@@128) 7)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@8 ($generated@@129 $generated@@170 $generated@@171)) 8))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@132 ($generated@@129 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@129 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@133 ($generated@@129 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@129 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@13 ($generated@@123 $generated@@124 $generated@@125 $generated@@9 ($generated@@126 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (or (not (= $generated@@180 $generated@@176)) (not true)) ($generated@@13 ($generated@@64 $generated@@9 ($generated@@127 $generated@@125 $generated@@128 ($generated@@127 $generated@@124 ($generated@@129 $generated@@125 $generated@@128) $generated@@177 $generated@@180) $generated@@178)))) $generated@@179))
 :pattern ( ($generated@@123 $generated@@124 $generated@@125 $generated@@9 ($generated@@126 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (and (= ($generated@@182 ($generated@@50 $generated@@184 $generated@@185)) $generated@@184) (= ($generated@@183 ($generated@@50 $generated@@184 $generated@@185)) $generated@@185))
 :pattern ( ($generated@@50 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (and (= ($generated@@24 ($generated@@32 $generated@@187 $generated@@188)) $generated@@4) (= ($generated@@186 ($generated@@32 $generated@@187 $generated@@188)) $generated@@6))
 :pattern ( ($generated@@32 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@114 ($generated@@65 $generated@@31 $generated@@189)) ($generated@@115 $generated@@189))
 :pattern ( ($generated@@114 ($generated@@65 $generated@@31 $generated@@189)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@39 $generated@@190 ($generated@@51 $generated@@191)) (and (= ($generated@@65 $generated@@49 ($generated@@64 $generated@@49 $generated@@190)) $generated@@190) ($generated@@30 $generated@@49 ($generated@@64 $generated@@49 $generated@@190) ($generated@@51 $generated@@191))))
 :pattern ( ($generated@@39 $generated@@190 ($generated@@51 $generated@@191)))
)))
(assert (= ($generated@@24 $generated@@26) $generated@@5))
(assert (= ($generated@@186 $generated@@26) $generated@@7))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and ($generated@@55 $generated@@194) (and ($generated@@29 $generated@@192) (exists (($generated@@195 T@U) ) (! ($generated@@25 $generated@@31 $generated@@192 ($generated@@32 $generated@@193 $generated@@195) $generated@@194)
 :pattern ( ($generated@@25 $generated@@31 $generated@@192 ($generated@@32 $generated@@193 $generated@@195) $generated@@194))
)))) ($generated@@56 ($generated@@99 $generated@@192) $generated@@193 $generated@@194))
 :pattern ( ($generated@@56 ($generated@@99 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and ($generated@@55 $generated@@198) (and ($generated@@29 $generated@@196) (exists (($generated@@199 T@U) ) (! ($generated@@25 $generated@@31 $generated@@196 ($generated@@32 $generated@@199 $generated@@197) $generated@@198)
 :pattern ( ($generated@@25 $generated@@31 $generated@@196 ($generated@@32 $generated@@199 $generated@@197) $generated@@198))
)))) ($generated@@56 ($generated@@102 $generated@@196) $generated@@197 $generated@@198))
 :pattern ( ($generated@@56 ($generated@@102 $generated@@196) $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@38 ($generated@@46 $generated@@128 $generated@@200) ($generated@@46 $generated@@128 $generated@@201)) ($generated@@46 $generated@@31 ($generated@@38 $generated@@200 $generated@@201)))
 :pattern ( ($generated@@38 ($generated@@46 $generated@@128 $generated@@200) ($generated@@46 $generated@@128 $generated@@201)))
)))
(assert (forall (($generated@@202 Int) ) (! (= ($generated@@65 $generated@@10 ($generated@@14 ($generated@@44 $generated@@202))) ($generated@@46 $generated@@128 ($generated@@65 $generated@@10 ($generated@@14 $generated@@202))))
 :pattern ( ($generated@@65 $generated@@10 ($generated@@14 ($generated@@44 $generated@@202))))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@T) ) (! (= ($generated@@65 $generated@@204 ($generated@@46 $generated@@204 $generated@@203)) ($generated@@46 $generated@@128 ($generated@@65 $generated@@204 $generated@@203)))
 :pattern ( ($generated@@65 $generated@@204 ($generated@@46 $generated@@204 $generated@@203)))
)))
(assert (forall (($generated@@205 T@U) ) (!  (=> (= ($generated@@36 $generated@@205) 0) (= $generated@@205 $generated@@37))
 :pattern ( ($generated@@36 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! ($generated@@25 $generated@@10 $generated@@207 $generated $generated@@206)
 :pattern ( ($generated@@25 $generated@@10 $generated@@207 $generated $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@30 $generated@@49 $generated@@208 ($generated@@51 $generated@@209)) (forall (($generated@@210 Int) ) (!  (=> (and (<= 0 $generated@@210) (< $generated@@210 ($generated@@36 $generated@@208))) ($generated@@39 ($generated@@81 $generated@@208 $generated@@210) $generated@@209))
 :pattern ( ($generated@@81 $generated@@208 $generated@@210))
)))
 :pattern ( ($generated@@30 $generated@@49 $generated@@208 ($generated@@51 $generated@@209)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 Int) ) (!  (=> (and (<= 0 $generated@@213) (< $generated@@213 ($generated@@36 $generated@@212))) (< ($generated@@115 ($generated@@64 $generated@@31 ($generated@@81 $generated@@212 $generated@@213))) ($generated@@211 $generated@@212)))
 :pattern ( ($generated@@115 ($generated@@64 $generated@@31 ($generated@@81 $generated@@212 $generated@@213))))
)))
(assert (forall (($generated@@214 T@U) ) (! ($generated@@30 $generated@@10 $generated@@214 $generated)
 :pattern ( ($generated@@30 $generated@@10 $generated@@214 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () Int)
(declare-fun $generated@@220 () Int)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () Int)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@227  (=> (and (and (and (= $generated@@215 ($generated@@126 $generated@@216 $generated@@217 $generated@@2 false)) (= $generated@@218 ($generated@@46 $generated@@49 ($generated@@50 ($generated@@50 ($generated@@50 $generated@@37 ($generated@@65 $generated@@10 ($generated@@14 ($generated@@44 1)))) ($generated@@65 $generated@@10 ($generated@@14 ($generated@@44 2)))) ($generated@@65 $generated@@10 ($generated@@14 ($generated@@44 3))))))) (and (<= ($generated@@44 0) $generated@@219) (< $generated@@219 $generated@@72))) (and (and (<= ($generated@@44 0) $generated@@220) (< $generated@@220 $generated@@72)) (= $generated@@221 ($generated@@44 0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@44 0) $generated@@221) (< $generated@@221 $generated@@72))) (=> (and (<= ($generated@@44 0) $generated@@221) (< $generated@@221 $generated@@72)) (=> (= $generated@@222 ($generated@@36 $generated@@218)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@44 0) $generated@@222) (< $generated@@222 $generated@@72))) (=> (and (<= ($generated@@44 0) $generated@@222) (< $generated@@222 $generated@@72)) (=> (and (= $generated@@223 ($generated@@36 $generated@@218)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@44 0) $generated@@223) (< $generated@@223 $generated@@72)))))))))))
(let (($generated@@228  (=> (and (and ($generated@@55 $generated@@217) ($generated@@224 $generated@@217)) (and ($generated@@30 $generated@@31 $generated@@225 ($generated@@32 $generated@@26 $generated@@26)) ($generated@@25 $generated@@31 $generated@@225 ($generated@@32 $generated@@26 $generated@@26) $generated@@217))) (=> (and (and (and ($generated@@30 $generated@@49 $generated@@226 ($generated@@51 $generated)) ($generated@@25 $generated@@49 $generated@@226 ($generated@@51 $generated) $generated@@217)) true) (and (= 2 $generated@@71) (= (ControlFlow 0 5) 2))) $generated@@227))))
$generated@@228)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
