(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@T T@T) T@T)
(declare-fun $generated@@61 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@1) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@30 $generated@@1) $generated@@2))
(assert (= ($generated@@31 $generated@@32) $generated@@9))
(assert (= ($generated@@31 $generated@@33) $generated@@9))
(assert (= ($generated@@12 $generated@@35) 3))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@39 $generated@@36)  (or (= $generated@@39 $generated@@37) (= ($generated@@38 $generated@@39) $generated@@36)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@39 $generated@@36))
)))
(assert (forall (($generated@@40 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@40 $generated@@33)  (or (= $generated@@40 $generated@@37) (= ($generated@@38 $generated@@40) $generated@@33)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@40 $generated@@33))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@41 $generated@@35 $generated@@44 $generated@@42 $generated@@45) ($generated@@41 $generated@@35 $generated@@44 $generated@@43 $generated@@45))
 :pattern ( ($generated@@41 $generated@@35 $generated@@44 $generated@@42 $generated@@45))
 :pattern ( ($generated@@41 $generated@@35 $generated@@44 $generated@@43 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@41 $generated@@35 $generated@@47 $generated@@46 $generated@@48) ($generated@@41 $generated@@35 $generated@@47 $generated@@36 $generated@@48))
 :pattern ( ($generated@@41 $generated@@35 $generated@@47 $generated@@46 $generated@@48))
 :pattern ( ($generated@@41 $generated@@35 $generated@@47 $generated@@36 $generated@@48))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@41 $generated@@35 $generated@@49 $generated@@32 $generated@@50) ($generated@@41 $generated@@35 $generated@@49 $generated@@33 $generated@@50))
 :pattern ( ($generated@@41 $generated@@35 $generated@@49 $generated@@32 $generated@@50))
 :pattern ( ($generated@@41 $generated@@35 $generated@@49 $generated@@33 $generated@@50))
)))
(assert (= ($generated@@28 $generated@@51) 0))
(assert (= ($generated@@52 $generated@@53 $generated@@11) $generated@@51))
(assert  (not ($generated@@54 $generated@@51)))
(assert (= ($generated@@28 $generated@@55) 0))
(assert (= ($generated@@52 $generated@@6 $generated@@11) $generated@@55))
(assert  (not ($generated@@54 $generated@@55)))
(assert  (and (and (and (and (and (and (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@57 $generated@@64 $generated@@65 ($generated@@61 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@68) $generated@@66)
 :weight 0
)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (or (= $generated@@73 $generated@@74) (= ($generated@@57 $generated@@69 $generated@@70 ($generated@@61 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@74) ($generated@@57 $generated@@69 $generated@@70 $generated@@72 $generated@@74)))
 :weight 0
))) (= ($generated@@12 $generated@@58) 4)) (= ($generated@@12 $generated@@59) 5)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@12 ($generated@@60 $generated@@75 $generated@@76)) 6))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@62 ($generated@@60 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@60 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@63 ($generated@@60 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@60 $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@41 $generated@@35 $generated@@81 $generated@@43 $generated@@82)  (or (= $generated@@81 $generated@@37) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@82 $generated@@81) $generated@@1)))))
 :pattern ( ($generated@@41 $generated@@35 $generated@@81 $generated@@43 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@41 $generated@@35 $generated@@83 $generated@@36 $generated@@84)  (or (= $generated@@83 $generated@@37) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@84 $generated@@83) $generated@@1)))))
 :pattern ( ($generated@@41 $generated@@35 $generated@@83 $generated@@36 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@41 $generated@@35 $generated@@85 $generated@@33 $generated@@86)  (or (= $generated@@85 $generated@@37) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@86 $generated@@85) $generated@@1)))))
 :pattern ( ($generated@@41 $generated@@35 $generated@@85 $generated@@33 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@87 $generated@@88 $generated@@89) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@88 $generated@@90) $generated@@1))) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@89 $generated@@90) $generated@@1))))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@89 $generated@@90) $generated@@1))
)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 ($generated@@56 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@56 $generated@@93 $generated@@92))
)))
(assert ($generated@@54 $generated@@1))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and (and ($generated@@94 $generated@@95) (and (or (not (= $generated@@96 $generated@@37)) (not true)) (= ($generated@@38 $generated@@96) $generated@@36))) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@95 $generated@@96) $generated@@1)))) ($generated@@41 $generated@@14 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@95 $generated@@96) $generated@@55)) $generated $generated@@95))
 :pattern ( ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@95 $generated@@96) $generated@@55)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and (and ($generated@@94 $generated@@97) (and (or (not (= $generated@@98 $generated@@37)) (not true)) (= ($generated@@38 $generated@@98) $generated@@33))) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@97 $generated@@98) $generated@@1)))) ($generated@@41 $generated@@14 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@97 $generated@@98) $generated@@51)) $generated $generated@@97))
 :pattern ( ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@97 $generated@@98) $generated@@51)))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (!  (=> ($generated@@87 $generated@@99 $generated@@100) (=> ($generated@@41 $generated@@103 $generated@@101 $generated@@102 $generated@@99) ($generated@@41 $generated@@103 $generated@@101 $generated@@102 $generated@@100)))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100) ($generated@@41 $generated@@103 $generated@@101 $generated@@102 $generated@@99))
)))
(assert  (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@104 $generated@@107 $generated@@108 $generated@@109 ($generated@@106 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@112 $generated@@113) $generated@@110)
 :weight 0
)) (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@104 $generated@@114 $generated@@115 $generated@@116 ($generated@@106 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@104 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@104 $generated@@123 $generated@@124 $generated@@125 ($generated@@106 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@104 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@17 ($generated@@104 $generated@@35 $generated@@58 $generated@@13 ($generated@@105 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@136 $generated@@137))  (=> (and (or (not (= $generated@@136 $generated@@132)) (not true)) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@133 $generated@@136) $generated@@134)))) (= $generated@@136 $generated@@135)))
 :pattern ( ($generated@@104 $generated@@35 $generated@@58 $generated@@13 ($generated@@105 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@138 $generated@@42)  (and ($generated@@34 $generated@@35 $generated@@138 $generated@@43) (or (not (= $generated@@138 $generated@@37)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@138 $generated@@42))
 :pattern ( ($generated@@34 $generated@@35 $generated@@138 $generated@@43))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@139 $generated@@46)  (and ($generated@@34 $generated@@35 $generated@@139 $generated@@36) (or (not (= $generated@@139 $generated@@37)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@139 $generated@@46))
 :pattern ( ($generated@@34 $generated@@35 $generated@@139 $generated@@36))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@140 $generated@@32)  (and ($generated@@34 $generated@@35 $generated@@140 $generated@@33) (or (not (= $generated@@140 $generated@@37)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@140 $generated@@32))
 :pattern ( ($generated@@34 $generated@@35 $generated@@140 $generated@@33))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (or (not (= $generated@@141 $generated@@143)) (not true)) (=> (and ($generated@@87 $generated@@141 $generated@@142) ($generated@@87 $generated@@142 $generated@@143)) ($generated@@87 $generated@@141 $generated@@143)))
 :pattern ( ($generated@@87 $generated@@141 $generated@@142) ($generated@@87 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (and (= ($generated@@144 ($generated@@52 $generated@@145 $generated@@146)) $generated@@145) (= ($generated@@30 ($generated@@52 $generated@@145 $generated@@146)) $generated@@146))
 :pattern ( ($generated@@52 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (! ($generated@@34 $generated@@35 $generated@@147 $generated@@43)
 :pattern ( ($generated@@34 $generated@@35 $generated@@147 $generated@@43))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@56 $generated@@149 ($generated@@91 $generated@@149 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@91 $generated@@149 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@94 $generated@@150) (and (or (not (= $generated@@151 $generated@@37)) (not true)) (= ($generated@@38 $generated@@151) $generated@@36))) ($generated@@34 $generated@@14 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@150 $generated@@151) $generated@@55)) $generated))
 :pattern ( ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@150 $generated@@151) $generated@@55)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and ($generated@@94 $generated@@152) (and (or (not (= $generated@@153 $generated@@37)) (not true)) (= ($generated@@38 $generated@@153) $generated@@33))) ($generated@@34 $generated@@14 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@152 $generated@@153) $generated@@51)) $generated))
 :pattern ( ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@152 $generated@@153) $generated@@51)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@94 ($generated@@61 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@154 $generated@@155 ($generated@@61 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@154 $generated@@155) $generated@@156 $generated@@157))) ($generated@@87 $generated@@154 ($generated@@61 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@154 $generated@@155 ($generated@@61 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@154 $generated@@155) $generated@@156 $generated@@157))))
 :pattern ( ($generated@@61 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@154 $generated@@155 ($generated@@61 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@154 $generated@@155) $generated@@156 $generated@@157)))
)))
(assert (= ($generated@@29 $generated@@43) $generated@@3))
(assert (= ($generated@@31 $generated@@43) $generated@@8))
(assert (= ($generated@@29 $generated@@42) $generated@@4))
(assert (= ($generated@@31 $generated@@42) $generated@@8))
(assert (= ($generated@@29 $generated@@46) $generated@@5))
(assert (= ($generated@@31 $generated@@46) $generated@@10))
(assert (= ($generated@@29 $generated@@36) $generated@@7))
(assert (= ($generated@@31 $generated@@36) $generated@@10))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! ($generated@@41 $generated@@14 $generated@@159 $generated $generated@@158)
 :pattern ( ($generated@@41 $generated@@14 $generated@@159 $generated $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! ($generated@@34 $generated@@14 $generated@@160 $generated)
 :pattern ( ($generated@@34 $generated@@14 $generated@@160 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@171  (and (=> (= (ControlFlow 0 4) (- 0 10)) (or (not (= $generated@@161 $generated@@37)) (not true))) (=> (or (not (= $generated@@161 $generated@@37)) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 9)) ($generated@@17 ($generated@@104 $generated@@35 $generated@@58 $generated@@13 $generated@@162 $generated@@161 $generated@@51))) (=> ($generated@@17 ($generated@@104 $generated@@35 $generated@@58 $generated@@13 $generated@@162 $generated@@161 $generated@@51)) (and (=> (= (ControlFlow 0 4) (- 0 8)) (or (not (= $generated@@161 $generated@@37)) (not true))) (=> (or (not (= $generated@@161 $generated@@37)) (not true)) (=> (= $generated@@163 (+ ($generated@@19 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@164 $generated@@161) $generated@@51))) 1)) (=> (and (= $generated@@165 ($generated@@61 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@164 $generated@@161 ($generated@@61 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@164 $generated@@161) $generated@@51 ($generated@@91 $generated@@14 ($generated@@18 $generated@@163))))) ($generated@@94 $generated@@165)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (not (= $generated@@166 $generated@@37)) (not true))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (not (= $generated@@166 $generated@@37)) (not true))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@41 $generated@@35 $generated@@166 $generated@@46 $generated@@164)) (=> ($generated@@41 $generated@@35 $generated@@166 $generated@@46 $generated@@164) (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@19 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@165 $generated@@166) $generated@@55))) ($generated@@19 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@164 $generated@@166) $generated@@55)))))))))))))))))))
(let (($generated@@172  (=> (and (and (= $generated@@167 $generated@@166) ($generated@@34 $generated@@35 $generated@@167 $generated@@42)) (and (= $generated@@168 $generated@@167) (= (ControlFlow 0 2) (- 0 1)))) (or (not (= $generated@@161 (let (($generated@@173 $generated@@166))
$generated@@173))) (not true)))))
(let (($generated@@174  (=> (= $generated@@162 ($generated@@105 $generated@@37 $generated@@164 $generated@@1 $generated@@161)) (and (=> (= (ControlFlow 0 11) 2) $generated@@172) (=> (= (ControlFlow 0 11) 4) $generated@@171)))))
(let (($generated@@175  (=> (and (and (and ($generated@@94 $generated@@164) ($generated@@169 $generated@@164)) (and ($generated@@34 $generated@@35 $generated@@161 $generated@@32) ($generated@@41 $generated@@35 $generated@@161 $generated@@32 $generated@@164))) (and (and ($generated@@34 $generated@@35 $generated@@166 $generated@@46) ($generated@@41 $generated@@35 $generated@@166 $generated@@46 $generated@@164)) (and (= 2 $generated@@170) (= (ControlFlow 0 12) 11)))) $generated@@174)))
$generated@@175)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
