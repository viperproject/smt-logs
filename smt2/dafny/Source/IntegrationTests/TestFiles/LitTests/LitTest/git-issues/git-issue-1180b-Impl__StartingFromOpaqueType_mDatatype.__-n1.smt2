(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@31 () Int)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@71 (T@U Int) Int)
(declare-fun $generated@@72 (T@U Int) Bool)
(declare-fun $generated@@73 (Int) Int)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (Int) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@111 (T@U) Int)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@152 (Int Int) Int)
(declare-fun $generated@@157 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27)
 :pattern ( ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@29 $generated@@30))
 :pattern ( ($generated@@28 $generated@@30))
)))
(assert (= ($generated@@7 $generated@@33) 3))
(assert  (=> (< 0 $generated@@31) (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (and (and ($generated@@35 $generated@@37) ($generated@@36 $generated@@33 $generated@@38 $generated@@34)) ($generated@@24 $generated@@33 $generated@@38 $generated@@34 $generated@@37)) ($generated@@24 $generated@@9 ($generated@@13 ($generated@@32 $generated@@38)) $generated@@25 $generated@@37))
 :pattern ( ($generated@@32 $generated@@38) ($generated@@24 $generated@@33 $generated@@38 $generated@@34 $generated@@37))
))))
(assert (forall (($generated@@39 T@U) ) (!  (=> ($generated@@36 $generated@@33 $generated@@39 $generated@@34) ($generated@@29 $generated@@39))
 :pattern ( ($generated@@29 $generated@@39) ($generated@@36 $generated@@33 $generated@@39 $generated@@34))
)))
(assert  (=> (< 0 $generated@@31) (forall (($generated@@40 T@U) ) (!  (=> ($generated@@36 $generated@@33 $generated@@40 $generated@@34) ($generated@@36 $generated@@9 ($generated@@13 ($generated@@32 $generated@@40)) $generated@@25))
 :pattern ( ($generated@@32 $generated@@40))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@42 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@42 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@42 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@7 $generated@@43) 4)) (= ($generated@@7 $generated@@44) 5)) (= ($generated@@7 $generated@@45) 6)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@7 ($generated@@46 $generated@@62 $generated@@63)) 7))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@46 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@46 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@46 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@41 $generated@@68 $generated@@69) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@12 ($generated@@47 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@45 ($generated@@46 $generated@@43 $generated@@44) $generated@@68 $generated@@70) $generated@@1))) ($generated@@12 ($generated@@47 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@45 ($generated@@46 $generated@@43 $generated@@44) $generated@@69 $generated@@70) $generated@@1))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@45 ($generated@@46 $generated@@43 $generated@@44) $generated@@69 $generated@@70) $generated@@1))
)))
 :pattern ( ($generated@@41 $generated@@68 $generated@@69))
)))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@74 T@U) ($generated@@75 Int) ) (!  (=> (or ($generated@@72 $generated@@74 $generated@@75) (and (< 1 $generated@@31) (and (and ($generated@@36 $generated@@33 $generated@@74 $generated@@34) (<= ($generated@@73 0) $generated@@75)) (or (not (= $generated@@75 7)) (not true))))) (= ($generated@@71 $generated@@74 $generated@@75) $generated@@75))
 :pattern ( ($generated@@71 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@73 $generated@@76) $generated@@76)
 :pattern ( ($generated@@73 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@29 $generated@@81) (= ($generated@@80 $generated@@81) $generated@@4))
 :pattern ( ($generated@@29 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@47 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@47 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@29 $generated@@86) (exists (($generated@@87 Int) ) (= $generated@@86 ($generated@@85 $generated@@87))))
 :pattern ( ($generated@@29 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@36 $generated@@9 $generated@@88 $generated@@25) (<= ($generated@@73 0) ($generated@@14 $generated@@88)))
 :pattern ( ($generated@@36 $generated@@9 $generated@@88 $generated@@25))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@89 ($generated@@82 $generated@@93 $generated@@90) $generated@@91 $generated@@92) ($generated@@24 $generated@@93 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@89 ($generated@@82 $generated@@93 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@41 $generated@@94 $generated@@95) (=> ($generated@@89 $generated@@96 $generated@@97 $generated@@94) ($generated@@89 $generated@@96 $generated@@97 $generated@@95)))
 :pattern ( ($generated@@41 $generated@@94 $generated@@95) ($generated@@89 $generated@@96 $generated@@97 $generated@@94))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (!  (=> ($generated@@41 $generated@@98 $generated@@99) (=> ($generated@@24 $generated@@102 $generated@@100 $generated@@101 $generated@@98) ($generated@@24 $generated@@102 $generated@@100 $generated@@101 $generated@@99)))
 :pattern ( ($generated@@41 $generated@@98 $generated@@99) ($generated@@24 $generated@@102 $generated@@100 $generated@@101 $generated@@98))
)))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@103 T@U) ($generated@@104 Int) ) (!  (=> (or ($generated@@72 $generated@@103 $generated@@104) (and (< 1 $generated@@31) (and (and ($generated@@36 $generated@@33 $generated@@103 $generated@@34) (<= ($generated@@73 0) $generated@@104)) (or (not (= $generated@@104 7)) (not true))))) (and (= ($generated@@71 $generated@@103 $generated@@104) ($generated@@32 $generated@@103)) (<= ($generated@@73 0) ($generated@@71 $generated@@103 $generated@@104))))
 :pattern ( ($generated@@71 $generated@@103 $generated@@104))
))))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@105 T@U) ($generated@@106 Int) ) (!  (=> (or ($generated@@72 $generated@@105 ($generated@@73 $generated@@106)) (and (< 1 $generated@@31) (and (and ($generated@@36 $generated@@33 $generated@@105 $generated@@34) (<= ($generated@@73 0) $generated@@106)) ($generated@@12 ($generated@@77 $generated@@8 ($generated@@11  (or (not (= $generated@@106 7)) (not true)))))))) (= ($generated@@71 $generated@@105 ($generated@@73 $generated@@106)) ($generated@@73 $generated@@106)))
 :weight 3
 :pattern ( ($generated@@71 $generated@@105 ($generated@@73 $generated@@106)))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (or (not (= $generated@@107 $generated@@109)) (not true)) (=> (and ($generated@@41 $generated@@107 $generated@@108) ($generated@@41 $generated@@108 $generated@@109)) ($generated@@41 $generated@@107 $generated@@109)))
 :pattern ( ($generated@@41 $generated@@107 $generated@@108) ($generated@@41 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 Int) ) (! (= ($generated@@80 ($generated@@85 $generated@@110)) $generated@@4)
 :pattern ( ($generated@@85 $generated@@110))
)))
(assert (forall (($generated@@112 Int) ) (! (= ($generated@@111 ($generated@@85 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@85 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@47 $generated@@114 ($generated@@82 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@82 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@115 Int) ) (! (= ($generated@@36 $generated@@33 ($generated@@85 $generated@@115) $generated@@34) ($generated@@36 $generated@@9 ($generated@@13 $generated@@115) $generated))
 :pattern ( ($generated@@36 $generated@@33 ($generated@@85 $generated@@115) $generated@@34))
)))
(assert  (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@116 $generated@@119 $generated@@120 $generated@@121 ($generated@@118 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@124 $generated@@125) $generated@@122)
 :weight 0
)) (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@116 $generated@@126 $generated@@127 $generated@@128 ($generated@@118 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@116 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@116 $generated@@135 $generated@@136 $generated@@137 ($generated@@118 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@116 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 Bool) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@12 ($generated@@116 $generated@@45 $generated@@43 $generated@@8 ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))  (=> (and (or (not (= $generated@@148 $generated@@144)) (not true)) ($generated@@12 ($generated@@47 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@45 ($generated@@46 $generated@@43 $generated@@44) $generated@@145 $generated@@148) $generated@@146)))) $generated@@147))
 :pattern ( ($generated@@116 $generated@@45 $generated@@43 $generated@@8 ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@35 $generated@@151) (and ($generated@@29 $generated@@150) ($generated@@24 $generated@@33 $generated@@150 $generated@@34 $generated@@151))) ($generated@@24 $generated@@9 ($generated@@13 ($generated@@111 $generated@@150)) $generated $generated@@151))
 :pattern ( ($generated@@24 $generated@@9 ($generated@@13 ($generated@@111 $generated@@150)) $generated $generated@@151))
)))
(assert (forall (($generated@@153 Int) ($generated@@154 Int) ) (! (= ($generated@@152 $generated@@153 $generated@@154) (* $generated@@153 $generated@@154))
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and ($generated@@35 $generated@@156) ($generated@@36 $generated@@33 $generated@@155 $generated@@34)) ($generated@@24 $generated@@33 $generated@@155 $generated@@34 $generated@@156))
 :pattern ( ($generated@@24 $generated@@33 $generated@@155 $generated@@34 $generated@@156))
)))
(assert (= ($generated@@23 $generated@@25) $generated@@2))
(assert (= ($generated@@157 $generated@@25) $generated@@5))
(assert (= ($generated@@23 $generated@@34) $generated@@3))
(assert (= ($generated@@157 $generated@@34) $generated@@6))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@82 $generated@@9 ($generated@@13 ($generated@@73 $generated@@158))) ($generated@@77 $generated@@44 ($generated@@82 $generated@@9 ($generated@@13 $generated@@158))))
 :pattern ( ($generated@@82 $generated@@9 ($generated@@13 ($generated@@73 $generated@@158))))
)))
(assert (forall (($generated@@159 Int) ) (! (= ($generated@@85 ($generated@@73 $generated@@159)) ($generated@@77 $generated@@33 ($generated@@85 $generated@@159)))
 :pattern ( ($generated@@85 ($generated@@73 $generated@@159)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@82 $generated@@161 ($generated@@77 $generated@@161 $generated@@160)) ($generated@@77 $generated@@44 ($generated@@82 $generated@@161 $generated@@160)))
 :pattern ( ($generated@@82 $generated@@161 ($generated@@77 $generated@@161 $generated@@160)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! ($generated@@24 $generated@@9 $generated@@163 $generated $generated@@162)
 :pattern ( ($generated@@24 $generated@@9 $generated@@163 $generated $generated@@162))
)))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@164 T@U) ($generated@@165 Int) ) (!  (=> (or ($generated@@72 ($generated@@77 $generated@@33 $generated@@164) ($generated@@73 $generated@@165)) (and (< 1 $generated@@31) (and (and ($generated@@36 $generated@@33 $generated@@164 $generated@@34) (<= ($generated@@73 0) $generated@@165)) ($generated@@12 ($generated@@77 $generated@@8 ($generated@@11  (or (not (= $generated@@165 7)) (not true)))))))) (= ($generated@@71 ($generated@@77 $generated@@33 $generated@@164) ($generated@@73 $generated@@165)) ($generated@@73 $generated@@165)))
 :weight 3
 :pattern ( ($generated@@71 ($generated@@77 $generated@@33 $generated@@164) ($generated@@73 $generated@@165)))
))))
(assert (forall (($generated@@166 T@U) ) (! ($generated@@36 $generated@@9 $generated@@166 $generated)
 :pattern ( ($generated@@36 $generated@@9 $generated@@166 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@167 () Int)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@178 true))
(let (($generated@@179  (=> (and (and (or (not (= $generated@@167 9)) (not true)) (= $generated@@168 ($generated@@32 $generated@@169))) (and (<= ($generated@@73 0) $generated@@170) (= (ControlFlow 0 2) (- 0 1)))) (or (not (= $generated@@168 9)) (not true)))))
(let (($generated@@180  (=> (and (= $generated@@171 ($generated@@117 $generated@@172 $generated@@173 $generated@@1 false)) (= $generated@@167 ($generated@@32 $generated@@169))) (and (=> (= (ControlFlow 0 4) 2) $generated@@179) (=> (= (ControlFlow 0 4) 3) $generated@@178)))))
(let (($generated@@181  (=> (and ($generated@@35 $generated@@173) ($generated@@174 $generated@@173)) (=> (and (and ($generated@@36 $generated@@33 $generated@@169 $generated@@34) ($generated@@24 $generated@@33 $generated@@169 $generated@@34 $generated@@173)) ($generated@@28 $generated@@169)) (=> (and (and (and (<= ($generated@@73 0) $generated@@175) true) (and (<= ($generated@@73 0) $generated@@176) true)) (and (and (<= ($generated@@73 0) $generated@@177) true) (and (= 2 $generated@@31) (= (ControlFlow 0 5) 4)))) $generated@@180)))))
$generated@@181)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
