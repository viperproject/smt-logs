(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@42 (T@U T@U) T@U)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@116 (T@U) Int)
(declare-fun $generated@@117 (T@U) Int)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T T@T) T@T)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (! ($generated@@25 $generated@@11 $generated@@27 $generated@@26 $generated@@28)
 :pattern ( ($generated@@25 $generated@@11 $generated@@27 $generated@@26 $generated@@28))
)))
(assert (= ($generated@@9 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@35 ($generated@@32 $generated@@33 $generated@@34)) ($generated@@29 $generated@@35))
 :pattern ( ($generated@@29 $generated@@35) ($generated@@30 $generated@@31 $generated@@35 ($generated@@32 $generated@@33 $generated@@34)))
)))
(assert (= ($generated@@36 $generated@@37) $generated@@4))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@39 $generated@@41) ($generated@@25 $generated@@31 $generated@@37 ($generated@@38 $generated@@40) $generated@@41))
 :pattern ( ($generated@@25 $generated@@31 $generated@@37 ($generated@@38 $generated@@40) $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@42 $generated@@46 $generated@@47) ($generated@@32 $generated@@44 $generated@@45))  (and ($generated@@43 $generated@@46 $generated@@44) ($generated@@43 $generated@@47 $generated@@45)))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@42 $generated@@46 $generated@@47) ($generated@@32 $generated@@44 $generated@@45)))
)))
(assert (forall (($generated@@48 T@U) ) (! ($generated@@30 $generated@@31 $generated@@37 ($generated@@38 $generated@@48))
 :pattern ( ($generated@@30 $generated@@31 $generated@@37 ($generated@@38 $generated@@48)))
)))
(assert (forall (($generated@@50 Int) ) (! (= ($generated@@49 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> ($generated@@39 $generated@@59) (= ($generated@@25 $generated@@31 ($generated@@42 $generated@@57 $generated@@58) ($generated@@32 $generated@@55 $generated@@56) $generated@@59)  (and ($generated@@54 $generated@@57 $generated@@55 $generated@@59) ($generated@@54 $generated@@58 $generated@@56 $generated@@59))))
 :pattern ( ($generated@@25 $generated@@31 ($generated@@42 $generated@@57 $generated@@58) ($generated@@32 $generated@@55 $generated@@56) $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@29 $generated@@60) (= ($generated@@36 $generated@@60) $generated@@1))
 :pattern ( ($generated@@29 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@61 $generated@@62) (= ($generated@@36 $generated@@62) $generated@@4))
 :pattern ( ($generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 $generated@@64) (= ($generated@@36 $generated@@64) $generated@@5))
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 ($generated@@65 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@65 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@29 $generated@@69) (exists (($generated@@70 T@U) ($generated@@71 T@U) ) (= $generated@@69 ($generated@@42 $generated@@70 $generated@@71))))
 :pattern ( ($generated@@29 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@61 $generated@@72) (= $generated@@72 $generated@@37))
 :pattern ( ($generated@@61 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@63 $generated@@74) (exists (($generated@@75 T@U) ) (= $generated@@74 ($generated@@73 $generated@@75))))
 :pattern ( ($generated@@63 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@30 $generated@@11 $generated@@76 $generated@@26) (<= ($generated@@49 0) ($generated@@16 $generated@@76)))
 :pattern ( ($generated@@30 $generated@@11 $generated@@76 $generated@@26))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@54 ($generated@@66 $generated@@80 $generated@@77) $generated@@78 $generated@@79) ($generated@@25 $generated@@80 $generated@@77 $generated@@78 $generated@@79))
 :pattern ( ($generated@@54 ($generated@@66 $generated@@80 $generated@@77) $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@83 T@U) ) (!  (and (= ($generated@@81 ($generated@@38 $generated@@83)) $generated@@3) (= ($generated@@82 ($generated@@38 $generated@@83)) $generated@@8))
 :pattern ( ($generated@@38 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@43 $generated@@84 $generated@@26) (and (= ($generated@@66 $generated@@11 ($generated@@65 $generated@@11 $generated@@84)) $generated@@84) ($generated@@30 $generated@@11 ($generated@@65 $generated@@11 $generated@@84) $generated@@26)))
 :pattern ( ($generated@@43 $generated@@84 $generated@@26))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@39 $generated@@87) (= ($generated@@25 $generated@@31 ($generated@@73 $generated@@86) ($generated@@38 $generated@@85) $generated@@87) ($generated@@54 $generated@@86 $generated@@85 $generated@@87)))
 :pattern ( ($generated@@25 $generated@@31 ($generated@@73 $generated@@86) ($generated@@38 $generated@@85) $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@89 ($generated@@38 $generated@@88)) (or ($generated@@61 $generated@@89) ($generated@@63 $generated@@89)))
 :pattern ( ($generated@@63 $generated@@89) ($generated@@30 $generated@@31 $generated@@89 ($generated@@38 $generated@@88)))
 :pattern ( ($generated@@61 $generated@@89) ($generated@@30 $generated@@31 $generated@@89 ($generated@@38 $generated@@88)))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@43 ($generated@@66 $generated@@92 $generated@@90) $generated@@91) ($generated@@30 $generated@@92 $generated@@90 $generated@@91))
 :pattern ( ($generated@@43 ($generated@@66 $generated@@92 $generated@@90) $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@36 ($generated@@42 $generated@@93 $generated@@94)) $generated@@1)
 :pattern ( ($generated@@42 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@95 ($generated@@32 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@32 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@98 ($generated@@32 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@32 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@101 ($generated@@42 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@42 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@104 ($generated@@42 $generated@@105 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@42 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@107 ($generated@@38 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@38 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@36 ($generated@@73 $generated@@109)) $generated@@5)
 :pattern ( ($generated@@73 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@110 ($generated@@73 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@73 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@65 $generated@@113 ($generated@@66 $generated@@113 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@66 $generated@@113 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@73 $generated@@115) ($generated@@38 $generated@@114)) ($generated@@43 $generated@@115 $generated@@114))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@73 $generated@@115) ($generated@@38 $generated@@114)))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (< ($generated@@116 $generated@@118) ($generated@@117 ($generated@@42 $generated@@118 $generated@@119)))
 :pattern ( ($generated@@42 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (< ($generated@@116 $generated@@121) ($generated@@117 ($generated@@42 $generated@@120 $generated@@121)))
 :pattern ( ($generated@@42 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> ($generated@@43 $generated@@124 ($generated@@32 $generated@@122 $generated@@123)) (and (= ($generated@@66 $generated@@31 ($generated@@65 $generated@@31 $generated@@124)) $generated@@124) ($generated@@30 $generated@@31 ($generated@@65 $generated@@31 $generated@@124) ($generated@@32 $generated@@122 $generated@@123))))
 :pattern ( ($generated@@43 $generated@@124 ($generated@@32 $generated@@122 $generated@@123)))
)))
(assert (forall (($generated@@125 T@U) ) (! (< ($generated@@116 $generated@@125) ($generated@@117 ($generated@@73 $generated@@125)))
 :pattern ( ($generated@@73 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and ($generated@@39 $generated@@128) (and ($generated@@63 $generated@@126) ($generated@@25 $generated@@31 $generated@@126 ($generated@@38 $generated@@127) $generated@@128))) ($generated@@54 ($generated@@110 $generated@@126) $generated@@127 $generated@@128))
 :pattern ( ($generated@@54 ($generated@@110 $generated@@126) $generated@@127 $generated@@128))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@129 $generated@@140 $generated@@141 $generated@@142 ($generated@@136 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@145 $generated@@146) $generated@@143)
 :weight 0
)) (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@129 $generated@@147 $generated@@148 $generated@@149 ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@129 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@129 $generated@@156 $generated@@157 $generated@@158 ($generated@@136 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)))) (= ($generated@@9 $generated@@130) 4)) (= ($generated@@9 $generated@@131) 5)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@133 $generated@@165 $generated@@166 ($generated@@137 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@167) $generated@@169) $generated@@167)
 :weight 0
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@174 $generated@@175) (= ($generated@@133 $generated@@170 $generated@@171 ($generated@@137 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@172) $generated@@175) ($generated@@133 $generated@@170 $generated@@171 $generated@@173 $generated@@175)))
 :weight 0
))) (= ($generated@@9 $generated@@134) 6)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@9 ($generated@@135 $generated@@176 $generated@@177)) 7))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@135 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@139 ($generated@@135 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@135 $generated@@180 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@14 ($generated@@129 $generated@@130 $generated@@131 $generated@@10 ($generated@@132 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))  (=> (and (or (not (= $generated@@186 $generated@@182)) (not true)) ($generated@@14 ($generated@@65 $generated@@10 ($generated@@133 $generated@@131 $generated@@134 ($generated@@133 $generated@@130 ($generated@@135 $generated@@131 $generated@@134) $generated@@183 $generated@@186) $generated@@184)))) $generated@@185))
 :pattern ( ($generated@@129 $generated@@130 $generated@@131 $generated@@10 ($generated@@132 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (and (= ($generated@@81 ($generated@@32 $generated@@188 $generated@@189)) $generated@@2) (= ($generated@@82 ($generated@@32 $generated@@188 $generated@@189)) $generated@@7))
 :pattern ( ($generated@@32 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@116 ($generated@@66 $generated@@31 $generated@@190)) ($generated@@117 $generated@@190))
 :pattern ( ($generated@@116 ($generated@@66 $generated@@31 $generated@@190)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@43 $generated@@192 ($generated@@38 $generated@@191)) (and (= ($generated@@66 $generated@@31 ($generated@@65 $generated@@31 $generated@@192)) $generated@@192) ($generated@@30 $generated@@31 ($generated@@65 $generated@@31 $generated@@192) ($generated@@38 $generated@@191))))
 :pattern ( ($generated@@43 $generated@@192 ($generated@@38 $generated@@191)))
)))
(assert (= ($generated@@81 $generated@@26) $generated@@0))
(assert (= ($generated@@82 $generated@@26) $generated@@6))
(assert (= $generated@@37 ($generated@@51 $generated@@31 $generated@@37)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and ($generated@@39 $generated@@195) (and ($generated@@29 $generated@@193) (exists (($generated@@196 T@U) ) (! ($generated@@25 $generated@@31 $generated@@193 ($generated@@32 $generated@@194 $generated@@196) $generated@@195)
 :pattern ( ($generated@@25 $generated@@31 $generated@@193 ($generated@@32 $generated@@194 $generated@@196) $generated@@195))
)))) ($generated@@54 ($generated@@101 $generated@@193) $generated@@194 $generated@@195))
 :pattern ( ($generated@@54 ($generated@@101 $generated@@193) $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@39 $generated@@199) (and ($generated@@29 $generated@@197) (exists (($generated@@200 T@U) ) (! ($generated@@25 $generated@@31 $generated@@197 ($generated@@32 $generated@@200 $generated@@198) $generated@@199)
 :pattern ( ($generated@@25 $generated@@31 $generated@@197 ($generated@@32 $generated@@200 $generated@@198) $generated@@199))
)))) ($generated@@54 ($generated@@104 $generated@@197) $generated@@198 $generated@@199))
 :pattern ( ($generated@@54 ($generated@@104 $generated@@197) $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@42 ($generated@@51 $generated@@134 $generated@@201) ($generated@@51 $generated@@134 $generated@@202)) ($generated@@51 $generated@@31 ($generated@@42 $generated@@201 $generated@@202)))
 :pattern ( ($generated@@42 ($generated@@51 $generated@@134 $generated@@201) ($generated@@51 $generated@@134 $generated@@202)))
)))
(assert (forall (($generated@@203 Int) ) (! (= ($generated@@66 $generated@@11 ($generated@@15 ($generated@@49 $generated@@203))) ($generated@@51 $generated@@134 ($generated@@66 $generated@@11 ($generated@@15 $generated@@203))))
 :pattern ( ($generated@@66 $generated@@11 ($generated@@15 ($generated@@49 $generated@@203))))
)))
(assert (forall (($generated@@204 T@U) ) (! (= ($generated@@73 ($generated@@51 $generated@@134 $generated@@204)) ($generated@@51 $generated@@31 ($generated@@73 $generated@@204)))
 :pattern ( ($generated@@73 ($generated@@51 $generated@@134 $generated@@204)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@T) ) (! (= ($generated@@66 $generated@@206 ($generated@@51 $generated@@206 $generated@@205)) ($generated@@51 $generated@@134 ($generated@@66 $generated@@206 $generated@@205)))
 :pattern ( ($generated@@66 $generated@@206 ($generated@@51 $generated@@206 $generated@@205)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@217  (=> (= $generated@@207 ($generated@@132 $generated@@208 $generated@@209 $generated false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@30 $generated@@31 ($generated@@51 $generated@@31 ($generated@@42 ($generated@@66 $generated@@11 ($generated@@15 ($generated@@49 2))) ($generated@@66 $generated@@11 ($generated@@15 ($generated@@49 3))))) ($generated@@32 $generated@@26 $generated@@26))) (=> ($generated@@30 $generated@@31 ($generated@@51 $generated@@31 ($generated@@42 ($generated@@66 $generated@@11 ($generated@@15 ($generated@@49 2))) ($generated@@66 $generated@@11 ($generated@@15 ($generated@@49 3))))) ($generated@@32 $generated@@26 $generated@@26)) (=> (and (= $generated@@210 ($generated@@51 $generated@@31 ($generated@@73 ($generated@@66 $generated@@31 ($generated@@51 $generated@@31 ($generated@@42 ($generated@@66 $generated@@11 ($generated@@15 ($generated@@49 2))) ($generated@@66 $generated@@11 ($generated@@15 ($generated@@49 3))))))))) (<= ($generated@@49 0) $generated@@211)) (=> (and (and (<= ($generated@@49 0) $generated@@212) (= $generated@@213 $generated@@210)) (and ($generated@@30 $generated@@31 $generated@@213 ($generated@@38 ($generated@@32 $generated@@26 $generated@@26))) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@63 $generated@@213))))))))
(let (($generated@@218  (=> (and ($generated@@39 $generated@@209) ($generated@@214 $generated@@209)) (=> (and (and (and ($generated@@30 $generated@@31 $generated@@215 ($generated@@38 ($generated@@32 $generated@@26 $generated@@26))) ($generated@@25 $generated@@31 $generated@@215 ($generated@@38 ($generated@@32 $generated@@26 $generated@@26)) $generated@@209)) true) (and (= 1 $generated@@216) (= (ControlFlow 0 4) 2))) $generated@@217))))
$generated@@218)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
