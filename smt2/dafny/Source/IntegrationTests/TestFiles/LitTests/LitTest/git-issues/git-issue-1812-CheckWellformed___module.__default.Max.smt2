(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 () Int)
(declare-fun $generated@@20 (T@U T@U) Int)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U) T@U)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@67 (Int) Int)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@109 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 (T@T T@T) T@T)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@T) T@T)
(declare-fun $generated@@115 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@3 $generated@@23) 3))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (or ($generated@@25 ($generated@@22 $generated@@23 $generated@@37)) (and (< 0 $generated@@19) (and (and ($generated@@24 $generated@@36) ($generated@@26 $generated@@23 $generated@@37 ($generated@@27 $generated))) (not ($generated@@28 $generated@@37 $generated@@29))))) (and (and ($generated@@30 ($generated@@22 $generated@@23 $generated@@37)) (=> (not ($generated@@28 $generated@@37 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 ($generated@@33 ($generated@@22 $generated@@23 $generated@@37))))))) (let (($generated@@38 ($generated@@34 $generated@@37 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 ($generated@@33 ($generated@@22 $generated@@23 $generated@@37))))))))
($generated@@25 $generated@@38)))) (= ($generated@@20 ($generated@@21 $generated@@35) ($generated@@22 $generated@@23 $generated@@37)) (let (($generated@@39 ($generated@@33 ($generated@@22 $generated@@23 $generated@@37))))
(ite ($generated@@28 $generated@@37 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 $generated@@39)))) $generated@@39 (let (($generated@@40 ($generated@@34 $generated@@37 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 $generated@@39))))))
(let (($generated@@41 ($generated@@20 ($generated@@21 $generated@@35) $generated@@40)))
$generated@@41)))))))
 :weight 3
 :pattern ( ($generated@@20 ($generated@@21 $generated@@35) ($generated@@22 $generated@@23 $generated@@37)) ($generated@@24 $generated@@36))
))))
(assert (= ($generated@@42 $generated) $generated@@0))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! ($generated@@43 ($generated@@31 $generated@@44 $generated@@45) $generated@@45)
 :pattern ( ($generated@@31 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> ($generated@@43 $generated@@46 $generated@@48) ($generated@@43 ($generated@@31 $generated@@46 $generated@@47) $generated@@48))
 :pattern ( ($generated@@31 $generated@@46 $generated@@47) ($generated@@43 $generated@@46 $generated@@48))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@43 ($generated@@31 $generated@@49 $generated@@50) $generated@@51)  (or (= $generated@@51 $generated@@50) ($generated@@43 $generated@@49 $generated@@51)))
 :pattern ( ($generated@@43 ($generated@@31 $generated@@49 $generated@@50) $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> ($generated@@43 $generated@@53 $generated@@54) (not ($generated@@43 ($generated@@34 $generated@@52 $generated@@53) $generated@@54)))
 :pattern ( ($generated@@34 $generated@@52 $generated@@53) ($generated@@43 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ) (!  (not ($generated@@43 $generated@@29 $generated@@55))
 :pattern ( ($generated@@43 $generated@@29 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@43 ($generated@@34 $generated@@56 $generated@@57) $generated@@58)  (and ($generated@@43 $generated@@56 $generated@@58) (not ($generated@@43 $generated@@57 $generated@@58))))
 :pattern ( ($generated@@43 ($generated@@34 $generated@@56 $generated@@57) $generated@@58))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (or ($generated@@25 $generated@@61) (and (< 0 $generated@@19) (and (and ($generated@@24 $generated@@60) ($generated@@26 $generated@@23 $generated@@61 ($generated@@27 $generated))) (not ($generated@@28 $generated@@61 $generated@@29))))) (and (and ($generated@@30 $generated@@61) (=> (not ($generated@@28 $generated@@61 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 ($generated@@33 $generated@@61)))))) (let (($generated@@62 ($generated@@34 $generated@@61 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 ($generated@@33 $generated@@61)))))))
($generated@@25 $generated@@62)))) (= ($generated@@20 ($generated@@21 $generated@@59) $generated@@61) (let (($generated@@63 ($generated@@33 $generated@@61)))
(ite ($generated@@28 $generated@@61 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 $generated@@63)))) $generated@@63 (let (($generated@@64 ($generated@@34 $generated@@61 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 $generated@@63))))))
(let (($generated@@65 ($generated@@20 $generated@@59 $generated@@64)))
$generated@@65)))))))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@59) $generated@@61) ($generated@@24 $generated@@60))
))))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@30 $generated@@66) ($generated@@43 $generated@@66 ($generated@@32 $generated@@5 ($generated@@9 ($generated@@33 $generated@@66)))))
 :pattern ( ($generated@@33 $generated@@66))
)))
(assert (forall (($generated@@68 Int) ) (! (= ($generated@@67 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@22 $generated@@70 $generated@@69) $generated@@69)
 :pattern ( ($generated@@22 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@71 $generated@@72 $generated@@73) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@43 $generated@@72 $generated@@74) ($generated@@43 $generated@@73 $generated@@74))
 :pattern ( ($generated@@43 $generated@@72 $generated@@74))
 :pattern ( ($generated@@43 $generated@@73 $generated@@74))
)))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@32 $generated@@77 ($generated@@75 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@26 $generated@@23 $generated@@79 ($generated@@27 $generated@@80)) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@43 $generated@@79 $generated@@81) ($generated@@78 $generated@@81 $generated@@80))
 :pattern ( ($generated@@43 $generated@@79 $generated@@81))
)))
 :pattern ( ($generated@@26 $generated@@23 $generated@@79 ($generated@@27 $generated@@80)))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@82 ($generated@@32 $generated@@87 $generated@@84) $generated@@85 $generated@@86) ($generated@@83 $generated@@87 $generated@@84 $generated@@85 $generated@@86))
 :pattern ( ($generated@@82 ($generated@@32 $generated@@87 $generated@@84) $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@28 $generated@@88 $generated@@89) (= $generated@@88 $generated@@89))
 :pattern ( ($generated@@28 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@78 $generated@@90 $generated) (and (= ($generated@@32 $generated@@5 ($generated@@75 $generated@@5 $generated@@90)) $generated@@90) ($generated@@26 $generated@@5 ($generated@@75 $generated@@5 $generated@@90) $generated)))
 :pattern ( ($generated@@78 $generated@@90 $generated))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@78 ($generated@@32 $generated@@93 $generated@@91) $generated@@92) ($generated@@26 $generated@@93 $generated@@91 $generated@@92))
 :pattern ( ($generated@@78 ($generated@@32 $generated@@93 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@83 $generated@@23 $generated@@94 ($generated@@27 $generated@@95) $generated@@96) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@43 $generated@@94 $generated@@97) ($generated@@82 $generated@@97 $generated@@95 $generated@@96))
 :pattern ( ($generated@@43 $generated@@94 $generated@@97))
)))
 :pattern ( ($generated@@83 $generated@@23 $generated@@94 ($generated@@27 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@98 ($generated@@27 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@27 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@42 ($generated@@27 $generated@@100)) $generated@@1)
 :pattern ( ($generated@@27 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@75 $generated@@102 ($generated@@32 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@32 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@103) $generated@@104) ($generated@@20 $generated@@103 $generated@@104))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@103) $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@105 $generated@@116 $generated@@117 $generated@@118 ($generated@@112 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@121 $generated@@122) $generated@@119)
 :weight 0
)) (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@105 $generated@@123 $generated@@124 $generated@@125 ($generated@@112 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@105 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@105 $generated@@132 $generated@@133 $generated@@134 ($generated@@112 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@105 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)))) (= ($generated@@3 $generated@@106) 4)) (= ($generated@@3 $generated@@107) 5)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@109 $generated@@141 $generated@@142 ($generated@@113 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@143) $generated@@145) $generated@@143)
 :weight 0
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@150 $generated@@151) (= ($generated@@109 $generated@@146 $generated@@147 ($generated@@113 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@109 $generated@@146 $generated@@147 $generated@@149 $generated@@151)))
 :weight 0
))) (= ($generated@@3 $generated@@110) 6)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (= ($generated@@3 ($generated@@111 $generated@@152 $generated@@153)) 7))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@114 ($generated@@111 $generated@@154 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@111 $generated@@154 $generated@@155))
))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (! (= ($generated@@115 ($generated@@111 $generated@@156 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@111 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 Bool) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@8 ($generated@@105 $generated@@106 $generated@@107 $generated@@4 ($generated@@108 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))  (=> (and (or (not (= $generated@@162 $generated@@158)) (not true)) ($generated@@8 ($generated@@75 $generated@@4 ($generated@@109 $generated@@107 $generated@@110 ($generated@@109 $generated@@106 ($generated@@111 $generated@@107 $generated@@110) $generated@@159 $generated@@162) $generated@@160)))) $generated@@161))
 :pattern ( ($generated@@105 $generated@@106 $generated@@107 $generated@@4 ($generated@@108 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> ($generated@@78 $generated@@164 ($generated@@27 $generated@@165)) (and (= ($generated@@32 $generated@@23 ($generated@@75 $generated@@23 $generated@@164)) $generated@@164) ($generated@@26 $generated@@23 ($generated@@75 $generated@@23 $generated@@164) ($generated@@27 $generated@@165))))
 :pattern ( ($generated@@78 $generated@@164 ($generated@@27 $generated@@165)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@28 $generated@@166 $generated@@167) (forall (($generated@@168 T@U) ) (! (= ($generated@@43 $generated@@166 $generated@@168) ($generated@@43 $generated@@167 $generated@@168))
 :pattern ( ($generated@@43 $generated@@166 $generated@@168))
 :pattern ( ($generated@@43 $generated@@167 $generated@@168))
)))
 :pattern ( ($generated@@28 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 Int) ) (! (= ($generated@@32 $generated@@5 ($generated@@9 ($generated@@67 $generated@@169))) ($generated@@22 $generated@@110 ($generated@@32 $generated@@5 ($generated@@9 $generated@@169))))
 :pattern ( ($generated@@32 $generated@@5 ($generated@@9 ($generated@@67 $generated@@169))))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@32 $generated@@171 ($generated@@22 $generated@@171 $generated@@170)) ($generated@@22 $generated@@110 ($generated@@32 $generated@@171 $generated@@170)))
 :pattern ( ($generated@@32 $generated@@171 ($generated@@22 $generated@@171 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! ($generated@@83 $generated@@5 $generated@@173 $generated $generated@@172)
 :pattern ( ($generated@@83 $generated@@5 $generated@@173 $generated $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! ($generated@@26 $generated@@5 $generated@@174 $generated)
 :pattern ( ($generated@@26 $generated@@5 $generated@@174 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@186 true))
(let (($generated@@187  (=> (not ($generated@@28 $generated@@175 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 $generated@@176))))) (=> (and (and (= $generated@@177 ($generated@@34 $generated@@175 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 $generated@@176))))) ($generated@@26 $generated@@23 $generated@@177 ($generated@@27 $generated))) (and (= $generated@@178 $generated@@177) ($generated@@83 $generated@@23 $generated@@178 ($generated@@27 $generated) $generated@@179))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (not ($generated@@28 $generated@@178 $generated@@29))) (=> (not ($generated@@28 $generated@@178 $generated@@29)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and ($generated@@71 $generated@@178 $generated@@175) (not ($generated@@71 $generated@@175 $generated@@178)))) (=> (and ($generated@@71 $generated@@178 $generated@@175) (not ($generated@@71 $generated@@175 $generated@@178))) (=> (and ($generated@@25 $generated@@178) (= $generated@@180 ($generated@@20 ($generated@@21 $generated@@181) $generated@@178))) (=> (and (and ($generated@@25 $generated@@178) ($generated@@26 $generated@@5 ($generated@@9 $generated@@180) $generated)) (and (= $generated@@182 $generated@@180) (= (ControlFlow 0 5) 3))) $generated@@186))))))))))
(let (($generated@@188  (=> (and ($generated@@28 $generated@@175 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 $generated@@176)))) (= (ControlFlow 0 4) 3)) $generated@@186)))
(let (($generated@@189  (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (and ($generated@@26 $generated@@5 ($generated@@9 ($generated@@67 0)) $generated) ($generated@@43 $generated@@175 ($generated@@32 $generated@@5 ($generated@@9 ($generated@@67 0))))) (exists (($generated@@190 T@U) ) ($generated@@43 $generated@@175 ($generated@@32 $generated@@5 $generated@@190))))) (=> (or (and ($generated@@26 $generated@@5 ($generated@@9 ($generated@@67 0)) $generated) ($generated@@43 $generated@@175 ($generated@@32 $generated@@5 ($generated@@9 ($generated@@67 0))))) (exists (($generated@@191 Int) ) ($generated@@43 $generated@@175 ($generated@@32 $generated@@5 ($generated@@9 $generated@@191))))) (=> ($generated@@43 $generated@@175 ($generated@@32 $generated@@5 ($generated@@9 $generated@@176))) (and (=> (= (ControlFlow 0 8) 4) $generated@@188) (=> (= (ControlFlow 0 8) 5) $generated@@187)))))))
(let (($generated@@192 true))
(let (($generated@@193 true))
(let (($generated@@194  (=> (and (= $generated@@183 ($generated@@108 $generated@@184 $generated@@179 $generated@@2 false)) (not ($generated@@28 $generated@@175 $generated@@29))) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@193) (=> (= (ControlFlow 0 10) 8) $generated@@189)) (=> (= (ControlFlow 0 10) 2) $generated@@192)))))
(let (($generated@@195  (=> (and (and (and ($generated@@24 $generated@@179) ($generated@@185 $generated@@179)) ($generated@@26 $generated@@23 $generated@@175 ($generated@@27 $generated))) (and (= 0 $generated@@19) (= (ControlFlow 0 11) 10))) $generated@@194)))
$generated@@195)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
