(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 () Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@50 (T@U) Int)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@U Int) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (Int) Int)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@63 (Int) Int)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@66 (T@U Int Int T@U T@U Bool) T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@72 (T@U T@U) T@U)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@78 (Int) Int)
(declare-fun $generated@@79 (Int) Int)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@87 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@122 () T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Int)
(declare-fun $generated@@166 (T@U) Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@179 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 () T@T)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 (Int) Int)
(declare-fun $generated@@276 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated) $generated@@0))
(assert  (and (= ($generated@@14 $generated@@35) 3) (= ($generated@@14 $generated@@38) 4)))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@40 T@U) ) (!  (=> (or ($generated@@33 $generated@@40) (and (< 1 $generated@@31) ($generated@@34 $generated@@35 $generated@@40 ($generated@@36 $generated@@37)))) ($generated@@34 $generated@@38 ($generated@@32 $generated@@40) ($generated@@39 $generated $generated)))
 :pattern ( ($generated@@32 $generated@@40))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@41 ($generated@@42 $generated@@43 $generated@@44 $generated@@45)) $generated@@43)
 :pattern ( ($generated@@41 ($generated@@42 $generated@@43 $generated@@44 $generated@@45)))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@46 ($generated@@42 $generated@@47 $generated@@48 $generated@@49)) $generated@@48)
 :pattern ( ($generated@@46 ($generated@@42 $generated@@47 $generated@@48 $generated@@49)))
)))
(assert (= ($generated@@50 $generated@@51) 0))
(assert (= ($generated@@52 $generated@@53) $generated@@9))
(assert (= ($generated@@14 $generated@@58) 5))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@68 T@U) ) (!  (=> (or ($generated@@33 ($generated@@54 $generated@@35 $generated@@68)) (and (< 1 $generated@@31) ($generated@@34 $generated@@35 $generated@@68 ($generated@@36 $generated@@37)))) (and (forall (($generated@@69 Int) ($generated@@70 T@U) ) (!  (=> (and (and (and (and (<= ($generated@@61 0) $generated@@69) (< $generated@@69 ($generated@@50 ($generated@@54 $generated@@35 $generated@@68)))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 ($generated@@54 $generated@@35 $generated@@68) $generated@@69)))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 ($generated@@54 $generated@@35 $generated@@68) $generated@@69))) ($generated@@60 $generated@@16 $generated@@70))) (or (not (= 1 2)) (not true))) (and (and (and (and (and (<= ($generated@@61 0) ($generated@@63 ($generated@@21 $generated@@70))) (< ($generated@@63 ($generated@@21 $generated@@70)) ($generated@@50 ($generated@@54 $generated@@35 $generated@@68)))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 ($generated@@54 $generated@@35 $generated@@68) ($generated@@63 ($generated@@21 $generated@@70)))))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 ($generated@@54 $generated@@35 $generated@@68) ($generated@@63 ($generated@@21 $generated@@70))))) ($generated@@60 $generated@@16 ($generated@@20 ($generated@@64 ($generated@@21 $generated@@70)))))) (or (not (= 1 2)) (not true))) (= ($generated@@21 $generated@@70) ($generated@@64 ($generated@@21 $generated@@70)))))
 :pattern ( ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@68 $generated@@69))) ($generated@@60 $generated@@16 $generated@@70)))
)) (= ($generated@@32 ($generated@@54 $generated@@35 $generated@@68)) ($generated@@42 ($generated@@65 ($generated@@66 $generated ($generated@@61 0) ($generated@@50 ($generated@@54 $generated@@35 $generated@@68)) ($generated@@54 $generated@@35 $generated@@68) ($generated@@54 $generated@@35 $generated@@68)  (or (not (= 1 2)) (not true)))) $generated@@67 ($generated@@39 $generated $generated)))))
 :weight 3
 :pattern ( ($generated@@32 ($generated@@54 $generated@@35 $generated@@68)))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@34 $generated@@58 ($generated@@71 $generated@@76 $generated@@77) ($generated@@72 $generated@@74 $generated@@75))  (and ($generated@@73 $generated@@76 $generated@@74) ($generated@@73 $generated@@77 $generated@@75)))
 :pattern ( ($generated@@34 $generated@@58 ($generated@@71 $generated@@76 $generated@@77) ($generated@@72 $generated@@74 $generated@@75)))
)))
(assert ($generated@@34 $generated@@58 $generated@@53 $generated@@37))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@81 T@U) ) (!  (=> (or ($generated@@33 $generated@@81) (and (< 1 $generated@@31) ($generated@@34 $generated@@35 $generated@@81 ($generated@@36 $generated@@37)))) (and (forall (($generated@@82 Int) ($generated@@83 T@U) ) (!  (=> (and (and (and (and (<= ($generated@@61 0) $generated@@82) (< $generated@@82 ($generated@@50 $generated@@81))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@81 $generated@@82)))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@81 $generated@@82))) ($generated@@60 $generated@@16 $generated@@83))) (or (not (= 1 2)) (not true))) (and (and (and (and (and (<= ($generated@@61 0) ($generated@@78 ($generated@@21 $generated@@83))) (< ($generated@@78 ($generated@@21 $generated@@83)) ($generated@@50 $generated@@81))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@81 ($generated@@78 ($generated@@21 $generated@@83)))))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@81 ($generated@@78 ($generated@@21 $generated@@83))))) ($generated@@60 $generated@@16 ($generated@@20 ($generated@@79 ($generated@@21 $generated@@83)))))) (or (not (= 1 2)) (not true))) (= ($generated@@21 $generated@@83) ($generated@@79 ($generated@@21 $generated@@83)))))
 :pattern ( ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@81 $generated@@82))) ($generated@@60 $generated@@16 $generated@@83)))
)) (= ($generated@@32 $generated@@81) ($generated@@42 ($generated@@65 ($generated@@66 $generated ($generated@@61 0) ($generated@@50 $generated@@81) $generated@@81 $generated@@81  (or (not (= 1 2)) (not true)))) $generated@@80 ($generated@@39 $generated $generated)))))
 :pattern ( ($generated@@32 $generated@@81))
))))
(assert (forall (($generated@@84 Int) ) (! (= ($generated@@61 $generated@@84) $generated@@84)
 :pattern ( ($generated@@61 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@54 $generated@@86 $generated@@85) $generated@@85)
 :pattern ( ($generated@@54 $generated@@86 $generated@@85))
)))
(assert  (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@87 $generated@@90 $generated@@91 ($generated@@89 $generated@@90 $generated@@91 $generated@@93 $generated@@94 $generated@@92) $generated@@94) $generated@@92)
 :weight 0
)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or (= $generated@@99 $generated@@100) (= ($generated@@87 $generated@@95 $generated@@96 ($generated@@89 $generated@@95 $generated@@96 $generated@@98 $generated@@99 $generated@@97) $generated@@100) ($generated@@87 $generated@@95 $generated@@96 $generated@@98 $generated@@100)))
 :weight 0
))) (= ($generated@@14 $generated@@88) 6)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (forall (($generated@@105 T@U) )  (=> ($generated@@55 $generated@@101 $generated@@105) (and ($generated@@73 $generated@@105 $generated@@103) ($generated@@73 ($generated@@87 $generated@@88 $generated@@88 $generated@@102 $generated@@105) $generated@@104)))) ($generated@@34 $generated@@38 ($generated@@42 $generated@@101 $generated@@102 ($generated@@39 $generated@@103 $generated@@104)) ($generated@@39 $generated@@103 $generated@@104)))
 :pattern ( ($generated@@42 $generated@@101 $generated@@102 ($generated@@39 $generated@@103 $generated@@104)))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 $generated@@107) (= ($generated@@52 $generated@@107) $generated@@9))
 :pattern ( ($generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@62 $generated@@108) (= ($generated@@52 $generated@@108) $generated@@10))
 :pattern ( ($generated@@62 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@60 $generated@@110 ($generated@@57 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@55 ($generated@@65 $generated@@111) $generated@@112) ($generated@@19 ($generated@@87 $generated@@88 $generated@@15 $generated@@111 $generated@@112)))
 :pattern ( ($generated@@55 ($generated@@65 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@106 $generated@@113) (= $generated@@113 $generated@@53))
 :pattern ( ($generated@@106 $generated@@113))
)))
(assert (= ($generated@@14 $generated@@114) 7))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@34 $generated@@114 $generated@@116 ($generated@@115 $generated@@117)) (forall (($generated@@118 T@U) ) (!  (=> ($generated@@55 $generated@@116 $generated@@118) ($generated@@73 $generated@@118 $generated@@117))
 :pattern ( ($generated@@55 $generated@@116 $generated@@118))
)))
 :pattern ( ($generated@@34 $generated@@114 $generated@@116 ($generated@@115 $generated@@117)))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@62 $generated@@120) (exists (($generated@@121 T@U) ) (= $generated@@120 ($generated@@119 $generated@@121))))
 :pattern ( ($generated@@62 $generated@@120))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@34 $generated@@16 $generated@@123 $generated@@122) (<= ($generated@@61 0) ($generated@@21 $generated@@123)))
 :pattern ( ($generated@@34 $generated@@16 $generated@@123 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@73 $generated@@124 $generated@@122) (and (= ($generated@@60 $generated@@16 ($generated@@57 $generated@@16 $generated@@124)) $generated@@124) ($generated@@34 $generated@@16 ($generated@@57 $generated@@16 $generated@@124) $generated@@122)))
 :pattern ( ($generated@@73 $generated@@124 $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@73 $generated@@125 $generated@@37) (and (= ($generated@@60 $generated@@58 ($generated@@57 $generated@@58 $generated@@125)) $generated@@125) ($generated@@34 $generated@@58 ($generated@@57 $generated@@58 $generated@@125) $generated@@37)))
 :pattern ( ($generated@@73 $generated@@125 $generated@@37))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@34 $generated@@58 ($generated@@119 $generated@@126) $generated@@37) ($generated@@34 $generated@@114 $generated@@126 ($generated@@115 $generated@@122)))
 :pattern ( ($generated@@34 $generated@@58 ($generated@@119 $generated@@126) $generated@@37))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@34 $generated@@58 $generated@@127 $generated@@37) (or ($generated@@106 $generated@@127) ($generated@@62 $generated@@127)))
 :pattern ( ($generated@@62 $generated@@127) ($generated@@34 $generated@@58 $generated@@127 $generated@@37))
 :pattern ( ($generated@@106 $generated@@127) ($generated@@34 $generated@@58 $generated@@127 $generated@@37))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@73 $generated@@128 $generated) (and (= ($generated@@60 $generated@@16 ($generated@@57 $generated@@16 $generated@@128)) $generated@@128) ($generated@@34 $generated@@16 ($generated@@57 $generated@@16 $generated@@128) $generated)))
 :pattern ( ($generated@@73 $generated@@128 $generated))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@73 ($generated@@60 $generated@@131 $generated@@129) $generated@@130) ($generated@@34 $generated@@131 $generated@@129 $generated@@130))
 :pattern ( ($generated@@73 ($generated@@60 $generated@@131 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (<= 0 ($generated@@50 $generated@@132))
 :pattern ( ($generated@@50 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@133 ($generated@@39 $generated@@134 $generated@@135)) $generated@@134)
 :pattern ( ($generated@@39 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@136 ($generated@@39 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@39 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@30 ($generated@@39 $generated@@139 $generated@@140)) $generated@@3)
 :pattern ( ($generated@@39 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@52 ($generated@@71 $generated@@141 $generated@@142)) $generated@@6)
 :pattern ( ($generated@@71 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@143 ($generated@@72 $generated@@144 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@72 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@146 ($generated@@72 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@72 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@149 ($generated@@71 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@71 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@152 ($generated@@71 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@71 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@155 ($generated@@115 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@115 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@30 ($generated@@115 $generated@@157)) $generated@@1)
 :pattern ( ($generated@@115 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@36 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@36 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@30 ($generated@@36 $generated@@160)) $generated@@2)
 :pattern ( ($generated@@36 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@52 ($generated@@119 $generated@@161)) $generated@@10)
 :pattern ( ($generated@@119 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@56 ($generated@@119 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@119 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@57 $generated@@164 ($generated@@60 $generated@@164 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@60 $generated@@164 $generated@@163))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (< ($generated@@165 $generated@@167) ($generated@@166 ($generated@@71 $generated@@167 $generated@@168)))
 :pattern ( ($generated@@71 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (< ($generated@@165 $generated@@170) ($generated@@166 ($generated@@71 $generated@@169 $generated@@170)))
 :pattern ( ($generated@@71 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ) (!  (not ($generated@@55 ($generated@@41 $generated@@171) $generated@@172))
 :pattern ( ($generated@@55 ($generated@@41 $generated@@171) $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@73 $generated@@173 ($generated@@39 $generated@@174 $generated@@175)) (and (= ($generated@@60 $generated@@38 ($generated@@57 $generated@@38 $generated@@173)) $generated@@173) ($generated@@34 $generated@@38 ($generated@@57 $generated@@38 $generated@@173) ($generated@@39 $generated@@174 $generated@@175))))
 :pattern ( ($generated@@73 $generated@@173 ($generated@@39 $generated@@174 $generated@@175)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@73 $generated@@178 ($generated@@72 $generated@@176 $generated@@177)) (and (= ($generated@@60 $generated@@58 ($generated@@57 $generated@@58 $generated@@178)) $generated@@178) ($generated@@34 $generated@@58 ($generated@@57 $generated@@58 $generated@@178) ($generated@@72 $generated@@176 $generated@@177))))
 :pattern ( ($generated@@73 $generated@@178 ($generated@@72 $generated@@176 $generated@@177)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@179 $generated@@187 $generated@@188 $generated@@189 ($generated@@184 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@192 $generated@@193) $generated@@190)
 :weight 0
)) (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@179 $generated@@194 $generated@@195 $generated@@196 ($generated@@184 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@179 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@179 $generated@@203 $generated@@204 $generated@@205 ($generated@@184 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@179 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (= ($generated@@14 $generated@@180) 8)) (= ($generated@@14 $generated@@181) 9)) (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (= ($generated@@14 ($generated@@183 $generated@@212 $generated@@213)) 10))) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@183 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@186 ($generated@@183 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@183 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (= ($generated@@19 ($generated@@179 $generated@@180 $generated@@181 $generated@@15 ($generated@@182 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (or (not (= $generated@@222 $generated@@218)) (not true)) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@87 $generated@@181 $generated@@88 ($generated@@87 $generated@@180 ($generated@@183 $generated@@181 $generated@@88) $generated@@219 $generated@@222) $generated@@220)))) $generated@@221))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181 $generated@@15 ($generated@@182 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (and (= ($generated@@30 ($generated@@72 $generated@@225 $generated@@226)) $generated@@7) (= ($generated@@224 ($generated@@72 $generated@@225 $generated@@226)) $generated@@12))
 :pattern ( ($generated@@72 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ) (!  (or (= $generated@@227 $generated@@171) (exists (($generated@@228 T@U) ) ($generated@@55 ($generated@@41 $generated@@227) $generated@@228)))
 :pattern ( ($generated@@41 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ) (!  (or (= $generated@@230 $generated@@171) (exists (($generated@@231 T@U) ) ($generated@@55 ($generated@@229 $generated@@230) $generated@@231)))
 :pattern ( ($generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= ($generated@@55 ($generated@@232 $generated@@233) $generated@@234)  (and ($generated@@55 ($generated@@41 $generated@@233) ($generated@@149 ($generated@@57 $generated@@58 $generated@@234))) (= ($generated@@87 $generated@@88 $generated@@88 ($generated@@46 $generated@@233) ($generated@@149 ($generated@@57 $generated@@58 $generated@@234))) ($generated@@152 ($generated@@57 $generated@@58 $generated@@234)))))
 :pattern ( ($generated@@55 ($generated@@232 $generated@@233) $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= ($generated@@55 ($generated@@229 $generated@@235) $generated@@236) (exists (($generated@@237 T@U) ) (!  (and ($generated@@55 ($generated@@41 $generated@@235) $generated@@237) (= $generated@@236 ($generated@@87 $generated@@88 $generated@@88 ($generated@@46 $generated@@235) $generated@@237)))
 :pattern ( ($generated@@55 ($generated@@41 $generated@@235) $generated@@237))
 :pattern ( ($generated@@87 $generated@@88 $generated@@88 ($generated@@46 $generated@@235) $generated@@237))
)))
 :pattern ( ($generated@@55 ($generated@@229 $generated@@235) $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= ($generated@@165 ($generated@@60 $generated@@58 $generated@@238)) ($generated@@166 $generated@@238))
 :pattern ( ($generated@@165 ($generated@@60 $generated@@58 $generated@@238)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> ($generated@@73 $generated@@239 ($generated@@115 $generated@@240)) (and (= ($generated@@60 $generated@@114 ($generated@@57 $generated@@114 $generated@@239)) $generated@@239) ($generated@@34 $generated@@114 ($generated@@57 $generated@@114 $generated@@239) ($generated@@115 $generated@@240))))
 :pattern ( ($generated@@73 $generated@@239 ($generated@@115 $generated@@240)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> ($generated@@73 $generated@@241 ($generated@@36 $generated@@242)) (and (= ($generated@@60 $generated@@35 ($generated@@57 $generated@@35 $generated@@241)) $generated@@241) ($generated@@34 $generated@@35 ($generated@@57 $generated@@35 $generated@@241) ($generated@@36 $generated@@242))))
 :pattern ( ($generated@@73 $generated@@241 ($generated@@36 $generated@@242)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (= ($generated@@34 $generated@@38 $generated@@243 ($generated@@39 $generated@@244 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> ($generated@@55 ($generated@@41 $generated@@243) $generated@@246) (and ($generated@@73 ($generated@@87 $generated@@88 $generated@@88 ($generated@@46 $generated@@243) $generated@@246) $generated@@245) ($generated@@73 $generated@@246 $generated@@244)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@88 ($generated@@46 $generated@@243) $generated@@246))
 :pattern ( ($generated@@55 ($generated@@41 $generated@@243) $generated@@246))
)))
 :pattern ( ($generated@@34 $generated@@38 $generated@@243 ($generated@@39 $generated@@244 $generated@@245)))
)))
(assert (= ($generated@@30 $generated@@122) $generated@@5))
(assert (= ($generated@@224 $generated@@122) $generated@@11))
(assert (= ($generated@@30 $generated@@37) $generated@@8))
(assert (= ($generated@@224 $generated@@37) $generated@@13))
(assert (= $generated@@53 ($generated@@54 $generated@@58 $generated@@53)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> ($generated@@55 $generated@@247 ($generated@@60 $generated@@58 $generated@@248)) (< ($generated@@166 $generated@@248) ($generated@@166 ($generated@@119 $generated@@247))))
 :pattern ( ($generated@@55 $generated@@247 ($generated@@60 $generated@@58 $generated@@248)) ($generated@@119 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@87 $generated@@88 $generated@@88 $generated@@80 $generated@@249) ($generated@@60 $generated@@16 ($generated@@20 ($generated@@79 ($generated@@21 ($generated@@57 $generated@@16 $generated@@249))))))
 :pattern ( ($generated@@87 $generated@@88 $generated@@88 $generated@@80 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@87 $generated@@88 $generated@@88 $generated@@67 $generated@@250) ($generated@@60 $generated@@16 ($generated@@20 ($generated@@64 ($generated@@21 ($generated@@57 $generated@@16 $generated@@250))))))
 :pattern ( ($generated@@87 $generated@@88 $generated@@88 $generated@@67 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@87 $generated@@88 $generated@@88 $generated@@251 $generated@@253) ($generated@@60 $generated@@16 ($generated@@20 ($generated@@252 ($generated@@21 ($generated@@57 $generated@@16 $generated@@253))))))
 :pattern ( ($generated@@87 $generated@@88 $generated@@88 $generated@@251 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= ($generated@@71 ($generated@@54 $generated@@88 $generated@@254) ($generated@@54 $generated@@88 $generated@@255)) ($generated@@54 $generated@@58 ($generated@@71 $generated@@254 $generated@@255)))
 :pattern ( ($generated@@71 ($generated@@54 $generated@@88 $generated@@254) ($generated@@54 $generated@@88 $generated@@255)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@60 $generated@@16 ($generated@@20 ($generated@@61 $generated@@256))) ($generated@@54 $generated@@88 ($generated@@60 $generated@@16 ($generated@@20 $generated@@256))))
 :pattern ( ($generated@@60 $generated@@16 ($generated@@20 ($generated@@61 $generated@@256))))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@119 ($generated@@54 $generated@@114 $generated@@257)) ($generated@@54 $generated@@58 ($generated@@119 $generated@@257)))
 :pattern ( ($generated@@119 ($generated@@54 $generated@@114 $generated@@257)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@T) ) (! (= ($generated@@60 $generated@@259 ($generated@@54 $generated@@259 $generated@@258)) ($generated@@54 $generated@@88 ($generated@@60 $generated@@259 $generated@@258)))
 :pattern ( ($generated@@60 $generated@@259 ($generated@@54 $generated@@259 $generated@@258)))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= ($generated@@50 $generated@@260) 0) (= $generated@@260 $generated@@51))
 :pattern ( ($generated@@50 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 Int) ($generated@@263 Int) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 Bool) ($generated@@267 T@U) ) (! (= ($generated@@19 ($generated@@87 $generated@@88 $generated@@15 ($generated@@66 $generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265 $generated@@266) $generated@@267))  (and ($generated@@73 $generated@@267 $generated@@261) (exists (($generated@@268 Int) ($generated@@269 Int) )  (and (and (and (and (and (<= $generated@@262 $generated@@268) (< $generated@@268 $generated@@263)) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@264 $generated@@268)))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@265 $generated@@268))) ($generated@@60 $generated@@16 ($generated@@20 $generated@@269)))) $generated@@266) (= ($generated@@21 ($generated@@57 $generated@@16 $generated@@267)) $generated@@269)))))
 :pattern ( ($generated@@87 $generated@@88 $generated@@15 ($generated@@66 $generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265 $generated@@266) $generated@@267))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@270 ($generated@@36 $generated@@271)) (forall (($generated@@272 Int) ) (!  (=> (and (<= 0 $generated@@272) (< $generated@@272 ($generated@@50 $generated@@270))) ($generated@@73 ($generated@@59 $generated@@270 $generated@@272) $generated@@271))
 :pattern ( ($generated@@59 $generated@@270 $generated@@272))
)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@270 ($generated@@36 $generated@@271)))
)))
(assert (forall (($generated@@273 T@U) ) (!  (or (= $generated@@273 $generated@@171) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) ($generated@@55 ($generated@@232 $generated@@273) ($generated@@60 $generated@@58 ($generated@@71 $generated@@274 $generated@@275)))))
 :pattern ( ($generated@@232 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 Int) ) (!  (=> (and (<= 0 $generated@@278) (< $generated@@278 ($generated@@50 $generated@@277))) (< ($generated@@166 ($generated@@57 $generated@@58 ($generated@@59 $generated@@277 $generated@@278))) ($generated@@276 $generated@@277)))
 :pattern ( ($generated@@166 ($generated@@57 $generated@@58 ($generated@@59 $generated@@277 $generated@@278))))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> ($generated@@34 $generated@@38 $generated@@279 ($generated@@39 $generated@@280 $generated@@281)) (and (and ($generated@@34 $generated@@114 ($generated@@41 $generated@@279) ($generated@@115 $generated@@280)) ($generated@@34 $generated@@114 ($generated@@229 $generated@@279) ($generated@@115 $generated@@281))) ($generated@@34 $generated@@114 ($generated@@232 $generated@@279) ($generated@@115 ($generated@@72 $generated@@280 $generated@@281)))))
 :pattern ( ($generated@@34 $generated@@38 $generated@@279 ($generated@@39 $generated@@280 $generated@@281)))
)))
(assert (forall (($generated@@282 T@U) ) (! ($generated@@34 $generated@@16 $generated@@282 $generated)
 :pattern ( ($generated@@34 $generated@@16 $generated@@282 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@283 () Int)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 () Int)
(declare-fun $generated@@286 () Int)
(declare-fun $generated@@287 () Int)
(declare-fun $generated@@288 () T@U)
(declare-fun $generated@@289 () T@U)
(declare-fun $generated@@290 () T@U)
(declare-fun $generated@@291 (T@U) Bool)
(declare-fun $generated@@292 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@293 true))
(let (($generated@@294  (=> (and (not (and (and (and (and (and (<= ($generated@@61 0) $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283)))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283))) ($generated@@60 $generated@@16 ($generated@@20 $generated@@285)))) (or (not (= 1 2)) (not true))) (and (and (and (and (<= ($generated@@61 0) $generated@@286) (< $generated@@286 ($generated@@50 $generated@@284))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@286)))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@286))) ($generated@@60 $generated@@16 ($generated@@20 $generated@@287)))) (or (not (= 1 2)) (not true))))) (= (ControlFlow 0 6) 3)) $generated@@293)))
(let (($generated@@295  (=> (and (and (and (and (and (<= ($generated@@61 0) $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283)))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283))) ($generated@@60 $generated@@16 ($generated@@20 $generated@@285)))) (or (not (= 1 2)) (not true))) (and (and (and (and (<= ($generated@@61 0) $generated@@286) (< $generated@@286 ($generated@@50 $generated@@284))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@286)))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@286))) ($generated@@60 $generated@@16 ($generated@@20 $generated@@287)))) (or (not (= 1 2)) (not true)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (or (not (= $generated@@285 $generated@@287)) (not true)) (= $generated@@285 $generated@@287))) (=> (or (or (not (= $generated@@285 $generated@@287)) (not true)) (= $generated@@285 $generated@@287)) (=> (= (ControlFlow 0 4) 3) $generated@@293))))))
(let (($generated@@296  (=> (not (and (and (and (and (<= ($generated@@61 0) $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283)))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283))) ($generated@@60 $generated@@16 ($generated@@20 $generated@@285)))) (or (not (= 1 2)) (not true)))) (and (=> (= (ControlFlow 0 8) 4) $generated@@295) (=> (= (ControlFlow 0 8) 6) $generated@@294)))))
(let (($generated@@297  (=> (and (and (and (and (<= ($generated@@61 0) $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283)))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283))) ($generated@@60 $generated@@16 ($generated@@20 $generated@@285)))) (or (not (= 1 2)) (not true))) (and (=> (= (ControlFlow 0 7) 4) $generated@@295) (=> (= (ControlFlow 0 7) 6) $generated@@294)))))
(let (($generated@@298  (=> (not (and (and (and (and (<= ($generated@@61 0) $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283)))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283))) ($generated@@60 $generated@@16 ($generated@@20 $generated@@285)))) (or (not (= 1 2)) (not true)))) (and (=> (= (ControlFlow 0 10) 7) $generated@@297) (=> (= (ControlFlow 0 10) 8) $generated@@296)))))
(let (($generated@@299  (=> (and (and (and (and (<= ($generated@@61 0) $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283)))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283))) ($generated@@60 $generated@@16 ($generated@@20 $generated@@285)))) (or (not (= 1 2)) (not true))) (and (=> (= (ControlFlow 0 9) 7) $generated@@297) (=> (= (ControlFlow 0 9) 8) $generated@@296)))))
(let (($generated@@300  (=> (not (and (and (and (<= ($generated@@61 0) $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283)))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283))) ($generated@@60 $generated@@16 ($generated@@20 $generated@@285))))) (and (=> (= (ControlFlow 0 12) 9) $generated@@299) (=> (= (ControlFlow 0 12) 10) $generated@@298)))))
(let (($generated@@301  (=> (and (and (and (<= ($generated@@61 0) $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283)))) ($generated@@55 ($generated@@56 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283))) ($generated@@60 $generated@@16 ($generated@@20 $generated@@285)))) (and (=> (= (ControlFlow 0 11) 9) $generated@@299) (=> (= (ControlFlow 0 11) 10) $generated@@298)))))
(let (($generated@@302  (=> (not (and (and (<= ($generated@@61 0) $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283))))) (and (=> (= (ControlFlow 0 16) 11) $generated@@301) (=> (= (ControlFlow 0 16) 12) $generated@@300)))))
(let (($generated@@303  (=> (and (and (<= ($generated@@61 0) $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284))) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283)))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (and (<= 0 $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284)))) (=> (and (<= 0 $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284))) (and (=> (= (ControlFlow 0 13) (- 0 14)) ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283)))) (=> ($generated@@62 ($generated@@57 $generated@@58 ($generated@@59 $generated@@284 $generated@@283))) (and (=> (= (ControlFlow 0 13) 11) $generated@@301) (=> (= (ControlFlow 0 13) 12) $generated@@300)))))))))
(let (($generated@@304  (=> (not (and (<= ($generated@@61 0) $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284)))) (and (=> (= (ControlFlow 0 19) 13) $generated@@303) (=> (= (ControlFlow 0 19) 16) $generated@@302)))))
(let (($generated@@305  (=> (and (<= ($generated@@61 0) $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284))) (and (=> (= (ControlFlow 0 17) (- 0 18)) (and (<= 0 $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284)))) (=> (and (<= 0 $generated@@283) (< $generated@@283 ($generated@@50 $generated@@284))) (and (=> (= (ControlFlow 0 17) 13) $generated@@303) (=> (= (ControlFlow 0 17) 16) $generated@@302)))))))
(let (($generated@@306  (=> (< $generated@@283 ($generated@@61 0)) (and (=> (= (ControlFlow 0 21) 17) $generated@@305) (=> (= (ControlFlow 0 21) 19) $generated@@304)))))
(let (($generated@@307  (=> (<= ($generated@@61 0) $generated@@283) (and (=> (= (ControlFlow 0 20) 17) $generated@@305) (=> (= (ControlFlow 0 20) 19) $generated@@304)))))
(let (($generated@@308  (and (=> (= (ControlFlow 0 22) 20) $generated@@307) (=> (= (ControlFlow 0 22) 21) $generated@@306))))
(let (($generated@@309 true))
(let (($generated@@310 true))
(let (($generated@@311  (=> (= $generated@@288 ($generated@@182 $generated@@289 $generated@@290 $generated@@4 false)) (and (and (=> (= (ControlFlow 0 23) 1) $generated@@310) (=> (= (ControlFlow 0 23) 22) $generated@@308)) (=> (= (ControlFlow 0 23) 2) $generated@@309)))))
(let (($generated@@312  (=> (and (and (and ($generated@@291 $generated@@290) ($generated@@292 $generated@@290)) ($generated@@34 $generated@@35 $generated@@284 ($generated@@36 $generated@@37))) (and (= 1 $generated@@31) (= (ControlFlow 0 24) 23))) $generated@@311)))
$generated@@312)))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
