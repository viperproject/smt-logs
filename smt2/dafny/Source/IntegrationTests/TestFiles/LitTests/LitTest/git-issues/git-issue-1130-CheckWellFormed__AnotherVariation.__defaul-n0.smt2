(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@T T@T) T@T)
(declare-fun $generated@@61 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@T T@U T@U) Bool)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@107 (T@U T@U T@U) Bool)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@159 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert  (and (= ($generated@@7 $generated@@25) 3) (= ($generated@@7 $generated@@31) 4)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and (or ($generated@@29 $generated@@35 $generated@@36) (and (< 0 $generated@@23) (and (or (not (= $generated@@36 $generated@@30)) (not true)) ($generated@@24 $generated@@31 $generated@@36 ($generated@@32 $generated@@35) $generated@@34)))) ($generated@@33 $generated@@34)) ($generated@@24 $generated@@25 ($generated@@26 $generated@@35 $generated@@36) ($generated@@27 $generated@@28) $generated@@34))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@26 $generated@@35 $generated@@36) ($generated@@27 $generated@@28) $generated@@34))
))))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! ($generated@@38 ($generated@@37 $generated@@39 $generated@@40) $generated@@40)
 :pattern ( ($generated@@37 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@38 $generated@@41 $generated@@43) ($generated@@38 ($generated@@37 $generated@@41 $generated@@42) $generated@@43))
 :pattern ( ($generated@@37 $generated@@41 $generated@@42) ($generated@@38 $generated@@41 $generated@@43))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@38 ($generated@@37 $generated@@44 $generated@@45) $generated@@46)  (or (= $generated@@46 $generated@@45) ($generated@@38 $generated@@44 $generated@@46)))
 :pattern ( ($generated@@38 ($generated@@37 $generated@@44 $generated@@45) $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@24 $generated@@31 $generated@@49 ($generated@@32 $generated@@48) $generated@@50) ($generated@@24 $generated@@31 $generated@@49 ($generated@@47 $generated@@48) $generated@@50))
 :pattern ( ($generated@@24 $generated@@31 $generated@@49 ($generated@@32 $generated@@48) $generated@@50))
 :pattern ( ($generated@@24 $generated@@31 $generated@@49 ($generated@@47 $generated@@48) $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (!  (not ($generated@@38 $generated@@51 $generated@@52))
 :pattern ( ($generated@@38 $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@24 $generated@@31 $generated@@54 $generated@@28 $generated@@55) ($generated@@24 $generated@@31 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@24 $generated@@31 $generated@@54 $generated@@28 $generated@@55))
 :pattern ( ($generated@@24 $generated@@31 $generated@@54 $generated@@53 $generated@@55))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@57 $generated@@64 $generated@@65 ($generated@@61 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@68) $generated@@66)
 :weight 0
)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (or (= $generated@@73 $generated@@74) (= ($generated@@57 $generated@@69 $generated@@70 ($generated@@61 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@74) ($generated@@57 $generated@@69 $generated@@70 $generated@@72 $generated@@74)))
 :weight 0
))) (= ($generated@@7 $generated@@58) 5)) (= ($generated@@7 $generated@@59) 6)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@7 ($generated@@60 $generated@@75 $generated@@76)) 7))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@62 ($generated@@60 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@60 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@63 ($generated@@60 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@60 $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@24 $generated@@31 $generated@@82 ($generated@@47 $generated@@81) $generated@@83)  (or (= $generated@@82 $generated@@30) ($generated@@12 ($generated@@56 $generated@@8 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@31 ($generated@@60 $generated@@58 $generated@@59) $generated@@83 $generated@@82) $generated@@0)))))
 :pattern ( ($generated@@24 $generated@@31 $generated@@82 ($generated@@47 $generated@@81) $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@24 $generated@@31 $generated@@84 $generated@@53 $generated@@85)  (or (= $generated@@84 $generated@@30) ($generated@@12 ($generated@@56 $generated@@8 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@31 ($generated@@60 $generated@@58 $generated@@59) $generated@@85 $generated@@84) $generated@@0)))))
 :pattern ( ($generated@@24 $generated@@31 $generated@@84 $generated@@53 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@86 $generated@@87 $generated@@88) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@12 ($generated@@56 $generated@@8 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@31 ($generated@@60 $generated@@58 $generated@@59) $generated@@87 $generated@@89) $generated@@0))) ($generated@@12 ($generated@@56 $generated@@8 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@31 ($generated@@60 $generated@@58 $generated@@59) $generated@@88 $generated@@89) $generated@@0))))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@31 ($generated@@60 $generated@@58 $generated@@59) $generated@@88 $generated@@89) $generated@@0))
)))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 $generated@@91) $generated@@91)
 :pattern ( ($generated@@90 $generated@@92 $generated@@91))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or ($generated@@29 $generated@@95 ($generated@@90 $generated@@31 $generated@@96)) (and (< 0 $generated@@23) (and (or (not (= $generated@@96 $generated@@30)) (not true)) ($generated@@93 $generated@@31 $generated@@96 ($generated@@32 $generated@@95))))) (= ($generated@@26 $generated@@95 ($generated@@90 $generated@@31 $generated@@96)) ($generated@@90 $generated@@25 ($generated@@37 $generated@@51 ($generated@@94 $generated@@31 ($generated@@90 $generated@@31 $generated@@96))))))
 :weight 3
 :pattern ( ($generated@@26 $generated@@95 ($generated@@90 $generated@@31 $generated@@96)))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@94 $generated@@98 ($generated@@56 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@56 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@93 $generated@@25 $generated@@100 ($generated@@27 $generated@@101)) (forall (($generated@@102 T@U) ) (!  (=> ($generated@@38 $generated@@100 $generated@@102) ($generated@@99 $generated@@102 $generated@@101))
 :pattern ( ($generated@@38 $generated@@100 $generated@@102))
)))
 :pattern ( ($generated@@93 $generated@@25 $generated@@100 ($generated@@27 $generated@@101)))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@29 $generated@@103 $generated@@104) (and (< 0 $generated@@23) (and (or (not (= $generated@@104 $generated@@30)) (not true)) ($generated@@93 $generated@@31 $generated@@104 ($generated@@32 $generated@@103))))) ($generated@@93 $generated@@25 ($generated@@26 $generated@@103 $generated@@104) ($generated@@27 $generated@@28)))
 :pattern ( ($generated@@26 $generated@@103 $generated@@104))
))))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@93 $generated@@31 $generated@@106 ($generated@@32 $generated@@105))  (and ($generated@@93 $generated@@31 $generated@@106 ($generated@@47 $generated@@105)) (or (not (= $generated@@106 $generated@@30)) (not true))))
 :pattern ( ($generated@@93 $generated@@31 $generated@@106 ($generated@@32 $generated@@105)))
 :pattern ( ($generated@@93 $generated@@31 $generated@@106 ($generated@@47 $generated@@105)))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@107 ($generated@@94 $generated@@111 $generated@@108) $generated@@109 $generated@@110) ($generated@@24 $generated@@111 $generated@@108 $generated@@109 $generated@@110))
 :pattern ( ($generated@@107 ($generated@@94 $generated@@111 $generated@@108) $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> ($generated@@86 $generated@@112 $generated@@113) (=> ($generated@@107 $generated@@114 $generated@@115 $generated@@112) ($generated@@107 $generated@@114 $generated@@115 $generated@@113)))
 :pattern ( ($generated@@86 $generated@@112 $generated@@113) ($generated@@107 $generated@@114 $generated@@115 $generated@@112))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@T) ) (!  (=> ($generated@@86 $generated@@116 $generated@@117) (=> ($generated@@24 $generated@@120 $generated@@118 $generated@@119 $generated@@116) ($generated@@24 $generated@@120 $generated@@118 $generated@@119 $generated@@117)))
 :pattern ( ($generated@@86 $generated@@116 $generated@@117) ($generated@@24 $generated@@120 $generated@@118 $generated@@119 $generated@@116))
)))
(assert (forall (($generated@@123 T@U) ) (!  (and (= ($generated@@121 ($generated@@32 $generated@@123)) $generated@@3) (= ($generated@@122 ($generated@@32 $generated@@123)) $generated@@6))
 :pattern ( ($generated@@32 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (!  (and (= ($generated@@121 ($generated@@47 $generated@@124)) $generated@@4) (= ($generated@@122 ($generated@@47 $generated@@124)) $generated@@6))
 :pattern ( ($generated@@47 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@99 $generated@@125 $generated@@53) (and (= ($generated@@94 $generated@@31 ($generated@@56 $generated@@31 $generated@@125)) $generated@@125) ($generated@@93 $generated@@31 ($generated@@56 $generated@@31 $generated@@125) $generated@@53)))
 :pattern ( ($generated@@99 $generated@@125 $generated@@53))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@99 $generated@@126 $generated@@28) (and (= ($generated@@94 $generated@@31 ($generated@@56 $generated@@31 $generated@@126)) $generated@@126) ($generated@@93 $generated@@31 ($generated@@56 $generated@@31 $generated@@126) $generated@@28)))
 :pattern ( ($generated@@99 $generated@@126 $generated@@28))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@93 $generated@@31 $generated@@129 ($generated@@47 $generated@@128))  (or (= $generated@@129 $generated@@30) (= ($generated@@127 $generated@@129) ($generated@@47 $generated@@128))))
 :pattern ( ($generated@@93 $generated@@31 $generated@@129 ($generated@@47 $generated@@128)))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@93 $generated@@31 $generated@@130 $generated@@28)  (and ($generated@@93 $generated@@31 $generated@@130 $generated@@53) (or (not (= $generated@@130 $generated@@30)) (not true))))
 :pattern ( ($generated@@93 $generated@@31 $generated@@130 $generated@@28))
 :pattern ( ($generated@@93 $generated@@31 $generated@@130 $generated@@53))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (or (not (= $generated@@131 $generated@@133)) (not true)) (=> (and ($generated@@86 $generated@@131 $generated@@132) ($generated@@86 $generated@@132 $generated@@133)) ($generated@@86 $generated@@131 $generated@@133)))
 :pattern ( ($generated@@86 $generated@@131 $generated@@132) ($generated@@86 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@99 ($generated@@94 $generated@@136 $generated@@134) $generated@@135) ($generated@@93 $generated@@136 $generated@@134 $generated@@135))
 :pattern ( ($generated@@99 ($generated@@94 $generated@@136 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@137 ($generated@@27 $generated@@138) $generated@@139) (forall (($generated@@140 T@U) ) (!  (=> ($generated@@38 $generated@@137 $generated@@140) ($generated@@107 $generated@@140 $generated@@138 $generated@@139))
 :pattern ( ($generated@@38 $generated@@137 $generated@@140))
)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@137 ($generated@@27 $generated@@138) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! ($generated@@93 $generated@@31 $generated@@141 $generated@@53)
 :pattern ( ($generated@@93 $generated@@31 $generated@@141 $generated@@53))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@27 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@27 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@121 ($generated@@27 $generated@@144)) $generated)
 :pattern ( ($generated@@27 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@32 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@32 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@147 ($generated@@47 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@47 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@56 $generated@@150 ($generated@@94 $generated@@150 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@94 $generated@@150 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@99 $generated@@151 ($generated@@27 $generated@@152)) (and (= ($generated@@94 $generated@@25 ($generated@@56 $generated@@25 $generated@@151)) $generated@@151) ($generated@@93 $generated@@25 ($generated@@56 $generated@@25 $generated@@151) ($generated@@27 $generated@@152))))
 :pattern ( ($generated@@99 $generated@@151 ($generated@@27 $generated@@152)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> ($generated@@99 $generated@@154 ($generated@@32 $generated@@153)) (and (= ($generated@@94 $generated@@31 ($generated@@56 $generated@@31 $generated@@154)) $generated@@154) ($generated@@93 $generated@@31 ($generated@@56 $generated@@31 $generated@@154) ($generated@@32 $generated@@153))))
 :pattern ( ($generated@@99 $generated@@154 ($generated@@32 $generated@@153)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@99 $generated@@156 ($generated@@47 $generated@@155)) (and (= ($generated@@94 $generated@@31 ($generated@@56 $generated@@31 $generated@@156)) $generated@@156) ($generated@@93 $generated@@31 ($generated@@56 $generated@@31 $generated@@156) ($generated@@47 $generated@@155))))
 :pattern ( ($generated@@99 $generated@@156 ($generated@@47 $generated@@155)))
)))
(assert (= ($generated@@121 $generated@@53) $generated@@1))
(assert (= ($generated@@122 $generated@@53) $generated@@5))
(assert (= ($generated@@121 $generated@@28) $generated@@2))
(assert (= ($generated@@122 $generated@@28) $generated@@5))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@T) ) (! (= ($generated@@94 $generated@@158 ($generated@@90 $generated@@158 $generated@@157)) ($generated@@90 $generated@@59 ($generated@@94 $generated@@158 $generated@@157)))
 :pattern ( ($generated@@94 $generated@@158 ($generated@@90 $generated@@158 $generated@@157)))
)))
(assert  (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@159 $generated@@162 $generated@@163 $generated@@164 ($generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@167 $generated@@168) $generated@@165)
 :weight 0
)) (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@159 $generated@@169 $generated@@170 $generated@@171 ($generated@@161 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@159 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@159 $generated@@178 $generated@@179 $generated@@180 ($generated@@161 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@159 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@12 ($generated@@159 $generated@@31 $generated@@58 $generated@@8 ($generated@@160 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@12 ($generated@@56 $generated@@8 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@31 ($generated@@60 $generated@@58 $generated@@59) $generated@@188 $generated@@191) $generated@@189)))) ($generated@@38 $generated@@190 ($generated@@94 $generated@@31 $generated@@191))))
 :pattern ( ($generated@@159 $generated@@31 $generated@@58 $generated@@8 ($generated@@160 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (or ($generated@@29 $generated@@193 $generated@@194) (and (< 0 $generated@@23) (and (or (not (= $generated@@194 $generated@@30)) (not true)) ($generated@@93 $generated@@31 $generated@@194 ($generated@@32 $generated@@193))))) (= ($generated@@26 $generated@@193 $generated@@194) ($generated@@37 $generated@@51 ($generated@@94 $generated@@31 $generated@@194))))
 :pattern ( ($generated@@26 $generated@@193 $generated@@194))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@200  (=> (and (= $generated@@195 ($generated@@160 $generated@@30 $generated@@196 $generated@@0 ($generated@@26 $generated@@197 $generated@@198))) (= (ControlFlow 0 2) (- 0 1))) (or (not (= $generated@@198 $generated@@30)) (not true)))))
(let (($generated@@201  (=> (and ($generated@@33 $generated@@196) ($generated@@199 $generated@@196)) (=> (and (and ($generated@@93 $generated@@31 $generated@@198 ($generated@@32 $generated@@197)) ($generated@@24 $generated@@31 $generated@@198 ($generated@@32 $generated@@197) $generated@@196)) (and (= 2 $generated@@23) (= (ControlFlow 0 3) 2))) $generated@@200))))
$generated@@201)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
