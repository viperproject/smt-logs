(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U Int) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U T@U) T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@63 (T@U T@U T@U) Bool)
(declare-fun $generated@@64 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@113 (Int) T@U)
(declare-fun $generated@@114 (T@U) Int)
(declare-fun $generated@@116 (T@U) Int)
(declare-fun $generated@@118 (T@U) Int)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@T) T@T)
(declare-fun $generated@@133 (T@T) T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@1))
(assert (= ($generated@@25 $generated@@0) $generated@@2))
(assert (= ($generated@@9 $generated@@31) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 Int) ) (!  (=> (and (<= 0 $generated@@33) (< $generated@@33 ($generated@@28 $generated@@32))) (< ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@32 $generated@@33))) ($generated@@29 ($generated@@27 $generated@@32))))
 :pattern ( ($generated@@26 $generated@@32 $generated@@33) ($generated@@27 $generated@@32))
)))
(assert (= ($generated@@28 $generated@@34) 0))
(assert (forall (($generated@@36 Int) ) (! (= ($generated@@35 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@37 $generated@@39 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@39 $generated@@38))
)))
(assert (= ($generated@@9 $generated@@41) 4))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (and ($generated@@40 $generated@@41 $generated@@45 ($generated@@43 $generated@@47)) ($generated@@44 $generated@@46 $generated@@47)) ($generated@@40 $generated@@41 ($generated@@42 $generated@@45 $generated@@46) ($generated@@43 $generated@@47)))
 :pattern ( ($generated@@40 $generated@@41 ($generated@@42 $generated@@45 $generated@@46) ($generated@@43 $generated@@47)))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@48 $generated@@50) (= ($generated@@49 $generated@@50) $generated@@6))
 :pattern ( ($generated@@48 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 $generated@@52) (= ($generated@@49 $generated@@52) $generated@@7))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 ($generated@@30 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@30 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@48 $generated@@57) (exists (($generated@@58 T@U) ) (= $generated@@57 ($generated@@56 $generated@@58))))
 :pattern ( ($generated@@48 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@51 $generated@@59) (exists (($generated@@60 T@U) ) (= $generated@@59 ($generated@@27 $generated@@60))))
 :pattern ( ($generated@@51 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@28 ($generated@@42 $generated@@61 $generated@@62)) (+ 1 ($generated@@28 $generated@@61)))
 :pattern ( ($generated@@42 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@63 ($generated@@53 $generated@@68 $generated@@65) $generated@@66 $generated@@67) ($generated@@64 $generated@@68 $generated@@65 $generated@@66 $generated@@67))
 :pattern ( ($generated@@63 ($generated@@53 $generated@@68 $generated@@65) $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@71 T@U) ) (!  (and (= ($generated@@25 ($generated@@69 $generated@@71)) $generated@@5) (= ($generated@@70 ($generated@@69 $generated@@71)) $generated@@8))
 :pattern ( ($generated@@69 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 Int) ($generated@@74 T@U) ) (!  (and (=> (= $generated@@73 ($generated@@28 $generated@@72)) (= ($generated@@26 ($generated@@42 $generated@@72 $generated@@74) $generated@@73) $generated@@74)) (=> (or (not (= $generated@@73 ($generated@@28 $generated@@72))) (not true)) (= ($generated@@26 ($generated@@42 $generated@@72 $generated@@74) $generated@@73) ($generated@@26 $generated@@72 $generated@@73))))
 :pattern ( ($generated@@26 ($generated@@42 $generated@@72 $generated@@74) $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@75 $generated@@78) (= ($generated@@64 $generated@@31 ($generated@@56 $generated@@77) ($generated@@69 $generated@@76) $generated@@78) ($generated@@63 $generated@@77 $generated@@76 $generated@@78)))
 :pattern ( ($generated@@64 $generated@@31 ($generated@@56 $generated@@77) ($generated@@69 $generated@@76) $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and ($generated@@75 $generated@@81) (and ($generated@@51 $generated@@80) (exists (($generated@@82 T@U) ) (! ($generated@@64 $generated@@31 $generated@@80 ($generated@@69 $generated@@82) $generated@@81)
 :pattern ( ($generated@@64 $generated@@31 $generated@@80 ($generated@@69 $generated@@82) $generated@@81))
)))) ($generated@@64 $generated@@41 ($generated@@79 $generated@@80) ($generated@@43 $generated) $generated@@81))
 :pattern ( ($generated@@64 $generated@@41 ($generated@@79 $generated@@80) ($generated@@43 $generated) $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@75 $generated@@85) (= ($generated@@64 $generated@@31 ($generated@@27 $generated@@84) ($generated@@69 $generated@@83) $generated@@85) ($generated@@64 $generated@@41 $generated@@84 ($generated@@43 $generated) $generated@@85)))
 :pattern ( ($generated@@64 $generated@@31 ($generated@@27 $generated@@84) ($generated@@69 $generated@@83) $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@40 $generated@@31 $generated@@87 ($generated@@69 $generated@@86)) (or ($generated@@48 $generated@@87) ($generated@@51 $generated@@87)))
 :pattern ( ($generated@@51 $generated@@87) ($generated@@40 $generated@@31 $generated@@87 ($generated@@69 $generated@@86)))
 :pattern ( ($generated@@48 $generated@@87) ($generated@@40 $generated@@31 $generated@@87 ($generated@@69 $generated@@86)))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@44 $generated@@88 $generated@@0) (and (= ($generated@@53 $generated@@11 ($generated@@30 $generated@@11 $generated@@88)) $generated@@88) ($generated@@40 $generated@@11 ($generated@@30 $generated@@11 $generated@@88) $generated@@0)))
 :pattern ( ($generated@@44 $generated@@88 $generated@@0))
)))
(assert (= ($generated@@9 $generated@@89) 5))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@44 $generated@@90 $generated) (and (= ($generated@@53 $generated@@89 ($generated@@30 $generated@@89 $generated@@90)) $generated@@90) ($generated@@40 $generated@@89 ($generated@@30 $generated@@89 $generated@@90) $generated)))
 :pattern ( ($generated@@44 $generated@@90 $generated))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@44 ($generated@@53 $generated@@93 $generated@@91) $generated@@92) ($generated@@40 $generated@@93 $generated@@91 $generated@@92))
 :pattern ( ($generated@@44 ($generated@@53 $generated@@93 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (! (<= 0 ($generated@@28 $generated@@94))
 :pattern ( ($generated@@28 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@64 $generated@@41 $generated@@95 ($generated@@43 $generated@@96) $generated@@97) (forall (($generated@@98 Int) ) (!  (=> (and (<= 0 $generated@@98) (< $generated@@98 ($generated@@28 $generated@@95))) ($generated@@63 ($generated@@26 $generated@@95 $generated@@98) $generated@@96 $generated@@97))
 :pattern ( ($generated@@26 $generated@@95 $generated@@98))
)))
 :pattern ( ($generated@@64 $generated@@41 $generated@@95 ($generated@@43 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@99 ($generated@@43 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@43 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@25 ($generated@@43 $generated@@101)) $generated@@3)
 :pattern ( ($generated@@43 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@102 ($generated@@69 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@69 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@49 ($generated@@56 $generated@@104)) $generated@@6)
 :pattern ( ($generated@@56 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@105 ($generated@@56 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@56 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@49 ($generated@@27 $generated@@107)) $generated@@7)
 :pattern ( ($generated@@27 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@79 ($generated@@27 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@27 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@30 $generated@@110 ($generated@@53 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@53 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@40 $generated@@31 ($generated@@56 $generated@@112) ($generated@@69 $generated@@111)) ($generated@@44 $generated@@112 $generated@@111))
 :pattern ( ($generated@@40 $generated@@31 ($generated@@56 $generated@@112) ($generated@@69 $generated@@111)))
)))
(assert (forall (($generated@@115 Int) ) (!  (=> (or (and (<= 0 $generated@@115) (< $generated@@115 55296)) (and (<= 57344 $generated@@115) (< $generated@@115 1114112))) (= ($generated@@114 ($generated@@113 $generated@@115)) $generated@@115))
 :pattern ( ($generated@@113 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (< ($generated@@116 $generated@@117) ($generated@@29 ($generated@@56 $generated@@117)))
 :pattern ( ($generated@@56 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (< ($generated@@118 $generated@@119) ($generated@@29 ($generated@@27 $generated@@119)))
 :pattern ( ($generated@@27 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@75 $generated@@122) (and ($generated@@48 $generated@@120) ($generated@@64 $generated@@31 $generated@@120 ($generated@@69 $generated@@121) $generated@@122))) ($generated@@63 ($generated@@105 $generated@@120) $generated@@121 $generated@@122))
 :pattern ( ($generated@@63 ($generated@@105 $generated@@120) $generated@@121 $generated@@122))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@123 $generated@@134 $generated@@135 $generated@@136 ($generated@@130 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@139 $generated@@140) $generated@@137)
 :weight 0
)) (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@123 $generated@@141 $generated@@142 $generated@@143 ($generated@@130 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@123 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@123 $generated@@150 $generated@@151 $generated@@152 ($generated@@130 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))) (= ($generated@@9 $generated@@124) 6)) (= ($generated@@9 $generated@@125) 7)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@127 $generated@@159 $generated@@160 ($generated@@131 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@163) $generated@@161)
 :weight 0
))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@168 $generated@@169) (= ($generated@@127 $generated@@164 $generated@@165 ($generated@@131 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@166) $generated@@169) ($generated@@127 $generated@@164 $generated@@165 $generated@@167 $generated@@169)))
 :weight 0
))) (= ($generated@@9 $generated@@128) 8)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@9 ($generated@@129 $generated@@170 $generated@@171)) 9))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@132 ($generated@@129 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@129 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@133 ($generated@@129 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@129 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@14 ($generated@@123 $generated@@124 $generated@@125 $generated@@10 ($generated@@126 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (or (not (= $generated@@180 $generated@@176)) (not true)) ($generated@@14 ($generated@@30 $generated@@10 ($generated@@127 $generated@@125 $generated@@128 ($generated@@127 $generated@@124 ($generated@@129 $generated@@125 $generated@@128) $generated@@177 $generated@@180) $generated@@178)))) $generated@@179))
 :pattern ( ($generated@@123 $generated@@124 $generated@@125 $generated@@10 ($generated@@126 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (and (= ($generated@@182 ($generated@@42 $generated@@184 $generated@@185)) $generated@@184) (= ($generated@@183 ($generated@@42 $generated@@184 $generated@@185)) $generated@@185))
 :pattern ( ($generated@@42 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@116 ($generated@@53 $generated@@31 $generated@@186)) ($generated@@29 $generated@@186))
 :pattern ( ($generated@@116 ($generated@@53 $generated@@31 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@44 $generated@@187 ($generated@@43 $generated@@188)) (and (= ($generated@@53 $generated@@41 ($generated@@30 $generated@@41 $generated@@187)) $generated@@187) ($generated@@40 $generated@@41 ($generated@@30 $generated@@41 $generated@@187) ($generated@@43 $generated@@188))))
 :pattern ( ($generated@@44 $generated@@187 ($generated@@43 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@44 $generated@@190 ($generated@@69 $generated@@189)) (and (= ($generated@@53 $generated@@31 ($generated@@30 $generated@@31 $generated@@190)) $generated@@190) ($generated@@40 $generated@@31 ($generated@@30 $generated@@31 $generated@@190) ($generated@@69 $generated@@189))))
 :pattern ( ($generated@@44 $generated@@190 ($generated@@69 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@40 $generated@@31 ($generated@@27 $generated@@192) ($generated@@69 $generated@@191)) ($generated@@40 $generated@@41 $generated@@192 ($generated@@43 $generated)))
 :pattern ( ($generated@@40 $generated@@31 ($generated@@27 $generated@@192) ($generated@@69 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ) (!  (and (= ($generated@@113 ($generated@@114 $generated@@193)) $generated@@193) (or (and (<= 0 ($generated@@114 $generated@@193)) (< ($generated@@114 $generated@@193) 55296)) (and (<= 57344 ($generated@@114 $generated@@193)) (< ($generated@@114 $generated@@193) 1114112))))
 :pattern ( ($generated@@114 $generated@@193))
)))
(assert (forall (($generated@@194 Int) ) (! (= ($generated@@53 $generated@@11 ($generated@@15 ($generated@@35 $generated@@194))) ($generated@@37 $generated@@128 ($generated@@53 $generated@@11 ($generated@@15 $generated@@194))))
 :pattern ( ($generated@@53 $generated@@11 ($generated@@15 ($generated@@35 $generated@@194))))
)))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@56 ($generated@@37 $generated@@128 $generated@@195)) ($generated@@37 $generated@@31 ($generated@@56 $generated@@195)))
 :pattern ( ($generated@@56 ($generated@@37 $generated@@128 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@27 ($generated@@37 $generated@@41 $generated@@196)) ($generated@@37 $generated@@31 ($generated@@27 $generated@@196)))
 :pattern ( ($generated@@27 ($generated@@37 $generated@@41 $generated@@196)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@T) ) (! (= ($generated@@53 $generated@@198 ($generated@@37 $generated@@198 $generated@@197)) ($generated@@37 $generated@@128 ($generated@@53 $generated@@198 $generated@@197)))
 :pattern ( ($generated@@53 $generated@@198 ($generated@@37 $generated@@198 $generated@@197)))
)))
(assert (forall (($generated@@199 T@U) ) (!  (=> (= ($generated@@28 $generated@@199) 0) (= $generated@@199 $generated@@34))
 :pattern ( ($generated@@28 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! ($generated@@64 $generated@@11 $generated@@201 $generated@@0 $generated@@200)
 :pattern ( ($generated@@64 $generated@@11 $generated@@201 $generated@@0 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! ($generated@@64 $generated@@89 $generated@@203 $generated $generated@@202)
 :pattern ( ($generated@@64 $generated@@89 $generated@@203 $generated $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@204 ($generated@@43 $generated@@205)) (forall (($generated@@206 Int) ) (!  (=> (and (<= 0 $generated@@206) (< $generated@@206 ($generated@@28 $generated@@204))) ($generated@@44 ($generated@@26 $generated@@204 $generated@@206) $generated@@205))
 :pattern ( ($generated@@26 $generated@@204 $generated@@206))
)))
 :pattern ( ($generated@@40 $generated@@41 $generated@@204 ($generated@@43 $generated@@205)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 Int) ) (!  (=> (and (<= 0 $generated@@208) (< $generated@@208 ($generated@@28 $generated@@207))) (< ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@207 $generated@@208))) ($generated@@118 $generated@@207)))
 :pattern ( ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@207 $generated@@208))))
)))
(assert (forall (($generated@@209 T@U) ) (! ($generated@@40 $generated@@11 $generated@@209 $generated@@0)
 :pattern ( ($generated@@40 $generated@@11 $generated@@209 $generated@@0))
)))
(assert (forall (($generated@@210 T@U) ) (! ($generated@@40 $generated@@89 $generated@@210 $generated)
 :pattern ( ($generated@@40 $generated@@89 $generated@@210 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 (T@U) Bool)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@224  (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> (<= ($generated@@35 0) $generated@@211) ($generated@@48 $generated@@212))) (=> (=> (<= ($generated@@35 0) $generated@@211) ($generated@@48 $generated@@212)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> (<= ($generated@@35 0) $generated@@211) (= ($generated@@16 ($generated@@30 $generated@@11 ($generated@@105 $generated@@212))) $generated@@211))) (=> (=> (<= ($generated@@35 0) $generated@@211) (= ($generated@@16 ($generated@@30 $generated@@11 ($generated@@105 $generated@@212))) $generated@@211)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> (<= ($generated@@35 0) $generated@@211) (= $generated@@213 (+ (+ $generated@@211 $generated@@211) $generated@@211)))) (=> (=> (<= ($generated@@35 0) $generated@@211) (= $generated@@213 (+ (+ $generated@@211 $generated@@211) $generated@@211))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> (< $generated@@211 0) ($generated@@51 $generated@@212))) (=> (=> (< $generated@@211 0) ($generated@@51 $generated@@212)) (=> (= (ControlFlow 0 2) (- 0 1)) (=> (< $generated@@211 0) (= $generated@@213 (+ $generated@@211 $generated@@211))))))))))))))
(let (($generated@@225  (=> (and (<= 0 $generated@@211) (= $generated@@214 ($generated@@56 ($generated@@53 $generated@@11 ($generated@@15 $generated@@211))))) (=> (and (and (= $generated@@215 (+ (+ $generated@@211 $generated@@211) $generated@@211)) (= $generated@@212 $generated@@214)) (and (= $generated@@213 $generated@@215) (= (ControlFlow 0 8) 2))) $generated@@224))))
(let (($generated@@226  (=> (and (< $generated@@211 0) (= $generated@@216 ($generated@@37 $generated@@31 ($generated@@27 ($generated@@37 $generated@@41 ($generated@@42 ($generated@@42 ($generated@@42 ($generated@@42 ($generated@@42 ($generated@@42 ($generated@@42 ($generated@@42 $generated@@34 ($generated@@53 $generated@@89 ($generated@@113 110))) ($generated@@53 $generated@@89 ($generated@@113 101))) ($generated@@53 $generated@@89 ($generated@@113 103))) ($generated@@53 $generated@@89 ($generated@@113 97))) ($generated@@53 $generated@@89 ($generated@@113 116))) ($generated@@53 $generated@@89 ($generated@@113 105))) ($generated@@53 $generated@@89 ($generated@@113 118))) ($generated@@53 $generated@@89 ($generated@@113 101)))))))) (=> (and (and (= $generated@@217 (+ $generated@@211 $generated@@211)) (= $generated@@212 $generated@@216)) (and (= $generated@@213 $generated@@217) (= (ControlFlow 0 7) 2))) $generated@@224))))
(let (($generated@@227  (=> (= $generated@@218 ($generated@@126 $generated@@219 $generated@@220 $generated@@4 false)) (and (=> (= (ControlFlow 0 9) 7) $generated@@226) (=> (= (ControlFlow 0 9) 8) $generated@@225)))))
(let (($generated@@228  (=> (and ($generated@@75 $generated@@220) ($generated@@221 $generated@@220)) (=> (and (and ($generated@@40 $generated@@31 $generated@@222 ($generated@@69 $generated@@0)) ($generated@@64 $generated@@31 $generated@@222 ($generated@@69 $generated@@0) $generated@@220)) (and (= 1 $generated@@223) (= (ControlFlow 0 10) 9))) $generated@@227))))
$generated@@228))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
