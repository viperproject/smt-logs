(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@T T@T) T@T)
(declare-fun $generated@@42 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@68 (Int) Int)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@U) Bool)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@129 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) 0))
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@6 $generated@@25) 3))
(assert (forall (($generated@@29 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@29 $generated@@26)  (or (= $generated@@29 $generated@@27) (= ($generated@@28 $generated@@29) $generated@@26)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@29 $generated@@26))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@30 $generated@@25 $generated@@32 $generated@@31 $generated@@33) ($generated@@30 $generated@@25 $generated@@32 $generated@@26 $generated@@33))
 :pattern ( ($generated@@30 $generated@@25 $generated@@32 $generated@@31 $generated@@33))
 :pattern ( ($generated@@30 $generated@@25 $generated@@32 $generated@@26 $generated@@33))
)))
(assert (= ($generated@@22 $generated@@34) 0))
(assert (= ($generated@@35 $generated@@2 $generated@@5) $generated@@34))
(assert  (not ($generated@@36 $generated@@34)))
(assert  (and (and (and (and (and (and (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@38 $generated@@45 $generated@@46 ($generated@@42 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@49) $generated@@47)
 :weight 0
)) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (or (= $generated@@54 $generated@@55) (= ($generated@@38 $generated@@50 $generated@@51 ($generated@@42 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@55) ($generated@@38 $generated@@50 $generated@@51 $generated@@53 $generated@@55)))
 :weight 0
))) (= ($generated@@6 $generated@@39) 4)) (= ($generated@@6 $generated@@40) 5)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (= ($generated@@6 ($generated@@41 $generated@@56 $generated@@57)) 6))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@43 ($generated@@41 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@41 $generated@@58 $generated@@59))
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@44 ($generated@@41 $generated@@60 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@41 $generated@@60 $generated@@61))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@30 $generated@@25 $generated@@62 $generated@@26 $generated@@63)  (or (= $generated@@62 $generated@@27) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@63 $generated@@62) $generated)))))
 :pattern ( ($generated@@30 $generated@@25 $generated@@62 $generated@@26 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> ($generated@@64 $generated@@65 $generated@@66) (forall (($generated@@67 T@U) ) (!  (=> ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@65 $generated@@67) $generated))) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@66 $generated@@67) $generated))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@66 $generated@@67) $generated))
)))
 :pattern ( ($generated@@64 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 Int) ) (! (= ($generated@@68 $generated@@69) $generated@@69)
 :pattern ( ($generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 $generated@@71) $generated@@71)
 :pattern ( ($generated@@70 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@37 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@37 $generated@@75 $generated@@74))
)))
(assert ($generated@@36 $generated))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (!  (=> ($generated@@64 $generated@@76 $generated@@77) (=> ($generated@@30 $generated@@80 $generated@@78 $generated@@79 $generated@@76) ($generated@@30 $generated@@80 $generated@@78 $generated@@79 $generated@@77)))
 :pattern ( ($generated@@64 $generated@@76 $generated@@77) ($generated@@30 $generated@@80 $generated@@78 $generated@@79 $generated@@76))
)))
(assert  (and (forall (($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@81 $generated@@84 $generated@@85 $generated@@86 ($generated@@83 $generated@@84 $generated@@85 $generated@@86 $generated@@88 $generated@@89 $generated@@90 $generated@@87) $generated@@89 $generated@@90) $generated@@87)
 :weight 0
)) (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (or (= $generated@@96 $generated@@98) (= ($generated@@81 $generated@@91 $generated@@92 $generated@@93 ($generated@@83 $generated@@91 $generated@@92 $generated@@93 $generated@@95 $generated@@96 $generated@@97 $generated@@94) $generated@@98 $generated@@99) ($generated@@81 $generated@@91 $generated@@92 $generated@@93 $generated@@95 $generated@@98 $generated@@99)))
 :weight 0
)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@106 $generated@@108) (= ($generated@@81 $generated@@100 $generated@@101 $generated@@102 ($generated@@83 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@107 $generated@@108) ($generated@@81 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@107 $generated@@108)))
 :weight 0
)))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@11 ($generated@@81 $generated@@25 $generated@@39 $generated@@7 ($generated@@82 $generated@@109 $generated@@110 $generated@@111 $generated@@112) $generated@@113 $generated@@114))  (=> (and (or (not (= $generated@@113 $generated@@109)) (not true)) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@110 $generated@@113) $generated@@111)))) (= $generated@@113 $generated@@112)))
 :pattern ( ($generated@@81 $generated@@25 $generated@@39 $generated@@7 ($generated@@82 $generated@@109 $generated@@110 $generated@@111 $generated@@112) $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (and ($generated@@115 $generated@@116) (and (or (not (= $generated@@117 $generated@@27)) (not true)) (= ($generated@@28 $generated@@117) $generated@@26))) ($generated@@24 $generated@@25 ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@116 $generated@@117) $generated@@34)) $generated@@26))
 :pattern ( ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@116 $generated@@117) $generated@@34)))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@118 $generated@@31)  (and ($generated@@24 $generated@@25 $generated@@118 $generated@@26) (or (not (= $generated@@118 $generated@@27)) (not true))))
 :pattern ( ($generated@@24 $generated@@25 $generated@@118 $generated@@31))
 :pattern ( ($generated@@24 $generated@@25 $generated@@118 $generated@@26))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and (and ($generated@@115 $generated@@119) (and (or (not (= $generated@@120 $generated@@27)) (not true)) (= ($generated@@28 $generated@@120) $generated@@26))) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@119 $generated@@120) $generated)))) ($generated@@30 $generated@@25 ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@119 $generated@@120) $generated@@34)) $generated@@26 $generated@@119))
 :pattern ( ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@119 $generated@@120) $generated@@34)))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (or (not (= $generated@@121 $generated@@123)) (not true)) (=> (and ($generated@@64 $generated@@121 $generated@@122) ($generated@@64 $generated@@122 $generated@@123)) ($generated@@64 $generated@@121 $generated@@123)))
 :pattern ( ($generated@@64 $generated@@121 $generated@@122) ($generated@@64 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (and (= ($generated@@124 ($generated@@35 $generated@@125 $generated@@126)) $generated@@125) (= ($generated@@23 ($generated@@35 $generated@@125 $generated@@126)) $generated@@126))
 :pattern ( ($generated@@35 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@37 $generated@@128 ($generated@@73 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@73 $generated@@128 $generated@@127))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 Bool) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@11 ($generated@@81 $generated@@25 $generated@@39 $generated@@7 ($generated@@129 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))  (=> (and (or (not (= $generated@@134 $generated@@130)) (not true)) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@131 $generated@@134) $generated@@132)))) $generated@@133))
 :pattern ( ($generated@@81 $generated@@25 $generated@@39 $generated@@7 ($generated@@129 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (= ($generated@@136 $generated@@26) $generated@@1))
(assert (= ($generated@@137 $generated@@26) $generated@@4))
(assert (= ($generated@@136 $generated@@31) $generated@@3))
(assert (= ($generated@@137 $generated@@31) $generated@@4))
(assert (forall (($generated@@138 Int) ) (! (= ($generated@@73 $generated@@8 ($generated@@12 ($generated@@68 $generated@@138))) ($generated@@70 $generated@@40 ($generated@@73 $generated@@8 ($generated@@12 $generated@@138))))
 :pattern ( ($generated@@73 $generated@@8 ($generated@@12 ($generated@@68 $generated@@138))))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@T) ) (! (= ($generated@@73 $generated@@140 ($generated@@70 $generated@@140 $generated@@139)) ($generated@@70 $generated@@40 ($generated@@73 $generated@@140 $generated@@139)))
 :pattern ( ($generated@@73 $generated@@140 ($generated@@70 $generated@@140 $generated@@139)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@141 () Int)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 () Int)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 () Bool)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@157 true))
(let (($generated@@158  (=> (and (< $generated@@141 $generated@@142) (= $generated@@143 (+ $generated@@141 1))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@144) (= (- $generated@@142 $generated@@143) $generated@@144))) (=> (or (<= 0 $generated@@144) (= (- $generated@@142 $generated@@143) $generated@@144)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (- $generated@@142 $generated@@143) $generated@@144)))))))
(let (($generated@@159  (=> (and ($generated@@11 ($generated@@70 $generated@@7 ($generated@@10 true))) (= $generated@@144 (- $generated@@142 $generated@@141))) (and (=> (= (ControlFlow 0 8) 5) $generated@@158) (=> (= (ControlFlow 0 8) 7) $generated@@157)))))
(let (($generated@@160 true))
(let (($generated@@161  (=> $generated@@145 (and (=> (= (ControlFlow 0 9) 3) $generated@@160) (=> (= (ControlFlow 0 9) 8) $generated@@159)))))
(let (($generated@@162 true))
(let (($generated@@163  (and (=> (= (ControlFlow 0 10) 2) $generated@@162) (=> (= (ControlFlow 0 10) 9) $generated@@161))))
(let (($generated@@164 true))
(let (($generated@@165  (=> (and (not false) (<= 0 $generated@@141)) (=> (and (and (forall (($generated@@166 T@U) ) (!  (=> (and (or (not (= $generated@@166 $generated@@27)) (not true)) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@147 $generated@@166) $generated)))) (= ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@166) ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@166)))
 :pattern ( ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@166))
)) ($generated@@64 $generated@@146 $generated@@146)) (and (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (or (not (= $generated@@167 $generated@@27)) (not true)) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@167) $generated)))) (or (= ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@167) $generated@@168) ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@167) $generated@@168)) ($generated@@11 ($generated@@81 $generated@@25 $generated@@39 $generated@@7 $generated@@148 $generated@@167 $generated@@168))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@167) $generated@@168))
)) (<= (- $generated@@142 $generated@@141) $generated@@149))) (and (=> (= (ControlFlow 0 11) 1) $generated@@164) (=> (= (ControlFlow 0 11) 10) $generated@@163))))))
(let (($generated@@169  (=> (= $generated@@150 ($generated@@129 $generated@@27 $generated@@147 $generated false)) (=> (and ($generated@@24 $generated@@25 $generated@@151 $generated@@26) ($generated@@30 $generated@@25 $generated@@151 $generated@@26 $generated@@147)) (=> (and (and (and ($generated@@115 $generated@@146) ($generated@@152 $generated@@146)) (and ($generated@@24 $generated@@25 $generated@@153 $generated@@26) ($generated@@30 $generated@@25 $generated@@153 $generated@@26 $generated@@146))) (and (and (or (= $generated@@153 $generated@@27) (and (and (or (not (= $generated@@153 $generated@@27)) (not true)) (not ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@147 $generated@@153) $generated))))) (or (= ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@153) $generated@@34)) $generated@@27) (and (or (not (= ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@153) $generated@@34)) $generated@@27)) (not true)) (not ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@147 ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@153) $generated@@34))) $generated)))))))) (forall (($generated@@170 T@U) ) (!  (=> (and (or (not (= $generated@@170 $generated@@27)) (not true)) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@147 $generated@@170) $generated)))) (= ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@170) ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@147 $generated@@170)))
 :pattern ( ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@170))
))) (and ($generated@@64 $generated@@147 $generated@@146) (= $generated@@154 ($generated@@68 0))))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (or (not (= $generated@@153 $generated@@27)) (not true))) (=> (or (not (= $generated@@153 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (forall (($generated@@171 T@U) ($generated@@172 T@U) )  (=> (and (and (or (not (= $generated@@171 $generated@@27)) (not true)) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@171) $generated)))) (= $generated@@171 ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@153) $generated@@34)))) ($generated@@11 ($generated@@81 $generated@@25 $generated@@39 $generated@@7 $generated@@150 $generated@@171 $generated@@172))))) (=> (forall (($generated@@173 T@U) ($generated@@174 T@U) )  (=> (and (and (or (not (= $generated@@173 $generated@@27)) (not true)) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@173) $generated)))) (= $generated@@173 ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@153) $generated@@34)))) ($generated@@11 ($generated@@81 $generated@@25 $generated@@39 $generated@@7 $generated@@150 $generated@@173 $generated@@174)))) (=> (= $generated@@148 ($generated@@82 $generated@@27 $generated@@146 $generated ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@153) $generated@@34)))) (=> (and (= $generated@@149 (- $generated@@142 $generated@@154)) (= (ControlFlow 0 12) 11)) $generated@@165)))))))))))
(let (($generated@@175  (=> (and (and ($generated@@115 $generated@@147) ($generated@@152 $generated@@147)) (<= ($generated@@68 0) $generated@@142)) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@155 $generated@@26) ($generated@@30 $generated@@25 $generated@@155 $generated@@26 $generated@@147)) true) (and (= 2 $generated@@156) (= (ControlFlow 0 15) 12))) $generated@@169))))
$generated@@175))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 12) (- 14))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
