(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@81 (Int) Int)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U Int) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@99 (Int) T@U)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) Int)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and (or (not (= $generated@@32 $generated@@28)) (not true)) (= ($generated@@29 $generated@@32) ($generated@@27 $generated@@31))) ($generated@@30 $generated@@10 ($generated@@14 ($generated@@26 $generated@@32)) $generated))
 :pattern ( ($generated@@26 $generated@@32) ($generated@@27 $generated@@31))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (and (or (not (= $generated@@35 $generated@@28)) (not true)) (= ($generated@@29 $generated@@35) ($generated@@27 $generated@@34))) ($generated@@30 $generated@@10 ($generated@@14 ($generated@@33 $generated@@35)) $generated))
 :pattern ( ($generated@@33 $generated@@35) ($generated@@27 $generated@@34))
)))
(assert (= ($generated@@8 $generated@@37) 3))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@40 ($generated@@38 $generated@@39) $generated@@41) ($generated@@36 $generated@@37 $generated@@40 ($generated@@27 $generated@@39) $generated@@41))
 :pattern ( ($generated@@36 $generated@@37 $generated@@40 ($generated@@38 $generated@@39) $generated@@41))
 :pattern ( ($generated@@36 $generated@@37 $generated@@40 ($generated@@27 $generated@@39) $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@43 $generated@@42)  (or (= $generated@@43 $generated@@28) (= ($generated@@29 $generated@@43) $generated@@42)))
 :pattern ( ($generated@@30 $generated@@37 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@45 $generated@@44 $generated@@46) ($generated@@36 $generated@@37 $generated@@45 $generated@@42 $generated@@46))
 :pattern ( ($generated@@36 $generated@@37 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@36 $generated@@37 $generated@@45 $generated@@42 $generated@@46))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@48 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@48 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@48 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@8 $generated@@49) 4)) (= ($generated@@8 $generated@@50) 5)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@8 ($generated@@51 $generated@@66 $generated@@67)) 6))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@51 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@51 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@51 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@73 ($generated@@27 $generated@@72) $generated@@74)  (or (= $generated@@73 $generated@@28) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@74 $generated@@73) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@73 ($generated@@27 $generated@@72) $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@75 $generated@@42 $generated@@76)  (or (= $generated@@75 $generated@@28) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@75) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@75 $generated@@42 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> ($generated@@77 $generated@@78 $generated@@79) (forall (($generated@@80 T@U) ) (!  (=> ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@78 $generated@@80) $generated@@1))) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@79 $generated@@80) $generated@@1))))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@79 $generated@@80) $generated@@1))
)))
 :pattern ( ($generated@@77 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@82 Int) ) (! (= ($generated@@81 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@86 $generated@@88 ($generated@@47 $generated@@88 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@47 $generated@@88 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 Int) ) (! (= ($generated@@24 ($generated@@89 $generated@@90 $generated@@91)) (+ ($generated@@24 $generated@@90) 1))
 :pattern ( ($generated@@89 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@93 ($generated@@38 $generated@@92))  (and ($generated@@30 $generated@@37 $generated@@93 ($generated@@27 $generated@@92)) (or (not (= $generated@@93 $generated@@28)) (not true))))
 :pattern ( ($generated@@30 $generated@@37 $generated@@93 ($generated@@38 $generated@@92)))
 :pattern ( ($generated@@30 $generated@@37 $generated@@93 ($generated@@27 $generated@@92)))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@94 ($generated@@86 $generated@@98 $generated@@95) $generated@@96 $generated@@97) ($generated@@36 $generated@@98 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@94 ($generated@@86 $generated@@98 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 Int) ($generated@@105 Int) ) (!  (=> (and (and (and ($generated@@100 $generated@@102) (and (or (not (= $generated@@103 $generated@@28)) (not true)) (= ($generated@@29 $generated@@103) ($generated@@27 $generated@@101)))) (and (and (<= 0 $generated@@104) (< $generated@@104 ($generated@@26 $generated@@103))) (and (<= 0 $generated@@105) (< $generated@@105 ($generated@@33 $generated@@103))))) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@102 $generated@@103) $generated@@1)))) ($generated@@94 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@102 $generated@@103) ($generated@@89 ($generated@@99 $generated@@104) $generated@@105)) $generated@@101 $generated@@102))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@102 $generated@@103) ($generated@@89 ($generated@@99 $generated@@104) $generated@@105)) ($generated@@27 $generated@@101))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> ($generated@@77 $generated@@106 $generated@@107) (=> ($generated@@94 $generated@@108 $generated@@109 $generated@@106) ($generated@@94 $generated@@108 $generated@@109 $generated@@107)))
 :pattern ( ($generated@@77 $generated@@106 $generated@@107) ($generated@@94 $generated@@108 $generated@@109 $generated@@106))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (!  (=> ($generated@@77 $generated@@110 $generated@@111) (=> ($generated@@36 $generated@@114 $generated@@112 $generated@@113 $generated@@110) ($generated@@36 $generated@@114 $generated@@112 $generated@@113 $generated@@111)))
 :pattern ( ($generated@@77 $generated@@110 $generated@@111) ($generated@@36 $generated@@114 $generated@@112 $generated@@113 $generated@@110))
)))
(assert (forall (($generated@@116 T@U) ) (!  (and (= ($generated@@25 ($generated@@27 $generated@@116)) $generated@@2) (= ($generated@@115 ($generated@@27 $generated@@116)) $generated@@6))
 :pattern ( ($generated@@27 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (!  (and (= ($generated@@25 ($generated@@38 $generated@@117)) $generated@@3) (= ($generated@@115 ($generated@@38 $generated@@117)) $generated@@6))
 :pattern ( ($generated@@38 $generated@@117))
)))
(assert  (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@118 $generated@@121 $generated@@122 $generated@@123 ($generated@@120 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@126 $generated@@127) $generated@@124)
 :weight 0
)) (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@118 $generated@@128 $generated@@129 $generated@@130 ($generated@@120 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@118 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@118 $generated@@137 $generated@@138 $generated@@139 ($generated@@120 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@118 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@13 ($generated@@118 $generated@@37 $generated@@49 $generated@@9 ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))  (=> (and (or (not (= $generated@@150 $generated@@146)) (not true)) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@147 $generated@@150) $generated@@148)))) (= $generated@@150 $generated@@149)))
 :pattern ( ($generated@@118 $generated@@37 $generated@@49 $generated@@9 ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@152 $generated@@153 $generated@@42) (and (= ($generated@@86 $generated@@37 ($generated@@47 $generated@@37 $generated@@153)) $generated@@153) ($generated@@30 $generated@@37 ($generated@@47 $generated@@37 $generated@@153) $generated@@42)))
 :pattern ( ($generated@@152 $generated@@153 $generated@@42))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> ($generated@@152 $generated@@154 $generated@@44) (and (= ($generated@@86 $generated@@37 ($generated@@47 $generated@@37 $generated@@154)) $generated@@154) ($generated@@30 $generated@@37 ($generated@@47 $generated@@37 $generated@@154) $generated@@44)))
 :pattern ( ($generated@@152 $generated@@154 $generated@@44))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@156 ($generated@@27 $generated@@155))  (or (= $generated@@156 $generated@@28) (= ($generated@@29 $generated@@156) ($generated@@27 $generated@@155))))
 :pattern ( ($generated@@30 $generated@@37 $generated@@156 ($generated@@27 $generated@@155)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@157 $generated@@44)  (and ($generated@@30 $generated@@37 $generated@@157 $generated@@42) (or (not (= $generated@@157 $generated@@28)) (not true))))
 :pattern ( ($generated@@30 $generated@@37 $generated@@157 $generated@@44))
 :pattern ( ($generated@@30 $generated@@37 $generated@@157 $generated@@42))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (or (not (= $generated@@158 $generated@@160)) (not true)) (=> (and ($generated@@77 $generated@@158 $generated@@159) ($generated@@77 $generated@@159 $generated@@160)) ($generated@@77 $generated@@158 $generated@@160)))
 :pattern ( ($generated@@77 $generated@@158 $generated@@159) ($generated@@77 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Int) ($generated@@165 Int) ) (!  (=> (and (and ($generated@@100 $generated@@162) (and (or (not (= $generated@@163 $generated@@28)) (not true)) (= ($generated@@29 $generated@@163) ($generated@@27 $generated@@161)))) (and (and (<= 0 $generated@@164) (< $generated@@164 ($generated@@26 $generated@@163))) (and (<= 0 $generated@@165) (< $generated@@165 ($generated@@33 $generated@@163))))) ($generated@@152 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@162 $generated@@163) ($generated@@89 ($generated@@99 $generated@@164) $generated@@165)) $generated@@161))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@162 $generated@@163) ($generated@@89 ($generated@@99 $generated@@164) $generated@@165)) ($generated@@27 $generated@@161))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> ($generated@@152 $generated@@166 $generated) (and (= ($generated@@86 $generated@@10 ($generated@@47 $generated@@10 $generated@@166)) $generated@@166) ($generated@@30 $generated@@10 ($generated@@47 $generated@@10 $generated@@166) $generated)))
 :pattern ( ($generated@@152 $generated@@166 $generated))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@152 ($generated@@86 $generated@@169 $generated@@167) $generated@@168) ($generated@@30 $generated@@169 $generated@@167 $generated@@168))
 :pattern ( ($generated@@152 ($generated@@86 $generated@@169 $generated@@167) $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (! (<= 0 ($generated@@26 $generated@@170))
 :pattern ( ($generated@@26 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ) (! (<= 0 ($generated@@33 $generated@@171))
 :pattern ( ($generated@@33 $generated@@171))
)))
(assert (forall (($generated@@172 Int) ) (! (= ($generated@@24 ($generated@@99 $generated@@172)) 1)
 :pattern ( ($generated@@99 $generated@@172))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@173 ($generated@@99 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@99 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@175 ($generated@@27 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@27 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@177 ($generated@@38 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@38 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@47 $generated@@180 ($generated@@86 $generated@@180 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@86 $generated@@180 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and ($generated@@100 $generated@@182) (and (or (not (= $generated@@183 $generated@@28)) (not true)) (= ($generated@@29 $generated@@183) ($generated@@27 $generated@@181)))) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@182 $generated@@183) $generated@@1)))) ($generated@@36 $generated@@10 ($generated@@14 ($generated@@26 $generated@@183)) $generated $generated@@182))
 :pattern ( ($generated@@26 $generated@@183) ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@182 $generated@@183) $generated@@1)) ($generated@@27 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and ($generated@@100 $generated@@185) (and (or (not (= $generated@@186 $generated@@28)) (not true)) (= ($generated@@29 $generated@@186) ($generated@@27 $generated@@184)))) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@185 $generated@@186) $generated@@1)))) ($generated@@36 $generated@@10 ($generated@@14 ($generated@@33 $generated@@186)) $generated $generated@@185))
 :pattern ( ($generated@@33 $generated@@186) ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@37 ($generated@@51 $generated@@49 $generated@@50) $generated@@185 $generated@@186) $generated@@1)) ($generated@@27 $generated@@184))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 Int) ) (!  (and (= ($generated@@187 ($generated@@89 $generated@@189 $generated@@190)) $generated@@189) (= ($generated@@188 ($generated@@89 $generated@@189 $generated@@190)) $generated@@190))
 :pattern ( ($generated@@89 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@152 $generated@@192 ($generated@@27 $generated@@191)) (and (= ($generated@@86 $generated@@37 ($generated@@47 $generated@@37 $generated@@192)) $generated@@192) ($generated@@30 $generated@@37 ($generated@@47 $generated@@37 $generated@@192) ($generated@@27 $generated@@191))))
 :pattern ( ($generated@@152 $generated@@192 ($generated@@27 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> ($generated@@152 $generated@@194 ($generated@@38 $generated@@193)) (and (= ($generated@@86 $generated@@37 ($generated@@47 $generated@@37 $generated@@194)) $generated@@194) ($generated@@30 $generated@@37 ($generated@@47 $generated@@37 $generated@@194) ($generated@@38 $generated@@193))))
 :pattern ( ($generated@@152 $generated@@194 ($generated@@38 $generated@@193)))
)))
(assert (= ($generated@@25 $generated@@42) $generated@@4))
(assert (= ($generated@@115 $generated@@42) $generated@@7))
(assert (= ($generated@@25 $generated@@44) $generated@@5))
(assert (= ($generated@@115 $generated@@44) $generated@@7))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@86 $generated@@10 ($generated@@14 ($generated@@81 $generated@@195))) ($generated@@83 $generated@@50 ($generated@@86 $generated@@10 ($generated@@14 $generated@@195))))
 :pattern ( ($generated@@86 $generated@@10 ($generated@@14 ($generated@@81 $generated@@195))))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@T) ) (! (= ($generated@@86 $generated@@197 ($generated@@83 $generated@@197 $generated@@196)) ($generated@@83 $generated@@50 ($generated@@86 $generated@@197 $generated@@196)))
 :pattern ( ($generated@@86 $generated@@197 ($generated@@83 $generated@@197 $generated@@196)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! ($generated@@36 $generated@@10 $generated@@199 $generated $generated@@198)
 :pattern ( ($generated@@36 $generated@@10 $generated@@199 $generated $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! ($generated@@30 $generated@@10 $generated@@200 $generated)
 :pattern ( ($generated@@30 $generated@@10 $generated@@200 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@207 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@208  (=> (= $generated@@201 ($generated@@119 $generated@@28 $generated@@202 $generated@@1 $generated@@203)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (not (= $generated@@203 $generated@@28)) (not true))) (=> (or (not (= $generated@@203 $generated@@28)) (not true)) (=> (< $generated@@204 ($generated@@26 $generated@@203)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@203 $generated@@28)) (not true))) (=> (or (not (= $generated@@203 $generated@@28)) (not true)) (=> (< $generated@@205 ($generated@@33 $generated@@203)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@203 $generated@@28)) (not true))) (=> (or (not (= $generated@@203 $generated@@28)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@204) (< $generated@@204 ($generated@@26 $generated@@203)))) (=> (and (<= 0 $generated@@204) (< $generated@@204 ($generated@@26 $generated@@203))) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 $generated@@205) (< $generated@@205 ($generated@@33 $generated@@203)))))))))))))))))
(let (($generated@@209  (=> (and (and (and ($generated@@100 $generated@@202) ($generated@@206 $generated@@202)) (and ($generated@@30 $generated@@37 $generated@@203 ($generated@@38 $generated@@42)) ($generated@@36 $generated@@37 $generated@@203 ($generated@@38 $generated@@42) $generated@@202))) (and (and (<= ($generated@@81 0) $generated@@204) (<= ($generated@@81 0) $generated@@205)) (and (= 0 $generated@@207) (= (ControlFlow 0 7) 2)))) $generated@@208)))
$generated@@209)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
