(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@48 (T@U T@U T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@95 (Int) Int)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@103 (T@U Int) T@U)
(declare-fun $generated@@112 (Int) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) Int)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated@@1) 0))
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (and (or (not (= $generated@@35 $generated@@31)) (not true)) (= ($generated@@32 $generated@@35) ($generated@@30 $generated@@34))) ($generated@@33 $generated@@13 ($generated@@17 ($generated@@29 $generated@@35)) $generated))
 :pattern ( ($generated@@29 $generated@@35) ($generated@@30 $generated@@34))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (and (or (not (= $generated@@38 $generated@@31)) (not true)) (= ($generated@@32 $generated@@38) ($generated@@30 $generated@@37))) ($generated@@33 $generated@@13 ($generated@@17 ($generated@@36 $generated@@38)) $generated))
 :pattern ( ($generated@@36 $generated@@38) ($generated@@30 $generated@@37))
)))
(assert (= ($generated@@11 $generated@@40) 3))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@43 ($generated@@41 $generated@@42) $generated@@44) ($generated@@39 $generated@@40 $generated@@43 ($generated@@30 $generated@@42) $generated@@44))
 :pattern ( ($generated@@39 $generated@@40 $generated@@43 ($generated@@41 $generated@@42) $generated@@44))
 :pattern ( ($generated@@39 $generated@@40 $generated@@43 ($generated@@30 $generated@@42) $generated@@44))
)))
(assert ($generated@@45 $generated@@46))
(assert (forall (($generated@@47 T@U) ) (! (= ($generated@@33 $generated@@40 $generated@@47 $generated@@46)  (or (= $generated@@47 $generated@@31) (= ($generated@@32 $generated@@47) $generated@@46)))
 :pattern ( ($generated@@33 $generated@@40 $generated@@47 $generated@@46))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (and ($generated@@48 $generated@@51 $generated@@46 $generated@@52) ($generated@@49 $generated@@52)) ($generated@@48 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@48 $generated@@51 $generated@@46 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@54 $generated@@53 $generated@@55) ($generated@@39 $generated@@40 $generated@@54 $generated@@50 $generated@@55))
 :pattern ( ($generated@@39 $generated@@40 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@39 $generated@@40 $generated@@54 $generated@@50 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@57 $generated@@56 $generated@@58) ($generated@@39 $generated@@40 $generated@@57 $generated@@46 $generated@@58))
 :pattern ( ($generated@@39 $generated@@40 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@39 $generated@@40 $generated@@57 $generated@@46 $generated@@58))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@60 $generated@@67 $generated@@68 ($generated@@64 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@71) $generated@@69)
 :weight 0
)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@76 $generated@@77) (= ($generated@@60 $generated@@72 $generated@@73 ($generated@@64 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@77) ($generated@@60 $generated@@72 $generated@@73 $generated@@75 $generated@@77)))
 :weight 0
))) (= ($generated@@11 $generated@@61) 4)) (= ($generated@@11 $generated@@62) 5)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (= ($generated@@11 ($generated@@63 $generated@@78 $generated@@79)) 6))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@65 ($generated@@63 $generated@@80 $generated@@81)) $generated@@80)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@66 ($generated@@63 $generated@@82 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@63 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@85 ($generated@@30 $generated@@84) $generated@@86)  (or (= $generated@@85 $generated@@31) ($generated@@16 ($generated@@59 $generated@@12 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@86 $generated@@85) $generated@@1)))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@85 ($generated@@30 $generated@@84) $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@87 $generated@@50 $generated@@88)  (or (= $generated@@87 $generated@@31) ($generated@@16 ($generated@@59 $generated@@12 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@88 $generated@@87) $generated@@1)))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@87 $generated@@50 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@89 $generated@@46 $generated@@90)  (or (= $generated@@89 $generated@@31) ($generated@@16 ($generated@@59 $generated@@12 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@90 $generated@@89) $generated@@1)))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@89 $generated@@46 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@91 $generated@@92 $generated@@93) (forall (($generated@@94 T@U) ) (!  (=> ($generated@@16 ($generated@@59 $generated@@12 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@92 $generated@@94) $generated@@1))) ($generated@@16 ($generated@@59 $generated@@12 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@93 $generated@@94) $generated@@1))))
 :pattern ( ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@93 $generated@@94) $generated@@1))
)))
 :pattern ( ($generated@@91 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@96 Int) ) (! (= ($generated@@95 $generated@@96) $generated@@96)
 :pattern ( ($generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 $generated@@98) $generated@@98)
 :pattern ( ($generated@@97 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@100 $generated@@102 ($generated@@59 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@59 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 Int) ) (! (= ($generated@@27 ($generated@@103 $generated@@104 $generated@@105)) (+ ($generated@@27 $generated@@104) 1))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@33 $generated@@40 $generated@@107 ($generated@@41 $generated@@106))  (and ($generated@@33 $generated@@40 $generated@@107 ($generated@@30 $generated@@106)) (or (not (= $generated@@107 $generated@@31)) (not true))))
 :pattern ( ($generated@@33 $generated@@40 $generated@@107 ($generated@@41 $generated@@106)))
 :pattern ( ($generated@@33 $generated@@40 $generated@@107 ($generated@@30 $generated@@106)))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@48 ($generated@@100 $generated@@111 $generated@@108) $generated@@109 $generated@@110) ($generated@@39 $generated@@111 $generated@@108 $generated@@109 $generated@@110))
 :pattern ( ($generated@@48 ($generated@@100 $generated@@111 $generated@@108) $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 Int) ($generated@@117 Int) ) (!  (=> (and (and (and ($generated@@49 $generated@@114) (and (or (not (= $generated@@115 $generated@@31)) (not true)) (= ($generated@@32 $generated@@115) ($generated@@30 $generated@@113)))) (and (and (<= 0 $generated@@116) (< $generated@@116 ($generated@@29 $generated@@115))) (and (<= 0 $generated@@117) (< $generated@@117 ($generated@@36 $generated@@115))))) ($generated@@16 ($generated@@59 $generated@@12 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@114 $generated@@115) $generated@@1)))) ($generated@@48 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@114 $generated@@115) ($generated@@103 ($generated@@112 $generated@@116) $generated@@117)) $generated@@113 $generated@@114))
 :pattern ( ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@114 $generated@@115) ($generated@@103 ($generated@@112 $generated@@116) $generated@@117)) ($generated@@30 $generated@@113))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> ($generated@@91 $generated@@118 $generated@@119) (=> ($generated@@48 $generated@@120 $generated@@121 $generated@@118) ($generated@@48 $generated@@120 $generated@@121 $generated@@119)))
 :pattern ( ($generated@@91 $generated@@118 $generated@@119) ($generated@@48 $generated@@120 $generated@@121 $generated@@118))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@T) ) (!  (=> ($generated@@91 $generated@@122 $generated@@123) (=> ($generated@@39 $generated@@126 $generated@@124 $generated@@125 $generated@@122) ($generated@@39 $generated@@126 $generated@@124 $generated@@125 $generated@@123)))
 :pattern ( ($generated@@91 $generated@@122 $generated@@123) ($generated@@39 $generated@@126 $generated@@124 $generated@@125 $generated@@122))
)))
(assert (forall (($generated@@128 T@U) ) (!  (and (= ($generated@@28 ($generated@@30 $generated@@128)) $generated@@2) (= ($generated@@127 ($generated@@30 $generated@@128)) $generated@@8))
 :pattern ( ($generated@@30 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (!  (and (= ($generated@@28 ($generated@@41 $generated@@129)) $generated@@3) (= ($generated@@127 ($generated@@41 $generated@@129)) $generated@@8))
 :pattern ( ($generated@@41 $generated@@129))
)))
(assert  (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@130 $generated@@133 $generated@@134 $generated@@135 ($generated@@132 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@138 $generated@@139) $generated@@136)
 :weight 0
)) (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@130 $generated@@140 $generated@@141 $generated@@142 ($generated@@132 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@130 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@155 $generated@@157) (= ($generated@@130 $generated@@149 $generated@@150 $generated@@151 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@130 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@16 ($generated@@130 $generated@@40 $generated@@61 $generated@@12 ($generated@@131 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))  (=> (and (or (not (= $generated@@162 $generated@@158)) (not true)) ($generated@@16 ($generated@@59 $generated@@12 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@159 $generated@@162) $generated@@160)))) (= $generated@@162 $generated@@161)))
 :pattern ( ($generated@@130 $generated@@40 $generated@@61 $generated@@12 ($generated@@131 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> ($generated@@164 $generated@@165 $generated@@53) (and (= ($generated@@100 $generated@@40 ($generated@@59 $generated@@40 $generated@@165)) $generated@@165) ($generated@@33 $generated@@40 ($generated@@59 $generated@@40 $generated@@165) $generated@@53)))
 :pattern ( ($generated@@164 $generated@@165 $generated@@53))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> ($generated@@164 $generated@@166 $generated@@46) (and (= ($generated@@100 $generated@@40 ($generated@@59 $generated@@40 $generated@@166)) $generated@@166) ($generated@@33 $generated@@40 ($generated@@59 $generated@@40 $generated@@166) $generated@@46)))
 :pattern ( ($generated@@164 $generated@@166 $generated@@46))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> ($generated@@164 $generated@@167 $generated@@56) (and (= ($generated@@100 $generated@@40 ($generated@@59 $generated@@40 $generated@@167)) $generated@@167) ($generated@@33 $generated@@40 ($generated@@59 $generated@@40 $generated@@167) $generated@@56)))
 :pattern ( ($generated@@164 $generated@@167 $generated@@56))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> ($generated@@164 $generated@@168 $generated@@50) (and (= ($generated@@100 $generated@@40 ($generated@@59 $generated@@40 $generated@@168)) $generated@@168) ($generated@@33 $generated@@40 ($generated@@59 $generated@@40 $generated@@168) $generated@@50)))
 :pattern ( ($generated@@164 $generated@@168 $generated@@50))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@33 $generated@@40 $generated@@170 ($generated@@30 $generated@@169))  (or (= $generated@@170 $generated@@31) (= ($generated@@32 $generated@@170) ($generated@@30 $generated@@169))))
 :pattern ( ($generated@@33 $generated@@40 $generated@@170 ($generated@@30 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@33 $generated@@40 $generated@@171 $generated@@53)  (and ($generated@@33 $generated@@40 $generated@@171 $generated@@50) (or (not (= $generated@@171 $generated@@31)) (not true))))
 :pattern ( ($generated@@33 $generated@@40 $generated@@171 $generated@@53))
 :pattern ( ($generated@@33 $generated@@40 $generated@@171 $generated@@50))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@33 $generated@@40 $generated@@172 $generated@@56)  (and ($generated@@33 $generated@@40 $generated@@172 $generated@@46) (or (not (= $generated@@172 $generated@@31)) (not true))))
 :pattern ( ($generated@@33 $generated@@40 $generated@@172 $generated@@56))
 :pattern ( ($generated@@33 $generated@@40 $generated@@172 $generated@@46))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@173 $generated@@46 $generated@@174) ($generated@@39 $generated@@40 $generated@@173 $generated@@50 $generated@@174))
 :pattern ( ($generated@@39 $generated@@40 $generated@@173 $generated@@46 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (or (not (= $generated@@175 $generated@@177)) (not true)) (=> (and ($generated@@91 $generated@@175 $generated@@176) ($generated@@91 $generated@@176 $generated@@177)) ($generated@@91 $generated@@175 $generated@@177)))
 :pattern ( ($generated@@91 $generated@@175 $generated@@176) ($generated@@91 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 Int) ($generated@@182 Int) ) (!  (=> (and (and ($generated@@49 $generated@@179) (and (or (not (= $generated@@180 $generated@@31)) (not true)) (= ($generated@@32 $generated@@180) ($generated@@30 $generated@@178)))) (and (and (<= 0 $generated@@181) (< $generated@@181 ($generated@@29 $generated@@180))) (and (<= 0 $generated@@182) (< $generated@@182 ($generated@@36 $generated@@180))))) ($generated@@164 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@179 $generated@@180) ($generated@@103 ($generated@@112 $generated@@181) $generated@@182)) $generated@@178))
 :pattern ( ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@179 $generated@@180) ($generated@@103 ($generated@@112 $generated@@181) $generated@@182)) ($generated@@30 $generated@@178))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> ($generated@@164 $generated@@183 $generated) (and (= ($generated@@100 $generated@@13 ($generated@@59 $generated@@13 $generated@@183)) $generated@@183) ($generated@@33 $generated@@13 ($generated@@59 $generated@@13 $generated@@183) $generated)))
 :pattern ( ($generated@@164 $generated@@183 $generated))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@T) ) (! (= ($generated@@164 ($generated@@100 $generated@@186 $generated@@184) $generated@@185) ($generated@@33 $generated@@186 $generated@@184 $generated@@185))
 :pattern ( ($generated@@164 ($generated@@100 $generated@@186 $generated@@184) $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! (<= 0 ($generated@@29 $generated@@187))
 :pattern ( ($generated@@29 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ) (! (<= 0 ($generated@@36 $generated@@188))
 :pattern ( ($generated@@36 $generated@@188))
)))
(assert (forall (($generated@@189 Int) ) (! (= ($generated@@27 ($generated@@112 $generated@@189)) 1)
 :pattern ( ($generated@@112 $generated@@189))
)))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@190 ($generated@@112 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@112 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ) (! (= ($generated@@192 ($generated@@30 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@30 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@194 ($generated@@41 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@41 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@T) ) (! (= ($generated@@59 $generated@@197 ($generated@@100 $generated@@197 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@100 $generated@@197 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and ($generated@@49 $generated@@199) (and (or (not (= $generated@@200 $generated@@31)) (not true)) (= ($generated@@32 $generated@@200) ($generated@@30 $generated@@198)))) ($generated@@16 ($generated@@59 $generated@@12 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@199 $generated@@200) $generated@@1)))) ($generated@@39 $generated@@13 ($generated@@17 ($generated@@29 $generated@@200)) $generated $generated@@199))
 :pattern ( ($generated@@29 $generated@@200) ($generated@@59 $generated@@12 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@199 $generated@@200) $generated@@1)) ($generated@@30 $generated@@198))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (and ($generated@@49 $generated@@202) (and (or (not (= $generated@@203 $generated@@31)) (not true)) (= ($generated@@32 $generated@@203) ($generated@@30 $generated@@201)))) ($generated@@16 ($generated@@59 $generated@@12 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@202 $generated@@203) $generated@@1)))) ($generated@@39 $generated@@13 ($generated@@17 ($generated@@36 $generated@@203)) $generated $generated@@202))
 :pattern ( ($generated@@36 $generated@@203) ($generated@@59 $generated@@12 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@202 $generated@@203) $generated@@1)) ($generated@@30 $generated@@201))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 Int) ) (!  (and (= ($generated@@204 ($generated@@103 $generated@@206 $generated@@207)) $generated@@206) (= ($generated@@205 ($generated@@103 $generated@@206 $generated@@207)) $generated@@207))
 :pattern ( ($generated@@103 $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> ($generated@@164 $generated@@209 ($generated@@30 $generated@@208)) (and (= ($generated@@100 $generated@@40 ($generated@@59 $generated@@40 $generated@@209)) $generated@@209) ($generated@@33 $generated@@40 ($generated@@59 $generated@@40 $generated@@209) ($generated@@30 $generated@@208))))
 :pattern ( ($generated@@164 $generated@@209 ($generated@@30 $generated@@208)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@164 $generated@@211 ($generated@@41 $generated@@210)) (and (= ($generated@@100 $generated@@40 ($generated@@59 $generated@@40 $generated@@211)) $generated@@211) ($generated@@33 $generated@@40 ($generated@@59 $generated@@40 $generated@@211) ($generated@@41 $generated@@210))))
 :pattern ( ($generated@@164 $generated@@211 ($generated@@41 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ) (!  (=> ($generated@@33 $generated@@40 $generated@@212 $generated@@46) ($generated@@33 $generated@@40 $generated@@212 $generated@@50))
 :pattern ( ($generated@@33 $generated@@40 $generated@@212 $generated@@46))
)))
(assert (forall (($generated@@213 T@U) ) (!  (=> ($generated@@164 $generated@@213 $generated@@46) ($generated@@164 $generated@@213 $generated@@50))
 :pattern ( ($generated@@164 $generated@@213 $generated@@46))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> ($generated@@49 ($generated@@64 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@214 $generated@@215 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@214 $generated@@215) $generated@@216 $generated@@217))) ($generated@@91 $generated@@214 ($generated@@64 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@214 $generated@@215 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@214 $generated@@215) $generated@@216 $generated@@217))))
 :pattern ( ($generated@@64 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@214 $generated@@215 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@40 ($generated@@63 $generated@@61 $generated@@62) $generated@@214 $generated@@215) $generated@@216 $generated@@217)))
)))
(assert (= ($generated@@28 $generated@@53) $generated@@4))
(assert (= ($generated@@127 $generated@@53) $generated@@9))
(assert (= ($generated@@28 $generated@@46) $generated@@5))
(assert (= ($generated@@127 $generated@@46) $generated@@10))
(assert (= ($generated@@28 $generated@@56) $generated@@6))
(assert (= ($generated@@127 $generated@@56) $generated@@10))
(assert (= ($generated@@28 $generated@@50) $generated@@7))
(assert (= ($generated@@127 $generated@@50) $generated@@9))
(assert (forall (($generated@@218 T@U) ) (! (= ($generated@@33 $generated@@40 $generated@@218 $generated@@50)  (or (= $generated@@218 $generated@@31) ($generated@@45 ($generated@@32 $generated@@218))))
 :pattern ( ($generated@@33 $generated@@40 $generated@@218 $generated@@50))
)))
(assert (forall (($generated@@219 Int) ) (! (= ($generated@@100 $generated@@13 ($generated@@17 ($generated@@95 $generated@@219))) ($generated@@97 $generated@@62 ($generated@@100 $generated@@13 ($generated@@17 $generated@@219))))
 :pattern ( ($generated@@100 $generated@@13 ($generated@@17 ($generated@@95 $generated@@219))))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@T) ) (! (= ($generated@@100 $generated@@221 ($generated@@97 $generated@@221 $generated@@220)) ($generated@@97 $generated@@62 ($generated@@100 $generated@@221 $generated@@220)))
 :pattern ( ($generated@@100 $generated@@221 ($generated@@97 $generated@@221 $generated@@220)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! ($generated@@39 $generated@@13 $generated@@223 $generated $generated@@222)
 :pattern ( ($generated@@39 $generated@@13 $generated@@223 $generated $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ) (! ($generated@@33 $generated@@13 $generated@@224 $generated)
 :pattern ( ($generated@@33 $generated@@13 $generated@@224 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 (T@U) Bool)
(declare-fun $generated@@230 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@231  (=> (= $generated@@225 ($generated@@131 $generated@@31 $generated@@226 $generated@@1 $generated@@227)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (not (= $generated@@227 $generated@@31)) (not true))) (=> (or (not (= $generated@@227 $generated@@31)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 ($generated@@95 0)) (< ($generated@@95 0) ($generated@@29 $generated@@227)))) (=> (and (<= 0 ($generated@@95 0)) (< ($generated@@95 0) ($generated@@29 $generated@@227))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 ($generated@@95 0)) (< ($generated@@95 0) ($generated@@36 $generated@@227)))) (=> (and (<= 0 ($generated@@95 0)) (< ($generated@@95 0) ($generated@@36 $generated@@227))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@16 ($generated@@130 $generated@@40 $generated@@61 $generated@@12 $generated@@225 $generated@@227 ($generated@@103 ($generated@@112 ($generated@@95 0)) ($generated@@95 0))))) (=> ($generated@@16 ($generated@@130 $generated@@40 $generated@@61 $generated@@12 $generated@@225 $generated@@227 ($generated@@103 ($generated@@112 ($generated@@95 0)) ($generated@@95 0)))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@33 $generated@@40 $generated@@228 $generated@@56)))))))))))))
(let (($generated@@232  (=> (and ($generated@@49 $generated@@226) ($generated@@229 $generated@@226)) (=> (and (and (and ($generated@@33 $generated@@40 $generated@@228 $generated@@53) ($generated@@39 $generated@@40 $generated@@228 $generated@@53 $generated@@226)) (and ($generated@@33 $generated@@40 $generated@@227 ($generated@@41 $generated@@56)) ($generated@@39 $generated@@40 $generated@@227 ($generated@@41 $generated@@56) $generated@@226))) (and (and (= 1 $generated@@230) (> ($generated@@29 $generated@@227) 0)) (and (> ($generated@@36 $generated@@227) 0) (= (ControlFlow 0 7) 2)))) $generated@@231))))
$generated@@232)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
