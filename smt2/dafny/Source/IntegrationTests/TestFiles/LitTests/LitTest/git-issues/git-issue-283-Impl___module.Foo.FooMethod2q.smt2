(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 (T@T) Int)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 (Bool) T@U)
(declare-fun $generated@@21 (T@U) Bool)
(declare-fun $generated@@22 (Int) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (Real) T@U)
(declare-fun $generated@@25 (T@U) Real)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U Int) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@50 (T@T T@U T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@79 (Int) Int)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@101 (Int) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) Bool)
(declare-fun $generated@@117 (T@U) Bool)
(declare-fun $generated@@121 (T@U) Bool)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Int)
(declare-fun $generated@@164 (T@U) Int)
(declare-fun $generated@@166 (T@U) Int)
(declare-fun $generated@@171 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@217 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@16 $generated@@17) 0) (= ($generated@@16 $generated@@18) 1)) (= ($generated@@16 $generated@@19) 2)) (forall (($generated@@26 Bool) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Int) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Real) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15)
)
(assert (= ($generated@@32 $generated) $generated@@1))
(assert (= ($generated@@32 $generated@@0) $generated@@2))
(assert (= ($generated@@16 $generated@@38) 3))
(assert (forall (($generated@@39 T@U) ($generated@@40 Int) ) (!  (=> (and (<= 0 $generated@@40) (< $generated@@40 ($generated@@35 $generated@@39))) (< ($generated@@36 ($generated@@37 $generated@@38 ($generated@@33 $generated@@39 $generated@@40))) ($generated@@36 ($generated@@34 $generated@@39))))
 :pattern ( ($generated@@33 $generated@@39 $generated@@40) ($generated@@34 $generated@@39))
)))
(assert (= ($generated@@35 $generated@@41) 0))
(assert (= ($generated@@42 $generated@@43) $generated@@9))
(assert (= ($generated@@16 $generated@@45) 4))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@48 $generated@@46 $generated@@49) ($generated@@44 $generated@@45 $generated@@48 $generated@@47 $generated@@49))
 :pattern ( ($generated@@44 $generated@@45 $generated@@48 $generated@@46 $generated@@49))
 :pattern ( ($generated@@44 $generated@@45 $generated@@48 $generated@@47 $generated@@49))
)))
(assert ($generated@@50 $generated@@38 $generated@@43 $generated@@51))
(assert  (and (and (and (and (and (and (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@53 $generated@@60 $generated@@61 ($generated@@57 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@53 $generated@@65 $generated@@66 ($generated@@57 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@53 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (= ($generated@@16 $generated@@54) 5)) (= ($generated@@16 $generated@@55) 6)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@16 ($generated@@56 $generated@@71 $generated@@72)) 7))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@58 ($generated@@56 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@56 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@59 ($generated@@56 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@56 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@77 $generated@@47 $generated@@78)  (or (= $generated@@77 $generated@@52) ($generated@@21 ($generated@@37 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@45 ($generated@@56 $generated@@54 $generated@@55) $generated@@78 $generated@@77) $generated@@4)))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@77 $generated@@47 $generated@@78))
)))
(assert (forall (($generated@@80 Int) ) (! (= ($generated@@79 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 $generated@@85) (= ($generated@@42 $generated@@85) $generated@@6))
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 $generated@@87) (= ($generated@@42 $generated@@87) $generated@@8))
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 $generated@@89) (= ($generated@@42 $generated@@89) $generated@@9))
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@90 $generated@@91) (= ($generated@@42 $generated@@91) $generated@@11))
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@37 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@37 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@88 $generated@@95) (= $generated@@95 $generated@@43))
 :pattern ( ($generated@@88 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@84 $generated@@97) (exists (($generated@@98 T@U) ) (= $generated@@97 ($generated@@96 $generated@@98))))
 :pattern ( ($generated@@84 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@86 $generated@@99) (exists (($generated@@100 T@U) ) (= $generated@@99 ($generated@@34 $generated@@100))))
 :pattern ( ($generated@@86 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@90 $generated@@102) (exists (($generated@@103 Int) ) (= $generated@@102 ($generated@@101 $generated@@103))))
 :pattern ( ($generated@@90 $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@104 ($generated@@92 $generated@@108 $generated@@105) $generated@@106 $generated@@107) ($generated@@44 $generated@@108 $generated@@105 $generated@@106 $generated@@107))
 :pattern ( ($generated@@104 ($generated@@92 $generated@@108 $generated@@105) $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@111 T@U) ) (!  (and (= ($generated@@32 ($generated@@109 $generated@@111)) $generated@@7) (= ($generated@@110 ($generated@@109 $generated@@111)) $generated@@14))
 :pattern ( ($generated@@109 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@112 $generated@@113 $generated@@46) (and (= ($generated@@92 $generated@@45 ($generated@@37 $generated@@45 $generated@@113)) $generated@@113) ($generated@@50 $generated@@45 ($generated@@37 $generated@@45 $generated@@113) $generated@@46)))
 :pattern ( ($generated@@112 $generated@@113 $generated@@46))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@112 $generated@@114 $generated@@51) (and (= ($generated@@92 $generated@@38 ($generated@@37 $generated@@38 $generated@@114)) $generated@@114) ($generated@@50 $generated@@38 ($generated@@37 $generated@@38 $generated@@114) $generated@@51)))
 :pattern ( ($generated@@112 $generated@@114 $generated@@51))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@112 $generated@@115 $generated@@47) (and (= ($generated@@92 $generated@@45 ($generated@@37 $generated@@45 $generated@@115)) $generated@@115) ($generated@@50 $generated@@45 ($generated@@37 $generated@@45 $generated@@115) $generated@@47)))
 :pattern ( ($generated@@112 $generated@@115 $generated@@47))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@50 $generated@@45 $generated@@116 $generated@@46)  (and ($generated@@50 $generated@@45 $generated@@116 $generated@@47) (or (not (= $generated@@116 $generated@@52)) (not true))))
 :pattern ( ($generated@@50 $generated@@45 $generated@@116 $generated@@46))
 :pattern ( ($generated@@50 $generated@@45 $generated@@116 $generated@@47))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@117 $generated@@120) (= ($generated@@44 $generated@@38 ($generated@@96 $generated@@119) ($generated@@109 $generated@@118) $generated@@120) ($generated@@104 $generated@@119 $generated@@118 $generated@@120)))
 :pattern ( ($generated@@44 $generated@@38 ($generated@@96 $generated@@119) ($generated@@109 $generated@@118) $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@121 $generated@@122) (or ($generated@@84 $generated@@122) ($generated@@86 $generated@@122)))
 :pattern ( ($generated@@121 $generated@@122))
)))
(assert (= ($generated@@16 $generated@@123) 8))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and ($generated@@117 $generated@@127) (and ($generated@@86 $generated@@126) (exists (($generated@@128 T@U) ) (! ($generated@@44 $generated@@38 $generated@@126 ($generated@@109 $generated@@128) $generated@@127)
 :pattern ( ($generated@@44 $generated@@38 $generated@@126 ($generated@@109 $generated@@128) $generated@@127))
)))) ($generated@@44 $generated@@123 ($generated@@124 $generated@@126) ($generated@@125 $generated) $generated@@127))
 :pattern ( ($generated@@44 $generated@@123 ($generated@@124 $generated@@126) ($generated@@125 $generated) $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> ($generated@@117 $generated@@131) (= ($generated@@44 $generated@@38 ($generated@@34 $generated@@130) ($generated@@109 $generated@@129) $generated@@131) ($generated@@44 $generated@@123 $generated@@130 ($generated@@125 $generated) $generated@@131)))
 :pattern ( ($generated@@44 $generated@@38 ($generated@@34 $generated@@130) ($generated@@109 $generated@@129) $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@50 $generated@@38 $generated@@133 ($generated@@109 $generated@@132)) (or ($generated@@84 $generated@@133) ($generated@@86 $generated@@133)))
 :pattern ( ($generated@@86 $generated@@133) ($generated@@50 $generated@@38 $generated@@133 ($generated@@109 $generated@@132)))
 :pattern ( ($generated@@84 $generated@@133) ($generated@@50 $generated@@38 $generated@@133 ($generated@@109 $generated@@132)))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@50 $generated@@38 $generated@@134 $generated@@51) (or ($generated@@88 $generated@@134) ($generated@@90 $generated@@134)))
 :pattern ( ($generated@@90 $generated@@134) ($generated@@50 $generated@@38 $generated@@134 $generated@@51))
 :pattern ( ($generated@@88 $generated@@134) ($generated@@50 $generated@@38 $generated@@134 $generated@@51))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> ($generated@@112 $generated@@135 $generated@@0) (and (= ($generated@@92 $generated@@18 ($generated@@37 $generated@@18 $generated@@135)) $generated@@135) ($generated@@50 $generated@@18 ($generated@@37 $generated@@18 $generated@@135) $generated@@0)))
 :pattern ( ($generated@@112 $generated@@135 $generated@@0))
)))
(assert (= ($generated@@16 $generated@@136) 9))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@112 $generated@@137 $generated) (and (= ($generated@@92 $generated@@136 ($generated@@37 $generated@@136 $generated@@137)) $generated@@137) ($generated@@50 $generated@@136 ($generated@@37 $generated@@136 $generated@@137) $generated)))
 :pattern ( ($generated@@112 $generated@@137 $generated))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@T) ) (! (= ($generated@@112 ($generated@@92 $generated@@140 $generated@@138) $generated@@139) ($generated@@50 $generated@@140 $generated@@138 $generated@@139))
 :pattern ( ($generated@@112 ($generated@@92 $generated@@140 $generated@@138) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! (<= 0 ($generated@@35 $generated@@141))
 :pattern ( ($generated@@35 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@44 $generated@@123 $generated@@142 ($generated@@125 $generated@@143) $generated@@144) (forall (($generated@@145 Int) ) (!  (=> (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@35 $generated@@142))) ($generated@@104 ($generated@@33 $generated@@142 $generated@@145) $generated@@143 $generated@@144))
 :pattern ( ($generated@@33 $generated@@142 $generated@@145))
)))
 :pattern ( ($generated@@44 $generated@@123 $generated@@142 ($generated@@125 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@125 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@125 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@32 ($generated@@125 $generated@@148)) $generated@@3)
 :pattern ( ($generated@@125 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@42 ($generated@@96 $generated@@149)) $generated@@6)
 :pattern ( ($generated@@96 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@150 ($generated@@109 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@109 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@152 ($generated@@96 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@96 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@42 ($generated@@34 $generated@@154)) $generated@@8)
 :pattern ( ($generated@@34 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@124 ($generated@@34 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@34 $generated@@155))
)))
(assert (forall (($generated@@156 Int) ) (! (= ($generated@@42 ($generated@@101 $generated@@156)) $generated@@11)
 :pattern ( ($generated@@101 $generated@@156))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 ($generated@@101 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@101 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@37 $generated@@160 ($generated@@92 $generated@@160 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@92 $generated@@160 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@50 $generated@@38 ($generated@@96 $generated@@162) ($generated@@109 $generated@@161)) ($generated@@112 $generated@@162 $generated@@161))
 :pattern ( ($generated@@50 $generated@@38 ($generated@@96 $generated@@162) ($generated@@109 $generated@@161)))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@50 $generated@@38 ($generated@@101 $generated@@163) $generated@@51) ($generated@@50 $generated@@18 ($generated@@22 $generated@@163) $generated@@0))
 :pattern ( ($generated@@50 $generated@@38 ($generated@@101 $generated@@163) $generated@@51))
)))
(assert (forall (($generated@@165 T@U) ) (! (< ($generated@@164 $generated@@165) ($generated@@36 ($generated@@96 $generated@@165)))
 :pattern ( ($generated@@96 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (< ($generated@@166 $generated@@167) ($generated@@36 ($generated@@34 $generated@@167)))
 :pattern ( ($generated@@34 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and ($generated@@117 $generated@@170) (and ($generated@@84 $generated@@168) ($generated@@44 $generated@@38 $generated@@168 ($generated@@109 $generated@@169) $generated@@170))) ($generated@@104 ($generated@@152 $generated@@168) $generated@@169 $generated@@170))
 :pattern ( ($generated@@104 ($generated@@152 $generated@@168) $generated@@169 $generated@@170))
)))
(assert  (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@171 $generated@@174 $generated@@175 $generated@@176 ($generated@@173 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@179 $generated@@180) $generated@@177)
 :weight 0
)) (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@171 $generated@@181 $generated@@182 $generated@@183 ($generated@@173 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@171 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@171 $generated@@190 $generated@@191 $generated@@192 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@171 $generated@@190 $generated@@191 $generated@@192 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)))))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 Bool) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@21 ($generated@@171 $generated@@45 $generated@@54 $generated@@17 ($generated@@172 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@203 $generated@@204))  (=> (and (or (not (= $generated@@203 $generated@@199)) (not true)) ($generated@@21 ($generated@@37 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@45 ($generated@@56 $generated@@54 $generated@@55) $generated@@200 $generated@@203) $generated@@201)))) $generated@@202))
 :pattern ( ($generated@@171 $generated@@45 $generated@@54 $generated@@17 ($generated@@172 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and ($generated@@117 $generated@@206) (and ($generated@@90 $generated@@205) ($generated@@44 $generated@@38 $generated@@205 $generated@@51 $generated@@206))) ($generated@@44 $generated@@18 ($generated@@22 ($generated@@157 $generated@@205)) $generated@@0 $generated@@206))
 :pattern ( ($generated@@44 $generated@@18 ($generated@@22 ($generated@@157 $generated@@205)) $generated@@0 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ) (! (= ($generated@@164 ($generated@@92 $generated@@38 $generated@@207)) ($generated@@36 $generated@@207))
 :pattern ( ($generated@@164 ($generated@@92 $generated@@38 $generated@@207)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> ($generated@@112 $generated@@208 ($generated@@125 $generated@@209)) (and (= ($generated@@92 $generated@@123 ($generated@@37 $generated@@123 $generated@@208)) $generated@@208) ($generated@@50 $generated@@123 ($generated@@37 $generated@@123 $generated@@208) ($generated@@125 $generated@@209))))
 :pattern ( ($generated@@112 $generated@@208 ($generated@@125 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@112 $generated@@211 ($generated@@109 $generated@@210)) (and (= ($generated@@92 $generated@@38 ($generated@@37 $generated@@38 $generated@@211)) $generated@@211) ($generated@@50 $generated@@38 ($generated@@37 $generated@@38 $generated@@211) ($generated@@109 $generated@@210))))
 :pattern ( ($generated@@112 $generated@@211 ($generated@@109 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (= ($generated@@50 $generated@@38 ($generated@@34 $generated@@213) ($generated@@109 $generated@@212)) ($generated@@50 $generated@@123 $generated@@213 ($generated@@125 $generated)))
 :pattern ( ($generated@@50 $generated@@38 ($generated@@34 $generated@@213) ($generated@@109 $generated@@212)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and ($generated@@117 $generated@@215) ($generated@@50 $generated@@38 $generated@@214 $generated@@51)) ($generated@@44 $generated@@38 $generated@@214 $generated@@51 $generated@@215))
 :pattern ( ($generated@@44 $generated@@38 $generated@@214 $generated@@51 $generated@@215))
)))
(assert (= ($generated@@32 $generated@@46) $generated@@5))
(assert (= ($generated@@110 $generated@@46) $generated@@13))
(assert (= ($generated@@32 $generated@@51) $generated@@10))
(assert (= ($generated@@110 $generated@@51) $generated@@15))
(assert (= ($generated@@32 $generated@@47) $generated@@12))
(assert (= ($generated@@110 $generated@@47) $generated@@13))
(assert (= $generated@@43 ($generated@@81 $generated@@38 $generated@@43)))
(assert (forall (($generated@@218 T@U) ) (! (= ($generated@@50 $generated@@45 $generated@@218 $generated@@47)  (or (= $generated@@218 $generated@@52) ($generated@@216 ($generated@@217 $generated@@218))))
 :pattern ( ($generated@@50 $generated@@45 $generated@@218 $generated@@47))
)))
(assert (forall (($generated@@219 Int) ) (! (= ($generated@@92 $generated@@18 ($generated@@22 ($generated@@79 $generated@@219))) ($generated@@81 $generated@@55 ($generated@@92 $generated@@18 ($generated@@22 $generated@@219))))
 :pattern ( ($generated@@92 $generated@@18 ($generated@@22 ($generated@@79 $generated@@219))))
)))
(assert (forall (($generated@@220 T@U) ) (! (= ($generated@@96 ($generated@@81 $generated@@55 $generated@@220)) ($generated@@81 $generated@@38 ($generated@@96 $generated@@220)))
 :pattern ( ($generated@@96 ($generated@@81 $generated@@55 $generated@@220)))
)))
(assert (forall (($generated@@221 T@U) ) (! (= ($generated@@34 ($generated@@81 $generated@@123 $generated@@221)) ($generated@@81 $generated@@38 ($generated@@34 $generated@@221)))
 :pattern ( ($generated@@34 ($generated@@81 $generated@@123 $generated@@221)))
)))
(assert (forall (($generated@@222 Int) ) (! (= ($generated@@101 ($generated@@79 $generated@@222)) ($generated@@81 $generated@@38 ($generated@@101 $generated@@222)))
 :pattern ( ($generated@@101 ($generated@@79 $generated@@222)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@T) ) (! (= ($generated@@92 $generated@@224 ($generated@@81 $generated@@224 $generated@@223)) ($generated@@81 $generated@@55 ($generated@@92 $generated@@224 $generated@@223)))
 :pattern ( ($generated@@92 $generated@@224 ($generated@@81 $generated@@224 $generated@@223)))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= ($generated@@35 $generated@@225) 0) (= $generated@@225 $generated@@41))
 :pattern ( ($generated@@35 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! ($generated@@44 $generated@@18 $generated@@227 $generated@@0 $generated@@226)
 :pattern ( ($generated@@44 $generated@@18 $generated@@227 $generated@@0 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! ($generated@@44 $generated@@136 $generated@@229 $generated $generated@@228)
 :pattern ( ($generated@@44 $generated@@136 $generated@@229 $generated $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= ($generated@@50 $generated@@123 $generated@@230 ($generated@@125 $generated@@231)) (forall (($generated@@232 Int) ) (!  (=> (and (<= 0 $generated@@232) (< $generated@@232 ($generated@@35 $generated@@230))) ($generated@@112 ($generated@@33 $generated@@230 $generated@@232) $generated@@231))
 :pattern ( ($generated@@33 $generated@@230 $generated@@232))
)))
 :pattern ( ($generated@@50 $generated@@123 $generated@@230 ($generated@@125 $generated@@231)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 Int) ) (!  (=> (and (<= 0 $generated@@234) (< $generated@@234 ($generated@@35 $generated@@233))) (< ($generated@@36 ($generated@@37 $generated@@38 ($generated@@33 $generated@@233 $generated@@234))) ($generated@@166 $generated@@233)))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@38 ($generated@@33 $generated@@233 $generated@@234))))
)))
(assert (forall (($generated@@235 T@U) ) (! ($generated@@50 $generated@@18 $generated@@235 $generated@@0)
 :pattern ( ($generated@@50 $generated@@18 $generated@@235 $generated@@0))
)))
(assert (forall (($generated@@236 T@U) ) (! ($generated@@50 $generated@@136 $generated@@236 $generated)
 :pattern ( ($generated@@50 $generated@@136 $generated@@236 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () Int)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 () Int)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 () Int)
(declare-fun $generated@@245 () Int)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () Int)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@255 true))
(let (($generated@@256  (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> ($generated@@84 $generated@@237) (=> ($generated@@88 ($generated@@37 $generated@@38 ($generated@@152 $generated@@237))) ($generated@@21 ($generated@@81 $generated@@17 ($generated@@20 true)))))) (=> (=> ($generated@@84 $generated@@237) (=> ($generated@@88 ($generated@@37 $generated@@38 ($generated@@152 $generated@@237))) ($generated@@21 ($generated@@81 $generated@@17 ($generated@@20 true))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@84 $generated@@237) (=> (not ($generated@@88 ($generated@@37 $generated@@38 ($generated@@152 $generated@@237)))) ($generated@@21 ($generated@@81 $generated@@17 ($generated@@20 true)))))) (=> (=> ($generated@@84 $generated@@237) (=> (not ($generated@@88 ($generated@@37 $generated@@38 ($generated@@152 $generated@@237)))) ($generated@@21 ($generated@@81 $generated@@17 ($generated@@20 true))))) (=> (= (ControlFlow 0 4) (- 0 3)) (=> (not ($generated@@84 $generated@@237)) ($generated@@21 ($generated@@81 $generated@@17 ($generated@@20 true)))))))))))
(let (($generated@@257  (=> (and (or (or (= $generated@@238 ($generated@@79 0)) (= $generated@@238 ($generated@@79 1))) (= $generated@@238 ($generated@@79 3))) (= (ControlFlow 0 7) 4)) $generated@@256)))
(let (($generated@@258 true))
(let (($generated@@259  (and (=> (= (ControlFlow 0 8) 2) $generated@@258) (=> (= (ControlFlow 0 8) 7) $generated@@257))))
(let (($generated@@260  (=> (and (or (= $generated@@238 ($generated@@79 0)) (= $generated@@238 ($generated@@79 1))) (= (ControlFlow 0 10) 8)) $generated@@259)))
(let (($generated@@261  (=> (and (not (or (= $generated@@238 ($generated@@79 0)) (= $generated@@238 ($generated@@79 1)))) (= (ControlFlow 0 9) 8)) $generated@@259)))
(let (($generated@@262  (=> (= $generated@@238 ($generated@@79 0)) (and (=> (= (ControlFlow 0 12) 9) $generated@@261) (=> (= (ControlFlow 0 12) 10) $generated@@260)))))
(let (($generated@@263  (=> (or (not (= $generated@@238 ($generated@@79 0))) (not true)) (and (=> (= (ControlFlow 0 11) 9) $generated@@261) (=> (= (ControlFlow 0 11) 10) $generated@@260)))))
(let (($generated@@264  (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (or (= $generated@@238 ($generated@@79 0)) (= $generated@@238 ($generated@@79 1))) (= $generated@@238 ($generated@@79 3)))) (=> (or (or (= $generated@@238 ($generated@@79 0)) (= $generated@@238 ($generated@@79 1))) (= $generated@@238 ($generated@@79 3))) (and (=> (= (ControlFlow 0 13) 11) $generated@@263) (=> (= (ControlFlow 0 13) 12) $generated@@262))))))
(let (($generated@@265  (=> (and (or (= $generated@@238 ($generated@@79 0)) (= $generated@@238 ($generated@@79 1))) (= (ControlFlow 0 16) 13)) $generated@@264)))
(let (($generated@@266  (=> (and (not (or (= $generated@@238 ($generated@@79 0)) (= $generated@@238 ($generated@@79 1)))) (= (ControlFlow 0 15) 13)) $generated@@264)))
(let (($generated@@267  (=> (= $generated@@238 ($generated@@79 0)) (and (=> (= (ControlFlow 0 18) 15) $generated@@266) (=> (= (ControlFlow 0 18) 16) $generated@@265)))))
(let (($generated@@268  (=> (or (not (= $generated@@238 ($generated@@79 0))) (not true)) (and (=> (= (ControlFlow 0 17) 15) $generated@@266) (=> (= (ControlFlow 0 17) 16) $generated@@265)))))
(let (($generated@@269  (=> (and (= $generated@@239 ($generated@@101 $generated@@240)) (= $generated@@241 $generated@@240)) (=> (and (and ($generated@@50 $generated@@18 ($generated@@22 $generated@@241) $generated@@0) (= $generated@@242 $generated@@241)) (and (= $generated@@243 ($generated@@79 2)) (= $generated@@238 $generated@@244))) (and (=> (= (ControlFlow 0 22) 17) $generated@@268) (=> (= (ControlFlow 0 22) 18) $generated@@267))))))
(let (($generated@@270  (=> (or (not (= $generated@@239 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 24) 22) $generated@@269) (=> (= (ControlFlow 0 24) 23) $generated@@255)))))
(let (($generated@@271  (=> (= $generated@@239 $generated@@43) (=> (and (= $generated@@245 ($generated@@79 1)) (= $generated@@238 $generated@@245)) (and (=> (= (ControlFlow 0 21) 17) $generated@@268) (=> (= (ControlFlow 0 21) 18) $generated@@267))))))
(let (($generated@@272  (=> (= $generated@@237 ($generated@@96 ($generated@@92 $generated@@38 $generated@@239))) (=> (and ($generated@@50 $generated@@38 $generated@@239 $generated@@51) ($generated@@44 $generated@@38 $generated@@239 $generated@@51 $generated@@246)) (and (=> (= (ControlFlow 0 25) 21) $generated@@271) (=> (= (ControlFlow 0 25) 24) $generated@@270))))))
(let (($generated@@273  (=> (= $generated@@237 ($generated@@34 $generated@@247)) (=> (and ($generated@@50 $generated@@123 $generated@@247 ($generated@@125 $generated)) ($generated@@44 $generated@@123 $generated@@247 ($generated@@125 $generated) $generated@@246)) (=> (and (and (and ($generated@@50 $generated@@123 $generated@@248 ($generated@@125 $generated)) ($generated@@44 $generated@@123 $generated@@248 ($generated@@125 $generated) $generated@@246)) (= $generated@@249 $generated@@247)) (and (and ($generated@@50 $generated@@123 $generated@@249 ($generated@@125 $generated)) (= $generated@@248 $generated@@249)) (and (= $generated@@250 ($generated@@79 3)) (= $generated@@238 $generated@@250)))) (and (=> (= (ControlFlow 0 19) 17) $generated@@268) (=> (= (ControlFlow 0 19) 18) $generated@@267)))))))
(let (($generated@@274 true))
(let (($generated@@275  (=> (or (not (= $generated@@237 ($generated@@96 ($generated@@92 $generated@@38 $generated@@239)))) (not true)) (and (=> (= (ControlFlow 0 20) 19) $generated@@273) (=> (= (ControlFlow 0 20) 1) $generated@@274)))))
(let (($generated@@276  (=> (and (= $generated@@251 ($generated@@172 $generated@@52 $generated@@246 $generated@@4 false)) (= $generated@@244 ($generated@@79 0))) (and (=> (= (ControlFlow 0 26) 25) $generated@@272) (=> (= (ControlFlow 0 26) 20) $generated@@275)))))
(let (($generated@@277  (=> (and (and ($generated@@117 $generated@@246) ($generated@@252 $generated@@246)) (and (or (not (= $generated@@253 $generated@@52)) (not true)) (and ($generated@@50 $generated@@45 $generated@@253 $generated@@46) ($generated@@44 $generated@@45 $generated@@253 $generated@@46 $generated@@246)))) (=> (and (and (and ($generated@@50 $generated@@38 $generated@@237 ($generated@@109 $generated@@51)) ($generated@@44 $generated@@38 $generated@@237 ($generated@@109 $generated@@51) $generated@@246)) ($generated@@121 $generated@@237)) (and (= 1 $generated@@254) (= (ControlFlow 0 27) 26))) $generated@@276))))
$generated@@277))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
