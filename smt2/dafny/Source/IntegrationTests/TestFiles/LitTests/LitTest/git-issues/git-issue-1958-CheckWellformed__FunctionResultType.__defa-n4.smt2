(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U T@U T@U) T@U)
(declare-fun $generated@@26 (T@U T@U T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@35 (T@U Int) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@90 (T@U) Int)
(declare-fun $generated@@91 (T@U) Int)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@97 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@T) T@T)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@164 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert  (and (= ($generated@@7 $generated@@28) 3) (= ($generated@@7 $generated@@36) 4)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (or ($generated@@26 $generated@@38 $generated@@39 $generated@@40) (and (< 1 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@39 ($generated@@29 $generated@@38)) ($generated@@30 $generated@@40 $generated@@38)))) (and (=> (and ($generated@@31 ($generated@@25 $generated@@38 $generated@@39 $generated@@40)) (< ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 ($generated@@25 $generated@@38 $generated@@39 $generated@@40)))) ($generated@@34 $generated@@39))) (= ($generated@@35 $generated@@39 ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 ($generated@@25 $generated@@38 $generated@@39 $generated@@40))))) $generated@@40)) ($generated@@27 $generated@@36 ($generated@@25 $generated@@38 $generated@@39 $generated@@40) ($generated@@37 $generated))))
 :pattern ( ($generated@@25 $generated@@38 $generated@@39 $generated@@40))
))))
(assert (= ($generated@@34 $generated@@41) 0))
(assert (= ($generated@@42 $generated@@43) $generated@@4))
(assert (forall (($generated@@44 T@U) ) (! ($generated@@27 $generated@@36 $generated@@43 ($generated@@37 $generated@@44))
 :pattern ( ($generated@@27 $generated@@36 $generated@@43 ($generated@@37 $generated@@44)))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (or ($generated@@26 $generated@@49 ($generated@@45 $generated@@28 $generated@@50) $generated@@51) (and (< 1 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@50 ($generated@@29 $generated@@49)) ($generated@@30 $generated@@51 $generated@@49)))) (= ($generated@@25 $generated@@49 ($generated@@45 $generated@@28 $generated@@50) $generated@@51) (ite (< ($generated@@34 ($generated@@45 $generated@@28 $generated@@50)) 12) $generated@@43 (ite (= ($generated@@35 ($generated@@45 $generated@@28 $generated@@50) ($generated@@46 9)) $generated@@51) ($generated@@47 ($generated@@48 $generated@@9 ($generated@@13 ($generated@@46 9)))) (ite (= ($generated@@35 ($generated@@45 $generated@@28 $generated@@50) ($generated@@46 2)) $generated@@51) ($generated@@47 ($generated@@48 $generated@@9 ($generated@@13 ($generated@@46 2)))) $generated@@43)))))
 :weight 3
 :pattern ( ($generated@@25 $generated@@49 ($generated@@45 $generated@@28 $generated@@50) $generated@@51))
))))
(assert (forall (($generated@@52 Int) ) (! (= ($generated@@46 $generated@@52) $generated@@52)
 :pattern ( ($generated@@46 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@45 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@45 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@55 $generated@@56) (= ($generated@@42 $generated@@56) $generated@@4))
 :pattern ( ($generated@@55 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@31 $generated@@57) (= ($generated@@42 $generated@@57) $generated@@5))
 :pattern ( ($generated@@31 $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@48 $generated@@59 ($generated@@32 $generated@@59 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@32 $generated@@59 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@55 $generated@@60) (= $generated@@60 $generated@@43))
 :pattern ( ($generated@@55 $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@31 $generated@@61) (exists (($generated@@62 T@U) ) (= $generated@@61 ($generated@@47 $generated@@62))))
 :pattern ( ($generated@@31 $generated@@61))
)))
(assert (= ($generated@@7 $generated@@63) 5))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (or ($generated@@26 $generated@@64 ($generated@@45 $generated@@28 $generated@@65) ($generated@@45 $generated@@63 $generated@@66)) (and (< 1 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@65 ($generated@@29 $generated@@64)) ($generated@@30 $generated@@66 $generated@@64)))) (= ($generated@@25 $generated@@64 ($generated@@45 $generated@@28 $generated@@65) ($generated@@45 $generated@@63 $generated@@66)) (ite (< ($generated@@34 ($generated@@45 $generated@@28 $generated@@65)) 12) $generated@@43 (ite (= ($generated@@35 ($generated@@45 $generated@@28 $generated@@65) ($generated@@46 9)) ($generated@@45 $generated@@63 $generated@@66)) ($generated@@47 ($generated@@48 $generated@@9 ($generated@@13 ($generated@@46 9)))) (ite (= ($generated@@35 ($generated@@45 $generated@@28 $generated@@65) ($generated@@46 2)) ($generated@@45 $generated@@63 $generated@@66)) ($generated@@47 ($generated@@48 $generated@@9 ($generated@@13 ($generated@@46 2)))) $generated@@43)))))
 :weight 3
 :pattern ( ($generated@@25 $generated@@64 ($generated@@45 $generated@@28 $generated@@65) ($generated@@45 $generated@@63 $generated@@66)))
))))
(assert (forall (($generated@@68 T@U) ) (!  (and (= ($generated@@23 ($generated@@37 $generated@@68)) $generated@@3) (= ($generated@@67 ($generated@@37 $generated@@68)) $generated@@6))
 :pattern ( ($generated@@37 $generated@@68))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (or ($generated@@26 $generated@@69 $generated@@70 $generated@@71) (and (< 1 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@70 ($generated@@29 $generated@@69)) ($generated@@30 $generated@@71 $generated@@69)))) (= ($generated@@25 $generated@@69 $generated@@70 $generated@@71) (ite (< ($generated@@34 $generated@@70) 12) $generated@@43 (ite (= ($generated@@35 $generated@@70 ($generated@@46 9)) $generated@@71) ($generated@@47 ($generated@@48 $generated@@9 ($generated@@13 ($generated@@46 9)))) (ite (= ($generated@@35 $generated@@70 ($generated@@46 2)) $generated@@71) ($generated@@47 ($generated@@48 $generated@@9 ($generated@@13 ($generated@@46 2)))) $generated@@43)))))
 :pattern ( ($generated@@25 $generated@@69 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@27 $generated@@36 $generated@@73 ($generated@@37 $generated@@72)) (or ($generated@@55 $generated@@73) ($generated@@31 $generated@@73)))
 :pattern ( ($generated@@31 $generated@@73) ($generated@@27 $generated@@36 $generated@@73 ($generated@@37 $generated@@72)))
 :pattern ( ($generated@@55 $generated@@73) ($generated@@27 $generated@@36 $generated@@73 ($generated@@37 $generated@@72)))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@30 $generated@@74 $generated) (and (= ($generated@@48 $generated@@9 ($generated@@32 $generated@@9 $generated@@74)) $generated@@74) ($generated@@27 $generated@@9 ($generated@@32 $generated@@9 $generated@@74) $generated)))
 :pattern ( ($generated@@30 $generated@@74 $generated))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@30 ($generated@@48 $generated@@77 $generated@@75) $generated@@76) ($generated@@27 $generated@@77 $generated@@75 $generated@@76))
 :pattern ( ($generated@@30 ($generated@@48 $generated@@77 $generated@@75) $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (! (<= 0 ($generated@@34 $generated@@78))
 :pattern ( ($generated@@34 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@79 ($generated@@29 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@29 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@23 ($generated@@29 $generated@@81)) $generated@@1)
 :pattern ( ($generated@@29 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 ($generated@@37 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@37 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@42 ($generated@@47 $generated@@84)) $generated@@5)
 :pattern ( ($generated@@47 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@33 ($generated@@47 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@47 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@32 $generated@@87 ($generated@@48 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@48 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@27 $generated@@36 ($generated@@47 $generated@@89) ($generated@@37 $generated@@88)) ($generated@@30 $generated@@89 $generated@@88))
 :pattern ( ($generated@@27 $generated@@36 ($generated@@47 $generated@@89) ($generated@@37 $generated@@88)))
)))
(assert (forall (($generated@@92 T@U) ) (! (< ($generated@@90 $generated@@92) ($generated@@91 ($generated@@47 $generated@@92)))
 :pattern ( ($generated@@47 $generated@@92))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@93 $generated@@103 $generated@@104 $generated@@105 ($generated@@99 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@93 $generated@@110 $generated@@111 $generated@@112 ($generated@@99 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@93 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@93 $generated@@119 $generated@@120 $generated@@121 ($generated@@99 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@93 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))) (= ($generated@@7 $generated@@94) 6)) (= ($generated@@7 $generated@@95) 7)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@97 $generated@@128 $generated@@129 ($generated@@100 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@130) $generated@@132) $generated@@130)
 :weight 0
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 $generated@@133 $generated@@134 ($generated@@100 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@133 $generated@@134 $generated@@136 $generated@@138)))
 :weight 0
))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (= ($generated@@7 ($generated@@98 $generated@@139 $generated@@140)) 8))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@101 ($generated@@98 $generated@@141 $generated@@142)) $generated@@141)
 :pattern ( ($generated@@98 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (! (= ($generated@@102 ($generated@@98 $generated@@143 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@98 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Bool) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@12 ($generated@@93 $generated@@94 $generated@@95 $generated@@8 ($generated@@96 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))  (=> (and (or (not (= $generated@@149 $generated@@145)) (not true)) ($generated@@12 ($generated@@32 $generated@@8 ($generated@@97 $generated@@95 $generated@@63 ($generated@@97 $generated@@94 ($generated@@98 $generated@@95 $generated@@63) $generated@@146 $generated@@149) $generated@@147)))) $generated@@148))
 :pattern ( ($generated@@93 $generated@@94 $generated@@95 $generated@@8 ($generated@@96 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@90 ($generated@@48 $generated@@36 $generated@@151)) ($generated@@91 $generated@@151))
 :pattern ( ($generated@@90 ($generated@@48 $generated@@36 $generated@@151)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@30 $generated@@152 ($generated@@29 $generated@@153)) (and (= ($generated@@48 $generated@@28 ($generated@@32 $generated@@28 $generated@@152)) $generated@@152) ($generated@@27 $generated@@28 ($generated@@32 $generated@@28 $generated@@152) ($generated@@29 $generated@@153))))
 :pattern ( ($generated@@30 $generated@@152 ($generated@@29 $generated@@153)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> ($generated@@30 $generated@@155 ($generated@@37 $generated@@154)) (and (= ($generated@@48 $generated@@36 ($generated@@32 $generated@@36 $generated@@155)) $generated@@155) ($generated@@27 $generated@@36 ($generated@@32 $generated@@36 $generated@@155) ($generated@@37 $generated@@154))))
 :pattern ( ($generated@@30 $generated@@155 ($generated@@37 $generated@@154)))
)))
(assert (= $generated@@43 ($generated@@45 $generated@@36 $generated@@43)))
(assert (forall (($generated@@156 Int) ) (! (= ($generated@@48 $generated@@9 ($generated@@13 ($generated@@46 $generated@@156))) ($generated@@45 $generated@@63 ($generated@@48 $generated@@9 ($generated@@13 $generated@@156))))
 :pattern ( ($generated@@48 $generated@@9 ($generated@@13 ($generated@@46 $generated@@156))))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@47 ($generated@@45 $generated@@63 $generated@@157)) ($generated@@45 $generated@@36 ($generated@@47 $generated@@157)))
 :pattern ( ($generated@@47 ($generated@@45 $generated@@63 $generated@@157)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@T) ) (! (= ($generated@@48 $generated@@159 ($generated@@45 $generated@@159 $generated@@158)) ($generated@@45 $generated@@63 ($generated@@48 $generated@@159 $generated@@158)))
 :pattern ( ($generated@@48 $generated@@159 ($generated@@45 $generated@@159 $generated@@158)))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= ($generated@@34 $generated@@160) 0) (= $generated@@160 $generated@@41))
 :pattern ( ($generated@@34 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@161 ($generated@@29 $generated@@162)) (forall (($generated@@163 Int) ) (!  (=> (and (<= 0 $generated@@163) (< $generated@@163 ($generated@@34 $generated@@161))) ($generated@@30 ($generated@@35 $generated@@161 $generated@@163) $generated@@162))
 :pattern ( ($generated@@35 $generated@@161 $generated@@163))
)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@161 ($generated@@29 $generated@@162)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 Int) ) (!  (=> (and (<= 0 $generated@@166) (< $generated@@166 ($generated@@34 $generated@@165))) (< ($generated@@91 ($generated@@32 $generated@@36 ($generated@@35 $generated@@165 $generated@@166))) ($generated@@164 $generated@@165)))
 :pattern ( ($generated@@91 ($generated@@32 $generated@@36 ($generated@@35 $generated@@165 $generated@@166))))
)))
(assert (forall (($generated@@167 T@U) ) (! ($generated@@27 $generated@@9 $generated@@167 $generated)
 :pattern ( ($generated@@27 $generated@@9 $generated@@167 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@177 true))
(let (($generated@@178  (=> (and (=> (and ($generated@@31 $generated@@168) (< ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@168))) ($generated@@34 $generated@@169))) (= ($generated@@35 $generated@@169 ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@168)))) $generated@@170)) (= (ControlFlow 0 16) 11)) $generated@@177)))
(let (($generated@@179  (=> ($generated@@31 $generated@@168) (and (=> (= (ControlFlow 0 12) (- 0 15)) ($generated@@31 $generated@@168)) (=> ($generated@@31 $generated@@168) (=> (< ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@168))) ($generated@@34 $generated@@169)) (and (=> (= (ControlFlow 0 12) (- 0 14)) ($generated@@31 $generated@@168)) (=> ($generated@@31 $generated@@168) (and (=> (= (ControlFlow 0 12) (- 0 13)) (and (<= 0 ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@168)))) (< ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@168))) ($generated@@34 $generated@@169)))) (=> (and (<= 0 ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@168)))) (< ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@168))) ($generated@@34 $generated@@169))) (=> (and (= ($generated@@35 $generated@@169 ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@168)))) $generated@@170) (= (ControlFlow 0 12) 11)) $generated@@177)))))))))))
(let (($generated@@180  (=> (and ($generated@@27 $generated@@36 ($generated@@25 $generated@@171 $generated@@169 $generated@@170) ($generated@@37 $generated)) ($generated@@27 $generated@@36 $generated@@168 ($generated@@37 $generated))) (and (=> (= (ControlFlow 0 17) 12) $generated@@179) (=> (= (ControlFlow 0 17) 16) $generated@@178)))))
(let (($generated@@181  (=> (= (ControlFlow 0 2) (- 0 1)) (=> (and ($generated@@31 $generated@@168) (< ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@168))) ($generated@@34 $generated@@169))) (= ($generated@@35 $generated@@169 ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@168)))) $generated@@170)))))
(let (($generated@@182  (=> (or (not (= ($generated@@35 $generated@@169 ($generated@@46 2)) $generated@@170)) (not true)) (=> (and (and (= ($generated@@25 $generated@@171 $generated@@169 $generated@@170) ($generated@@45 $generated@@36 $generated@@43)) ($generated@@27 $generated@@36 ($generated@@25 $generated@@171 $generated@@169 $generated@@170) ($generated@@37 $generated))) (and (= ($generated@@25 $generated@@171 $generated@@169 $generated@@170) $generated@@168) (= (ControlFlow 0 6) 2))) $generated@@181))))
(let (($generated@@183  (=> (= ($generated@@35 $generated@@169 ($generated@@46 2)) $generated@@170) (=> (and (and (= ($generated@@25 $generated@@171 $generated@@169 $generated@@170) ($generated@@45 $generated@@36 ($generated@@47 ($generated@@48 $generated@@9 ($generated@@13 ($generated@@46 2)))))) ($generated@@27 $generated@@36 ($generated@@25 $generated@@171 $generated@@169 $generated@@170) ($generated@@37 $generated))) (and (= ($generated@@25 $generated@@171 $generated@@169 $generated@@170) $generated@@168) (= (ControlFlow 0 5) 2))) $generated@@181))))
(let (($generated@@184  (=> (or (not (= ($generated@@35 $generated@@169 ($generated@@46 9)) $generated@@170)) (not true)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 ($generated@@46 2)) (< ($generated@@46 2) ($generated@@34 $generated@@169)))) (=> (and (<= 0 ($generated@@46 2)) (< ($generated@@46 2) ($generated@@34 $generated@@169))) (and (=> (= (ControlFlow 0 7) 5) $generated@@183) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))))
(let (($generated@@185  (=> (= ($generated@@35 $generated@@169 ($generated@@46 9)) $generated@@170) (=> (and (and (= ($generated@@25 $generated@@171 $generated@@169 $generated@@170) ($generated@@45 $generated@@36 ($generated@@47 ($generated@@48 $generated@@9 ($generated@@13 ($generated@@46 9)))))) ($generated@@27 $generated@@36 ($generated@@25 $generated@@171 $generated@@169 $generated@@170) ($generated@@37 $generated))) (and (= ($generated@@25 $generated@@171 $generated@@169 $generated@@170) $generated@@168) (= (ControlFlow 0 4) 2))) $generated@@181))))
(let (($generated@@186  (=> (<= 12 ($generated@@34 $generated@@169)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 ($generated@@46 9)) (< ($generated@@46 9) ($generated@@34 $generated@@169)))) (=> (and (<= 0 ($generated@@46 9)) (< ($generated@@46 9) ($generated@@34 $generated@@169))) (and (=> (= (ControlFlow 0 9) 4) $generated@@185) (=> (= (ControlFlow 0 9) 7) $generated@@184)))))))
(let (($generated@@187  (=> (< ($generated@@34 $generated@@169) 12) (=> (and (and (= ($generated@@25 $generated@@171 $generated@@169 $generated@@170) ($generated@@45 $generated@@36 $generated@@43)) ($generated@@27 $generated@@36 ($generated@@25 $generated@@171 $generated@@169 $generated@@170) ($generated@@37 $generated))) (and (= ($generated@@25 $generated@@171 $generated@@169 $generated@@170) $generated@@168) (= (ControlFlow 0 3) 2))) $generated@@181))))
(let (($generated@@188  (=> (= $generated@@172 ($generated@@96 $generated@@173 $generated@@174 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 18) 17) $generated@@180) (=> (= (ControlFlow 0 18) 3) $generated@@187)) (=> (= (ControlFlow 0 18) 9) $generated@@186)))))
(let (($generated@@189  (=> (and ($generated@@175 $generated@@174) ($generated@@176 $generated@@174)) (=> (and (and ($generated@@27 $generated@@28 $generated@@169 ($generated@@29 $generated@@171)) ($generated@@30 $generated@@170 $generated@@171)) (and (= 1 $generated@@24) (= (ControlFlow 0 19) 18))) $generated@@188))))
$generated@@189))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 12) (- 13))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
