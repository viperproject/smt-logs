(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 () Int)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@T T@T) T@T)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 () T@U)
(declare-fun $generated@@104 (T@T T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@10 $generated@@29) 3))
(assert  (=> (<= 3 $generated@@26) (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (or ($generated@@30 ($generated@@28 $generated@@29 $generated@@38) ($generated@@28 $generated@@29 $generated@@39)) (and (< 3 $generated@@26) (and ($generated@@31 $generated@@29 $generated@@38 $generated@@32) ($generated@@31 $generated@@29 $generated@@39 $generated@@32)))) (= ($generated@@27 ($generated@@28 $generated@@29 $generated@@38) ($generated@@28 $generated@@29 $generated@@39)) (ite ($generated@@33 ($generated@@34 ($generated@@28 $generated@@29 $generated@@39))) true (ite ($generated@@35 ($generated@@34 ($generated@@28 $generated@@29 $generated@@38)))  (or ($generated@@36 ($generated@@34 ($generated@@28 $generated@@29 $generated@@39))) (and ($generated@@35 ($generated@@34 ($generated@@28 $generated@@29 $generated@@39))) (= ($generated@@37 ($generated@@34 ($generated@@28 $generated@@29 $generated@@39))) ($generated@@37 ($generated@@34 ($generated@@28 $generated@@29 $generated@@38)))))) (ite ($generated@@36 ($generated@@34 ($generated@@28 $generated@@29 $generated@@38)))  (or ($generated@@36 ($generated@@34 ($generated@@28 $generated@@29 $generated@@39))) (and ($generated@@35 ($generated@@34 ($generated@@28 $generated@@29 $generated@@39))) (= ($generated@@37 ($generated@@34 ($generated@@28 $generated@@29 $generated@@39))) ($generated@@28 $generated@@29 $generated@@38)))) false)))))
 :weight 3
 :pattern ( ($generated@@27 ($generated@@28 $generated@@29 $generated@@38) ($generated@@28 $generated@@29 $generated@@39)))
))))
(assert (= ($generated@@10 $generated@@43) 4))
(assert  (=> (< 2 $generated@@26) (forall (($generated@@45 T@U) ) (!  (=> (and (or (not (= $generated@@45 $generated@@40)) (not true)) (= ($generated@@41 $generated@@45) $generated@@42)) ($generated@@31 $generated@@43 ($generated@@34 $generated@@45) $generated@@44))
 :pattern ( ($generated@@34 $generated@@45))
))))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and ($generated@@35 $generated@@47) ($generated@@35 $generated@@48)) (= ($generated@@46 $generated@@47 $generated@@48) (= ($generated@@37 $generated@@47) ($generated@@37 $generated@@48))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48) ($generated@@35 $generated@@47))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48) ($generated@@35 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (and ($generated@@49 $generated@@50) ($generated@@49 $generated@@51)) (= ($generated@@46 $generated@@50 $generated@@51) (= ($generated@@37 $generated@@50) ($generated@@37 $generated@@51))))
 :pattern ( ($generated@@46 $generated@@50 $generated@@51) ($generated@@49 $generated@@50))
 :pattern ( ($generated@@46 $generated@@50 $generated@@51) ($generated@@49 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (and ($generated@@52 $generated@@54) ($generated@@52 $generated@@55)) (= ($generated@@46 $generated@@54 $generated@@55) (= ($generated@@53 $generated@@54) ($generated@@53 $generated@@55))))
 :pattern ( ($generated@@46 $generated@@54 $generated@@55) ($generated@@52 $generated@@54))
 :pattern ( ($generated@@46 $generated@@54 $generated@@55) ($generated@@52 $generated@@55))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@57 $generated@@66 $generated@@67 ($generated@@63 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@70) $generated@@68)
 :weight 0
)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (or (= $generated@@75 $generated@@76) (= ($generated@@57 $generated@@71 $generated@@72 ($generated@@63 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@76) ($generated@@57 $generated@@71 $generated@@72 $generated@@74 $generated@@76)))
 :weight 0
))) (= ($generated@@10 $generated@@58) 5)) (= ($generated@@10 $generated@@59) 6)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (= ($generated@@10 ($generated@@60 $generated@@77 $generated@@78)) 7))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@64 ($generated@@60 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@60 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@65 ($generated@@60 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@60 $generated@@81 $generated@@82))
))))
(assert  (=> (< 2 $generated@@26) (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and (and ($generated@@61 $generated@@83) (and (or (not (= $generated@@84 $generated@@40)) (not true)) (= ($generated@@41 $generated@@84) $generated@@42))) ($generated@@15 ($generated@@56 $generated@@11 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@29 ($generated@@60 $generated@@58 $generated@@59) $generated@@83 $generated@@84) $generated)))) ($generated@@62 $generated@@43 ($generated@@34 $generated@@84) $generated@@44 $generated@@83))
 :pattern ( ($generated@@34 $generated@@84) ($generated@@56 $generated@@11 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@29 ($generated@@60 $generated@@58 $generated@@59) $generated@@83 $generated@@84) $generated)))
))))
(assert (= ($generated@@85 $generated@@86) $generated@@3))
(assert (= ($generated@@85 $generated@@87) $generated@@7))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@31 $generated@@29 $generated@@88 $generated@@42)  (or (= $generated@@88 $generated@@40) (= ($generated@@41 $generated@@88) $generated@@42)))
 :pattern ( ($generated@@31 $generated@@29 $generated@@88 $generated@@42))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@62 $generated@@29 $generated@@89 $generated@@32 $generated@@90) ($generated@@62 $generated@@29 $generated@@89 $generated@@42 $generated@@90))
 :pattern ( ($generated@@62 $generated@@29 $generated@@89 $generated@@32 $generated@@90))
 :pattern ( ($generated@@62 $generated@@29 $generated@@89 $generated@@42 $generated@@90))
)))
(assert ($generated@@31 $generated@@43 $generated@@86 $generated@@44))
(assert ($generated@@31 $generated@@43 $generated@@87 $generated@@44))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@61 $generated@@91) ($generated@@62 $generated@@43 $generated@@86 $generated@@44 $generated@@91))
 :pattern ( ($generated@@62 $generated@@43 $generated@@86 $generated@@44 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@61 $generated@@92) ($generated@@62 $generated@@43 $generated@@87 $generated@@44 $generated@@92))
 :pattern ( ($generated@@62 $generated@@43 $generated@@87 $generated@@44 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@62 $generated@@29 $generated@@93 $generated@@42 $generated@@94)  (or (= $generated@@93 $generated@@40) ($generated@@15 ($generated@@56 $generated@@11 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@29 ($generated@@60 $generated@@58 $generated@@59) $generated@@94 $generated@@93) $generated)))))
 :pattern ( ($generated@@62 $generated@@29 $generated@@93 $generated@@42 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@46 $generated@@95 $generated@@96) (= $generated@@95 $generated@@96))
 :pattern ( ($generated@@46 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@28 $generated@@98 $generated@@97) $generated@@97)
 :pattern ( ($generated@@28 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@33 $generated@@99) (= ($generated@@85 $generated@@99) $generated@@3))
 :pattern ( ($generated@@33 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@35 $generated@@100) (= ($generated@@85 $generated@@100) $generated@@4))
 :pattern ( ($generated@@35 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@49 $generated@@101) (= ($generated@@85 $generated@@101) $generated@@5))
 :pattern ( ($generated@@49 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@52 $generated@@102) (= ($generated@@85 $generated@@102) $generated@@6))
 :pattern ( ($generated@@52 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@36 $generated@@103) (= ($generated@@85 $generated@@103) $generated@@7))
 :pattern ( ($generated@@36 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@104 $generated@@106 ($generated@@56 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@56 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@33 $generated@@107) (= $generated@@107 $generated@@86))
 :pattern ( ($generated@@33 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@36 $generated@@108) (= $generated@@108 $generated@@87))
 :pattern ( ($generated@@36 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@35 $generated@@110) (exists (($generated@@111 T@U) ) (= $generated@@110 ($generated@@109 $generated@@111))))
 :pattern ( ($generated@@35 $generated@@110))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@49 $generated@@113) (exists (($generated@@114 T@U) ) (= $generated@@113 ($generated@@112 $generated@@114))))
 :pattern ( ($generated@@49 $generated@@113))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@52 $generated@@116) (exists (($generated@@117 T@U) ) (= $generated@@116 ($generated@@115 $generated@@117))))
 :pattern ( ($generated@@52 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@31 $generated@@43 ($generated@@109 $generated@@118) $generated@@44) ($generated@@31 $generated@@29 $generated@@118 $generated@@32))
 :pattern ( ($generated@@31 $generated@@43 ($generated@@109 $generated@@118) $generated@@44))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@31 $generated@@43 ($generated@@112 $generated@@119) $generated@@44) ($generated@@31 $generated@@29 $generated@@119 $generated@@32))
 :pattern ( ($generated@@31 $generated@@43 ($generated@@112 $generated@@119) $generated@@44))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@31 $generated@@43 ($generated@@115 $generated@@120) $generated@@44) ($generated@@31 $generated@@29 $generated@@120 $generated@@32))
 :pattern ( ($generated@@31 $generated@@43 ($generated@@115 $generated@@120) $generated@@44))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@31 $generated@@29 $generated@@121 $generated@@32)  (and ($generated@@31 $generated@@29 $generated@@121 $generated@@42) (or (not (= $generated@@121 $generated@@40)) (not true))))
 :pattern ( ($generated@@31 $generated@@29 $generated@@121 $generated@@32))
 :pattern ( ($generated@@31 $generated@@29 $generated@@121 $generated@@42))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@61 $generated@@123) (= ($generated@@62 $generated@@43 ($generated@@109 $generated@@122) $generated@@44 $generated@@123) ($generated@@62 $generated@@29 $generated@@122 $generated@@32 $generated@@123)))
 :pattern ( ($generated@@62 $generated@@43 ($generated@@109 $generated@@122) $generated@@44 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> ($generated@@61 $generated@@125) (= ($generated@@62 $generated@@43 ($generated@@112 $generated@@124) $generated@@44 $generated@@125) ($generated@@62 $generated@@29 $generated@@124 $generated@@32 $generated@@125)))
 :pattern ( ($generated@@62 $generated@@43 ($generated@@112 $generated@@124) $generated@@44 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@61 $generated@@127) (= ($generated@@62 $generated@@43 ($generated@@115 $generated@@126) $generated@@44 $generated@@127) ($generated@@62 $generated@@29 $generated@@126 $generated@@32 $generated@@127)))
 :pattern ( ($generated@@62 $generated@@43 ($generated@@115 $generated@@126) $generated@@44 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and ($generated@@33 $generated@@128) ($generated@@33 $generated@@129)) ($generated@@46 $generated@@128 $generated@@129))
 :pattern ( ($generated@@46 $generated@@128 $generated@@129) ($generated@@33 $generated@@128))
 :pattern ( ($generated@@46 $generated@@128 $generated@@129) ($generated@@33 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and ($generated@@36 $generated@@130) ($generated@@36 $generated@@131)) ($generated@@46 $generated@@130 $generated@@131))
 :pattern ( ($generated@@46 $generated@@130 $generated@@131) ($generated@@36 $generated@@130))
 :pattern ( ($generated@@46 $generated@@130 $generated@@131) ($generated@@36 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@85 ($generated@@109 $generated@@132)) $generated@@4)
 :pattern ( ($generated@@109 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@37 ($generated@@109 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@109 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@85 ($generated@@112 $generated@@134)) $generated@@5)
 :pattern ( ($generated@@112 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@37 ($generated@@112 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@112 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@85 ($generated@@115 $generated@@136)) $generated@@6)
 :pattern ( ($generated@@115 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@53 ($generated@@115 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@115 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@56 $generated@@139 ($generated@@104 $generated@@139 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@104 $generated@@139 $generated@@138))
)))
(assert  (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@140 $generated@@143 $generated@@144 $generated@@145 ($generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@148 $generated@@149) $generated@@146)
 :weight 0
)) (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@155 $generated@@157) (= ($generated@@140 $generated@@150 $generated@@151 $generated@@152 ($generated@@142 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@140 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@140 $generated@@159 $generated@@160 $generated@@161 ($generated@@142 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@140 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 Bool) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@15 ($generated@@140 $generated@@29 $generated@@58 $generated@@11 ($generated@@141 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))  (=> (and (or (not (= $generated@@172 $generated@@168)) (not true)) ($generated@@15 ($generated@@56 $generated@@11 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@29 ($generated@@60 $generated@@58 $generated@@59) $generated@@169 $generated@@172) $generated@@170)))) $generated@@171))
 :pattern ( ($generated@@140 $generated@@29 $generated@@58 $generated@@11 ($generated@@141 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))
)))
(assert (= ($generated@@174 $generated@@32) $generated@@0))
(assert (= ($generated@@175 $generated@@32) $generated@@8))
(assert (= ($generated@@174 $generated@@44) $generated@@1))
(assert (= ($generated@@175 $generated@@44) $generated@@9))
(assert (= ($generated@@174 $generated@@42) $generated@@2))
(assert (= ($generated@@175 $generated@@42) $generated@@8))
(assert (= $generated@@86 ($generated@@28 $generated@@43 $generated@@86)))
(assert (= $generated@@87 ($generated@@28 $generated@@43 $generated@@87)))
(assert (forall (($generated@@176 T@U) ) (!  (=> ($generated@@31 $generated@@43 $generated@@176 $generated@@44) (or (or (or (or ($generated@@33 $generated@@176) ($generated@@35 $generated@@176)) ($generated@@49 $generated@@176)) ($generated@@52 $generated@@176)) ($generated@@36 $generated@@176)))
 :pattern ( ($generated@@36 $generated@@176) ($generated@@31 $generated@@43 $generated@@176 $generated@@44))
 :pattern ( ($generated@@52 $generated@@176) ($generated@@31 $generated@@43 $generated@@176 $generated@@44))
 :pattern ( ($generated@@49 $generated@@176) ($generated@@31 $generated@@43 $generated@@176 $generated@@44))
 :pattern ( ($generated@@35 $generated@@176) ($generated@@31 $generated@@43 $generated@@176 $generated@@44))
 :pattern ( ($generated@@33 $generated@@176) ($generated@@31 $generated@@43 $generated@@176 $generated@@44))
)))
(assert  (=> (<= 3 $generated@@26) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (or ($generated@@30 $generated@@177 $generated@@178) (and (< 3 $generated@@26) (and ($generated@@31 $generated@@29 $generated@@177 $generated@@32) ($generated@@31 $generated@@29 $generated@@178 $generated@@32)))) (= ($generated@@27 $generated@@177 $generated@@178) (ite ($generated@@33 ($generated@@34 $generated@@178)) true (ite ($generated@@35 ($generated@@34 $generated@@177))  (or ($generated@@36 ($generated@@34 $generated@@178)) (and ($generated@@35 ($generated@@34 $generated@@178)) (= ($generated@@37 ($generated@@34 $generated@@178)) ($generated@@37 ($generated@@34 $generated@@177))))) (ite ($generated@@36 ($generated@@34 $generated@@177))  (or ($generated@@36 ($generated@@34 $generated@@178)) (and ($generated@@35 ($generated@@34 $generated@@178)) (= ($generated@@37 ($generated@@34 $generated@@178)) $generated@@177))) false)))))
 :pattern ( ($generated@@27 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and ($generated@@61 $generated@@180) (and ($generated@@35 $generated@@179) ($generated@@62 $generated@@43 $generated@@179 $generated@@44 $generated@@180))) ($generated@@62 $generated@@29 ($generated@@37 $generated@@179) $generated@@32 $generated@@180))
 :pattern ( ($generated@@62 $generated@@29 ($generated@@37 $generated@@179) $generated@@32 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and ($generated@@61 $generated@@182) (and ($generated@@49 $generated@@181) ($generated@@62 $generated@@43 $generated@@181 $generated@@44 $generated@@182))) ($generated@@62 $generated@@29 ($generated@@37 $generated@@181) $generated@@32 $generated@@182))
 :pattern ( ($generated@@62 $generated@@29 ($generated@@37 $generated@@181) $generated@@32 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and ($generated@@61 $generated@@184) (and ($generated@@52 $generated@@183) ($generated@@62 $generated@@43 $generated@@183 $generated@@44 $generated@@184))) ($generated@@62 $generated@@29 ($generated@@53 $generated@@183) $generated@@32 $generated@@184))
 :pattern ( ($generated@@62 $generated@@29 ($generated@@53 $generated@@183) $generated@@32 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (! (= ($generated@@109 ($generated@@28 $generated@@29 $generated@@185)) ($generated@@28 $generated@@43 ($generated@@109 $generated@@185)))
 :pattern ( ($generated@@109 ($generated@@28 $generated@@29 $generated@@185)))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@112 ($generated@@28 $generated@@29 $generated@@186)) ($generated@@28 $generated@@43 ($generated@@112 $generated@@186)))
 :pattern ( ($generated@@112 ($generated@@28 $generated@@29 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@115 ($generated@@28 $generated@@29 $generated@@187)) ($generated@@28 $generated@@43 ($generated@@115 $generated@@187)))
 :pattern ( ($generated@@115 ($generated@@28 $generated@@29 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@T) ) (! (= ($generated@@104 $generated@@189 ($generated@@28 $generated@@189 $generated@@188)) ($generated@@28 $generated@@59 ($generated@@104 $generated@@189 $generated@@188)))
 :pattern ( ($generated@@104 $generated@@189 ($generated@@28 $generated@@189 $generated@@188)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@195  (=> (and (= $generated@@190 ($generated@@141 $generated@@40 $generated@@191 $generated false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@46 ($generated@@34 $generated@@192) ($generated@@34 $generated@@193)))))
(let (($generated@@196  (=> (and (and ($generated@@61 $generated@@191) ($generated@@194 $generated@@191)) (and ($generated@@31 $generated@@29 $generated@@192 $generated@@32) ($generated@@62 $generated@@29 $generated@@192 $generated@@32 $generated@@191))) (=> (and (and (and (and ($generated@@31 $generated@@29 $generated@@193 $generated@@32) ($generated@@62 $generated@@29 $generated@@193 $generated@@32 $generated@@191)) (= 4 $generated@@26)) (and ($generated@@35 ($generated@@34 $generated@@192)) ($generated@@35 ($generated@@34 $generated@@193)))) (and (and ($generated@@30 $generated@@192 $generated@@193) (and ($generated@@27 $generated@@192 $generated@@193) (ite ($generated@@33 ($generated@@34 $generated@@193)) true (ite ($generated@@35 ($generated@@34 $generated@@192))  (or ($generated@@36 ($generated@@34 $generated@@193)) (and ($generated@@35 ($generated@@34 $generated@@193)) (= ($generated@@37 ($generated@@34 $generated@@193)) ($generated@@37 ($generated@@34 $generated@@192))))) (ite ($generated@@36 ($generated@@34 $generated@@192))  (or ($generated@@36 ($generated@@34 $generated@@193)) (and ($generated@@35 ($generated@@34 $generated@@193)) (= ($generated@@37 ($generated@@34 $generated@@193)) $generated@@192))) false))))) (= (ControlFlow 0 3) 2))) $generated@@195))))
$generated@@196)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
