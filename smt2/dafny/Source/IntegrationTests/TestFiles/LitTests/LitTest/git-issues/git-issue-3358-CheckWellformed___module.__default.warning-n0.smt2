(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U Int Int T@U T@U T@U) T@U)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@39 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@U Int) T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T) T@T)
(declare-fun $generated@@132 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@T) T@T)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Int)
(declare-fun $generated@@196 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (= ($generated@@8 $generated@@28) 3))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@38 T@U) ) (!  (=> (or ($generated@@29 ($generated@@27 $generated@@28 $generated@@38)) (and (< 1 $generated@@25) ($generated@@30 $generated@@28 $generated@@38 ($generated@@31 $generated@@32)))) (= ($generated@@26 ($generated@@27 $generated@@28 $generated@@38)) ($generated@@33 ($generated@@34 ($generated@@31 $generated) ($generated@@35 0) ($generated@@36 ($generated@@27 $generated@@28 $generated@@38)) ($generated@@27 $generated@@28 $generated@@38) ($generated@@27 $generated@@28 $generated@@38) $generated@@37))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@27 $generated@@28 $generated@@38)))
))))
(assert  (and (and (and (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@39 $generated@@49 $generated@@50 ($generated@@48 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@53) $generated@@51)
 :weight 0
)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@58 $generated@@59) (= ($generated@@39 $generated@@54 $generated@@55 ($generated@@48 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@59) ($generated@@39 $generated@@54 $generated@@55 $generated@@57 $generated@@59)))
 :weight 0
))) (= ($generated@@8 $generated@@40) 4)) (= ($generated@@8 $generated@@44) 5)))
(assert (forall (($generated@@60 T@U) ($generated@@61 Int) ($generated@@62 Int) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@13 ($generated@@39 $generated@@40 $generated@@9 ($generated@@34 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65) $generated@@66)) (exists (($generated@@67 Int) ($generated@@68 T@U) )  (and (and ($generated@@30 $generated@@28 $generated@@68 $generated@@60) (and (and (<= $generated@@61 $generated@@67) (< $generated@@67 $generated@@62)) ($generated@@41 (ite ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@63 $generated@@67))) ($generated@@46 ($generated@@43 $generated@@44 ($generated@@45 $generated@@64 $generated@@67))) $generated@@65) ($generated@@47 $generated@@28 $generated@@68)))) (= $generated@@66 ($generated@@47 $generated@@28 $generated@@68)))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@9 ($generated@@34 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65) $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (!  (not ($generated@@41 $generated@@37 $generated@@69))
 :pattern ( ($generated@@41 $generated@@37 $generated@@69))
)))
(assert (= ($generated@@36 $generated@@70) 0))
(assert (= ($generated@@71 $generated@@72) $generated@@5))
(assert ($generated@@30 $generated@@44 $generated@@72 $generated@@32))
(assert (= ($generated@@8 $generated@@73) 6))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@75 T@U) ) (!  (=> (or ($generated@@29 $generated@@75) (and (< 1 $generated@@25) ($generated@@30 $generated@@28 $generated@@75 ($generated@@31 $generated@@32)))) ($generated@@30 $generated@@73 ($generated@@26 $generated@@75) ($generated@@74 ($generated@@31 $generated))))
 :pattern ( ($generated@@26 $generated@@75))
))))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@35 $generated@@76) $generated@@76)
 :pattern ( ($generated@@35 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@27 $generated@@78 $generated@@77) $generated@@77)
 :pattern ( ($generated@@27 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@79 $generated@@80) (= ($generated@@71 $generated@@80) $generated@@5))
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@42 $generated@@81) (= ($generated@@71 $generated@@81) $generated@@6))
 :pattern ( ($generated@@42 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@47 $generated@@83 ($generated@@43 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@43 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@41 ($generated@@33 $generated@@84) $generated@@85) ($generated@@13 ($generated@@39 $generated@@40 $generated@@9 $generated@@84 $generated@@85)))
 :pattern ( ($generated@@41 ($generated@@33 $generated@@84) $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@79 $generated@@86) (= $generated@@86 $generated@@72))
 :pattern ( ($generated@@79 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@30 $generated@@73 $generated@@88 ($generated@@74 $generated@@89)) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@41 $generated@@88 $generated@@90) ($generated@@87 $generated@@90 $generated@@89))
 :pattern ( ($generated@@41 $generated@@88 $generated@@90))
)))
 :pattern ( ($generated@@30 $generated@@73 $generated@@88 ($generated@@74 $generated@@89)))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@91 T@U) ) (!  (=> (or ($generated@@29 $generated@@91) (and (< 1 $generated@@25) ($generated@@30 $generated@@28 $generated@@91 ($generated@@31 $generated@@32)))) (= ($generated@@26 $generated@@91) ($generated@@33 ($generated@@34 ($generated@@31 $generated) ($generated@@35 0) ($generated@@36 $generated@@91) $generated@@91 $generated@@91 $generated@@37))))
 :pattern ( ($generated@@26 $generated@@91))
))))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@42 $generated@@93) (exists (($generated@@94 T@U) ) (= $generated@@93 ($generated@@92 $generated@@94))))
 :pattern ( ($generated@@42 $generated@@93))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@95 ($generated@@47 $generated@@100 $generated@@97) $generated@@98 $generated@@99) ($generated@@96 $generated@@100 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@95 ($generated@@47 $generated@@100 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@87 $generated@@101 $generated@@32) (and (= ($generated@@47 $generated@@44 ($generated@@43 $generated@@44 $generated@@101)) $generated@@101) ($generated@@30 $generated@@44 ($generated@@43 $generated@@44 $generated@@101) $generated@@32)))
 :pattern ( ($generated@@87 $generated@@101 $generated@@32))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@30 $generated@@44 $generated@@102 $generated@@32) (or ($generated@@79 $generated@@102) ($generated@@42 $generated@@102)))
 :pattern ( ($generated@@42 $generated@@102) ($generated@@30 $generated@@44 $generated@@102 $generated@@32))
 :pattern ( ($generated@@79 $generated@@102) ($generated@@30 $generated@@44 $generated@@102 $generated@@32))
)))
(assert (= ($generated@@8 $generated@@103) 7))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@87 $generated@@104 $generated) (and (= ($generated@@47 $generated@@103 ($generated@@43 $generated@@103 $generated@@104)) $generated@@104) ($generated@@30 $generated@@103 ($generated@@43 $generated@@103 $generated@@104) $generated)))
 :pattern ( ($generated@@87 $generated@@104 $generated))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@87 ($generated@@47 $generated@@107 $generated@@105) $generated@@106) ($generated@@30 $generated@@107 $generated@@105 $generated@@106))
 :pattern ( ($generated@@87 ($generated@@47 $generated@@107 $generated@@105) $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (! (<= 0 ($generated@@36 $generated@@108))
 :pattern ( ($generated@@36 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@96 $generated@@73 $generated@@109 ($generated@@74 $generated@@110) $generated@@111) (forall (($generated@@112 T@U) ) (!  (=> ($generated@@41 $generated@@109 $generated@@112) ($generated@@95 $generated@@112 $generated@@110 $generated@@111))
 :pattern ( ($generated@@41 $generated@@109 $generated@@112))
)))
 :pattern ( ($generated@@96 $generated@@73 $generated@@109 ($generated@@74 $generated@@110) $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@96 $generated@@28 $generated@@113 ($generated@@31 $generated@@114) $generated@@115) (forall (($generated@@116 Int) ) (!  (=> (and (<= 0 $generated@@116) (< $generated@@116 ($generated@@36 $generated@@113))) ($generated@@95 ($generated@@45 $generated@@113 $generated@@116) $generated@@114 $generated@@115))
 :pattern ( ($generated@@45 $generated@@113 $generated@@116))
)))
 :pattern ( ($generated@@96 $generated@@28 $generated@@113 ($generated@@31 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 ($generated@@74 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@74 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@24 ($generated@@74 $generated@@119)) $generated@@1)
 :pattern ( ($generated@@74 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@31 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@31 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@24 ($generated@@31 $generated@@122)) $generated@@2)
 :pattern ( ($generated@@31 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@71 ($generated@@92 $generated@@123)) $generated@@6)
 :pattern ( ($generated@@92 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@46 ($generated@@92 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@92 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@43 $generated@@126 ($generated@@47 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@47 $generated@@126 $generated@@125))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@127 $generated@@135 $generated@@136 $generated@@137 ($generated@@132 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@140 $generated@@141) $generated@@138)
 :weight 0
)) (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@127 $generated@@142 $generated@@143 $generated@@144 ($generated@@132 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@127 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@127 $generated@@151 $generated@@152 $generated@@153 ($generated@@132 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)))) (= ($generated@@8 $generated@@128) 8)) (= ($generated@@8 $generated@@129) 9)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (= ($generated@@8 ($generated@@131 $generated@@160 $generated@@161)) 10))) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (! (= ($generated@@133 ($generated@@131 $generated@@162 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@131 $generated@@162 $generated@@163))
))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (! (= ($generated@@134 ($generated@@131 $generated@@164 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@131 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Bool) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@13 ($generated@@127 $generated@@128 $generated@@129 $generated@@9 ($generated@@130 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))  (=> (and (or (not (= $generated@@170 $generated@@166)) (not true)) ($generated@@13 ($generated@@43 $generated@@9 ($generated@@39 $generated@@129 $generated@@40 ($generated@@39 $generated@@128 ($generated@@131 $generated@@129 $generated@@40) $generated@@167 $generated@@170) $generated@@168)))) $generated@@169))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129 $generated@@9 ($generated@@130 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@87 $generated@@172 ($generated@@74 $generated@@173)) (and (= ($generated@@47 $generated@@73 ($generated@@43 $generated@@73 $generated@@172)) $generated@@172) ($generated@@30 $generated@@73 ($generated@@43 $generated@@73 $generated@@172) ($generated@@74 $generated@@173))))
 :pattern ( ($generated@@87 $generated@@172 ($generated@@74 $generated@@173)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@87 $generated@@174 ($generated@@31 $generated@@175)) (and (= ($generated@@47 $generated@@28 ($generated@@43 $generated@@28 $generated@@174)) $generated@@174) ($generated@@30 $generated@@28 ($generated@@43 $generated@@28 $generated@@174) ($generated@@31 $generated@@175))))
 :pattern ( ($generated@@87 $generated@@174 ($generated@@31 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and ($generated@@176 $generated@@178) ($generated@@30 $generated@@44 $generated@@177 $generated@@32)) ($generated@@96 $generated@@44 $generated@@177 $generated@@32 $generated@@178))
 :pattern ( ($generated@@96 $generated@@44 $generated@@177 $generated@@32 $generated@@178))
)))
(assert (= ($generated@@24 $generated@@32) $generated@@4))
(assert (= ($generated@@179 $generated@@32) $generated@@7))
(assert (= $generated@@72 ($generated@@27 $generated@@44 $generated@@72)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@41 $generated@@181 ($generated@@47 $generated@@44 $generated@@182)) (< ($generated@@180 $generated@@182) ($generated@@180 ($generated@@92 $generated@@181))))
 :pattern ( ($generated@@41 $generated@@181 ($generated@@47 $generated@@44 $generated@@182)) ($generated@@92 $generated@@181))
)))
(assert (forall (($generated@@183 Int) ) (! (= ($generated@@47 $generated@@10 ($generated@@14 ($generated@@35 $generated@@183))) ($generated@@27 $generated@@40 ($generated@@47 $generated@@10 ($generated@@14 $generated@@183))))
 :pattern ( ($generated@@47 $generated@@10 ($generated@@14 ($generated@@35 $generated@@183))))
)))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@92 ($generated@@27 $generated@@73 $generated@@184)) ($generated@@27 $generated@@44 ($generated@@92 $generated@@184)))
 :pattern ( ($generated@@92 ($generated@@27 $generated@@73 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@T) ) (! (= ($generated@@47 $generated@@186 ($generated@@27 $generated@@186 $generated@@185)) ($generated@@27 $generated@@40 ($generated@@47 $generated@@186 $generated@@185)))
 :pattern ( ($generated@@47 $generated@@186 ($generated@@27 $generated@@186 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@176 $generated@@188) (and ($generated@@42 $generated@@187) ($generated@@96 $generated@@44 $generated@@187 $generated@@32 $generated@@188))) ($generated@@96 $generated@@73 ($generated@@46 $generated@@187) ($generated@@74 ($generated@@31 $generated)) $generated@@188))
 :pattern ( ($generated@@96 $generated@@73 ($generated@@46 $generated@@187) ($generated@@74 ($generated@@31 $generated)) $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ) (!  (=> (= ($generated@@36 $generated@@189) 0) (= $generated@@189 $generated@@70))
 :pattern ( ($generated@@36 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@30 $generated@@44 ($generated@@92 $generated@@190) $generated@@32) ($generated@@30 $generated@@73 $generated@@190 ($generated@@74 ($generated@@31 $generated))))
 :pattern ( ($generated@@30 $generated@@44 ($generated@@92 $generated@@190) $generated@@32))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! ($generated@@96 $generated@@103 $generated@@192 $generated $generated@@191)
 :pattern ( ($generated@@96 $generated@@103 $generated@@192 $generated $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@30 $generated@@28 $generated@@193 ($generated@@31 $generated@@194)) (forall (($generated@@195 Int) ) (!  (=> (and (<= 0 $generated@@195) (< $generated@@195 ($generated@@36 $generated@@193))) ($generated@@87 ($generated@@45 $generated@@193 $generated@@195) $generated@@194))
 :pattern ( ($generated@@45 $generated@@193 $generated@@195))
)))
 :pattern ( ($generated@@30 $generated@@28 $generated@@193 ($generated@@31 $generated@@194)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (and (<= 0 $generated@@198) (< $generated@@198 ($generated@@36 $generated@@197))) (< ($generated@@180 ($generated@@43 $generated@@44 ($generated@@45 $generated@@197 $generated@@198))) ($generated@@196 $generated@@197)))
 :pattern ( ($generated@@180 ($generated@@43 $generated@@44 ($generated@@45 $generated@@197 $generated@@198))))
)))
(assert (forall (($generated@@199 T@U) ) (! ($generated@@30 $generated@@103 $generated@@199 $generated)
 :pattern ( ($generated@@30 $generated@@103 $generated@@199 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@207 true))
(let (($generated@@208  (=> (and (not (and (and (<= ($generated@@35 0) $generated@@200) (< $generated@@200 ($generated@@36 $generated@@201))) ($generated@@41 (ite ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@201 $generated@@200))) ($generated@@46 ($generated@@43 $generated@@44 ($generated@@45 $generated@@201 $generated@@200))) $generated@@37) ($generated@@47 $generated@@28 $generated@@202)))) (= (ControlFlow 0 5) 2)) $generated@@207)))
(let (($generated@@209  (=> (and (and (and (<= ($generated@@35 0) $generated@@200) (< $generated@@200 ($generated@@36 $generated@@201))) ($generated@@41 (ite ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@201 $generated@@200))) ($generated@@46 ($generated@@43 $generated@@44 ($generated@@45 $generated@@201 $generated@@200))) $generated@@37) ($generated@@47 $generated@@28 $generated@@202))) (= (ControlFlow 0 4) 2)) $generated@@207)))
(let (($generated@@210  (=> (not ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@201 $generated@@200)))) (and (=> (= (ControlFlow 0 10) 4) $generated@@209) (=> (= (ControlFlow 0 10) 5) $generated@@208)))))
(let (($generated@@211  (=> ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@201 $generated@@200))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and (<= 0 $generated@@200) (< $generated@@200 ($generated@@36 $generated@@201)))) (=> (and (<= 0 $generated@@200) (< $generated@@200 ($generated@@36 $generated@@201))) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@201 $generated@@200)))) (=> ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@201 $generated@@200))) (and (=> (= (ControlFlow 0 7) 4) $generated@@209) (=> (= (ControlFlow 0 7) 5) $generated@@208)))))))))
(let (($generated@@212  (=> (and (<= ($generated@@35 0) $generated@@200) (< $generated@@200 ($generated@@36 $generated@@201))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (and (<= 0 $generated@@200) (< $generated@@200 ($generated@@36 $generated@@201)))) (=> (and (<= 0 $generated@@200) (< $generated@@200 ($generated@@36 $generated@@201))) (and (=> (= (ControlFlow 0 11) 7) $generated@@211) (=> (= (ControlFlow 0 11) 10) $generated@@210)))))))
(let (($generated@@213  (=> (not (and (<= ($generated@@35 0) $generated@@200) (< $generated@@200 ($generated@@36 $generated@@201)))) (and (=> (= (ControlFlow 0 6) 4) $generated@@209) (=> (= (ControlFlow 0 6) 5) $generated@@208)))))
(let (($generated@@214  (=> (< $generated@@200 ($generated@@35 0)) (and (=> (= (ControlFlow 0 14) 11) $generated@@212) (=> (= (ControlFlow 0 14) 6) $generated@@213)))))
(let (($generated@@215  (=> (<= ($generated@@35 0) $generated@@200) (and (=> (= (ControlFlow 0 13) 11) $generated@@212) (=> (= (ControlFlow 0 13) 6) $generated@@213)))))
(let (($generated@@216  (=> (and ($generated@@30 $generated@@28 $generated@@202 ($generated@@31 $generated)) ($generated@@96 $generated@@28 $generated@@202 ($generated@@31 $generated) $generated@@203)) (and (=> (= (ControlFlow 0 15) 13) $generated@@215) (=> (= (ControlFlow 0 15) 14) $generated@@214)))))
(let (($generated@@217  (=> (and (not (and ($generated@@30 $generated@@28 $generated@@202 ($generated@@31 $generated)) ($generated@@96 $generated@@28 $generated@@202 ($generated@@31 $generated) $generated@@203))) (= (ControlFlow 0 3) 2)) $generated@@207)))
(let (($generated@@218 true))
(let (($generated@@219  (=> (= $generated@@204 ($generated@@130 $generated@@205 $generated@@203 $generated@@3 false)) (and (and (=> (= (ControlFlow 0 16) 1) $generated@@218) (=> (= (ControlFlow 0 16) 15) $generated@@216)) (=> (= (ControlFlow 0 16) 3) $generated@@217)))))
(let (($generated@@220  (=> (and (and (and ($generated@@176 $generated@@203) ($generated@@206 $generated@@203)) ($generated@@30 $generated@@28 $generated@@201 ($generated@@31 $generated@@32))) (and (= 1 $generated@@25) (= (ControlFlow 0 17) 16))) $generated@@219)))
$generated@@220)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
