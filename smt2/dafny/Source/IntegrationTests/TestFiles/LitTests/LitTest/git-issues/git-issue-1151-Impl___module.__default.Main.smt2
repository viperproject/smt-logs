(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@T T@T) T@T)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@66 (Int) Int)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@107 () T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@111 (T@U) Bool)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@138 (T@U) Int)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@145 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@10 $generated@@29) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@31)) ($generated@@27 $generated@@32))
 :pattern ( ($generated@@27 $generated@@32) ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@31)))
)))
(assert (forall (($generated@@35 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@35 $generated@@34) ($generated@@33 $generated@@35))
 :pattern ( ($generated@@33 $generated@@35) ($generated@@28 $generated@@29 $generated@@35 $generated@@34))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@37 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@37 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@37 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@10 $generated@@38) 4)) (= ($generated@@10 $generated@@39) 5)) (= ($generated@@10 $generated@@40) 6)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@10 ($generated@@41 $generated@@57 $generated@@58)) 7))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@41 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@41 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@41 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@41 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> ($generated@@36 $generated@@63 $generated@@64) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@15 ($generated@@42 $generated@@11 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@63 $generated@@65) $generated@@1))) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@64 $generated@@65) $generated@@1))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@64 $generated@@65) $generated@@1))
)))
 :pattern ( ($generated@@36 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 Int) ) (! (= ($generated@@66 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 $generated@@69) $generated@@69)
 :pattern ( ($generated@@68 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@71 $generated@@75 $generated@@76) ($generated@@30 $generated@@74))  (and ($generated@@72 $generated@@75 $generated@@73) ($generated@@72 $generated@@76 $generated@@74)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@71 $generated@@75 $generated@@76) ($generated@@30 $generated@@74)))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@33 $generated@@78) (= ($generated@@77 $generated@@78) $generated@@5))
 :pattern ( ($generated@@33 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@27 $generated@@79) (= ($generated@@77 $generated@@79) $generated@@6))
 :pattern ( ($generated@@27 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@42 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@42 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@27 $generated@@83) (exists (($generated@@84 T@U) ($generated@@85 T@U) ) (= $generated@@83 ($generated@@71 $generated@@84 $generated@@85))))
 :pattern ( ($generated@@27 $generated@@83))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@33 $generated@@87) (exists (($generated@@88 T@U) ) (= $generated@@87 ($generated@@86 $generated@@88))))
 :pattern ( ($generated@@33 $generated@@87))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@89 ($generated@@80 $generated@@94 $generated@@91) $generated@@92 $generated@@93) ($generated@@90 $generated@@94 $generated@@91 $generated@@92 $generated@@93))
 :pattern ( ($generated@@89 ($generated@@80 $generated@@94 $generated@@91) $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@36 $generated@@95 $generated@@96) (=> ($generated@@89 $generated@@97 $generated@@98 $generated@@95) ($generated@@89 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@36 $generated@@95 $generated@@96) ($generated@@89 $generated@@97 $generated@@98 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (!  (=> ($generated@@36 $generated@@99 $generated@@100) (=> ($generated@@90 $generated@@103 $generated@@101 $generated@@102 $generated@@99) ($generated@@90 $generated@@103 $generated@@101 $generated@@102 $generated@@100)))
 :pattern ( ($generated@@36 $generated@@99 $generated@@100) ($generated@@90 $generated@@103 $generated@@101 $generated@@102 $generated@@99))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@26 ($generated@@30 $generated@@105)) $generated@@3) (= ($generated@@104 ($generated@@30 $generated@@105)) $generated@@8))
 :pattern ( ($generated@@30 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@72 $generated@@106 $generated@@34) (and (= ($generated@@80 $generated@@29 ($generated@@42 $generated@@29 $generated@@106)) $generated@@106) ($generated@@28 $generated@@29 ($generated@@42 $generated@@29 $generated@@106) $generated@@34)))
 :pattern ( ($generated@@72 $generated@@106 $generated@@34))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@72 $generated@@108 $generated@@107) (and (= ($generated@@80 $generated@@29 ($generated@@42 $generated@@29 $generated@@108)) $generated@@108) ($generated@@28 $generated@@29 ($generated@@42 $generated@@29 $generated@@108) $generated@@107)))
 :pattern ( ($generated@@72 $generated@@108 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@86 $generated@@109) $generated@@34) ($generated@@72 $generated@@109 $generated@@73))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@86 $generated@@109) $generated@@34))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and ($generated@@111 $generated@@113) (and ($generated@@27 $generated@@112) (exists (($generated@@114 T@U) ) (! ($generated@@90 $generated@@29 $generated@@112 ($generated@@30 $generated@@114) $generated@@113)
 :pattern ( ($generated@@90 $generated@@29 $generated@@112 ($generated@@30 $generated@@114) $generated@@113))
)))) ($generated@@89 ($generated@@110 $generated@@112) $generated@@73 $generated@@113))
 :pattern ( ($generated@@89 ($generated@@110 $generated@@112) $generated@@73 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@111 $generated@@116) (= ($generated@@90 $generated@@29 ($generated@@86 $generated@@115) $generated@@34 $generated@@116) ($generated@@89 $generated@@115 $generated@@73 $generated@@116)))
 :pattern ( ($generated@@90 $generated@@29 ($generated@@86 $generated@@115) $generated@@34 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (or (not (= $generated@@117 $generated@@119)) (not true)) (=> (and ($generated@@36 $generated@@117 $generated@@118) ($generated@@36 $generated@@118 $generated@@119)) ($generated@@36 $generated@@117 $generated@@119)))
 :pattern ( ($generated@@36 $generated@@117 $generated@@118) ($generated@@36 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@72 $generated@@120 $generated) (and (= ($generated@@80 $generated@@12 ($generated@@42 $generated@@12 $generated@@120)) $generated@@120) ($generated@@28 $generated@@12 ($generated@@42 $generated@@12 $generated@@120) $generated)))
 :pattern ( ($generated@@72 $generated@@120 $generated))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@72 ($generated@@80 $generated@@123 $generated@@121) $generated@@122) ($generated@@28 $generated@@123 $generated@@121 $generated@@122))
 :pattern ( ($generated@@72 ($generated@@80 $generated@@123 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@77 ($generated@@71 $generated@@124 $generated@@125)) $generated@@6)
 :pattern ( ($generated@@71 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@110 ($generated@@71 $generated@@126 $generated@@127)) $generated@@126)
 :pattern ( ($generated@@71 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@128 ($generated@@71 $generated@@129 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@71 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@30 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@30 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@77 ($generated@@86 $generated@@133)) $generated@@5)
 :pattern ( ($generated@@86 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@134 ($generated@@86 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@86 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@42 $generated@@137 ($generated@@80 $generated@@137 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@80 $generated@@137 $generated@@136))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (< ($generated@@138 $generated@@141) ($generated@@139 ($generated@@71 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@71 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and ($generated@@111 $generated@@144) (and ($generated@@27 $generated@@142) ($generated@@90 $generated@@29 $generated@@142 ($generated@@30 $generated@@143) $generated@@144))) ($generated@@89 ($generated@@128 $generated@@142) $generated@@143 $generated@@144))
 :pattern ( ($generated@@89 ($generated@@128 $generated@@142) $generated@@143 $generated@@144))
)))
(assert  (and (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@145 $generated@@148 $generated@@149 $generated@@150 ($generated@@147 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@153 $generated@@154) $generated@@151)
 :weight 0
)) (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@145 $generated@@155 $generated@@156 $generated@@157 ($generated@@147 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@145 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@145 $generated@@164 $generated@@165 $generated@@166 ($generated@@147 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@171 $generated@@172) ($generated@@145 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@171 $generated@@172)))
 :weight 0
)))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 Bool) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@15 ($generated@@145 $generated@@40 $generated@@38 $generated@@11 ($generated@@146 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@177 $generated@@178))  (=> (and (or (not (= $generated@@177 $generated@@173)) (not true)) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@174 $generated@@177) $generated@@175)))) $generated@@176))
 :pattern ( ($generated@@145 $generated@@40 $generated@@38 $generated@@11 ($generated@@146 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@138 ($generated@@80 $generated@@29 $generated@@179)) ($generated@@139 $generated@@179))
 :pattern ( ($generated@@138 ($generated@@80 $generated@@29 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@72 $generated@@181 ($generated@@30 $generated@@180)) (and (= ($generated@@80 $generated@@29 ($generated@@42 $generated@@29 $generated@@181)) $generated@@181) ($generated@@28 $generated@@29 ($generated@@42 $generated@@29 $generated@@181) ($generated@@30 $generated@@180))))
 :pattern ( ($generated@@72 $generated@@181 ($generated@@30 $generated@@180)))
)))
(assert (= ($generated@@26 $generated@@34) $generated@@2))
(assert (= ($generated@@104 $generated@@34) $generated@@7))
(assert (= ($generated@@26 $generated@@107) $generated@@4))
(assert (= ($generated@@104 $generated@@107) $generated@@9))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and ($generated@@111 $generated@@183) (and ($generated@@33 $generated@@182) ($generated@@90 $generated@@29 $generated@@182 $generated@@34 $generated@@183))) ($generated@@89 ($generated@@134 $generated@@182) $generated@@73 $generated@@183))
 :pattern ( ($generated@@89 ($generated@@134 $generated@@182) $generated@@73 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@71 ($generated@@68 $generated@@39 $generated@@184) ($generated@@68 $generated@@39 $generated@@185)) ($generated@@68 $generated@@29 ($generated@@71 $generated@@184 $generated@@185)))
 :pattern ( ($generated@@71 ($generated@@68 $generated@@39 $generated@@184) ($generated@@68 $generated@@39 $generated@@185)))
)))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@80 $generated@@12 ($generated@@16 ($generated@@66 $generated@@186))) ($generated@@68 $generated@@39 ($generated@@80 $generated@@12 ($generated@@16 $generated@@186))))
 :pattern ( ($generated@@80 $generated@@12 ($generated@@16 ($generated@@66 $generated@@186))))
)))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@86 ($generated@@68 $generated@@39 $generated@@187)) ($generated@@68 $generated@@29 ($generated@@86 $generated@@187)))
 :pattern ( ($generated@@86 ($generated@@68 $generated@@39 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@T) ) (! (= ($generated@@80 $generated@@189 ($generated@@68 $generated@@189 $generated@@188)) ($generated@@68 $generated@@39 ($generated@@80 $generated@@189 $generated@@188)))
 :pattern ( ($generated@@80 $generated@@189 ($generated@@68 $generated@@189 $generated@@188)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! ($generated@@90 $generated@@12 $generated@@191 $generated $generated@@190)
 :pattern ( ($generated@@90 $generated@@12 $generated@@191 $generated $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> ($generated@@111 $generated@@195) (= ($generated@@90 $generated@@29 ($generated@@71 $generated@@193 $generated@@194) ($generated@@30 $generated@@192) $generated@@195)  (and ($generated@@89 $generated@@193 $generated@@73 $generated@@195) ($generated@@89 $generated@@194 $generated@@192 $generated@@195))))
 :pattern ( ($generated@@90 $generated@@29 ($generated@@71 $generated@@193 $generated@@194) ($generated@@30 $generated@@192) $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! ($generated@@28 $generated@@12 $generated@@196 $generated)
 :pattern ( ($generated@@28 $generated@@12 $generated@@196 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () Bool)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Bool)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Bool)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@216  (=> (= $generated@@197 ($generated@@146 $generated@@198 $generated@@199 $generated@@1 false)) (=> (and (and ($generated@@72 $generated@@200 $generated@@73) ($generated@@89 $generated@@200 $generated@@73 $generated@@199)) (and ($generated@@111 $generated@@201) ($generated@@202 $generated@@201))) (=> (and (and (and ($generated@@72 $generated@@203 $generated@@73) ($generated@@89 $generated@@203 $generated@@73 $generated@@201)) (forall (($generated@@217 T@U) ) (!  (=> (and (or (not (= $generated@@217 $generated@@198)) (not true)) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@199 $generated@@217) $generated@@1)))) (= ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@201 $generated@@217) ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@199 $generated@@217)))
 :pattern ( ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@201 $generated@@217))
))) (and ($generated@@36 $generated@@199 $generated@@201) (=> $generated@@204 (and ($generated@@28 $generated@@29 $generated@@205 $generated@@34) ($generated@@90 $generated@@29 $generated@@205 $generated@@34 $generated@@201))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (=> (= $generated@@206 ($generated@@86 $generated@@203)) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (=> (=> $generated@@207 (and ($generated@@28 $generated@@29 $generated@@208 ($generated@@30 $generated)) ($generated@@90 $generated@@29 $generated@@208 ($generated@@30 $generated) $generated@@201))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@209 ($generated@@71 $generated@@203 ($generated@@80 $generated@@12 ($generated@@16 ($generated@@66 45))))) (= (ControlFlow 0 2) (- 0 1))) true)))))))))))
(let (($generated@@218  (=> (and (and (and (and ($generated@@111 $generated@@199) ($generated@@202 $generated@@199)) (and (=> $generated@@210 (and ($generated@@72 $generated@@211 $generated@@73) ($generated@@89 $generated@@211 $generated@@73 $generated@@199))) true)) (and (and (=> $generated@@204 (and ($generated@@28 $generated@@29 $generated@@212 $generated@@34) ($generated@@90 $generated@@29 $generated@@212 $generated@@34 $generated@@199))) true) (and (=> $generated@@207 (and ($generated@@28 $generated@@29 $generated@@213 ($generated@@30 $generated)) ($generated@@90 $generated@@29 $generated@@213 ($generated@@30 $generated) $generated@@199))) true))) (and (and (and ($generated@@28 $generated@@29 $generated@@214 $generated@@107) ($generated@@90 $generated@@29 $generated@@214 $generated@@107 $generated@@199)) true) (and (= 0 $generated@@215) (= (ControlFlow 0 6) 2)))) $generated@@216)))
$generated@@218)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
