(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (Int) Int)
(declare-fun $generated@@44 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@U T@U) T@U)
(declare-fun $generated@@68 (T@U T@U) T@U)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@142 (T@U) Int)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@156 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@159 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@217 (T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@9 $generated@@28) 3))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (or ($generated@@29 $generated@@31 ($generated@@27 $generated@@28 $generated@@32)) (and (< 0 $generated@@25) ($generated@@30 $generated@@32 $generated@@31))) (= ($generated@@26 $generated@@31 ($generated@@27 $generated@@28 $generated@@32)) ($generated@@27 $generated@@28 $generated@@32)))
 :weight 3
 :pattern ( ($generated@@26 $generated@@31 ($generated@@27 $generated@@28 $generated@@32)))
))))
(assert  (and (and (= ($generated@@9 $generated@@34) 4) (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@41 $generated@@45 $generated@@46 ($generated@@44 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@49) $generated@@47)
 :weight 0
))) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (or (= $generated@@54 $generated@@55) (= ($generated@@41 $generated@@50 $generated@@51 ($generated@@44 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@55) ($generated@@41 $generated@@50 $generated@@51 $generated@@53 $generated@@55)))
 :weight 0
))))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@56 $generated@@35)  (and ($generated@@33 $generated@@34 $generated@@56 ($generated@@36 $generated $generated)) (forall (($generated@@57 Int) )  (=> ($generated@@37 ($generated@@38 $generated@@56) ($generated@@39 $generated@@11 ($generated@@15 $generated@@57))) (= ($generated@@16 ($generated@@40 $generated@@11 ($generated@@41 $generated@@28 $generated@@28 ($generated@@42 $generated@@56) ($generated@@39 $generated@@11 ($generated@@15 $generated@@57))))) ($generated@@43 0))))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@56 $generated@@35))
)))
(assert (= ($generated@@58 $generated) $generated@@0))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@59 $generated@@34 $generated@@60 $generated@@35 $generated@@61) ($generated@@59 $generated@@34 $generated@@60 ($generated@@36 $generated $generated) $generated@@61))
 :pattern ( ($generated@@59 $generated@@34 $generated@@60 $generated@@35 $generated@@61))
)))
(assert (= ($generated@@9 $generated@@63) 5))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> ($generated@@33 $generated@@63 $generated@@67 ($generated@@64 $generated@@65 $generated@@66)) ($generated@@62 $generated@@67))
 :pattern ( ($generated@@62 $generated@@67) ($generated@@33 $generated@@63 $generated@@67 ($generated@@64 $generated@@65 $generated@@66)))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@33 $generated@@63 ($generated@@68 $generated@@71 $generated@@72) ($generated@@64 $generated@@69 $generated@@70))  (and ($generated@@30 $generated@@71 $generated@@69) ($generated@@30 $generated@@72 $generated@@70)))
 :pattern ( ($generated@@33 $generated@@63 ($generated@@68 $generated@@71 $generated@@72) ($generated@@64 $generated@@69 $generated@@70)))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (or ($generated@@29 $generated@@73 $generated@@74) (and (< 0 $generated@@25) ($generated@@30 $generated@@74 $generated@@73))) ($generated@@30 ($generated@@26 $generated@@73 $generated@@74) $generated@@73))
 :pattern ( ($generated@@26 $generated@@73 $generated@@74))
))))
(assert (forall (($generated@@75 Int) ) (! (= ($generated@@43 $generated@@75) $generated@@75)
 :pattern ( ($generated@@43 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@27 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@27 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@78 $generated@@84) (= ($generated@@59 $generated@@63 ($generated@@68 $generated@@82 $generated@@83) ($generated@@64 $generated@@80 $generated@@81) $generated@@84)  (and ($generated@@79 $generated@@82 $generated@@80 $generated@@84) ($generated@@79 $generated@@83 $generated@@81 $generated@@84))))
 :pattern ( ($generated@@59 $generated@@63 ($generated@@68 $generated@@82 $generated@@83) ($generated@@64 $generated@@80 $generated@@81) $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@62 $generated@@86) (= ($generated@@85 $generated@@86) $generated@@4))
 :pattern ( ($generated@@62 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@39 $generated@@88 ($generated@@40 $generated@@88 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@40 $generated@@88 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@62 $generated@@89) (exists (($generated@@90 T@U) ($generated@@91 T@U) ) (= $generated@@89 ($generated@@68 $generated@@90 $generated@@91))))
 :pattern ( ($generated@@62 $generated@@89))
)))
(assert (= ($generated@@9 $generated@@92) 6))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@33 $generated@@92 $generated@@94 ($generated@@93 $generated@@95)) (forall (($generated@@96 T@U) ) (!  (=> ($generated@@37 $generated@@94 $generated@@96) ($generated@@30 $generated@@96 $generated@@95))
 :pattern ( ($generated@@37 $generated@@94 $generated@@96))
)))
 :pattern ( ($generated@@33 $generated@@92 $generated@@94 ($generated@@93 $generated@@95)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@79 ($generated@@39 $generated@@100 $generated@@97) $generated@@98 $generated@@99) ($generated@@59 $generated@@100 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@79 ($generated@@39 $generated@@100 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@30 $generated@@101 $generated@@35) (and (= ($generated@@39 $generated@@34 ($generated@@40 $generated@@34 $generated@@101)) $generated@@101) ($generated@@33 $generated@@34 ($generated@@40 $generated@@34 $generated@@101) $generated@@35)))
 :pattern ( ($generated@@30 $generated@@101 $generated@@35))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@30 $generated@@102 $generated) (and (= ($generated@@39 $generated@@11 ($generated@@40 $generated@@11 $generated@@102)) $generated@@102) ($generated@@33 $generated@@11 ($generated@@40 $generated@@11 $generated@@102) $generated)))
 :pattern ( ($generated@@30 $generated@@102 $generated))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@30 ($generated@@39 $generated@@105 $generated@@103) $generated@@104) ($generated@@33 $generated@@105 $generated@@103 $generated@@104))
 :pattern ( ($generated@@30 ($generated@@39 $generated@@105 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@59 $generated@@92 $generated@@106 ($generated@@93 $generated@@107) $generated@@108) (forall (($generated@@109 T@U) ) (!  (=> ($generated@@37 $generated@@106 $generated@@109) ($generated@@79 $generated@@109 $generated@@107 $generated@@108))
 :pattern ( ($generated@@37 $generated@@106 $generated@@109))
)))
 :pattern ( ($generated@@59 $generated@@92 $generated@@106 ($generated@@93 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@110 ($generated@@36 $generated@@111 $generated@@112)) $generated@@111)
 :pattern ( ($generated@@36 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@113 ($generated@@36 $generated@@114 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@36 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@58 ($generated@@36 $generated@@116 $generated@@117)) $generated@@2)
 :pattern ( ($generated@@36 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@85 ($generated@@68 $generated@@118 $generated@@119)) $generated@@4)
 :pattern ( ($generated@@68 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@120 ($generated@@64 $generated@@121 $generated@@122)) $generated@@121)
 :pattern ( ($generated@@64 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@123 ($generated@@64 $generated@@124 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@64 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@126 ($generated@@68 $generated@@127 $generated@@128)) $generated@@127)
 :pattern ( ($generated@@68 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@129 ($generated@@68 $generated@@130 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@68 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@132 ($generated@@93 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@93 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@58 ($generated@@93 $generated@@134)) $generated@@1)
 :pattern ( ($generated@@93 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@40 $generated@@136 ($generated@@39 $generated@@136 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@39 $generated@@136 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@59 $generated@@34 $generated@@137 ($generated@@36 $generated@@138 $generated@@139) $generated@@140) (forall (($generated@@141 T@U) ) (!  (=> ($generated@@37 ($generated@@38 $generated@@137) $generated@@141) (and ($generated@@79 ($generated@@41 $generated@@28 $generated@@28 ($generated@@42 $generated@@137) $generated@@141) $generated@@139 $generated@@140) ($generated@@79 $generated@@141 $generated@@138 $generated@@140)))
 :pattern ( ($generated@@41 $generated@@28 $generated@@28 ($generated@@42 $generated@@137) $generated@@141))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@137) $generated@@141))
)))
 :pattern ( ($generated@@59 $generated@@34 $generated@@137 ($generated@@36 $generated@@138 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (< ($generated@@142 $generated@@144) ($generated@@143 ($generated@@68 $generated@@144 $generated@@145)))
 :pattern ( ($generated@@68 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (< ($generated@@142 $generated@@147) ($generated@@143 ($generated@@68 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@68 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (not ($generated@@37 ($generated@@38 $generated@@148) $generated@@149))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@148) $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@30 $generated@@150 ($generated@@36 $generated@@151 $generated@@152)) (and (= ($generated@@39 $generated@@34 ($generated@@40 $generated@@34 $generated@@150)) $generated@@150) ($generated@@33 $generated@@34 ($generated@@40 $generated@@34 $generated@@150) ($generated@@36 $generated@@151 $generated@@152))))
 :pattern ( ($generated@@30 $generated@@150 ($generated@@36 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> ($generated@@30 $generated@@155 ($generated@@64 $generated@@153 $generated@@154)) (and (= ($generated@@39 $generated@@63 ($generated@@40 $generated@@63 $generated@@155)) $generated@@155) ($generated@@33 $generated@@63 ($generated@@40 $generated@@63 $generated@@155) ($generated@@64 $generated@@153 $generated@@154))))
 :pattern ( ($generated@@30 $generated@@155 ($generated@@64 $generated@@153 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@156 $generated@@164 $generated@@165 $generated@@166 ($generated@@161 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@169 $generated@@170) $generated@@167)
 :weight 0
)) (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@176 $generated@@178) (= ($generated@@156 $generated@@171 $generated@@172 $generated@@173 ($generated@@161 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@156 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@156 $generated@@180 $generated@@181 $generated@@182 ($generated@@161 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@156 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)))) (= ($generated@@9 $generated@@157) 7)) (= ($generated@@9 $generated@@158) 8)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@9 ($generated@@160 $generated@@189 $generated@@190)) 9))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@162 ($generated@@160 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@160 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@163 ($generated@@160 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@160 $generated@@193 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 Bool) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@14 ($generated@@156 $generated@@157 $generated@@158 $generated@@10 ($generated@@159 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))  (=> (and (or (not (= $generated@@199 $generated@@195)) (not true)) ($generated@@14 ($generated@@40 $generated@@10 ($generated@@41 $generated@@158 $generated@@28 ($generated@@41 $generated@@157 ($generated@@160 $generated@@158 $generated@@28) $generated@@196 $generated@@199) $generated@@197)))) $generated@@198))
 :pattern ( ($generated@@156 $generated@@157 $generated@@158 $generated@@10 ($generated@@159 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (or ($generated@@29 $generated@@201 $generated@@202) (and (< 0 $generated@@25) ($generated@@30 $generated@@202 $generated@@201))) (= ($generated@@26 $generated@@201 $generated@@202) $generated@@202))
 :pattern ( ($generated@@26 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (and (= ($generated@@58 ($generated@@64 $generated@@204 $generated@@205)) $generated@@5) (= ($generated@@203 ($generated@@64 $generated@@204 $generated@@205)) $generated@@7))
 :pattern ( ($generated@@64 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (!  (or (= $generated@@206 $generated@@148) (exists (($generated@@207 T@U) ) ($generated@@37 ($generated@@38 $generated@@206) $generated@@207)))
 :pattern ( ($generated@@38 $generated@@206))
)))
(assert (forall (($generated@@209 T@U) ) (!  (or (= $generated@@209 $generated@@148) (exists (($generated@@210 T@U) ) ($generated@@37 ($generated@@208 $generated@@209) $generated@@210)))
 :pattern ( ($generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (= ($generated@@37 ($generated@@211 $generated@@212) $generated@@213)  (and ($generated@@37 ($generated@@38 $generated@@212) ($generated@@126 ($generated@@40 $generated@@63 $generated@@213))) (= ($generated@@41 $generated@@28 $generated@@28 ($generated@@42 $generated@@212) ($generated@@126 ($generated@@40 $generated@@63 $generated@@213))) ($generated@@129 ($generated@@40 $generated@@63 $generated@@213)))))
 :pattern ( ($generated@@37 ($generated@@211 $generated@@212) $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (= ($generated@@37 ($generated@@208 $generated@@214) $generated@@215) (exists (($generated@@216 T@U) ) (!  (and ($generated@@37 ($generated@@38 $generated@@214) $generated@@216) (= $generated@@215 ($generated@@41 $generated@@28 $generated@@28 ($generated@@42 $generated@@214) $generated@@216)))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@214) $generated@@216))
 :pattern ( ($generated@@41 $generated@@28 $generated@@28 ($generated@@42 $generated@@214) $generated@@216))
)))
 :pattern ( ($generated@@37 ($generated@@208 $generated@@214) $generated@@215))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (and (=> (= $generated@@220 $generated@@219) (and ($generated@@37 ($generated@@38 ($generated@@217 $generated@@218 $generated@@219 $generated@@221)) $generated@@220) (= ($generated@@41 $generated@@28 $generated@@28 ($generated@@42 ($generated@@217 $generated@@218 $generated@@219 $generated@@221)) $generated@@220) $generated@@221))) (=> (or (not (= $generated@@220 $generated@@219)) (not true)) (and (= ($generated@@37 ($generated@@38 ($generated@@217 $generated@@218 $generated@@219 $generated@@221)) $generated@@220) ($generated@@37 ($generated@@38 $generated@@218) $generated@@220)) (= ($generated@@41 $generated@@28 $generated@@28 ($generated@@42 ($generated@@217 $generated@@218 $generated@@219 $generated@@221)) $generated@@220) ($generated@@41 $generated@@28 $generated@@28 ($generated@@42 $generated@@218) $generated@@220)))))
 :pattern ( ($generated@@37 ($generated@@38 ($generated@@217 $generated@@218 $generated@@219 $generated@@221)) $generated@@220))
 :pattern ( ($generated@@41 $generated@@28 $generated@@28 ($generated@@42 ($generated@@217 $generated@@218 $generated@@219 $generated@@221)) $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= ($generated@@142 ($generated@@39 $generated@@63 $generated@@222)) ($generated@@143 $generated@@222))
 :pattern ( ($generated@@142 ($generated@@39 $generated@@63 $generated@@222)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> ($generated@@30 $generated@@223 ($generated@@93 $generated@@224)) (and (= ($generated@@39 $generated@@92 ($generated@@40 $generated@@92 $generated@@223)) $generated@@223) ($generated@@33 $generated@@92 ($generated@@40 $generated@@92 $generated@@223) ($generated@@93 $generated@@224))))
 :pattern ( ($generated@@30 $generated@@223 ($generated@@93 $generated@@224)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@225 ($generated@@36 $generated@@226 $generated@@227)) (forall (($generated@@228 T@U) ) (!  (=> ($generated@@37 ($generated@@38 $generated@@225) $generated@@228) (and ($generated@@30 ($generated@@41 $generated@@28 $generated@@28 ($generated@@42 $generated@@225) $generated@@228) $generated@@227) ($generated@@30 $generated@@228 $generated@@226)))
 :pattern ( ($generated@@41 $generated@@28 $generated@@28 ($generated@@42 $generated@@225) $generated@@228))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@225) $generated@@228))
)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@225 ($generated@@36 $generated@@226 $generated@@227)))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (or ($generated@@29 $generated@@230 $generated@@231) (and (< 0 $generated@@25) (and ($generated@@30 $generated@@231 $generated@@230) ($generated@@79 $generated@@231 $generated@@230 $generated@@229)))) ($generated@@78 $generated@@229)) ($generated@@79 ($generated@@26 $generated@@230 $generated@@231) $generated@@230 $generated@@229))
 :pattern ( ($generated@@79 ($generated@@26 $generated@@230 $generated@@231) $generated@@230 $generated@@229))
))))
(assert (= ($generated@@58 $generated@@35) $generated@@6))
(assert (= ($generated@@203 $generated@@35) $generated@@8))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and ($generated@@78 $generated@@234) (and ($generated@@62 $generated@@232) (exists (($generated@@235 T@U) ) (! ($generated@@59 $generated@@63 $generated@@232 ($generated@@64 $generated@@233 $generated@@235) $generated@@234)
 :pattern ( ($generated@@59 $generated@@63 $generated@@232 ($generated@@64 $generated@@233 $generated@@235) $generated@@234))
)))) ($generated@@79 ($generated@@126 $generated@@232) $generated@@233 $generated@@234))
 :pattern ( ($generated@@79 ($generated@@126 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and ($generated@@78 $generated@@238) (and ($generated@@62 $generated@@236) (exists (($generated@@239 T@U) ) (! ($generated@@59 $generated@@63 $generated@@236 ($generated@@64 $generated@@239 $generated@@237) $generated@@238)
 :pattern ( ($generated@@59 $generated@@63 $generated@@236 ($generated@@64 $generated@@239 $generated@@237) $generated@@238))
)))) ($generated@@79 ($generated@@129 $generated@@236) $generated@@237 $generated@@238))
 :pattern ( ($generated@@79 ($generated@@129 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= ($generated@@68 ($generated@@27 $generated@@28 $generated@@240) ($generated@@27 $generated@@28 $generated@@241)) ($generated@@27 $generated@@63 ($generated@@68 $generated@@240 $generated@@241)))
 :pattern ( ($generated@@68 ($generated@@27 $generated@@28 $generated@@240) ($generated@@27 $generated@@28 $generated@@241)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@39 $generated@@11 ($generated@@15 ($generated@@43 $generated@@242))) ($generated@@27 $generated@@28 ($generated@@39 $generated@@11 ($generated@@15 $generated@@242))))
 :pattern ( ($generated@@39 $generated@@11 ($generated@@15 ($generated@@43 $generated@@242))))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@T) ) (! (= ($generated@@39 $generated@@244 ($generated@@27 $generated@@244 $generated@@243)) ($generated@@27 $generated@@28 ($generated@@39 $generated@@244 $generated@@243)))
 :pattern ( ($generated@@39 $generated@@244 ($generated@@27 $generated@@244 $generated@@243)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! ($generated@@59 $generated@@11 $generated@@246 $generated $generated@@245)
 :pattern ( ($generated@@59 $generated@@11 $generated@@246 $generated $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (!  (or (= $generated@@247 $generated@@148) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) ($generated@@37 ($generated@@211 $generated@@247) ($generated@@39 $generated@@63 ($generated@@68 $generated@@248 $generated@@249)))))
 :pattern ( ($generated@@211 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@250 ($generated@@36 $generated@@251 $generated@@252)) (and (and ($generated@@33 $generated@@92 ($generated@@38 $generated@@250) ($generated@@93 $generated@@251)) ($generated@@33 $generated@@92 ($generated@@208 $generated@@250) ($generated@@93 $generated@@252))) ($generated@@33 $generated@@92 ($generated@@211 $generated@@250) ($generated@@93 ($generated@@64 $generated@@251 $generated@@252)))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@250 ($generated@@36 $generated@@251 $generated@@252)))
)))
(assert (forall (($generated@@253 T@U) ) (! ($generated@@33 $generated@@11 $generated@@253 $generated)
 :pattern ( ($generated@@33 $generated@@11 $generated@@253 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@264  (=> (= $generated@@254 ($generated@@159 $generated@@255 $generated@@256 $generated@@3 false)) (=> (and ($generated@@33 $generated@@34 $generated@@257 ($generated@@36 $generated $generated)) ($generated@@59 $generated@@34 $generated@@257 ($generated@@36 $generated $generated) $generated@@256)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@33 $generated@@34 ($generated@@217 $generated@@257 ($generated@@39 $generated@@11 ($generated@@15 ($generated@@43 1))) ($generated@@39 $generated@@11 ($generated@@15 ($generated@@43 7)))) $generated@@35)) (=> ($generated@@33 $generated@@34 ($generated@@217 $generated@@257 ($generated@@39 $generated@@11 ($generated@@15 ($generated@@43 1))) ($generated@@39 $generated@@11 ($generated@@15 ($generated@@43 7)))) $generated@@35) (=> (and (= $generated@@258 ($generated@@217 $generated@@257 ($generated@@39 $generated@@11 ($generated@@15 ($generated@@43 1))) ($generated@@39 $generated@@11 ($generated@@15 ($generated@@43 7))))) ($generated@@59 $generated@@34 $generated@@258 $generated@@35 $generated@@256)) (=> (and (and ($generated@@29 $generated@@35 ($generated@@39 $generated@@34 $generated@@258)) ($generated@@29 $generated@@35 ($generated@@39 $generated@@34 $generated@@258))) (and (= $generated@@259 ($generated@@40 $generated@@34 ($generated@@26 $generated@@35 ($generated@@39 $generated@@34 $generated@@258)))) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@14 ($generated@@27 $generated@@10 ($generated@@13 false)))))))))))
(let (($generated@@265  (=> (and (and (and (and ($generated@@78 $generated@@256) ($generated@@260 $generated@@256)) (and ($generated@@33 $generated@@34 $generated@@261 $generated@@35) ($generated@@59 $generated@@34 $generated@@261 $generated@@35 $generated@@256))) (and (and ($generated@@33 $generated@@34 $generated@@262 ($generated@@36 $generated $generated)) ($generated@@59 $generated@@34 $generated@@262 ($generated@@36 $generated $generated) $generated@@256)) true)) (and (and (and ($generated@@33 $generated@@34 $generated@@263 $generated@@35) ($generated@@59 $generated@@34 $generated@@263 $generated@@35 $generated@@256)) true) (and (= 1 $generated@@25) (= (ControlFlow 0 4) 2)))) $generated@@264)))
$generated@@265)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
