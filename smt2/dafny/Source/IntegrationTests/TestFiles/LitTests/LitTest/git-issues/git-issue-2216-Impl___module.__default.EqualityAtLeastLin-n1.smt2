(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@T T@T) T@T)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@30 (T@T) T@T)
(declare-fun $generated@@31 (T@T) T@T)
(declare-fun $generated@@52 (Int) Int)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@U T@U) Bool)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@66 (T@U Int) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 () Int)
(declare-fun $generated@@74 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@75 () Int)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@121 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@20 $generated@@21) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@32 T@T) ($generated@@33 T@T) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@23 $generated@@32 $generated@@33 ($generated@@29 $generated@@32 $generated@@33 $generated@@35 $generated@@36 $generated@@34) $generated@@36) $generated@@34)
 :weight 0
)) (forall (($generated@@37 T@T) ($generated@@38 T@T) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (or (= $generated@@41 $generated@@42) (= ($generated@@23 $generated@@37 $generated@@38 ($generated@@29 $generated@@37 $generated@@38 $generated@@40 $generated@@41 $generated@@39) $generated@@42) ($generated@@23 $generated@@37 $generated@@38 $generated@@40 $generated@@42)))
 :weight 0
))) (= ($generated@@3 $generated@@24) 3)) (= ($generated@@3 $generated@@25) 4)) (= ($generated@@3 $generated@@26) 5)) (forall (($generated@@43 T@T) ($generated@@44 T@T) ) (= ($generated@@3 ($generated@@27 $generated@@43 $generated@@44)) 6))) (forall (($generated@@45 T@T) ($generated@@46 T@T) ) (! (= ($generated@@30 ($generated@@27 $generated@@45 $generated@@46)) $generated@@45)
 :pattern ( ($generated@@27 $generated@@45 $generated@@46))
))) (forall (($generated@@47 T@T) ($generated@@48 T@T) ) (! (= ($generated@@31 ($generated@@27 $generated@@47 $generated@@48)) $generated@@48)
 :pattern ( ($generated@@27 $generated@@47 $generated@@48))
))))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> ($generated@@22 $generated@@49 $generated@@50) (forall (($generated@@51 T@U) ) (!  (=> ($generated@@8 ($generated@@28 $generated@@4 ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@49 $generated@@51) $generated@@2))) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@50 $generated@@51) $generated@@2))))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@50 $generated@@51) $generated@@2))
)))
 :pattern ( ($generated@@22 $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@52 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@56 $generated@@55))
)))
(assert (= ($generated@@3 $generated@@58) 7))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and ($generated@@57 $generated@@58 $generated@@62 ($generated@@60 $generated@@64)) ($generated@@61 $generated@@63 $generated@@64)) ($generated@@57 $generated@@58 ($generated@@59 $generated@@62 $generated@@63) ($generated@@60 $generated@@64)))
 :pattern ( ($generated@@57 $generated@@58 ($generated@@59 $generated@@62 $generated@@63) ($generated@@60 $generated@@64)))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@65 $generated@@67 $generated@@68)  (and (= ($generated@@20 $generated@@67) ($generated@@20 $generated@@68)) (forall (($generated@@69 Int) ) (!  (=> (and (<= 0 $generated@@69) (< $generated@@69 ($generated@@20 $generated@@67))) (= ($generated@@66 $generated@@67 $generated@@69) ($generated@@66 $generated@@68 $generated@@69)))
 :pattern ( ($generated@@66 $generated@@67 $generated@@69))
 :pattern ( ($generated@@66 $generated@@68 $generated@@69))
))))
 :pattern ( ($generated@@65 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@28 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@28 $generated@@72 $generated@@71))
)))
(assert  (=> (< 0 $generated@@73) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@76 $generated@@77) ($generated@@74 $generated@@5 ($generated@@9 $generated@@75) $generated $generated@@77))
 :pattern ( ($generated@@74 $generated@@5 ($generated@@9 $generated@@75) $generated $generated@@77))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@20 ($generated@@59 $generated@@78 $generated@@79)) (+ 1 ($generated@@20 $generated@@78)))
 :pattern ( ($generated@@59 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@80 ($generated@@70 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@74 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@80 ($generated@@70 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@22 $generated@@85 $generated@@86) (=> ($generated@@80 $generated@@87 $generated@@88 $generated@@85) ($generated@@80 $generated@@87 $generated@@88 $generated@@86)))
 :pattern ( ($generated@@22 $generated@@85 $generated@@86) ($generated@@80 $generated@@87 $generated@@88 $generated@@85))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (!  (=> ($generated@@22 $generated@@89 $generated@@90) (=> ($generated@@74 $generated@@93 $generated@@91 $generated@@92 $generated@@89) ($generated@@74 $generated@@93 $generated@@91 $generated@@92 $generated@@90)))
 :pattern ( ($generated@@22 $generated@@89 $generated@@90) ($generated@@74 $generated@@93 $generated@@91 $generated@@92 $generated@@89))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@20 ($generated@@94 $generated@@95 $generated@@96)) (+ ($generated@@20 $generated@@95) ($generated@@20 $generated@@96)))
 :pattern ( ($generated@@20 ($generated@@94 $generated@@95 $generated@@96)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (and (=> (= $generated@@98 ($generated@@20 $generated@@97)) (= ($generated@@66 ($generated@@59 $generated@@97 $generated@@99) $generated@@98) $generated@@99)) (=> (or (not (= $generated@@98 ($generated@@20 $generated@@97))) (not true)) (= ($generated@@66 ($generated@@59 $generated@@97 $generated@@99) $generated@@98) ($generated@@66 $generated@@97 $generated@@98))))
 :pattern ( ($generated@@66 ($generated@@59 $generated@@97 $generated@@99) $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@65 $generated@@100 $generated@@101) (= $generated@@100 $generated@@101))
 :pattern ( ($generated@@65 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or (not (= $generated@@102 $generated@@104)) (not true)) (=> (and ($generated@@22 $generated@@102 $generated@@103) ($generated@@22 $generated@@103 $generated@@104)) ($generated@@22 $generated@@102 $generated@@104)))
 :pattern ( ($generated@@22 $generated@@102 $generated@@103) ($generated@@22 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@61 $generated@@105 $generated) (and (= ($generated@@70 $generated@@5 ($generated@@28 $generated@@5 $generated@@105)) $generated@@105) ($generated@@57 $generated@@5 ($generated@@28 $generated@@5 $generated@@105) $generated)))
 :pattern ( ($generated@@61 $generated@@105 $generated))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@61 ($generated@@70 $generated@@108 $generated@@106) $generated@@107) ($generated@@57 $generated@@108 $generated@@106 $generated@@107))
 :pattern ( ($generated@@61 ($generated@@70 $generated@@108 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (<= 0 ($generated@@20 $generated@@109))
 :pattern ( ($generated@@20 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@74 $generated@@58 $generated@@110 ($generated@@60 $generated@@111) $generated@@112) (forall (($generated@@113 Int) ) (!  (=> (and (<= 0 $generated@@113) (< $generated@@113 ($generated@@20 $generated@@110))) ($generated@@80 ($generated@@66 $generated@@110 $generated@@113) $generated@@111 $generated@@112))
 :pattern ( ($generated@@66 $generated@@110 $generated@@113))
)))
 :pattern ( ($generated@@74 $generated@@58 $generated@@110 ($generated@@60 $generated@@111) $generated@@112))
)))
(assert  (=> (< 0 $generated@@73) ($generated@@57 $generated@@5 ($generated@@9 $generated@@75) $generated)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@60 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@60 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@19 ($generated@@60 $generated@@116)) $generated@@1)
 :pattern ( ($generated@@60 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@28 $generated@@118 ($generated@@70 $generated@@118 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@70 $generated@@118 $generated@@117))
)))
(assert (= $generated@@75 ($generated@@52 100000)))
(assert  (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@119 $generated@@122 $generated@@123 $generated@@124 ($generated@@121 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@127 $generated@@128) $generated@@125)
 :weight 0
)) (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@119 $generated@@129 $generated@@130 $generated@@131 ($generated@@121 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@119 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@119 $generated@@138 $generated@@139 $generated@@140 ($generated@@121 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@119 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 Bool) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@8 ($generated@@119 $generated@@26 $generated@@24 $generated@@4 ($generated@@120 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))  (=> (and (or (not (= $generated@@151 $generated@@147)) (not true)) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@148 $generated@@151) $generated@@149)))) $generated@@150))
 :pattern ( ($generated@@119 $generated@@26 $generated@@24 $generated@@4 ($generated@@120 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (and (= ($generated@@153 ($generated@@59 $generated@@155 $generated@@156)) $generated@@155) (= ($generated@@154 ($generated@@59 $generated@@155 $generated@@156)) $generated@@156))
 :pattern ( ($generated@@59 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@61 $generated@@157 ($generated@@60 $generated@@158)) (and (= ($generated@@70 $generated@@58 ($generated@@28 $generated@@58 $generated@@157)) $generated@@157) ($generated@@57 $generated@@58 ($generated@@28 $generated@@58 $generated@@157) ($generated@@60 $generated@@158))))
 :pattern ( ($generated@@61 $generated@@157 ($generated@@60 $generated@@158)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 Int) ) (!  (and (=> (< $generated@@161 ($generated@@20 $generated@@159)) (= ($generated@@66 ($generated@@94 $generated@@159 $generated@@160) $generated@@161) ($generated@@66 $generated@@159 $generated@@161))) (=> (<= ($generated@@20 $generated@@159) $generated@@161) (= ($generated@@66 ($generated@@94 $generated@@159 $generated@@160) $generated@@161) ($generated@@66 $generated@@160 (- $generated@@161 ($generated@@20 $generated@@159))))))
 :pattern ( ($generated@@66 ($generated@@94 $generated@@159 $generated@@160) $generated@@161))
)))
(assert (forall (($generated@@162 Int) ) (! (= ($generated@@70 $generated@@5 ($generated@@9 ($generated@@52 $generated@@162))) ($generated@@54 $generated@@25 ($generated@@70 $generated@@5 ($generated@@9 $generated@@162))))
 :pattern ( ($generated@@70 $generated@@5 ($generated@@9 ($generated@@52 $generated@@162))))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@70 $generated@@164 ($generated@@54 $generated@@164 $generated@@163)) ($generated@@54 $generated@@25 ($generated@@70 $generated@@164 $generated@@163)))
 :pattern ( ($generated@@70 $generated@@164 ($generated@@54 $generated@@164 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= ($generated@@20 $generated@@165) 0) (= $generated@@165 $generated@@21))
 :pattern ( ($generated@@20 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! ($generated@@74 $generated@@5 $generated@@167 $generated $generated@@166)
 :pattern ( ($generated@@74 $generated@@5 $generated@@167 $generated $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@57 $generated@@58 $generated@@168 ($generated@@60 $generated@@169)) (forall (($generated@@170 Int) ) (!  (=> (and (<= 0 $generated@@170) (< $generated@@170 ($generated@@20 $generated@@168))) ($generated@@61 ($generated@@66 $generated@@168 $generated@@170) $generated@@169))
 :pattern ( ($generated@@66 $generated@@168 $generated@@170))
)))
 :pattern ( ($generated@@57 $generated@@58 $generated@@168 ($generated@@60 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (! ($generated@@57 $generated@@5 $generated@@171 $generated)
 :pattern ( ($generated@@57 $generated@@5 $generated@@171 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () Bool)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@185 true))
(let (($generated@@186 true))
(let (($generated@@187  (=> $generated@@172 (and (=> (= (ControlFlow 0 5) 3) $generated@@186) (=> (= (ControlFlow 0 5) 4) $generated@@185)))))
(let (($generated@@188 true))
(let (($generated@@189  (and (=> (= (ControlFlow 0 6) 2) $generated@@188) (=> (= (ControlFlow 0 6) 5) $generated@@187))))
(let (($generated@@190 true))
(let (($generated@@191  (=> (and (and (and (and (not false) (<= 0 $generated@@173)) (= $generated@@174 0)) (<= 0 $generated@@175)) (and (and (and (<= $generated@@174 $generated@@173) (<= $generated@@173 $generated@@175)) (forall (($generated@@192 T@U) ) (!  (=> (and (or (not (= $generated@@192 $generated@@177)) (not true)) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@176 $generated@@192) $generated@@2)))) (= ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@176 $generated@@192) ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@176 $generated@@192)))
 :pattern ( ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@176 $generated@@192))
))) (and ($generated@@22 $generated@@176 $generated@@176) (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (or (not (= $generated@@193 $generated@@177)) (not true)) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@176 $generated@@193) $generated@@2)))) (or (= ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@176 $generated@@193) $generated@@194) ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@176 $generated@@193) $generated@@194)) ($generated@@8 ($generated@@119 $generated@@26 $generated@@24 $generated@@4 $generated@@178 $generated@@193 $generated@@194))))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@176 $generated@@193) $generated@@194))
))))) (and (=> (= (ControlFlow 0 7) 1) $generated@@190) (=> (= (ControlFlow 0 7) 6) $generated@@189)))))
(let (($generated@@195  (=> (= $generated@@178 ($generated@@120 $generated@@177 $generated@@176 $generated@@2 false)) (=> (and (and (= $generated@@179 ($generated@@94 ($generated@@59 $generated@@21 ($generated@@70 $generated@@5 ($generated@@9 ($generated@@52 0)))) $generated@@180)) (= $generated@@181 ($generated@@94 ($generated@@59 $generated@@21 ($generated@@70 $generated@@5 ($generated@@9 ($generated@@52 1)))) $generated@@180))) (and (= $generated@@174 ($generated@@52 0)) (= $generated@@175 $generated@@75))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (<= $generated@@174 $generated@@175)) (=> (<= $generated@@174 $generated@@175) (=> (= (ControlFlow 0 8) 7) $generated@@191)))))))
(let (($generated@@196  (=> (and (and (and (and ($generated@@76 $generated@@176) ($generated@@182 $generated@@176)) (and ($generated@@57 $generated@@58 $generated@@180 ($generated@@60 $generated)) ($generated@@74 $generated@@58 $generated@@180 ($generated@@60 $generated) $generated@@176))) (and (and ($generated@@57 $generated@@58 $generated@@183 ($generated@@60 $generated)) ($generated@@74 $generated@@58 $generated@@183 ($generated@@60 $generated) $generated@@176)) true)) (and (and (and ($generated@@57 $generated@@58 $generated@@184 ($generated@@60 $generated)) ($generated@@74 $generated@@58 $generated@@184 ($generated@@60 $generated) $generated@@176)) true) (and (= 1 $generated@@73) (= (ControlFlow 0 10) 8)))) $generated@@195)))
$generated@@196))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
