(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 () Int)
(declare-fun $generated@@34 (T@U T@U) Int)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (Int) Int)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@73 (T@U T@U T@U) Bool)
(declare-fun $generated@@99 (T@U) Int)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@111 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 (T@T T@T) T@T)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@116 (T@T) T@T)
(declare-fun $generated@@117 (T@T) T@T)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@24) 3))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28) $generated@@26)  (and ($generated@@23 $generated@@24 $generated@@27 $generated@@26) ($generated@@23 $generated@@24 $generated@@28 $generated@@26)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28) $generated@@26))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@29 $generated@@9 $generated@@31 $generated@@30 $generated@@32)
 :pattern ( ($generated@@29 $generated@@9 $generated@@31 $generated@@30 $generated@@32))
)))
(assert  (=> (<= 1 $generated@@33) (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@36 $generated@@43) (and (< 1 $generated@@33) ($generated@@23 $generated@@24 $generated@@43 $generated@@26))) (and (and (=> ($generated@@37 $generated@@43) (let (($generated@@44 ($generated@@38 $generated@@43)))
(let (($generated@@45 ($generated@@39 $generated@@43)))
 (and ($generated@@36 $generated@@45) ($generated@@36 $generated@@44))))) (=> (not ($generated@@37 $generated@@43)) (=> ($generated@@40 $generated@@43) (let (($generated@@46 ($generated@@41 $generated@@43)))
($generated@@36 $generated@@46))))) (= ($generated@@34 ($generated@@35 $generated@@42) $generated@@43) (ite ($generated@@37 $generated@@43) (let (($generated@@47 ($generated@@38 $generated@@43)))
(let (($generated@@48 ($generated@@39 $generated@@43)))
(+ ($generated@@34 $generated@@42 $generated@@48) ($generated@@34 $generated@@42 $generated@@47)))) (ite ($generated@@40 $generated@@43) (let (($generated@@49 ($generated@@41 $generated@@43)))
(+ ($generated@@34 $generated@@42 $generated@@49) 1)) 1)))))
 :pattern ( ($generated@@34 ($generated@@35 $generated@@42) $generated@@43))
))))
(assert (= ($generated@@50 $generated@@51) $generated@@4))
(assert ($generated@@23 $generated@@24 $generated@@51 $generated@@26))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@52 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@37 $generated@@57) (= ($generated@@50 $generated@@57) $generated@@1))
 :pattern ( ($generated@@37 $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@40 $generated@@58) (= ($generated@@50 $generated@@58) $generated@@3))
 :pattern ( ($generated@@40 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@59 $generated@@60) (= ($generated@@50 $generated@@60) $generated@@4))
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 ($generated@@61 $generated@@64 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@61 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@37 $generated@@65) (exists (($generated@@66 T@U) ($generated@@67 T@U) ) (= $generated@@65 ($generated@@25 $generated@@66 $generated@@67))))
 :pattern ( ($generated@@37 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@59 $generated@@68) (= $generated@@68 $generated@@51))
 :pattern ( ($generated@@59 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@40 $generated@@70) (exists (($generated@@71 T@U) ) (= $generated@@70 ($generated@@69 $generated@@71))))
 :pattern ( ($generated@@40 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@23 $generated@@9 $generated@@72 $generated@@30) (<= ($generated@@52 0) ($generated@@14 $generated@@72)))
 :pattern ( ($generated@@23 $generated@@9 $generated@@72 $generated@@30))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@62 $generated@@77 $generated@@74) $generated@@75 $generated@@76) ($generated@@29 $generated@@77 $generated@@74 $generated@@75 $generated@@76))
 :pattern ( ($generated@@73 ($generated@@62 $generated@@77 $generated@@74) $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@69 $generated@@78) $generated@@26) ($generated@@23 $generated@@24 $generated@@78 $generated@@26))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@69 $generated@@78) $generated@@26))
)))
(assert  (=> (<= 1 $generated@@33) (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (or ($generated@@36 ($generated@@54 $generated@@24 $generated@@80)) (and (< 1 $generated@@33) ($generated@@23 $generated@@24 $generated@@80 $generated@@26))) (and (and (=> ($generated@@12 ($generated@@54 $generated@@8 ($generated@@11 ($generated@@37 ($generated@@54 $generated@@24 $generated@@80))))) (let (($generated@@81 ($generated@@54 $generated@@24 ($generated@@38 ($generated@@54 $generated@@24 $generated@@80)))))
(let (($generated@@82 ($generated@@54 $generated@@24 ($generated@@39 ($generated@@54 $generated@@24 $generated@@80)))))
 (and ($generated@@36 $generated@@82) ($generated@@36 $generated@@81))))) (=> (not ($generated@@12 ($generated@@54 $generated@@8 ($generated@@11 ($generated@@37 ($generated@@54 $generated@@24 $generated@@80)))))) (=> ($generated@@12 ($generated@@54 $generated@@8 ($generated@@11 ($generated@@40 ($generated@@54 $generated@@24 $generated@@80))))) (let (($generated@@83 ($generated@@54 $generated@@24 ($generated@@41 ($generated@@54 $generated@@24 $generated@@80)))))
($generated@@36 $generated@@83))))) (= ($generated@@34 ($generated@@35 $generated@@79) ($generated@@54 $generated@@24 $generated@@80)) (ite ($generated@@37 ($generated@@54 $generated@@24 $generated@@80)) (let (($generated@@84 ($generated@@54 $generated@@24 ($generated@@38 ($generated@@54 $generated@@24 $generated@@80)))))
(let (($generated@@85 ($generated@@54 $generated@@24 ($generated@@39 ($generated@@54 $generated@@24 $generated@@80)))))
($generated@@52 (+ ($generated@@34 ($generated@@35 $generated@@79) $generated@@85) ($generated@@34 ($generated@@35 $generated@@79) $generated@@84))))) (ite ($generated@@40 ($generated@@54 $generated@@24 $generated@@80)) (let (($generated@@86 ($generated@@54 $generated@@24 ($generated@@41 ($generated@@54 $generated@@24 $generated@@80)))))
($generated@@52 (+ ($generated@@34 ($generated@@35 $generated@@79) $generated@@86) 1))) 1)))))
 :weight 3
 :pattern ( ($generated@@34 ($generated@@35 $generated@@79) ($generated@@54 $generated@@24 $generated@@80)))
))))
(assert  (=> (<= 1 $generated@@33) (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (or ($generated@@36 $generated@@88) (and (< 1 $generated@@33) ($generated@@23 $generated@@24 $generated@@88 $generated@@26))) (<= ($generated@@52 0) ($generated@@34 $generated@@87 $generated@@88)))
 :pattern ( ($generated@@34 $generated@@87 $generated@@88))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@50 ($generated@@25 $generated@@89 $generated@@90)) $generated@@1)
 :pattern ( ($generated@@25 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@39 ($generated@@25 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@25 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@38 ($generated@@25 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@25 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@50 ($generated@@69 $generated@@95)) $generated@@3)
 :pattern ( ($generated@@69 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@41 ($generated@@69 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@69 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@61 $generated@@98 ($generated@@62 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@62 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (< ($generated@@99 $generated@@100) ($generated@@99 ($generated@@25 $generated@@100 $generated@@101)))
 :pattern ( ($generated@@25 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (< ($generated@@99 $generated@@103) ($generated@@99 ($generated@@25 $generated@@102 $generated@@103)))
 :pattern ( ($generated@@25 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@34 ($generated@@35 $generated@@104) $generated@@105) ($generated@@34 $generated@@104 $generated@@105))
 :pattern ( ($generated@@34 ($generated@@35 $generated@@104) $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (! (< ($generated@@99 $generated@@106) ($generated@@99 ($generated@@69 $generated@@106)))
 :pattern ( ($generated@@69 $generated@@106))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@107 $generated@@118 $generated@@119 $generated@@120 ($generated@@114 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@123 $generated@@124) $generated@@121)
 :weight 0
)) (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@107 $generated@@125 $generated@@126 $generated@@127 ($generated@@114 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@107 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@107 $generated@@134 $generated@@135 $generated@@136 ($generated@@114 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)))) (= ($generated@@7 $generated@@108) 4)) (= ($generated@@7 $generated@@109) 5)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@111 $generated@@143 $generated@@144 ($generated@@115 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@145) $generated@@147) $generated@@145)
 :weight 0
))) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@111 $generated@@148 $generated@@149 ($generated@@115 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@111 $generated@@148 $generated@@149 $generated@@151 $generated@@153)))
 :weight 0
))) (= ($generated@@7 $generated@@112) 6)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (= ($generated@@7 ($generated@@113 $generated@@154 $generated@@155)) 7))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (! (= ($generated@@116 ($generated@@113 $generated@@156 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@113 $generated@@156 $generated@@157))
))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (! (= ($generated@@117 ($generated@@113 $generated@@158 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@113 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Bool) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@12 ($generated@@107 $generated@@108 $generated@@109 $generated@@8 ($generated@@110 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))  (=> (and (or (not (= $generated@@164 $generated@@160)) (not true)) ($generated@@12 ($generated@@61 $generated@@8 ($generated@@111 $generated@@109 $generated@@112 ($generated@@111 $generated@@108 ($generated@@113 $generated@@109 $generated@@112) $generated@@161 $generated@@164) $generated@@162)))) $generated@@163))
 :pattern ( ($generated@@107 $generated@@108 $generated@@109 $generated@@8 ($generated@@110 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@166 $generated@@26) (or (or ($generated@@37 $generated@@166) ($generated@@40 $generated@@166)) ($generated@@59 $generated@@166)))
 :pattern ( ($generated@@59 $generated@@166) ($generated@@23 $generated@@24 $generated@@166 $generated@@26))
 :pattern ( ($generated@@40 $generated@@166) ($generated@@23 $generated@@24 $generated@@166 $generated@@26))
 :pattern ( ($generated@@37 $generated@@166) ($generated@@23 $generated@@24 $generated@@166 $generated@@26))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and ($generated@@167 $generated@@169) ($generated@@23 $generated@@24 $generated@@168 $generated@@26)) ($generated@@29 $generated@@24 $generated@@168 $generated@@26 $generated@@169))
 :pattern ( ($generated@@29 $generated@@24 $generated@@168 $generated@@26 $generated@@169))
)))
(assert (= ($generated@@170 $generated@@30) $generated@@0))
(assert (= ($generated@@171 $generated@@30) $generated@@5))
(assert (= ($generated@@170 $generated@@26) $generated@@2))
(assert (= ($generated@@171 $generated@@26) $generated@@6))
(assert (= $generated@@51 ($generated@@54 $generated@@24 $generated@@51)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@167 $generated@@173) (and ($generated@@37 $generated@@172) ($generated@@29 $generated@@24 $generated@@172 $generated@@26 $generated@@173))) ($generated@@29 $generated@@24 ($generated@@39 $generated@@172) $generated@@26 $generated@@173))
 :pattern ( ($generated@@29 $generated@@24 ($generated@@39 $generated@@172) $generated@@26 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and ($generated@@167 $generated@@175) (and ($generated@@37 $generated@@174) ($generated@@29 $generated@@24 $generated@@174 $generated@@26 $generated@@175))) ($generated@@29 $generated@@24 ($generated@@38 $generated@@174) $generated@@26 $generated@@175))
 :pattern ( ($generated@@29 $generated@@24 ($generated@@38 $generated@@174) $generated@@26 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and ($generated@@167 $generated@@177) (and ($generated@@40 $generated@@176) ($generated@@29 $generated@@24 $generated@@176 $generated@@26 $generated@@177))) ($generated@@29 $generated@@24 ($generated@@41 $generated@@176) $generated@@26 $generated@@177))
 :pattern ( ($generated@@29 $generated@@24 ($generated@@41 $generated@@176) $generated@@26 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@25 ($generated@@54 $generated@@24 $generated@@178) ($generated@@54 $generated@@24 $generated@@179)) ($generated@@54 $generated@@24 ($generated@@25 $generated@@178 $generated@@179)))
 :pattern ( ($generated@@25 ($generated@@54 $generated@@24 $generated@@178) ($generated@@54 $generated@@24 $generated@@179)))
)))
(assert (forall (($generated@@180 Int) ) (! (= ($generated@@62 $generated@@9 ($generated@@13 ($generated@@52 $generated@@180))) ($generated@@54 $generated@@112 ($generated@@62 $generated@@9 ($generated@@13 $generated@@180))))
 :pattern ( ($generated@@62 $generated@@9 ($generated@@13 ($generated@@52 $generated@@180))))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@69 ($generated@@54 $generated@@24 $generated@@181)) ($generated@@54 $generated@@24 ($generated@@69 $generated@@181)))
 :pattern ( ($generated@@69 ($generated@@54 $generated@@24 $generated@@181)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@62 $generated@@183 ($generated@@54 $generated@@183 $generated@@182)) ($generated@@54 $generated@@112 ($generated@@62 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@62 $generated@@183 ($generated@@54 $generated@@183 $generated@@182)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@199 true))
(let (($generated@@200  (=> (and (= $generated@@184 $generated@@51) (= (ControlFlow 0 10) (- 0 9))) ($generated@@23 $generated@@9 ($generated@@13 ($generated@@52 1)) $generated@@30))))
(let (($generated@@201  (=> (or (not (= $generated@@184 ($generated@@69 $generated@@185))) (not true)) (and (=> (= (ControlFlow 0 12) 10) $generated@@200) (=> (= (ControlFlow 0 12) 11) $generated@@199)))))
(let (($generated@@202  (=> (and (= $generated@@184 ($generated@@69 $generated@@185)) ($generated@@23 $generated@@24 $generated@@185 $generated@@26)) (=> (and (and (= $generated@@186 $generated@@185) ($generated@@23 $generated@@24 $generated@@186 $generated@@26)) (and (= $generated@@187 $generated@@186) ($generated@@73 ($generated@@62 $generated@@24 $generated@@187) $generated@@26 $generated@@188))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (< ($generated@@99 $generated@@187) ($generated@@99 $generated@@184))) (=> (< ($generated@@99 $generated@@187) ($generated@@99 $generated@@184)) (=> (and ($generated@@36 $generated@@187) (= (ControlFlow 0 7) (- 0 6))) ($generated@@23 $generated@@9 ($generated@@13 (+ ($generated@@34 ($generated@@35 $generated@@189) $generated@@187) 1)) $generated@@30))))))))
(let (($generated@@203  (=> (or (not (= $generated@@184 ($generated@@25 $generated@@190 $generated@@191))) (not true)) (and (=> (= (ControlFlow 0 13) 7) $generated@@202) (=> (= (ControlFlow 0 13) 12) $generated@@201)))))
(let (($generated@@204  (=> (and (= $generated@@184 ($generated@@25 $generated@@190 $generated@@191)) ($generated@@23 $generated@@24 $generated@@190 $generated@@26)) (=> (and (and (and ($generated@@23 $generated@@24 $generated@@191 $generated@@26) (= $generated@@192 $generated@@191)) (and ($generated@@23 $generated@@24 $generated@@192 $generated@@26) (= $generated@@193 $generated@@192))) (and (and (= $generated@@194 $generated@@190) ($generated@@23 $generated@@24 $generated@@194 $generated@@26)) (and (= $generated@@195 $generated@@194) ($generated@@73 ($generated@@62 $generated@@24 $generated@@195) $generated@@26 $generated@@188)))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (< ($generated@@99 $generated@@195) ($generated@@99 $generated@@184))) (=> (< ($generated@@99 $generated@@195) ($generated@@99 $generated@@184)) (=> (and ($generated@@36 $generated@@195) ($generated@@73 ($generated@@62 $generated@@24 $generated@@193) $generated@@26 $generated@@188)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (< ($generated@@99 $generated@@193) ($generated@@99 $generated@@184))) (=> (< ($generated@@99 $generated@@193) ($generated@@99 $generated@@184)) (=> (and ($generated@@36 $generated@@193) (= (ControlFlow 0 3) (- 0 2))) ($generated@@23 $generated@@9 ($generated@@13 (+ ($generated@@34 ($generated@@35 $generated@@189) $generated@@195) ($generated@@34 ($generated@@35 $generated@@189) $generated@@193))) $generated@@30)))))))))))
(let (($generated@@205 true))
(let (($generated@@206  (=> (= $generated@@196 ($generated@@110 $generated@@197 $generated@@188 $generated false)) (and (and (=> (= (ControlFlow 0 14) 1) $generated@@205) (=> (= (ControlFlow 0 14) 3) $generated@@204)) (=> (= (ControlFlow 0 14) 13) $generated@@203)))))
(let (($generated@@207  (=> (and ($generated@@167 $generated@@188) ($generated@@198 $generated@@188)) (=> (and (and ($generated@@23 $generated@@24 $generated@@184 $generated@@26) ($generated@@29 $generated@@24 $generated@@184 $generated@@26 $generated@@188)) (and (= 1 $generated@@33) (= (ControlFlow 0 15) 14))) $generated@@206))))
$generated@@207))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
