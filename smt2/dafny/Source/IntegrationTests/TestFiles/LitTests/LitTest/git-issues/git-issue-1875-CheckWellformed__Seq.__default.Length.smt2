(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@38 (T@U Int) T@U)
(declare-fun $generated@@39 (T@U) Int)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@52 (T@U T@U T@U) Int)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@61 (T@T T@U T@U) Bool)
(declare-fun $generated@@63 (Int) Int)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@123 (T@U) Int)
(declare-fun $generated@@126 (T@U) Int)
(declare-fun $generated@@129 (T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@T T@T) T@T)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert  (and (= ($generated@@9 $generated@@27) 3) (= ($generated@@9 $generated@@32) 4)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@30 $generated@@37) (= ($generated@@26 $generated@@27 ($generated@@28 $generated@@35 $generated@@36) ($generated@@29 $generated@@34) $generated@@37)  (and ($generated@@31 $generated@@35 $generated@@34 $generated@@37) ($generated@@26 $generated@@32 $generated@@36 ($generated@@33 ($generated@@29 $generated@@34)) $generated@@37))))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@28 $generated@@35 $generated@@36) ($generated@@29 $generated@@34) $generated@@37))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 Int) ) (!  (=> (and (<= 0 $generated@@44) (< $generated@@44 ($generated@@39 $generated@@43))) (< ($generated@@40 ($generated@@41 $generated@@27 ($generated@@38 $generated@@43 $generated@@44))) ($generated@@40 ($generated@@28 $generated@@42 $generated@@43))))
 :pattern ( ($generated@@38 $generated@@43 $generated@@44) ($generated@@28 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@26 $generated@@32 $generated@@47 ($generated@@33 $generated@@46) $generated@@48) ($generated@@26 $generated@@32 $generated@@47 ($generated@@45 $generated@@46) $generated@@48))
 :pattern ( ($generated@@26 $generated@@32 $generated@@47 ($generated@@33 $generated@@46) $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ) (!  (not ($generated@@49 $generated@@50 $generated@@51))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@52 $generated@@54 ($generated@@53 $generated@@55) $generated@@56) ($generated@@52 $generated@@54 $generated@@55 $generated@@56))
 :pattern ( ($generated@@52 $generated@@54 ($generated@@53 $generated@@55) $generated@@56))
)))
(assert (= ($generated@@39 $generated@@50) 0))
(assert (= ($generated@@57 $generated@@58) $generated@@5))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> ($generated@@30 $generated@@60) ($generated@@26 $generated@@27 $generated@@58 ($generated@@29 $generated@@59) $generated@@60))
 :pattern ( ($generated@@26 $generated@@27 $generated@@58 ($generated@@29 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! ($generated@@61 $generated@@27 $generated@@58 ($generated@@29 $generated@@62))
 :pattern ( ($generated@@61 $generated@@27 $generated@@58 ($generated@@29 $generated@@62)))
)))
(assert (forall (($generated@@64 Int) ) (! (= ($generated@@63 $generated@@64) $generated@@64)
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 $generated@@66) $generated@@66)
 :pattern ( ($generated@@65 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@68 $generated@@69) (= ($generated@@57 $generated@@69) $generated@@5))
 :pattern ( ($generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@70 $generated@@71) (= ($generated@@57 $generated@@71) $generated@@6))
 :pattern ( ($generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@41 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@41 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@70 $generated@@75) (exists (($generated@@76 T@U) ($generated@@77 T@U) ) (= $generated@@75 ($generated@@28 $generated@@76 $generated@@77))))
 :pattern ( ($generated@@70 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@68 $generated@@78) (= $generated@@78 $generated@@58))
 :pattern ( ($generated@@68 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@61 $generated@@27 ($generated@@28 $generated@@81 $generated@@82) ($generated@@29 $generated@@80))  (and ($generated@@79 $generated@@81 $generated@@80) ($generated@@61 $generated@@32 $generated@@82 ($generated@@33 ($generated@@29 $generated@@80)))))
 :pattern ( ($generated@@61 $generated@@27 ($generated@@28 $generated@@81 $generated@@82) ($generated@@29 $generated@@80)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@31 ($generated@@72 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@26 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@31 ($generated@@72 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ) (!  (and (= ($generated@@25 ($generated@@29 $generated@@88)) $generated@@3) (= ($generated@@87 ($generated@@29 $generated@@88)) $generated@@7))
 :pattern ( ($generated@@29 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ) (!  (and (= ($generated@@25 ($generated@@33 $generated@@89)) $generated@@4) (= ($generated@@87 ($generated@@33 $generated@@89)) $generated@@8))
 :pattern ( ($generated@@33 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@49 $generated@@90 $generated@@91) (exists (($generated@@92 Int) ) (!  (and (and (<= 0 $generated@@92) (< $generated@@92 ($generated@@39 $generated@@90))) (= ($generated@@38 $generated@@90 $generated@@92) $generated@@91))
 :pattern ( ($generated@@38 $generated@@90 $generated@@92))
)))
 :pattern ( ($generated@@49 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@61 $generated@@32 $generated@@94 ($generated@@33 $generated@@93))  (and ($generated@@61 $generated@@32 $generated@@94 ($generated@@45 $generated@@93)) (= ($generated@@39 $generated@@94) ($generated@@63 1))))
 :pattern ( ($generated@@61 $generated@@32 $generated@@94 ($generated@@33 $generated@@93)))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@61 $generated@@27 $generated@@96 ($generated@@29 $generated@@95)) (or ($generated@@68 $generated@@96) ($generated@@70 $generated@@96)))
 :pattern ( ($generated@@70 $generated@@96) ($generated@@61 $generated@@27 $generated@@96 ($generated@@29 $generated@@95)))
 :pattern ( ($generated@@68 $generated@@96) ($generated@@61 $generated@@27 $generated@@96 ($generated@@29 $generated@@95)))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@79 $generated@@97 $generated) (and (= ($generated@@72 $generated@@11 ($generated@@41 $generated@@11 $generated@@97)) $generated@@97) ($generated@@61 $generated@@11 ($generated@@41 $generated@@11 $generated@@97) $generated)))
 :pattern ( ($generated@@79 $generated@@97 $generated))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@79 ($generated@@72 $generated@@100 $generated@@98) $generated@@99) ($generated@@61 $generated@@100 $generated@@98 $generated@@99))
 :pattern ( ($generated@@79 ($generated@@72 $generated@@100 $generated@@98) $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (! (<= 0 ($generated@@39 $generated@@101))
 :pattern ( ($generated@@39 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@57 ($generated@@28 $generated@@102 $generated@@103)) $generated@@6)
 :pattern ( ($generated@@28 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@104 ($generated@@28 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@28 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@107 ($generated@@28 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@28 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@26 $generated@@32 $generated@@110 ($generated@@45 $generated@@111) $generated@@112) (forall (($generated@@113 Int) ) (!  (=> (and (<= 0 $generated@@113) (< $generated@@113 ($generated@@39 $generated@@110))) ($generated@@31 ($generated@@38 $generated@@110 $generated@@113) $generated@@111 $generated@@112))
 :pattern ( ($generated@@38 $generated@@110 $generated@@113))
)))
 :pattern ( ($generated@@26 $generated@@32 $generated@@110 ($generated@@45 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@45 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@45 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@25 ($generated@@45 $generated@@116)) $generated@@1)
 :pattern ( ($generated@@45 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 ($generated@@29 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@29 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@119 ($generated@@33 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@33 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@41 $generated@@122 ($generated@@72 $generated@@122 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@72 $generated@@122 $generated@@121))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (< ($generated@@123 $generated@@124) ($generated@@40 ($generated@@28 $generated@@124 $generated@@125)))
 :pattern ( ($generated@@28 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (< ($generated@@126 $generated@@128) ($generated@@40 ($generated@@28 $generated@@127 $generated@@128)))
 :pattern ( ($generated@@28 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> ($generated@@130 $generated@@131 $generated@@132) (and ($generated@@61 $generated@@27 ($generated@@129 $generated@@131 $generated@@132) ($generated@@29 $generated@@131)) ($generated@@49 $generated@@132 ($generated@@72 $generated@@27 ($generated@@129 $generated@@131 $generated@@132)))))
 :pattern ( ($generated@@129 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and ($generated@@30 $generated@@135) (and ($generated@@70 $generated@@133) ($generated@@26 $generated@@27 $generated@@133 ($generated@@29 $generated@@134) $generated@@135))) ($generated@@31 ($generated@@104 $generated@@133) $generated@@134 $generated@@135))
 :pattern ( ($generated@@31 ($generated@@104 $generated@@133) $generated@@134 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@136 $generated@@147 $generated@@148 $generated@@149 ($generated@@143 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@152 $generated@@153) $generated@@150)
 :weight 0
)) (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@136 $generated@@154 $generated@@155 $generated@@156 ($generated@@143 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@136 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@136 $generated@@163 $generated@@164 $generated@@165 ($generated@@143 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@136 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (= ($generated@@9 $generated@@137) 5)) (= ($generated@@9 $generated@@138) 6)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@140 $generated@@172 $generated@@173 ($generated@@144 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@174) $generated@@176) $generated@@174)
 :weight 0
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@181 $generated@@182) (= ($generated@@140 $generated@@177 $generated@@178 ($generated@@144 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@179) $generated@@182) ($generated@@140 $generated@@177 $generated@@178 $generated@@180 $generated@@182)))
 :weight 0
))) (= ($generated@@9 $generated@@141) 7)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@9 ($generated@@142 $generated@@183 $generated@@184)) 8))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@145 ($generated@@142 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@142 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@146 ($generated@@142 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@142 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Bool) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@14 ($generated@@136 $generated@@137 $generated@@138 $generated@@10 ($generated@@139 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))  (=> (and (or (not (= $generated@@193 $generated@@189)) (not true)) ($generated@@14 ($generated@@41 $generated@@10 ($generated@@140 $generated@@138 $generated@@141 ($generated@@140 $generated@@137 ($generated@@142 $generated@@138 $generated@@141) $generated@@190 $generated@@193) $generated@@191)))) $generated@@192))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138 $generated@@10 ($generated@@139 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@123 ($generated@@72 $generated@@27 $generated@@195)) ($generated@@40 $generated@@195))
 :pattern ( ($generated@@123 ($generated@@72 $generated@@27 $generated@@195)))
)))
(assert  (=> (<= 3 $generated@@196) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (or ($generated@@197 $generated@@198 $generated@@201) (and (< 3 $generated@@196) (and ($generated@@30 $generated@@200) ($generated@@61 $generated@@27 $generated@@201 ($generated@@29 $generated@@198))))) (and (=> (not ($generated@@68 $generated@@201)) (let (($generated@@202 ($generated@@107 $generated@@201)))
 (and ($generated@@130 $generated@@198 $generated@@202) ($generated@@197 $generated@@198 ($generated@@129 $generated@@198 $generated@@202))))) (= ($generated@@52 $generated@@198 ($generated@@53 $generated@@199) $generated@@201) (ite ($generated@@68 $generated@@201) 0 (let (($generated@@203 ($generated@@107 $generated@@201)))
(let (($generated@@204 ($generated@@129 $generated@@198 $generated@@203)))
($generated@@52 $generated@@198 $generated@@199 $generated@@204)))))))
 :pattern ( ($generated@@52 $generated@@198 ($generated@@53 $generated@@199) $generated@@201) ($generated@@30 $generated@@200))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> ($generated@@79 $generated@@205 ($generated@@45 $generated@@206)) (and (= ($generated@@72 $generated@@32 ($generated@@41 $generated@@32 $generated@@205)) $generated@@205) ($generated@@61 $generated@@32 ($generated@@41 $generated@@32 $generated@@205) ($generated@@45 $generated@@206))))
 :pattern ( ($generated@@79 $generated@@205 ($generated@@45 $generated@@206)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@79 $generated@@208 ($generated@@29 $generated@@207)) (and (= ($generated@@72 $generated@@27 ($generated@@41 $generated@@27 $generated@@208)) $generated@@208) ($generated@@61 $generated@@27 ($generated@@41 $generated@@27 $generated@@208) ($generated@@29 $generated@@207))))
 :pattern ( ($generated@@79 $generated@@208 ($generated@@29 $generated@@207)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@79 $generated@@210 ($generated@@33 $generated@@209)) (and (= ($generated@@72 $generated@@32 ($generated@@41 $generated@@32 $generated@@210)) $generated@@210) ($generated@@61 $generated@@32 ($generated@@41 $generated@@32 $generated@@210) ($generated@@33 $generated@@209))))
 :pattern ( ($generated@@79 $generated@@210 ($generated@@33 $generated@@209)))
)))
(assert (= $generated@@58 ($generated@@65 $generated@@27 $generated@@58)))
(assert  (=> (<= 3 $generated@@196) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (or ($generated@@197 $generated@@211 ($generated@@65 $generated@@27 $generated@@214)) (and (< 3 $generated@@196) (and ($generated@@30 $generated@@213) ($generated@@61 $generated@@27 $generated@@214 ($generated@@29 $generated@@211))))) (and (=> (not ($generated@@14 ($generated@@65 $generated@@10 ($generated@@13 ($generated@@68 ($generated@@65 $generated@@27 $generated@@214)))))) (let (($generated@@215 ($generated@@65 $generated@@32 ($generated@@107 ($generated@@65 $generated@@27 $generated@@214)))))
 (and ($generated@@130 $generated@@211 $generated@@215) ($generated@@197 $generated@@211 ($generated@@129 $generated@@211 $generated@@215))))) (= ($generated@@52 $generated@@211 ($generated@@53 $generated@@212) ($generated@@65 $generated@@27 $generated@@214)) (ite ($generated@@68 ($generated@@65 $generated@@27 $generated@@214)) 0 (let (($generated@@216 ($generated@@65 $generated@@32 ($generated@@107 ($generated@@65 $generated@@27 $generated@@214)))))
(let (($generated@@217 ($generated@@129 $generated@@211 $generated@@216)))
($generated@@52 $generated@@211 ($generated@@53 $generated@@212) $generated@@217)))))))
 :weight 3
 :pattern ( ($generated@@52 $generated@@211 ($generated@@53 $generated@@212) ($generated@@65 $generated@@27 $generated@@214)) ($generated@@30 $generated@@213))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= ($generated@@28 ($generated@@65 $generated@@141 $generated@@218) ($generated@@65 $generated@@32 $generated@@219)) ($generated@@65 $generated@@27 ($generated@@28 $generated@@218 $generated@@219)))
 :pattern ( ($generated@@28 ($generated@@65 $generated@@141 $generated@@218) ($generated@@65 $generated@@32 $generated@@219)))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and ($generated@@30 $generated@@222) (and ($generated@@70 $generated@@220) ($generated@@26 $generated@@27 $generated@@220 ($generated@@29 $generated@@221) $generated@@222))) ($generated@@26 $generated@@32 ($generated@@107 $generated@@220) ($generated@@33 ($generated@@29 $generated@@221)) $generated@@222))
 :pattern ( ($generated@@26 $generated@@32 ($generated@@107 $generated@@220) ($generated@@33 ($generated@@29 $generated@@221)) $generated@@222))
)))
(assert (forall (($generated@@223 Int) ) (! (= ($generated@@72 $generated@@11 ($generated@@15 ($generated@@63 $generated@@223))) ($generated@@65 $generated@@141 ($generated@@72 $generated@@11 ($generated@@15 $generated@@223))))
 :pattern ( ($generated@@72 $generated@@11 ($generated@@15 ($generated@@63 $generated@@223))))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@T) ) (! (= ($generated@@72 $generated@@225 ($generated@@65 $generated@@225 $generated@@224)) ($generated@@65 $generated@@141 ($generated@@72 $generated@@225 $generated@@224)))
 :pattern ( ($generated@@72 $generated@@225 ($generated@@65 $generated@@225 $generated@@224)))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= ($generated@@39 $generated@@226) 0) (= $generated@@226 $generated@@50))
 :pattern ( ($generated@@39 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! ($generated@@26 $generated@@11 $generated@@228 $generated $generated@@227)
 :pattern ( ($generated@@26 $generated@@11 $generated@@228 $generated $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= ($generated@@61 $generated@@32 $generated@@229 ($generated@@45 $generated@@230)) (forall (($generated@@231 Int) ) (!  (=> (and (<= 0 $generated@@231) (< $generated@@231 ($generated@@39 $generated@@229))) ($generated@@79 ($generated@@38 $generated@@229 $generated@@231) $generated@@230))
 :pattern ( ($generated@@38 $generated@@229 $generated@@231))
)))
 :pattern ( ($generated@@61 $generated@@32 $generated@@229 ($generated@@45 $generated@@230)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 Int) ) (!  (=> (and (<= 0 $generated@@233) (< $generated@@233 ($generated@@39 $generated@@232))) (< ($generated@@40 ($generated@@41 $generated@@27 ($generated@@38 $generated@@232 $generated@@233))) ($generated@@126 $generated@@232)))
 :pattern ( ($generated@@40 ($generated@@41 $generated@@27 ($generated@@38 $generated@@232 $generated@@233))))
)))
(assert (forall (($generated@@234 T@U) ) (! ($generated@@61 $generated@@11 $generated@@234 $generated)
 :pattern ( ($generated@@61 $generated@@11 $generated@@234 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@248  (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (and ($generated@@61 $generated@@27 ($generated@@65 $generated@@27 $generated@@58) ($generated@@29 $generated@@235)) ($generated@@49 $generated@@236 ($generated@@72 $generated@@27 $generated@@58))) (exists (($generated@@249 T@U) )  (and ($generated@@61 $generated@@27 $generated@@249 ($generated@@29 $generated@@235)) ($generated@@49 $generated@@236 ($generated@@72 $generated@@27 $generated@@249)))))) (=> (or (and ($generated@@61 $generated@@27 ($generated@@65 $generated@@27 $generated@@58) ($generated@@29 $generated@@235)) ($generated@@49 $generated@@236 ($generated@@72 $generated@@27 $generated@@58))) (exists (($generated@@250 T@U) )  (and ($generated@@61 $generated@@27 $generated@@250 ($generated@@29 $generated@@235)) ($generated@@49 $generated@@236 ($generated@@72 $generated@@27 $generated@@250))))) (=> (and (and (and ($generated@@61 $generated@@27 $generated@@237 ($generated@@29 $generated@@235)) ($generated@@26 $generated@@27 $generated@@237 ($generated@@29 $generated@@235) $generated@@238)) ($generated@@49 $generated@@236 ($generated@@72 $generated@@27 $generated@@237))) (and ($generated@@26 $generated@@27 $generated@@237 ($generated@@29 $generated@@235) $generated@@238) (= (ControlFlow 0 5) (- 0 4)))) (< ($generated@@40 $generated@@237) ($generated@@40 $generated@@239)))))))
(let (($generated@@251  (=> (and (not (and ($generated@@61 $generated@@27 $generated@@237 ($generated@@29 $generated@@235)) ($generated@@26 $generated@@27 $generated@@237 ($generated@@29 $generated@@235) $generated@@238))) (= (ControlFlow 0 8) 5)) $generated@@248)))
(let (($generated@@252  (=> (and (and ($generated@@61 $generated@@27 $generated@@237 ($generated@@29 $generated@@235)) ($generated@@26 $generated@@27 $generated@@237 ($generated@@29 $generated@@235) $generated@@238)) (= (ControlFlow 0 7) 5)) $generated@@248)))
(let (($generated@@253  (=> (= $generated@@239 ($generated@@28 $generated@@240 $generated@@241)) (=> (and (and (and ($generated@@79 $generated@@240 $generated@@235) ($generated@@61 $generated@@32 $generated@@241 ($generated@@33 ($generated@@29 $generated@@235)))) (and (= $generated@@242 $generated@@241) ($generated@@61 $generated@@32 $generated@@242 ($generated@@33 ($generated@@29 $generated@@235))))) (and (and (= $generated@@236 $generated@@242) (= $generated@@243 $generated@@240)) (and ($generated@@79 $generated@@243 $generated@@235) (= $generated@@244 $generated@@243)))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (and (<= 0 ($generated@@63 0)) (< ($generated@@63 0) ($generated@@39 $generated@@236)))) (and (=> (= (ControlFlow 0 9) (- 0 10)) ($generated@@49 $generated@@236 ($generated@@38 $generated@@236 ($generated@@63 0)))) (=> ($generated@@49 $generated@@236 ($generated@@38 $generated@@236 ($generated@@63 0))) (and (=> (= (ControlFlow 0 9) 7) $generated@@252) (=> (= (ControlFlow 0 9) 8) $generated@@251)))))))))
(let (($generated@@254 true))
(let (($generated@@255  (=> (or (not (= $generated@@239 $generated@@58)) (not true)) (and (=> (= (ControlFlow 0 12) 9) $generated@@253) (=> (= (ControlFlow 0 12) 3) $generated@@254)))))
(let (($generated@@256 true))
(let (($generated@@257 true))
(let (($generated@@258  (=> (= $generated@@245 ($generated@@139 $generated@@246 $generated@@238 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@257) (=> (= (ControlFlow 0 13) 2) $generated@@256)) (=> (= (ControlFlow 0 13) 12) $generated@@255)))))
(let (($generated@@259  (=> (and (and (and ($generated@@30 $generated@@238) ($generated@@247 $generated@@238)) ($generated@@61 $generated@@27 $generated@@239 ($generated@@29 $generated@@235))) (and (= 3 $generated@@196) (= (ControlFlow 0 14) 13))) $generated@@258)))
$generated@@259)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
