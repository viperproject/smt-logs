(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@26 (Int) Int)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T T@U T@U) Bool)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@U Int Int) T@U)
(declare-fun $generated@@61 (Int) Bool)
(declare-fun $generated@@66 (T@U T@U T@U) Bool)
(declare-fun $generated@@71 () Int)
(declare-fun $generated@@72 (Int) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@89 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@136 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25)
 :pattern ( ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25))
)))
(assert (forall (($generated@@27 Int) ) (! (= ($generated@@26 $generated@@27) $generated@@27)
 :pattern ( ($generated@@26 $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@T) ) (! (= ($generated@@28 $generated@@30 $generated@@29) $generated@@29)
 :pattern ( ($generated@@28 $generated@@30 $generated@@29))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@T) ) (! (= ($generated@@32 $generated@@34 ($generated@@31 $generated@@34 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@31 $generated@@34 $generated@@33))
)))
(assert  (and (and (forall (($generated@@40 T@T) ($generated@@41 T@T) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@37 $generated@@40 $generated@@41 ($generated@@39 $generated@@40 $generated@@41 $generated@@43 $generated@@44 $generated@@42) $generated@@44) $generated@@42)
 :weight 0
)) (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (or (= $generated@@49 $generated@@50) (= ($generated@@37 $generated@@45 $generated@@46 ($generated@@39 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@50) ($generated@@37 $generated@@45 $generated@@46 $generated@@48 $generated@@50)))
 :weight 0
))) (= ($generated@@5 $generated@@38) 3)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@35 ($generated@@36 $generated@@51) $generated@@52) ($generated@@10 ($generated@@37 $generated@@38 $generated@@6 $generated@@51 $generated@@52)))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@51) $generated@@52))
)))
(assert (= ($generated@@5 $generated@@54) 4))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@53 $generated@@54 $generated@@57 ($generated@@55 $generated@@58)) (forall (($generated@@59 T@U) ) (!  (=> ($generated@@35 $generated@@57 $generated@@59) ($generated@@56 $generated@@59 $generated@@58))
 :pattern ( ($generated@@35 $generated@@57 $generated@@59))
)))
 :pattern ( ($generated@@53 $generated@@54 $generated@@57 ($generated@@55 $generated@@58)))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 Int) ($generated@@64 Int) ($generated@@65 T@U) ) (! (= ($generated@@10 ($generated@@37 $generated@@38 $generated@@6 ($generated@@60 $generated@@62 $generated@@63 $generated@@64) $generated@@65))  (and ($generated@@56 $generated@@65 $generated@@62) (and (and (<= $generated@@63 ($generated@@12 ($generated@@31 $generated@@7 $generated@@65))) (< ($generated@@12 ($generated@@31 $generated@@7 $generated@@65)) $generated@@64)) ($generated@@61 ($generated@@12 ($generated@@31 $generated@@7 $generated@@65))))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@6 ($generated@@60 $generated@@62 $generated@@63 $generated@@64) $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@66 ($generated@@32 $generated@@70 $generated@@67) $generated@@68 $generated@@69) ($generated@@22 $generated@@70 $generated@@67 $generated@@68 $generated@@69))
 :pattern ( ($generated@@66 ($generated@@32 $generated@@70 $generated@@67) $generated@@68 $generated@@69))
)))
(assert  (=> (<= 0 $generated@@71) (forall (($generated@@73 Int) ) (!  (=> (or ($generated@@72 $generated@@73) (< 0 $generated@@71)) (= ($generated@@61 $generated@@73)  (or (= $generated@@73 ($generated@@26 7)) (= $generated@@73 ($generated@@26 9)))))
 :pattern ( ($generated@@61 $generated@@73))
))))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@56 $generated@@74 $generated@@23) (and (= ($generated@@32 $generated@@7 ($generated@@31 $generated@@7 $generated@@74)) $generated@@74) ($generated@@53 $generated@@7 ($generated@@31 $generated@@7 $generated@@74) $generated@@23)))
 :pattern ( ($generated@@56 $generated@@74 $generated@@23))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@56 $generated@@75 $generated) (and (= ($generated@@32 $generated@@7 ($generated@@31 $generated@@7 $generated@@75)) $generated@@75) ($generated@@53 $generated@@7 ($generated@@31 $generated@@7 $generated@@75) $generated)))
 :pattern ( ($generated@@56 $generated@@75 $generated))
)))
(assert  (=> (<= 0 $generated@@71) (forall (($generated@@76 Int) ) (!  (=> (or ($generated@@72 ($generated@@26 $generated@@76)) (< 0 $generated@@71)) (= ($generated@@61 ($generated@@26 $generated@@76))  (or (= ($generated@@26 $generated@@76) ($generated@@26 7)) (= ($generated@@26 $generated@@76) ($generated@@26 9)))))
 :weight 3
 :pattern ( ($generated@@61 ($generated@@26 $generated@@76)))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@56 ($generated@@32 $generated@@79 $generated@@77) $generated@@78) ($generated@@53 $generated@@79 $generated@@77 $generated@@78))
 :pattern ( ($generated@@56 ($generated@@32 $generated@@79 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@22 $generated@@54 $generated@@80 ($generated@@55 $generated@@81) $generated@@82) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@35 $generated@@80 $generated@@83) ($generated@@66 $generated@@83 $generated@@81 $generated@@82))
 :pattern ( ($generated@@35 $generated@@80 $generated@@83))
)))
 :pattern ( ($generated@@22 $generated@@54 $generated@@80 ($generated@@55 $generated@@81) $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 ($generated@@55 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@55 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@21 ($generated@@55 $generated@@86)) $generated@@1)
 :pattern ( ($generated@@55 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@31 $generated@@88 ($generated@@32 $generated@@88 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@32 $generated@@88 $generated@@87))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@89 $generated@@97 $generated@@98 $generated@@99 ($generated@@94 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103 $generated@@100) $generated@@102 $generated@@103) $generated@@100)
 :weight 0
)) (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@89 $generated@@104 $generated@@105 $generated@@106 ($generated@@94 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@111 $generated@@112) ($generated@@89 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@111 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@89 $generated@@113 $generated@@114 $generated@@115 ($generated@@94 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@89 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)))) (= ($generated@@5 $generated@@90) 5)) (= ($generated@@5 $generated@@91) 6)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (= ($generated@@5 ($generated@@93 $generated@@122 $generated@@123)) 7))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@95 ($generated@@93 $generated@@124 $generated@@125)) $generated@@124)
 :pattern ( ($generated@@93 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@126 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@93 $generated@@126 $generated@@127))
))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 Bool) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@10 ($generated@@89 $generated@@90 $generated@@91 $generated@@6 ($generated@@92 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))  (=> (and (or (not (= $generated@@132 $generated@@128)) (not true)) ($generated@@10 ($generated@@31 $generated@@6 ($generated@@37 $generated@@91 $generated@@38 ($generated@@37 $generated@@90 ($generated@@93 $generated@@91 $generated@@38) $generated@@129 $generated@@132) $generated@@130)))) $generated@@131))
 :pattern ( ($generated@@89 $generated@@90 $generated@@91 $generated@@6 ($generated@@92 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@56 $generated@@134 ($generated@@55 $generated@@135)) (and (= ($generated@@32 $generated@@54 ($generated@@31 $generated@@54 $generated@@134)) $generated@@134) ($generated@@53 $generated@@54 ($generated@@31 $generated@@54 $generated@@134) ($generated@@55 $generated@@135))))
 :pattern ( ($generated@@56 $generated@@134 ($generated@@55 $generated@@135)))
)))
(assert (= ($generated@@21 $generated@@23) $generated@@3))
(assert (= ($generated@@136 $generated@@23) $generated@@4))
(assert (forall (($generated@@137 Int) ) (! (= ($generated@@32 $generated@@7 ($generated@@11 ($generated@@26 $generated@@137))) ($generated@@28 $generated@@38 ($generated@@32 $generated@@7 ($generated@@11 $generated@@137))))
 :pattern ( ($generated@@32 $generated@@7 ($generated@@11 ($generated@@26 $generated@@137))))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@32 $generated@@139 ($generated@@28 $generated@@139 $generated@@138)) ($generated@@28 $generated@@38 ($generated@@32 $generated@@139 $generated@@138)))
 :pattern ( ($generated@@32 $generated@@139 ($generated@@28 $generated@@139 $generated@@138)))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! ($generated@@22 $generated@@7 $generated@@141 $generated $generated@@140)
 :pattern ( ($generated@@22 $generated@@7 $generated@@141 $generated $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (! ($generated@@53 $generated@@7 $generated@@142 $generated)
 :pattern ( ($generated@@53 $generated@@7 $generated@@142 $generated))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@53 $generated@@7 $generated@@143 $generated@@23)  (and (and (< ($generated@@12 $generated@@143) 256) (or (not (= ($generated@@12 $generated@@143) 7)) (not true))) (<= ($generated@@26 0) ($generated@@12 $generated@@143))))
 :pattern ( ($generated@@53 $generated@@7 $generated@@143 $generated@@23))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@152 true))
(let (($generated@@153  (=> (= (ControlFlow 0 2) (- 0 1)) (or (and ($generated@@53 $generated@@7 ($generated@@11 ($generated@@26 0)) $generated) ($generated@@35 $generated@@144 ($generated@@32 $generated@@7 ($generated@@11 ($generated@@26 0))))) (exists (($generated@@154 T@U) ) ($generated@@35 $generated@@144 ($generated@@32 $generated@@7 $generated@@154)))))))
(let (($generated@@155  (=> (and (forall (($generated@@156 Int) )  (=> (and (and (< $generated@@156 256) (or (not (= $generated@@156 7)) (not true))) (<= ($generated@@26 0) $generated@@156)) (=> (and (<= ($generated@@26 5) $generated@@156) (< $generated@@156 12)) ($generated@@72 $generated@@156)))) (= $generated@@144 ($generated@@36 ($generated@@60 $generated@@23 ($generated@@26 5) 12)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@35 $generated@@144 ($generated@@32 $generated@@7 ($generated@@11 ($generated@@26 9))))) (=> ($generated@@35 $generated@@144 ($generated@@32 $generated@@7 ($generated@@11 ($generated@@26 9)))) (and (=> (= (ControlFlow 0 4) 2) $generated@@153) (=> (= (ControlFlow 0 4) 3) $generated@@152)))))))
(let (($generated@@157  (=> (and (not (and (and (<= ($generated@@26 5) $generated@@145) (< $generated@@145 12)) ($generated@@61 $generated@@145))) (= (ControlFlow 0 8) 4)) $generated@@155)))
(let (($generated@@158  (=> (and (and (and (<= ($generated@@26 5) $generated@@145) (< $generated@@145 12)) ($generated@@61 $generated@@145)) (= (ControlFlow 0 7) 4)) $generated@@155)))
(let (($generated@@159  (=> (not (and (<= ($generated@@26 5) $generated@@145) (< $generated@@145 12))) (and (=> (= (ControlFlow 0 10) 7) $generated@@158) (=> (= (ControlFlow 0 10) 8) $generated@@157)))))
(let (($generated@@160  (=> (and (and (<= ($generated@@26 5) $generated@@145) (< $generated@@145 12)) (and ($generated@@22 $generated@@7 ($generated@@11 $generated@@145) $generated $generated@@146) ($generated@@72 $generated@@145))) (and (=> (= (ControlFlow 0 9) 7) $generated@@158) (=> (= (ControlFlow 0 9) 8) $generated@@157)))))
(let (($generated@@161  (=> (< $generated@@145 ($generated@@26 5)) (and (=> (= (ControlFlow 0 12) 9) $generated@@160) (=> (= (ControlFlow 0 12) 10) $generated@@159)))))
(let (($generated@@162  (=> (<= ($generated@@26 5) $generated@@145) (and (=> (= (ControlFlow 0 11) 9) $generated@@160) (=> (= (ControlFlow 0 11) 10) $generated@@159)))))
(let (($generated@@163  (=> (and (and (< $generated@@145 256) (or (not (= $generated@@145 7)) (not true))) (<= ($generated@@26 0) $generated@@145)) (and (=> (= (ControlFlow 0 13) 11) $generated@@162) (=> (= (ControlFlow 0 13) 12) $generated@@161)))))
(let (($generated@@164  (=> (and (not (and (and (< $generated@@145 256) (or (not (= $generated@@145 7)) (not true))) (<= ($generated@@26 0) $generated@@145))) (= (ControlFlow 0 6) 4)) $generated@@155)))
(let (($generated@@165  (=> (= $generated@@147 ($generated@@92 $generated@@148 $generated@@146 $generated@@2 false)) (and (=> (= (ControlFlow 0 14) 13) $generated@@163) (=> (= (ControlFlow 0 14) 6) $generated@@164)))))
(let (($generated@@166  (=> (and ($generated@@149 $generated@@146) ($generated@@150 $generated@@146)) (=> (and (and (and ($generated@@53 $generated@@54 $generated@@151 ($generated@@55 $generated@@23)) ($generated@@22 $generated@@54 $generated@@151 ($generated@@55 $generated@@23) $generated@@146)) true) (and (= 1 $generated@@71) (= (ControlFlow 0 15) 14))) $generated@@165))))
$generated@@166))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
