(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@U T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@54 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@117 (T@U) Int)
(declare-fun $generated@@118 (T@U) Int)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@130 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@131 (T@T T@T) T@T)
(declare-fun $generated@@132 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (and (= ($generated@@4 $generated@@24) 3) (= ($generated@@4 $generated@@30) 4)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@25 $generated@@33 ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@35 ($generated@@27 $generated@@33)) ($generated@@26 $generated@@24 $generated@@36 ($generated@@27 $generated@@33))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)))))) (let (($generated@@37 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@25 $generated@@33 $generated@@37 ($generated@@23 $generated@@24 $generated@@36)))) (= ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)) $generated@@36 (let (($generated@@38 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
(let (($generated@@39 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@23 $generated@@24 ($generated@@32 $generated@@39 ($generated@@23 $generated@@24 ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) $generated@@38 ($generated@@23 $generated@@24 $generated@@36)))))))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)))
))))
(assert (= ($generated@@40 $generated@@41) $generated@@0))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (or ($generated@@43 $generated@@46 $generated@@47 $generated@@49) (and (< 2 $generated@@20) ($generated@@26 $generated@@24 $generated@@49 ($generated@@27 ($generated@@27 $generated@@47))))) (and (=> (not ($generated@@28 $generated@@49)) (let (($generated@@50 ($generated@@29 $generated@@49)))
(let (($generated@@51 ($generated@@44 $generated@@24 ($generated@@31 $generated@@49))))
 (and ($generated@@43 $generated@@46 $generated@@47 $generated@@50) ($generated@@25 $generated@@47 $generated@@51 ($generated@@42 $generated@@46 $generated@@47 $generated@@48 $generated@@50)))))) (= ($generated@@42 $generated@@46 $generated@@47 ($generated@@22 $generated@@48) $generated@@49) (ite ($generated@@28 $generated@@49) $generated@@41 (let (($generated@@52 ($generated@@29 $generated@@49)))
(let (($generated@@53 ($generated@@44 $generated@@24 ($generated@@31 $generated@@49))))
($generated@@21 $generated@@47 ($generated@@22 $generated@@45) $generated@@53 ($generated@@42 $generated@@46 $generated@@47 $generated@@48 $generated@@52))))))))
 :pattern ( ($generated@@42 $generated@@46 $generated@@47 ($generated@@22 $generated@@48) $generated@@49))
))))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> ($generated@@55 $generated@@57) ($generated@@54 $generated@@24 $generated@@41 ($generated@@27 $generated@@56) $generated@@57))
 :pattern ( ($generated@@54 $generated@@24 $generated@@41 ($generated@@27 $generated@@56) $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ) (! ($generated@@26 $generated@@24 $generated@@41 ($generated@@27 $generated@@58))
 :pattern ( ($generated@@26 $generated@@24 $generated@@41 ($generated@@27 $generated@@58)))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@23 $generated@@60 $generated@@59) $generated@@59)
 :pattern ( ($generated@@23 $generated@@60 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@26 $generated@@24 ($generated@@32 $generated@@63 $generated@@64) ($generated@@27 $generated@@62))  (and ($generated@@61 $generated@@63 $generated@@62) ($generated@@26 $generated@@24 $generated@@64 ($generated@@27 $generated@@62))))
 :pattern ( ($generated@@26 $generated@@24 ($generated@@32 $generated@@63 $generated@@64) ($generated@@27 $generated@@62)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> (or ($generated@@25 $generated@@65 $generated@@67 $generated@@68) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@67 ($generated@@27 $generated@@65)) ($generated@@26 $generated@@24 $generated@@68 ($generated@@27 $generated@@65))))) (and (=> (not ($generated@@28 $generated@@67)) (let (($generated@@69 ($generated@@29 $generated@@67)))
($generated@@25 $generated@@65 $generated@@69 $generated@@68))) (= ($generated@@21 $generated@@65 ($generated@@22 $generated@@66) $generated@@67 $generated@@68) (ite ($generated@@28 $generated@@67) $generated@@68 (let (($generated@@70 ($generated@@29 $generated@@67)))
(let (($generated@@71 ($generated@@31 $generated@@67)))
($generated@@32 $generated@@71 ($generated@@21 $generated@@65 $generated@@66 $generated@@70 $generated@@68))))))))
 :pattern ( ($generated@@21 $generated@@65 ($generated@@22 $generated@@66) $generated@@67 $generated@@68))
))))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@28 $generated@@72) (= ($generated@@40 $generated@@72) $generated@@0))
 :pattern ( ($generated@@28 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@73 $generated@@74) (= ($generated@@40 $generated@@74) $generated@@2))
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 ($generated@@44 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@44 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@73 $generated@@78) (exists (($generated@@79 T@U) ($generated@@80 T@U) ) (= $generated@@78 ($generated@@32 $generated@@79 $generated@@80))))
 :pattern ( ($generated@@73 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@28 $generated@@81) (= $generated@@81 $generated@@41))
 :pattern ( ($generated@@28 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@82 ($generated@@75 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@54 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@82 ($generated@@75 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@89 T@U) ) (!  (and (= ($generated@@87 ($generated@@27 $generated@@89)) $generated@@1) (= ($generated@@88 ($generated@@27 $generated@@89)) $generated@@3))
 :pattern ( ($generated@@27 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@42 $generated@@90 $generated@@91 ($generated@@22 $generated@@92) $generated@@93) ($generated@@42 $generated@@90 $generated@@91 $generated@@92 $generated@@93))
 :pattern ( ($generated@@42 $generated@@90 $generated@@91 ($generated@@22 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> ($generated@@26 $generated@@24 $generated@@95 ($generated@@27 $generated@@94)) (or ($generated@@28 $generated@@95) ($generated@@73 $generated@@95)))
 :pattern ( ($generated@@73 $generated@@95) ($generated@@26 $generated@@24 $generated@@95 ($generated@@27 $generated@@94)))
 :pattern ( ($generated@@28 $generated@@95) ($generated@@26 $generated@@24 $generated@@95 ($generated@@27 $generated@@94)))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@61 ($generated@@75 $generated@@98 $generated@@96) $generated@@97) ($generated@@26 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@61 ($generated@@75 $generated@@98 $generated@@96) $generated@@97))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@43 $generated@@99 $generated@@100 $generated@@102) (and (< 2 $generated@@20) ($generated@@26 $generated@@24 $generated@@102 ($generated@@27 ($generated@@27 $generated@@100))))) ($generated@@26 $generated@@24 ($generated@@42 $generated@@99 $generated@@100 $generated@@101 $generated@@102) ($generated@@27 $generated@@100)))
 :pattern ( ($generated@@42 $generated@@99 $generated@@100 $generated@@101 $generated@@102))
))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@40 ($generated@@32 $generated@@103 $generated@@104)) $generated@@2)
 :pattern ( ($generated@@32 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@31 ($generated@@32 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@32 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@29 ($generated@@32 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@32 $generated@@107 $generated@@108))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or ($generated@@25 $generated@@109 $generated@@111 $generated@@112) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@111 ($generated@@27 $generated@@109)) ($generated@@26 $generated@@24 $generated@@112 ($generated@@27 $generated@@109))))) ($generated@@26 $generated@@24 ($generated@@21 $generated@@109 $generated@@110 $generated@@111 $generated@@112) ($generated@@27 $generated@@109)))
 :pattern ( ($generated@@21 $generated@@109 $generated@@110 $generated@@111 $generated@@112))
))))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 ($generated@@27 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@27 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@44 $generated@@116 ($generated@@75 $generated@@116 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@75 $generated@@116 $generated@@115))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (< ($generated@@117 $generated@@119) ($generated@@118 ($generated@@32 $generated@@119 $generated@@120)))
 :pattern ( ($generated@@32 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (< ($generated@@118 $generated@@122) ($generated@@118 ($generated@@32 $generated@@121 $generated@@122)))
 :pattern ( ($generated@@32 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (and ($generated@@55 $generated@@125) (and ($generated@@73 $generated@@123) ($generated@@54 $generated@@24 $generated@@123 ($generated@@27 $generated@@124) $generated@@125))) ($generated@@82 ($generated@@31 $generated@@123) $generated@@124 $generated@@125))
 :pattern ( ($generated@@82 ($generated@@31 $generated@@123) $generated@@124 $generated@@125))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@126 $generated@@136 $generated@@137 $generated@@138 ($generated@@132 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@141 $generated@@142) $generated@@139)
 :weight 0
)) (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@126 $generated@@143 $generated@@144 $generated@@145 ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@126 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@126 $generated@@152 $generated@@153 $generated@@154 ($generated@@132 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@126 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))) (= ($generated@@4 $generated@@127) 5)) (= ($generated@@4 $generated@@128) 6)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@130 $generated@@161 $generated@@162 ($generated@@133 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@163) $generated@@165) $generated@@163)
 :weight 0
))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@170 $generated@@171) (= ($generated@@130 $generated@@166 $generated@@167 ($generated@@133 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@168) $generated@@171) ($generated@@130 $generated@@166 $generated@@167 $generated@@169 $generated@@171)))
 :weight 0
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@4 ($generated@@131 $generated@@172 $generated@@173)) 7))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@134 ($generated@@131 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@131 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@135 ($generated@@131 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@131 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 Bool) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@9 ($generated@@126 $generated@@127 $generated@@128 $generated@@5 ($generated@@129 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))  (=> (and (or (not (= $generated@@182 $generated@@178)) (not true)) ($generated@@9 ($generated@@44 $generated@@5 ($generated@@130 $generated@@128 $generated@@30 ($generated@@130 $generated@@127 ($generated@@131 $generated@@128 $generated@@30) $generated@@179 $generated@@182) $generated@@180)))) $generated@@181))
 :pattern ( ($generated@@126 $generated@@127 $generated@@128 $generated@@5 ($generated@@129 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (or ($generated@@25 $generated@@185 $generated@@187 $generated@@188) (and (< 1 $generated@@20) (and ($generated@@54 $generated@@24 $generated@@187 ($generated@@27 $generated@@185) $generated@@184) (and ($generated@@26 $generated@@24 $generated@@188 ($generated@@27 $generated@@185)) ($generated@@54 $generated@@24 $generated@@188 ($generated@@27 $generated@@185) $generated@@184))))) ($generated@@55 $generated@@184)) ($generated@@54 $generated@@24 ($generated@@21 $generated@@185 $generated@@186 $generated@@187 $generated@@188) ($generated@@27 $generated@@185) $generated@@184))
 :pattern ( ($generated@@54 $generated@@24 ($generated@@21 $generated@@185 $generated@@186 $generated@@187 $generated@@188) ($generated@@27 $generated@@185) $generated@@184))
))))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@117 ($generated@@75 $generated@@24 $generated@@189)) ($generated@@118 $generated@@189))
 :pattern ( ($generated@@117 ($generated@@75 $generated@@24 $generated@@189)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@21 $generated@@190 ($generated@@22 $generated@@191) $generated@@192 $generated@@193) ($generated@@21 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
 :pattern ( ($generated@@21 $generated@@190 ($generated@@22 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> ($generated@@61 $generated@@195 ($generated@@27 $generated@@194)) (and (= ($generated@@75 $generated@@24 ($generated@@44 $generated@@24 $generated@@195)) $generated@@195) ($generated@@26 $generated@@24 ($generated@@44 $generated@@24 $generated@@195) ($generated@@27 $generated@@194))))
 :pattern ( ($generated@@61 $generated@@195 ($generated@@27 $generated@@194)))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (or ($generated@@43 $generated@@196 $generated@@197 ($generated@@23 $generated@@24 $generated@@199)) (and (< 2 $generated@@20) ($generated@@26 $generated@@24 $generated@@199 ($generated@@27 ($generated@@27 $generated@@197))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@199)))))) (let (($generated@@200 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@199)))))
(let (($generated@@201 ($generated@@23 $generated@@24 ($generated@@44 $generated@@24 ($generated@@31 ($generated@@23 $generated@@24 $generated@@199))))))
 (and ($generated@@43 $generated@@196 $generated@@197 $generated@@200) ($generated@@25 $generated@@197 $generated@@201 ($generated@@42 $generated@@196 $generated@@197 ($generated@@22 $generated@@198) $generated@@200)))))) (= ($generated@@42 $generated@@196 $generated@@197 ($generated@@22 $generated@@198) ($generated@@23 $generated@@24 $generated@@199)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@199)) $generated@@41 (let (($generated@@202 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@199)))))
(let (($generated@@203 ($generated@@23 $generated@@24 ($generated@@44 $generated@@24 ($generated@@31 ($generated@@23 $generated@@24 $generated@@199))))))
($generated@@23 $generated@@24 ($generated@@21 $generated@@197 ($generated@@22 $generated@@45) $generated@@203 ($generated@@23 $generated@@24 ($generated@@42 $generated@@196 $generated@@197 ($generated@@22 $generated@@198) $generated@@202))))))))))
 :weight 3
 :pattern ( ($generated@@42 $generated@@196 $generated@@197 ($generated@@22 $generated@@198) ($generated@@23 $generated@@24 $generated@@199)))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and ($generated@@55 $generated@@206) (and ($generated@@73 $generated@@204) ($generated@@54 $generated@@24 $generated@@204 ($generated@@27 $generated@@205) $generated@@206))) ($generated@@54 $generated@@24 ($generated@@29 $generated@@204) ($generated@@27 $generated@@205) $generated@@206))
 :pattern ( ($generated@@54 $generated@@24 ($generated@@29 $generated@@204) ($generated@@27 $generated@@205) $generated@@206))
)))
(assert (= $generated@@41 ($generated@@23 $generated@@24 $generated@@41)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@32 ($generated@@23 $generated@@30 $generated@@207) ($generated@@23 $generated@@24 $generated@@208)) ($generated@@23 $generated@@24 ($generated@@32 $generated@@207 $generated@@208)))
 :pattern ( ($generated@@32 ($generated@@23 $generated@@30 $generated@@207) ($generated@@23 $generated@@24 $generated@@208)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@T) ) (! (= ($generated@@75 $generated@@210 ($generated@@23 $generated@@210 $generated@@209)) ($generated@@23 $generated@@30 ($generated@@75 $generated@@210 $generated@@209)))
 :pattern ( ($generated@@75 $generated@@210 ($generated@@23 $generated@@210 $generated@@209)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> ($generated@@55 $generated@@214) (= ($generated@@54 $generated@@24 ($generated@@32 $generated@@212 $generated@@213) ($generated@@27 $generated@@211) $generated@@214)  (and ($generated@@82 $generated@@212 $generated@@211 $generated@@214) ($generated@@54 $generated@@24 $generated@@213 ($generated@@27 $generated@@211) $generated@@214))))
 :pattern ( ($generated@@54 $generated@@24 ($generated@@32 $generated@@212 $generated@@213) ($generated@@27 $generated@@211) $generated@@214))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (or ($generated@@43 $generated@@216 $generated@@217 $generated@@219) (and (< 2 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@219 ($generated@@27 ($generated@@27 $generated@@217))) ($generated@@54 $generated@@24 $generated@@219 ($generated@@27 ($generated@@27 $generated@@217)) $generated@@215)))) ($generated@@55 $generated@@215)) ($generated@@54 $generated@@24 ($generated@@42 $generated@@216 $generated@@217 $generated@@218 $generated@@219) ($generated@@27 $generated@@217) $generated@@215))
 :pattern ( ($generated@@54 $generated@@24 ($generated@@42 $generated@@216 $generated@@217 $generated@@218 $generated@@219) ($generated@@27 $generated@@217) $generated@@215))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@232 true))
(let (($generated@@233  (=> (and (and (= $generated@@220 ($generated@@32 ($generated@@75 $generated@@24 $generated@@221) $generated@@222)) ($generated@@26 $generated@@24 $generated@@221 ($generated@@27 $generated@@223))) (and ($generated@@26 $generated@@24 $generated@@222 ($generated@@27 ($generated@@27 $generated@@223))) (= $generated@@224 $generated@@222))) (=> (and (and (and ($generated@@26 $generated@@24 $generated@@224 ($generated@@27 ($generated@@27 $generated@@223))) (= $generated@@225 $generated@@224)) (and (= $generated@@226 $generated@@221) ($generated@@26 $generated@@24 $generated@@226 ($generated@@27 $generated@@223)))) (and (and (= $generated@@227 $generated@@226) ($generated@@82 ($generated@@75 $generated@@24 $generated@@227) ($generated@@27 $generated@@223) $generated@@228)) (and ($generated@@54 $generated@@24 $generated@@225 ($generated@@27 ($generated@@27 $generated@@223)) $generated@@228) (= (ControlFlow 0 4) (- 0 3))))) (< ($generated@@118 $generated@@225) ($generated@@118 $generated@@220))))))
(let (($generated@@234  (=> (or (not (= $generated@@220 $generated@@41)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@233) (=> (= (ControlFlow 0 6) 5) $generated@@232)))))
(let (($generated@@235 true))
(let (($generated@@236 true))
(let (($generated@@237  (=> (= $generated@@229 ($generated@@129 $generated@@230 $generated@@228 $generated false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@236) (=> (= (ControlFlow 0 7) 2) $generated@@235)) (=> (= (ControlFlow 0 7) 6) $generated@@234)))))
(let (($generated@@238  (=> (and (and (and ($generated@@55 $generated@@228) ($generated@@231 $generated@@228)) ($generated@@26 $generated@@24 $generated@@220 ($generated@@27 ($generated@@27 $generated@@223)))) (and (= 2 $generated@@20) (= (ControlFlow 0 8) 7))) $generated@@237)))
$generated@@238))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
