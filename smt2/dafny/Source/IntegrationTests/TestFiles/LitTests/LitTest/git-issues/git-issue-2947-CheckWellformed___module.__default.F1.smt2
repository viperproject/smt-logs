(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U T@U) Bool)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@32 () Int)
(declare-fun $generated@@33 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@34 (T@U T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Int)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (Int) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (Int) Int)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) Bool)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@115 (T@U) Bool)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@158 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@214 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (! (= ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27) ($generated@@23 $generated@@25 $generated@@26 $generated@@27))
 :pattern ( ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@30) ($generated@@28 $generated@@30 $generated@@31)) ($generated@@28 $generated@@29 $generated@@31))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30) ($generated@@28 $generated@@30 $generated@@31))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30) ($generated@@28 $generated@@29 $generated@@31))
)))
(assert (= ($generated@@6 $generated@@36) 3))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (or ($generated@@34 $generated@@45 $generated@@47 $generated@@48) (and (< 2 $generated@@32) ($generated@@35 $generated@@36 $generated@@48 ($generated@@37 $generated@@45)))) (and (and (=> (< 0 ($generated@@38 $generated@@47)) (=> (not ($generated@@39 $generated@@48)) ($generated@@34 $generated@@45 ($generated@@40 $generated@@47 ($generated@@41 1)) ($generated@@42 $generated@@48)))) (=> (=> (< 0 ($generated@@38 $generated@@47)) (or ($generated@@39 $generated@@48) ($generated@@33 $generated@@45 $generated@@46 ($generated@@40 $generated@@47 ($generated@@41 1)) ($generated@@42 $generated@@48)))) (=> (= ($generated@@43 0) ($generated@@38 $generated@@47)) (forall (($generated@@49 T@U) ) (!  (=> ($generated@@44 $generated@@49 $generated@@47) ($generated@@34 $generated@@45 $generated@@49 $generated@@48))
 :pattern ( ($generated@@33 $generated@@45 $generated@@46 $generated@@49 $generated@@48))
))))) (= ($generated@@33 $generated@@45 ($generated@@24 $generated@@46) $generated@@47 $generated@@48)  (and (=> (< 0 ($generated@@38 $generated@@47)) (or ($generated@@39 $generated@@48) ($generated@@33 $generated@@45 $generated@@46 ($generated@@40 $generated@@47 ($generated@@41 1)) ($generated@@42 $generated@@48)))) (=> (= ($generated@@43 0) ($generated@@38 $generated@@47)) (exists (($generated@@50 T@U) ) (!  (and ($generated@@44 $generated@@50 $generated@@47) ($generated@@33 $generated@@45 $generated@@46 $generated@@50 $generated@@48))
 :pattern ( ($generated@@33 $generated@@45 $generated@@46 $generated@@50 $generated@@48))
)))))))
 :pattern ( ($generated@@33 $generated@@45 ($generated@@24 $generated@@46) $generated@@47 $generated@@48))
))))
(assert (forall (($generated@@51 T@U) ($generated@@52 Int) ($generated@@53 Int) ) (!  (=> (and (and (<= 0 $generated@@52) (<= 0 $generated@@53)) (<= (+ $generated@@52 $generated@@53) ($generated@@38 $generated@@51))) (= ($generated@@40 ($generated@@40 $generated@@51 ($generated@@41 $generated@@52)) ($generated@@41 $generated@@53)) ($generated@@40 $generated@@51 ($generated@@41 (+ $generated@@52 $generated@@53)))))
 :pattern ( ($generated@@40 ($generated@@40 $generated@@51 ($generated@@41 $generated@@52)) ($generated@@41 $generated@@53)))
)))
(assert (= ($generated@@54 $generated@@55) $generated@@3))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> ($generated@@57 $generated@@59) ($generated@@56 $generated@@36 $generated@@55 ($generated@@37 $generated@@58) $generated@@59))
 :pattern ( ($generated@@56 $generated@@36 $generated@@55 ($generated@@37 $generated@@58) $generated@@59))
)))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and ($generated@@35 $generated@@36 $generated@@62 ($generated@@37 $generated@@60)) ($generated@@23 $generated@@60 ($generated@@24 $generated@@61) $generated@@62)) (exists (($generated@@63 T@U) ) (! ($generated@@33 $generated@@60 ($generated@@24 $generated@@61) $generated@@63 $generated@@62)
 :pattern ( ($generated@@33 $generated@@60 ($generated@@24 $generated@@61) $generated@@63 $generated@@62))
)))
 :pattern ( ($generated@@23 $generated@@60 ($generated@@24 $generated@@61) $generated@@62))
))))
(assert (= ($generated@@6 $generated@@65) 4))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (or ($generated@@34 $generated@@66 ($generated@@64 $generated@@65 $generated@@68) ($generated@@64 $generated@@36 $generated@@69)) (and (< 2 $generated@@32) ($generated@@35 $generated@@36 $generated@@69 ($generated@@37 $generated@@66)))) (and (and (=> (< 0 ($generated@@38 $generated@@68)) (=> (not ($generated@@11 ($generated@@64 $generated@@7 ($generated@@10 ($generated@@39 ($generated@@64 $generated@@36 $generated@@69)))))) ($generated@@34 $generated@@66 ($generated@@40 $generated@@68 ($generated@@41 1)) ($generated@@64 $generated@@36 ($generated@@42 ($generated@@64 $generated@@36 $generated@@69)))))) (=> (=> (< 0 ($generated@@38 $generated@@68)) (or ($generated@@39 ($generated@@64 $generated@@36 $generated@@69)) ($generated@@33 $generated@@66 ($generated@@24 $generated@@67) ($generated@@40 $generated@@68 ($generated@@41 1)) ($generated@@64 $generated@@36 ($generated@@42 ($generated@@64 $generated@@36 $generated@@69)))))) (=> (= ($generated@@43 0) ($generated@@38 $generated@@68)) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@44 $generated@@70 $generated@@68) ($generated@@34 $generated@@66 $generated@@70 $generated@@69))
 :pattern ( ($generated@@33 $generated@@66 ($generated@@24 $generated@@67) $generated@@70 $generated@@69))
))))) (= ($generated@@33 $generated@@66 ($generated@@24 $generated@@67) ($generated@@64 $generated@@65 $generated@@68) ($generated@@64 $generated@@36 $generated@@69))  (and (=> (< 0 ($generated@@38 $generated@@68)) (or ($generated@@39 ($generated@@64 $generated@@36 $generated@@69)) ($generated@@33 $generated@@66 ($generated@@24 $generated@@67) ($generated@@40 $generated@@68 ($generated@@41 1)) ($generated@@64 $generated@@36 ($generated@@42 ($generated@@64 $generated@@36 $generated@@69)))))) (=> (= ($generated@@43 0) ($generated@@38 $generated@@68)) (exists (($generated@@71 T@U) ) (!  (and ($generated@@44 $generated@@71 $generated@@68) ($generated@@33 $generated@@66 ($generated@@24 $generated@@67) $generated@@71 $generated@@69))
 :pattern ( ($generated@@33 $generated@@66 ($generated@@24 $generated@@67) $generated@@71 $generated@@69))
)))))))
 :weight 3
 :pattern ( ($generated@@33 $generated@@66 ($generated@@24 $generated@@67) ($generated@@64 $generated@@65 $generated@@68) ($generated@@64 $generated@@36 $generated@@69)))
))))
(assert (forall (($generated@@72 T@U) ) (! ($generated@@35 $generated@@36 $generated@@55 ($generated@@37 $generated@@72))
 :pattern ( ($generated@@35 $generated@@36 $generated@@55 ($generated@@37 $generated@@72)))
)))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (and ($generated@@35 $generated@@36 $generated@@75 ($generated@@37 $generated@@73)) (exists (($generated@@76 T@U) ) (! ($generated@@33 $generated@@73 ($generated@@24 $generated@@74) $generated@@76 $generated@@75)
 :pattern ( ($generated@@33 $generated@@73 ($generated@@24 $generated@@74) $generated@@76 $generated@@75))
))) ($generated@@23 $generated@@73 ($generated@@24 $generated@@74) $generated@@75))
 :pattern ( ($generated@@23 $generated@@73 ($generated@@24 $generated@@74) $generated@@75))
))))
(assert (forall (($generated@@77 Int) ) (! (= ($generated@@43 $generated@@77) $generated@@77)
 :pattern ( ($generated@@43 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@64 $generated@@79 $generated@@78) $generated@@78)
 :pattern ( ($generated@@64 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@35 $generated@@36 ($generated@@80 $generated@@83 $generated@@84) ($generated@@37 $generated@@82))  (and ($generated@@81 $generated@@83 $generated@@82) ($generated@@35 $generated@@36 $generated@@84 ($generated@@37 $generated@@82))))
 :pattern ( ($generated@@35 $generated@@36 ($generated@@80 $generated@@83 $generated@@84) ($generated@@37 $generated@@82)))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@39 $generated@@85) (= ($generated@@54 $generated@@85) $generated@@3))
 :pattern ( ($generated@@39 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 $generated@@87) (= ($generated@@54 $generated@@87) $generated@@4))
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@88 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@88 $generated@@91 $generated@@90))
)))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@28 $generated@@95 $generated@@96) (=> ($generated@@33 $generated@@92 $generated@@93 $generated@@95 $generated@@94) ($generated@@33 $generated@@92 $generated@@93 $generated@@96 $generated@@94)))
 :pattern ( ($generated@@33 $generated@@92 $generated@@93 $generated@@95 $generated@@94) ($generated@@44 $generated@@95 $generated@@97) ($generated@@44 $generated@@96 $generated@@97))
))))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@86 $generated@@98) (exists (($generated@@99 T@U) ($generated@@100 T@U) ) (= $generated@@98 ($generated@@80 $generated@@99 $generated@@100))))
 :pattern ( ($generated@@86 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@39 $generated@@101) (= $generated@@101 $generated@@55))
 :pattern ( ($generated@@39 $generated@@101))
)))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (or ($generated@@34 $generated@@102 ($generated@@64 $generated@@65 $generated@@104) $generated@@105) (and (< 2 $generated@@32) ($generated@@35 $generated@@36 $generated@@105 ($generated@@37 $generated@@102)))) (and (and (=> (< 0 ($generated@@38 $generated@@104)) (=> (not ($generated@@39 $generated@@105)) ($generated@@34 $generated@@102 ($generated@@40 $generated@@104 ($generated@@41 1)) ($generated@@42 $generated@@105)))) (=> (=> (< 0 ($generated@@38 $generated@@104)) (or ($generated@@39 $generated@@105) ($generated@@33 $generated@@102 ($generated@@24 $generated@@103) ($generated@@40 $generated@@104 ($generated@@41 1)) ($generated@@42 $generated@@105)))) (=> (= ($generated@@43 0) ($generated@@38 $generated@@104)) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@44 $generated@@106 $generated@@104) ($generated@@34 $generated@@102 $generated@@106 $generated@@105))
 :pattern ( ($generated@@33 $generated@@102 ($generated@@24 $generated@@103) $generated@@106 $generated@@105))
))))) (= ($generated@@33 $generated@@102 ($generated@@24 $generated@@103) ($generated@@64 $generated@@65 $generated@@104) $generated@@105)  (and (=> (< 0 ($generated@@38 $generated@@104)) (or ($generated@@39 $generated@@105) ($generated@@33 $generated@@102 ($generated@@24 $generated@@103) ($generated@@40 $generated@@104 ($generated@@41 1)) ($generated@@42 $generated@@105)))) (=> (= ($generated@@43 0) ($generated@@38 $generated@@104)) (exists (($generated@@107 T@U) ) (!  (and ($generated@@44 $generated@@107 $generated@@104) ($generated@@33 $generated@@102 ($generated@@24 $generated@@103) $generated@@107 $generated@@105))
 :pattern ( ($generated@@33 $generated@@102 ($generated@@24 $generated@@103) $generated@@107 $generated@@105))
)))))))
 :weight 3
 :pattern ( ($generated@@33 $generated@@102 ($generated@@24 $generated@@103) ($generated@@64 $generated@@65 $generated@@104) $generated@@105))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@108 ($generated@@89 $generated@@112 $generated@@109) $generated@@110 $generated@@111) ($generated@@56 $generated@@112 $generated@@109 $generated@@110 $generated@@111))
 :pattern ( ($generated@@108 ($generated@@89 $generated@@112 $generated@@109) $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@114 T@U) ) (!  (and (= ($generated@@22 ($generated@@37 $generated@@114)) $generated@@2) (= ($generated@@113 ($generated@@37 $generated@@114)) $generated@@5))
 :pattern ( ($generated@@37 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (and ($generated@@115 $generated@@117) (<= ($generated@@38 $generated@@117) ($generated@@38 $generated@@116))) (and (= ($generated@@115 ($generated@@40 $generated@@116 $generated@@117)) ($generated@@115 $generated@@116)) (= ($generated@@38 ($generated@@40 $generated@@116 $generated@@117)) (- ($generated@@38 $generated@@116) ($generated@@38 $generated@@117)))))
 :pattern ( ($generated@@40 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 Int) ) (!  (=> (<= 0 $generated@@118) (and ($generated@@115 ($generated@@41 $generated@@118)) (= ($generated@@38 ($generated@@41 $generated@@118)) $generated@@118)))
 :pattern ( ($generated@@41 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (or ($generated@@28 $generated@@119 $generated@@120) (= $generated@@119 $generated@@120)) ($generated@@28 $generated@@120 $generated@@119))
 :pattern ( ($generated@@28 $generated@@119 $generated@@120) ($generated@@28 $generated@@120 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@35 $generated@@36 $generated@@122 ($generated@@37 $generated@@121)) (or ($generated@@39 $generated@@122) ($generated@@86 $generated@@122)))
 :pattern ( ($generated@@86 $generated@@122) ($generated@@35 $generated@@36 $generated@@122 ($generated@@37 $generated@@121)))
 :pattern ( ($generated@@39 $generated@@122) ($generated@@35 $generated@@36 $generated@@122 ($generated@@37 $generated@@121)))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@44 $generated@@123 $generated@@124) ($generated@@28 $generated@@123 $generated@@124))
 :pattern ( ($generated@@44 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@81 $generated@@125 $generated) (and (= ($generated@@89 $generated@@7 ($generated@@88 $generated@@7 $generated@@125)) $generated@@125) ($generated@@35 $generated@@7 ($generated@@88 $generated@@7 $generated@@125) $generated)))
 :pattern ( ($generated@@81 $generated@@125 $generated))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@81 ($generated@@89 $generated@@128 $generated@@126) $generated@@127) ($generated@@35 $generated@@128 $generated@@126 $generated@@127))
 :pattern ( ($generated@@81 ($generated@@89 $generated@@128 $generated@@126) $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (<= 0 ($generated@@38 $generated@@129))
 :pattern ( ($generated@@38 $generated@@129))
)))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and ($generated@@35 $generated@@36 $generated@@132 ($generated@@37 $generated@@130)) (= $generated@@133 ($generated@@41 0))) (not ($generated@@33 $generated@@130 $generated@@131 $generated@@133 $generated@@132)))
 :pattern ( ($generated@@33 $generated@@130 $generated@@131 $generated@@133 $generated@@132))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@54 ($generated@@80 $generated@@134 $generated@@135)) $generated@@4)
 :pattern ( ($generated@@80 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@136 ($generated@@80 $generated@@137 $generated@@138)) $generated@@137)
 :pattern ( ($generated@@80 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@42 ($generated@@80 $generated@@139 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@80 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@141 ($generated@@37 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@37 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@88 $generated@@144 ($generated@@89 $generated@@144 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@89 $generated@@144 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (and (and (and (=> ($generated@@28 $generated@@145 $generated@@146) (or (not (= $generated@@145 $generated@@146)) (not true))) (=> (and ($generated@@115 $generated@@145) (not ($generated@@115 $generated@@146))) ($generated@@28 $generated@@145 $generated@@146))) (=> (and ($generated@@115 $generated@@145) ($generated@@115 $generated@@146)) (= ($generated@@28 $generated@@145 $generated@@146) (< ($generated@@38 $generated@@145) ($generated@@38 $generated@@146))))) (=> (and ($generated@@28 $generated@@145 $generated@@146) ($generated@@115 $generated@@146)) ($generated@@115 $generated@@145)))
 :pattern ( ($generated@@28 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@33 $generated@@147 ($generated@@24 $generated@@148) $generated@@149 $generated@@150) ($generated@@33 $generated@@147 $generated@@148 $generated@@149 $generated@@150))
 :pattern ( ($generated@@33 $generated@@147 ($generated@@24 $generated@@148) $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and ($generated@@57 $generated@@153) (and ($generated@@86 $generated@@151) ($generated@@56 $generated@@36 $generated@@151 ($generated@@37 $generated@@152) $generated@@153))) ($generated@@108 ($generated@@136 $generated@@151) $generated@@152 $generated@@153))
 :pattern ( ($generated@@108 ($generated@@136 $generated@@151) $generated@@152 $generated@@153))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@154 $generated@@164 $generated@@165 $generated@@166 ($generated@@160 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@169 $generated@@170) $generated@@167)
 :weight 0
)) (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@176 $generated@@178) (= ($generated@@154 $generated@@171 $generated@@172 $generated@@173 ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@154 $generated@@180 $generated@@181 $generated@@182 ($generated@@160 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@154 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)))) (= ($generated@@6 $generated@@155) 5)) (= ($generated@@6 $generated@@156) 6)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@158 $generated@@189 $generated@@190 ($generated@@161 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@191) $generated@@193) $generated@@191)
 :weight 0
))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@198 $generated@@199) (= ($generated@@158 $generated@@194 $generated@@195 ($generated@@161 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@196) $generated@@199) ($generated@@158 $generated@@194 $generated@@195 $generated@@197 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@6 ($generated@@159 $generated@@200 $generated@@201)) 7))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@162 ($generated@@159 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@159 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@163 ($generated@@159 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@159 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@11 ($generated@@154 $generated@@155 $generated@@156 $generated@@7 ($generated@@157 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (or (not (= $generated@@210 $generated@@206)) (not true)) ($generated@@11 ($generated@@88 $generated@@7 ($generated@@158 $generated@@156 $generated@@65 ($generated@@158 $generated@@155 ($generated@@159 $generated@@156 $generated@@65) $generated@@207 $generated@@210) $generated@@208)))) $generated@@209))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156 $generated@@7 ($generated@@157 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> ($generated@@81 $generated@@213 ($generated@@37 $generated@@212)) (and (= ($generated@@89 $generated@@36 ($generated@@88 $generated@@36 $generated@@213)) $generated@@213) ($generated@@35 $generated@@36 ($generated@@88 $generated@@36 $generated@@213) ($generated@@37 $generated@@212))))
 :pattern ( ($generated@@81 $generated@@213 ($generated@@37 $generated@@212)))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (or ($generated@@214 $generated@@215 $generated@@217) (and (< 1 $generated@@32) ($generated@@35 $generated@@36 $generated@@217 ($generated@@37 $generated@@215)))) (and (=> (not ($generated@@39 $generated@@217)) ($generated@@214 $generated@@215 ($generated@@42 $generated@@217))) (= ($generated@@23 $generated@@215 ($generated@@24 $generated@@216) $generated@@217)  (or ($generated@@39 $generated@@217) ($generated@@23 $generated@@215 $generated@@216 ($generated@@42 $generated@@217))))))
 :pattern ( ($generated@@23 $generated@@215 ($generated@@24 $generated@@216) $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ) (!  (=> ($generated@@115 $generated@@218) (= $generated@@218 ($generated@@41 ($generated@@38 $generated@@218))))
 :pattern ( ($generated@@38 $generated@@218))
 :pattern ( ($generated@@115 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and ($generated@@57 $generated@@221) (and ($generated@@86 $generated@@219) ($generated@@56 $generated@@36 $generated@@219 ($generated@@37 $generated@@220) $generated@@221))) ($generated@@56 $generated@@36 ($generated@@42 $generated@@219) ($generated@@37 $generated@@220) $generated@@221))
 :pattern ( ($generated@@56 $generated@@36 ($generated@@42 $generated@@219) ($generated@@37 $generated@@220) $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and ($generated@@115 $generated@@223) (<= ($generated@@38 $generated@@223) ($generated@@38 $generated@@222))) (or (and (= $generated@@223 ($generated@@41 0)) (= ($generated@@40 $generated@@222 $generated@@223) $generated@@222)) (and (or (not (= $generated@@223 ($generated@@41 0))) (not true)) ($generated@@28 ($generated@@40 $generated@@222 $generated@@223) $generated@@222))))
 :pattern ( ($generated@@40 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 Int) ) (! (= ($generated@@89 $generated@@8 ($generated@@12 ($generated@@43 $generated@@224))) ($generated@@64 $generated@@65 ($generated@@89 $generated@@8 ($generated@@12 $generated@@224))))
 :pattern ( ($generated@@89 $generated@@8 ($generated@@12 ($generated@@43 $generated@@224))))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@T) ) (! (= ($generated@@89 $generated@@226 ($generated@@64 $generated@@226 $generated@@225)) ($generated@@64 $generated@@65 ($generated@@89 $generated@@226 $generated@@225)))
 :pattern ( ($generated@@89 $generated@@226 ($generated@@64 $generated@@226 $generated@@225)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! ($generated@@56 $generated@@7 $generated@@228 $generated $generated@@227)
 :pattern ( ($generated@@56 $generated@@7 $generated@@228 $generated $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> ($generated@@57 $generated@@232) (= ($generated@@56 $generated@@36 ($generated@@80 $generated@@230 $generated@@231) ($generated@@37 $generated@@229) $generated@@232)  (and ($generated@@108 $generated@@230 $generated@@229 $generated@@232) ($generated@@56 $generated@@36 $generated@@231 ($generated@@37 $generated@@229) $generated@@232))))
 :pattern ( ($generated@@56 $generated@@36 ($generated@@80 $generated@@230 $generated@@231) ($generated@@37 $generated@@229) $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ) (! ($generated@@35 $generated@@7 $generated@@233 $generated)
 :pattern ( ($generated@@35 $generated@@7 $generated@@233 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@241 true))
(let (($generated@@242  (=> (and ($generated@@39 $generated@@234) (= (ControlFlow 0 5) 2)) $generated@@241)))
(let (($generated@@243  (=> (not ($generated@@39 $generated@@234)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@86 $generated@@234)) (=> ($generated@@86 $generated@@234) (=> (and (and (= $generated@@235 ($generated@@42 $generated@@234)) ($generated@@56 $generated@@36 $generated@@235 ($generated@@37 $generated@@236) $generated@@237)) (and ($generated@@214 $generated@@236 ($generated@@42 $generated@@234)) (= (ControlFlow 0 3) 2))) $generated@@241))))))
(let (($generated@@244 true))
(let (($generated@@245  (=> (= $generated@@238 ($generated@@157 $generated@@239 $generated@@237 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 6) 1) $generated@@244) (=> (= (ControlFlow 0 6) 3) $generated@@243)) (=> (= (ControlFlow 0 6) 5) $generated@@242)))))
(let (($generated@@246  (=> (and (and (and ($generated@@57 $generated@@237) ($generated@@240 $generated@@237)) ($generated@@35 $generated@@36 $generated@@234 ($generated@@37 $generated@@236))) (and (= 1 $generated@@32) (= (ControlFlow 0 7) 6))) $generated@@245)))
$generated@@246)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
