(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@86 (Int) Int)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@99 (T@T T@U) T@U)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U T@U) Bool)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 (T@U T@U T@U T@U Int Int) Int)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Int Int) Bool)
(declare-fun $generated@@187 (T@U T@U) Bool)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@206 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert (= ($generated@@31 $generated@@1) 0))
(assert (= ($generated@@32 $generated) $generated@@0))
(assert (= ($generated@@33 $generated@@1) $generated@@2))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! ($generated@@34 $generated@@17 $generated@@36 $generated@@35 $generated@@37)
 :pattern ( ($generated@@34 $generated@@17 $generated@@36 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ) (!  (not ($generated@@38 $generated@@39 $generated@@40))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40))
)))
(assert (= ($generated@@41 $generated@@42) $generated@@7))
(assert (= ($generated@@41 $generated@@43) $generated@@8))
(assert (= ($generated@@15 $generated@@45) 3))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@49 $generated@@46)  (or (= $generated@@49 $generated@@47) (= ($generated@@48 $generated@@49) $generated@@46)))
 :pattern ( ($generated@@44 $generated@@45 $generated@@49 $generated@@46))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@34 $generated@@45 $generated@@51 $generated@@50 $generated@@52) ($generated@@34 $generated@@45 $generated@@51 $generated@@46 $generated@@52))
 :pattern ( ($generated@@34 $generated@@45 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@34 $generated@@45 $generated@@51 $generated@@46 $generated@@52))
)))
(assert (= ($generated@@15 $generated@@53) 4))
(assert ($generated@@44 $generated@@53 $generated@@42 $generated@@54))
(assert ($generated@@44 $generated@@53 $generated@@43 $generated@@54))
(assert (= ($generated@@31 $generated@@55) 0))
(assert (= ($generated@@56 $generated@@9 $generated@@13) $generated@@55))
(assert  (not ($generated@@57 $generated@@55)))
(assert (= ($generated@@31 $generated@@58) 0))
(assert (= ($generated@@56 $generated@@9 $generated@@14) $generated@@58))
(assert  (not ($generated@@57 $generated@@58)))
(assert  (and (and (and (and (and (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@60 $generated@@67 $generated@@68 ($generated@@64 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@71) $generated@@69)
 :weight 0
)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@76 $generated@@77) (= ($generated@@60 $generated@@72 $generated@@73 ($generated@@64 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@77) ($generated@@60 $generated@@72 $generated@@73 $generated@@75 $generated@@77)))
 :weight 0
))) (= ($generated@@15 $generated@@61) 5)) (= ($generated@@15 $generated@@62) 6)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (= ($generated@@15 ($generated@@63 $generated@@78 $generated@@79)) 7))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@65 ($generated@@63 $generated@@80 $generated@@81)) $generated@@80)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@66 ($generated@@63 $generated@@82 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@63 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@34 $generated@@45 $generated@@84 $generated@@46 $generated@@85)  (or (= $generated@@84 $generated@@47) ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@85 $generated@@84) $generated@@1)))))
 :pattern ( ($generated@@34 $generated@@45 $generated@@84 $generated@@46 $generated@@85))
)))
(assert (forall (($generated@@87 Int) ) (! (= ($generated@@86 $generated@@87) $generated@@87)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 $generated@@89) $generated@@89)
 :pattern ( ($generated@@88 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@91 $generated@@92 $generated@@93) (forall (($generated@@94 T@U) ) (!  (=> ($generated@@38 $generated@@92 $generated@@94) ($generated@@38 $generated@@93 $generated@@94))
 :pattern ( ($generated@@38 $generated@@92 $generated@@94))
 :pattern ( ($generated@@38 $generated@@93 $generated@@94))
)))
 :pattern ( ($generated@@91 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@95 $generated@@96) (= ($generated@@41 $generated@@96) $generated@@7))
 :pattern ( ($generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@97 $generated@@98) (= ($generated@@41 $generated@@98) $generated@@8))
 :pattern ( ($generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@99 $generated@@101 ($generated@@59 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@59 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@95 $generated@@102) (= $generated@@102 $generated@@42))
 :pattern ( ($generated@@95 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@97 $generated@@103) (= $generated@@103 $generated@@43))
 :pattern ( ($generated@@97 $generated@@103))
)))
(assert  (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@104 $generated@@107 $generated@@108 $generated@@109 ($generated@@106 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@112 $generated@@113) $generated@@110)
 :weight 0
)) (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@104 $generated@@114 $generated@@115 $generated@@116 ($generated@@106 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@104 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@104 $generated@@123 $generated@@124 $generated@@125 ($generated@@106 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@104 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@20 ($generated@@104 $generated@@45 $generated@@61 $generated@@16 ($generated@@105 $generated@@132 $generated@@133 $generated@@134 $generated@@135 $generated@@136) $generated@@137 $generated@@138))  (=> (and (or (not (= $generated@@137 $generated@@132)) (not true)) ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@133 $generated@@137) $generated@@134)))) ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@135 $generated@@137) $generated@@136)))))
 :pattern ( ($generated@@104 $generated@@45 $generated@@61 $generated@@16 ($generated@@105 $generated@@132 $generated@@133 $generated@@134 $generated@@135 $generated@@136) $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@44 $generated@@17 $generated@@139 $generated@@35) (<= ($generated@@86 0) ($generated@@22 $generated@@139)))
 :pattern ( ($generated@@44 $generated@@17 $generated@@139 $generated@@35))
)))
(assert ($generated@@57 $generated@@1))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and ($generated@@140 $generated@@141) (and (or (not (= $generated@@142 $generated@@47)) (not true)) (= ($generated@@48 $generated@@142) $generated@@46))) ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@141 $generated@@142) $generated@@1)))) ($generated@@34 $generated@@17 ($generated@@59 $generated@@17 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@141 $generated@@142) $generated@@58)) $generated $generated@@141))
 :pattern ( ($generated@@59 $generated@@17 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@141 $generated@@142) $generated@@58)))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@143 ($generated@@99 $generated@@147 $generated@@144) $generated@@145 $generated@@146) ($generated@@34 $generated@@147 $generated@@144 $generated@@145 $generated@@146))
 :pattern ( ($generated@@143 ($generated@@99 $generated@@147 $generated@@144) $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and ($generated@@140 $generated@@148) (and (or (not (= $generated@@149 $generated@@47)) (not true)) (= ($generated@@48 $generated@@149) $generated@@46))) ($generated@@44 $generated@@45 ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@148 $generated@@149) $generated@@55)) $generated@@46))
 :pattern ( ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@148 $generated@@149) $generated@@55)))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@150 $generated@@50)  (and ($generated@@44 $generated@@45 $generated@@150 $generated@@46) (or (not (= $generated@@150 $generated@@47)) (not true))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@150 $generated@@50))
 :pattern ( ($generated@@44 $generated@@45 $generated@@150 $generated@@46))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and ($generated@@140 $generated@@151) (and (or (not (= $generated@@152 $generated@@47)) (not true)) (= ($generated@@48 $generated@@152) $generated@@46))) ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@151 $generated@@152) $generated@@1)))) ($generated@@34 $generated@@45 ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@151 $generated@@152) $generated@@55)) $generated@@46 $generated@@151))
 :pattern ( ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@151 $generated@@152) $generated@@55)))
)))
(assert  (=> (<= 1 $generated@@153) (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 Int) ($generated@@162 Int) ) (!  (=> (or ($generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@161 $generated@@162) (and (< 1 $generated@@153) (and (and (and ($generated@@140 $generated@@158) (and (or (not (= $generated@@159 $generated@@47)) (not true)) (and ($generated@@44 $generated@@45 $generated@@159 $generated@@50) ($generated@@34 $generated@@45 $generated@@159 $generated@@50 $generated@@158)))) ($generated@@44 $generated@@53 $generated@@160 $generated@@54)) (<= ($generated@@86 0) $generated@@161)))) (and (let (($generated@@163 $generated@@159))
 (=> (not (or (= $generated@@161 ($generated@@86 0)) (= ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@158 $generated@@159) $generated@@55)) $generated@@47))) (let (($generated@@164 (ite ($generated@@95 $generated@@160) (let (($generated@@165 (- (+ $generated@@161 ($generated@@22 ($generated@@59 $generated@@17 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@158 $generated@@163) $generated@@58)))) $generated@@161)))
(let (($generated@@166 $generated@@165))
(let (($generated@@167 $generated@@166))
(let (($generated@@168 $generated@@167))
(let (($generated@@169 $generated@@168))
(let (($generated@@170 $generated@@169))
(let (($generated@@171 $generated@@170))
(let (($generated@@172 $generated@@171))
(let (($generated@@173 $generated@@172))
(let (($generated@@174 $generated@@173))
$generated@@174)))))))))) 999)))
($generated@@156 $generated@@158 ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@158 $generated@@159) $generated@@55)) $generated@@160 (- $generated@@161 1) (+ $generated@@162 $generated@@164))))) (= ($generated@@154 ($generated@@155 $generated@@157) $generated@@158 $generated@@159 $generated@@160 $generated@@161 $generated@@162) (let (($generated@@175 $generated@@159))
(ite  (or (= $generated@@161 ($generated@@86 0)) (= ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@158 $generated@@159) $generated@@55)) $generated@@47)) $generated@@162 (let (($generated@@176 (ite ($generated@@95 $generated@@160) (let (($generated@@177 (- (+ $generated@@161 ($generated@@22 ($generated@@59 $generated@@17 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@158 $generated@@175) $generated@@58)))) $generated@@161)))
(let (($generated@@178 $generated@@177))
(let (($generated@@179 $generated@@178))
(let (($generated@@180 $generated@@179))
(let (($generated@@181 $generated@@180))
(let (($generated@@182 $generated@@181))
(let (($generated@@183 $generated@@182))
(let (($generated@@184 $generated@@183))
(let (($generated@@185 $generated@@184))
(let (($generated@@186 $generated@@185))
$generated@@186)))))))))) 999)))
(+ ($generated@@154 $generated@@157 $generated@@158 ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@158 $generated@@159) $generated@@55)) $generated@@160 (- $generated@@161 1) (+ $generated@@162 $generated@@176)) 1)))))))
 :pattern ( ($generated@@154 ($generated@@155 $generated@@157) $generated@@158 $generated@@159 $generated@@160 $generated@@161 $generated@@162) ($generated@@140 $generated@@158))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@187 $generated@@188 $generated@@189) (= $generated@@188 $generated@@189))
 :pattern ( ($generated@@187 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (!  (=> ($generated@@44 $generated@@53 $generated@@190 $generated@@54) (or ($generated@@95 $generated@@190) ($generated@@97 $generated@@190)))
 :pattern ( ($generated@@97 $generated@@190) ($generated@@44 $generated@@53 $generated@@190 $generated@@54))
 :pattern ( ($generated@@95 $generated@@190) ($generated@@44 $generated@@53 $generated@@190 $generated@@54))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (and (= ($generated@@191 ($generated@@56 $generated@@192 $generated@@193)) $generated@@192) (= ($generated@@33 ($generated@@56 $generated@@192 $generated@@193)) $generated@@193))
 :pattern ( ($generated@@56 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 Int) ($generated@@199 Int) ) (! (= ($generated@@154 ($generated@@155 $generated@@194) $generated@@195 $generated@@196 $generated@@197 $generated@@198 $generated@@199) ($generated@@154 $generated@@194 $generated@@195 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
 :pattern ( ($generated@@154 ($generated@@155 $generated@@194) $generated@@195 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@T) ) (! (= ($generated@@59 $generated@@201 ($generated@@99 $generated@@201 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@99 $generated@@201 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and ($generated@@140 $generated@@202) (and (or (not (= $generated@@203 $generated@@47)) (not true)) (= ($generated@@48 $generated@@203) $generated@@46))) ($generated@@44 $generated@@17 ($generated@@59 $generated@@17 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@202 $generated@@203) $generated@@58)) $generated))
 :pattern ( ($generated@@59 $generated@@17 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@202 $generated@@203) $generated@@58)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and ($generated@@140 $generated@@205) ($generated@@44 $generated@@53 $generated@@204 $generated@@54)) ($generated@@34 $generated@@53 $generated@@204 $generated@@54 $generated@@205))
 :pattern ( ($generated@@34 $generated@@53 $generated@@204 $generated@@54 $generated@@205))
)))
(assert (= ($generated@@32 $generated@@35) $generated@@3))
(assert (= ($generated@@206 $generated@@35) $generated@@10))
(assert (= ($generated@@32 $generated@@50) $generated@@4))
(assert (= ($generated@@206 $generated@@50) $generated@@11))
(assert (= ($generated@@32 $generated@@54) $generated@@5))
(assert (= ($generated@@206 $generated@@54) $generated@@12))
(assert (= ($generated@@32 $generated@@46) $generated@@6))
(assert (= ($generated@@206 $generated@@46) $generated@@11))
(assert (= $generated@@42 ($generated@@88 $generated@@53 $generated@@42)))
(assert (= $generated@@43 ($generated@@88 $generated@@53 $generated@@43)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@187 $generated@@207 $generated@@208) (forall (($generated@@209 T@U) ) (! (= ($generated@@38 $generated@@207 $generated@@209) ($generated@@38 $generated@@208 $generated@@209))
 :pattern ( ($generated@@38 $generated@@207 $generated@@209))
 :pattern ( ($generated@@38 $generated@@208 $generated@@209))
)))
 :pattern ( ($generated@@187 $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@210 Int) ) (! (= ($generated@@99 $generated@@17 ($generated@@21 ($generated@@86 $generated@@210))) ($generated@@88 $generated@@62 ($generated@@99 $generated@@17 ($generated@@21 $generated@@210))))
 :pattern ( ($generated@@99 $generated@@17 ($generated@@21 ($generated@@86 $generated@@210))))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@T) ) (! (= ($generated@@99 $generated@@212 ($generated@@88 $generated@@212 $generated@@211)) ($generated@@88 $generated@@62 ($generated@@99 $generated@@212 $generated@@211)))
 :pattern ( ($generated@@99 $generated@@212 ($generated@@88 $generated@@212 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! ($generated@@34 $generated@@17 $generated@@214 $generated $generated@@213)
 :pattern ( ($generated@@34 $generated@@17 $generated@@214 $generated $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ) (! ($generated@@44 $generated@@17 $generated@@215 $generated)
 :pattern ( ($generated@@44 $generated@@17 $generated@@215 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () Bool)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 () Int)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () Int)
(declare-fun $generated@@227 () Bool)
(declare-fun $generated@@228 () T@T)
(declare-fun $generated@@229 (T@U) Int)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () Bool)
(declare-fun $generated@@232 () Bool)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () Bool)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 () Int)
(declare-fun $generated@@239 () Int)
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 () Int)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 () Int)
(declare-fun $generated@@245 () Int)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 () Int)
(declare-fun $generated@@248 () Int)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 () Int)
(declare-fun $generated@@251 () Int)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () Int)
(declare-fun $generated@@254 () Int)
(declare-fun $generated@@255 () Bool)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 (T@U) Bool)
(assert (= ($generated@@15 $generated@@228) 8))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@258  (=> (and (= $generated@@216 $generated@@217) (= $generated@@218 ($generated@@20 ($generated@@104 $generated@@45 $generated@@61 $generated@@16 $generated@@219 $generated@@220 $generated@@55)))) (and (=> (= (ControlFlow 0 6) (- 0 14)) (or (not (= ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@221 $generated@@220) $generated@@55)) $generated@@47)) (not true))) (=> (or (not (= ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@221 $generated@@220) $generated@@55)) $generated@@47)) (not true)) (=> (and ($generated@@143 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@221 $generated@@220) $generated@@55) $generated@@46 $generated@@221) ($generated@@34 $generated@@53 $generated@@222 $generated@@54 $generated@@221)) (and (=> (= (ControlFlow 0 6) (- 0 13)) ($generated@@44 $generated@@17 ($generated@@21 (- $generated@@223 1)) $generated@@35)) (=> ($generated@@44 $generated@@17 ($generated@@21 (- $generated@@223 1)) $generated@@35) (=> (= $generated@@224 (- $generated@@223 1)) (=> (and (and ($generated@@34 $generated@@17 ($generated@@21 $generated@@224) $generated@@35 $generated@@221) (= $generated@@225 (+ $generated@@226 $generated@@216))) (and ($generated@@34 $generated@@17 ($generated@@21 $generated@@225) $generated $generated@@221) (= $generated@@227 (forall (($generated@@259 T@U) ($generated@@260 T@U) )  (=> (and (and (or (not (= $generated@@259 $generated@@47)) (not true)) ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@221 $generated@@259) $generated@@1)))) ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@221 $generated@@259) $generated@@1)))) ($generated@@20 ($generated@@104 $generated@@45 $generated@@61 $generated@@16 $generated@@219 $generated@@259 $generated@@260))))))) (and (=> (= (ControlFlow 0 6) (- 0 12)) (or (or (or (<= 0 $generated@@223) (and ($generated@@91 ($generated@@88 $generated@@228 $generated@@39) ($generated@@88 $generated@@228 $generated@@39)) (not ($generated@@91 ($generated@@88 $generated@@228 $generated@@39) ($generated@@88 $generated@@228 $generated@@39))))) (< ($generated@@229 $generated@@222) ($generated@@229 $generated@@222))) (= $generated@@224 $generated@@223))) (=> (or (or (or (<= 0 $generated@@223) (and ($generated@@91 ($generated@@88 $generated@@228 $generated@@39) ($generated@@88 $generated@@228 $generated@@39)) (not ($generated@@91 ($generated@@88 $generated@@228 $generated@@39) ($generated@@88 $generated@@228 $generated@@39))))) (< ($generated@@229 $generated@@222) ($generated@@229 $generated@@222))) (= $generated@@224 $generated@@223)) (and (=> (= (ControlFlow 0 6) (- 0 11)) (or (or (or (or (<= 0 $generated@@226) (and ($generated@@91 ($generated@@88 $generated@@228 $generated@@39) ($generated@@88 $generated@@228 $generated@@39)) (not ($generated@@91 ($generated@@88 $generated@@228 $generated@@39) ($generated@@88 $generated@@228 $generated@@39))))) (< ($generated@@229 $generated@@222) ($generated@@229 $generated@@222))) (< $generated@@224 $generated@@223)) (= $generated@@225 $generated@@226))) (=> (or (or (or (or (<= 0 $generated@@226) (and ($generated@@91 ($generated@@88 $generated@@228 $generated@@39) ($generated@@88 $generated@@228 $generated@@39)) (not ($generated@@91 ($generated@@88 $generated@@228 $generated@@39) ($generated@@88 $generated@@228 $generated@@39))))) (< ($generated@@229 $generated@@222) ($generated@@229 $generated@@222))) (< $generated@@224 $generated@@223)) (= $generated@@225 $generated@@226)) (and (=> (= (ControlFlow 0 6) (- 0 10)) (or (and ($generated@@91 ($generated@@88 $generated@@228 $generated@@39) ($generated@@88 $generated@@228 $generated@@39)) (not ($generated@@91 ($generated@@88 $generated@@228 $generated@@39) ($generated@@88 $generated@@228 $generated@@39)))) (and ($generated@@187 ($generated@@88 $generated@@228 $generated@@39) ($generated@@88 $generated@@228 $generated@@39)) (or (< ($generated@@229 $generated@@222) ($generated@@229 $generated@@222)) (and (= ($generated@@229 $generated@@222) ($generated@@229 $generated@@222)) (or (< $generated@@224 $generated@@223) (and (= $generated@@224 $generated@@223) (< $generated@@225 $generated@@226)))))))) (=> (or (and ($generated@@91 ($generated@@88 $generated@@228 $generated@@39) ($generated@@88 $generated@@228 $generated@@39)) (not ($generated@@91 ($generated@@88 $generated@@228 $generated@@39) ($generated@@88 $generated@@228 $generated@@39)))) (and ($generated@@187 ($generated@@88 $generated@@228 $generated@@39) ($generated@@88 $generated@@228 $generated@@39)) (or (< ($generated@@229 $generated@@222) ($generated@@229 $generated@@222)) (and (= ($generated@@229 $generated@@222) ($generated@@229 $generated@@222)) (or (< $generated@@224 $generated@@223) (and (= $generated@@224 $generated@@223) (< $generated@@225 $generated@@226))))))) (=> (and (and ($generated@@156 $generated@@221 ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@221 $generated@@220) $generated@@55)) $generated@@222 (- $generated@@223 1) (+ $generated@@226 $generated@@216)) (= ($generated@@154 ($generated@@155 $generated@@230) $generated@@221 $generated@@220 $generated@@222 $generated@@223 $generated@@226) (+ ($generated@@154 ($generated@@155 $generated@@230) $generated@@221 ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@221 $generated@@220) $generated@@55)) $generated@@222 (- $generated@@223 1) (+ $generated@@226 $generated@@216)) 1))) (and ($generated@@156 $generated@@221 ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@221 $generated@@220) $generated@@55)) $generated@@222 (- $generated@@223 1) (+ $generated@@226 $generated@@216)) ($generated@@44 $generated@@17 ($generated@@21 ($generated@@154 ($generated@@155 $generated@@230) $generated@@221 $generated@@220 $generated@@222 $generated@@223 $generated@@226)) $generated))) (and (=> (= (ControlFlow 0 6) (- 0 9)) $generated@@231) (=> $generated@@231 (and (=> (= (ControlFlow 0 6) (- 0 8)) $generated@@232) (=> $generated@@232 (and (=> (= (ControlFlow 0 6) (- 0 7)) $generated@@218) (=> $generated@@218 (=> (= (ControlFlow 0 6) (- 0 5)) $generated@@227))))))))))))))))))))))))
(let (($generated@@261  (=> (= $generated@@222 $generated@@43) (=> (and (and (= $generated@@217 ($generated@@86 999)) ($generated@@44 $generated@@17 ($generated@@21 $generated@@217) $generated)) (and (= $generated@@232 true) (= (ControlFlow 0 17) 6))) $generated@@258))))
(let (($generated@@262  (=> (= $generated@@222 $generated@@42) (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (not (= $generated@@233 $generated@@47)) (not true))) (=> (or (not (= $generated@@233 $generated@@47)) (not true)) (=> (= $generated@@234 ($generated@@20 ($generated@@104 $generated@@45 $generated@@61 $generated@@16 $generated@@219 $generated@@233 $generated@@58))) (=> (and (= $generated@@235 (- (+ $generated@@223 ($generated@@22 ($generated@@59 $generated@@17 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@221 $generated@@233) $generated@@58)))) $generated@@223)) ($generated@@44 $generated@@17 ($generated@@21 $generated@@235) $generated)) (=> (and (and (and (and (and (= $generated@@236 $generated@@235) (= $generated@@237 $generated@@236)) (and ($generated@@44 $generated@@17 ($generated@@21 $generated@@237) $generated) (= $generated@@238 $generated@@237))) (and (and (= $generated@@239 $generated@@238) ($generated@@44 $generated@@17 ($generated@@21 $generated@@239) $generated)) (and (= $generated@@240 $generated@@239) (= $generated@@241 $generated@@240)))) (and (and (and ($generated@@44 $generated@@17 ($generated@@21 $generated@@241) $generated) (= $generated@@242 $generated@@241)) (and (= $generated@@243 $generated@@242) ($generated@@44 $generated@@17 ($generated@@21 $generated@@243) $generated))) (and (and (= $generated@@244 $generated@@243) (= $generated@@245 $generated@@244)) (and ($generated@@44 $generated@@17 ($generated@@21 $generated@@245) $generated) (= $generated@@246 $generated@@245))))) (and (and (and (and (= $generated@@247 $generated@@246) ($generated@@44 $generated@@17 ($generated@@21 $generated@@247) $generated)) (and (= $generated@@248 $generated@@247) (= $generated@@249 $generated@@248))) (and (and ($generated@@44 $generated@@17 ($generated@@21 $generated@@249) $generated) (= $generated@@250 $generated@@249)) (and (= $generated@@251 $generated@@250) ($generated@@44 $generated@@17 ($generated@@21 $generated@@251) $generated)))) (and (and (and (= $generated@@252 $generated@@251) (= $generated@@253 $generated@@252)) (and ($generated@@44 $generated@@17 ($generated@@21 $generated@@253) $generated) (= $generated@@254 $generated@@253))) (and (and (= $generated@@217 $generated@@254) ($generated@@44 $generated@@17 ($generated@@21 $generated@@217) $generated)) (and (= $generated@@232 $generated@@234) (= (ControlFlow 0 15) 6)))))) $generated@@258))))))))
(let (($generated@@263 true))
(let (($generated@@264  (=> (or (not (= $generated@@222 $generated@@42)) (not true)) (and (=> (= (ControlFlow 0 18) 17) $generated@@261) (=> (= (ControlFlow 0 18) 4) $generated@@263)))))
(let (($generated@@265  (=> (not (or (= $generated@@223 ($generated@@86 0)) (= ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@221 $generated@@220) $generated@@55)) $generated@@47))) (and (=> (= (ControlFlow 0 19) 15) $generated@@262) (=> (= (ControlFlow 0 19) 18) $generated@@264)))))
(let (($generated@@266  (=> (and (and (or (= $generated@@223 ($generated@@86 0)) (= ($generated@@59 $generated@@45 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@45 ($generated@@63 $generated@@61 $generated@@62) $generated@@221 $generated@@220) $generated@@55)) $generated@@47)) (= ($generated@@154 ($generated@@155 $generated@@230) $generated@@221 $generated@@220 $generated@@222 $generated@@223 $generated@@226) $generated@@226)) (and ($generated@@44 $generated@@17 ($generated@@21 ($generated@@154 ($generated@@155 $generated@@230) $generated@@221 $generated@@220 $generated@@222 $generated@@223 $generated@@226)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@231)))
(let (($generated@@267  (=> (and (= $generated@@223 ($generated@@86 0)) (= $generated@@231 true)) (and (=> (= (ControlFlow 0 21) 3) $generated@@266) (=> (= (ControlFlow 0 21) 19) $generated@@265)))))
(let (($generated@@268  (=> (or (not (= $generated@@223 ($generated@@86 0))) (not true)) (=> (and (= $generated@@255 ($generated@@20 ($generated@@104 $generated@@45 $generated@@61 $generated@@16 $generated@@219 $generated@@220 $generated@@55))) (= $generated@@231 $generated@@255)) (and (=> (= (ControlFlow 0 20) 3) $generated@@266) (=> (= (ControlFlow 0 20) 19) $generated@@265))))))
(let (($generated@@269  (=> (= $generated@@256 $generated@@220) (=> (and ($generated@@44 $generated@@45 $generated@@256 $generated@@50) (= $generated@@233 $generated@@256)) (and (=> (= (ControlFlow 0 22) 20) $generated@@268) (=> (= (ControlFlow 0 22) 21) $generated@@267))))))
(let (($generated@@270 true))
(let (($generated@@271  (=> (= $generated@@219 ($generated@@105 $generated@@47 $generated@@221 $generated@@1 $generated@@221 $generated@@1)) (and (=> (= (ControlFlow 0 23) 1) $generated@@270) (=> (= (ControlFlow 0 23) 22) $generated@@269)))))
(let (($generated@@272  (=> (and (and (and ($generated@@140 $generated@@221) ($generated@@257 $generated@@221)) (and (or (not (= $generated@@220 $generated@@47)) (not true)) (and ($generated@@44 $generated@@45 $generated@@220 $generated@@50) ($generated@@34 $generated@@45 $generated@@220 $generated@@50 $generated@@221)))) (and (and ($generated@@44 $generated@@53 $generated@@222 $generated@@54) (<= ($generated@@86 0) $generated@@223)) (and (= 1 $generated@@153) (= (ControlFlow 0 24) 23)))) $generated@@271)))
$generated@@272))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
