(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 () Int)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@55 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@132 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@12 $generated@@31) 3))
(assert  (=> (<= 3 $generated@@28) (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (or ($generated@@32 ($generated@@30 $generated@@31 $generated@@40) ($generated@@30 $generated@@31 $generated@@41)) (and (< 3 $generated@@28) (and ($generated@@33 $generated@@31 $generated@@40 $generated@@34) ($generated@@33 $generated@@31 $generated@@41 $generated@@34)))) (= ($generated@@29 ($generated@@30 $generated@@31 $generated@@40) ($generated@@30 $generated@@31 $generated@@41)) (ite ($generated@@35 ($generated@@36 ($generated@@30 $generated@@31 $generated@@41))) true (ite ($generated@@37 ($generated@@36 ($generated@@30 $generated@@31 $generated@@40)))  (or ($generated@@38 ($generated@@36 ($generated@@30 $generated@@31 $generated@@41))) (and ($generated@@37 ($generated@@36 ($generated@@30 $generated@@31 $generated@@41))) (= ($generated@@39 ($generated@@36 ($generated@@30 $generated@@31 $generated@@41))) ($generated@@39 ($generated@@36 ($generated@@30 $generated@@31 $generated@@40)))))) (ite ($generated@@38 ($generated@@36 ($generated@@30 $generated@@31 $generated@@40)))  (or ($generated@@38 ($generated@@36 ($generated@@30 $generated@@31 $generated@@41))) (and ($generated@@37 ($generated@@36 ($generated@@30 $generated@@31 $generated@@41))) (= ($generated@@39 ($generated@@36 ($generated@@30 $generated@@31 $generated@@41))) ($generated@@30 $generated@@31 $generated@@40)))) false)))))
 :weight 3
 :pattern ( ($generated@@29 ($generated@@30 $generated@@31 $generated@@40) ($generated@@30 $generated@@31 $generated@@41)))
))))
(assert (= ($generated@@42 $generated) $generated@@0))
(assert (= ($generated@@12 $generated@@46) 4))
(assert  (=> (< 2 $generated@@28) (forall (($generated@@48 T@U) ) (!  (=> (and (or (not (= $generated@@48 $generated@@43)) (not true)) (= ($generated@@44 $generated@@48) $generated@@45)) ($generated@@33 $generated@@46 ($generated@@36 $generated@@48) $generated@@47))
 :pattern ( ($generated@@36 $generated@@48))
))))
(assert  (and (and (and (and (and (and (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@50 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@50 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@50 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@12 $generated@@51) 5)) (= ($generated@@12 $generated@@52) 6)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@12 ($generated@@53 $generated@@70 $generated@@71)) 7))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@53 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@53 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@53 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@53 $generated@@74 $generated@@75))
))))
(assert  (=> (< 2 $generated@@28) (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (and (and ($generated@@54 $generated@@76) (and (or (not (= $generated@@77 $generated@@43)) (not true)) (= ($generated@@44 $generated@@77) $generated@@45))) ($generated@@17 ($generated@@49 $generated@@13 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@31 ($generated@@53 $generated@@51 $generated@@52) $generated@@76 $generated@@77) $generated@@1)))) ($generated@@55 $generated@@46 ($generated@@36 $generated@@77) $generated@@47 $generated@@76))
 :pattern ( ($generated@@36 $generated@@77) ($generated@@49 $generated@@13 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@31 ($generated@@53 $generated@@51 $generated@@52) $generated@@76 $generated@@77) $generated@@1)))
))))
(assert (= ($generated@@78 $generated@@79) $generated@@5))
(assert (= ($generated@@78 $generated@@80) $generated@@9))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@33 $generated@@31 $generated@@81 $generated@@45)  (or (= $generated@@81 $generated@@43) (= ($generated@@44 $generated@@81) $generated@@45)))
 :pattern ( ($generated@@33 $generated@@31 $generated@@81 $generated@@45))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@55 $generated@@31 $generated@@82 $generated@@34 $generated@@83) ($generated@@55 $generated@@31 $generated@@82 $generated@@45 $generated@@83))
 :pattern ( ($generated@@55 $generated@@31 $generated@@82 $generated@@34 $generated@@83))
 :pattern ( ($generated@@55 $generated@@31 $generated@@82 $generated@@45 $generated@@83))
)))
(assert ($generated@@33 $generated@@46 $generated@@79 $generated@@47))
(assert ($generated@@33 $generated@@46 $generated@@80 $generated@@47))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@54 $generated@@84) ($generated@@55 $generated@@46 $generated@@79 $generated@@47 $generated@@84))
 :pattern ( ($generated@@55 $generated@@46 $generated@@79 $generated@@47 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@54 $generated@@85) ($generated@@55 $generated@@46 $generated@@80 $generated@@47 $generated@@85))
 :pattern ( ($generated@@55 $generated@@46 $generated@@80 $generated@@47 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@55 $generated@@31 $generated@@86 $generated@@45 $generated@@87)  (or (= $generated@@86 $generated@@43) ($generated@@17 ($generated@@49 $generated@@13 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@31 ($generated@@53 $generated@@51 $generated@@52) $generated@@87 $generated@@86) $generated@@1)))))
 :pattern ( ($generated@@55 $generated@@31 $generated@@86 $generated@@45 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@30 $generated@@89 $generated@@88) $generated@@88)
 :pattern ( ($generated@@30 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@35 $generated@@90) (= ($generated@@78 $generated@@90) $generated@@5))
 :pattern ( ($generated@@35 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@37 $generated@@91) (= ($generated@@78 $generated@@91) $generated@@6))
 :pattern ( ($generated@@37 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@92 $generated@@93) (= ($generated@@78 $generated@@93) $generated@@7))
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@94 $generated@@95) (= ($generated@@78 $generated@@95) $generated@@8))
 :pattern ( ($generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@38 $generated@@96) (= ($generated@@78 $generated@@96) $generated@@9))
 :pattern ( ($generated@@38 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 ($generated@@49 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@49 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@35 $generated@@100) (= $generated@@100 $generated@@79))
 :pattern ( ($generated@@35 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@38 $generated@@101) (= $generated@@101 $generated@@80))
 :pattern ( ($generated@@38 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@37 $generated@@103) (exists (($generated@@104 T@U) ) (= $generated@@103 ($generated@@102 $generated@@104))))
 :pattern ( ($generated@@37 $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@92 $generated@@106) (exists (($generated@@107 T@U) ) (= $generated@@106 ($generated@@105 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@94 $generated@@109) (exists (($generated@@110 T@U) ) (= $generated@@109 ($generated@@108 $generated@@110))))
 :pattern ( ($generated@@94 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@33 $generated@@46 ($generated@@102 $generated@@111) $generated@@47) ($generated@@33 $generated@@31 $generated@@111 $generated@@34))
 :pattern ( ($generated@@33 $generated@@46 ($generated@@102 $generated@@111) $generated@@47))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@33 $generated@@46 ($generated@@105 $generated@@112) $generated@@47) ($generated@@33 $generated@@31 $generated@@112 $generated@@34))
 :pattern ( ($generated@@33 $generated@@46 ($generated@@105 $generated@@112) $generated@@47))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@33 $generated@@46 ($generated@@108 $generated@@113) $generated@@47) ($generated@@33 $generated@@31 $generated@@113 $generated@@34))
 :pattern ( ($generated@@33 $generated@@46 ($generated@@108 $generated@@113) $generated@@47))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@33 $generated@@31 $generated@@114 $generated@@34)  (and ($generated@@33 $generated@@31 $generated@@114 $generated@@45) (or (not (= $generated@@114 $generated@@43)) (not true))))
 :pattern ( ($generated@@33 $generated@@31 $generated@@114 $generated@@34))
 :pattern ( ($generated@@33 $generated@@31 $generated@@114 $generated@@45))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@54 $generated@@116) (= ($generated@@55 $generated@@46 ($generated@@102 $generated@@115) $generated@@47 $generated@@116) ($generated@@55 $generated@@31 $generated@@115 $generated@@34 $generated@@116)))
 :pattern ( ($generated@@55 $generated@@46 ($generated@@102 $generated@@115) $generated@@47 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@54 $generated@@118) (= ($generated@@55 $generated@@46 ($generated@@105 $generated@@117) $generated@@47 $generated@@118) ($generated@@55 $generated@@31 $generated@@117 $generated@@34 $generated@@118)))
 :pattern ( ($generated@@55 $generated@@46 ($generated@@105 $generated@@117) $generated@@47 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@54 $generated@@120) (= ($generated@@55 $generated@@46 ($generated@@108 $generated@@119) $generated@@47 $generated@@120) ($generated@@55 $generated@@31 $generated@@119 $generated@@34 $generated@@120)))
 :pattern ( ($generated@@55 $generated@@46 ($generated@@108 $generated@@119) $generated@@47 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@78 ($generated@@102 $generated@@121)) $generated@@6)
 :pattern ( ($generated@@102 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@39 ($generated@@102 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@102 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@78 ($generated@@105 $generated@@123)) $generated@@7)
 :pattern ( ($generated@@105 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@39 ($generated@@105 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@105 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@78 ($generated@@108 $generated@@125)) $generated@@8)
 :pattern ( ($generated@@108 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@108 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@108 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@49 $generated@@129 ($generated@@97 $generated@@129 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@97 $generated@@129 $generated@@128))
)))
(assert  (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@130 $generated@@133 $generated@@134 $generated@@135 ($generated@@132 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@138 $generated@@139) $generated@@136)
 :weight 0
)) (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@130 $generated@@140 $generated@@141 $generated@@142 ($generated@@132 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@130 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@155 $generated@@157) (= ($generated@@130 $generated@@149 $generated@@150 $generated@@151 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@130 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 Bool) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@17 ($generated@@130 $generated@@31 $generated@@51 $generated@@13 ($generated@@131 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))  (=> (and (or (not (= $generated@@162 $generated@@158)) (not true)) ($generated@@17 ($generated@@49 $generated@@13 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@31 ($generated@@53 $generated@@51 $generated@@52) $generated@@159 $generated@@162) $generated@@160)))) $generated@@161))
 :pattern ( ($generated@@130 $generated@@31 $generated@@51 $generated@@13 ($generated@@131 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))
)))
(assert (= ($generated@@42 $generated@@34) $generated@@2))
(assert (= ($generated@@164 $generated@@34) $generated@@10))
(assert (= ($generated@@42 $generated@@47) $generated@@3))
(assert (= ($generated@@164 $generated@@47) $generated@@11))
(assert (= ($generated@@42 $generated@@45) $generated@@4))
(assert (= ($generated@@164 $generated@@45) $generated@@10))
(assert (= $generated@@79 ($generated@@30 $generated@@46 $generated@@79)))
(assert (= $generated@@80 ($generated@@30 $generated@@46 $generated@@80)))
(assert (forall (($generated@@165 T@U) ) (!  (=> ($generated@@33 $generated@@46 $generated@@165 $generated@@47) (or (or (or (or ($generated@@35 $generated@@165) ($generated@@37 $generated@@165)) ($generated@@92 $generated@@165)) ($generated@@94 $generated@@165)) ($generated@@38 $generated@@165)))
 :pattern ( ($generated@@38 $generated@@165) ($generated@@33 $generated@@46 $generated@@165 $generated@@47))
 :pattern ( ($generated@@94 $generated@@165) ($generated@@33 $generated@@46 $generated@@165 $generated@@47))
 :pattern ( ($generated@@92 $generated@@165) ($generated@@33 $generated@@46 $generated@@165 $generated@@47))
 :pattern ( ($generated@@37 $generated@@165) ($generated@@33 $generated@@46 $generated@@165 $generated@@47))
 :pattern ( ($generated@@35 $generated@@165) ($generated@@33 $generated@@46 $generated@@165 $generated@@47))
)))
(assert  (=> (<= 3 $generated@@28) (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (or ($generated@@32 $generated@@166 $generated@@167) (and (< 3 $generated@@28) (and ($generated@@33 $generated@@31 $generated@@166 $generated@@34) ($generated@@33 $generated@@31 $generated@@167 $generated@@34)))) (= ($generated@@29 $generated@@166 $generated@@167) (ite ($generated@@35 ($generated@@36 $generated@@167)) true (ite ($generated@@37 ($generated@@36 $generated@@166))  (or ($generated@@38 ($generated@@36 $generated@@167)) (and ($generated@@37 ($generated@@36 $generated@@167)) (= ($generated@@39 ($generated@@36 $generated@@167)) ($generated@@39 ($generated@@36 $generated@@166))))) (ite ($generated@@38 ($generated@@36 $generated@@166))  (or ($generated@@38 ($generated@@36 $generated@@167)) (and ($generated@@37 ($generated@@36 $generated@@167)) (= ($generated@@39 ($generated@@36 $generated@@167)) $generated@@166))) false)))))
 :pattern ( ($generated@@29 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and ($generated@@54 $generated@@169) (and ($generated@@37 $generated@@168) ($generated@@55 $generated@@46 $generated@@168 $generated@@47 $generated@@169))) ($generated@@55 $generated@@31 ($generated@@39 $generated@@168) $generated@@34 $generated@@169))
 :pattern ( ($generated@@55 $generated@@31 ($generated@@39 $generated@@168) $generated@@34 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and ($generated@@54 $generated@@171) (and ($generated@@92 $generated@@170) ($generated@@55 $generated@@46 $generated@@170 $generated@@47 $generated@@171))) ($generated@@55 $generated@@31 ($generated@@39 $generated@@170) $generated@@34 $generated@@171))
 :pattern ( ($generated@@55 $generated@@31 ($generated@@39 $generated@@170) $generated@@34 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@54 $generated@@173) (and ($generated@@94 $generated@@172) ($generated@@55 $generated@@46 $generated@@172 $generated@@47 $generated@@173))) ($generated@@55 $generated@@31 ($generated@@126 $generated@@172) $generated@@34 $generated@@173))
 :pattern ( ($generated@@55 $generated@@31 ($generated@@126 $generated@@172) $generated@@34 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@102 ($generated@@30 $generated@@31 $generated@@174)) ($generated@@30 $generated@@46 ($generated@@102 $generated@@174)))
 :pattern ( ($generated@@102 ($generated@@30 $generated@@31 $generated@@174)))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@105 ($generated@@30 $generated@@31 $generated@@175)) ($generated@@30 $generated@@46 ($generated@@105 $generated@@175)))
 :pattern ( ($generated@@105 ($generated@@30 $generated@@31 $generated@@175)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@108 ($generated@@30 $generated@@31 $generated@@176)) ($generated@@30 $generated@@46 ($generated@@108 $generated@@176)))
 :pattern ( ($generated@@108 ($generated@@30 $generated@@31 $generated@@176)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@97 $generated@@178 ($generated@@30 $generated@@178 $generated@@177)) ($generated@@30 $generated@@52 ($generated@@97 $generated@@178 $generated@@177)))
 :pattern ( ($generated@@97 $generated@@178 ($generated@@30 $generated@@178 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! ($generated@@55 $generated@@13 $generated@@180 $generated $generated@@179)
 :pattern ( ($generated@@55 $generated@@13 $generated@@180 $generated $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (! ($generated@@33 $generated@@13 $generated@@181 $generated)
 :pattern ( ($generated@@33 $generated@@13 $generated@@181 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@187 true))
(let (($generated@@188  (=> (and (not ($generated@@37 ($generated@@36 $generated@@182))) (= (ControlFlow 0 23) 16)) $generated@@187)))
(let (($generated@@189  (=> ($generated@@37 ($generated@@36 $generated@@182)) (and (=> (= (ControlFlow 0 18) (- 0 22)) (or (not (= $generated@@182 $generated@@43)) (not true))) (=> (or (not (= $generated@@182 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 18) (- 0 21)) (or ($generated@@37 ($generated@@36 $generated@@182)) ($generated@@92 ($generated@@36 $generated@@182)))) (=> (or ($generated@@37 ($generated@@36 $generated@@182)) ($generated@@92 ($generated@@36 $generated@@182))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (or (not (= $generated@@183 $generated@@43)) (not true))) (=> (or (not (= $generated@@183 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (or ($generated@@37 ($generated@@36 $generated@@183)) ($generated@@92 ($generated@@36 $generated@@183)))) (=> (or ($generated@@37 ($generated@@36 $generated@@183)) ($generated@@92 ($generated@@36 $generated@@183))) (=> (= (ControlFlow 0 18) 16) $generated@@187))))))))))))
(let (($generated@@190  (=> (not ($generated@@38 ($generated@@36 $generated@@182))) (and (=> (= (ControlFlow 0 24) (- 0 25)) (or (not (= $generated@@182 $generated@@43)) (not true))) (=> (or (not (= $generated@@182 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 24) 18) $generated@@189) (=> (= (ControlFlow 0 24) 23) $generated@@188)))))))
(let (($generated@@191  (=> (and ($generated@@38 ($generated@@36 $generated@@182)) (= (ControlFlow 0 17) 16)) $generated@@187)))
(let (($generated@@192  (=> ($generated@@37 ($generated@@36 $generated@@183)) (and (=> (= (ControlFlow 0 26) (- 0 27)) (or (not (= $generated@@182 $generated@@43)) (not true))) (=> (or (not (= $generated@@182 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 26) 24) $generated@@190) (=> (= (ControlFlow 0 26) 17) $generated@@191)))))))
(let (($generated@@193 true))
(let (($generated@@194  (=> (and (not ($generated@@37 ($generated@@36 $generated@@182))) (= (ControlFlow 0 9) 4)) $generated@@193)))
(let (($generated@@195  (=> ($generated@@37 ($generated@@36 $generated@@182)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (not (= $generated@@182 $generated@@43)) (not true))) (=> (or (not (= $generated@@182 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or ($generated@@37 ($generated@@36 $generated@@182)) ($generated@@92 ($generated@@36 $generated@@182)))) (=> (or ($generated@@37 ($generated@@36 $generated@@182)) ($generated@@92 ($generated@@36 $generated@@182))) (=> (= (ControlFlow 0 6) 4) $generated@@193))))))))
(let (($generated@@196  (=> (not ($generated@@38 ($generated@@36 $generated@@182))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (not (= $generated@@182 $generated@@43)) (not true))) (=> (or (not (= $generated@@182 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 10) 6) $generated@@195) (=> (= (ControlFlow 0 10) 9) $generated@@194)))))))
(let (($generated@@197  (=> (and ($generated@@38 ($generated@@36 $generated@@182)) (= (ControlFlow 0 5) 4)) $generated@@193)))
(let (($generated@@198  (=> ($generated@@38 ($generated@@36 $generated@@183)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (or (not (= $generated@@182 $generated@@43)) (not true))) (=> (or (not (= $generated@@182 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 12) 10) $generated@@196) (=> (= (ControlFlow 0 12) 5) $generated@@197)))))))
(let (($generated@@199 true))
(let (($generated@@200  (=> (not ($generated@@37 ($generated@@36 $generated@@183))) (and (=> (= (ControlFlow 0 14) (- 0 15)) (or (not (= $generated@@183 $generated@@43)) (not true))) (=> (or (not (= $generated@@183 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 14) 12) $generated@@198) (=> (= (ControlFlow 0 14) 3) $generated@@199)))))))
(let (($generated@@201  (=> (not ($generated@@35 ($generated@@36 $generated@@182))) (and (=> (= (ControlFlow 0 28) (- 0 29)) (or (not (= $generated@@183 $generated@@43)) (not true))) (=> (or (not (= $generated@@183 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 28) 26) $generated@@192) (=> (= (ControlFlow 0 28) 14) $generated@@200)))))))
(let (($generated@@202 true))
(let (($generated@@203  (and (=> (= (ControlFlow 0 30) (- 0 31)) (or (not (= $generated@@182 $generated@@43)) (not true))) (=> (or (not (= $generated@@182 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 30) 2) $generated@@202) (=> (= (ControlFlow 0 30) 28) $generated@@201))))))
(let (($generated@@204 true))
(let (($generated@@205  (=> (= $generated@@184 ($generated@@131 $generated@@43 $generated@@185 $generated@@1 false)) (and (=> (= (ControlFlow 0 32) 1) $generated@@204) (=> (= (ControlFlow 0 32) 30) $generated@@203)))))
(let (($generated@@206  (=> (and ($generated@@54 $generated@@185) ($generated@@186 $generated@@185)) (=> (and (and ($generated@@33 $generated@@31 $generated@@183 $generated@@34) ($generated@@33 $generated@@31 $generated@@182 $generated@@34)) (and (= 3 $generated@@28) (= (ControlFlow 0 33) 32))) $generated@@205))))
$generated@@206)))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
