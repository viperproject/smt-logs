(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@T T@T) T@T)
(declare-fun $generated@@42 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@U) Bool)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) 0))
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@6 $generated@@25) 3))
(assert (forall (($generated@@29 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@29 $generated@@26)  (or (= $generated@@29 $generated@@27) (= ($generated@@28 $generated@@29) $generated@@26)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@29 $generated@@26))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@30 $generated@@25 $generated@@32 $generated@@31 $generated@@33) ($generated@@30 $generated@@25 $generated@@32 $generated@@26 $generated@@33))
 :pattern ( ($generated@@30 $generated@@25 $generated@@32 $generated@@31 $generated@@33))
 :pattern ( ($generated@@30 $generated@@25 $generated@@32 $generated@@26 $generated@@33))
)))
(assert (= ($generated@@22 $generated@@34) 0))
(assert (= ($generated@@35 $generated@@2 $generated@@5) $generated@@34))
(assert  (not ($generated@@36 $generated@@34)))
(assert  (and (and (and (and (and (and (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@38 $generated@@45 $generated@@46 ($generated@@42 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@49) $generated@@47)
 :weight 0
)) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (or (= $generated@@54 $generated@@55) (= ($generated@@38 $generated@@50 $generated@@51 ($generated@@42 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@55) ($generated@@38 $generated@@50 $generated@@51 $generated@@53 $generated@@55)))
 :weight 0
))) (= ($generated@@6 $generated@@39) 4)) (= ($generated@@6 $generated@@40) 5)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (= ($generated@@6 ($generated@@41 $generated@@56 $generated@@57)) 6))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@43 ($generated@@41 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@41 $generated@@58 $generated@@59))
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@44 ($generated@@41 $generated@@60 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@41 $generated@@60 $generated@@61))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@30 $generated@@25 $generated@@62 $generated@@26 $generated@@63)  (or (= $generated@@62 $generated@@27) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@63 $generated@@62) $generated)))))
 :pattern ( ($generated@@30 $generated@@25 $generated@@62 $generated@@26 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> ($generated@@64 $generated@@65 $generated@@66) (forall (($generated@@67 T@U) ) (!  (=> ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@65 $generated@@67) $generated))) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@66 $generated@@67) $generated))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@66 $generated@@67) $generated))
)))
 :pattern ( ($generated@@64 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 ($generated@@37 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@37 $generated@@70 $generated@@69))
)))
(assert ($generated@@36 $generated))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@T) ) (!  (=> ($generated@@64 $generated@@71 $generated@@72) (=> ($generated@@30 $generated@@75 $generated@@73 $generated@@74 $generated@@71) ($generated@@30 $generated@@75 $generated@@73 $generated@@74 $generated@@72)))
 :pattern ( ($generated@@64 $generated@@71 $generated@@72) ($generated@@30 $generated@@75 $generated@@73 $generated@@74 $generated@@71))
)))
(assert  (and (forall (($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@76 $generated@@79 $generated@@80 $generated@@81 ($generated@@78 $generated@@79 $generated@@80 $generated@@81 $generated@@83 $generated@@84 $generated@@85 $generated@@82) $generated@@84 $generated@@85) $generated@@82)
 :weight 0
)) (and (forall (($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (or (= $generated@@91 $generated@@93) (= ($generated@@76 $generated@@86 $generated@@87 $generated@@88 ($generated@@78 $generated@@86 $generated@@87 $generated@@88 $generated@@90 $generated@@91 $generated@@92 $generated@@89) $generated@@93 $generated@@94) ($generated@@76 $generated@@86 $generated@@87 $generated@@88 $generated@@90 $generated@@93 $generated@@94)))
 :weight 0
)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (or (= $generated@@101 $generated@@103) (= ($generated@@76 $generated@@95 $generated@@96 $generated@@97 ($generated@@78 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@100 $generated@@101 $generated@@98) $generated@@102 $generated@@103) ($generated@@76 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@102 $generated@@103)))
 :weight 0
)))))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@11 ($generated@@76 $generated@@25 $generated@@39 $generated@@7 ($generated@@77 $generated@@104 $generated@@105 $generated@@106 $generated@@107) $generated@@108 $generated@@109))  (=> (and (or (not (= $generated@@108 $generated@@104)) (not true)) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@105 $generated@@108) $generated@@106)))) (= $generated@@108 $generated@@107)))
 :pattern ( ($generated@@76 $generated@@25 $generated@@39 $generated@@7 ($generated@@77 $generated@@104 $generated@@105 $generated@@106 $generated@@107) $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (and ($generated@@110 $generated@@111) (and (or (not (= $generated@@112 $generated@@27)) (not true)) (= ($generated@@28 $generated@@112) $generated@@26))) ($generated@@24 $generated@@25 ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@111 $generated@@112) $generated@@34)) $generated@@26))
 :pattern ( ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@111 $generated@@112) $generated@@34)))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@113 $generated@@31)  (and ($generated@@24 $generated@@25 $generated@@113 $generated@@26) (or (not (= $generated@@113 $generated@@27)) (not true))))
 :pattern ( ($generated@@24 $generated@@25 $generated@@113 $generated@@31))
 :pattern ( ($generated@@24 $generated@@25 $generated@@113 $generated@@26))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and (and ($generated@@110 $generated@@114) (and (or (not (= $generated@@115 $generated@@27)) (not true)) (= ($generated@@28 $generated@@115) $generated@@26))) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@114 $generated@@115) $generated)))) ($generated@@30 $generated@@25 ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@114 $generated@@115) $generated@@34)) $generated@@26 $generated@@114))
 :pattern ( ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@114 $generated@@115) $generated@@34)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or (not (= $generated@@116 $generated@@118)) (not true)) (=> (and ($generated@@64 $generated@@116 $generated@@117) ($generated@@64 $generated@@117 $generated@@118)) ($generated@@64 $generated@@116 $generated@@118)))
 :pattern ( ($generated@@64 $generated@@116 $generated@@117) ($generated@@64 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (and (= ($generated@@119 ($generated@@35 $generated@@120 $generated@@121)) $generated@@120) (= ($generated@@23 ($generated@@35 $generated@@120 $generated@@121)) $generated@@121))
 :pattern ( ($generated@@35 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@37 $generated@@123 ($generated@@68 $generated@@123 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@68 $generated@@123 $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 Bool) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@11 ($generated@@76 $generated@@25 $generated@@39 $generated@@7 ($generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))  (=> (and (or (not (= $generated@@129 $generated@@125)) (not true)) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@126 $generated@@129) $generated@@127)))) $generated@@128))
 :pattern ( ($generated@@76 $generated@@25 $generated@@39 $generated@@7 ($generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> ($generated@@110 ($generated@@42 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@131 $generated@@132 ($generated@@42 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@131 $generated@@132) $generated@@133 $generated@@134))) ($generated@@64 $generated@@131 ($generated@@42 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@131 $generated@@132 ($generated@@42 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@131 $generated@@132) $generated@@133 $generated@@134))))
 :pattern ( ($generated@@42 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@131 $generated@@132 ($generated@@42 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@131 $generated@@132) $generated@@133 $generated@@134)))
)))
(assert (= ($generated@@135 $generated@@26) $generated@@1))
(assert (= ($generated@@136 $generated@@26) $generated@@4))
(assert (= ($generated@@135 $generated@@31) $generated@@3))
(assert (= ($generated@@136 $generated@@31) $generated@@4))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@146 true))
(let (($generated@@147  (=> (and (or (not (= $generated@@137 $generated@@27)) (not true)) (or (not (= ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@138 $generated@@137) $generated@@34)) $generated@@27)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@137 $generated@@27)) (not true))) (=> (or (not (= $generated@@137 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@138 $generated@@137) $generated@@34)) $generated@@27)) (not true))) (=> (or (not (= ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@138 $generated@@137) $generated@@34)) $generated@@27)) (not true)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@11 ($generated@@76 $generated@@25 $generated@@39 $generated@@7 $generated@@139 ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@138 $generated@@137) $generated@@34)) $generated@@34))))))))))
(let (($generated@@148  (and (=> (= (ControlFlow 0 6) 2) $generated@@147) (=> (= (ControlFlow 0 6) 5) $generated@@146))))
(let (($generated@@149  (=> (and (= $generated@@137 $generated@@27) (= (ControlFlow 0 9) 6)) $generated@@148)))
(let (($generated@@150  (=> (or (not (= $generated@@137 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (not (= $generated@@137 $generated@@27)) (not true))) (=> (or (not (= $generated@@137 $generated@@27)) (not true)) (=> (= (ControlFlow 0 7) 6) $generated@@148))))))
(let (($generated@@151  (=> (= $generated@@140 ($generated@@124 $generated@@27 $generated@@141 $generated false)) (=> (and (and ($generated@@24 $generated@@25 $generated@@142 $generated@@26) ($generated@@30 $generated@@25 $generated@@142 $generated@@26 $generated@@141)) (and ($generated@@110 $generated@@138) ($generated@@143 $generated@@138))) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@137 $generated@@26) ($generated@@30 $generated@@25 $generated@@137 $generated@@26 $generated@@138)) (or (= $generated@@137 $generated@@27) (and (and (or (not (= $generated@@137 $generated@@27)) (not true)) (not ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@141 $generated@@137) $generated))))) (or (= ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@138 $generated@@137) $generated@@34)) $generated@@27) (and (or (not (= ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@138 $generated@@137) $generated@@34)) $generated@@27)) (not true)) (not ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@141 ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@138 $generated@@137) $generated@@34))) $generated))))))))) (and (forall (($generated@@152 T@U) ) (!  (=> (and (or (not (= $generated@@152 $generated@@27)) (not true)) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@141 $generated@@152) $generated)))) (= ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@138 $generated@@152) ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@141 $generated@@152)))
 :pattern ( ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@138 $generated@@152))
)) ($generated@@64 $generated@@141 $generated@@138))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (not (= $generated@@137 $generated@@27)) (not true))) (=> (or (not (= $generated@@137 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (forall (($generated@@153 T@U) ($generated@@154 T@U) )  (=> (and (and (or (not (= $generated@@153 $generated@@27)) (not true)) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@138 $generated@@153) $generated)))) (= $generated@@153 ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@138 $generated@@137) $generated@@34)))) ($generated@@11 ($generated@@76 $generated@@25 $generated@@39 $generated@@7 $generated@@140 $generated@@153 $generated@@154))))) (=> (forall (($generated@@155 T@U) ($generated@@156 T@U) )  (=> (and (and (or (not (= $generated@@155 $generated@@27)) (not true)) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@138 $generated@@155) $generated)))) (= $generated@@155 ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@138 $generated@@137) $generated@@34)))) ($generated@@11 ($generated@@76 $generated@@25 $generated@@39 $generated@@7 $generated@@140 $generated@@155 $generated@@156)))) (=> (= $generated@@139 ($generated@@77 $generated@@27 $generated@@138 $generated ($generated@@37 $generated@@25 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@25 ($generated@@41 $generated@@39 $generated@@40) $generated@@138 $generated@@137) $generated@@34)))) (and (=> (= (ControlFlow 0 10) 7) $generated@@150) (=> (= (ControlFlow 0 10) 9) $generated@@149))))))))))))
(let (($generated@@157  (=> (and ($generated@@110 $generated@@141) ($generated@@143 $generated@@141)) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@144 $generated@@26) ($generated@@30 $generated@@25 $generated@@144 $generated@@26 $generated@@141)) true) (and (= 2 $generated@@145) (= (ControlFlow 0 13) 10))) $generated@@151))))
$generated@@157))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 10) (- 12))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
