(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@U Int) T@U)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@29 (Int) Int)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@U Int) T@U)
(declare-fun $generated@@42 (T@U Int) T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@82 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@86 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@20 $generated@@21) 0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 Int) ) (!  (=> (and (<= 0 $generated@@26) (<= $generated@@26 ($generated@@20 $generated@@24))) (= ($generated@@22 ($generated@@23 $generated@@24 $generated@@25) $generated@@26) ($generated@@23 ($generated@@22 $generated@@24 $generated@@26) $generated@@25)))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@24 $generated@@25) $generated@@26))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 Int) ) (!  (=> (= $generated@@28 0) (= ($generated@@22 $generated@@27 $generated@@28) $generated@@27))
 :pattern ( ($generated@@22 $generated@@27 $generated@@28))
)))
(assert (forall (($generated@@30 Int) ) (! (= ($generated@@29 $generated@@30) $generated@@30)
 :pattern ( ($generated@@29 $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@T) ) (! (= ($generated@@31 $generated@@33 $generated@@32) $generated@@32)
 :pattern ( ($generated@@31 $generated@@33 $generated@@32))
)))
(assert (= ($generated@@3 $generated@@35) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (and ($generated@@34 $generated@@35 $generated@@38 ($generated@@36 $generated@@40)) ($generated@@37 $generated@@39 $generated@@40)) ($generated@@34 $generated@@35 ($generated@@23 $generated@@38 $generated@@39) ($generated@@36 $generated@@40)))
 :pattern ( ($generated@@34 $generated@@35 ($generated@@23 $generated@@38 $generated@@39) ($generated@@36 $generated@@40)))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 Int) ($generated@@45 Int) ) (!  (=> (and (and (<= 0 $generated@@45) (< $generated@@45 $generated@@44)) (< $generated@@45 ($generated@@20 $generated@@43))) (= ($generated@@41 ($generated@@42 $generated@@43 $generated@@44) $generated@@45) ($generated@@41 $generated@@43 $generated@@45)))
 :weight 25
 :pattern ( ($generated@@41 ($generated@@42 $generated@@43 $generated@@44) $generated@@45))
 :pattern ( ($generated@@41 $generated@@43 $generated@@45) ($generated@@42 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 Int) ) (!  (=> (and (<= 0 $generated@@47) (<= $generated@@47 ($generated@@20 $generated@@46))) (= ($generated@@20 ($generated@@22 $generated@@46 $generated@@47)) (- ($generated@@20 $generated@@46) $generated@@47)))
 :pattern ( ($generated@@20 ($generated@@22 $generated@@46 $generated@@47)))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 ($generated@@48 $generated@@51 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@48 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@20 ($generated@@23 $generated@@52 $generated@@53)) (+ 1 ($generated@@20 $generated@@52)))
 :pattern ( ($generated@@23 $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@54 ($generated@@49 $generated@@59 $generated@@56) $generated@@57 $generated@@58) ($generated@@55 $generated@@59 $generated@@56 $generated@@57 $generated@@58))
 :pattern ( ($generated@@54 ($generated@@49 $generated@@59 $generated@@56) $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 Int) ($generated@@62 Int) ) (!  (=> (and (and (<= 0 $generated@@61) (<= 0 $generated@@62)) (< $generated@@62 (- ($generated@@20 $generated@@60) $generated@@61))) (= ($generated@@41 ($generated@@22 $generated@@60 $generated@@61) $generated@@62) ($generated@@41 $generated@@60 (+ $generated@@62 $generated@@61))))
 :weight 25
 :pattern ( ($generated@@41 ($generated@@22 $generated@@60 $generated@@61) $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 Int) ($generated@@65 T@U) ) (!  (and (=> (= $generated@@64 ($generated@@20 $generated@@63)) (= ($generated@@41 ($generated@@23 $generated@@63 $generated@@65) $generated@@64) $generated@@65)) (=> (or (not (= $generated@@64 ($generated@@20 $generated@@63))) (not true)) (= ($generated@@41 ($generated@@23 $generated@@63 $generated@@65) $generated@@64) ($generated@@41 $generated@@63 $generated@@64))))
 :pattern ( ($generated@@41 ($generated@@23 $generated@@63 $generated@@65) $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 Int) ) (!  (=> (and (<= 0 $generated@@67) (<= $generated@@67 ($generated@@20 $generated@@66))) (= ($generated@@20 ($generated@@42 $generated@@66 $generated@@67)) $generated@@67))
 :pattern ( ($generated@@20 ($generated@@42 $generated@@66 $generated@@67)))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@37 $generated@@68 $generated) (and (= ($generated@@49 $generated@@5 ($generated@@48 $generated@@5 $generated@@68)) $generated@@68) ($generated@@34 $generated@@5 ($generated@@48 $generated@@5 $generated@@68) $generated)))
 :pattern ( ($generated@@37 $generated@@68 $generated))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@37 ($generated@@49 $generated@@71 $generated@@69) $generated@@70) ($generated@@34 $generated@@71 $generated@@69 $generated@@70))
 :pattern ( ($generated@@37 ($generated@@49 $generated@@71 $generated@@69) $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (! (<= 0 ($generated@@20 $generated@@72))
 :pattern ( ($generated@@20 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@55 $generated@@35 $generated@@73 ($generated@@36 $generated@@74) $generated@@75) (forall (($generated@@76 Int) ) (!  (=> (and (<= 0 $generated@@76) (< $generated@@76 ($generated@@20 $generated@@73))) ($generated@@54 ($generated@@41 $generated@@73 $generated@@76) $generated@@74 $generated@@75))
 :pattern ( ($generated@@41 $generated@@73 $generated@@76))
)))
 :pattern ( ($generated@@55 $generated@@35 $generated@@73 ($generated@@36 $generated@@74) $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@77 ($generated@@36 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@36 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@19 ($generated@@36 $generated@@79)) $generated@@1)
 :pattern ( ($generated@@36 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@48 $generated@@81 ($generated@@49 $generated@@81 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@49 $generated@@81 $generated@@80))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@82 $generated@@93 $generated@@94 $generated@@95 ($generated@@89 $generated@@93 $generated@@94 $generated@@95 $generated@@97 $generated@@98 $generated@@99 $generated@@96) $generated@@98 $generated@@99) $generated@@96)
 :weight 0
)) (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@105 $generated@@107) (= ($generated@@82 $generated@@100 $generated@@101 $generated@@102 ($generated@@89 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@107 $generated@@108) ($generated@@82 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@107 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@82 $generated@@109 $generated@@110 $generated@@111 ($generated@@89 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@82 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)))) (= ($generated@@3 $generated@@83) 4)) (= ($generated@@3 $generated@@84) 5)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@86 $generated@@118 $generated@@119 ($generated@@90 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@120) $generated@@122) $generated@@120)
 :weight 0
))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@86 $generated@@123 $generated@@124 ($generated@@90 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@86 $generated@@123 $generated@@124 $generated@@126 $generated@@128)))
 :weight 0
))) (= ($generated@@3 $generated@@87) 6)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (= ($generated@@3 ($generated@@88 $generated@@129 $generated@@130)) 7))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@131 $generated@@132)) $generated@@131)
 :pattern ( ($generated@@88 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@133 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@88 $generated@@133 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Bool) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@8 ($generated@@82 $generated@@83 $generated@@84 $generated@@4 ($generated@@85 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))  (=> (and (or (not (= $generated@@139 $generated@@135)) (not true)) ($generated@@8 ($generated@@48 $generated@@4 ($generated@@86 $generated@@84 $generated@@87 ($generated@@86 $generated@@83 ($generated@@88 $generated@@84 $generated@@87) $generated@@136 $generated@@139) $generated@@137)))) $generated@@138))
 :pattern ( ($generated@@82 $generated@@83 $generated@@84 $generated@@4 ($generated@@85 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (and (= ($generated@@141 ($generated@@23 $generated@@143 $generated@@144)) $generated@@143) (= ($generated@@142 ($generated@@23 $generated@@143 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@23 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> ($generated@@37 $generated@@145 ($generated@@36 $generated@@146)) (and (= ($generated@@49 $generated@@35 ($generated@@48 $generated@@35 $generated@@145)) $generated@@145) ($generated@@34 $generated@@35 ($generated@@48 $generated@@35 $generated@@145) ($generated@@36 $generated@@146))))
 :pattern ( ($generated@@37 $generated@@145 ($generated@@36 $generated@@146)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 Int) ($generated@@149 Int) ) (!  (=> (and (and (<= 0 $generated@@148) (<= $generated@@148 $generated@@149)) (< $generated@@149 ($generated@@20 $generated@@147))) (= ($generated@@41 ($generated@@22 $generated@@147 $generated@@148) (- $generated@@149 $generated@@148)) ($generated@@41 $generated@@147 $generated@@149)))
 :weight 25
 :pattern ( ($generated@@41 $generated@@147 $generated@@149) ($generated@@22 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 Int) ($generated@@152 Int) ) (!  (=> (and (and (<= 0 $generated@@151) (<= 0 $generated@@152)) (<= (+ $generated@@151 $generated@@152) ($generated@@20 $generated@@150))) (= ($generated@@22 ($generated@@22 $generated@@150 $generated@@151) $generated@@152) ($generated@@22 $generated@@150 (+ $generated@@151 $generated@@152))))
 :pattern ( ($generated@@22 ($generated@@22 $generated@@150 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@153 Int) ) (! (= ($generated@@49 $generated@@5 ($generated@@9 ($generated@@29 $generated@@153))) ($generated@@31 $generated@@87 ($generated@@49 $generated@@5 ($generated@@9 $generated@@153))))
 :pattern ( ($generated@@49 $generated@@5 ($generated@@9 ($generated@@29 $generated@@153))))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@49 $generated@@155 ($generated@@31 $generated@@155 $generated@@154)) ($generated@@31 $generated@@87 ($generated@@49 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@49 $generated@@155 ($generated@@31 $generated@@155 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= ($generated@@20 $generated@@156) 0) (= $generated@@156 $generated@@21))
 :pattern ( ($generated@@20 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 Int) ) (!  (=> (= $generated@@158 0) (= ($generated@@42 $generated@@157 $generated@@158) $generated@@21))
 :pattern ( ($generated@@42 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! ($generated@@55 $generated@@5 $generated@@160 $generated $generated@@159)
 :pattern ( ($generated@@55 $generated@@5 $generated@@160 $generated $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@161 ($generated@@36 $generated@@162)) (forall (($generated@@163 Int) ) (!  (=> (and (<= 0 $generated@@163) (< $generated@@163 ($generated@@20 $generated@@161))) ($generated@@37 ($generated@@41 $generated@@161 $generated@@163) $generated@@162))
 :pattern ( ($generated@@41 $generated@@161 $generated@@163))
)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@161 ($generated@@36 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ) (! ($generated@@34 $generated@@5 $generated@@164 $generated)
 :pattern ( ($generated@@34 $generated@@5 $generated@@164 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@179  (=> (and (= $generated@@165 ($generated@@85 $generated@@166 $generated@@167 $generated@@2 false)) (= $generated@@168 ($generated@@31 $generated@@35 ($generated@@23 ($generated@@23 ($generated@@23 $generated@@21 ($generated@@49 $generated@@5 ($generated@@9 ($generated@@29 1)))) ($generated@@49 $generated@@5 ($generated@@9 ($generated@@29 2)))) ($generated@@49 $generated@@5 ($generated@@9 ($generated@@29 3))))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= 0 ($generated@@29 0)) (<= ($generated@@29 0) ($generated@@20 $generated@@168)))) (=> (and (<= 0 ($generated@@29 0)) (<= ($generated@@29 0) ($generated@@20 $generated@@168))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@29 0) ($generated@@29 2)) (<= ($generated@@29 2) ($generated@@20 $generated@@168)))) (=> (and (<= ($generated@@29 0) ($generated@@29 2)) (<= ($generated@@29 2) ($generated@@20 $generated@@168))) (=> (= $generated@@169 ($generated@@22 ($generated@@42 $generated@@168 ($generated@@29 2)) ($generated@@29 0))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 ($generated@@29 1)) (<= ($generated@@29 1) ($generated@@20 $generated@@168)))) (=> (and (<= 0 ($generated@@29 1)) (<= ($generated@@29 1) ($generated@@20 $generated@@168))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@29 1) ($generated@@29 3)) (<= ($generated@@29 3) ($generated@@20 $generated@@168)))) (=> (and (<= ($generated@@29 1) ($generated@@29 3)) (<= ($generated@@29 3) ($generated@@20 $generated@@168))) (=> (= $generated@@170 ($generated@@22 ($generated@@42 $generated@@168 ($generated@@29 3)) ($generated@@29 1))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@29 1)) (<= ($generated@@29 1) ($generated@@20 $generated@@168)))) (=> (and (<= 0 ($generated@@29 1)) (<= ($generated@@29 1) ($generated@@20 $generated@@168))) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= ($generated@@29 1) ($generated@@29 1)) (<= ($generated@@29 1) ($generated@@20 $generated@@168)))))))))))))))))))
(let (($generated@@180  (=> (and ($generated@@171 $generated@@167) ($generated@@172 $generated@@167)) (=> (and (and (and ($generated@@34 $generated@@35 $generated@@173 ($generated@@36 $generated)) ($generated@@55 $generated@@35 $generated@@173 ($generated@@36 $generated) $generated@@167)) true) (and (and ($generated@@34 $generated@@35 $generated@@174 ($generated@@36 $generated)) ($generated@@55 $generated@@35 $generated@@174 ($generated@@36 $generated) $generated@@167)) true)) (=> (and (and (and (and ($generated@@34 $generated@@35 $generated@@175 ($generated@@36 $generated)) ($generated@@55 $generated@@35 $generated@@175 ($generated@@36 $generated) $generated@@167)) true) (and (and ($generated@@34 $generated@@35 $generated@@176 ($generated@@36 $generated)) ($generated@@55 $generated@@35 $generated@@176 ($generated@@36 $generated) $generated@@167)) true)) (and (and (and ($generated@@34 $generated@@35 $generated@@177 ($generated@@36 $generated)) ($generated@@55 $generated@@35 $generated@@177 ($generated@@36 $generated) $generated@@167)) true) (and (= 0 $generated@@178) (= (ControlFlow 0 8) 2)))) $generated@@179)))))
$generated@@180)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
