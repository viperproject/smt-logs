(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) Int)
(declare-fun $generated@@21 (T@U T@U Int) T@U)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@T T@T) T@T)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@62 (Int) Int)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) T@U)
(declare-fun $generated@@74 (T@U) Int)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@112 () T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 Int) ($generated@@25 T@U) ) (!  (=> (<= 0 $generated@@24) (and (=> (= $generated@@23 $generated@@25) (= ($generated@@20 ($generated@@21 $generated@@22 $generated@@23 $generated@@24) $generated@@25) $generated@@24)) (=> (or (not (= $generated@@23 $generated@@25)) (not true)) (= ($generated@@20 ($generated@@21 $generated@@22 $generated@@23 $generated@@24) $generated@@25) ($generated@@20 $generated@@22 $generated@@25)))))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@22 $generated@@23 $generated@@24) $generated@@25))
)))
(assert (= ($generated@@3 $generated@@27) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@29 $generated@@30))
 :pattern ( ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@42 T@T) ($generated@@43 T@T) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@33 $generated@@42 $generated@@43 ($generated@@39 $generated@@42 $generated@@43 $generated@@45 $generated@@46 $generated@@44) $generated@@46) $generated@@44)
 :weight 0
)) (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (or (= $generated@@51 $generated@@52) (= ($generated@@33 $generated@@47 $generated@@48 ($generated@@39 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@52) ($generated@@33 $generated@@47 $generated@@48 $generated@@50 $generated@@52)))
 :weight 0
))) (= ($generated@@3 $generated@@34) 4)) (= ($generated@@3 $generated@@35) 5)) (= ($generated@@3 $generated@@36) 6)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (= ($generated@@3 ($generated@@37 $generated@@53 $generated@@54)) 7))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@40 ($generated@@37 $generated@@55 $generated@@56)) $generated@@55)
 :pattern ( ($generated@@37 $generated@@55 $generated@@56))
))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@41 ($generated@@37 $generated@@57 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@37 $generated@@57 $generated@@58))
))))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> ($generated@@32 $generated@@59 $generated@@60) (forall (($generated@@61 T@U) ) (!  (=> ($generated@@8 ($generated@@38 $generated@@4 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@59 $generated@@61) $generated@@2))) ($generated@@8 ($generated@@38 $generated@@4 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@60 $generated@@61) $generated@@2))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@60 $generated@@61) $generated@@2))
)))
 :pattern ( ($generated@@32 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@62 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 ($generated@@38 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@38 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (or (not (= $generated@@72 $generated@@73)) (not true)) (= ($generated@@20 $generated@@71 $generated@@73) ($generated@@20 ($generated@@70 $generated@@71 $generated@@72) $generated@@73)))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72) ($generated@@20 $generated@@71 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@74 ($generated@@70 $generated@@75 $generated@@76)) (+ ($generated@@74 $generated@@75) 1))
 :pattern ( ($generated@@74 ($generated@@70 $generated@@75 $generated@@76)))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@77 ($generated@@67 $generated@@82 $generated@@79) $generated@@80 $generated@@81) ($generated@@78 $generated@@82 $generated@@79 $generated@@80 $generated@@81))
 :pattern ( ($generated@@77 ($generated@@67 $generated@@82 $generated@@79) $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> ($generated@@32 $generated@@83 $generated@@84) (=> ($generated@@77 $generated@@85 $generated@@86 $generated@@83) ($generated@@77 $generated@@85 $generated@@86 $generated@@84)))
 :pattern ( ($generated@@32 $generated@@83 $generated@@84) ($generated@@77 $generated@@85 $generated@@86 $generated@@83))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (!  (=> ($generated@@32 $generated@@87 $generated@@88) (=> ($generated@@78 $generated@@91 $generated@@89 $generated@@90 $generated@@87) ($generated@@78 $generated@@91 $generated@@89 $generated@@90 $generated@@88)))
 :pattern ( ($generated@@32 $generated@@87 $generated@@88) ($generated@@78 $generated@@91 $generated@@89 $generated@@90 $generated@@87))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@92 $generated@@93 $generated@@94) (= $generated@@93 $generated@@94))
 :pattern ( ($generated@@92 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@96 ($generated@@28 $generated@@97)) (forall (($generated@@98 T@U) ) (!  (=> (< 0 ($generated@@20 $generated@@96 $generated@@98)) ($generated@@95 $generated@@98 $generated@@97))
 :pattern ( ($generated@@20 $generated@@96 $generated@@98))
)))
 :pattern ( ($generated@@26 $generated@@27 $generated@@96 ($generated@@28 $generated@@97)))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 Int) ) (!  (=> (<= 0 $generated@@101) (= ($generated@@74 ($generated@@21 $generated@@99 $generated@@100 $generated@@101)) (+ (- ($generated@@74 $generated@@99) ($generated@@20 $generated@@99 $generated@@100)) $generated@@101)))
 :pattern ( ($generated@@74 ($generated@@21 $generated@@99 $generated@@100 $generated@@101)))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or (not (= $generated@@102 $generated@@104)) (not true)) (=> (and ($generated@@32 $generated@@102 $generated@@103) ($generated@@32 $generated@@103 $generated@@104)) ($generated@@32 $generated@@102 $generated@@104)))
 :pattern ( ($generated@@32 $generated@@102 $generated@@103) ($generated@@32 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@95 $generated@@105 $generated) (and (= ($generated@@67 $generated@@4 ($generated@@38 $generated@@4 $generated@@105)) $generated@@105) ($generated@@26 $generated@@4 ($generated@@38 $generated@@4 $generated@@105) $generated)))
 :pattern ( ($generated@@95 $generated@@105 $generated))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@95 ($generated@@67 $generated@@108 $generated@@106) $generated@@107) ($generated@@26 $generated@@108 $generated@@106 $generated@@107))
 :pattern ( ($generated@@95 ($generated@@67 $generated@@108 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@29 $generated@@109) (forall (($generated@@110 T@U) ) (!  (and (<= 0 ($generated@@20 $generated@@109 $generated@@110)) (<= ($generated@@20 $generated@@109 $generated@@110) ($generated@@74 $generated@@109)))
 :pattern ( ($generated@@20 $generated@@109 $generated@@110))
)))
 :pattern ( ($generated@@29 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (<= 0 ($generated@@74 $generated@@111))
 :pattern ( ($generated@@74 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@20 $generated@@112 $generated@@113) 0)
 :pattern ( ($generated@@20 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@20 ($generated@@70 $generated@@114 $generated@@115) $generated@@115) (+ ($generated@@20 $generated@@114 $generated@@115) 1))
 :pattern ( ($generated@@70 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@28 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@28 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@19 ($generated@@28 $generated@@118)) $generated@@1)
 :pattern ( ($generated@@28 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@38 $generated@@120 ($generated@@67 $generated@@120 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@67 $generated@@120 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (!  (and (= (= ($generated@@74 $generated@@121) 0) (= $generated@@121 $generated@@112)) (=> (or (not (= ($generated@@74 $generated@@121) 0)) (not true)) (exists (($generated@@122 T@U) ) (! (< 0 ($generated@@20 $generated@@121 $generated@@122))
 :pattern ( ($generated@@20 $generated@@121 $generated@@122))
))))
 :pattern ( ($generated@@74 $generated@@121))
)))
(assert  (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@123 $generated@@126 $generated@@127 $generated@@128 ($generated@@125 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@131 $generated@@132) $generated@@129)
 :weight 0
)) (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@123 $generated@@133 $generated@@134 $generated@@135 ($generated@@125 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@123 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@123 $generated@@142 $generated@@143 $generated@@144 ($generated@@125 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@123 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@8 ($generated@@123 $generated@@36 $generated@@34 $generated@@4 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))  (=> (and (or (not (= $generated@@155 $generated@@151)) (not true)) ($generated@@8 ($generated@@38 $generated@@4 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@152 $generated@@155) $generated@@153)))) $generated@@154))
 :pattern ( ($generated@@123 $generated@@36 $generated@@34 $generated@@4 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@95 $generated@@157 ($generated@@28 $generated@@158)) (and (= ($generated@@67 $generated@@27 ($generated@@38 $generated@@27 $generated@@157)) $generated@@157) ($generated@@26 $generated@@27 ($generated@@38 $generated@@27 $generated@@157) ($generated@@28 $generated@@158))))
 :pattern ( ($generated@@95 $generated@@157 ($generated@@28 $generated@@158)))
)))
(assert (forall (($generated@@159 Int) ) (! (= ($generated@@67 $generated@@5 ($generated@@9 ($generated@@62 $generated@@159))) ($generated@@64 $generated@@35 ($generated@@67 $generated@@5 ($generated@@9 $generated@@159))))
 :pattern ( ($generated@@67 $generated@@5 ($generated@@9 ($generated@@62 $generated@@159))))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@67 $generated@@161 ($generated@@64 $generated@@161 $generated@@160)) ($generated@@64 $generated@@35 ($generated@@67 $generated@@161 $generated@@160)))
 :pattern ( ($generated@@67 $generated@@161 ($generated@@64 $generated@@161 $generated@@160)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (< 0 ($generated@@20 $generated@@162 $generated@@164)) (< 0 ($generated@@20 ($generated@@70 $generated@@162 $generated@@163) $generated@@164)))
 :pattern ( ($generated@@70 $generated@@162 $generated@@163) ($generated@@20 $generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (< 0 ($generated@@20 ($generated@@70 $generated@@165 $generated@@166) $generated@@167))  (or (= $generated@@167 $generated@@166) (< 0 ($generated@@20 $generated@@165 $generated@@167))))
 :pattern ( ($generated@@20 ($generated@@70 $generated@@165 $generated@@166) $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@92 $generated@@168 $generated@@169) (forall (($generated@@170 T@U) ) (! (= ($generated@@20 $generated@@168 $generated@@170) ($generated@@20 $generated@@169 $generated@@170))
 :pattern ( ($generated@@20 $generated@@168 $generated@@170))
 :pattern ( ($generated@@20 $generated@@169 $generated@@170))
)))
 :pattern ( ($generated@@92 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (forall (($generated@@174 T@U) ) (! (<= ($generated@@20 $generated@@172 $generated@@174) ($generated@@20 $generated@@173 $generated@@174))
 :pattern ( ($generated@@20 $generated@@172 $generated@@174))
 :pattern ( ($generated@@20 $generated@@173 $generated@@174))
)))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@78 $generated@@27 $generated@@175 ($generated@@28 $generated@@176) $generated@@177) (forall (($generated@@178 T@U) ) (!  (=> (< 0 ($generated@@20 $generated@@175 $generated@@178)) ($generated@@77 $generated@@178 $generated@@176 $generated@@177))
 :pattern ( ($generated@@20 $generated@@175 $generated@@178))
)))
 :pattern ( ($generated@@78 $generated@@27 $generated@@175 ($generated@@28 $generated@@176) $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! ($generated@@78 $generated@@4 $generated@@180 $generated $generated@@179)
 :pattern ( ($generated@@78 $generated@@4 $generated@@180 $generated $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (! ($generated@@26 $generated@@4 $generated@@181 $generated)
 :pattern ( ($generated@@26 $generated@@4 $generated@@181 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Bool)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@194 true))
(let (($generated@@195  (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (and ($generated@@26 $generated@@4 ($generated@@64 $generated@@4 ($generated@@7 true)) $generated) (> ($generated@@20 $generated@@182 ($generated@@67 $generated@@4 ($generated@@64 $generated@@4 ($generated@@7 true)))) 0)) (or (and ($generated@@26 $generated@@4 ($generated@@64 $generated@@4 ($generated@@7 false)) $generated) (> ($generated@@20 $generated@@182 ($generated@@67 $generated@@4 ($generated@@64 $generated@@4 ($generated@@7 false)))) 0)) (exists (($generated@@196 T@U) ) (> ($generated@@20 $generated@@182 ($generated@@67 $generated@@4 $generated@@196)) 0))))) (=> (or (and ($generated@@26 $generated@@4 ($generated@@64 $generated@@4 ($generated@@7 true)) $generated) (> ($generated@@20 $generated@@182 ($generated@@67 $generated@@4 ($generated@@64 $generated@@4 ($generated@@7 true)))) 0)) (or (and ($generated@@26 $generated@@4 ($generated@@64 $generated@@4 ($generated@@7 false)) $generated) (> ($generated@@20 $generated@@182 ($generated@@67 $generated@@4 ($generated@@64 $generated@@4 ($generated@@7 false)))) 0)) (exists (($generated@@197 Bool) ) (> ($generated@@20 $generated@@182 ($generated@@67 $generated@@4 ($generated@@7 $generated@@197))) 0)))) (=> (> ($generated@@20 $generated@@182 ($generated@@67 $generated@@4 ($generated@@7 $generated@@183))) 0) (and (=> (= (ControlFlow 0 5) (- 0 6)) (<= 0 ($generated@@62 0))) (=> (<= 0 ($generated@@62 0)) (=> (and (= $generated@@184 ($generated@@21 $generated@@182 ($generated@@67 $generated@@4 ($generated@@7 $generated@@183)) ($generated@@62 0))) (= (ControlFlow 0 5) (- 0 4))) (and ($generated@@171 $generated@@184 $generated@@182) (not ($generated@@92 $generated@@184 $generated@@182)))))))))))
(let (($generated@@198  (=> (not ($generated@@92 $generated@@182 $generated@@112)) (and (=> (= (ControlFlow 0 9) 5) $generated@@195) (=> (= (ControlFlow 0 9) 8) $generated@@194)))))
(let (($generated@@199 true))
(let (($generated@@200  (=> $generated@@185 (and (=> (= (ControlFlow 0 10) 3) $generated@@199) (=> (= (ControlFlow 0 10) 9) $generated@@198)))))
(let (($generated@@201 true))
(let (($generated@@202  (and (=> (= (ControlFlow 0 11) 2) $generated@@201) (=> (= (ControlFlow 0 11) 10) $generated@@200))))
(let (($generated@@203 true))
(let (($generated@@204  (=> (and (and (and ($generated@@26 $generated@@27 $generated@@182 ($generated@@28 $generated)) ($generated@@78 $generated@@27 $generated@@182 ($generated@@28 $generated) $generated@@186)) (not false)) (and (and (forall (($generated@@205 T@U) ) (!  (=> (and (or (not (= $generated@@205 $generated@@187)) (not true)) ($generated@@8 ($generated@@38 $generated@@4 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@186 $generated@@205) $generated@@2)))) (= ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@186 $generated@@205) ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@186 $generated@@205)))
 :pattern ( ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@186 $generated@@205))
)) ($generated@@32 $generated@@186 $generated@@186)) (and (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (or (not (= $generated@@206 $generated@@187)) (not true)) ($generated@@8 ($generated@@38 $generated@@4 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@186 $generated@@206) $generated@@2)))) (or (= ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@186 $generated@@206) $generated@@207) ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@186 $generated@@206) $generated@@207)) ($generated@@8 ($generated@@123 $generated@@36 $generated@@34 $generated@@4 $generated@@188 $generated@@206 $generated@@207))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@186 $generated@@206) $generated@@207))
)) ($generated@@171 $generated@@182 $generated@@189)))) (and (=> (= (ControlFlow 0 12) 1) $generated@@203) (=> (= (ControlFlow 0 12) 11) $generated@@202)))))
(let (($generated@@208  (=> (= $generated@@188 ($generated@@124 $generated@@187 $generated@@186 $generated@@2 false)) (=> (and (= $generated@@189 ($generated@@64 $generated@@27 ($generated@@70 $generated@@112 ($generated@@67 $generated@@4 ($generated@@64 $generated@@4 ($generated@@7 true)))))) (= (ControlFlow 0 13) 12)) $generated@@204))))
(let (($generated@@209  (=> (and ($generated@@190 $generated@@186) ($generated@@191 $generated@@186)) (=> (and (and (and ($generated@@26 $generated@@27 $generated@@192 ($generated@@28 $generated)) ($generated@@78 $generated@@27 $generated@@192 ($generated@@28 $generated) $generated@@186)) true) (and (= 0 $generated@@193) (= (ControlFlow 0 14) 13))) $generated@@208))))
$generated@@209))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
