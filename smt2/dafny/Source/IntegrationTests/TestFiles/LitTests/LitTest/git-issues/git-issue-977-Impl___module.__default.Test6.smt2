(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U Int) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (Int) Int)
(declare-fun $generated@@28 (Int) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (Int) T@U)
(declare-fun $generated@@46 (T@U) Int)
(declare-fun $generated@@50 (T@U T@U T@U) Bool)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@U T@U) Bool)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) Bool)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Int)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) Bool)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@217 () T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@8 $generated@@32) 3))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@33 T@U) ($generated@@34 Int) ) (!  (=> (or ($generated@@28 ($generated@@27 $generated@@34)) (and (< 1 $generated@@24) (<= ($generated@@27 0) $generated@@34))) (and (=> (or (not (= ($generated@@27 $generated@@34) ($generated@@27 0))) (not true)) ($generated@@28 ($generated@@27 (- $generated@@34 1)))) (= ($generated@@25 ($generated@@26 $generated@@33) ($generated@@27 $generated@@34)) (ite (= ($generated@@27 $generated@@34) ($generated@@27 0)) $generated@@29 ($generated@@30 ($generated@@31 $generated@@32 ($generated@@25 ($generated@@26 $generated@@33) ($generated@@27 (- $generated@@34 1)))))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@26 $generated@@33) ($generated@@27 $generated@@34)))
))))
(assert (= ($generated@@35 $generated) $generated@@0))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (and ($generated@@36 $generated@@37 $generated@@38) ($generated@@36 $generated@@38 $generated@@39)) ($generated@@36 $generated@@37 $generated@@39))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38) ($generated@@36 $generated@@38 $generated@@39))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38) ($generated@@36 $generated@@37 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! ($generated@@40 $generated@@10 $generated@@42 $generated@@41 $generated@@43)
 :pattern ( ($generated@@40 $generated@@10 $generated@@42 $generated@@41 $generated@@43))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 Int) ($generated@@49 Int) ) (!  (=> (and (and (<= 0 $generated@@48) (<= 0 $generated@@49)) (<= (+ $generated@@48 $generated@@49) ($generated@@46 $generated@@47))) (= ($generated@@44 ($generated@@44 $generated@@47 ($generated@@45 $generated@@48)) ($generated@@45 $generated@@49)) ($generated@@44 $generated@@47 ($generated@@45 (+ $generated@@48 $generated@@49)))))
 :pattern ( ($generated@@44 ($generated@@44 $generated@@47 ($generated@@45 $generated@@48)) ($generated@@45 $generated@@49)))
)))
(assert (= ($generated@@8 $generated@@51) 4))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (or ($generated@@52 ($generated@@31 $generated@@51 $generated@@58) $generated@@59) (and (< 2 $generated@@24) ($generated@@53 $generated@@32 $generated@@59 $generated@@54))) (and (and (=> (< 0 ($generated@@46 $generated@@58)) (=> ($generated@@55 $generated@@59) (let (($generated@@60 ($generated@@56 $generated@@59)))
($generated@@52 ($generated@@44 $generated@@58 ($generated@@45 1)) $generated@@60)))) (=> (=> (< 0 ($generated@@46 $generated@@58)) (ite ($generated@@55 $generated@@59) (let (($generated@@61 ($generated@@56 $generated@@59)))
($generated@@50 ($generated@@26 $generated@@57) ($generated@@44 $generated@@58 ($generated@@45 1)) $generated@@61)) true)) (=> (= ($generated@@27 0) ($generated@@46 $generated@@58)) (forall (($generated@@62 T@U) ) (!  (=> ($generated@@36 $generated@@62 $generated@@58) ($generated@@52 $generated@@62 $generated@@59))
 :pattern ( ($generated@@50 ($generated@@26 $generated@@57) $generated@@62 $generated@@59))
))))) (= ($generated@@50 ($generated@@26 $generated@@57) ($generated@@31 $generated@@51 $generated@@58) $generated@@59)  (and (=> (< 0 ($generated@@46 $generated@@58)) (ite ($generated@@55 $generated@@59) (let (($generated@@63 ($generated@@56 $generated@@59)))
($generated@@50 ($generated@@26 $generated@@57) ($generated@@44 $generated@@58 ($generated@@45 1)) $generated@@63)) true)) (=> (= ($generated@@27 0) ($generated@@46 $generated@@58)) (forall (($generated@@64 T@U) ) (!  (=> ($generated@@36 $generated@@64 $generated@@58) ($generated@@50 ($generated@@26 $generated@@57) $generated@@64 $generated@@59))
 :pattern ( ($generated@@50 ($generated@@26 $generated@@57) $generated@@64 $generated@@59))
)))))))
 :weight 3
 :pattern ( ($generated@@50 ($generated@@26 $generated@@57) ($generated@@31 $generated@@51 $generated@@58) $generated@@59))
))))
(assert (= ($generated@@65 $generated@@29) $generated@@5))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@66 T@U) ($generated@@67 Int) ) (!  (=> (or ($generated@@28 $generated@@67) (and (< 1 $generated@@24) (<= ($generated@@27 0) $generated@@67))) ($generated@@53 $generated@@32 ($generated@@25 $generated@@66 $generated@@67) $generated@@54))
 :pattern ( ($generated@@25 $generated@@66 $generated@@67))
))))
(assert ($generated@@53 $generated@@32 $generated@@29 $generated@@54))
(assert (forall (($generated@@68 Int) ) (! (= ($generated@@27 $generated@@68) $generated@@68)
 :pattern ( ($generated@@27 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@31 $generated@@70 $generated@@69) $generated@@69)
 :pattern ( ($generated@@31 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@55 $generated@@71) (= ($generated@@65 $generated@@71) $generated@@4))
 :pattern ( ($generated@@55 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@72 $generated@@73) (= ($generated@@65 $generated@@73) $generated@@5))
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 ($generated@@74 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@74 $generated@@77 $generated@@76))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and ($generated@@53 $generated@@32 $generated@@79 $generated@@54) (= $generated@@80 ($generated@@45 0))) ($generated@@50 $generated@@78 $generated@@80 $generated@@79))
 :pattern ( ($generated@@50 $generated@@78 $generated@@80 $generated@@79))
))))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@52 $generated@@82 $generated@@83) (and (< 2 $generated@@24) ($generated@@53 $generated@@32 $generated@@83 $generated@@54))) (and (and (=> (< 0 ($generated@@46 $generated@@82)) (=> ($generated@@55 $generated@@83) (let (($generated@@84 ($generated@@56 $generated@@83)))
($generated@@52 ($generated@@44 $generated@@82 ($generated@@45 1)) $generated@@84)))) (=> (=> (< 0 ($generated@@46 $generated@@82)) (ite ($generated@@55 $generated@@83) (let (($generated@@85 ($generated@@56 $generated@@83)))
($generated@@50 $generated@@81 ($generated@@44 $generated@@82 ($generated@@45 1)) $generated@@85)) true)) (=> (= ($generated@@27 0) ($generated@@46 $generated@@82)) (forall (($generated@@86 T@U) ) (!  (=> ($generated@@36 $generated@@86 $generated@@82) ($generated@@52 $generated@@86 $generated@@83))
 :pattern ( ($generated@@50 $generated@@81 $generated@@86 $generated@@83))
))))) (= ($generated@@50 ($generated@@26 $generated@@81) $generated@@82 $generated@@83)  (and (=> (< 0 ($generated@@46 $generated@@82)) (ite ($generated@@55 $generated@@83) (let (($generated@@87 ($generated@@56 $generated@@83)))
($generated@@50 $generated@@81 ($generated@@44 $generated@@82 ($generated@@45 1)) $generated@@87)) true)) (=> (= ($generated@@27 0) ($generated@@46 $generated@@82)) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@36 $generated@@88 $generated@@82) ($generated@@50 $generated@@81 $generated@@88 $generated@@83))
 :pattern ( ($generated@@50 $generated@@81 $generated@@88 $generated@@83))
)))))))
 :pattern ( ($generated@@50 ($generated@@26 $generated@@81) $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@72 $generated@@89) (= $generated@@89 $generated@@29))
 :pattern ( ($generated@@72 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@55 $generated@@90) (exists (($generated@@91 T@U) ) (= $generated@@90 ($generated@@30 $generated@@91))))
 :pattern ( ($generated@@55 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@53 $generated@@10 $generated@@92 $generated@@41) (<= ($generated@@27 0) ($generated@@15 $generated@@92)))
 :pattern ( ($generated@@53 $generated@@10 $generated@@92 $generated@@41))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@50 ($generated@@26 $generated@@93) $generated@@94 $generated@@95) ($generated@@50 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@50 ($generated@@26 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@96 ($generated@@26 $generated@@97) $generated@@98 $generated@@99) ($generated@@96 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@96 ($generated@@26 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (and ($generated@@100 $generated@@102) (<= ($generated@@46 $generated@@102) ($generated@@46 $generated@@101))) (and (= ($generated@@100 ($generated@@44 $generated@@101 $generated@@102)) ($generated@@100 $generated@@101)) (= ($generated@@46 ($generated@@44 $generated@@101 $generated@@102)) (- ($generated@@46 $generated@@101) ($generated@@46 $generated@@102)))))
 :pattern ( ($generated@@44 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 Int) ) (!  (=> (<= 0 $generated@@103) (and ($generated@@100 ($generated@@45 $generated@@103)) (= ($generated@@46 ($generated@@45 $generated@@103)) $generated@@103)))
 :pattern ( ($generated@@45 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@53 $generated@@32 ($generated@@30 $generated@@104) $generated@@54) ($generated@@53 $generated@@32 $generated@@104 $generated@@54))
 :pattern ( ($generated@@53 $generated@@32 ($generated@@30 $generated@@104) $generated@@54))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (or ($generated@@105 ($generated@@31 $generated@@51 $generated@@107) ($generated@@31 $generated@@32 $generated@@108)) (and (< 1 $generated@@24) ($generated@@53 $generated@@32 $generated@@108 $generated@@54))) (and (=> (or (not (= ($generated@@31 $generated@@51 $generated@@107) ($generated@@31 $generated@@51 ($generated@@45 0)))) (not true)) (and (=> ($generated@@13 ($generated@@31 $generated@@9 ($generated@@12 (< 0 ($generated@@46 ($generated@@31 $generated@@51 $generated@@107)))))) (=> ($generated@@13 ($generated@@31 $generated@@9 ($generated@@12 ($generated@@55 ($generated@@31 $generated@@32 $generated@@108))))) (let (($generated@@109 ($generated@@31 $generated@@32 ($generated@@56 ($generated@@31 $generated@@32 $generated@@108)))))
($generated@@105 ($generated@@31 $generated@@51 ($generated@@44 $generated@@107 ($generated@@45 1))) $generated@@109)))) (=> (not ($generated@@13 ($generated@@31 $generated@@9 ($generated@@12 (< 0 ($generated@@46 ($generated@@31 $generated@@51 $generated@@107))))))) (forall (($generated@@110 T@U) ) (!  (=> ($generated@@36 $generated@@110 $generated@@107) ($generated@@105 $generated@@110 ($generated@@31 $generated@@32 $generated@@108)))
 :pattern ( ($generated@@96 ($generated@@26 $generated@@106) $generated@@110 $generated@@108))
 :pattern ( ($generated@@36 $generated@@110 $generated@@107))
))))) (= ($generated@@96 ($generated@@26 $generated@@106) ($generated@@31 $generated@@51 $generated@@107) ($generated@@31 $generated@@32 $generated@@108)) (ite (= ($generated@@31 $generated@@51 $generated@@107) ($generated@@31 $generated@@51 ($generated@@45 0))) true (ite (< 0 ($generated@@46 ($generated@@31 $generated@@51 $generated@@107))) (ite ($generated@@55 ($generated@@31 $generated@@32 $generated@@108)) ($generated@@13 (let (($generated@@111 ($generated@@31 $generated@@32 ($generated@@56 ($generated@@31 $generated@@32 $generated@@108)))))
($generated@@31 $generated@@9 ($generated@@12 ($generated@@96 ($generated@@26 $generated@@106) ($generated@@31 $generated@@51 ($generated@@44 $generated@@107 ($generated@@45 1))) $generated@@111))))) true) (forall (($generated@@112 T@U) ) (!  (=> ($generated@@36 $generated@@112 $generated@@107) ($generated@@96 ($generated@@26 $generated@@106) $generated@@112 ($generated@@31 $generated@@32 $generated@@108)))
 :pattern ( ($generated@@96 ($generated@@26 $generated@@106) $generated@@112 $generated@@108))
 :pattern ( ($generated@@36 $generated@@112 $generated@@107))
)))))))
 :weight 3
 :pattern ( ($generated@@96 ($generated@@26 $generated@@106) ($generated@@31 $generated@@51 $generated@@107) ($generated@@31 $generated@@32 $generated@@108)))
))))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (or ($generated@@36 $generated@@113 $generated@@114) (= $generated@@113 $generated@@114)) ($generated@@36 $generated@@114 $generated@@113))
 :pattern ( ($generated@@36 $generated@@113 $generated@@114) ($generated@@36 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@53 $generated@@32 $generated@@115 $generated@@54) (or ($generated@@55 $generated@@115) ($generated@@72 $generated@@115)))
 :pattern ( ($generated@@72 $generated@@115) ($generated@@53 $generated@@32 $generated@@115 $generated@@54))
 :pattern ( ($generated@@55 $generated@@115) ($generated@@53 $generated@@32 $generated@@115 $generated@@54))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or ($generated@@105 $generated@@117 $generated@@118) (and (< 1 $generated@@24) ($generated@@53 $generated@@32 $generated@@118 $generated@@54))) (and (=> (or (not (= $generated@@117 ($generated@@31 $generated@@51 ($generated@@45 0)))) (not true)) (and (=> (< 0 ($generated@@46 $generated@@117)) (=> ($generated@@55 $generated@@118) (let (($generated@@119 ($generated@@56 $generated@@118)))
($generated@@105 ($generated@@44 $generated@@117 ($generated@@45 1)) $generated@@119)))) (=> (not (< 0 ($generated@@46 $generated@@117))) (forall (($generated@@120 T@U) ) (!  (=> ($generated@@36 $generated@@120 $generated@@117) ($generated@@105 $generated@@120 $generated@@118))
 :pattern ( ($generated@@96 $generated@@116 $generated@@120 $generated@@118))
 :pattern ( ($generated@@36 $generated@@120 $generated@@117))
))))) (= ($generated@@96 ($generated@@26 $generated@@116) $generated@@117 $generated@@118) (ite (= $generated@@117 ($generated@@31 $generated@@51 ($generated@@45 0))) true (ite (< 0 ($generated@@46 $generated@@117)) (ite ($generated@@55 $generated@@118) (let (($generated@@121 ($generated@@56 $generated@@118)))
($generated@@96 $generated@@116 ($generated@@44 $generated@@117 ($generated@@45 1)) $generated@@121)) true) (forall (($generated@@122 T@U) ) (!  (=> ($generated@@36 $generated@@122 $generated@@117) ($generated@@96 $generated@@116 $generated@@122 $generated@@118))
 :pattern ( ($generated@@96 $generated@@116 $generated@@122 $generated@@118))
 :pattern ( ($generated@@36 $generated@@122 $generated@@117))
)))))))
 :pattern ( ($generated@@96 ($generated@@26 $generated@@116) $generated@@117 $generated@@118))
))))
(assert (forall (($generated@@123 T@U) ) (! (<= 0 ($generated@@46 $generated@@123))
 :pattern ( ($generated@@46 $generated@@123))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@124 T@U) ($generated@@125 Int) ) (!  (=> (or ($generated@@28 $generated@@125) (and (< 1 $generated@@24) (<= ($generated@@27 0) $generated@@125))) (and (=> (or (not (= $generated@@125 ($generated@@27 0))) (not true)) ($generated@@28 (- $generated@@125 1))) (= ($generated@@25 ($generated@@26 $generated@@124) $generated@@125) (ite (= $generated@@125 ($generated@@27 0)) $generated@@29 ($generated@@30 ($generated@@25 $generated@@124 (- $generated@@125 1)))))))
 :pattern ( ($generated@@25 ($generated@@26 $generated@@124) $generated@@125))
))))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@65 ($generated@@30 $generated@@126)) $generated@@4)
 :pattern ( ($generated@@30 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@56 ($generated@@30 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@30 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@74 $generated@@129 ($generated@@75 $generated@@129 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@75 $generated@@129 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (and (and (and (=> ($generated@@36 $generated@@130 $generated@@131) (or (not (= $generated@@130 $generated@@131)) (not true))) (=> (and ($generated@@100 $generated@@130) (not ($generated@@100 $generated@@131))) ($generated@@36 $generated@@130 $generated@@131))) (=> (and ($generated@@100 $generated@@130) ($generated@@100 $generated@@131)) (= ($generated@@36 $generated@@130 $generated@@131) (< ($generated@@46 $generated@@130) ($generated@@46 $generated@@131))))) (=> (and ($generated@@36 $generated@@130 $generated@@131) ($generated@@100 $generated@@131)) ($generated@@100 $generated@@130)))
 :pattern ( ($generated@@36 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 Int) ) (! (= ($generated@@25 ($generated@@26 $generated@@132) $generated@@133) ($generated@@25 $generated@@132 $generated@@133))
 :pattern ( ($generated@@25 ($generated@@26 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (! (< ($generated@@134 $generated@@135) ($generated@@134 ($generated@@30 $generated@@135)))
 :pattern ( ($generated@@30 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@136 $generated@@146 $generated@@147 $generated@@148 ($generated@@142 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@151 $generated@@152) $generated@@149)
 :weight 0
)) (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@136 $generated@@153 $generated@@154 $generated@@155 ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@136 $generated@@162 $generated@@163 $generated@@164 ($generated@@142 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@136 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)))) (= ($generated@@8 $generated@@137) 5)) (= ($generated@@8 $generated@@138) 6)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@140 $generated@@171 $generated@@172 ($generated@@143 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@173) $generated@@175) $generated@@173)
 :weight 0
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@180 $generated@@181) (= ($generated@@140 $generated@@176 $generated@@177 ($generated@@143 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@178) $generated@@181) ($generated@@140 $generated@@176 $generated@@177 $generated@@179 $generated@@181)))
 :weight 0
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@8 ($generated@@141 $generated@@182 $generated@@183)) 7))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@144 ($generated@@141 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@141 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@145 ($generated@@141 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@141 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@13 ($generated@@136 $generated@@137 $generated@@138 $generated@@9 ($generated@@139 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (or (not (= $generated@@192 $generated@@188)) (not true)) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@140 $generated@@138 $generated@@51 ($generated@@140 $generated@@137 ($generated@@141 $generated@@138 $generated@@51) $generated@@189 $generated@@192) $generated@@190)))) $generated@@191))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138 $generated@@9 ($generated@@139 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (!  (=> ($generated@@100 $generated@@194) (= $generated@@194 ($generated@@45 ($generated@@46 $generated@@194))))
 :pattern ( ($generated@@46 $generated@@194))
 :pattern ( ($generated@@100 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and ($generated@@195 $generated@@197) ($generated@@53 $generated@@32 $generated@@196 $generated@@54)) ($generated@@40 $generated@@32 $generated@@196 $generated@@54 $generated@@197))
 :pattern ( ($generated@@40 $generated@@32 $generated@@196 $generated@@54 $generated@@197))
)))
(assert (= ($generated@@35 $generated@@41) $generated@@2))
(assert (= ($generated@@198 $generated@@41) $generated@@6))
(assert (= ($generated@@35 $generated@@54) $generated@@3))
(assert (= ($generated@@198 $generated@@54) $generated@@7))
(assert (= $generated@@29 ($generated@@31 $generated@@32 $generated@@29)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and ($generated@@100 $generated@@200) (<= ($generated@@46 $generated@@200) ($generated@@46 $generated@@199))) (or (and (= $generated@@200 ($generated@@45 0)) (= ($generated@@44 $generated@@199 $generated@@200) $generated@@199)) (and (or (not (= $generated@@200 ($generated@@45 0))) (not true)) ($generated@@36 ($generated@@44 $generated@@199 $generated@@200) $generated@@199))))
 :pattern ( ($generated@@44 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and ($generated@@195 $generated@@202) (and ($generated@@55 $generated@@201) ($generated@@40 $generated@@32 $generated@@201 $generated@@54 $generated@@202))) ($generated@@40 $generated@@32 ($generated@@56 $generated@@201) $generated@@54 $generated@@202))
 :pattern ( ($generated@@40 $generated@@32 ($generated@@56 $generated@@201) $generated@@54 $generated@@202))
)))
(assert (forall (($generated@@203 Int) ) (! (= ($generated@@75 $generated@@10 ($generated@@14 ($generated@@27 $generated@@203))) ($generated@@31 $generated@@51 ($generated@@75 $generated@@10 ($generated@@14 $generated@@203))))
 :pattern ( ($generated@@75 $generated@@10 ($generated@@14 ($generated@@27 $generated@@203))))
)))
(assert (forall (($generated@@204 T@U) ) (! (= ($generated@@30 ($generated@@31 $generated@@32 $generated@@204)) ($generated@@31 $generated@@32 ($generated@@30 $generated@@204)))
 :pattern ( ($generated@@30 ($generated@@31 $generated@@32 $generated@@204)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@T) ) (! (= ($generated@@75 $generated@@206 ($generated@@31 $generated@@206 $generated@@205)) ($generated@@31 $generated@@51 ($generated@@75 $generated@@206 $generated@@205)))
 :pattern ( ($generated@@75 $generated@@206 ($generated@@31 $generated@@206 $generated@@205)))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (or ($generated@@52 ($generated@@31 $generated@@51 $generated@@208) ($generated@@31 $generated@@32 $generated@@209)) (and (< 2 $generated@@24) ($generated@@53 $generated@@32 $generated@@209 $generated@@54))) (and (and (=> (< 0 ($generated@@46 $generated@@208)) (=> ($generated@@13 ($generated@@31 $generated@@9 ($generated@@12 ($generated@@55 ($generated@@31 $generated@@32 $generated@@209))))) (let (($generated@@210 ($generated@@31 $generated@@32 ($generated@@56 ($generated@@31 $generated@@32 $generated@@209)))))
($generated@@52 ($generated@@44 $generated@@208 ($generated@@45 1)) $generated@@210)))) (=> (=> (< 0 ($generated@@46 $generated@@208)) (ite ($generated@@55 ($generated@@31 $generated@@32 $generated@@209)) (let (($generated@@211 ($generated@@31 $generated@@32 ($generated@@56 ($generated@@31 $generated@@32 $generated@@209)))))
($generated@@50 ($generated@@26 $generated@@207) ($generated@@44 $generated@@208 ($generated@@45 1)) $generated@@211)) true)) (=> (= ($generated@@27 0) ($generated@@46 $generated@@208)) (forall (($generated@@212 T@U) ) (!  (=> ($generated@@36 $generated@@212 $generated@@208) ($generated@@52 $generated@@212 $generated@@209))
 :pattern ( ($generated@@50 ($generated@@26 $generated@@207) $generated@@212 $generated@@209))
))))) (= ($generated@@50 ($generated@@26 $generated@@207) ($generated@@31 $generated@@51 $generated@@208) ($generated@@31 $generated@@32 $generated@@209))  (and (=> (< 0 ($generated@@46 $generated@@208)) (ite ($generated@@55 ($generated@@31 $generated@@32 $generated@@209)) (let (($generated@@213 ($generated@@31 $generated@@32 ($generated@@56 ($generated@@31 $generated@@32 $generated@@209)))))
($generated@@50 ($generated@@26 $generated@@207) ($generated@@44 $generated@@208 ($generated@@45 1)) $generated@@213)) true)) (=> (= ($generated@@27 0) ($generated@@46 $generated@@208)) (forall (($generated@@214 T@U) ) (!  (=> ($generated@@36 $generated@@214 $generated@@208) ($generated@@50 ($generated@@26 $generated@@207) $generated@@214 $generated@@209))
 :pattern ( ($generated@@50 ($generated@@26 $generated@@207) $generated@@214 $generated@@209))
)))))))
 :weight 3
 :pattern ( ($generated@@50 ($generated@@26 $generated@@207) ($generated@@31 $generated@@51 $generated@@208) ($generated@@31 $generated@@32 $generated@@209)))
))))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (or ($generated@@216 ($generated@@31 $generated@@51 $generated@@218) ($generated@@31 $generated@@32 $generated@@219)) (and (< 3 $generated@@24) ($generated@@53 $generated@@32 $generated@@219 $generated@@54))) (and ($generated@@52 ($generated@@31 $generated@@51 $generated@@218) ($generated@@31 $generated@@32 $generated@@219)) (= ($generated@@215 ($generated@@31 $generated@@51 $generated@@218) ($generated@@31 $generated@@32 $generated@@219)) ($generated@@13 ($generated@@31 $generated@@9 ($generated@@12 ($generated@@50 ($generated@@26 $generated@@217) ($generated@@31 $generated@@51 $generated@@218) ($generated@@31 $generated@@32 $generated@@219))))))))
 :weight 3
 :pattern ( ($generated@@215 ($generated@@31 $generated@@51 $generated@@218) ($generated@@31 $generated@@32 $generated@@219)))
))))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (or ($generated@@216 $generated@@220 $generated@@221) (and (< 3 $generated@@24) ($generated@@53 $generated@@32 $generated@@221 $generated@@54))) (and ($generated@@52 $generated@@220 $generated@@221) (= ($generated@@215 $generated@@220 $generated@@221) ($generated@@50 ($generated@@26 $generated@@217) $generated@@220 $generated@@221))))
 :pattern ( ($generated@@215 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! ($generated@@40 $generated@@51 $generated@@223 $generated $generated@@222)
 :pattern ( ($generated@@40 $generated@@51 $generated@@223 $generated $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ) (! ($generated@@53 $generated@@51 $generated@@224 $generated)
 :pattern ( ($generated@@53 $generated@@51 $generated@@224 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () Int)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@236  (=> (and (= $generated@@225 (ite (< $generated@@226 0) 0 $generated@@226)) ($generated@@40 $generated@@10 ($generated@@14 $generated@@225) $generated@@41 $generated@@227)) (=> (and (and ($generated@@28 (ite (< $generated@@226 0) 0 $generated@@226)) (= $generated@@228 ($generated@@25 ($generated@@26 $generated@@217) (ite (< $generated@@226 0) 0 $generated@@226)))) (and ($generated@@40 $generated@@32 $generated@@228 $generated@@54 $generated@@227) ($generated@@216 $generated@@229 ($generated@@25 ($generated@@26 $generated@@217) (ite (< $generated@@226 0) 0 $generated@@226))))) (=> (and (and (and ($generated@@28 (ite (< $generated@@226 0) 0 $generated@@226)) ($generated@@216 $generated@@229 ($generated@@25 ($generated@@26 $generated@@217) (ite (< $generated@@226 0) 0 $generated@@226)))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@216 $generated@@229 ($generated@@25 ($generated@@26 $generated@@217) (ite (< $generated@@226 0) 0 $generated@@226)))) (or ($generated@@215 $generated@@229 ($generated@@25 ($generated@@26 $generated@@217) (ite (< $generated@@226 0) 0 $generated@@226))) (=> ($generated@@52 $generated@@229 ($generated@@25 ($generated@@26 $generated@@217) (ite (< $generated@@226 0) 0 $generated@@226))) ($generated@@50 ($generated@@26 $generated@@217) $generated@@229 ($generated@@25 ($generated@@26 $generated@@217) (ite (< $generated@@226 0) 0 $generated@@226))))))))))
(let (($generated@@237  (=> (<= 0 $generated@@226) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@53 $generated@@10 ($generated@@14 $generated@@226) $generated@@41)) (=> ($generated@@53 $generated@@10 ($generated@@14 $generated@@226) $generated@@41) (=> (= (ControlFlow 0 5) 2) $generated@@236))))))
(let (($generated@@238  (=> (< $generated@@226 0) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@53 $generated@@10 ($generated@@14 ($generated@@27 0)) $generated@@41)) (=> ($generated@@53 $generated@@10 ($generated@@14 ($generated@@27 0)) $generated@@41) (=> (= (ControlFlow 0 3) 2) $generated@@236))))))
(let (($generated@@239  (=> (= $generated@@230 (ite (< $generated@@226 0) 0 $generated@@226)) (=> (and (and ($generated@@40 $generated@@10 ($generated@@14 $generated@@230) $generated@@41 $generated@@231) ($generated@@28 (ite (< $generated@@226 0) 0 $generated@@226))) (and ($generated@@28 (ite (< $generated@@226 0) 0 $generated@@226)) (= $generated@@232 ($generated@@25 ($generated@@26 $generated@@217) (ite (< $generated@@226 0) 0 $generated@@226))))) (=> (and (and (and (and ($generated@@195 $generated@@227) ($generated@@233 $generated@@227)) ($generated@@52 $generated@@229 $generated@@232)) (and (and ($generated@@52 $generated@@229 $generated@@232) (and ($generated@@50 ($generated@@26 $generated@@217) $generated@@229 $generated@@232) (and (=> (< 0 ($generated@@46 $generated@@229)) (ite ($generated@@55 $generated@@232) (let (($generated@@240 ($generated@@56 $generated@@232)))
($generated@@50 ($generated@@26 $generated@@217) ($generated@@44 $generated@@229 ($generated@@45 1)) $generated@@240)) true)) (=> (= ($generated@@27 0) ($generated@@46 $generated@@229)) (forall (($generated@@241 T@U) ) (!  (=> ($generated@@36 $generated@@241 $generated@@229) ($generated@@50 ($generated@@26 $generated@@217) $generated@@241 $generated@@232))
 :pattern ( ($generated@@50 ($generated@@26 $generated@@217) $generated@@241 $generated@@232))
)))))) ($generated@@105 $generated@@229 $generated@@232))) (and (and (and ($generated@@105 $generated@@229 $generated@@232) (and ($generated@@96 ($generated@@26 $generated@@217) $generated@@229 $generated@@232) (ite (= $generated@@229 ($generated@@31 $generated@@51 ($generated@@45 0))) true (ite (< 0 ($generated@@46 $generated@@229)) (ite ($generated@@55 $generated@@232) (let (($generated@@242 ($generated@@56 $generated@@232)))
($generated@@96 ($generated@@26 $generated@@217) ($generated@@44 $generated@@229 ($generated@@45 1)) $generated@@242)) true) (forall (($generated@@243 T@U) ) (!  (=> ($generated@@36 $generated@@243 $generated@@229) ($generated@@96 ($generated@@26 $generated@@217) $generated@@243 $generated@@232))
 :pattern ( ($generated@@96 ($generated@@26 $generated@@217) $generated@@243 $generated@@232))
 :pattern ( ($generated@@36 $generated@@243 $generated@@229))
)))))) ($generated@@216 $generated@@229 $generated@@232)) (and (and ($generated@@216 $generated@@229 $generated@@232) (and ($generated@@215 $generated@@229 $generated@@232) ($generated@@50 ($generated@@26 $generated@@217) $generated@@229 $generated@@232))) (and (= $generated@@231 $generated@@227) ($generated@@40 $generated@@51 $generated@@229 $generated $generated@@227))))) (and (=> (= (ControlFlow 0 7) 3) $generated@@238) (=> (= (ControlFlow 0 7) 5) $generated@@237)))))))
(let (($generated@@244  (=> (<= 0 $generated@@226) (and (=> (= (ControlFlow 0 10) (- 0 11)) ($generated@@53 $generated@@10 ($generated@@14 $generated@@226) $generated@@41)) (=> ($generated@@53 $generated@@10 ($generated@@14 $generated@@226) $generated@@41) (=> (= (ControlFlow 0 10) 7) $generated@@239))))))
(let (($generated@@245  (=> (< $generated@@226 0) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@53 $generated@@10 ($generated@@14 ($generated@@27 0)) $generated@@41)) (=> ($generated@@53 $generated@@10 ($generated@@14 ($generated@@27 0)) $generated@@41) (=> (= (ControlFlow 0 8) 7) $generated@@239))))))
(let (($generated@@246  (=> (= $generated@@234 ($generated@@139 $generated@@235 $generated@@231 $generated@@1 false)) (and (=> (= (ControlFlow 0 12) 8) $generated@@245) (=> (= (ControlFlow 0 12) 10) $generated@@244)))))
(let (($generated@@247  (=> (and (and ($generated@@195 $generated@@231) ($generated@@233 $generated@@231)) (and (= 5 $generated@@24) (= (ControlFlow 0 13) 12))) $generated@@246)))
$generated@@247)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
