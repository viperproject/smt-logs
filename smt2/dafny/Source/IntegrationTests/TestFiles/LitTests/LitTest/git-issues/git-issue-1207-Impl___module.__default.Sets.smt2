(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) T@U)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@52 (T@T T@U T@U) Bool)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@90 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@94 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@19 T@U) ($generated@@20 T@U) ($generated@@21 T@U) ) (!  (=> ($generated@@18 $generated@@19 $generated@@21) ($generated@@18 ($generated@@17 $generated@@19 $generated@@20) $generated@@21))
 :pattern ( ($generated@@17 $generated@@19 $generated@@20) ($generated@@18 $generated@@19 $generated@@21))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (!  (=> ($generated@@18 $generated@@23 $generated@@24) ($generated@@18 ($generated@@17 $generated@@22 $generated@@23) $generated@@24))
 :pattern ( ($generated@@17 $generated@@22 $generated@@23) ($generated@@18 $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@18 $generated@@27 $generated@@28) (not ($generated@@18 ($generated@@25 $generated@@26 $generated@@27) $generated@@28)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@18 $generated@@27 $generated@@28))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@18 ($generated@@29 $generated@@30 $generated@@31) $generated@@32)  (and ($generated@@18 $generated@@30 $generated@@32) ($generated@@18 $generated@@31 $generated@@32)))
 :pattern ( ($generated@@18 ($generated@@29 $generated@@30 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@17 ($generated@@17 $generated@@33 $generated@@34) $generated@@34) ($generated@@17 $generated@@33 $generated@@34))
 :pattern ( ($generated@@17 ($generated@@17 $generated@@33 $generated@@34) $generated@@34))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@29 ($generated@@29 $generated@@35 $generated@@36) $generated@@36) ($generated@@29 $generated@@35 $generated@@36))
 :pattern ( ($generated@@29 ($generated@@29 $generated@@35 $generated@@36) $generated@@36))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@18 ($generated@@25 $generated@@37 $generated@@38) $generated@@39)  (and ($generated@@18 $generated@@37 $generated@@39) (not ($generated@@18 $generated@@38 $generated@@39))))
 :pattern ( ($generated@@18 ($generated@@25 $generated@@37 $generated@@38) $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@42) (forall (($generated@@43 T@U) ) (!  (=> ($generated@@18 $generated@@41 $generated@@43) ($generated@@18 $generated@@42 $generated@@43))
 :pattern ( ($generated@@18 $generated@@41 $generated@@43))
 :pattern ( ($generated@@18 $generated@@42 $generated@@43))
)))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@T) ) (! (= ($generated@@45 $generated@@47 ($generated@@44 $generated@@47 $generated@@46)) $generated@@46)
 :pattern ( ($generated@@44 $generated@@47 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@48 $generated@@49 $generated@@50) (forall (($generated@@51 T@U) ) (!  (or (not ($generated@@18 $generated@@49 $generated@@51)) (not ($generated@@18 $generated@@50 $generated@@51)))
 :pattern ( ($generated@@18 $generated@@49 $generated@@51))
 :pattern ( ($generated@@18 $generated@@50 $generated@@51))
)))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50))
)))
(assert (= ($generated@@1 $generated@@53) 3))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@52 $generated@@53 $generated@@56 ($generated@@54 $generated@@57)) (forall (($generated@@58 T@U) ) (!  (=> ($generated@@18 $generated@@56 $generated@@58) ($generated@@55 $generated@@58 $generated@@57))
 :pattern ( ($generated@@18 $generated@@56 $generated@@58))
)))
 :pattern ( ($generated@@52 $generated@@53 $generated@@56 ($generated@@54 $generated@@57)))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@59 ($generated@@45 $generated@@64 $generated@@61) $generated@@62 $generated@@63) ($generated@@60 $generated@@64 $generated@@61 $generated@@62 $generated@@63))
 :pattern ( ($generated@@59 ($generated@@45 $generated@@64 $generated@@61) $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@18 ($generated@@17 $generated@@65 $generated@@66) $generated@@67)  (or ($generated@@18 $generated@@65 $generated@@67) ($generated@@18 $generated@@66 $generated@@67)))
 :pattern ( ($generated@@18 ($generated@@17 $generated@@65 $generated@@66) $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@48 $generated@@68 $generated@@69) (and (= ($generated@@25 ($generated@@17 $generated@@68 $generated@@69) $generated@@68) $generated@@69) (= ($generated@@25 ($generated@@17 $generated@@68 $generated@@69) $generated@@69) $generated@@68)))
 :pattern ( ($generated@@17 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> ($generated@@70 $generated@@71 $generated@@72) (= $generated@@71 $generated@@72))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@55 ($generated@@45 $generated@@75 $generated@@73) $generated@@74) ($generated@@52 $generated@@75 $generated@@73 $generated@@74))
 :pattern ( ($generated@@55 ($generated@@45 $generated@@75 $generated@@73) $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@60 $generated@@53 $generated@@76 ($generated@@54 $generated@@77) $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@18 $generated@@76 $generated@@79) ($generated@@59 $generated@@79 $generated@@77 $generated@@78))
 :pattern ( ($generated@@18 $generated@@76 $generated@@79))
)))
 :pattern ( ($generated@@60 $generated@@53 $generated@@76 ($generated@@54 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@80 ($generated@@54 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@54 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 ($generated@@54 $generated@@83)) $generated)
 :pattern ( ($generated@@54 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@44 $generated@@85 ($generated@@45 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@45 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@17 $generated@@86 ($generated@@17 $generated@@86 $generated@@87)) ($generated@@17 $generated@@86 $generated@@87))
 :pattern ( ($generated@@17 $generated@@86 ($generated@@17 $generated@@86 $generated@@87)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@29 $generated@@88 ($generated@@29 $generated@@88 $generated@@89)) ($generated@@29 $generated@@88 $generated@@89))
 :pattern ( ($generated@@29 $generated@@88 ($generated@@29 $generated@@88 $generated@@89)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@90 $generated@@101 $generated@@102 $generated@@103 ($generated@@97 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@106 $generated@@107) $generated@@104)
 :weight 0
)) (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@90 $generated@@108 $generated@@109 $generated@@110 ($generated@@97 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@90 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@90 $generated@@117 $generated@@118 $generated@@119 ($generated@@97 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@90 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 4)) (= ($generated@@1 $generated@@92) 5)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@94 $generated@@126 $generated@@127 ($generated@@98 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@128) $generated@@130) $generated@@128)
 :weight 0
))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@94 $generated@@131 $generated@@132 ($generated@@98 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@94 $generated@@131 $generated@@132 $generated@@134 $generated@@136)))
 :weight 0
))) (= ($generated@@1 $generated@@95) 6)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@96 $generated@@137 $generated@@138)) 7))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@96 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@100 ($generated@@96 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@96 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Bool) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@6 ($generated@@90 $generated@@91 $generated@@92 $generated@@2 ($generated@@93 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))  (=> (and (or (not (= $generated@@147 $generated@@143)) (not true)) ($generated@@6 ($generated@@44 $generated@@2 ($generated@@94 $generated@@92 $generated@@95 ($generated@@94 $generated@@91 ($generated@@96 $generated@@92 $generated@@95) $generated@@144 $generated@@147) $generated@@145)))) $generated@@146))
 :pattern ( ($generated@@90 $generated@@91 $generated@@92 $generated@@2 ($generated@@93 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> ($generated@@55 $generated@@149 ($generated@@54 $generated@@150)) (and (= ($generated@@45 $generated@@53 ($generated@@44 $generated@@53 $generated@@149)) $generated@@149) ($generated@@52 $generated@@53 ($generated@@44 $generated@@53 $generated@@149) ($generated@@54 $generated@@150))))
 :pattern ( ($generated@@55 $generated@@149 ($generated@@54 $generated@@150)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@70 $generated@@151 $generated@@152) (forall (($generated@@153 T@U) ) (! (= ($generated@@18 $generated@@151 $generated@@153) ($generated@@18 $generated@@152 $generated@@153))
 :pattern ( ($generated@@18 $generated@@151 $generated@@153))
 :pattern ( ($generated@@18 $generated@@152 $generated@@153))
)))
 :pattern ( ($generated@@70 $generated@@151 $generated@@152))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 38) (let (($generated@@179  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@180 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@180 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@55 $generated@@181 $generated@@154) ($generated@@59 $generated@@181 $generated@@154 $generated@@155))) ($generated@@18 $generated@@180 $generated@@181))
 :pattern ( ($generated@@18 $generated@@180 $generated@@181))
)))))
(let (($generated@@182  (=> (and (not (and (and ($generated@@52 $generated@@53 $generated@@156 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@156 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@55 $generated@@157 $generated@@154) ($generated@@59 $generated@@157 $generated@@154 $generated@@155)))) (= (ControlFlow 0 4) 2)) $generated@@179)))
(let (($generated@@183  (=> (and (and (and ($generated@@52 $generated@@53 $generated@@156 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@156 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@55 $generated@@157 $generated@@154) ($generated@@59 $generated@@157 $generated@@154 $generated@@155))) (= (ControlFlow 0 3) 2)) $generated@@179)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 5) (- 0 6)) (forall (($generated@@185 T@U) ($generated@@186 T@U) )  (=> (and (and ($generated@@52 $generated@@53 $generated@@185 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@185 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@186 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@186 ($generated@@54 $generated@@154) $generated@@155))) ($generated@@48 $generated@@185 $generated@@186)))) (=> (forall (($generated@@187 T@U) ($generated@@188 T@U) )  (=> (and (and ($generated@@52 $generated@@53 $generated@@187 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@187 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@188 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@188 ($generated@@54 $generated@@154) $generated@@155))) ($generated@@48 $generated@@187 $generated@@188))) (and (=> (= (ControlFlow 0 5) 3) $generated@@183) (=> (= (ControlFlow 0 5) 4) $generated@@182))))))
(let (($generated@@189  (=> (and (not (and (and ($generated@@52 $generated@@53 $generated@@158 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@158 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@159 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@159 ($generated@@54 $generated@@154) $generated@@155)))) (= (ControlFlow 0 8) 5)) $generated@@184)))
(let (($generated@@190  (=> (and (and (and ($generated@@52 $generated@@53 $generated@@158 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@158 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@159 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@159 ($generated@@54 $generated@@154) $generated@@155))) (= (ControlFlow 0 7) 5)) $generated@@184)))
(let (($generated@@191  (and (=> (= (ControlFlow 0 9) (- 0 10)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@192 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@192 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@193 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@193 ($generated@@54 $generated@@154) $generated@@155))) ($generated@@70 ($generated@@29 $generated@@192 $generated@@193) $generated@@193))
 :pattern ( ($generated@@29 $generated@@192 $generated@@193))
))) (=> (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@194 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@194 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@195 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@195 ($generated@@54 $generated@@154) $generated@@155))) ($generated@@70 ($generated@@29 $generated@@194 $generated@@195) $generated@@195))
 :pattern ( ($generated@@29 $generated@@194 $generated@@195))
)) (and (=> (= (ControlFlow 0 9) 7) $generated@@190) (=> (= (ControlFlow 0 9) 8) $generated@@189))))))
(let (($generated@@196  (=> (and (not (and (and ($generated@@52 $generated@@53 $generated@@160 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@160 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@161 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@161 ($generated@@54 $generated@@154) $generated@@155)))) (= (ControlFlow 0 12) 9)) $generated@@191)))
(let (($generated@@197  (=> (and (and (and ($generated@@52 $generated@@53 $generated@@160 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@160 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@161 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@161 ($generated@@54 $generated@@154) $generated@@155))) (= (ControlFlow 0 11) 9)) $generated@@191)))
(let (($generated@@198  (and (=> (= (ControlFlow 0 13) (- 0 14)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@199 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@199 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@200 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@200 ($generated@@54 $generated@@154) $generated@@155))) ($generated@@70 ($generated@@25 $generated@@199 $generated@@200) $generated@@200))
 :pattern ( ($generated@@25 $generated@@199 $generated@@200))
))) (=> (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@201 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@201 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@202 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@202 ($generated@@54 $generated@@154) $generated@@155))) ($generated@@70 ($generated@@25 $generated@@201 $generated@@202) $generated@@202))
 :pattern ( ($generated@@25 $generated@@201 $generated@@202))
)) (and (=> (= (ControlFlow 0 13) 11) $generated@@197) (=> (= (ControlFlow 0 13) 12) $generated@@196))))))
(let (($generated@@203  (=> (and (not (and (and ($generated@@52 $generated@@53 $generated@@162 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@162 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@163 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@163 ($generated@@54 $generated@@154) $generated@@155)))) (= (ControlFlow 0 16) 13)) $generated@@198)))
(let (($generated@@204  (=> (and (and (and ($generated@@52 $generated@@53 $generated@@162 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@162 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@163 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@163 ($generated@@54 $generated@@154) $generated@@155))) (= (ControlFlow 0 15) 13)) $generated@@198)))
(let (($generated@@205  (and (=> (= (ControlFlow 0 17) (- 0 18)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@206 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@206 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@207 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@207 ($generated@@54 $generated@@154) $generated@@155))) ($generated@@70 ($generated@@17 $generated@@206 $generated@@207) $generated@@207))
 :pattern ( ($generated@@17 $generated@@206 $generated@@207))
))) (=> (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@208 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@208 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@209 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@209 ($generated@@54 $generated@@154) $generated@@155))) ($generated@@70 ($generated@@17 $generated@@208 $generated@@209) $generated@@209))
 :pattern ( ($generated@@17 $generated@@208 $generated@@209))
)) (and (=> (= (ControlFlow 0 17) 15) $generated@@204) (=> (= (ControlFlow 0 17) 16) $generated@@203))))))
(let (($generated@@210  (=> (and (not (and (and ($generated@@52 $generated@@53 $generated@@164 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@164 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@165 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@165 ($generated@@54 $generated@@154) $generated@@155)))) (= (ControlFlow 0 20) 17)) $generated@@205)))
(let (($generated@@211  (=> (and (and (and ($generated@@52 $generated@@53 $generated@@164 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@164 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@165 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@165 ($generated@@54 $generated@@154) $generated@@155))) (= (ControlFlow 0 19) 17)) $generated@@205)))
(let (($generated@@212  (and (=> (= (ControlFlow 0 21) (- 0 22)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@213 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@213 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@214 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@214 ($generated@@54 $generated@@154) $generated@@155))) ($generated@@40 $generated@@214 $generated@@213))
 :pattern ( ($generated@@40 $generated@@214 $generated@@213))
))) (=> (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@215 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@215 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@216 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@216 ($generated@@54 $generated@@154) $generated@@155))) ($generated@@40 $generated@@216 $generated@@215))
 :pattern ( ($generated@@40 $generated@@216 $generated@@215))
)) (and (=> (= (ControlFlow 0 21) 19) $generated@@211) (=> (= (ControlFlow 0 21) 20) $generated@@210))))))
(let (($generated@@217  (=> (and (not (and (and ($generated@@52 $generated@@53 $generated@@166 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@166 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@167 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@167 ($generated@@54 $generated@@154) $generated@@155)))) (= (ControlFlow 0 24) 21)) $generated@@212)))
(let (($generated@@218  (=> (and (and (and ($generated@@52 $generated@@53 $generated@@166 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@166 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@167 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@167 ($generated@@54 $generated@@154) $generated@@155))) (= (ControlFlow 0 23) 21)) $generated@@212)))
(let (($generated@@219  (and (=> (= (ControlFlow 0 25) (- 0 26)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@220 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@220 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@221 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@221 ($generated@@54 $generated@@154) $generated@@155))) (and ($generated@@40 $generated@@221 $generated@@220) (not ($generated@@40 $generated@@220 $generated@@221))))
 :pattern ( ($generated@@40 $generated@@221 $generated@@220))
))) (=> (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@222 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@222 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@223 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@223 ($generated@@54 $generated@@154) $generated@@155))) (and ($generated@@40 $generated@@223 $generated@@222) (not ($generated@@40 $generated@@222 $generated@@223))))
 :pattern ( ($generated@@40 $generated@@223 $generated@@222))
)) (and (=> (= (ControlFlow 0 25) 23) $generated@@218) (=> (= (ControlFlow 0 25) 24) $generated@@217))))))
(let (($generated@@224  (=> (and (not (and (and ($generated@@52 $generated@@53 $generated@@168 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@168 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@169 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@169 ($generated@@54 $generated@@154) $generated@@155)))) (= (ControlFlow 0 28) 25)) $generated@@219)))
(let (($generated@@225  (=> (and (and (and ($generated@@52 $generated@@53 $generated@@168 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@168 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@169 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@169 ($generated@@54 $generated@@154) $generated@@155))) (= (ControlFlow 0 27) 25)) $generated@@219)))
(let (($generated@@226  (and (=> (= (ControlFlow 0 29) (- 0 30)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@227 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@227 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@228 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@228 ($generated@@54 $generated@@154) $generated@@155))) (and ($generated@@40 $generated@@227 $generated@@228) (not ($generated@@40 $generated@@228 $generated@@227))))
 :pattern ( ($generated@@40 $generated@@227 $generated@@228))
))) (=> (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@229 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@229 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@230 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@230 ($generated@@54 $generated@@154) $generated@@155))) (and ($generated@@40 $generated@@229 $generated@@230) (not ($generated@@40 $generated@@230 $generated@@229))))
 :pattern ( ($generated@@40 $generated@@229 $generated@@230))
)) (and (=> (= (ControlFlow 0 29) 27) $generated@@225) (=> (= (ControlFlow 0 29) 28) $generated@@224))))))
(let (($generated@@231  (=> (and (not (and (and ($generated@@52 $generated@@53 $generated@@170 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@170 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@171 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@171 ($generated@@54 $generated@@154) $generated@@155)))) (= (ControlFlow 0 32) 29)) $generated@@226)))
(let (($generated@@232  (=> (and (and (and ($generated@@52 $generated@@53 $generated@@170 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@170 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@171 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@171 ($generated@@54 $generated@@154) $generated@@155))) (= (ControlFlow 0 31) 29)) $generated@@226)))
(let (($generated@@233  (and (=> (= (ControlFlow 0 33) (- 0 34)) (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@234 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@234 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@235 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@235 ($generated@@54 $generated@@154) $generated@@155))) ($generated@@40 $generated@@234 $generated@@235))
 :pattern ( ($generated@@40 $generated@@234 $generated@@235))
))) (=> (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@53 $generated@@236 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@236 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@237 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@237 ($generated@@54 $generated@@154) $generated@@155))) ($generated@@40 $generated@@236 $generated@@237))
 :pattern ( ($generated@@40 $generated@@236 $generated@@237))
)) (and (=> (= (ControlFlow 0 33) 31) $generated@@232) (=> (= (ControlFlow 0 33) 32) $generated@@231))))))
(let (($generated@@238  (=> (and (not (and (and ($generated@@52 $generated@@53 $generated@@172 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@172 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@173 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@173 ($generated@@54 $generated@@154) $generated@@155)))) (= (ControlFlow 0 36) 33)) $generated@@233)))
(let (($generated@@239  (=> (and (and (and ($generated@@52 $generated@@53 $generated@@172 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@172 ($generated@@54 $generated@@154) $generated@@155)) (and ($generated@@52 $generated@@53 $generated@@173 ($generated@@54 $generated@@154)) ($generated@@60 $generated@@53 $generated@@173 ($generated@@54 $generated@@154) $generated@@155))) (= (ControlFlow 0 35) 33)) $generated@@233)))
(let (($generated@@240  (=> (= $generated@@174 ($generated@@93 $generated@@175 $generated@@155 $generated@@0 false)) (and (=> (= (ControlFlow 0 37) 35) $generated@@239) (=> (= (ControlFlow 0 37) 36) $generated@@238)))))
(let (($generated@@241  (=> (and (and ($generated@@176 $generated@@155) ($generated@@177 $generated@@155)) (and (= 0 $generated@@178) (= (ControlFlow 0 38) 37))) $generated@@240)))
$generated@@241))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 33) (- 34))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 29) (- 30))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 17) (- 18))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 13) (- 14))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
